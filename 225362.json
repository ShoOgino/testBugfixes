{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#setDiscountOverlaps(boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#setDiscountOverlaps(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Determines whether overlap tokens (Tokens with 0 position increment) are \n   *  ignored when computing norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms. */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with 0 position increment) are \n   *  ignored when computing norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms. */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"035bfd1088cdad8e71e315033daf330d0cd95923","date":1348092980,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#setDiscountOverlaps(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#setDiscountOverlaps(boolean).mjava","sourceNew":"  /** Sets whether overlap tokens (Tokens with 0 position increment) are \n   *  ignored when computing norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms. */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","sourceOld":"  /** Determines whether overlap tokens (Tokens with 0 position increment) are \n   *  ignored when computing norm.  By default this is true, meaning overlap\n   *  tokens do not count when computing norms. */\n  public void setDiscountOverlaps(boolean v) {\n    discountOverlaps = v;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"035bfd1088cdad8e71e315033daf330d0cd95923":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["035bfd1088cdad8e71e315033daf330d0cd95923"]},"commit2Childs":{"035bfd1088cdad8e71e315033daf330d0cd95923":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["035bfd1088cdad8e71e315033daf330d0cd95923"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}