{"path":"solr/core/src/test/org/apache/solr/util/DOMUtilTest#assertTypeAndValue(NamedList[Object],String,Object).mjava","commits":[{"id":"e6a2315ba749856e5787b2ad962fa124bc3ed121","date":1334194349,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/DOMUtilTest#assertTypeAndValue(NamedList[Object],String,Object).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/DOMUtilTest#assertTypeAndValue(NamedList[Object],String,Object).mjava","sourceNew":"  private void assertTypeAndValue( NamedList<Object> namedList, String key, Object value ) throws Exception {\n    Object v = namedList.get( key );\n    assertNotNull( v );\n    assertEquals( key, v.getClass().getSimpleName() );\n    assertEquals( value, v );\n    namedList.remove( key );\n  }\n\n","sourceOld":"  private void assertTypeAndValue( NamedList<Object> namedList, String key, Object value ) throws Exception {\n    Object v = namedList.get( key );\n    assertNotNull( v );\n    assertEquals( key, v.getClass().getSimpleName() );\n    assertEquals( value, v );\n    namedList.remove( key );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/DOMUtilTest#assertTypeAndValue(NamedList[Object],String,Object).mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DOMUtilTest#assertTypeAndValue(NamedList[Object],String,Object).mjava","sourceNew":"  private void assertTypeAndValue( NamedList<Object> namedList, String key, Object value ) {\n    Object v = namedList.get( key );\n    assertNotNull( v );\n    assertEquals( key, v.getClass().getSimpleName() );\n    assertEquals( value, v );\n    namedList.remove( key );\n  }\n\n","sourceOld":"  private void assertTypeAndValue( NamedList<Object> namedList, String key, Object value ) throws Exception {\n    Object v = namedList.get( key );\n    assertNotNull( v );\n    assertEquals( key, v.getClass().getSimpleName() );\n    assertEquals( value, v );\n    namedList.remove( key );\n  }\n\n","bugFix":["634b2cad3477b478f73029f8f5a8d0b5069942d4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/DOMUtilTest#assertTypeAndValue(NamedList[Object],String,Object).mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DOMUtilTest#assertTypeAndValue(NamedList[Object],String,Object).mjava","sourceNew":"  private void assertTypeAndValue( NamedList<Object> namedList, String key, Object value ) {\n    Object v = namedList.get( key );\n    assertNotNull( v );\n    assertEquals( key, v.getClass().getSimpleName() );\n    assertEquals( value, v );\n    namedList.remove( key );\n  }\n\n","sourceOld":"  private void assertTypeAndValue( NamedList<Object> namedList, String key, Object value ) throws Exception {\n    Object v = namedList.get( key );\n    assertNotNull( v );\n    assertEquals( key, v.getClass().getSimpleName() );\n    assertEquals( value, v );\n    namedList.remove( key );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23a18981fcc2648fd6e83e9e84e8fa023eb0484b","date":1602334330,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/DOMUtilTest#assertTypeAndValue(NamedList[Object],String,Object).mjava","pathOld":"solr/core/src/test/org/apache/solr/util/DOMUtilTest#assertTypeAndValue(NamedList[Object],String,Object).mjava","sourceNew":"  private void assertTypeAndValue( NamedList<Object> namedList, String key, Object value ) {\n    Object v = namedList.get( key );\n    assertNotNull( v );\n    assertEquals( key, v.getClass().getSimpleName() );\n    assertEquals( value, v );\n    namedList.remove( key );\n  }\n\n","sourceOld":"  private void assertTypeAndValue( NamedList<Object> namedList, String key, Object value ) {\n    Object v = namedList.get( key );\n    assertNotNull( v );\n    assertEquals( key, v.getClass().getSimpleName() );\n    assertEquals( value, v );\n    namedList.remove( key );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"23a18981fcc2648fd6e83e9e84e8fa023eb0484b":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"e6a2315ba749856e5787b2ad962fa124bc3ed121":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["e6a2315ba749856e5787b2ad962fa124bc3ed121","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["e6a2315ba749856e5787b2ad962fa124bc3ed121"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23a18981fcc2648fd6e83e9e84e8fa023eb0484b"]},"commit2Childs":{"23a18981fcc2648fd6e83e9e84e8fa023eb0484b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6a2315ba749856e5787b2ad962fa124bc3ed121":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e6a2315ba749856e5787b2ad962fa124bc3ed121"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["23a18981fcc2648fd6e83e9e84e8fa023eb0484b","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}