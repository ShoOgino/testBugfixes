{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#getJson(String,boolean).mjava","commits":[{"id":"e12a337a9a98e388c3a5bca9c8256d21c13781f9","date":1492093671,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#getJson(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public Map<String, Object> getJson(String path, boolean retryOnConnLoss) throws KeeperException, InterruptedException {\n    byte[] bytes = getData(path, null, null, retryOnConnLoss);\n    if (bytes != null && bytes.length > 0) {\n      return (Map<String, Object>) Utils.fromJSON(bytes);\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"961a14d298363c1efe0c3135a9f8b762dafd0d99","date":1496035169,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#getJson(String,boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#getJson(String,boolean).mjava","sourceNew":"  public Map<String, Object> getJson(String path, boolean retryOnConnLoss) throws KeeperException, InterruptedException {\n    byte[] bytes = null;\n    try {\n      bytes = getData(path, null, null, retryOnConnLoss);\n    } catch (KeeperException.NoNodeException e) {\n      return null;\n    }\n    if (bytes != null && bytes.length > 0) {\n      return (Map<String, Object>) Utils.fromJSON(bytes);\n    }\n    return null;\n  }\n\n","sourceOld":"  public Map<String, Object> getJson(String path, boolean retryOnConnLoss) throws KeeperException, InterruptedException {\n    byte[] bytes = getData(path, null, null, retryOnConnLoss);\n    if (bytes != null && bytes.length > 0) {\n      return (Map<String, Object>) Utils.fromJSON(bytes);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#getJson(String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public Map<String, Object> getJson(String path, boolean retryOnConnLoss) throws KeeperException, InterruptedException {\n    byte[] bytes = null;\n    try {\n      bytes = getData(path, null, null, retryOnConnLoss);\n    } catch (KeeperException.NoNodeException e) {\n      return null;\n    }\n    if (bytes != null && bytes.length > 0) {\n      return (Map<String, Object>) Utils.fromJSON(bytes);\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4328dc3f7309b4c82d12f9e9420a487a1b9945dd","date":1496650286,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#getJson(String,boolean).mjava","sourceNew":null,"sourceOld":"  public Map<String, Object> getJson(String path, boolean retryOnConnLoss) throws KeeperException, InterruptedException {\n    byte[] bytes = null;\n    try {\n      bytes = getData(path, null, null, retryOnConnLoss);\n    } catch (KeeperException.NoNodeException e) {\n      return null;\n    }\n    if (bytes != null && bytes.length > 0) {\n      return (Map<String, Object>) Utils.fromJSON(bytes);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee4f83c392cabe2a9950dce0c3b8600e5634129b","date":1498030441,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient#getJson(String,boolean).mjava","sourceNew":null,"sourceOld":"  public Map<String, Object> getJson(String path, boolean retryOnConnLoss) throws KeeperException, InterruptedException {\n    byte[] bytes = null;\n    try {\n      bytes = getData(path, null, null, retryOnConnLoss);\n    } catch (KeeperException.NoNodeException e) {\n      return null;\n    }\n    if (bytes != null && bytes.length > 0) {\n      return (Map<String, Object>) Utils.fromJSON(bytes);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee4f83c392cabe2a9950dce0c3b8600e5634129b":["961a14d298363c1efe0c3135a9f8b762dafd0d99"],"961a14d298363c1efe0c3135a9f8b762dafd0d99":["e12a337a9a98e388c3a5bca9c8256d21c13781f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e12a337a9a98e388c3a5bca9c8256d21c13781f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4328dc3f7309b4c82d12f9e9420a487a1b9945dd":["a513b6a92751e54c76fb5447948c9e7d437163a7"]},"commit2Childs":{"ee4f83c392cabe2a9950dce0c3b8600e5634129b":[],"961a14d298363c1efe0c3135a9f8b762dafd0d99":["ee4f83c392cabe2a9950dce0c3b8600e5634129b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a513b6a92751e54c76fb5447948c9e7d437163a7","e12a337a9a98e388c3a5bca9c8256d21c13781f9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["4328dc3f7309b4c82d12f9e9420a487a1b9945dd"],"e12a337a9a98e388c3a5bca9c8256d21c13781f9":["961a14d298363c1efe0c3135a9f8b762dafd0d99"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"4328dc3f7309b4c82d12f9e9420a487a1b9945dd":[]},"heads":["ee4f83c392cabe2a9950dce0c3b8600e5634129b","cd5edd1f2b162a5cfa08efd17851a07373a96817","4328dc3f7309b4c82d12f9e9420a487a1b9945dd"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}