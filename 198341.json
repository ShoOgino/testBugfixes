{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","sourceNew":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random, r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 false);\n\n    if (td != null) {\n      while (td.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random, r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 false);\n\n    if (td != null) {\n      while (td.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08557cdb6c60ac7b88a9342c983a20cd236e74f","date":1330954480,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","sourceNew":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random, r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 false);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random, r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 false);\n\n    if (td != null) {\n      while (td.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","sourceNew":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random, r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 false);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random, r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 false);\n\n    if (td != null) {\n      while (td.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","sourceNew":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random(), r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 false);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random, r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 false);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","sourceNew":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random(), r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 0);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random(), r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 false);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","bugFix":["872cff1d3a554e0cd64014cd97f88d3002b0f491"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","sourceNew":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random(), r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 0);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random(), r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 false);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","sourceNew":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random(), r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 0);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random(), r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 false);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","sourceNew":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = TestUtil.docs(random(), r,\n        t.field(), new BytesRef(t.text()),\n        MultiFields.getLiveDocs(r),\n        null,\n        0);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = _TestUtil.docs(random(), r,\n                                 t.field(), new BytesRef(t.text()),\n                                 MultiFields.getLiveDocs(r),\n                                 null,\n                                 0);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","sourceNew":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    PostingsEnum td = TestUtil.docs(random(), r,\n        t.field(), new BytesRef(t.text()),\n        MultiFields.getLiveDocs(r),\n        null,\n        0);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    DocsEnum td = TestUtil.docs(random(), r,\n        t.field(), new BytesRef(t.text()),\n        MultiFields.getLiveDocs(r),\n        null,\n        0);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","sourceNew":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    PostingsEnum td = TestUtil.docs(random(), r,\n        t.field(), new BytesRef(t.text()),\n        null,\n        0);\n\n    if (td != null) {\n      final Bits liveDocs = MultiFields.getLiveDocs(r);\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        if (liveDocs == null || liveDocs.get(td.docID())) {\n          count++;\n        }\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    PostingsEnum td = TestUtil.docs(random(), r,\n        t.field(), new BytesRef(t.text()),\n        MultiFields.getLiveDocs(r),\n        null,\n        0);\n\n    if (td != null) {\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        count++;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#count(Term,IndexReader).mjava","sourceNew":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    PostingsEnum td = TestUtil.docs(random(), r,\n        t.field(), new BytesRef(t.text()),\n        null,\n        0);\n\n    if (td != null) {\n      final Bits liveDocs = MultiBits.getLiveDocs(r);\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        if (liveDocs == null || liveDocs.get(td.docID())) {\n          count++;\n        }\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  public static int count(Term t, IndexReader r) throws IOException {\n    int count = 0;\n    PostingsEnum td = TestUtil.docs(random(), r,\n        t.field(), new BytesRef(t.text()),\n        null,\n        0);\n\n    if (td != null) {\n      final Bits liveDocs = MultiFields.getLiveDocs(r);\n      while (td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n        td.docID();\n        if (liveDocs == null || liveDocs.get(td.docID())) {\n          count++;\n        }\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"6613659748fe4411a7dcf85266e55db1f95f7315":["02331260bb246364779cb6f04919ca47900d01bb"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"51f5280f31484820499077f41fcdfe92d527d9dc":["6613659748fe4411a7dcf85266e55db1f95f7315"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["51f5280f31484820499077f41fcdfe92d527d9dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","02331260bb246364779cb6f04919ca47900d01bb"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","02331260bb246364779cb6f04919ca47900d01bb"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"02331260bb246364779cb6f04919ca47900d01bb":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"6613659748fe4411a7dcf85266e55db1f95f7315":["51f5280f31484820499077f41fcdfe92d527d9dc"],"51f5280f31484820499077f41fcdfe92d527d9dc":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","02331260bb246364779cb6f04919ca47900d01bb"],"02331260bb246364779cb6f04919ca47900d01bb":["6613659748fe4411a7dcf85266e55db1f95f7315","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}