{"path":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","commits":[{"id":"76fe9c497e8a6dfe48a1c3d048a6778db23b5a0b","date":1439091488,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","pathOld":"/dev/null","sourceNew":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        // SolrCore.verbose(\"updateDocument\",updateTerm,luceneDocument,writer);\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      // SolrCore.verbose(\"updateDocument\",updateTerm,\"DONE\");\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n    } finally {\n      iw.decref();\n    }\n\n    // Add to the transaction log *after* successfully adding to the\n    // index, if there was no error.\n    // This ordering ensures that if we log it, it's definitely been\n    // added to the the index.\n    // This also ensures that if a commit sneaks in-between, that we\n    // know everything in a particular\n    // log version was definitely committed.\n    if (ulog != null) ulog.add(cmd);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1adea4accc297f58fd9d8de3c820fd576eb0d396"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1a1888dae6d3c1d082a5aa627824792e4d694281","date":1439156801,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","sourceNew":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        // SolrCore.verbose(\"updateDocument\",updateTerm,luceneDocument,writer);\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      // SolrCore.verbose(\"updateDocument\",updateTerm,\"DONE\");\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n    } finally {\n      iw.decref();\n    }\n\n    // Add to the transaction log *after* successfully adding to the\n    // index, if there was no error.\n    // This ordering ensures that if we log it, it's definitely been\n    // added to the the index.\n    // This also ensures that if a commit sneaks in-between, that we\n    // know everything in a particular\n    // log version was definitely committed.\n    synchronized (solrCoreState.getUpdateLock()) {\n      if (ulog != null) ulog.add(cmd);\n    }\n  }\n\n","sourceOld":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        // SolrCore.verbose(\"updateDocument\",updateTerm,luceneDocument,writer);\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      // SolrCore.verbose(\"updateDocument\",updateTerm,\"DONE\");\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n    } finally {\n      iw.decref();\n    }\n\n    // Add to the transaction log *after* successfully adding to the\n    // index, if there was no error.\n    // This ordering ensures that if we log it, it's definitely been\n    // added to the the index.\n    // This also ensures that if a commit sneaks in-between, that we\n    // know everything in a particular\n    // log version was definitely committed.\n    if (ulog != null) ulog.add(cmd);\n  }\n\n","bugFix":null,"bugIntro":["1adea4accc297f58fd9d8de3c820fd576eb0d396"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1adea4accc297f58fd9d8de3c820fd576eb0d396","date":1441292844,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","sourceNew":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        // SolrCore.verbose(\"updateDocument\",updateTerm,luceneDocument,writer);\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      // SolrCore.verbose(\"updateDocument\",updateTerm,\"DONE\");\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n\n","sourceOld":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        // SolrCore.verbose(\"updateDocument\",updateTerm,luceneDocument,writer);\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      // SolrCore.verbose(\"updateDocument\",updateTerm,\"DONE\");\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n    } finally {\n      iw.decref();\n    }\n\n    // Add to the transaction log *after* successfully adding to the\n    // index, if there was no error.\n    // This ordering ensures that if we log it, it's definitely been\n    // added to the the index.\n    // This also ensures that if a commit sneaks in-between, that we\n    // know everything in a particular\n    // log version was definitely committed.\n    synchronized (solrCoreState.getUpdateLock()) {\n      if (ulog != null) ulog.add(cmd);\n    }\n  }\n\n","bugFix":["1a1888dae6d3c1d082a5aa627824792e4d694281","76fe9c497e8a6dfe48a1c3d048a6778db23b5a0b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","sourceNew":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        updateDocOrDocValues(cmd, writer, updateTerm);\n      }\n      // SolrCore.verbose(\"updateDocument\",updateTerm,\"DONE\");\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n\n","sourceOld":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        // SolrCore.verbose(\"updateDocument\",updateTerm,luceneDocument,writer);\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      // SolrCore.verbose(\"updateDocument\",updateTerm,\"DONE\");\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","sourceNew":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        updateDocOrDocValues(cmd, writer, updateTerm);\n      }\n      // SolrCore.verbose(\"updateDocument\",updateTerm,\"DONE\");\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n\n","sourceOld":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        // SolrCore.verbose(\"updateDocument\",updateTerm,luceneDocument,writer);\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      // SolrCore.verbose(\"updateDocument\",updateTerm,\"DONE\");\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407b2e02aedce6b9118323ef204a08acfd83add7","date":1487217081,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","sourceNew":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = getIdTerm(cmd);\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer, updateTerm);\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n\n","sourceOld":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        updateDocOrDocValues(cmd, writer, updateTerm);\n      }\n      // SolrCore.verbose(\"updateDocument\",updateTerm,\"DONE\");\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5ce7c704ca874aa623a99f2669737b52ec71cfc","date":1528728510,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","sourceNew":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer);\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n  }\n\n","sourceOld":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = getIdTerm(cmd);\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer, updateTerm);\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","sourceNew":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer);\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n  }\n\n","sourceOld":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = getIdTerm(cmd);\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer, updateTerm);\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#doNormalUpdate(AddUpdateCommand).mjava","sourceNew":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer);\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n  }\n\n","sourceOld":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = getIdTerm(cmd);\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      // this is only used by the dedup update processor\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer, updateTerm);\n\n      if (del) { // ensure id remains unique\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      // Add to the transaction log *after* successfully adding to the\n      // index, if there was no error.\n      // This ordering ensures that if we log it, it's definitely been\n      // added to the the index.\n      // This also ensures that if a commit sneaks in-between, that we\n      // know everything in a particular\n      // log version was definitely committed.\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["1adea4accc297f58fd9d8de3c820fd576eb0d396"],"1adea4accc297f58fd9d8de3c820fd576eb0d396":["1a1888dae6d3c1d082a5aa627824792e4d694281"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["407b2e02aedce6b9118323ef204a08acfd83add7","c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["1adea4accc297f58fd9d8de3c820fd576eb0d396","415bbbe7da8065dd3c477bdc3c703c6425622998"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"76fe9c497e8a6dfe48a1c3d048a6778db23b5a0b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["407b2e02aedce6b9118323ef204a08acfd83add7"],"1a1888dae6d3c1d082a5aa627824792e4d694281":["76fe9c497e8a6dfe48a1c3d048a6778db23b5a0b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"407b2e02aedce6b9118323ef204a08acfd83add7":["415bbbe7da8065dd3c477bdc3c703c6425622998"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["407b2e02aedce6b9118323ef204a08acfd83add7","c5ce7c704ca874aa623a99f2669737b52ec71cfc"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["598b5d23aa7c9732bf473c21a9cd309c44599394","407b2e02aedce6b9118323ef204a08acfd83add7"],"1adea4accc297f58fd9d8de3c820fd576eb0d396":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["76fe9c497e8a6dfe48a1c3d048a6778db23b5a0b"],"76fe9c497e8a6dfe48a1c3d048a6778db23b5a0b":["1a1888dae6d3c1d082a5aa627824792e4d694281"],"1a1888dae6d3c1d082a5aa627824792e4d694281":["1adea4accc297f58fd9d8de3c820fd576eb0d396"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"407b2e02aedce6b9118323ef204a08acfd83add7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","c5ce7c704ca874aa623a99f2669737b52ec71cfc","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}