{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = newDirectory(random);\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = newDirectory(random);\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = newDirectory(random);\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = newDirectory(random);\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world!\n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world!\n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world!\n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75ec8c9aaa10ac00b30fd4c2465409770c838f7b","date":1323020115,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":null,"sourceOld":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":null,"sourceOld":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":null,"sourceOld":"    public void testLock() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      try {\n        IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      } catch (LockReleaseFailedException lrfe) {\n        writer.close();\n      }\n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["f2c5f0cb44df114db4228c8f77861714b5cabaea","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["1f653cfcf159baeaafe5d01682a911e95bba4012","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","1f653cfcf159baeaafe5d01682a911e95bba4012"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"a3776dccca01c11e7046323cfad46a3b4a471233":["1f653cfcf159baeaafe5d01682a911e95bba4012","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["f2c5f0cb44df114db4228c8f77861714b5cabaea","75ec8c9aaa10ac00b30fd4c2465409770c838f7b"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["75ec8c9aaa10ac00b30fd4c2465409770c838f7b","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}