{"path":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.ByteSequencesReader#read().mjava","commits":[{"id":"7bf07f4ebadc7539de83a531e64678350d78ca26","date":1322776167,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.ByteSequencesReader#read().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Reads the next entry and returns it if successful.\n     * \n     * @see #read(BytesRef)\n     * \n     * @return Returns <code>null</code> if EOF occurred before the next entry\n     * could be read.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public byte[] read() throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return null;\n      }\n\n      assert length >= 0 : \"Sanity: sequence length < 0: \" + length;\n      byte [] result = new byte [length];\n      is.readFully(result);\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.ByteSequencesReader#read().mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.ByteSequencesReader#read().mjava","sourceNew":"    /**\n     * Reads the next entry and returns it if successful.\n     * \n     * @see #read(BytesRef)\n     * \n     * @return Returns <code>null</code> if EOF occurred before the next entry\n     * could be read.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public byte[] read() throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return null;\n      }\n\n      assert length >= 0 : \"Sanity: sequence length < 0: \" + length;\n      byte [] result = new byte [length];\n      is.readFully(result);\n      return result;\n    }\n\n","sourceOld":"    /**\n     * Reads the next entry and returns it if successful.\n     * \n     * @see #read(BytesRef)\n     * \n     * @return Returns <code>null</code> if EOF occurred before the next entry\n     * could be read.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public byte[] read() throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return null;\n      }\n\n      assert length >= 0 : \"Sanity: sequence length < 0: \" + length;\n      byte [] result = new byte [length];\n      is.readFully(result);\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"7bf07f4ebadc7539de83a531e64678350d78ca26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7bf07f4ebadc7539de83a531e64678350d78ca26":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}