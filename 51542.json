{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#newFieldType(String,String,Map[String,#]).mjava","commits":[{"id":"bdf16ebe435fc9daea90a73b8683ff001c6d3523","date":1409931231,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#newFieldType(String,String,Map[String,#]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a FieldType if the given typeName does not already\n   * exist in this schema. The resulting FieldType can be used in a call\n   * to {@link #addFieldType(FieldType)}.\n   *\n   * @param typeName the name of the type to add\n   * @param className the name of the FieldType class\n   * @param options the options to use when creating the FieldType\n   * @return The created FieldType\n   * @see #addFieldType(FieldType)\n   */\n  public FieldType newFieldType(String typeName, String className, Map<String,?> options) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a54d9ede1b7f2f026639186eb07f3f314d87d9a","date":1412176848,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#newFieldType(String,String,Map[String,#]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#newFieldType(String,String,Map[String,#]).mjava","sourceNew":"  /**\n   * Returns a FieldType if the given typeName does not already\n   * exist in this schema. The resulting FieldType can be used in a call\n   * to {@link #addFieldTypes(java.util.List, boolean)}.\n   *\n   * @param typeName the name of the type to add\n   * @param className the name of the FieldType class\n   * @param options the options to use when creating the FieldType\n   * @return The created FieldType\n   * @see #addFieldTypes(java.util.List, boolean)\n   */\n  public FieldType newFieldType(String typeName, String className, Map<String,?> options) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":"  /**\n   * Returns a FieldType if the given typeName does not already\n   * exist in this schema. The resulting FieldType can be used in a call\n   * to {@link #addFieldType(FieldType)}.\n   *\n   * @param typeName the name of the type to add\n   * @param className the name of the FieldType class\n   * @param options the options to use when creating the FieldType\n   * @return The created FieldType\n   * @see #addFieldType(FieldType)\n   */\n  public FieldType newFieldType(String typeName, String className, Map<String,?> options) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#newFieldType(String,String,Map[String,#]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#newFieldType(String,String,Map[String,#]).mjava","sourceNew":"  /**\n   * Returns a FieldType if the given typeName does not already\n   * exist in this schema. The resulting FieldType can be used in a call\n   * to {@link #addFieldTypes(java.util.List, boolean)}.\n   *\n   * @param typeName the name of the type to add\n   * @param className the name of the FieldType class\n   * @param options the options to use when creating the FieldType\n   * @return The created FieldType\n   * @see #addFieldTypes(java.util.List, boolean)\n   */\n  public FieldType newFieldType(String typeName, String className, Map<String,?> options) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":"  /**\n   * Returns a FieldType if the given typeName does not already\n   * exist in this schema. The resulting FieldType can be used in a call\n   * to {@link #addFieldType(FieldType)}.\n   *\n   * @param typeName the name of the type to add\n   * @param className the name of the FieldType class\n   * @param options the options to use when creating the FieldType\n   * @return The created FieldType\n   * @see #addFieldType(FieldType)\n   */\n  public FieldType newFieldType(String typeName, String className, Map<String,?> options) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["bdf16ebe435fc9daea90a73b8683ff001c6d3523"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["bdf16ebe435fc9daea90a73b8683ff001c6d3523","4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"bdf16ebe435fc9daea90a73b8683ff001c6d3523":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bdf16ebe435fc9daea90a73b8683ff001c6d3523"],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"bdf16ebe435fc9daea90a73b8683ff001c6d3523":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}