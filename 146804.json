{"path":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactWithFilters().mjava","commits":[{"id":"b3e6e3d7e1e6a8eeca8c0d3e14e2ce425bae839b","date":1590101317,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactWithFilters().mjava","pathOld":"/dev/null","sourceNew":"  public void testMinExactWithFilters() throws Exception {\n    \n    h.getCore().withSearcher(searcher -> {\n      //Sanity Check - No Filter\n      QueryCommand cmd = createBasicQueryCommand(1, 1, \"field4_t\", \"0\");\n      assertMatchesGreaterThan(NUM_DOCS, searcher, cmd);\n      return null;\n    });\n    \n    \n    h.getCore().withSearcher(searcher -> {\n      QueryCommand cmd = createBasicQueryCommand(1, 1, \"field4_t\", \"0\");\n      Query filterQuery = new TermQuery(new Term(\"field4_t\", \"19\"));\n      cmd.setFilterList(filterQuery);\n      assertNull(searcher.getProcessedFilter(null, cmd.getFilterList()).postFilter);\n      assertMatchesEqual(1, searcher, cmd);\n      return null;\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bc84078c9bac84ac0e655b654555a809321ef41b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"72afa881b0b5c361ebd0b6d37927fe072151fbe0","date":1590107364,"type":0,"author":"Erick Erickson","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactWithFilters().mjava","pathOld":"/dev/null","sourceNew":"  public void testMinExactWithFilters() throws Exception {\n    \n    h.getCore().withSearcher(searcher -> {\n      //Sanity Check - No Filter\n      QueryCommand cmd = createBasicQueryCommand(1, 1, \"field4_t\", \"0\");\n      assertMatchesGreaterThan(NUM_DOCS, searcher, cmd);\n      return null;\n    });\n    \n    \n    h.getCore().withSearcher(searcher -> {\n      QueryCommand cmd = createBasicQueryCommand(1, 1, \"field4_t\", \"0\");\n      Query filterQuery = new TermQuery(new Term(\"field4_t\", \"19\"));\n      cmd.setFilterList(filterQuery);\n      assertNull(searcher.getProcessedFilter(null, cmd.getFilterList()).postFilter);\n      assertMatchesEqual(1, searcher, cmd);\n      return null;\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bc84078c9bac84ac0e655b654555a809321ef41b","date":1592869854,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactWithFilters().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/SolrIndexSearcherTest#testMinExactWithFilters().mjava","sourceNew":"  public void testMinExactWithFilters() throws Exception {\n    \n    h.getCore().withSearcher(searcher -> {\n      //Sanity Check - No Filter\n      QueryCommand cmd = createBasicQueryCommand(1, 1, \"field4_t\", \"0\");\n      assertMatchesGreaterThan(NUM_DOCS, searcher, cmd);\n      return null;\n    });\n    \n    \n    h.getCore().withSearcher(searcher -> {\n      QueryCommand cmd = createBasicQueryCommand(1, 1, \"field4_t\", \"0\");\n      Query filterQuery = new TermQuery(new Term(\"field4_t\", Integer.toString(NUM_DOCS - 1)));\n      cmd.setFilterList(filterQuery);\n      assertNull(searcher.getProcessedFilter(null, cmd.getFilterList()).postFilter);\n      assertMatchesEqual(1, searcher, cmd);\n      return null;\n    });\n  }\n\n","sourceOld":"  public void testMinExactWithFilters() throws Exception {\n    \n    h.getCore().withSearcher(searcher -> {\n      //Sanity Check - No Filter\n      QueryCommand cmd = createBasicQueryCommand(1, 1, \"field4_t\", \"0\");\n      assertMatchesGreaterThan(NUM_DOCS, searcher, cmd);\n      return null;\n    });\n    \n    \n    h.getCore().withSearcher(searcher -> {\n      QueryCommand cmd = createBasicQueryCommand(1, 1, \"field4_t\", \"0\");\n      Query filterQuery = new TermQuery(new Term(\"field4_t\", \"19\"));\n      cmd.setFilterList(filterQuery);\n      assertNull(searcher.getProcessedFilter(null, cmd.getFilterList()).postFilter);\n      assertMatchesEqual(1, searcher, cmd);\n      return null;\n    });\n  }\n\n","bugFix":["b3e6e3d7e1e6a8eeca8c0d3e14e2ce425bae839b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc84078c9bac84ac0e655b654555a809321ef41b":["72afa881b0b5c361ebd0b6d37927fe072151fbe0"],"b3e6e3d7e1e6a8eeca8c0d3e14e2ce425bae839b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"72afa881b0b5c361ebd0b6d37927fe072151fbe0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3e6e3d7e1e6a8eeca8c0d3e14e2ce425bae839b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bc84078c9bac84ac0e655b654555a809321ef41b"]},"commit2Childs":{"bc84078c9bac84ac0e655b654555a809321ef41b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b3e6e3d7e1e6a8eeca8c0d3e14e2ce425bae839b":["72afa881b0b5c361ebd0b6d37927fe072151fbe0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3e6e3d7e1e6a8eeca8c0d3e14e2ce425bae839b","72afa881b0b5c361ebd0b6d37927fe072151fbe0"],"72afa881b0b5c361ebd0b6d37927fe072151fbe0":["bc84078c9bac84ac0e655b654555a809321ef41b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}