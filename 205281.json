{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter#next().mjava","commits":[{"id":"7c9cc1cf78edc774cdf339bab3ae62f077929607","date":1072205195,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter#next().mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * @return  Returns the next token in the stream, or null at EOS.\n\t */\n\tpublic final Token next()\n\t\tthrows IOException {\n\t\tif ( ( token = input.next() ) == null ) {\n\t\t\treturn null;\n\t\t}\n\t\t// Check the exclusiontable.\n\t\telse if ( exclusions != null && exclusions.contains( token.termText() ) ) {\n\t\t\treturn token;\n\t\t}\n\t\telse {\n\t\t\tString s = stemmer.stem( token.termText() );\n\t\t\t// If not stemmed, dont waste the time creating a new token.\n\t\t\tif ( (s != null) && !s.equals( token.termText() ) ) {\n\t\t\t\treturn new Token( s, 0, s.length(), token.type() );\n\t\t\t}\n\t\t\treturn token;\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79a4babde9a4de13b09d3bcfdad856df5f211846","date":1079106779,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter#next().mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter#next().mjava","sourceNew":"  /**\n   * @return Returns the next token in the stream, or null at EOS.\n   */\n  public final Token next()\n      throws IOException {\n    if ((token = input.next()) == null) {\n      return null;\n    }\n    // Check the exclusiontable.\n    else if (exclusions != null && exclusions.contains(token.termText())) {\n      return token;\n    } else {\n      String s = stemmer.stem(token.termText());\n      // If not stemmed, dont waste the time creating a new token.\n      if ((s != null) && !s.equals(token.termText())) {\n        return new Token(s, 0, s.length(), token.type());\n      }\n      return token;\n    }\n  }\n\n","sourceOld":"\t/**\n\t * @return  Returns the next token in the stream, or null at EOS.\n\t */\n\tpublic final Token next()\n\t\tthrows IOException {\n\t\tif ( ( token = input.next() ) == null ) {\n\t\t\treturn null;\n\t\t}\n\t\t// Check the exclusiontable.\n\t\telse if ( exclusions != null && exclusions.contains( token.termText() ) ) {\n\t\t\treturn token;\n\t\t}\n\t\telse {\n\t\t\tString s = stemmer.stem( token.termText() );\n\t\t\t// If not stemmed, dont waste the time creating a new token.\n\t\t\tif ( (s != null) && !s.equals( token.termText() ) ) {\n\t\t\t\treturn new Token( s, 0, s.length(), token.type() );\n\t\t\t}\n\t\t\treturn token;\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"187936b21608d29c68577a4bc168a116a9cc08ff","date":1107206395,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter#next().mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter#next().mjava","sourceNew":"  /**\n   * @return Returns the next token in the stream, or null at EOS.\n   */\n  public final Token next()\n      throws IOException {\n    if ((token = input.next()) == null) {\n      return null;\n    }\n    // Check the exclusiontable.\n    else if (exclusions != null && exclusions.contains(token.termText())) {\n      return token;\n    } else {\n      String s = stemmer.stem(token.termText());\n      // If not stemmed, dont waste the time creating a new token.\n      if ((s != null) && !s.equals(token.termText())) {\n        return new Token(s, token.startOffset(), token.endOffset(), token.type());\n      }\n      return token;\n    }\n  }\n\n","sourceOld":"  /**\n   * @return Returns the next token in the stream, or null at EOS.\n   */\n  public final Token next()\n      throws IOException {\n    if ((token = input.next()) == null) {\n      return null;\n    }\n    // Check the exclusiontable.\n    else if (exclusions != null && exclusions.contains(token.termText())) {\n      return token;\n    } else {\n      String s = stemmer.stem(token.termText());\n      // If not stemmed, dont waste the time creating a new token.\n      if ((s != null) && !s.equals(token.termText())) {\n        return new Token(s, 0, s.length(), token.type());\n      }\n      return token;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter#next().mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter#next().mjava","sourceNew":"  /**\n   * @return Returns the next token in the stream, or null at EOS.\n   */\n  public final Token next()\n      throws IOException {\n    if ((token = input.next()) == null) {\n      return null;\n    }\n    // Check the exclusiontable.\n    else if (exclusions != null && exclusions.contains(token.termText())) {\n      return token;\n    } else {\n      String s = stemmer.stem(token.termText());\n      // If not stemmed, dont waste the time creating a new token.\n      if ((s != null) && !s.equals(token.termText())) {\n        return new Token(s, token.startOffset(), token.endOffset(), token.type());\n      }\n      return token;\n    }\n  }\n\n","sourceOld":"  /**\n   * @return Returns the next token in the stream, or null at EOS.\n   */\n  public final Token next()\n      throws IOException {\n    if ((token = input.next()) == null) {\n      return null;\n    }\n    // Check the exclusiontable.\n    else if (exclusions != null && exclusions.contains(token.termText())) {\n      return token;\n    } else {\n      String s = stemmer.stem(token.termText());\n      // If not stemmed, dont waste the time creating a new token.\n      if ((s != null) && !s.equals(token.termText())) {\n        return new Token(s, token.startOffset(), token.endOffset(), token.type());\n      }\n      return token;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["187936b21608d29c68577a4bc168a116a9cc08ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"79a4babde9a4de13b09d3bcfdad856df5f211846":["7c9cc1cf78edc774cdf339bab3ae62f077929607"],"7c9cc1cf78edc774cdf339bab3ae62f077929607":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"187936b21608d29c68577a4bc168a116a9cc08ff":["79a4babde9a4de13b09d3bcfdad856df5f211846"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c9cc1cf78edc774cdf339bab3ae62f077929607"],"79a4babde9a4de13b09d3bcfdad856df5f211846":["187936b21608d29c68577a4bc168a116a9cc08ff"],"7c9cc1cf78edc774cdf339bab3ae62f077929607":["79a4babde9a4de13b09d3bcfdad856df5f211846"],"187936b21608d29c68577a4bc168a116a9cc08ff":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}