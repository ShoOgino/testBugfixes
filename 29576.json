{"path":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen().mjava","commits":[{"id":"30e0912f3a3069b115cfea44ff612c44d6906386","date":1365631344,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen().mjava","pathOld":"/dev/null","sourceNew":"  void maybeThrowIOExceptionOnOpen() throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRateOnOpen) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception during open\");\n        new Throwable().printStackTrace(System.out);\n      }\n      if (randomState.nextBoolean()) {\n        throw new IOException(\"a random IOException\");\n      } else {\n        throw new FileNotFoundException(\"a random IOException\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bac2bd9d901ec1ee7111a77c8e616d745fb2a362","date":1368131212,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen().mjava","sourceNew":"  void maybeThrowIOExceptionOnOpen(String name) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRateOnOpen) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception during open file=\" + name);\n        new Throwable().printStackTrace(System.out);\n      }\n      if (randomState.nextBoolean()) {\n        throw new IOException(\"a random IOException\");\n      } else {\n        throw new FileNotFoundException(\"a random IOException\");\n      }\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOExceptionOnOpen() throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRateOnOpen) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception during open\");\n        new Throwable().printStackTrace(System.out);\n      }\n      if (randomState.nextBoolean()) {\n        throw new IOException(\"a random IOException\");\n      } else {\n        throw new FileNotFoundException(\"a random IOException\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30e0912f3a3069b115cfea44ff612c44d6906386":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bac2bd9d901ec1ee7111a77c8e616d745fb2a362":["30e0912f3a3069b115cfea44ff612c44d6906386"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bac2bd9d901ec1ee7111a77c8e616d745fb2a362"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30e0912f3a3069b115cfea44ff612c44d6906386"],"30e0912f3a3069b115cfea44ff612c44d6906386":["bac2bd9d901ec1ee7111a77c8e616d745fb2a362"],"bac2bd9d901ec1ee7111a77c8e616d745fb2a362":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}