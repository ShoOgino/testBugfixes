{"path":"src/java/org/apache/solr/handler/IndexInfoRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"ee354aca0711e1042b7c26d7fd5070117d00344c","date":1171239696,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/IndexInfoRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/IndexInfoRequestHandler#handleRequest(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) {\n\n    try {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexReader reader = searcher.getReader();\n      Collection<String> fieldNames = reader.getFieldNames(IndexReader.FieldOption.ALL);\n      Map<String,Object> fields = new HashMap<String,Object>();\n      IndexSchema schema = req.getSchema();\n      for (String fieldName : fieldNames) {\n        Map<String,String> fieldInfo = new HashMap<String,String>();\n\n        FieldType fieldType = schema.getFieldTypeNoEx(fieldName);\n        if( fieldType != null ) {\n          fieldInfo.put(\"type\", fieldType.getTypeName());\n        }\n        else {\n          // This can happen if you change the schema\n          fieldInfo.put(\"type\", null ); // \"[unknown]\"? nothing?\n        }\n\n        fields.put(fieldName, fieldInfo);\n      }\n      rsp.add(\"fields\", fields);\n\n      Map<String,Number> indexInfo = new HashMap<String,Number>();\n      indexInfo.put(\"numDocs\", reader.numDocs());\n      indexInfo.put(\"maxDoc\", reader.maxDoc());\n      indexInfo.put(\"version\", reader.getVersion());\n      // indexInfo.put(\"age\", );  // computed from SolrIndexSearcher.openedAt?\n\n      rsp.add(\"index\", indexInfo);\n      \n    } catch (SolrException e) {\n      rsp.setException(e);\n      return;\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log, e);\n      rsp.setException(e);\n      return;\n    }\n  }\n\n","sourceOld":"  public void handleRequest(SolrQueryRequest req, SolrQueryResponse rsp) {\n\n    try {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexReader reader = searcher.getReader();\n      Collection<String> fieldNames = reader.getFieldNames(IndexReader.FieldOption.ALL);\n      Map fields = new HashMap();\n      IndexSchema schema = req.getSchema();\n      for (String fieldName : fieldNames) {\n        Map fieldInfo = new HashMap();\n\n        FieldType fieldType = schema.getFieldTypeNoEx(fieldName);\n        fieldInfo.put(\"type\", fieldType.getTypeName());\n\n        fields.put(fieldName, fieldInfo);\n      }\n      rsp.add(\"fields\", fields);\n\n      Map indexInfo = new HashMap();\n      indexInfo.put(\"numDocs\", reader.numDocs());\n      indexInfo.put(\"maxDoc\", reader.maxDoc());\n      indexInfo.put(\"version\", reader.getVersion());\n      // indexInfo.put(\"age\", );  // computed from SolrIndexSearcher.openedAt?\n\n      rsp.add(\"index\", indexInfo);\n\n      rsp.add(\"NOTICE\",\"This interface is experimental and may be changing\");\n    } catch (SolrException e) {\n      rsp.setException(e);\n      return;\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log, e);\n      rsp.setException(e);\n      return;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb75bf7ed5c1c74dcbbba9b438c42ba9eaed9eec","date":1171517591,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/IndexInfoRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/IndexInfoRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) {\n\n    try {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexReader reader = searcher.getReader();\n      Collection<String> fieldNames = reader.getFieldNames(IndexReader.FieldOption.ALL);\n      Map<String,Object> fields = new HashMap<String,Object>();\n      IndexSchema schema = req.getSchema();\n      for (String fieldName : fieldNames) {\n        Map<String,String> fieldInfo = new HashMap<String,String>();\n\n        FieldType fieldType = schema.getFieldTypeNoEx(fieldName);\n        if( fieldType != null ) {\n          fieldInfo.put(\"type\", fieldType.getTypeName());\n        }\n        else {\n          // This can happen if you change the schema\n          fieldInfo.put(\"type\", null ); // \"[unknown]\"? nothing?\n        }\n\n        fields.put(fieldName, fieldInfo);\n      }\n      rsp.add(\"fields\", fields);\n\n      Map<String,Object> indexInfo = new HashMap<String,Object>();\n      indexInfo.put(\"numDocs\", reader.numDocs());\n      indexInfo.put(\"maxDoc\", reader.maxDoc());\n      indexInfo.put(\"version\", Long.toString(reader.getVersion()));\n      // indexInfo.put(\"age\", );  // computed from SolrIndexSearcher.openedAt?\n\n      rsp.add(\"index\", indexInfo);\n      \n    } catch (SolrException e) {\n      rsp.setException(e);\n      return;\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log, e);\n      rsp.setException(e);\n      return;\n    }\n  }\n\n","sourceOld":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) {\n\n    try {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexReader reader = searcher.getReader();\n      Collection<String> fieldNames = reader.getFieldNames(IndexReader.FieldOption.ALL);\n      Map<String,Object> fields = new HashMap<String,Object>();\n      IndexSchema schema = req.getSchema();\n      for (String fieldName : fieldNames) {\n        Map<String,String> fieldInfo = new HashMap<String,String>();\n\n        FieldType fieldType = schema.getFieldTypeNoEx(fieldName);\n        if( fieldType != null ) {\n          fieldInfo.put(\"type\", fieldType.getTypeName());\n        }\n        else {\n          // This can happen if you change the schema\n          fieldInfo.put(\"type\", null ); // \"[unknown]\"? nothing?\n        }\n\n        fields.put(fieldName, fieldInfo);\n      }\n      rsp.add(\"fields\", fields);\n\n      Map<String,Number> indexInfo = new HashMap<String,Number>();\n      indexInfo.put(\"numDocs\", reader.numDocs());\n      indexInfo.put(\"maxDoc\", reader.maxDoc());\n      indexInfo.put(\"version\", reader.getVersion());\n      // indexInfo.put(\"age\", );  // computed from SolrIndexSearcher.openedAt?\n\n      rsp.add(\"index\", indexInfo);\n      \n    } catch (SolrException e) {\n      rsp.setException(e);\n      return;\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log, e);\n      rsp.setException(e);\n      return;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbbb94e6b3717bd4bc52118345afb4970c53f4c5","date":1178761721,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/handler/IndexInfoRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) {\n\n    try {\n      SolrIndexSearcher searcher = req.getSearcher();\n      IndexReader reader = searcher.getReader();\n      Collection<String> fieldNames = reader.getFieldNames(IndexReader.FieldOption.ALL);\n      Map<String,Object> fields = new HashMap<String,Object>();\n      IndexSchema schema = req.getSchema();\n      for (String fieldName : fieldNames) {\n        Map<String,String> fieldInfo = new HashMap<String,String>();\n\n        FieldType fieldType = schema.getFieldTypeNoEx(fieldName);\n        if( fieldType != null ) {\n          fieldInfo.put(\"type\", fieldType.getTypeName());\n        }\n        else {\n          // This can happen if you change the schema\n          fieldInfo.put(\"type\", null ); // \"[unknown]\"? nothing?\n        }\n\n        fields.put(fieldName, fieldInfo);\n      }\n      rsp.add(\"fields\", fields);\n\n      Map<String,Object> indexInfo = new HashMap<String,Object>();\n      indexInfo.put(\"numDocs\", reader.numDocs());\n      indexInfo.put(\"maxDoc\", reader.maxDoc());\n      indexInfo.put(\"version\", Long.toString(reader.getVersion()));\n      // indexInfo.put(\"age\", );  // computed from SolrIndexSearcher.openedAt?\n\n      rsp.add(\"index\", indexInfo);\n      \n    } catch (SolrException e) {\n      rsp.setException(e);\n      return;\n    } catch (Exception e) {\n      SolrException.log(SolrCore.log, e);\n      rsp.setException(e);\n      return;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fbbb94e6b3717bd4bc52118345afb4970c53f4c5":["eb75bf7ed5c1c74dcbbba9b438c42ba9eaed9eec"],"ee354aca0711e1042b7c26d7fd5070117d00344c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"eb75bf7ed5c1c74dcbbba9b438c42ba9eaed9eec":["ee354aca0711e1042b7c26d7fd5070117d00344c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fbbb94e6b3717bd4bc52118345afb4970c53f4c5":[],"ee354aca0711e1042b7c26d7fd5070117d00344c":["eb75bf7ed5c1c74dcbbba9b438c42ba9eaed9eec"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ee354aca0711e1042b7c26d7fd5070117d00344c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eb75bf7ed5c1c74dcbbba9b438c42ba9eaed9eec":["fbbb94e6b3717bd4bc52118345afb4970c53f4c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fbbb94e6b3717bd4bc52118345afb4970c53f4c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}