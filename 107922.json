{"path":"contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","commits":[{"id":"1c6906e286d6ac740b24849fa59bc52e501f195a","date":1135123518,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"  public static void main(String[] args) throws IOException {\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.getDirectory(args[i], false);\n    }\n\n    writer.addIndexes(indexes);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c6c9e11f0a68c9d970d10c06fd4245f3af0446c","date":1135294789,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.getDirectory(args[i], false);\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.getDirectory(args[i], false);\n    }\n\n    writer.addIndexes(indexes);\n\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"235efcba838a273934c5dd0ef66bb07c7fb0d718","date":1201256475,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.getDirectory(args[i], false);\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.getDirectory(args[i], false);\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba712167ee848727018d8b77aa0c273839fbe15c","date":1244411561,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.getDirectory(args[i], false);\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    File mergedIndex = new File(args[0]);\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new  SimpleAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Optimizing...\");\n    writer.optimize();\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"235efcba838a273934c5dd0ef66bb07c7fb0d718":["6c6c9e11f0a68c9d970d10c06fd4245f3af0446c"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["ba712167ee848727018d8b77aa0c273839fbe15c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c6c9e11f0a68c9d970d10c06fd4245f3af0446c":["1c6906e286d6ac740b24849fa59bc52e501f195a"],"1c6906e286d6ac740b24849fa59bc52e501f195a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"ba712167ee848727018d8b77aa0c273839fbe15c":["235efcba838a273934c5dd0ef66bb07c7fb0d718"]},"commit2Childs":{"235efcba838a273934c5dd0ef66bb07c7fb0d718":["ba712167ee848727018d8b77aa0c273839fbe15c"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1c6906e286d6ac740b24849fa59bc52e501f195a"],"6c6c9e11f0a68c9d970d10c06fd4245f3af0446c":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"1c6906e286d6ac740b24849fa59bc52e501f195a":["6c6c9e11f0a68c9d970d10c06fd4245f3af0446c"],"ba712167ee848727018d8b77aa0c273839fbe15c":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}