{"path":"src/java/org/apache/lucene/util/ReaderUtil#gatherSubReaders(List[IndexReader],IndexReader).mjava","commits":[{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/ReaderUtil#gatherSubReaders(List[IndexReader],IndexReader).mjava","pathOld":"src/java/org/apache/lucene/util/ReaderUtil#gatherSubReaders(List,IndexReader).mjava","sourceNew":"  /**\n   * Gathers sub-readers from reader into a List.\n   * \n   * @param allSubReaders\n   * @param reader\n   */\n  public static void gatherSubReaders(List<IndexReader> allSubReaders, IndexReader reader) {\n    IndexReader[] subReaders = reader.getSequentialSubReaders();\n    if (subReaders == null) {\n      // Add the reader itself, and do not recurse\n      allSubReaders.add(reader);\n    } else {\n      for (int i = 0; i < subReaders.length; i++) {\n        gatherSubReaders(allSubReaders, subReaders[i]);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Gathers sub-readers from reader into a List.\n   * \n   * @param allSubReaders\n   * @param reader\n   */\n  public static void gatherSubReaders(List allSubReaders, IndexReader reader) {\n    IndexReader[] subReaders = reader.getSequentialSubReaders();\n    if (subReaders == null) {\n      // Add the reader itself, and do not recurse\n      allSubReaders.add(reader);\n    } else {\n      for (int i = 0; i < subReaders.length; i++) {\n        gatherSubReaders(allSubReaders, subReaders[i]);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/ReaderUtil#gatherSubReaders(List[IndexReader],IndexReader).mjava","pathOld":"src/java/org/apache/lucene/util/ReaderUtil#gatherSubReaders(List[IndexReader],IndexReader).mjava","sourceNew":"  /**\n   * Gathers sub-readers from reader into a List.\n   * \n   * @param allSubReaders\n   * @param reader\n   */\n  public static void gatherSubReaders(List<IndexReader> allSubReaders, IndexReader reader) {\n    IndexReader[] subReaders = reader.getSequentialSubReaders();\n    if (subReaders == null) {\n      // Add the reader itself, and do not recurse\n      allSubReaders.add(reader);\n    } else {\n      for (int i = 0; i < subReaders.length; i++) {\n        gatherSubReaders(allSubReaders, subReaders[i]);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Gathers sub-readers from reader into a List.\n   * \n   * @param allSubReaders\n   * @param reader\n   */\n  public static void gatherSubReaders(List<IndexReader> allSubReaders, IndexReader reader) {\n    IndexReader[] subReaders = reader.getSequentialSubReaders();\n    if (subReaders == null) {\n      // Add the reader itself, and do not recurse\n      allSubReaders.add(reader);\n    } else {\n      for (int i = 0; i < subReaders.length; i++) {\n        gatherSubReaders(allSubReaders, subReaders[i]);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef82ff03e4016c705811b2658e81471a645c0e49":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ef82ff03e4016c705811b2658e81471a645c0e49"]},"commit2Childs":{"ef82ff03e4016c705811b2658e81471a645c0e49":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ef82ff03e4016c705811b2658e81471a645c0e49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}