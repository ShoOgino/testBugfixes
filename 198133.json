{"path":"solr/src/test/org/apache/solr/client/solrj/SolrExampleBinaryTest#createNewSolrServer().mjava","commits":[{"id":"3a3b94b80956124d73f4ba1d13a45e982692f9e8","date":1292957997,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleBinaryTest#createNewSolrServer().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n\n      // where the magic happens\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc5ecd93bcd50b2199757091d526fc1bcbce0db1","date":1293154244,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleBinaryTest#createNewSolrServer().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n\n      // where the magic happens\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleBinaryTest#createNewSolrServer().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n\n      // where the magic happens\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleBinaryTest#createNewSolrServer().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleBinaryTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n\n      // where the magic happens\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n\n      // where the magic happens\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleBinaryTest#createNewSolrServer().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleBinaryTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n\n      // where the magic happens\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n\n      // where the magic happens\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleBinaryTest#createNewSolrServer().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleBinaryTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n\n      // where the magic happens\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n\n      // where the magic happens\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3a3b94b80956124d73f4ba1d13a45e982692f9e8"],"dc5ecd93bcd50b2199757091d526fc1bcbce0db1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3a3b94b80956124d73f4ba1d13a45e982692f9e8"],"3a3b94b80956124d73f4ba1d13a45e982692f9e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["3a3b94b80956124d73f4ba1d13a45e982692f9e8"],"c26f00b574427b55127e869b935845554afde1fa":["3a3b94b80956124d73f4ba1d13a45e982692f9e8","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["3a3b94b80956124d73f4ba1d13a45e982692f9e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"dc5ecd93bcd50b2199757091d526fc1bcbce0db1":[],"3a3b94b80956124d73f4ba1d13a45e982692f9e8":["70ad682703b8585f5d0a637efec044d57ec05efb","dc5ecd93bcd50b2199757091d526fc1bcbce0db1","c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","dc5ecd93bcd50b2199757091d526fc1bcbce0db1","3a3b94b80956124d73f4ba1d13a45e982692f9e8"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","dc5ecd93bcd50b2199757091d526fc1bcbce0db1","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}