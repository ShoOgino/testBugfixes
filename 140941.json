{"path":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","commits":[{"id":"c9767265f21f7d1246b13dd7e73e8a4ad88b4384","date":1342986300,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateHandler,int).mjava","sourceNew":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    SolrCore core = ulog.uhandler.core;\n    versionField = core.getSchema().getFieldOrNull(VERSION_FIELD);\n    idField = core.getSchema().getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","sourceOld":"  public VersionInfo(UpdateHandler updateHandler, int nBuckets) {\n    this.updateHandler = updateHandler;\n    this.core = updateHandler.core;\n    versionField = core.getSchema().getFieldOrNull(VERSION_FIELD);\n    idField = core.getSchema().getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateHandler,int).mjava","sourceNew":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    SolrCore core = ulog.uhandler.core;\n    versionField = core.getSchema().getFieldOrNull(VERSION_FIELD);\n    idField = core.getSchema().getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","sourceOld":"  public VersionInfo(UpdateHandler updateHandler, int nBuckets) {\n    this.updateHandler = updateHandler;\n    this.core = updateHandler.core;\n    versionField = core.getSchema().getFieldOrNull(VERSION_FIELD);\n    idField = core.getSchema().getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","pathOld":"/dev/null","sourceNew":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    SolrCore core = ulog.uhandler.core;\n    versionField = core.getSchema().getFieldOrNull(VERSION_FIELD);\n    idField = core.getSchema().getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22455f5d09943428acbf15c1bd87ba2cad36c08d","date":1345569934,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","sourceNew":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    SolrCore core = ulog.uhandler.core;\n    versionField = getAndCheckVersionField(core.getSchema());\n    idField = core.getSchema().getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","sourceOld":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    SolrCore core = ulog.uhandler.core;\n    versionField = core.getSchema().getFieldOrNull(VERSION_FIELD);\n    idField = core.getSchema().getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","sourceNew":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    SolrCore core = ulog.uhandler.core;\n    versionField = getAndCheckVersionField(core.getSchema());\n    idField = core.getSchema().getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","sourceOld":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    SolrCore core = ulog.uhandler.core;\n    versionField = core.getSchema().getFieldOrNull(VERSION_FIELD);\n    idField = core.getSchema().getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","sourceNew":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    IndexSchema schema = ulog.uhandler.core.getLatestSchema(); \n    versionField = getAndCheckVersionField(schema);\n    idField = schema.getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","sourceOld":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    SolrCore core = ulog.uhandler.core;\n    versionField = getAndCheckVersionField(core.getSchema());\n    idField = core.getSchema().getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d65446e37ead9e278d9fd19ba6ac154a512916ea","date":1544107016,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","sourceNew":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    IndexSchema schema = ulog.uhandler.core.getLatestSchema(); \n    versionField = getAndCheckVersionField(schema);\n    idField = schema.getUniqueKeyField();\n    versionBucketLockTimeoutMs = ulog.uhandler.core.getSolrConfig().getInt(\"updateHandler/versionBucketLockTimeoutMs\",\n        Integer.parseInt(System.getProperty(SYS_PROP_BUCKET_VERSION_LOCK_TIMEOUT_MS, \"\" + DEFAULT_VERSION_BUCKET_LOCK_TIMEOUT_MS)));\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket(versionBucketLockTimeoutMs);\n    }\n  }\n\n","sourceOld":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    IndexSchema schema = ulog.uhandler.core.getLatestSchema(); \n    versionField = getAndCheckVersionField(schema);\n    idField = schema.getUniqueKeyField();\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b3824fcbd3256db359391630ae05b3917ab369a","date":1556656304,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/VersionInfo#VersionInfo(UpdateLog,int).mjava","sourceNew":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    IndexSchema schema = ulog.uhandler.core.getLatestSchema(); \n    versionField = getAndCheckVersionField(schema);\n    versionBucketLockTimeoutMs = ulog.uhandler.core.getSolrConfig().getInt(\"updateHandler/versionBucketLockTimeoutMs\",\n        Integer.parseInt(System.getProperty(SYS_PROP_BUCKET_VERSION_LOCK_TIMEOUT_MS, \"0\")));\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      if (versionBucketLockTimeoutMs > 0) {\n        buckets[i] = new TimedVersionBucket();\n      } else {\n        buckets[i] = new VersionBucket();\n      }\n    }\n  }\n\n","sourceOld":"  public VersionInfo(UpdateLog ulog, int nBuckets) {\n    this.ulog = ulog;\n    IndexSchema schema = ulog.uhandler.core.getLatestSchema(); \n    versionField = getAndCheckVersionField(schema);\n    idField = schema.getUniqueKeyField();\n    versionBucketLockTimeoutMs = ulog.uhandler.core.getSolrConfig().getInt(\"updateHandler/versionBucketLockTimeoutMs\",\n        Integer.parseInt(System.getProperty(SYS_PROP_BUCKET_VERSION_LOCK_TIMEOUT_MS, \"\" + DEFAULT_VERSION_BUCKET_LOCK_TIMEOUT_MS)));\n    buckets = new VersionBucket[ BitUtil.nextHighestPowerOfTwo(nBuckets) ];\n    for (int i=0; i<buckets.length; i++) {\n      buckets[i] = new VersionBucket(versionBucketLockTimeoutMs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["aba371508186796cc6151d8223a5b4e16d02e26e","22455f5d09943428acbf15c1bd87ba2cad36c08d"],"9b3824fcbd3256db359391630ae05b3917ab369a":["d65446e37ead9e278d9fd19ba6ac154a512916ea"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9767265f21f7d1246b13dd7e73e8a4ad88b4384"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22455f5d09943428acbf15c1bd87ba2cad36c08d":["c9767265f21f7d1246b13dd7e73e8a4ad88b4384"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9767265f21f7d1246b13dd7e73e8a4ad88b4384"],"d65446e37ead9e278d9fd19ba6ac154a512916ea":["08970e5b8411182a29412c177eff67ec1110095b"],"c9767265f21f7d1246b13dd7e73e8a4ad88b4384":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9b3824fcbd3256db359391630ae05b3917ab369a"],"08970e5b8411182a29412c177eff67ec1110095b":["22455f5d09943428acbf15c1bd87ba2cad36c08d"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"9b3824fcbd3256db359391630ae05b3917ab369a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":["001b25b42373b22a52f399dbf072f1224632e8e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","c9767265f21f7d1246b13dd7e73e8a4ad88b4384"],"22455f5d09943428acbf15c1bd87ba2cad36c08d":["001b25b42373b22a52f399dbf072f1224632e8e6","08970e5b8411182a29412c177eff67ec1110095b"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":[],"d65446e37ead9e278d9fd19ba6ac154a512916ea":["9b3824fcbd3256db359391630ae05b3917ab369a"],"c9767265f21f7d1246b13dd7e73e8a4ad88b4384":["aba371508186796cc6151d8223a5b4e16d02e26e","22455f5d09943428acbf15c1bd87ba2cad36c08d","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"08970e5b8411182a29412c177eff67ec1110095b":["d65446e37ead9e278d9fd19ba6ac154a512916ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}