{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockPostingsEnum#nextDoc().mjava","commits":[{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockPostingsEnum#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      while (true) {\n        if (docUpto == docFreq) {\n          return doc = NO_MORE_DOCS;\n        }\n        if (docBufferUpto == BLOCK_SIZE) {\n          refillDocs();\n        }\n\n        accum += docDeltaBuffer[docBufferUpto];\n        freq = freqBuffer[docBufferUpto];\n        posPendingCount += freq;\n        docBufferUpto++;\n        docUpto++;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          doc = accum;\n          position = 0;\n          return doc;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      while (true) {\n        if (docUpto == docFreq) {\n          return doc = NO_MORE_DOCS;\n        }\n        if (docBufferUpto == BLOCK_SIZE) {\n          refillDocs();\n        }\n\n        accum += docDeltaBuffer[docBufferUpto];\n        freq = freqBuffer[docBufferUpto];\n        posPendingCount += freq;\n        docBufferUpto++;\n        docUpto++;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          doc = accum;\n          position = 0;\n          return doc;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockPostingsEnum#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockPostingsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      if (docUpto == docFreq) {\n        return doc = NO_MORE_DOCS;\n      }\n      if (docBufferUpto == BLOCK_SIZE) {\n        refillDocs();\n      }\n\n      accum += docDeltaBuffer[docBufferUpto];\n      freq = freqBuffer[docBufferUpto];\n      posPendingCount += freq;\n      docBufferUpto++;\n      docUpto++;\n\n      doc = accum;\n      position = 0;\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      while (true) {\n        if (docUpto == docFreq) {\n          return doc = NO_MORE_DOCS;\n        }\n        if (docBufferUpto == BLOCK_SIZE) {\n          refillDocs();\n        }\n\n        accum += docDeltaBuffer[docBufferUpto];\n        freq = freqBuffer[docBufferUpto];\n        posPendingCount += freq;\n        docBufferUpto++;\n        docUpto++;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          doc = accum;\n          position = 0;\n          return doc;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8dd25829321d66cd54ea7d40a4130e0d2a29bec","date":1562680889,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockPostingsEnum#nextDoc().mjava","sourceNew":null,"sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      if (docUpto == docFreq) {\n        return doc = NO_MORE_DOCS;\n      }\n      if (docBufferUpto == BLOCK_SIZE) {\n        refillDocs();\n      }\n\n      accum += docDeltaBuffer[docBufferUpto];\n      freq = freqBuffer[docBufferUpto];\n      posPendingCount += freq;\n      docBufferUpto++;\n      docUpto++;\n\n      doc = accum;\n      position = 0;\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["51f5280f31484820499077f41fcdfe92d527d9dc"],"f8dd25829321d66cd54ea7d40a4130e0d2a29bec":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8dd25829321d66cd54ea7d40a4130e0d2a29bec"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["f8dd25829321d66cd54ea7d40a4130e0d2a29bec"],"f8dd25829321d66cd54ea7d40a4130e0d2a29bec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51f5280f31484820499077f41fcdfe92d527d9dc"],"51f5280f31484820499077f41fcdfe92d527d9dc":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}