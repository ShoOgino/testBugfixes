{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#get(Map[String,String],String,Collection[String],String,boolean).mjava","commits":[{"id":"dcae30df9fe9300569835aef42ec65802c7c0afb","date":1364859933,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#get(Map[String,String],String,Collection[String],String,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public String get(Map<String,String> args, String name, Collection<String> allowedValues, String defaultVal, boolean caseSensitive) {\n    String s = args.remove(name);\n    if (s == null) {\n      return defaultVal;\n    } else {\n      for (String allowedValue : allowedValues) {\n        if (caseSensitive) {\n          if (s.equals(allowedValue)) {\n            return s;\n          }\n        } else {\n          if (s.equalsIgnoreCase(allowedValue)) {\n            return s;\n          }\n        }\n      }\n      throw new IllegalArgumentException(\"Configuration Error: '\" + name + \"' value must be one of \" + allowedValues);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":5,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/AbstractAnalysisFactory#get(Map[String,String],String,Collection[String],String,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#get(Map[String,String],String,Collection[String],String,boolean).mjava","sourceNew":"  public String get(Map<String,String> args, String name, Collection<String> allowedValues, String defaultVal, boolean caseSensitive) {\n    String s = args.remove(name);\n    if (s == null) {\n      return defaultVal;\n    } else {\n      for (String allowedValue : allowedValues) {\n        if (caseSensitive) {\n          if (s.equals(allowedValue)) {\n            return s;\n          }\n        } else {\n          if (s.equalsIgnoreCase(allowedValue)) {\n            return s;\n          }\n        }\n      }\n      throw new IllegalArgumentException(\"Configuration Error: '\" + name + \"' value must be one of \" + allowedValues);\n    }\n  }\n\n","sourceOld":"  public String get(Map<String,String> args, String name, Collection<String> allowedValues, String defaultVal, boolean caseSensitive) {\n    String s = args.remove(name);\n    if (s == null) {\n      return defaultVal;\n    } else {\n      for (String allowedValue : allowedValues) {\n        if (caseSensitive) {\n          if (s.equals(allowedValue)) {\n            return s;\n          }\n        } else {\n          if (s.equalsIgnoreCase(allowedValue)) {\n            return s;\n          }\n        }\n      }\n      throw new IllegalArgumentException(\"Configuration Error: '\" + name + \"' value must be one of \" + allowedValues);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dcae30df9fe9300569835aef42ec65802c7c0afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"dcae30df9fe9300569835aef42ec65802c7c0afb":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}