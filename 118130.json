{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\"))\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["178aff34c3fa746242ad3ce5d169f680f3865b4b","c9f9c250dfa2238c6fa2cb7c83894edc84e1c5a8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6b4144476bf37b7500e29f9586d2fc733029b077","date":1225431123,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","sourceNew":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        rows = 10;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\"))\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","sourceOld":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\"))\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ccee48063b079e427df62dab801f6d8eeeb115c","date":1232906741,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","sourceNew":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        rows = 10;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      if (DELTA_IMPORT_CMD.equals(command)) {\n        clean = false;\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\"))\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","sourceOld":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        rows = 10;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\"))\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4141d5af420007faa5e1e1064727d36ccbbbe921","date":1241293825,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","sourceNew":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        rows = 10;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      if (DELTA_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        clean = false;\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\"))\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","sourceOld":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        rows = 10;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      if (DELTA_IMPORT_CMD.equals(command)) {\n        clean = false;\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\"))\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"178aff34c3fa746242ad3ce5d169f680f3865b4b","date":1248188879,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","sourceNew":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        rows = 10;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      if (DELTA_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        clean = false;\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\")) {\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n        if (optimize)\n          commit = true;\n      }\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","sourceOld":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        rows = 10;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      if (DELTA_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        clean = false;\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\"))\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","bugFix":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"872f5f5903b61078e3b9da4be3e9f55872f7f4c8","date":1263549223,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","sourceNew":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        rows = 10;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      syncMode = \"true\".equals(requestParams.get(\"synchronous\"));\n      if (DELTA_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        clean = false;\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\")) {\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n        if (optimize)\n          commit = true;\n      }\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","sourceOld":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        rows = 10;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      if (DELTA_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        clean = false;\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\")) {\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n        if (optimize)\n          commit = true;\n      }\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","bugFix":null,"bugIntro":["c9f9c250dfa2238c6fa2cb7c83894edc84e1c5a8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.RequestParams#RequestParams(Map[String,Object]).mjava","sourceNew":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        rows = 10;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      syncMode = \"true\".equals(requestParams.get(\"synchronous\"));\n      if (DELTA_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        clean = false;\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\")) {\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n        if (optimize)\n          commit = true;\n      }\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","sourceOld":"    public RequestParams(Map<String, Object> requestParams) {\n      if (requestParams.containsKey(\"command\"))\n        command = (String) requestParams.get(\"command\");\n\n      if (\"on\".equals(requestParams.get(\"debug\"))) {\n        debug = true;\n        rows = 10;\n        // Set default values suitable for debug mode\n        commit = false;\n        clean = false;\n        verbose = \"true\".equals(requestParams.get(\"verbose\"))\n                || \"on\".equals(requestParams.get(\"verbose\"));\n      }\n      syncMode = \"true\".equals(requestParams.get(\"synchronous\"));\n      if (DELTA_IMPORT_CMD.equals(command) || IMPORT_CMD.equals(command)) {\n        clean = false;\n      }\n      if (requestParams.containsKey(\"commit\"))\n        commit = Boolean.parseBoolean((String) requestParams.get(\"commit\"));\n      if (requestParams.containsKey(\"start\"))\n        start = Integer.parseInt((String) requestParams.get(\"start\"));\n      if (requestParams.containsKey(\"rows\"))\n        rows = Integer.parseInt((String) requestParams.get(\"rows\"));\n      if (requestParams.containsKey(\"clean\"))\n        clean = Boolean.parseBoolean((String) requestParams.get(\"clean\"));\n      if (requestParams.containsKey(\"optimize\")) {\n        optimize = Boolean.parseBoolean((String) requestParams.get(\"optimize\"));\n        if (optimize)\n          commit = true;\n      }\n\n      Object o = requestParams.get(\"entity\");\n\n      if (o != null && o instanceof String) {\n        entities = new ArrayList<String>();\n        entities.add((String) o);\n      } else if (o != null && o instanceof List) {\n        entities = (List<String>) requestParams.get(\"entity\");\n      }\n\n      dataConfig = (String) requestParams.get(\"dataConfig\");\n      if (dataConfig != null && dataConfig.trim().length() == 0) {\n        // Empty data-config param is not valid, change it to null\n        dataConfig = null;\n      }\n\n      this.requestParams = requestParams;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4ccee48063b079e427df62dab801f6d8eeeb115c":["6b4144476bf37b7500e29f9586d2fc733029b077"],"872f5f5903b61078e3b9da4be3e9f55872f7f4c8":["178aff34c3fa746242ad3ce5d169f680f3865b4b"],"6b4144476bf37b7500e29f9586d2fc733029b077":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"178aff34c3fa746242ad3ce5d169f680f3865b4b":["4141d5af420007faa5e1e1064727d36ccbbbe921"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"4141d5af420007faa5e1e1064727d36ccbbbe921":["4ccee48063b079e427df62dab801f6d8eeeb115c"],"ad94625fb8d088209f46650c8097196fec67f00c":["872f5f5903b61078e3b9da4be3e9f55872f7f4c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4ccee48063b079e427df62dab801f6d8eeeb115c":["4141d5af420007faa5e1e1064727d36ccbbbe921"],"6b4144476bf37b7500e29f9586d2fc733029b077":["4ccee48063b079e427df62dab801f6d8eeeb115c"],"872f5f5903b61078e3b9da4be3e9f55872f7f4c8":["ad94625fb8d088209f46650c8097196fec67f00c"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["6b4144476bf37b7500e29f9586d2fc733029b077"],"178aff34c3fa746242ad3ce5d169f680f3865b4b":["872f5f5903b61078e3b9da4be3e9f55872f7f4c8"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4141d5af420007faa5e1e1064727d36ccbbbe921":["178aff34c3fa746242ad3ce5d169f680f3865b4b"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}