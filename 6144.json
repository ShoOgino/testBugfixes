{"path":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","commits":[{"id":"5ebf70dabe6279454c5ff460bdea3f0dc2814a86","date":1463672611,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 13, 14, 15, 16, 20, 22, 24, 32, 9};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 13, 14, 15, 16, 20, 22, 24, 32, 9};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","sourceNew":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n  }\n\n","sourceOld":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 13, 14, 15, 16, 20, 22, 24, 32, 9};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2100a5b744ecaec4d2b191a7da9083feb50a6f7f","date":1483995984,"type":3,"author":"anshum","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","sourceNew":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=false mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{31, 18, 23, 13, 14, 20, 22, 32, 19, 21};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 1: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=true mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{29, 31, 32, 18, 23, 13, 14, 20, 22, 19};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 2: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n  }\n\n","sourceOld":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","sourceNew":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=false mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{31, 18, 23, 13, 14, 20, 22, 32, 19, 21};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 1: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=true mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{29, 31, 32, 18, 23, 13, 14, 20, 22, 19};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 2: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n  }\n\n","sourceOld":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","date":1489572490,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","sourceNew":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=false mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{31, 18, 23, 13, 14, 20, 22, 32, 19, 21};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 1: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=true mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{29, 31, 32, 18, 23, 13, 14, 20, 22, 19};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 2: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n  }\n\n","sourceOld":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=false mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{31, 18, 23, 13, 14, 20, 22, 32, 19, 21};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 1: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=true mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{29, 31, 32, 18, 23, 13, 14, 20, 22, 19};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 2: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55e0b3830b94d1abce4e32e98cfc875d5b14e76f","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","sourceNew":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=false mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{31, 18, 23, 13, 14, 20, 22, 32, 19, 21};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 1: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=true mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{29, 31, 32, 18, 23, 13, 14, 20, 22, 19};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 2: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n  }\n\n","sourceOld":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=false mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{31, 18, 23, 13, 14, 20, 22, 32, 19, 21};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 1: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=true mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{29, 31, 32, 18, 23, 13, 14, 20, 22, 19};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 2: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","sourceNew":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=false mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{31, 18, 23, 13, 14, 20, 22, 32, 19, 21};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 1: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=true mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{29, 31, 32, 18, 23, 13, 14, 20, 22, 19};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 2: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n  }\n\n","sourceOld":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=false mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{31, 18, 23, 13, 14, 20, 22, 32, 19, 21};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 1: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=true mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{29, 31, 32, 18, 23, 13, 14, 20, 22, 19};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.valueOf(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 2: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/mlt/CloudMLTQParserTest#testBoost().mjava","sourceNew":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    \n    Arrays.sort(actualIds);\n    Arrays.sort(expectedIds);\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=false mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{31, 18, 23, 13, 14, 20, 22, 32, 19, 21};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    \n    Arrays.sort(actualIds);\n    Arrays.sort(expectedIds);\n    System.out.println(\"DEBUG ACTUAL IDS 1: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=true mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{29, 31, 32, 18, 23, 13, 14, 20, 22, 19};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    \n    Arrays.sort(actualIds);\n    Arrays.sort(expectedIds);\n    System.out.println(\"DEBUG ACTUAL IDS 2: \" + Arrays.toString(actualIds));\n    assertArrayEquals(Arrays.toString(expectedIds) + \" \" + Arrays.toString(actualIds), expectedIds, actualIds);\n  }\n\n","sourceOld":"  @Test\n  public void testBoost() throws Exception {\n\n    QueryResponse queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u boost=true}17\"));\n    SolrDocumentList solrDocuments = queryResponse.getResults();\n    int[] expectedIds = new int[]{7, 9, 13, 14, 15, 16, 20, 22, 24, 32};\n    int[] actualIds = new int[solrDocuments.size()];\n    int i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=false mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{31, 18, 23, 13, 14, 20, 22, 32, 19, 21};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 1: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n\n    queryResponse = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"{!mlt qf=lowerfilt_u^10,lowerfilt1_u^1000 boost=true mintf=0 mindf=0}30\"));\n    solrDocuments = queryResponse.getResults();\n    expectedIds = new int[]{29, 31, 32, 18, 23, 13, 14, 20, 22, 19};\n    actualIds = new int[solrDocuments.size()];\n    i = 0;\n    for (SolrDocument solrDocument : solrDocuments) {\n      actualIds[i++] = Integer.parseInt(String.valueOf(solrDocument.getFieldValue(\"id\")));\n    }\n    System.out.println(\"DEBUG ACTUAL IDS 2: \" + Arrays.toString(actualIds));\n    assertArrayEquals(expectedIds, actualIds);\n  }\n\n","bugFix":["2100a5b744ecaec4d2b191a7da9083feb50a6f7f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["2100a5b744ecaec4d2b191a7da9083feb50a6f7f"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["2100a5b744ecaec4d2b191a7da9083feb50a6f7f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2100a5b744ecaec4d2b191a7da9083feb50a6f7f":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","2100a5b744ecaec4d2b191a7da9083feb50a6f7f"],"5ebf70dabe6279454c5ff460bdea3f0dc2814a86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab68488225b6a6c357dda72ed11dedca9914a192":["2100a5b744ecaec4d2b191a7da9083feb50a6f7f","55e0b3830b94d1abce4e32e98cfc875d5b14e76f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ebf70dabe6279454c5ff460bdea3f0dc2814a86"]},"commit2Childs":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5ebf70dabe6279454c5ff460bdea3f0dc2814a86","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"2100a5b744ecaec4d2b191a7da9083feb50a6f7f":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","55e0b3830b94d1abce4e32e98cfc875d5b14e76f","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","ab68488225b6a6c357dda72ed11dedca9914a192"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["2100a5b744ecaec4d2b191a7da9083feb50a6f7f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"5ebf70dabe6279454c5ff460bdea3f0dc2814a86":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}