{"path":"solr/core/src/java/org/apache/solr/search/JoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","commits":[{"id":"da22fc4f0d847980f460da30f3b68afbf2249d70","date":1422932846,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","pathOld":"/dev/null","sourceNew":"  protected String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getActiveSlices(fromIndex)) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          // found local replica, but is it Active?\n          ZkCoreNodeProps replicaCoreProps = new ZkCoreNodeProps(replica);\n          if (!ZkStateReader.ACTIVE.equals(replicaCoreProps.getState()))\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replicaCoreProps.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["344b0840364d990b29b97467bfcc766ff8325d11"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a219f1dcad1700e84807666bdbd2b573e8de7021","date":1428130940,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","sourceNew":"  protected String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getActiveSlices(fromIndex)) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","sourceOld":"  protected String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getActiveSlices(fromIndex)) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          // found local replica, but is it Active?\n          ZkCoreNodeProps replicaCoreProps = new ZkCoreNodeProps(replica);\n          if (!ZkStateReader.ACTIVE.equals(replicaCoreProps.getState()))\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replicaCoreProps.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"118ba480e87dfe453a6b47a320429be33f1d1653","date":1440320558,"type":5,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQParserPlugin#findLocalReplicaForFromIndex(ZkController,String).mjava","sourceNew":"  private static String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getActiveSlices(fromIndex)) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","sourceOld":"  protected String findLocalReplicaForFromIndex(ZkController zkController, String fromIndex) {\n    String fromReplica = null;\n\n    String nodeName = zkController.getNodeName();\n    for (Slice slice : zkController.getClusterState().getActiveSlices(fromIndex)) {\n      if (fromReplica != null)\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"SolrCloud join: multiple shards not yet supported \" + fromIndex);\n\n      for (Replica replica : slice.getReplicas()) {\n        if (replica.getNodeName().equals(nodeName)) {\n          fromReplica = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          // found local replica, but is it Active?\n          if (replica.getState() != Replica.State.ACTIVE)\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"SolrCloud join: \"+fromIndex+\" has a local replica (\"+fromReplica+\n                    \") on \"+nodeName+\", but it is \"+replica.getState());\n\n          break;\n        }\n      }\n    }\n\n    if (fromReplica == null)\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"SolrCloud join: No active replicas for \"+fromIndex+\n              \" found in node \" + nodeName);\n\n    return fromReplica;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a219f1dcad1700e84807666bdbd2b573e8de7021":["da22fc4f0d847980f460da30f3b68afbf2249d70"],"da22fc4f0d847980f460da30f3b68afbf2249d70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"118ba480e87dfe453a6b47a320429be33f1d1653":["a219f1dcad1700e84807666bdbd2b573e8de7021"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["118ba480e87dfe453a6b47a320429be33f1d1653"]},"commit2Childs":{"a219f1dcad1700e84807666bdbd2b573e8de7021":["118ba480e87dfe453a6b47a320429be33f1d1653"],"da22fc4f0d847980f460da30f3b68afbf2249d70":["a219f1dcad1700e84807666bdbd2b573e8de7021"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da22fc4f0d847980f460da30f3b68afbf2249d70"],"118ba480e87dfe453a6b47a320429be33f1d1653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}