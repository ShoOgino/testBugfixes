{"path":"src/java/org/apache/solr/schema/SpatialTileField#getFieldQuery(QParser,SchemaField,String).mjava","commits":[{"id":"7a92f9b3c2bb83d99d2158d54da6c23bf5d7e564","date":1262055526,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/SpatialTileField#getFieldQuery(QParser,SchemaField,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n    //The externalVal here is a box id, as it doesn't make sense to pick a specific tile since that requires a distance\n    //so, just OR together a search against all the tiles\n    BooleanQuery bq = new BooleanQuery(true);\n    for (int i = 0; i < tileDiff; i++) {\n      SchemaField sf = subField(field, i);\n      Query tq = sf.getType().getFieldQuery(parser, sf, externalVal);\n      bq.add(tq, BooleanClause.Occur.SHOULD);\n    }\n    return bq;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/SpatialTileField#getFieldQuery(QParser,SchemaField,String).mjava","pathOld":"src/java/org/apache/solr/schema/SpatialTileField#getFieldQuery(QParser,SchemaField,String).mjava","sourceNew":"  @Override\n  public Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n    //The externalVal here is a box id, as it doesn't make sense to pick a specific tile since that requires a distance\n    //so, just OR together a search against all the tiles\n    BooleanQuery bq = new BooleanQuery(true);\n    for (int i = 0; i < tileDiff; i++) {\n      SchemaField sf = subField(field, i);\n      Query tq = sf.getType().getFieldQuery(parser, sf, externalVal);\n      bq.add(tq, BooleanClause.Occur.SHOULD);\n    }\n    return bq;\n  }\n\n","sourceOld":"  @Override\n  public Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n    //The externalVal here is a box id, as it doesn't make sense to pick a specific tile since that requires a distance\n    //so, just OR together a search against all the tiles\n    BooleanQuery bq = new BooleanQuery(true);\n    for (int i = 0; i < tileDiff; i++) {\n      SchemaField sf = subField(field, i);\n      Query tq = sf.getType().getFieldQuery(parser, sf, externalVal);\n      bq.add(tq, BooleanClause.Occur.SHOULD);\n    }\n    return bq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a92f9b3c2bb83d99d2158d54da6c23bf5d7e564":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["7a92f9b3c2bb83d99d2158d54da6c23bf5d7e564"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7a92f9b3c2bb83d99d2158d54da6c23bf5d7e564":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["7a92f9b3c2bb83d99d2158d54da6c23bf5d7e564"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}