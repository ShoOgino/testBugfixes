{"path":"lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/RBBIRuleCompiler#getRules(File).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/RBBIRuleCompiler#getRules(File).mjava","pathOld":"modules/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/RBBIRuleCompiler#getRules(File).mjava","sourceNew":"  static String getRules(File ruleFile) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream in = new FileInputStream(ruleFile);\n    BufferedReader cin = new BufferedReader(new InputStreamReader(in, \"UTF-8\"));\n    String line = null;\n    while ((line = cin.readLine()) != null) {\n      if (!line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    cin.close();\n    in.close();\n    return rules.toString();\n  }\n\n","sourceOld":"  static String getRules(File ruleFile) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream in = new FileInputStream(ruleFile);\n    BufferedReader cin = new BufferedReader(new InputStreamReader(in, \"UTF-8\"));\n    String line = null;\n    while ((line = cin.readLine()) != null) {\n      if (!line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    cin.close();\n    in.close();\n    return rules.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/RBBIRuleCompiler#getRules(File).mjava","pathOld":"lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/RBBIRuleCompiler#getRules(File).mjava","sourceNew":"  static String getRules(File ruleFile) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream in = new FileInputStream(ruleFile);\n    BufferedReader cin = new BufferedReader(new InputStreamReader(in, StandardCharsets.UTF_8));\n    String line = null;\n    while ((line = cin.readLine()) != null) {\n      if (!line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    cin.close();\n    in.close();\n    return rules.toString();\n  }\n\n","sourceOld":"  static String getRules(File ruleFile) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream in = new FileInputStream(ruleFile);\n    BufferedReader cin = new BufferedReader(new InputStreamReader(in, \"UTF-8\"));\n    String line = null;\n    while ((line = cin.readLine()) != null) {\n      if (!line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    cin.close();\n    in.close();\n    return rules.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/RBBIRuleCompiler#getRules(File).mjava","pathOld":"lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/RBBIRuleCompiler#getRules(File).mjava","sourceNew":"  static String getRules(File ruleFile) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream in = new FileInputStream(ruleFile);\n    BufferedReader cin = new BufferedReader(new InputStreamReader(in, StandardCharsets.UTF_8));\n    String line = null;\n    while ((line = cin.readLine()) != null) {\n      if (!line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    cin.close();\n    in.close();\n    return rules.toString();\n  }\n\n","sourceOld":"  static String getRules(File ruleFile) throws IOException {\n    StringBuilder rules = new StringBuilder();\n    InputStream in = new FileInputStream(ruleFile);\n    BufferedReader cin = new BufferedReader(new InputStreamReader(in, \"UTF-8\"));\n    String line = null;\n    while ((line = cin.readLine()) != null) {\n      if (!line.startsWith(\"#\"))\n        rules.append(line);\n      rules.append('\\n');\n    }\n    cin.close();\n    in.close();\n    return rules.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7d89d7e4e5101347833eea558851bf4209218619"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7d89d7e4e5101347833eea558851bf4209218619":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7d89d7e4e5101347833eea558851bf4209218619"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}