{"path":"lucene/queries/src/java/org/apache/lucene/queries/TermsQuery.TermsAndField#equals(Object).mjava","commits":[{"id":"c2042d3e27841c5b60112990fc33559e10ccf6dd","date":1424537395,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/TermsQuery.TermsAndField#equals(Object).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/TermsFilter.TermsAndField#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) return true;\n      if (obj == null) return false;\n      if (getClass() != obj.getClass()) return false;\n      TermsAndField other = (TermsAndField) obj;\n      if (field == null) {\n        if (other.field != null) return false;\n      } else if (!field.equals(other.field)) return false;\n      if (end != other.end) return false;\n      if (start != other.start) return false;\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) return true;\n      if (obj == null) return false;\n      if (getClass() != obj.getClass()) return false;\n      TermsAndField other = (TermsAndField) obj;\n      if (field == null) {\n        if (other.field != null) return false;\n      } else if (!field.equals(other.field)) return false;\n      if (end != other.end) return false;\n      if (start != other.start) return false;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a54410d37fe11baed59cc55dcad44db795f732c2","date":1430995912,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/TermsQuery.TermsAndField#equals(Object).mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) return true;\n      if (obj == null) return false;\n      if (getClass() != obj.getClass()) return false;\n      TermsAndField other = (TermsAndField) obj;\n      if (field == null) {\n        if (other.field != null) return false;\n      } else if (!field.equals(other.field)) return false;\n      if (end != other.end) return false;\n      if (start != other.start) return false;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a54410d37fe11baed59cc55dcad44db795f732c2":["c2042d3e27841c5b60112990fc33559e10ccf6dd"],"c2042d3e27841c5b60112990fc33559e10ccf6dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a54410d37fe11baed59cc55dcad44db795f732c2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2042d3e27841c5b60112990fc33559e10ccf6dd"],"a54410d37fe11baed59cc55dcad44db795f732c2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c2042d3e27841c5b60112990fc33559e10ccf6dd":["a54410d37fe11baed59cc55dcad44db795f732c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}