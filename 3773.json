{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetParser#parseCommonParams(Object).mjava","commits":[{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser#parseCommonParams(Object).mjava","pathOld":"/dev/null","sourceNew":"  protected void parseCommonParams(Object o) {\n    if (o instanceof Map) {\n      @SuppressWarnings({\"unchecked\"})\n      Map<String,Object> m = (Map<String,Object>)o;\n      List<String> excludeTags = getStringList(m, \"excludeTags\");\n      if (excludeTags != null) {\n        getDomain().excludeTags = excludeTags;\n      }\n\n      Object domainObj =  m.get(\"domain\");\n      if (domainObj instanceof Map) {\n        @SuppressWarnings({\"unchecked\"})\n        Map<String, Object> domainMap = (Map<String, Object>)domainObj;\n        FacetRequest.Domain domain = getDomain();\n\n        excludeTags = getStringList(domainMap, \"excludeTags\");\n        if (excludeTags != null) {\n          domain.excludeTags = excludeTags;\n        }\n\n        if (domainMap.containsKey(\"query\")) {\n          domain.explicitQueries = parseJSONQueryStruct(domainMap.get(\"query\"));\n          if (null == domain.explicitQueries) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"'query' domain can not be null or empty\");\n          } else if (null != domain.excludeTags) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"'query' domain can not be combined with 'excludeTags'\");\n          }\n        }\n\n        String blockParent = getString(domainMap, \"blockParent\", null);\n        String blockChildren = getString(domainMap, \"blockChildren\", null);\n\n        if (blockParent != null) {\n          domain.toParent = true;\n          domain.parents = blockParent;\n        } else if (blockChildren != null) {\n          domain.toChildren = true;\n          domain.parents = blockChildren;\n        }\n\n        FacetRequest.Domain.JoinField.createJoinField(domain, domainMap);\n        FacetRequest.Domain.GraphField.createGraphField(domain, domainMap);\n\n        Object filterOrList = domainMap.get(\"filter\");\n        if (filterOrList != null) {\n          assert domain.filters == null;\n          domain.filters = parseJSONQueryStruct(filterOrList);\n        }\n\n      } else if (domainObj != null) {\n        throw err(\"Expected Map for 'domain', received \" + domainObj.getClass().getSimpleName() + \"=\" + domainObj);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"]},"commit2Childs":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}