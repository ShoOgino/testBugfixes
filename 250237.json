{"path":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testIndexingDocPerRequestWithHttpSolrClient(long).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testIndexingDocPerRequestWithHttpSolrClient(long).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testIndexingDocPerRequestWithHttpSolrServer(long).mjava","sourceNew":"  private long testIndexingDocPerRequestWithHttpSolrClient(long docId) throws Exception {\n    int docs = random().nextInt(TEST_NIGHTLY ? 4013 : 97) + 1;\n    for (int i = 0; i < docs; i++) {\n      UpdateRequest uReq;\n      uReq = new UpdateRequest();\n      docId = addDoc(docId, uReq);\n      \n      uReq.process(cloudClient);\n      uReq.process(controlClient);\n      \n    }\n    commit();\n    \n    checkShardConsistency();\n    assertDocCounts(VERBOSE);\n    \n    return docId++;\n  }\n\n","sourceOld":"  private long testIndexingDocPerRequestWithHttpSolrServer(long docId) throws Exception {\n    int docs = random().nextInt(TEST_NIGHTLY ? 4013 : 97) + 1;\n    for (int i = 0; i < docs; i++) {\n      UpdateRequest uReq;\n      uReq = new UpdateRequest();\n      docId = addDoc(docId, uReq);\n      \n      uReq.process(cloudClient);\n      uReq.process(controlClient);\n      \n    }\n    commit();\n    \n    checkShardConsistency();\n    assertDocCounts(VERBOSE);\n    \n    return docId++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b","date":1576537086,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testIndexingDocPerRequestWithHttpSolrClient(long).mjava","sourceNew":null,"sourceOld":"  private long testIndexingDocPerRequestWithHttpSolrClient(long docId) throws Exception {\n    int docs = random().nextInt(TEST_NIGHTLY ? 4013 : 97) + 1;\n    for (int i = 0; i < docs; i++) {\n      UpdateRequest uReq;\n      uReq = new UpdateRequest();\n      docId = addDoc(docId, uReq);\n      \n      uReq.process(cloudClient);\n      uReq.process(controlClient);\n      \n    }\n    commit();\n    \n    checkShardConsistency();\n    assertDocCounts(VERBOSE);\n    \n    return docId++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b945b8f5bba0303382bc69d60c0c287714f23328","date":1576586294,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testIndexingDocPerRequestWithHttpSolrClient(long).mjava","sourceNew":null,"sourceOld":"  private long testIndexingDocPerRequestWithHttpSolrClient(long docId) throws Exception {\n    int docs = random().nextInt(TEST_NIGHTLY ? 4013 : 97) + 1;\n    for (int i = 0; i < docs; i++) {\n      UpdateRequest uReq;\n      uReq = new UpdateRequest();\n      docId = addDoc(docId, uReq);\n      \n      uReq.process(cloudClient);\n      uReq.process(controlClient);\n      \n    }\n    commit();\n    \n    checkShardConsistency();\n    assertDocCounts(VERBOSE);\n    \n    return docId++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b945b8f5bba0303382bc69d60c0c287714f23328":["bafca15d8e408346a67f4282ad1143b88023893b","0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b"],"0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["b945b8f5bba0303382bc69d60c0c287714f23328","0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b"],"b945b8f5bba0303382bc69d60c0c287714f23328":[],"0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b":["b945b8f5bba0303382bc69d60c0c287714f23328","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b945b8f5bba0303382bc69d60c0c287714f23328","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}