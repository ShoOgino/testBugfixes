{"path":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setAnalyzeRangeTerms(boolean).mjava","commits":[{"id":"3e492fb0f2bb0b4b47208286f9331ff55963c656","date":1298870150,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setAnalyzeRangeTerms(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set whether or not to analyze range terms when constructing RangeQuerys.\n   * For example, setting this to true can enable analyzing terms into \n   * collation keys for locale-sensitive RangeQuery.\n   * \n   * @param analyzeRangeTerms whether or not terms should be analyzed for RangeQuerys\n   */\n  public void setAnalyzeRangeTerms(boolean analyzeRangeTerms) {\n    this.analyzeRangeTerms = analyzeRangeTerms;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["87778e49fc2a9683c4dc9217a451004dc7edf6da"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setAnalyzeRangeTerms(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set whether or not to analyze range terms when constructing RangeQuerys.\n   * For example, setting this to true can enable analyzing terms into \n   * collation keys for locale-sensitive RangeQuery.\n   * \n   * @param analyzeRangeTerms whether or not terms should be analyzed for RangeQuerys\n   */\n  public void setAnalyzeRangeTerms(boolean analyzeRangeTerms) {\n    this.analyzeRangeTerms = analyzeRangeTerms;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setAnalyzeRangeTerms(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set whether or not to analyze range terms when constructing RangeQuerys.\n   * For example, setting this to true can enable analyzing terms into \n   * collation keys for locale-sensitive RangeQuery.\n   * \n   * @param analyzeRangeTerms whether or not terms should be analyzed for RangeQuerys\n   */\n  public void setAnalyzeRangeTerms(boolean analyzeRangeTerms) {\n    this.analyzeRangeTerms = analyzeRangeTerms;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","date":1310355420,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParserBase#setAnalyzeRangeTerms(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setAnalyzeRangeTerms(boolean).mjava","sourceNew":"  /**\n   * Set whether or not to analyze range terms when constructing RangeQuerys.\n   * For example, setting this to true can enable analyzing terms into \n   * collation keys for locale-sensitive RangeQuery.\n   * \n   * @param analyzeRangeTerms whether or not terms should be analyzed for RangeQuerys\n   */\n  public void setAnalyzeRangeTerms(boolean analyzeRangeTerms) {\n    this.analyzeRangeTerms = analyzeRangeTerms;\n  }\n\n","sourceOld":"  /**\n   * Set whether or not to analyze range terms when constructing RangeQuerys.\n   * For example, setting this to true can enable analyzing terms into \n   * collation keys for locale-sensitive RangeQuery.\n   * \n   * @param analyzeRangeTerms whether or not terms should be analyzed for RangeQuerys\n   */\n  public void setAnalyzeRangeTerms(boolean analyzeRangeTerms) {\n    this.analyzeRangeTerms = analyzeRangeTerms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["3e492fb0f2bb0b4b47208286f9331ff55963c656"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}