{"path":"lucene/core/src/java/org/apache/lucene/store/DataInput#readVLong(boolean).mjava","commits":[{"id":"ee0a782aba5788b03bbf2ba679d4f4b0ebc88493","date":1406810962,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/DataInput#readVLong(boolean).mjava","pathOld":"/dev/null","sourceNew":"  private long readVLong(boolean allowNegative) throws IOException {\n    /* This is the original code of this method,\n     * but a Hotspot bug (see LUCENE-2975) corrupts the for-loop if\n     * readByte() is inlined. So the loop was unwinded!\n    byte b = readByte();\n    long i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7FL) << shift;\n    }\n    return i;\n    */\n    byte b = readByte();\n    if (b >= 0) return b;\n    long i = b & 0x7FL;\n    b = readByte();\n    i |= (b & 0x7FL) << 7;\n    if (b >= 0) return i;\n    b = readByte();\n    i |= (b & 0x7FL) << 14;\n    if (b >= 0) return i;\n    b = readByte();\n    i |= (b & 0x7FL) << 21;\n    if (b >= 0) return i;\n    b = readByte();\n    i |= (b & 0x7FL) << 28;\n    if (b >= 0) return i;\n    b = readByte();\n    i |= (b & 0x7FL) << 35;\n    if (b >= 0) return i;\n    b = readByte();\n    i |= (b & 0x7FL) << 42;\n    if (b >= 0) return i;\n    b = readByte();\n    i |= (b & 0x7FL) << 49;\n    if (b >= 0) return i;\n    b = readByte();\n    i |= (b & 0x7FL) << 56;\n    if (b >= 0) return i;\n    if (allowNegative) {\n      b = readByte();\n      i |= (b & 0x7FL) << 63;\n      if (b == 0 || b == 1) return i;\n      throw new IOException(\"Invalid vLong detected (more than 64 bits)\");\n    } else {\n      throw new IOException(\"Invalid vLong detected (negative values disallowed)\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee0a782aba5788b03bbf2ba679d4f4b0ebc88493":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee0a782aba5788b03bbf2ba679d4f4b0ebc88493"]},"commit2Childs":{"ee0a782aba5788b03bbf2ba679d4f4b0ebc88493":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee0a782aba5788b03bbf2ba679d4f4b0ebc88493"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}