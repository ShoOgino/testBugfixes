{"path":"src/java/org/apache/lucene/analysis/Token#initTermBuffer().mjava","commits":[{"id":"6864413dbc0c12104c978c05456f3da1d45adb03","date":1186770873,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#initTermBuffer().mjava","pathOld":"/dev/null","sourceNew":"  // TODO: once we remove the deprecated termText() method\n  // and switch entirely to char[] termBuffer we don't need\n  // to use this method anymore\n  private void initTermBuffer() {\n    if (termBuffer == null) {\n      if (termText == null) {\n        termBuffer = new char[MIN_BUFFER_SIZE];\n        termLength = 0;\n      } else {\n        int length = termText.length();\n        if (length < MIN_BUFFER_SIZE) length = MIN_BUFFER_SIZE;\n        termBuffer = new char[length];\n        termLength = termText.length();\n        termText.getChars(0, termText.length(), termBuffer, 0);\n        termText = null;\n      }\n    } else if (termText != null)\n      termText = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"881f3cbef4fe1d74529367acf824c7394e2dd11c","date":1248894847,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#initTermBuffer().mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#initTermBuffer().mjava","sourceNew":"  // TODO: once we remove the deprecated termText() method\n  // and switch entirely to char[] termBuffer we don't need\n  // to use this method anymore, only for late init of the buffer\n  private void initTermBuffer() {\n    if (termBuffer == null) {\n      if (termText == null) {\n        termBuffer = new char[ArrayUtil.getNextSize(MIN_BUFFER_SIZE)];\n        termLength = 0;\n      } else {\n        int length = termText.length();\n        if (length < MIN_BUFFER_SIZE) length = MIN_BUFFER_SIZE;\n        termBuffer = new char[ArrayUtil.getNextSize(length)];\n        termLength = termText.length();\n        termText.getChars(0, termText.length(), termBuffer, 0);\n        termText = null;\n      }\n    } else {\n      termText = null;\n    }\n  }\n\n","sourceOld":"  // TODO: once we remove the deprecated termText() method\n  // and switch entirely to char[] termBuffer we don't need\n  // to use this method anymore\n  private void initTermBuffer() {\n    if (termBuffer == null) {\n      if (termText == null) {\n        termBuffer = new char[MIN_BUFFER_SIZE];\n        termLength = 0;\n      } else {\n        int length = termText.length();\n        if (length < MIN_BUFFER_SIZE) length = MIN_BUFFER_SIZE;\n        termBuffer = new char[length];\n        termLength = termText.length();\n        termText.getChars(0, termText.length(), termBuffer, 0);\n        termText = null;\n      }\n    } else if (termText != null)\n      termText = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64af8690a948c97feaa9e2844a0c7051034f153d","date":1255862276,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#initTermBuffer().mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#initTermBuffer().mjava","sourceNew":"  private void initTermBuffer() {\n    if (termBuffer == null) {\n      termBuffer = new char[ArrayUtil.getNextSize(MIN_BUFFER_SIZE)];\n      termLength = 0;\n    }\n  }\n\n","sourceOld":"  // TODO: once we remove the deprecated termText() method\n  // and switch entirely to char[] termBuffer we don't need\n  // to use this method anymore, only for late init of the buffer\n  private void initTermBuffer() {\n    if (termBuffer == null) {\n      if (termText == null) {\n        termBuffer = new char[ArrayUtil.getNextSize(MIN_BUFFER_SIZE)];\n        termLength = 0;\n      } else {\n        int length = termText.length();\n        if (length < MIN_BUFFER_SIZE) length = MIN_BUFFER_SIZE;\n        termBuffer = new char[ArrayUtil.getNextSize(length)];\n        termLength = termText.length();\n        termText.getChars(0, termText.length(), termBuffer, 0);\n        termText = null;\n      }\n    } else {\n      termText = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c26570a4fd6cf0856801c977a2bc9c28a5424c","date":1264074890,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#initTermBuffer().mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#initTermBuffer().mjava","sourceNew":"  private void initTermBuffer() {\n    if (termBuffer == null) {\n      termBuffer = new char[ArrayUtil.oversize(MIN_BUFFER_SIZE, RamUsageEstimator.NUM_BYTES_CHAR)];\n      termLength = 0;\n    }\n  }\n\n","sourceOld":"  private void initTermBuffer() {\n    if (termBuffer == null) {\n      termBuffer = new char[ArrayUtil.getNextSize(MIN_BUFFER_SIZE)];\n      termLength = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66dab5a56cf3f9a3724b15a119a30fd77cbcb662","date":1268038828,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/Token#initTermBuffer().mjava","sourceNew":null,"sourceOld":"  private void initTermBuffer() {\n    if (termBuffer == null) {\n      termBuffer = new char[ArrayUtil.oversize(MIN_BUFFER_SIZE, RamUsageEstimator.NUM_BYTES_CHAR)];\n      termLength = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"881f3cbef4fe1d74529367acf824c7394e2dd11c":["6864413dbc0c12104c978c05456f3da1d45adb03"],"6864413dbc0c12104c978c05456f3da1d45adb03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64af8690a948c97feaa9e2844a0c7051034f153d":["881f3cbef4fe1d74529367acf824c7394e2dd11c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["64af8690a948c97feaa9e2844a0c7051034f153d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"]},"commit2Childs":{"881f3cbef4fe1d74529367acf824c7394e2dd11c":["64af8690a948c97feaa9e2844a0c7051034f153d"],"6864413dbc0c12104c978c05456f3da1d45adb03":["881f3cbef4fe1d74529367acf824c7394e2dd11c"],"64af8690a948c97feaa9e2844a0c7051034f153d":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6864413dbc0c12104c978c05456f3da1d45adb03"],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}