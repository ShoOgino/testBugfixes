{"path":"solr/core/src/java/org/apache/solr/core/ZkContainer#registerInZk(SolrCore).mjava","commits":[{"id":"b29abed5661c7911e4b45d5a3d79a186268e28c4","date":1366675770,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ZkContainer#registerInZk(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#registerInZk(SolrCore).mjava","sourceNew":"  public void registerInZk(SolrCore core) {\n    if (zkController != null) {\n      try {\n        zkController.register(core.getName(), core.getCoreDescriptor());\n      } catch (InterruptedException e) {\n        // Restore the interrupted status\n        Thread.currentThread().interrupt();\n        SolrException.log(log, \"\", e);\n        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR, \"\",\n            e);\n      } catch (Exception e) {\n        // if register fails, this is really bad - close the zkController to\n        // minimize any damage we can cause\n        try {\n          zkController.publish(core.getCoreDescriptor(), ZkStateReader.DOWN);\n        } catch (KeeperException e1) {\n          log.error(\"\", e);\n          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n              \"\", e);\n        } catch (InterruptedException e1) {\n          Thread.currentThread().interrupt();\n          log.error(\"\", e);\n          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n              \"\", e);\n        }\n        SolrException.log(log, \"\", e);\n        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR, \"\",\n            e);\n      }\n    }\n  }\n\n","sourceOld":"  private void registerInZk(SolrCore core) {\n    if (zkController != null) {\n      try {\n        zkController.register(core.getName(), core.getCoreDescriptor());\n      } catch (InterruptedException e) {\n        // Restore the interrupted status\n        Thread.currentThread().interrupt();\n        SolrException.log(log, \"\", e);\n        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR, \"\",\n            e);\n      } catch (Exception e) {\n        // if register fails, this is really bad - close the zkController to\n        // minimize any damage we can cause\n        try {\n          zkController.publish(core.getCoreDescriptor(), ZkStateReader.DOWN);\n        } catch (KeeperException e1) {\n          log.error(\"\", e);\n          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n              \"\", e);\n        } catch (InterruptedException e1) {\n          Thread.currentThread().interrupt();\n          log.error(\"\", e);\n          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n              \"\", e);\n        }\n        SolrException.log(log, \"\", e);\n        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR, \"\",\n            e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97bd2b0da4beced82821b752b29576be986cf1ff","date":1387747012,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/ZkContainer#registerInZk(SolrCore).mjava","sourceNew":null,"sourceOld":"  public void registerInZk(SolrCore core) {\n    if (zkController != null) {\n      try {\n        zkController.register(core.getName(), core.getCoreDescriptor());\n      } catch (InterruptedException e) {\n        // Restore the interrupted status\n        Thread.currentThread().interrupt();\n        SolrException.log(log, \"\", e);\n        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR, \"\",\n            e);\n      } catch (Exception e) {\n        // if register fails, this is really bad - close the zkController to\n        // minimize any damage we can cause\n        try {\n          zkController.publish(core.getCoreDescriptor(), ZkStateReader.DOWN);\n        } catch (KeeperException e1) {\n          log.error(\"\", e);\n          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n              \"\", e);\n        } catch (InterruptedException e1) {\n          Thread.currentThread().interrupt();\n          log.error(\"\", e);\n          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n              \"\", e);\n        }\n        SolrException.log(log, \"\", e);\n        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR, \"\",\n            e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97bd2b0da4beced82821b752b29576be986cf1ff":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97bd2b0da4beced82821b752b29576be986cf1ff"]},"commit2Childs":{"97bd2b0da4beced82821b752b29576be986cf1ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["97bd2b0da4beced82821b752b29576be986cf1ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}