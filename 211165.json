{"path":"src/test/org/apache/solr/core/TestConfig#testJavaProperty().mjava","commits":[{"id":"810d380561c984370e8bfcbf778486c08f7e2cc0","date":1171644169,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestConfig#testJavaProperty().mjava","pathOld":"/dev/null","sourceNew":"  public void testJavaProperty() {\n    // property values defined in build.xml\n\n    String s = SolrConfig.config.get(\"propTest\");\n    assertEquals(\"prefix-proptwo-suffix\", s);\n\n    s = SolrConfig.config.get(\"propTest/@attr1\", \"default\");\n    assertEquals(\"propone-${literal}\", s);\n\n    s = SolrConfig.config.get(\"propTest/@attr2\", \"default\");\n    assertEquals(\"default-from-config\", s);\n\n    s = SolrConfig.config.get(\"propTest[@attr2='default-from-config']\", \"default\");\n    assertEquals(\"prefix-proptwo-suffix\", s);\n\n    NodeList nl = (NodeList) SolrConfig.config.evaluate(\"propTest\", XPathConstants.NODESET);\n    assertEquals(1, nl.getLength());\n    assertEquals(\"prefix-proptwo-suffix\", nl.item(0).getTextContent());\n\n    Node node = SolrConfig.config.getNode(\"propTest\", true);\n    assertEquals(\"prefix-proptwo-suffix\", node.getTextContent());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestConfig#testJavaProperty().mjava","pathOld":"src/test/org/apache/solr/core/TestConfig#testJavaProperty().mjava","sourceNew":"  public void testJavaProperty() {\r\n    // property values defined in build.xml\r\n\r\n    String s = solrConfig.get(\"propTest\");\r\n    assertEquals(\"prefix-proptwo-suffix\", s);\r\n\r\n    s = solrConfig.get(\"propTest/@attr1\", \"default\");\r\n    assertEquals(\"propone-${literal}\", s);\r\n\r\n    s = solrConfig.get(\"propTest/@attr2\", \"default\");\r\n    assertEquals(\"default-from-config\", s);\r\n\r\n    s = solrConfig.get(\"propTest[@attr2='default-from-config']\", \"default\");\r\n    assertEquals(\"prefix-proptwo-suffix\", s);\r\n\r\n    NodeList nl = (NodeList) solrConfig.evaluate(\"propTest\", XPathConstants.NODESET);\r\n    assertEquals(1, nl.getLength());\r\n    assertEquals(\"prefix-proptwo-suffix\", nl.item(0).getTextContent());\r\n\r\n    Node node = solrConfig.getNode(\"propTest\", true);\r\n    assertEquals(\"prefix-proptwo-suffix\", node.getTextContent());\r\n  }\r\n\n","sourceOld":"  public void testJavaProperty() {\n    // property values defined in build.xml\n\n    String s = SolrConfig.config.get(\"propTest\");\n    assertEquals(\"prefix-proptwo-suffix\", s);\n\n    s = SolrConfig.config.get(\"propTest/@attr1\", \"default\");\n    assertEquals(\"propone-${literal}\", s);\n\n    s = SolrConfig.config.get(\"propTest/@attr2\", \"default\");\n    assertEquals(\"default-from-config\", s);\n\n    s = SolrConfig.config.get(\"propTest[@attr2='default-from-config']\", \"default\");\n    assertEquals(\"prefix-proptwo-suffix\", s);\n\n    NodeList nl = (NodeList) SolrConfig.config.evaluate(\"propTest\", XPathConstants.NODESET);\n    assertEquals(1, nl.getLength());\n    assertEquals(\"prefix-proptwo-suffix\", nl.item(0).getTextContent());\n\n    Node node = SolrConfig.config.getNode(\"propTest\", true);\n    assertEquals(\"prefix-proptwo-suffix\", node.getTextContent());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5dc524639edfdfa4edfb67ae889c2b6029f9314c","date":1255358511,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestConfig#testJavaProperty().mjava","pathOld":"src/test/org/apache/solr/core/TestConfig#testJavaProperty().mjava","sourceNew":"  public void testJavaProperty() {\n    // property values defined in build.xml\n\n    String s = solrConfig.get(\"propTest\");\n    assertEquals(\"prefix-proptwo-suffix\", s);\n\n    s = solrConfig.get(\"propTest/@attr1\", \"default\");\n    assertEquals(\"propone-${literal}\", s);\n\n    s = solrConfig.get(\"propTest/@attr2\", \"default\");\n    assertEquals(\"default-from-config\", s);\n\n    s = solrConfig.get(\"propTest[@attr2='default-from-config']\", \"default\");\n    assertEquals(\"prefix-proptwo-suffix\", s);\n\n    NodeList nl = (NodeList) solrConfig.evaluate(\"propTest\", XPathConstants.NODESET);\n    assertEquals(1, nl.getLength());\n    assertEquals(\"prefix-proptwo-suffix\", nl.item(0).getTextContent());\n\n    Node node = solrConfig.getNode(\"propTest\", true);\n    assertEquals(\"prefix-proptwo-suffix\", node.getTextContent());\n  }\n\n","sourceOld":"  public void testJavaProperty() {\r\n    // property values defined in build.xml\r\n\r\n    String s = solrConfig.get(\"propTest\");\r\n    assertEquals(\"prefix-proptwo-suffix\", s);\r\n\r\n    s = solrConfig.get(\"propTest/@attr1\", \"default\");\r\n    assertEquals(\"propone-${literal}\", s);\r\n\r\n    s = solrConfig.get(\"propTest/@attr2\", \"default\");\r\n    assertEquals(\"default-from-config\", s);\r\n\r\n    s = solrConfig.get(\"propTest[@attr2='default-from-config']\", \"default\");\r\n    assertEquals(\"prefix-proptwo-suffix\", s);\r\n\r\n    NodeList nl = (NodeList) solrConfig.evaluate(\"propTest\", XPathConstants.NODESET);\r\n    assertEquals(1, nl.getLength());\r\n    assertEquals(\"prefix-proptwo-suffix\", nl.item(0).getTextContent());\r\n\r\n    Node node = solrConfig.getNode(\"propTest\", true);\r\n    assertEquals(\"prefix-proptwo-suffix\", node.getTextContent());\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestConfig#testJavaProperty().mjava","pathOld":"src/test/org/apache/solr/core/TestConfig#testJavaProperty().mjava","sourceNew":"  public void testJavaProperty() {\n    // property values defined in build.xml\n\n    String s = solrConfig.get(\"propTest\");\n    assertEquals(\"prefix-proptwo-suffix\", s);\n\n    s = solrConfig.get(\"propTest/@attr1\", \"default\");\n    assertEquals(\"propone-${literal}\", s);\n\n    s = solrConfig.get(\"propTest/@attr2\", \"default\");\n    assertEquals(\"default-from-config\", s);\n\n    s = solrConfig.get(\"propTest[@attr2='default-from-config']\", \"default\");\n    assertEquals(\"prefix-proptwo-suffix\", s);\n\n    NodeList nl = (NodeList) solrConfig.evaluate(\"propTest\", XPathConstants.NODESET);\n    assertEquals(1, nl.getLength());\n    assertEquals(\"prefix-proptwo-suffix\", nl.item(0).getTextContent());\n\n    Node node = solrConfig.getNode(\"propTest\", true);\n    assertEquals(\"prefix-proptwo-suffix\", node.getTextContent());\n  }\n\n","sourceOld":"  public void testJavaProperty() {\n    // property values defined in build.xml\n\n    String s = solrConfig.get(\"propTest\");\n    assertEquals(\"prefix-proptwo-suffix\", s);\n\n    s = solrConfig.get(\"propTest/@attr1\", \"default\");\n    assertEquals(\"propone-${literal}\", s);\n\n    s = solrConfig.get(\"propTest/@attr2\", \"default\");\n    assertEquals(\"default-from-config\", s);\n\n    s = solrConfig.get(\"propTest[@attr2='default-from-config']\", \"default\");\n    assertEquals(\"prefix-proptwo-suffix\", s);\n\n    NodeList nl = (NodeList) solrConfig.evaluate(\"propTest\", XPathConstants.NODESET);\n    assertEquals(1, nl.getLength());\n    assertEquals(\"prefix-proptwo-suffix\", nl.item(0).getTextContent());\n\n    Node node = solrConfig.getNode(\"propTest\", true);\n    assertEquals(\"prefix-proptwo-suffix\", node.getTextContent());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["810d380561c984370e8bfcbf778486c08f7e2cc0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["6d6338c87060be5f66757a94945975f3bbd377a9"],"ad94625fb8d088209f46650c8097196fec67f00c":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"810d380561c984370e8bfcbf778486c08f7e2cc0":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["810d380561c984370e8bfcbf778486c08f7e2cc0"],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"810d380561c984370e8bfcbf778486c08f7e2cc0":["6d6338c87060be5f66757a94945975f3bbd377a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}