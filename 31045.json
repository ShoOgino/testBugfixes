{"path":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet#computeHash().mjava","commits":[{"id":"5acb0ee59cc50caf85402e92d148fdb2af61bc19","date":1272929037,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet#computeHash().mjava","pathOld":"/dev/null","sourceNew":"  public void computeHash() {\n    if (useTreeMap) {\n      if (map.size() > values.length) {\n        final int size = ArrayUtil.oversize(map.size(), RamUsageEstimator.NUM_BYTES_INT);\n        values = new int[size];\n        counts = new int[size];\n      }\n      hashCode = map.size();\n      upto = 0;\n      for(int state : map.keySet()) {\n        hashCode = 683*hashCode + state;\n        values[upto++] = state;\n      }\n    } else {\n      hashCode = upto;\n      for(int i=0;i<upto;i++) {\n        hashCode = 683*hashCode + values[i];\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d6b23a02f76f15e0dd99a6951055a45aa5c43c48"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet#computeHash().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet#computeHash().mjava","sourceNew":"  public void computeHash() {\n    if (useTreeMap) {\n      if (map.size() > values.length) {\n        final int size = ArrayUtil.oversize(map.size(), RamUsageEstimator.NUM_BYTES_INT);\n        values = new int[size];\n        counts = new int[size];\n      }\n      hashCode = map.size();\n      upto = 0;\n      for(int state : map.keySet()) {\n        hashCode = 683*hashCode + state;\n        values[upto++] = state;\n      }\n    } else {\n      hashCode = upto;\n      for(int i=0;i<upto;i++) {\n        hashCode = 683*hashCode + values[i];\n      }\n    }\n  }\n\n","sourceOld":"  public void computeHash() {\n    if (useTreeMap) {\n      if (map.size() > values.length) {\n        final int size = ArrayUtil.oversize(map.size(), RamUsageEstimator.NUM_BYTES_INT);\n        values = new int[size];\n        counts = new int[size];\n      }\n      hashCode = map.size();\n      upto = 0;\n      for(int state : map.keySet()) {\n        hashCode = 683*hashCode + state;\n        values[upto++] = state;\n      }\n    } else {\n      hashCode = upto;\n      for(int i=0;i<upto;i++) {\n        hashCode = 683*hashCode + values[i];\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}