{"path":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter#highlightTerm(String,TokenGroup).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter#highlightTerm(String,TokenGroup).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter#highlightTerm(String,TokenGroup).mjava","sourceNew":"\t@Override\n\tpublic String highlightTerm(String originalText, TokenGroup tokenGroup)\n    {\n        if (tokenGroup.getTotalScore() == 0)\n            return originalText;\n        float score = tokenGroup.getTotalScore();\n        if (score == 0)\n        {\n            return originalText;\n        }\n\n\t\t// try to size sb correctly\n        StringBuilder sb = new StringBuilder( originalText.length() + EXTRA);\n\t\t\n\t\tsb.append(\"<span style=\\\"\"); \n\t\tif (highlightForeground) \n\t\t{\n\t\t\tsb.append(\"color: \"); \n\t\t\tsb.append(getForegroundColorString(score)); \n\t\t\tsb.append(\"; \"); \n\t\t}\n\t\tif (highlightBackground)\n\t\t{\n\t\t\tsb.append(\"background: \");\n\t\t\tsb.append(getBackgroundColorString(score));\n\t\t\tsb.append(\"; \");\n\t\t}\n\t\tsb.append(\"\\\">\");\n\t\tsb.append(originalText);\n\t\tsb.append(\"</span>\");\n        return sb.toString();\n    }\n\n","sourceOld":"\t@Override\n\tpublic String highlightTerm(String originalText, TokenGroup tokenGroup)\n    {\n        if (tokenGroup.getTotalScore() == 0)\n            return originalText;\n        float score = tokenGroup.getTotalScore();\n        if (score == 0)\n        {\n            return originalText;\n        }\n\n\t\t// try to size sb correctly\n        StringBuilder sb = new StringBuilder( originalText.length() + EXTRA);\n\t\t\n\t\tsb.append(\"<span style=\\\"\"); \n\t\tif (highlightForeground) \n\t\t{\n\t\t\tsb.append(\"color: \"); \n\t\t\tsb.append(getForegroundColorString(score)); \n\t\t\tsb.append(\"; \"); \n\t\t}\n\t\tif (highlightBackground)\n\t\t{\n\t\t\tsb.append(\"background: \");\n\t\t\tsb.append(getBackgroundColorString(score));\n\t\t\tsb.append(\"; \");\n\t\t}\n\t\tsb.append(\"\\\">\");\n\t\tsb.append(originalText);\n\t\tsb.append(\"</span>\");\n        return sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter#highlightTerm(String,TokenGroup).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter#highlightTerm(String,TokenGroup).mjava","sourceNew":"  @Override\n  public String highlightTerm(String originalText, TokenGroup tokenGroup) {\n    if (tokenGroup.getTotalScore() == 0)\n      return originalText;\n    float score = tokenGroup.getTotalScore();\n    if (score == 0) {\n      return originalText;\n    }\n\n    // try to size sb correctly\n    StringBuilder sb = new StringBuilder(originalText.length() + EXTRA);\n\n    sb.append(\"<span style=\\\"\");\n    if (highlightForeground) {\n      sb.append(\"color: \");\n      sb.append(getForegroundColorString(score));\n      sb.append(\"; \");\n    }\n    if (highlightBackground) {\n      sb.append(\"background: \");\n      sb.append(getBackgroundColorString(score));\n      sb.append(\"; \");\n    }\n    sb.append(\"\\\">\");\n    sb.append(originalText);\n    sb.append(\"</span>\");\n    return sb.toString();\n  }\n\n","sourceOld":"\t@Override\n\tpublic String highlightTerm(String originalText, TokenGroup tokenGroup)\n    {\n        if (tokenGroup.getTotalScore() == 0)\n            return originalText;\n        float score = tokenGroup.getTotalScore();\n        if (score == 0)\n        {\n            return originalText;\n        }\n\n\t\t// try to size sb correctly\n        StringBuilder sb = new StringBuilder( originalText.length() + EXTRA);\n\t\t\n\t\tsb.append(\"<span style=\\\"\"); \n\t\tif (highlightForeground) \n\t\t{\n\t\t\tsb.append(\"color: \"); \n\t\t\tsb.append(getForegroundColorString(score)); \n\t\t\tsb.append(\"; \"); \n\t\t}\n\t\tif (highlightBackground)\n\t\t{\n\t\t\tsb.append(\"background: \");\n\t\t\tsb.append(getBackgroundColorString(score));\n\t\t\tsb.append(\"; \");\n\t\t}\n\t\tsb.append(\"\\\">\");\n\t\tsb.append(originalText);\n\t\tsb.append(\"</span>\");\n        return sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter#highlightTerm(String,TokenGroup).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter#highlightTerm(String,TokenGroup).mjava","sourceNew":"  @Override\n  public String highlightTerm(String originalText, TokenGroup tokenGroup) {\n    if (tokenGroup.getTotalScore() == 0)\n      return originalText;\n    float score = tokenGroup.getTotalScore();\n    if (score == 0) {\n      return originalText;\n    }\n\n    // try to size sb correctly\n    StringBuilder sb = new StringBuilder(originalText.length() + EXTRA);\n\n    sb.append(\"<span style=\\\"\");\n    if (highlightForeground) {\n      sb.append(\"color: \");\n      sb.append(getForegroundColorString(score));\n      sb.append(\"; \");\n    }\n    if (highlightBackground) {\n      sb.append(\"background: \");\n      sb.append(getBackgroundColorString(score));\n      sb.append(\"; \");\n    }\n    sb.append(\"\\\">\");\n    sb.append(originalText);\n    sb.append(\"</span>\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String highlightTerm(String originalText, TokenGroup tokenGroup) {\n    if (tokenGroup.getTotalScore() == 0)\n      return originalText;\n    float score = tokenGroup.getTotalScore();\n    if (score == 0) {\n      return originalText;\n    }\n\n    // try to size sb correctly\n    StringBuilder sb = new StringBuilder(originalText.length() + EXTRA);\n\n    sb.append(\"<span style=\\\"\");\n    if (highlightForeground) {\n      sb.append(\"color: \");\n      sb.append(getForegroundColorString(score));\n      sb.append(\"; \");\n    }\n    if (highlightBackground) {\n      sb.append(\"background: \");\n      sb.append(getBackgroundColorString(score));\n      sb.append(\"; \");\n    }\n    sb.append(\"\\\">\");\n    sb.append(originalText);\n    sb.append(\"</span>\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter#highlightTerm(String,TokenGroup).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/SpanGradientFormatter#highlightTerm(String,TokenGroup).mjava","sourceNew":"  @Override\n  public String highlightTerm(String originalText, TokenGroup tokenGroup) {\n    if (tokenGroup.getTotalScore() == 0)\n      return originalText;\n    float score = tokenGroup.getTotalScore();\n    if (score == 0) {\n      return originalText;\n    }\n\n    // try to size sb correctly\n    StringBuilder sb = new StringBuilder(originalText.length() + EXTRA);\n\n    sb.append(\"<span style=\\\"\");\n    if (highlightForeground) {\n      sb.append(\"color: \");\n      sb.append(getForegroundColorString(score));\n      sb.append(\"; \");\n    }\n    if (highlightBackground) {\n      sb.append(\"background: \");\n      sb.append(getBackgroundColorString(score));\n      sb.append(\"; \");\n    }\n    sb.append(\"\\\">\");\n    sb.append(originalText);\n    sb.append(\"</span>\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String highlightTerm(String originalText, TokenGroup tokenGroup) {\n    if (tokenGroup.getTotalScore() == 0)\n      return originalText;\n    float score = tokenGroup.getTotalScore();\n    if (score == 0) {\n      return originalText;\n    }\n\n    // try to size sb correctly\n    StringBuilder sb = new StringBuilder(originalText.length() + EXTRA);\n\n    sb.append(\"<span style=\\\"\");\n    if (highlightForeground) {\n      sb.append(\"color: \");\n      sb.append(getForegroundColorString(score));\n      sb.append(\"; \");\n    }\n    if (highlightBackground) {\n      sb.append(\"background: \");\n      sb.append(getBackgroundColorString(score));\n      sb.append(\"; \");\n    }\n    sb.append(\"\\\">\");\n    sb.append(originalText);\n    sb.append(\"</span>\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}