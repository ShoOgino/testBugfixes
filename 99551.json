{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#QuadPrefixTree(SpatialContext,Rectangle,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#QuadPrefixTree(SpatialContext,Rectangle,int).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#QuadPrefixTree(SpatialContext,Rectangle,int).mjava","sourceNew":"  public QuadPrefixTree(\n      SpatialContext ctx, Rectangle bounds, int maxLevels) {\n    super(ctx, maxLevels);\n    this.xmin = bounds.getMinX();\n    this.xmax = bounds.getMaxX();\n    this.ymin = bounds.getMinY();\n    this.ymax = bounds.getMaxY();\n\n    levelW = new double[maxLevels];\n    levelH = new double[maxLevels];\n    levelS = new int[maxLevels];\n    levelN = new int[maxLevels];\n\n    gridW = xmax - xmin;\n    gridH = ymax - ymin;\n    this.xmid = xmin + gridW/2.0;\n    this.ymid = ymin + gridH/2.0;\n    levelW[0] = gridW/2.0;\n    levelH[0] = gridH/2.0;\n    levelS[0] = 2;\n    levelN[0] = 4;\n\n    for (int i = 1; i < levelW.length; i++) {\n      levelW[i] = levelW[i - 1] / 2.0;\n      levelH[i] = levelH[i - 1] / 2.0;\n      levelS[i] = levelS[i - 1] * 2;\n      levelN[i] = levelN[i - 1] * 4;\n    }\n  }\n\n","sourceOld":"  public QuadPrefixTree(\n      SpatialContext ctx, Rectangle bounds, int maxLevels) {\n    super(ctx, maxLevels);\n    this.xmin = bounds.getMinX();\n    this.xmax = bounds.getMaxX();\n    this.ymin = bounds.getMinY();\n    this.ymax = bounds.getMaxY();\n\n    levelW = new double[maxLevels];\n    levelH = new double[maxLevels];\n    levelS = new int[maxLevels];\n    levelN = new int[maxLevels];\n\n    gridW = xmax - xmin;\n    gridH = ymax - ymin;\n    this.xmid = xmin + gridW/2.0;\n    this.ymid = ymin + gridH/2.0;\n    levelW[0] = gridW/2.0;\n    levelH[0] = gridH/2.0;\n    levelS[0] = 2;\n    levelN[0] = 4;\n\n    for (int i = 1; i < levelW.length; i++) {\n      levelW[i] = levelW[i - 1] / 2.0;\n      levelH[i] = levelH[i - 1] / 2.0;\n      levelS[i] = levelS[i - 1] * 2;\n      levelN[i] = levelN[i - 1] * 4;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#QuadPrefixTree(SpatialContext,Rectangle,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#QuadPrefixTree(SpatialContext,Rectangle,int).mjava","sourceNew":"  public QuadPrefixTree(\n      SpatialContext ctx, Rectangle bounds, int maxLevels) {\n    super(ctx, maxLevels);\n    this.xmin = bounds.getMinX();\n    this.xmax = bounds.getMaxX();\n    this.ymin = bounds.getMinY();\n    this.ymax = bounds.getMaxY();\n\n    levelW = new double[maxLevels];\n    levelH = new double[maxLevels];\n    levelS = new int[maxLevels];\n    levelN = new int[maxLevels];\n\n    gridW = xmax - xmin;\n    gridH = ymax - ymin;\n    this.xmid = xmin + gridW/2.0;\n    this.ymid = ymin + gridH/2.0;\n    levelW[0] = gridW/2.0;\n    levelH[0] = gridH/2.0;\n    levelS[0] = 2;\n    levelN[0] = 4;\n\n    for (int i = 1; i < levelW.length; i++) {\n      levelW[i] = levelW[i - 1] / 2.0;\n      levelH[i] = levelH[i - 1] / 2.0;\n      levelS[i] = levelS[i - 1] * 2;\n      levelN[i] = levelN[i - 1] * 4;\n    }\n  }\n\n","sourceOld":"  public QuadPrefixTree(\n      SpatialContext ctx, Rectangle bounds, int maxLevels) {\n    super(ctx, maxLevels);\n    this.xmin = bounds.getMinX();\n    this.xmax = bounds.getMaxX();\n    this.ymin = bounds.getMinY();\n    this.ymax = bounds.getMaxY();\n\n    levelW = new double[maxLevels];\n    levelH = new double[maxLevels];\n    levelS = new int[maxLevels];\n    levelN = new int[maxLevels];\n\n    gridW = xmax - xmin;\n    gridH = ymax - ymin;\n    this.xmid = xmin + gridW/2.0;\n    this.ymid = ymin + gridH/2.0;\n    levelW[0] = gridW/2.0;\n    levelH[0] = gridH/2.0;\n    levelS[0] = 2;\n    levelN[0] = 4;\n\n    for (int i = 1; i < levelW.length; i++) {\n      levelW[i] = levelW[i - 1] / 2.0;\n      levelH[i] = levelH[i - 1] / 2.0;\n      levelS[i] = levelS[i - 1] * 2;\n      levelN[i] = levelN[i - 1] * 4;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#QuadPrefixTree(SpatialContext,Rectangle,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/QuadPrefixTree#QuadPrefixTree(SpatialContext,Rectangle,int).mjava","sourceNew":"  public QuadPrefixTree(\n      SpatialContext ctx, Rectangle bounds, int maxLevels) {\n    super(ctx, maxLevels);\n    this.xmin = bounds.getMinX();\n    this.xmax = bounds.getMaxX();\n    this.ymin = bounds.getMinY();\n    this.ymax = bounds.getMaxY();\n\n    levelW = new double[maxLevels];\n    levelH = new double[maxLevels];\n    levelS = new int[maxLevels];\n    levelN = new int[maxLevels];\n\n    gridW = xmax - xmin;\n    gridH = ymax - ymin;\n    this.xmid = xmin + gridW/2.0;\n    this.ymid = ymin + gridH/2.0;\n    levelW[0] = gridW/2.0;\n    levelH[0] = gridH/2.0;\n    levelS[0] = 2;\n    levelN[0] = 4;\n\n    for (int i = 1; i < levelW.length; i++) {\n      levelW[i] = levelW[i - 1] / 2.0;\n      levelH[i] = levelH[i - 1] / 2.0;\n      levelS[i] = levelS[i - 1] * 2;\n      levelN[i] = levelN[i - 1] * 4;\n    }\n  }\n\n","sourceOld":"  public QuadPrefixTree(\n      SpatialContext ctx, Rectangle bounds, int maxLevels) {\n    super(ctx, maxLevels);\n    this.xmin = bounds.getMinX();\n    this.xmax = bounds.getMaxX();\n    this.ymin = bounds.getMinY();\n    this.ymax = bounds.getMaxY();\n\n    levelW = new double[maxLevels];\n    levelH = new double[maxLevels];\n    levelS = new int[maxLevels];\n    levelN = new int[maxLevels];\n\n    gridW = xmax - xmin;\n    gridH = ymax - ymin;\n    this.xmid = xmin + gridW/2.0;\n    this.ymid = ymin + gridH/2.0;\n    levelW[0] = gridW/2.0;\n    levelH[0] = gridH/2.0;\n    levelS[0] = 2;\n    levelN[0] = 4;\n\n    for (int i = 1; i < levelW.length; i++) {\n      levelW[i] = levelW[i - 1] / 2.0;\n      levelH[i] = levelH[i - 1] / 2.0;\n      levelS[i] = levelS[i - 1] * 2;\n      levelN[i] = levelN[i - 1] * 4;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["b89678825b68eccaf09e6ab71675fc0b0af1e099","112d77ac8d3e10a362516ad834c9a11d35c94234"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}