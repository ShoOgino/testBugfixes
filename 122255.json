{"path":"solr/core/src/test/org/apache/solr/handler/admin/SplitHandlerTest#eqCount(Collection[SplitOp.RangeCount],Collection[SplitOp.RangeCount]).mjava","commits":[{"id":"36bdabc04743acfe0e82c9cf8208b1111b2b193a","date":1565115020,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/SplitHandlerTest#eqCount(Collection[SplitOp.RangeCount],Collection[SplitOp.RangeCount]).mjava","pathOld":"/dev/null","sourceNew":"  private boolean eqCount(Collection<SplitOp.RangeCount> a, Collection<SplitOp.RangeCount> b) {\n    Iterator<SplitOp.RangeCount> it1 = a.iterator();\n    Iterator<SplitOp.RangeCount> it2 = b.iterator();\n    while (it1.hasNext()) {\n      SplitOp.RangeCount r1 = it1.next();\n      SplitOp.RangeCount r2 = it2.next();\n      if (!r1.range.equals(r2.range) || r1.count != r2.count) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a97a72dc16d01fda8ca5c9e0264b3604e30ab539","date":1565639985,"type":3,"author":"Megan Carey","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/SplitHandlerTest#eqCount(Collection[SplitOp.RangeCount],Collection[SplitOp.RangeCount]).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/SplitHandlerTest#eqCount(Collection[SplitOp.RangeCount],Collection[SplitOp.RangeCount]).mjava","sourceNew":"  private boolean eqCount(Collection<SplitOp.RangeCount> a, Collection<SplitOp.RangeCount> b) {\n    if (a.size() != b.size()) {\n      return false;\n    }\n    \n    Iterator<SplitOp.RangeCount> it1 = a.iterator();\n    Iterator<SplitOp.RangeCount> it2 = b.iterator();\n    while (it1.hasNext()) {\n      SplitOp.RangeCount r1 = it1.next();\n      SplitOp.RangeCount r2 = it2.next();\n      if (!r1.range.equals(r2.range) || r1.count != r2.count) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  private boolean eqCount(Collection<SplitOp.RangeCount> a, Collection<SplitOp.RangeCount> b) {\n    Iterator<SplitOp.RangeCount> it1 = a.iterator();\n    Iterator<SplitOp.RangeCount> it2 = b.iterator();\n    while (it1.hasNext()) {\n      SplitOp.RangeCount r1 = it1.next();\n      SplitOp.RangeCount r2 = it2.next();\n      if (!r1.range.equals(r2.range) || r1.count != r2.count) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"36bdabc04743acfe0e82c9cf8208b1111b2b193a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a97a72dc16d01fda8ca5c9e0264b3604e30ab539"],"a97a72dc16d01fda8ca5c9e0264b3604e30ab539":["36bdabc04743acfe0e82c9cf8208b1111b2b193a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36bdabc04743acfe0e82c9cf8208b1111b2b193a"],"36bdabc04743acfe0e82c9cf8208b1111b2b193a":["a97a72dc16d01fda8ca5c9e0264b3604e30ab539"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"a97a72dc16d01fda8ca5c9e0264b3604e30ab539":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}