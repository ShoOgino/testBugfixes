{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/response/Cluster#hashCode().mjava","commits":[{"id":"06b9a8e8cd9cc9a3abf5a6ff15e49624e225b22a","date":1435674390,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/Cluster#hashCode().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int hashCode() {\n    int result;\n    long temp;\n    result = labels.hashCode();\n    temp = Double.doubleToLongBits(score);\n    result = 31 * result + (int) (temp ^ (temp >>> 32));\n    result = 31 * result + docIds.hashCode();\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fd93fae83846b8c0667d607d80e2654cb02ffcd","date":1478528847,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/Cluster#hashCode().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/Cluster#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    return Objects.hash(subclusters, docIds, labels, score);\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    int result;\n    long temp;\n    result = labels.hashCode();\n    temp = Double.doubleToLongBits(score);\n    result = 31 * result + (int) (temp ^ (temp >>> 32));\n    result = 31 * result + docIds.hashCode();\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/Cluster#hashCode().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/Cluster#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    return Objects.hash(subclusters, docIds, labels, score);\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    int result;\n    long temp;\n    result = labels.hashCode();\n    temp = Double.doubleToLongBits(score);\n    result = 31 * result + (int) (temp ^ (temp >>> 32));\n    result = 31 * result + docIds.hashCode();\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7fd93fae83846b8c0667d607d80e2654cb02ffcd":["06b9a8e8cd9cc9a3abf5a6ff15e49624e225b22a"],"06b9a8e8cd9cc9a3abf5a6ff15e49624e225b22a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["06b9a8e8cd9cc9a3abf5a6ff15e49624e225b22a","7fd93fae83846b8c0667d607d80e2654cb02ffcd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7fd93fae83846b8c0667d607d80e2654cb02ffcd"]},"commit2Childs":{"7fd93fae83846b8c0667d607d80e2654cb02ffcd":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06b9a8e8cd9cc9a3abf5a6ff15e49624e225b22a":["7fd93fae83846b8c0667d607d80e2654cb02ffcd","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06b9a8e8cd9cc9a3abf5a6ff15e49624e225b22a"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}