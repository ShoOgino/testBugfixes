{"path":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","commits":[{"id":"f001da93ec624cbfbf3655c529836b5b1ec1aa46","date":1412885266,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n      QueryResponse rsp = queryServer(p);\n      assertEquals(\"partialResults were expected\", true, rsp.getHeader().get(\"partialResults\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n      QueryResponse rsp = queryServer(p);\n      assertEquals(\"partialResults were expected\", true, rsp.getHeader().get(\"partialResults\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83b038ad0480d5e81e058bf9fafb2dd85399985d","date":1450812495,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","sourceNew":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n      QueryResponse rsp = queryServer(p);\n      assertEquals(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY+\" were expected\",\n          true, rsp.getHeader().get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY));\n  }\n\n","sourceOld":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n      QueryResponse rsp = queryServer(p);\n      assertEquals(\"partialResults were expected\", true, rsp.getHeader().get(\"partialResults\"));\n  }\n\n","bugFix":null,"bugIntro":["a3584d3db8b472772e3329d9d95d584b68ae997e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ebf70dabe6279454c5ff460bdea3f0dc2814a86","date":1463672611,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","sourceNew":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n      QueryResponse rsp = cluster.getSolrClient().query(COLLECTION, p);\n      assertEquals(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY+\" were expected\",\n          true, rsp.getHeader().get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY));\n  }\n\n","sourceOld":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n      QueryResponse rsp = queryServer(p);\n      assertEquals(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY+\" were expected\",\n          true, rsp.getHeader().get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY));\n  }\n\n","bugFix":null,"bugIntro":["a3584d3db8b472772e3329d9d95d584b68ae997e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","sourceNew":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n      QueryResponse rsp = cluster.getSolrClient().query(COLLECTION, p);\n      assertEquals(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY+\" were expected\",\n          true, rsp.getHeader().get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY));\n  }\n\n","sourceOld":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n      QueryResponse rsp = queryServer(p);\n      assertEquals(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY+\" were expected\",\n          true, rsp.getHeader().get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","sourceNew":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n      QueryResponse rsp = cluster.getSolrClient().query(COLLECTION, p);\n      assertEquals(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY+\" were expected\",\n          true, rsp.getHeader().get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY));\n  }\n\n","sourceOld":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n      QueryResponse rsp = queryServer(p);\n      assertEquals(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY+\" were expected\",\n          true, rsp.getHeader().get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3584d3db8b472772e3329d9d95d584b68ae997e","date":1551710517,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CloudExitableDirectoryReaderTest#assertPartialResults(ModifiableSolrParams).mjava","sourceNew":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n    assertPartialResults(p, ()->{});\n  }\n\n","sourceOld":"  /**\n   * execute a request, verify that we get an expected error\n   */\n  public void assertPartialResults(ModifiableSolrParams p) throws Exception {\n      QueryResponse rsp = cluster.getSolrClient().query(COLLECTION, p);\n      assertEquals(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY+\" were expected\",\n          true, rsp.getHeader().get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY));\n  }\n\n","bugFix":["5ebf70dabe6279454c5ff460bdea3f0dc2814a86","83b038ad0480d5e81e058bf9fafb2dd85399985d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55980207f1977bd1463465de1659b821347e2fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f001da93ec624cbfbf3655c529836b5b1ec1aa46"],"f001da93ec624cbfbf3655c529836b5b1ec1aa46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3584d3db8b472772e3329d9d95d584b68ae997e":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"5ebf70dabe6279454c5ff460bdea3f0dc2814a86":["83b038ad0480d5e81e058bf9fafb2dd85399985d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["83b038ad0480d5e81e058bf9fafb2dd85399985d","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3584d3db8b472772e3329d9d95d584b68ae997e"],"83b038ad0480d5e81e058bf9fafb2dd85399985d":["f001da93ec624cbfbf3655c529836b5b1ec1aa46"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["83b038ad0480d5e81e058bf9fafb2dd85399985d","5ebf70dabe6279454c5ff460bdea3f0dc2814a86"]},"commit2Childs":{"55980207f1977bd1463465de1659b821347e2fa8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55980207f1977bd1463465de1659b821347e2fa8","f001da93ec624cbfbf3655c529836b5b1ec1aa46"],"f001da93ec624cbfbf3655c529836b5b1ec1aa46":["55980207f1977bd1463465de1659b821347e2fa8","83b038ad0480d5e81e058bf9fafb2dd85399985d"],"a3584d3db8b472772e3329d9d95d584b68ae997e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ebf70dabe6279454c5ff460bdea3f0dc2814a86":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a3584d3db8b472772e3329d9d95d584b68ae997e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"83b038ad0480d5e81e058bf9fafb2dd85399985d":["5ebf70dabe6279454c5ff460bdea3f0dc2814a86","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}