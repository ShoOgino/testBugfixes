{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestParallelWeightCreation#testLTRScoringQueryParallelWeightCreationResultOrder().mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestParallelWeightCreation#testLTRScoringQueryParallelWeightCreationResultOrder().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLTRScoringQueryParallelWeightCreationResultOrder() throws Exception {\n    setuptest(\"solrconfig-ltr_Th10_10.xml\", \"schema.xml\");\n\n    assertU(adoc(\"id\", \"1\", \"title\", \"w1 w3\", \"description\", \"w1\", \"popularity\",\n        \"1\"));\n    assertU(adoc(\"id\", \"2\", \"title\", \"w2\", \"description\", \"w2\", \"popularity\",\n        \"2\"));\n    assertU(adoc(\"id\", \"3\", \"title\", \"w3\", \"description\", \"w3\", \"popularity\",\n        \"3\"));\n    assertU(adoc(\"id\", \"4\", \"title\", \"w4 w3\", \"description\", \"w4\", \"popularity\",\n        \"4\"));\n    assertU(adoc(\"id\", \"5\", \"title\", \"w5\", \"description\", \"w5\", \"popularity\",\n        \"5\"));\n    assertU(commit());\n\n    loadFeatures(\"external_features.json\");\n    loadModels(\"external_model.json\");\n    loadModels(\"external_model_store.json\");\n\n    // check to make sure that the order of results will be the same when using parallel weight creation\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*,score\");\n    query.add(\"rows\", \"4\");\n\n    query.add(\"rq\", \"{!ltr reRankDocs=4 model=externalmodel efi.user_query=w3}\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/id=='1'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[1]/id=='3'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[2]/id=='4'\");\n    aftertest();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestParallelWeightCreation#testLTRScoringQueryParallelWeightCreationResultOrder().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLTRScoringQueryParallelWeightCreationResultOrder() throws Exception {\n    setuptest(\"solrconfig-ltr_Th10_10.xml\", \"schema.xml\");\n\n    assertU(adoc(\"id\", \"1\", \"title\", \"w1 w3\", \"description\", \"w1\", \"popularity\",\n        \"1\"));\n    assertU(adoc(\"id\", \"2\", \"title\", \"w2\", \"description\", \"w2\", \"popularity\",\n        \"2\"));\n    assertU(adoc(\"id\", \"3\", \"title\", \"w3\", \"description\", \"w3\", \"popularity\",\n        \"3\"));\n    assertU(adoc(\"id\", \"4\", \"title\", \"w4 w3\", \"description\", \"w4\", \"popularity\",\n        \"4\"));\n    assertU(adoc(\"id\", \"5\", \"title\", \"w5\", \"description\", \"w5\", \"popularity\",\n        \"5\"));\n    assertU(commit());\n\n    loadFeatures(\"external_features.json\");\n    loadModels(\"external_model.json\");\n    loadModels(\"external_model_store.json\");\n\n    // check to make sure that the order of results will be the same when using parallel weight creation\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*,score\");\n    query.add(\"rows\", \"4\");\n\n    query.add(\"rq\", \"{!ltr reRankDocs=4 model=externalmodel efi.user_query=w3}\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/id=='1'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[1]/id=='3'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[2]/id=='4'\");\n    aftertest();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eb6d1b3417708a3e41731ad9fabbecae8f08ca8","date":1486937063,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestParallelWeightCreation#testLTRScoringQueryParallelWeightCreationResultOrder().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestParallelWeightCreation#testLTRScoringQueryParallelWeightCreationResultOrder().mjava","sourceNew":"  @Test\n  public void testLTRScoringQueryParallelWeightCreationResultOrder() throws Exception {\n    setuptest(\"solrconfig-ltr_Th10_10.xml\", \"schema.xml\");\n\n    assertU(adoc(\"id\", \"1\", \"title\", \"w1 w3\", \"description\", \"w1\", \"popularity\", \"1\"));\n    assertU(adoc(\"id\", \"2\", \"title\", \"w2\",    \"description\", \"w2\", \"popularity\", \"2\"));\n    assertU(adoc(\"id\", \"3\", \"title\", \"w3\",    \"description\", \"w3\", \"popularity\", \"3\"));\n    assertU(adoc(\"id\", \"4\", \"title\", \"w3 w3\", \"description\", \"w4\", \"popularity\", \"4\"));\n    assertU(adoc(\"id\", \"5\", \"title\", \"w5\",    \"description\", \"w5\", \"popularity\", \"5\"));\n    assertU(commit());\n\n    loadFeatures(\"external_features.json\");\n    loadModels(\"external_model.json\");\n\n    // check to make sure that the order of results will be the same when using parallel weight creation\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*,score\");\n    query.add(\"rows\", \"4\");\n\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=externalmodel efi.user_query=w3}\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/id=='3'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[1]/id=='4'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[2]/id=='1'\");\n    aftertest();\n  }\n\n","sourceOld":"  @Test\n  public void testLTRScoringQueryParallelWeightCreationResultOrder() throws Exception {\n    setuptest(\"solrconfig-ltr_Th10_10.xml\", \"schema.xml\");\n\n    assertU(adoc(\"id\", \"1\", \"title\", \"w1 w3\", \"description\", \"w1\", \"popularity\",\n        \"1\"));\n    assertU(adoc(\"id\", \"2\", \"title\", \"w2\", \"description\", \"w2\", \"popularity\",\n        \"2\"));\n    assertU(adoc(\"id\", \"3\", \"title\", \"w3\", \"description\", \"w3\", \"popularity\",\n        \"3\"));\n    assertU(adoc(\"id\", \"4\", \"title\", \"w4 w3\", \"description\", \"w4\", \"popularity\",\n        \"4\"));\n    assertU(adoc(\"id\", \"5\", \"title\", \"w5\", \"description\", \"w5\", \"popularity\",\n        \"5\"));\n    assertU(commit());\n\n    loadFeatures(\"external_features.json\");\n    loadModels(\"external_model.json\");\n    loadModels(\"external_model_store.json\");\n\n    // check to make sure that the order of results will be the same when using parallel weight creation\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*,score\");\n    query.add(\"rows\", \"4\");\n\n    query.add(\"rq\", \"{!ltr reRankDocs=4 model=externalmodel efi.user_query=w3}\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/id=='1'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[1]/id=='3'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[2]/id=='4'\");\n    aftertest();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bdb2cc4f9faf189f58741efc500174d8a49c03c5","date":1495657687,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestParallelWeightCreation#testLTRScoringQueryParallelWeightCreationResultOrder().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestParallelWeightCreation#testLTRScoringQueryParallelWeightCreationResultOrder().mjava","sourceNew":"  @Test\n  public void testLTRScoringQueryParallelWeightCreationResultOrder() throws Exception {\n    setuptest(\"solrconfig-ltr_Th10_10.xml\", \"schema.xml\");\n\n    assertU(adoc(\"id\", \"1\", \"title\", \"w1 w3\", \"description\", \"w1\", \"popularity\", \"1\"));\n    assertU(adoc(\"id\", \"2\", \"title\", \"w2\",    \"description\", \"w2\", \"popularity\", \"2\"));\n    assertU(adoc(\"id\", \"3\", \"title\", \"w3\",    \"description\", \"w3\", \"popularity\", \"3\"));\n    assertU(adoc(\"id\", \"4\", \"title\", \"w3 w3\", \"description\", \"w4\", \"popularity\", \"4\"));\n    assertU(adoc(\"id\", \"5\", \"title\", \"w5\",    \"description\", \"w5\", \"popularity\", \"5\"));\n    assertU(commit());\n\n    loadFeatures(\"external_features.json\");\n    loadModels(\"external_model.json\");\n\n    // check to make sure that the order of results will be the same when using parallel weight creation\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*,score\");\n    query.add(\"rows\", \"4\");\n\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=externalmodel efi.user_query=w3}\");\n    // SOLR-10710, feature based on query with term w3 now scores higher on doc 4, updated\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/id=='4'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[1]/id=='3'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[2]/id=='1'\");\n    aftertest();\n  }\n\n","sourceOld":"  @Test\n  public void testLTRScoringQueryParallelWeightCreationResultOrder() throws Exception {\n    setuptest(\"solrconfig-ltr_Th10_10.xml\", \"schema.xml\");\n\n    assertU(adoc(\"id\", \"1\", \"title\", \"w1 w3\", \"description\", \"w1\", \"popularity\", \"1\"));\n    assertU(adoc(\"id\", \"2\", \"title\", \"w2\",    \"description\", \"w2\", \"popularity\", \"2\"));\n    assertU(adoc(\"id\", \"3\", \"title\", \"w3\",    \"description\", \"w3\", \"popularity\", \"3\"));\n    assertU(adoc(\"id\", \"4\", \"title\", \"w3 w3\", \"description\", \"w4\", \"popularity\", \"4\"));\n    assertU(adoc(\"id\", \"5\", \"title\", \"w5\",    \"description\", \"w5\", \"popularity\", \"5\"));\n    assertU(commit());\n\n    loadFeatures(\"external_features.json\");\n    loadModels(\"external_model.json\");\n\n    // check to make sure that the order of results will be the same when using parallel weight creation\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*,score\");\n    query.add(\"rows\", \"4\");\n\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=externalmodel efi.user_query=w3}\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/id=='3'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[1]/id=='4'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[2]/id=='1'\");\n    aftertest();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestParallelWeightCreation#testLTRScoringQueryParallelWeightCreationResultOrder().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestParallelWeightCreation#testLTRScoringQueryParallelWeightCreationResultOrder().mjava","sourceNew":"  @Test\n  public void testLTRScoringQueryParallelWeightCreationResultOrder() throws Exception {\n    setuptest(\"solrconfig-ltr_Th10_10.xml\", \"schema.xml\");\n\n    assertU(adoc(\"id\", \"1\", \"title\", \"w1 w3\", \"description\", \"w1\", \"popularity\", \"1\"));\n    assertU(adoc(\"id\", \"2\", \"title\", \"w2\",    \"description\", \"w2\", \"popularity\", \"2\"));\n    assertU(adoc(\"id\", \"3\", \"title\", \"w3\",    \"description\", \"w3\", \"popularity\", \"3\"));\n    assertU(adoc(\"id\", \"4\", \"title\", \"w3 w3\", \"description\", \"w4\", \"popularity\", \"4\"));\n    assertU(adoc(\"id\", \"5\", \"title\", \"w5\",    \"description\", \"w5\", \"popularity\", \"5\"));\n    assertU(commit());\n\n    loadFeatures(\"external_features.json\");\n    loadModels(\"external_model.json\");\n\n    // check to make sure that the order of results will be the same when using parallel weight creation\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*,score\");\n    query.add(\"rows\", \"4\");\n\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=externalmodel efi.user_query=w3}\");\n    // SOLR-10710, feature based on query with term w3 now scores higher on doc 4, updated\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/id=='4'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[1]/id=='3'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[2]/id=='1'\");\n    aftertest();\n  }\n\n","sourceOld":"  @Test\n  public void testLTRScoringQueryParallelWeightCreationResultOrder() throws Exception {\n    setuptest(\"solrconfig-ltr_Th10_10.xml\", \"schema.xml\");\n\n    assertU(adoc(\"id\", \"1\", \"title\", \"w1 w3\", \"description\", \"w1\", \"popularity\", \"1\"));\n    assertU(adoc(\"id\", \"2\", \"title\", \"w2\",    \"description\", \"w2\", \"popularity\", \"2\"));\n    assertU(adoc(\"id\", \"3\", \"title\", \"w3\",    \"description\", \"w3\", \"popularity\", \"3\"));\n    assertU(adoc(\"id\", \"4\", \"title\", \"w3 w3\", \"description\", \"w4\", \"popularity\", \"4\"));\n    assertU(adoc(\"id\", \"5\", \"title\", \"w5\",    \"description\", \"w5\", \"popularity\", \"5\"));\n    assertU(commit());\n\n    loadFeatures(\"external_features.json\");\n    loadModels(\"external_model.json\");\n\n    // check to make sure that the order of results will be the same when using parallel weight creation\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*,score\");\n    query.add(\"rows\", \"4\");\n\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=externalmodel efi.user_query=w3}\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/id=='3'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[1]/id=='4'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[2]/id=='1'\");\n    aftertest();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestParallelWeightCreation#testLTRScoringQueryParallelWeightCreationResultOrder().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestParallelWeightCreation#testLTRScoringQueryParallelWeightCreationResultOrder().mjava","sourceNew":"  @Test\n  public void testLTRScoringQueryParallelWeightCreationResultOrder() throws Exception {\n    setuptest(\"solrconfig-ltr_Th10_10.xml\", \"schema.xml\");\n\n    assertU(adoc(\"id\", \"1\", \"title\", \"w1 w3\", \"description\", \"w1\", \"popularity\", \"1\"));\n    assertU(adoc(\"id\", \"2\", \"title\", \"w2\",    \"description\", \"w2\", \"popularity\", \"2\"));\n    assertU(adoc(\"id\", \"3\", \"title\", \"w3\",    \"description\", \"w3\", \"popularity\", \"3\"));\n    assertU(adoc(\"id\", \"4\", \"title\", \"w3 w3\", \"description\", \"w4\", \"popularity\", \"4\"));\n    assertU(adoc(\"id\", \"5\", \"title\", \"w5\",    \"description\", \"w5\", \"popularity\", \"5\"));\n    assertU(commit());\n\n    loadFeatures(\"external_features.json\");\n    loadModels(\"external_model.json\");\n\n    // check to make sure that the order of results will be the same when using parallel weight creation\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*,score\");\n    query.add(\"rows\", \"4\");\n\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=externalmodel efi.user_query=w3}\");\n    // SOLR-10710, feature based on query with term w3 now scores higher on doc 4, updated\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/id=='4'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[1]/id=='3'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[2]/id=='1'\");\n    aftertest();\n  }\n\n","sourceOld":"  @Test\n  public void testLTRScoringQueryParallelWeightCreationResultOrder() throws Exception {\n    setuptest(\"solrconfig-ltr_Th10_10.xml\", \"schema.xml\");\n\n    assertU(adoc(\"id\", \"1\", \"title\", \"w1 w3\", \"description\", \"w1\", \"popularity\", \"1\"));\n    assertU(adoc(\"id\", \"2\", \"title\", \"w2\",    \"description\", \"w2\", \"popularity\", \"2\"));\n    assertU(adoc(\"id\", \"3\", \"title\", \"w3\",    \"description\", \"w3\", \"popularity\", \"3\"));\n    assertU(adoc(\"id\", \"4\", \"title\", \"w3 w3\", \"description\", \"w4\", \"popularity\", \"4\"));\n    assertU(adoc(\"id\", \"5\", \"title\", \"w5\",    \"description\", \"w5\", \"popularity\", \"5\"));\n    assertU(commit());\n\n    loadFeatures(\"external_features.json\");\n    loadModels(\"external_model.json\");\n\n    // check to make sure that the order of results will be the same when using parallel weight creation\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*,score\");\n    query.add(\"rows\", \"4\");\n\n    query.add(\"rq\", \"{!ltr reRankDocs=10 model=externalmodel efi.user_query=w3}\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/id=='3'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[1]/id=='4'\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[2]/id=='1'\");\n    aftertest();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["7eb6d1b3417708a3e41731ad9fabbecae8f08ca8","bdb2cc4f9faf189f58741efc500174d8a49c03c5"],"7eb6d1b3417708a3e41731ad9fabbecae8f08ca8":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["7eb6d1b3417708a3e41731ad9fabbecae8f08ca8","bdb2cc4f9faf189f58741efc500174d8a49c03c5"],"bdb2cc4f9faf189f58741efc500174d8a49c03c5":["7eb6d1b3417708a3e41731ad9fabbecae8f08ca8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"7eb6d1b3417708a3e41731ad9fabbecae8f08ca8":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9","bdb2cc4f9faf189f58741efc500174d8a49c03c5"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["7eb6d1b3417708a3e41731ad9fabbecae8f08ca8","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"bdb2cc4f9faf189f58741efc500174d8a49c03c5":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","9720b151fde2073f4e401450f4574e5f31c2d0ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}