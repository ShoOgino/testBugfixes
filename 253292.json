{"path":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","commits":[{"id":"d05b801583d7568b68b06c67b22136d2a3b3e3bb","date":1280470393,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","pathOld":"/dev/null","sourceNew":"        @Override\n        public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n          // Copy first whatever is in the buffer\n          numBytes -= flushBuffer(out, numBytes);\n          \n          // If there are more bytes left to copy, delegate the copy task to the\n          // base IndexInput, in case it can do an optimized copy.\n          if (numBytes > 0) {\n            base.copyBytes(out, numBytes);\n          }\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4044e13e96159a317c2dba59060f974decb1aea3","date":1280917830,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","sourceNew":"        @Override\n        public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n          // Copy first whatever is in the buffer\n          numBytes -= flushBuffer(out, numBytes);\n          \n          // If there are more bytes left to copy, delegate the copy task to the\n          // base IndexInput, in case it can do an optimized copy.\n          if (numBytes > 0) {\n            long start = getFilePointer();\n            if (start + numBytes > length) {\n              throw new IOException(\"read past EOF\");\n            }\n            base.seek(fileOffset + start);\n            base.copyBytes(out, numBytes);\n          }\n        }\n\n","sourceOld":"        @Override\n        public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n          // Copy first whatever is in the buffer\n          numBytes -= flushBuffer(out, numBytes);\n          \n          // If there are more bytes left to copy, delegate the copy task to the\n          // base IndexInput, in case it can do an optimized copy.\n          if (numBytes > 0) {\n            base.copyBytes(out, numBytes);\n          }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","pathOld":"/dev/null","sourceNew":"        @Override\n        public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n          // Copy first whatever is in the buffer\n          numBytes -= flushBuffer(out, numBytes);\n          \n          // If there are more bytes left to copy, delegate the copy task to the\n          // base IndexInput, in case it can do an optimized copy.\n          if (numBytes > 0) {\n            long start = getFilePointer();\n            if (start + numBytes > length) {\n              throw new IOException(\"read past EOF\");\n            }\n            base.seek(fileOffset + start);\n            base.copyBytes(out, numBytes);\n          }\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4162a1cda4082030c3dd849ade21f33fb5e6f09","date":1308020263,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","sourceNew":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new IOException(\"read past EOF\");\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","sourceOld":"        @Override\n        public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n          // Copy first whatever is in the buffer\n          numBytes -= flushBuffer(out, numBytes);\n          \n          // If there are more bytes left to copy, delegate the copy task to the\n          // base IndexInput, in case it can do an optimized copy.\n          if (numBytes > 0) {\n            long start = getFilePointer();\n            if (start + numBytes > length) {\n              throw new IOException(\"read past EOF\");\n            }\n            base.seek(fileOffset + start);\n            base.copyBytes(out, numBytes);\n          }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ed208afa1e7aa98899ddb1dedfddedddf898253","date":1308079587,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","sourceNew":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new IOException(\"read past EOF\");\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","sourceOld":"        @Override\n        public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n          // Copy first whatever is in the buffer\n          numBytes -= flushBuffer(out, numBytes);\n          \n          // If there are more bytes left to copy, delegate the copy task to the\n          // base IndexInput, in case it can do an optimized copy.\n          if (numBytes > 0) {\n            long start = getFilePointer();\n            if (start + numBytes > length) {\n              throw new IOException(\"read past EOF\");\n            }\n            base.seek(fileOffset + start);\n            base.copyBytes(out, numBytes);\n          }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/DefaultCompoundFileDirectory.CSIndexInput#copyBytes(IndexOutput,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","sourceNew":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new IOException(\"read past EOF\");\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new IOException(\"read past EOF\");\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/DefaultCompoundFileDirectory.CSIndexInput#copyBytes(IndexOutput,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","sourceNew":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new IOException(\"read past EOF\");\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new IOException(\"read past EOF\");\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/DefaultCompoundFileDirectory.CSIndexInput#copyBytes(IndexOutput,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader.CSIndexInput#copyBytes(IndexOutput,long).mjava","sourceNew":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new IOException(\"read past EOF\");\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new IOException(\"read past EOF\");\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f4162a1cda4082030c3dd849ade21f33fb5e6f09":["4044e13e96159a317c2dba59060f974decb1aea3"],"d05b801583d7568b68b06c67b22136d2a3b3e3bb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["f4162a1cda4082030c3dd849ade21f33fb5e6f09"],"4044e13e96159a317c2dba59060f974decb1aea3":["d05b801583d7568b68b06c67b22136d2a3b3e3bb"],"2553b00f699380c64959ccb27991289aae87be2e":["9ed208afa1e7aa98899ddb1dedfddedddf898253","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4044e13e96159a317c2dba59060f974decb1aea3"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["f4162a1cda4082030c3dd849ade21f33fb5e6f09","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"9ed208afa1e7aa98899ddb1dedfddedddf898253":["4044e13e96159a317c2dba59060f974decb1aea3","f4162a1cda4082030c3dd849ade21f33fb5e6f09"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0aab6e810b4b0d3743d6a048be0602801f4b3920"]},"commit2Childs":{"f4162a1cda4082030c3dd849ade21f33fb5e6f09":["0aab6e810b4b0d3743d6a048be0602801f4b3920","d083e83f225b11e5fdd900e83d26ddb385b6955c","9ed208afa1e7aa98899ddb1dedfddedddf898253"],"d05b801583d7568b68b06c67b22136d2a3b3e3bb":["4044e13e96159a317c2dba59060f974decb1aea3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d05b801583d7568b68b06c67b22136d2a3b3e3bb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4044e13e96159a317c2dba59060f974decb1aea3":["f4162a1cda4082030c3dd849ade21f33fb5e6f09","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","9ed208afa1e7aa98899ddb1dedfddedddf898253"],"2553b00f699380c64959ccb27991289aae87be2e":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9ed208afa1e7aa98899ddb1dedfddedddf898253":["2553b00f699380c64959ccb27991289aae87be2e"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}