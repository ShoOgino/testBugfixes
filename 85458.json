{"path":"src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","commits":[{"id":"634b2cad3477b478f73029f8f5a8d0b5069942d4","date":1239803278,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<Object>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","pathOld":"src/test/org/apache/solr/common/util/DOMUtilTest#testAddToNamedListPrimitiveTypes().mjava","sourceNew":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<Object>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","sourceOld":"  public void testAddToNamedListPrimitiveTypes() throws Exception {\n    NamedList<Object> namedList = new SimpleOrderedMap<Object>();\n    DOMUtil.addToNamedList( getNode( \"<str name=\\\"String\\\">STRING</str>\", \"/str\" ), namedList, null );\n    assertTypeAndValue( namedList, \"String\", \"STRING\" );\n    DOMUtil.addToNamedList( getNode( \"<int name=\\\"Integer\\\">100</int>\", \"/int\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Integer\", Integer.valueOf( 100 ) );\n    DOMUtil.addToNamedList( getNode( \"<long name=\\\"Long\\\">200</long>\", \"/long\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Long\", Long.valueOf( 200 ) );\n    DOMUtil.addToNamedList( getNode( \"<float name=\\\"Float\\\">300</float>\", \"/float\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Float\", Float.valueOf( 300 ) );\n    DOMUtil.addToNamedList( getNode( \"<double name=\\\"Double\\\">400</double>\", \"/double\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Double\", Double.valueOf( 400 ) );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">true</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">on</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">yes</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", true );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">false</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">off</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n    DOMUtil.addToNamedList( getNode( \"<bool name=\\\"Boolean\\\">no</bool>\", \"/bool\" ), namedList, null );\n    assertTypeAndValue( namedList, \"Boolean\", false );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"634b2cad3477b478f73029f8f5a8d0b5069942d4":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["634b2cad3477b478f73029f8f5a8d0b5069942d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["634b2cad3477b478f73029f8f5a8d0b5069942d4"],"634b2cad3477b478f73029f8f5a8d0b5069942d4":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}