{"path":"src/java/org/apache/solr/common/util/FastWriter#write(String,int,int).mjava","commits":[{"id":"1c355d9286f784cff62d09cae2d0752fdacb156e","date":1192387134,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/util/FastWriter#write(String,int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void write(String str, int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      str.getChars(off, off+len, buf, pos);\n      pos += len;\n    } else if (len<BUFSIZE) {\n      // if the data to write is small enough, buffer it.\n      str.getChars(off, off+space, buf, pos);\n      sink.write(buf, 0, buf.length);\n      str.getChars(off+space, off+len, buf, 0);\n      pos = len-space;\n    } else {\n      sink.write(buf,0,pos);  // flush\n      pos=0;\n      // don't buffer, just write to sink\n      sink.write(str, off, len);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/FastWriter#write(String,int,int).mjava","pathOld":"src/java/org/apache/solr/common/util/FastWriter#write(String,int,int).mjava","sourceNew":"  @Override\n  public void write(String str, int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      str.getChars(off, off+len, buf, pos);\n      pos += len;\n    } else if (len<BUFSIZE) {\n      // if the data to write is small enough, buffer it.\n      str.getChars(off, off+space, buf, pos);\n      sink.write(buf, 0, buf.length);\n      str.getChars(off+space, off+len, buf, 0);\n      pos = len-space;\n    } else {\n      sink.write(buf,0,pos);  // flush\n      pos=0;\n      // don't buffer, just write to sink\n      sink.write(str, off, len);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(String str, int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      str.getChars(off, off+len, buf, pos);\n      pos += len;\n    } else if (len<BUFSIZE) {\n      // if the data to write is small enough, buffer it.\n      str.getChars(off, off+space, buf, pos);\n      sink.write(buf, 0, buf.length);\n      str.getChars(off+space, off+len, buf, 0);\n      pos = len-space;\n    } else {\n      sink.write(buf,0,pos);  // flush\n      pos=0;\n      // don't buffer, just write to sink\n      sink.write(str, off, len);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["1c355d9286f784cff62d09cae2d0752fdacb156e"],"1c355d9286f784cff62d09cae2d0752fdacb156e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"1c355d9286f784cff62d09cae2d0752fdacb156e":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["1c355d9286f784cff62d09cae2d0752fdacb156e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}