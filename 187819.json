{"path":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestFastDecompressionMode#test(byte[],int,int).mjava","commits":[{"id":"175e4d353e3036fad2ad89ae6815c4418b4c3c8e","date":1378375735,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestFastDecompressionMode#test(byte[],int,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestFastDecompressionMode#test(byte[]).mjava","sourceNew":"  @Override\n  public byte[] test(byte[] decompressed, int off, int len) throws IOException {\n    final byte[] compressed = super.test(decompressed, off, len);\n    final byte[] compressed2 = compress(CompressionMode.FAST.newCompressor(), decompressed, off, len);\n    // because of the way this compression mode works, its output is necessarily\n    // smaller than the output of CompressionMode.FAST\n    assertTrue(compressed.length <= compressed2.length);\n    return compressed;\n  }\n\n","sourceOld":"  @Override\n  public byte[] test(byte[] decompressed) throws IOException {\n    final byte[] compressed = super.test(decompressed);\n    final byte[] compressed2 = compress(CompressionMode.FAST.newCompressor(), decompressed);\n    // because of the way this compression mode works, its output is necessarily\n    // smaller than the output of CompressionMode.FAST\n    assertTrue(compressed.length <= compressed2.length);\n    return compressed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9407318969e8504257b4c5764c65755a043e5404","date":1579873617,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/TestFastDecompressionMode#test(byte[],int,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public byte[] test(byte[] decompressed, int off, int len) throws IOException {\n    final byte[] compressed = super.test(decompressed, off, len);\n    final byte[] compressed2 = compress(CompressionMode.FAST.newCompressor(), decompressed, off, len);\n    // because of the way this compression mode works, its output is necessarily\n    // smaller than the output of CompressionMode.FAST\n    assertTrue(compressed.length <= compressed2.length);\n    return compressed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"175e4d353e3036fad2ad89ae6815c4418b4c3c8e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9407318969e8504257b4c5764c65755a043e5404":["175e4d353e3036fad2ad89ae6815c4418b4c3c8e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9407318969e8504257b4c5764c65755a043e5404"]},"commit2Childs":{"175e4d353e3036fad2ad89ae6815c4418b4c3c8e":["9407318969e8504257b4c5764c65755a043e5404"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["175e4d353e3036fad2ad89ae6815c4418b4c3c8e"],"9407318969e8504257b4c5764c65755a043e5404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}