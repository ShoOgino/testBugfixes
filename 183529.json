{"path":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","sourceNew":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getName());      \n  }\n\n","sourceOld":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getName());      \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","sourceNew":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getName());      \n  }\n\n","sourceOld":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getName());      \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","sourceNew":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getName());      \n  }\n\n","sourceOld":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getName());      \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","sourceNew":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getTestName());      \n  }\n\n","sourceOld":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getName());      \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","sourceNew":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  @Override\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getTestName());      \n  }\n\n","sourceOld":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getTestName());      \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","sourceNew":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  @Override\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getTestName());      \n  }\n\n","sourceOld":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getTestName());      \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64ddba243900a65c26afa3346a93d6c71e58a226","date":1513880422,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#preTearDown().mjava","sourceNew":null,"sourceOld":"  /** Subclasses that override tearDown can optionally call this method\n   * to log the fact that the tearDown process has started.  This is necessary\n   * since subclasses will want to call super.tearDown() at the *end* of their\n   * tearDown method.\n   */\n  @Override\n  public void preTearDown() {\n    log.info(\"####PRETEARDOWN \" + getTestName());      \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["5da0b42730b6b99b31389ef94cb97384e83b9ede","7530de27b87b961b51f01bd1299b7004d46e8823"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64ddba243900a65c26afa3346a93d6c71e58a226":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64ddba243900a65c26afa3346a93d6c71e58a226"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"64ddba243900a65c26afa3346a93d6c71e58a226":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","64ddba243900a65c26afa3346a93d6c71e58a226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}