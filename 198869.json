{"path":"client/java/solrj/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","commits":[{"id":"1120e71c0583ecdee6258cbe78707eac06e96a1f","date":1190231591,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiThreaded() throws Exception {\n    gserver = this.getSolrServer();\n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      System.out.println(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n    \n    query(threadCount * numdocs);\n    System.out.println(\"done\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"756f58c6036da3c68215fbbabeeaee63475eb529","date":1200633110,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","sourceNew":"  public void testMultiThreaded() throws Exception {\n    gserver = this.getSolrServer();\n    gserver.deleteByQuery( \"*:*\" ); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      System.out.println(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n    \n    query(threadCount * numdocs);\n    System.out.println(\"done\");\n  }\n\n","sourceOld":"  public void testMultiThreaded() throws Exception {\n    gserver = this.getSolrServer();\n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      System.out.println(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n    \n    query(threadCount * numdocs);\n    System.out.println(\"done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/LargeVolumeTestBase#testMultiThreaded().mjava","sourceNew":"  public void testMultiThreaded() throws Exception {\n    gserver = this.getSolrServer();\n    gserver.deleteByQuery( \"*:*\" ); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      System.out.println(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n    \n    query(threadCount * numdocs);\n    System.out.println(\"done\");\n  }\n\n","sourceOld":"  public void testMultiThreaded() throws Exception {\n    gserver = this.getSolrServer();\n    gserver.deleteByQuery( \"*:*\" ); // delete everything!\n    \n    DocThread[] threads = new DocThread[threadCount];\n    for (int i=0; i<threadCount; i++) {\n      threads[i] = new DocThread( \"T\"+i+\":\" );\n      threads[i].setName(\"DocThread-\" + i);\n      threads[i].start();\n      System.out.println(\"Started thread: \" + i);\n    }\n    for (int i=0; i<threadCount; i++) {\n      threads[i].join();\n    }\n    \n    query(threadCount * numdocs);\n    System.out.println(\"done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["756f58c6036da3c68215fbbabeeaee63475eb529"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1120e71c0583ecdee6258cbe78707eac06e96a1f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"756f58c6036da3c68215fbbabeeaee63475eb529":["1120e71c0583ecdee6258cbe78707eac06e96a1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["1120e71c0583ecdee6258cbe78707eac06e96a1f"],"1120e71c0583ecdee6258cbe78707eac06e96a1f":["756f58c6036da3c68215fbbabeeaee63475eb529"],"756f58c6036da3c68215fbbabeeaee63475eb529":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}