{"path":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlockWriter#add(long).mjava","commits":[{"id":"4a470c93b2b0f8f51241f52705fc110a01f27ad2","date":1337969379,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlockWriter#add(long).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void add(long v) throws IOException {\n    assert v <= PackedInts.maxValue(bitsPerValue) : \"v=\" + v\n        + \" maxValue=\" + PackedInts.maxValue(bitsPerValue);\n    assert v >= 0;\n\n    if (shift + bitsPerValue > Long.SIZE) {\n      out.writeLong(pending);\n      pending = 0;\n      shift = 0;\n    }\n    pending |= v << shift;\n    shift += bitsPerValue;\n    ++written;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55110eb60c5105294fc2ae7912d82b750865aa58","date":1341389822,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlockWriter#add(long).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void add(long v) throws IOException {\n    assert v <= PackedInts.maxValue(bitsPerValue) : \"v=\" + v\n        + \" maxValue=\" + PackedInts.maxValue(bitsPerValue);\n    assert v >= 0;\n\n    if (shift + bitsPerValue > Long.SIZE) {\n      out.writeLong(pending);\n      pending = 0;\n      shift = 0;\n    }\n    pending |= v << shift;\n    shift += bitsPerValue;\n    ++written;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlockWriter#add(long).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void add(long v) throws IOException {\n    assert v <= PackedInts.maxValue(bitsPerValue) : \"v=\" + v\n        + \" maxValue=\" + PackedInts.maxValue(bitsPerValue);\n    assert v >= 0;\n\n    if (shift + bitsPerValue > Long.SIZE) {\n      out.writeLong(pending);\n      pending = 0;\n      shift = 0;\n    }\n    pending |= v << shift;\n    shift += bitsPerValue;\n    ++written;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55110eb60c5105294fc2ae7912d82b750865aa58":["4a470c93b2b0f8f51241f52705fc110a01f27ad2"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["4a470c93b2b0f8f51241f52705fc110a01f27ad2","55110eb60c5105294fc2ae7912d82b750865aa58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["55110eb60c5105294fc2ae7912d82b750865aa58"]},"commit2Childs":{"55110eb60c5105294fc2ae7912d82b750865aa58":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a470c93b2b0f8f51241f52705fc110a01f27ad2"],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["55110eb60c5105294fc2ae7912d82b750865aa58","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}