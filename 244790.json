{"path":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch.SimpleDocIdSetFilter#getDocIdSet(ReaderContext).mjava","commits":[{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch.SimpleDocIdSetFilter#getDocIdSet(ReaderContext).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch.SimpleDocIdSetFilter#getDocIdSet(IndexReader).mjava","sourceNew":"    @Override\n    public DocIdSet getDocIdSet(ReaderContext context) {\n      assert context.isAtomic;\n      final OpenBitSet set = new OpenBitSet();\n      int docBase = ((AtomicReaderContext)context).docBase;\n      final int limit = docBase+context.reader.maxDoc();\n      for (;index < docs.length; index++) {\n        final int docId = docs[index];\n        if(docId > limit)\n          break;\n        if (docId >= docBase) {\n          set.set(docId-docBase);\n        }\n      }\n      return set.isEmpty()?null:set;\n    }\n\n","sourceOld":"    @Override\n    public DocIdSet getDocIdSet(IndexReader reader) {\n      final OpenBitSet set = new OpenBitSet();\n      int docBase = topReader.getSubReaderDocBase(reader);\n      final int limit = docBase+reader.maxDoc();\n      for (;index < docs.length; index++) {\n        final int docId = docs[index];\n        if(docId > limit)\n          break;\n        if (docId >= docBase) {\n          set.set(docId-docBase);\n        }\n      }\n      return set.isEmpty()?null:set;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch.SimpleDocIdSetFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch.SimpleDocIdSetFilter#getDocIdSet(ReaderContext).mjava","sourceNew":"    @Override\n    public DocIdSet getDocIdSet(AtomicReaderContext context) {\n      assert context.isAtomic;\n      final OpenBitSet set = new OpenBitSet();\n      int docBase = ((AtomicReaderContext)context).docBase;\n      final int limit = docBase+context.reader.maxDoc();\n      for (;index < docs.length; index++) {\n        final int docId = docs[index];\n        if(docId > limit)\n          break;\n        if (docId >= docBase) {\n          set.set(docId-docBase);\n        }\n      }\n      return set.isEmpty()?null:set;\n    }\n\n","sourceOld":"    @Override\n    public DocIdSet getDocIdSet(ReaderContext context) {\n      assert context.isAtomic;\n      final OpenBitSet set = new OpenBitSet();\n      int docBase = ((AtomicReaderContext)context).docBase;\n      final int limit = docBase+context.reader.maxDoc();\n      for (;index < docs.length; index++) {\n        final int docId = docs[index];\n        if(docId > limit)\n          break;\n        if (docId >= docBase) {\n          set.set(docId-docBase);\n        }\n      }\n      return set.isEmpty()?null:set;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"]},"commit2Childs":{"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}