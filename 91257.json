{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#testFailure1().mjava","commits":[{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#testFailure1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailure1() {\n      final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n      final List<GeoPoint> points = new ArrayList<GeoPoint>();\n      points.add(new GeoPoint(66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n      points.add(new GeoPoint(43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n      points.add(new GeoPoint(30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n      final GeoShape path = GeoPolygonFactory.makeGeoPolygon(points,0);\n    \n      final GeoPoint point = new GeoPoint(34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n      // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n      assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n      // Point is within path? Apparently not...\n      assertFalse(path.isWithin(point));\n\n      // If it is within the path, it must be within the rectangle, and similarly visa versa\n      assertFalse(rect.isWithin(point));\n      \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["aafaf65c7159614a90c78005b3e21b3043b46024"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#testFailure1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailure1() {\n      final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n      final List<GeoPoint> points = new ArrayList<GeoPoint>();\n      points.add(new GeoPoint(66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n      points.add(new GeoPoint(43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n      points.add(new GeoPoint(30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n      final GeoShape path = GeoPolygonFactory.makeGeoPolygon(points,0);\n    \n      final GeoPoint point = new GeoPoint(34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n      // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n      assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n      // Point is within path? Apparently not...\n      assertFalse(path.isWithin(point));\n\n      // If it is within the path, it must be within the rectangle, and similarly visa versa\n      assertFalse(rect.isWithin(point));\n      \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aafaf65c7159614a90c78005b3e21b3043b46024","date":1431404499,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n    final List<GeoPoint> points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n    final GeoShape path = GeoPolygonFactory.makeGeoPolygon(points,0);\n\n    final GeoPoint point = new GeoPoint(34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n    // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n    assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n    // Point is within path? Apparently not...\n    assertFalse(path.isWithin(point));\n\n    // If it is within the path, it must be within the rectangle, and similarly visa versa\n    assertFalse(rect.isWithin(point));\n\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n      final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n      final List<GeoPoint> points = new ArrayList<GeoPoint>();\n      points.add(new GeoPoint(66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n      points.add(new GeoPoint(43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n      points.add(new GeoPoint(30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n      final GeoShape path = GeoPolygonFactory.makeGeoPolygon(points,0);\n    \n      final GeoPoint point = new GeoPoint(34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n      // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n      assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n      // Point is within path? Apparently not...\n      assertFalse(path.isWithin(point));\n\n      // If it is within the path, it must be within the rectangle, and similarly visa versa\n      assertFalse(rect.isWithin(point));\n      \n  }\n\n","bugFix":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeSphereModelRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n    final List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(planetModel, 66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n    final GeoShape path = GeoPolygonFactory.makeGeoPolygon(planetModel, points,0);\n\n    final GeoPoint point = new GeoPoint(planetModel, 34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n    // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n    assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n    // Point is within path? Apparently not...\n    assertFalse(path.isWithin(point));\n\n    // If it is within the path, it must be within the rectangle, and similarly visa versa\n    assertFalse(rect.isWithin(point));\n\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n    final List<GeoPoint> points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n    final GeoShape path = GeoPolygonFactory.makeGeoPolygon(points,0);\n\n    final GeoPoint point = new GeoPoint(34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n    // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n    assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n    // Point is within path? Apparently not...\n    assertFalse(path.isWithin(point));\n\n    // If it is within the path, it must be within the rectangle, and similarly visa versa\n    assertFalse(rect.isWithin(point));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":5,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeSphereModelRectRelationTest#testFailure1().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#testFailure1().mjava","sourceNew":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(planetModel, 88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n    final List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(planetModel, 66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(planetModel, 30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n    final GeoShape path = GeoPolygonFactory.makeGeoPolygon(planetModel, points,0);\n\n    final GeoPoint point = new GeoPoint(planetModel, 34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n    // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n    assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n    // Point is within path? Apparently not...\n    assertFalse(path.isWithin(point));\n\n    // If it is within the path, it must be within the rectangle, and similarly visa versa\n    assertFalse(rect.isWithin(point));\n\n  }\n\n","sourceOld":"  @Test\n  public void testFailure1() {\n    final GeoBBox rect = GeoBBoxFactory.makeGeoBBox(88 * RADIANS_PER_DEGREE, 30 * RADIANS_PER_DEGREE, -30 * RADIANS_PER_DEGREE, 62 * RADIANS_PER_DEGREE);\n    final List<GeoPoint> points = new ArrayList<GeoPoint>();\n    points.add(new GeoPoint(66.2465299717 * RADIANS_PER_DEGREE, -29.1786158537 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(43.684447915 * RADIANS_PER_DEGREE, 46.2210986329 * RADIANS_PER_DEGREE));\n    points.add(new GeoPoint(30.4579218227 * RADIANS_PER_DEGREE, 14.5238410082 * RADIANS_PER_DEGREE));\n    final GeoShape path = GeoPolygonFactory.makeGeoPolygon(points,0);\n\n    final GeoPoint point = new GeoPoint(34.2730264413182 * RADIANS_PER_DEGREE, 82.75500168892472 * RADIANS_PER_DEGREE);\n\n    // Apparently the rectangle thinks the polygon is completely within it... \"shape inside rectangle\"\n    assertTrue(GeoArea.WITHIN == rect.getRelationship(path));\n\n    // Point is within path? Apparently not...\n    assertFalse(path.isWithin(point));\n\n    // If it is within the path, it must be within the rectangle, and similarly visa versa\n    assertFalse(rect.isWithin(point));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aafaf65c7159614a90c78005b3e21b3043b46024":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["aafaf65c7159614a90c78005b3e21b3043b46024","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["aafaf65c7159614a90c78005b3e21b3043b46024"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fec06d6753751ae302c7d35866763e6cb414112d"]},"commit2Childs":{"aafaf65c7159614a90c78005b3e21b3043b46024":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e2997acf74723385bd84aff1ea0b12af4aefde77","c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"fec06d6753751ae302c7d35866763e6cb414112d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["aafaf65c7159614a90c78005b3e21b3043b46024"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}