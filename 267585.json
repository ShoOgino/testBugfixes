{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#assertString(Tuple,String,String).mjava","commits":[{"id":"f00f1c5fad501b66705121feb623f8cfbb6712f9","date":1431347838,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#assertString(Tuple,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public boolean assertString(Tuple tuple, String fieldName, String expected) throws Exception {\n    String actual = (String)tuple.get(fieldName);\n    \n    if( (null == expected && null != actual) ||\n        (null != expected && null == actual) ||\n        (null != expected && !expected.equals(actual))){\n      throw new Exception(\"Longs not equal:\"+expected+\" : \"+actual);\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a0370d6fb5289875090a50a9d0887ee584fed440"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0370d6fb5289875090a50a9d0887ee584fed440","date":1552401990,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#assertString(Tuple,String,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#assertString(Tuple,String,String).mjava","sourceNew":"  public boolean assertString(Tuple tuple, String fieldName, String expected) throws Exception {\n    String actual = (String)tuple.get(fieldName);\n\n    if( (null == expected && null != actual) ||\n        (null != expected && null == actual) ||\n        (null != expected && !expected.equals(actual))){\n      throw new Exception(\"Longs not equal:\"+expected+\" : \"+actual);\n    }\n\n    return true;\n  }\n\n","sourceOld":"  public boolean assertString(Tuple tuple, String fieldName, String expected) throws Exception {\n    String actual = (String)tuple.get(fieldName);\n    \n    if( (null == expected && null != actual) ||\n        (null != expected && null == actual) ||\n        (null != expected && !expected.equals(actual))){\n      throw new Exception(\"Longs not equal:\"+expected+\" : \"+actual);\n    }\n\n    return true;\n  }\n\n","bugFix":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0370d6fb5289875090a50a9d0887ee584fed440":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0370d6fb5289875090a50a9d0887ee584fed440"]},"commit2Childs":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["a0370d6fb5289875090a50a9d0887ee584fed440"],"a0370d6fb5289875090a50a9d0887ee584fed440":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}