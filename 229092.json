{"path":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","commits":[{"id":"556c8202987f72dd8458e25e21a82d98fc274979","date":1358008288,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","pathOld":"/dev/null","sourceNew":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = _TestUtil.getTempDir(\"moreterms\");\n    _TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    _TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","pathOld":"/dev/null","sourceNew":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = _TestUtil.getTempDir(\"moreterms\");\n    _TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    _TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","sourceNew":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = TestUtil.getTempDir(\"moreterms\");\n    TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = _TestUtil.getTempDir(\"moreterms\");\n    _TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    _TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","sourceNew":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = TestUtil.createTempDir(\"moreterms\");\n    TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = TestUtil.getTempDir(\"moreterms\");\n    TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","sourceNew":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = createTempDir(\"moreterms\");\n    TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = TestUtil.createTempDir(\"moreterms\");\n    TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","sourceNew":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = createTempDir(\"moreterms\");\n    TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = TestUtil.getTempDir(\"moreterms\");\n    TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","sourceNew":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = createTempDir(\"moreterms\");\n    TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = createTempDir(\"moreterms\");\n    TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testMoreTerms().mjava","sourceNew":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = createTempDir(\"moreterms\");\n    TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreTerms() throws Exception {\n    File oldIndexDir = createTempDir(\"moreterms\");\n    TestUtil.unzip(getDataFile(moreTermsIndex), oldIndexDir);\n    Directory dir = newFSDirectory(oldIndexDir);\n    // TODO: more tests\n    TestUtil.checkIndex(dir);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["556c8202987f72dd8458e25e21a82d98fc274979"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["d0d579490a72f2e6297eaa648940611234c57cf1"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","556c8202987f72dd8458e25e21a82d98fc274979"],"556c8202987f72dd8458e25e21a82d98fc274979":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"556c8202987f72dd8458e25e21a82d98fc274979":["6613659748fe4411a7dcf85266e55db1f95f7315","8917bfede3b4ca30f4305c1e391e9218959cd723"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8917bfede3b4ca30f4305c1e391e9218959cd723","556c8202987f72dd8458e25e21a82d98fc274979"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"d0d579490a72f2e6297eaa648940611234c57cf1":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}