{"path":"solr/core/src/java/org/apache/solr/spelling/PossibilityIterator#separateOverlappingTokens(List[SpellCheckCorrection]).mjava","commits":[{"id":"0ad9ec888e587ca9a3279368245cdf00aabdc108","date":1338832525,"type":0,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/PossibilityIterator#separateOverlappingTokens(List[SpellCheckCorrection]).mjava","pathOld":"/dev/null","sourceNew":"  private List<List<SpellCheckCorrection>> separateOverlappingTokens(\n      List<SpellCheckCorrection> possibleCorrection) {\n    List<List<SpellCheckCorrection>> ret = null;\n    if (possibleCorrection.size() == 1) {\n      ret = new ArrayList<List<SpellCheckCorrection>>(1);\n      ret.add(possibleCorrection);\n      return ret;\n    }\n    ret = new ArrayList<List<SpellCheckCorrection>>();\n    for (int i = 0; i < possibleCorrection.size(); i++) {\n      List<SpellCheckCorrection> c = compatible(possibleCorrection, i);\n      ret.add(c);\n    }\n    return ret;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/PossibilityIterator#separateOverlappingTokens(List[SpellCheckCorrection]).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/PossibilityIterator#separateOverlappingTokens(List[SpellCheckCorrection]).mjava","sourceNew":"  private List<List<SpellCheckCorrection>> separateOverlappingTokens(\n      List<SpellCheckCorrection> possibleCorrection) {\n    List<List<SpellCheckCorrection>> ret = null;\n    if (possibleCorrection.size() == 1) {\n      ret = new ArrayList<>(1);\n      ret.add(possibleCorrection);\n      return ret;\n    }\n    ret = new ArrayList<>();\n    for (int i = 0; i < possibleCorrection.size(); i++) {\n      List<SpellCheckCorrection> c = compatible(possibleCorrection, i);\n      ret.add(c);\n    }\n    return ret;\n  }\n\n","sourceOld":"  private List<List<SpellCheckCorrection>> separateOverlappingTokens(\n      List<SpellCheckCorrection> possibleCorrection) {\n    List<List<SpellCheckCorrection>> ret = null;\n    if (possibleCorrection.size() == 1) {\n      ret = new ArrayList<List<SpellCheckCorrection>>(1);\n      ret.add(possibleCorrection);\n      return ret;\n    }\n    ret = new ArrayList<List<SpellCheckCorrection>>();\n    for (int i = 0; i < possibleCorrection.size(); i++) {\n      List<SpellCheckCorrection> c = compatible(possibleCorrection, i);\n      ret.add(c);\n    }\n    return ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["0ad9ec888e587ca9a3279368245cdf00aabdc108"],"0ad9ec888e587ca9a3279368245cdf00aabdc108":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ad9ec888e587ca9a3279368245cdf00aabdc108":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad9ec888e587ca9a3279368245cdf00aabdc108"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}