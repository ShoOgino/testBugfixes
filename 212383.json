{"path":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testExtractTerms().mjava","commits":[{"id":"d9c5763f9e0fcdee71e1f90969b9f99d56a5a1c5","date":1460359239,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testExtractTerms().mjava","pathOld":"/dev/null","sourceNew":"  public void testExtractTerms() throws Exception {\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n    QueryBitSetProducer bitSetProducer = new QueryBitSetProducer(new MatchNoDocsQuery());\n    ToParentBlockJoinQuery toParentBlockJoinQuery = new ToParentBlockJoinQuery(termQuery, bitSetProducer, ScoreMode.None);\n    ToChildBlockJoinQuery toChildBlockJoinQuery = new ToChildBlockJoinQuery(toParentBlockJoinQuery, bitSetProducer);\n\n    Directory directory = newDirectory();\n    final IndexWriter w = new IndexWriter(directory, new IndexWriterConfig(new MockAnalyzer(random())));\n    w.close();\n    IndexReader indexReader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n\n    Weight weight = toParentBlockJoinQuery.createWeight(indexSearcher, false);\n    Set<Term> terms = new HashSet<>();\n    weight.extractTerms(terms);\n    Term[] termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    weight = toChildBlockJoinQuery.createWeight(indexSearcher, false);\n    terms = new HashSet<>();\n    weight.extractTerms(terms);\n    termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    indexReader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testExtractTerms().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testExtractTerms().mjava","sourceNew":"  public void testExtractTerms() throws Exception {\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n    QueryBitSetProducer bitSetProducer = new QueryBitSetProducer(new MatchNoDocsQuery());\n    ToParentBlockJoinQuery toParentBlockJoinQuery = new ToParentBlockJoinQuery(termQuery, bitSetProducer, ScoreMode.None);\n    ToChildBlockJoinQuery toChildBlockJoinQuery = new ToChildBlockJoinQuery(toParentBlockJoinQuery, bitSetProducer);\n\n    Directory directory = newDirectory();\n    final IndexWriter w = new IndexWriter(directory, new IndexWriterConfig(new MockAnalyzer(random())));\n    w.close();\n    IndexReader indexReader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n\n    Weight weight = toParentBlockJoinQuery.createWeight(indexSearcher, false, 1f);\n    Set<Term> terms = new HashSet<>();\n    weight.extractTerms(terms);\n    Term[] termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    weight = toChildBlockJoinQuery.createWeight(indexSearcher, false, 1f);\n    terms = new HashSet<>();\n    weight.extractTerms(terms);\n    termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    indexReader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testExtractTerms() throws Exception {\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n    QueryBitSetProducer bitSetProducer = new QueryBitSetProducer(new MatchNoDocsQuery());\n    ToParentBlockJoinQuery toParentBlockJoinQuery = new ToParentBlockJoinQuery(termQuery, bitSetProducer, ScoreMode.None);\n    ToChildBlockJoinQuery toChildBlockJoinQuery = new ToChildBlockJoinQuery(toParentBlockJoinQuery, bitSetProducer);\n\n    Directory directory = newDirectory();\n    final IndexWriter w = new IndexWriter(directory, new IndexWriterConfig(new MockAnalyzer(random())));\n    w.close();\n    IndexReader indexReader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n\n    Weight weight = toParentBlockJoinQuery.createWeight(indexSearcher, false);\n    Set<Term> terms = new HashSet<>();\n    weight.extractTerms(terms);\n    Term[] termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    weight = toChildBlockJoinQuery.createWeight(indexSearcher, false);\n    terms = new HashSet<>();\n    weight.extractTerms(terms);\n    termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    indexReader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testExtractTerms().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testExtractTerms().mjava","sourceNew":"  public void testExtractTerms() throws Exception {\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n    QueryBitSetProducer bitSetProducer = new QueryBitSetProducer(new MatchNoDocsQuery());\n    ToParentBlockJoinQuery toParentBlockJoinQuery = new ToParentBlockJoinQuery(termQuery, bitSetProducer, ScoreMode.None);\n    ToChildBlockJoinQuery toChildBlockJoinQuery = new ToChildBlockJoinQuery(toParentBlockJoinQuery, bitSetProducer);\n\n    Directory directory = newDirectory();\n    final IndexWriter w = new IndexWriter(directory, new IndexWriterConfig(new MockAnalyzer(random())));\n    w.close();\n    IndexReader indexReader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n\n    Weight weight = toParentBlockJoinQuery.createWeight(indexSearcher, false, 1f);\n    Set<Term> terms = new HashSet<>();\n    weight.extractTerms(terms);\n    Term[] termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    weight = toChildBlockJoinQuery.createWeight(indexSearcher, false, 1f);\n    terms = new HashSet<>();\n    weight.extractTerms(terms);\n    termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    indexReader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testExtractTerms() throws Exception {\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n    QueryBitSetProducer bitSetProducer = new QueryBitSetProducer(new MatchNoDocsQuery());\n    ToParentBlockJoinQuery toParentBlockJoinQuery = new ToParentBlockJoinQuery(termQuery, bitSetProducer, ScoreMode.None);\n    ToChildBlockJoinQuery toChildBlockJoinQuery = new ToChildBlockJoinQuery(toParentBlockJoinQuery, bitSetProducer);\n\n    Directory directory = newDirectory();\n    final IndexWriter w = new IndexWriter(directory, new IndexWriterConfig(new MockAnalyzer(random())));\n    w.close();\n    IndexReader indexReader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n\n    Weight weight = toParentBlockJoinQuery.createWeight(indexSearcher, false);\n    Set<Term> terms = new HashSet<>();\n    weight.extractTerms(terms);\n    Term[] termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    weight = toChildBlockJoinQuery.createWeight(indexSearcher, false);\n    terms = new HashSet<>();\n    weight.extractTerms(terms);\n    termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    indexReader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testExtractTerms().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testExtractTerms().mjava","sourceNew":"  public void testExtractTerms() throws Exception {\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n    QueryBitSetProducer bitSetProducer = new QueryBitSetProducer(new MatchNoDocsQuery());\n    ToParentBlockJoinQuery toParentBlockJoinQuery = new ToParentBlockJoinQuery(termQuery, bitSetProducer, ScoreMode.None);\n    ToChildBlockJoinQuery toChildBlockJoinQuery = new ToChildBlockJoinQuery(toParentBlockJoinQuery, bitSetProducer);\n\n    Directory directory = newDirectory();\n    final IndexWriter w = new IndexWriter(directory, new IndexWriterConfig(new MockAnalyzer(random())));\n    w.close();\n    IndexReader indexReader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n\n    Weight weight = toParentBlockJoinQuery.createWeight(indexSearcher, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES, 1f);\n    Set<Term> terms = new HashSet<>();\n    weight.extractTerms(terms);\n    Term[] termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    weight = toChildBlockJoinQuery.createWeight(indexSearcher, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES, 1f);\n    terms = new HashSet<>();\n    weight.extractTerms(terms);\n    termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    indexReader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testExtractTerms() throws Exception {\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n    QueryBitSetProducer bitSetProducer = new QueryBitSetProducer(new MatchNoDocsQuery());\n    ToParentBlockJoinQuery toParentBlockJoinQuery = new ToParentBlockJoinQuery(termQuery, bitSetProducer, ScoreMode.None);\n    ToChildBlockJoinQuery toChildBlockJoinQuery = new ToChildBlockJoinQuery(toParentBlockJoinQuery, bitSetProducer);\n\n    Directory directory = newDirectory();\n    final IndexWriter w = new IndexWriter(directory, new IndexWriterConfig(new MockAnalyzer(random())));\n    w.close();\n    IndexReader indexReader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n\n    Weight weight = toParentBlockJoinQuery.createWeight(indexSearcher, false, 1f);\n    Set<Term> terms = new HashSet<>();\n    weight.extractTerms(terms);\n    Term[] termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    weight = toChildBlockJoinQuery.createWeight(indexSearcher, false, 1f);\n    terms = new HashSet<>();\n    weight.extractTerms(terms);\n    termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    indexReader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testExtractTerms().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testExtractTerms().mjava","sourceNew":"  public void testExtractTerms() throws Exception {\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n    QueryBitSetProducer bitSetProducer = new QueryBitSetProducer(new MatchNoDocsQuery());\n    ToParentBlockJoinQuery toParentBlockJoinQuery = new ToParentBlockJoinQuery(termQuery, bitSetProducer, ScoreMode.None);\n    ToChildBlockJoinQuery toChildBlockJoinQuery = new ToChildBlockJoinQuery(toParentBlockJoinQuery, bitSetProducer);\n\n    Directory directory = newDirectory();\n    final IndexWriter w = new IndexWriter(directory, new IndexWriterConfig(new MockAnalyzer(random())));\n    w.close();\n    IndexReader indexReader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n\n    Weight weight = toParentBlockJoinQuery.createWeight(indexSearcher, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES, 1f);\n    Set<Term> terms = new HashSet<>();\n    weight.extractTerms(terms);\n    Term[] termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    weight = toChildBlockJoinQuery.createWeight(indexSearcher, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES, 1f);\n    terms = new HashSet<>();\n    weight.extractTerms(terms);\n    termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    indexReader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testExtractTerms() throws Exception {\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n    QueryBitSetProducer bitSetProducer = new QueryBitSetProducer(new MatchNoDocsQuery());\n    ToParentBlockJoinQuery toParentBlockJoinQuery = new ToParentBlockJoinQuery(termQuery, bitSetProducer, ScoreMode.None);\n    ToChildBlockJoinQuery toChildBlockJoinQuery = new ToChildBlockJoinQuery(toParentBlockJoinQuery, bitSetProducer);\n\n    Directory directory = newDirectory();\n    final IndexWriter w = new IndexWriter(directory, new IndexWriterConfig(new MockAnalyzer(random())));\n    w.close();\n    IndexReader indexReader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n\n    Weight weight = toParentBlockJoinQuery.createWeight(indexSearcher, false, 1f);\n    Set<Term> terms = new HashSet<>();\n    weight.extractTerms(terms);\n    Term[] termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    weight = toChildBlockJoinQuery.createWeight(indexSearcher, false, 1f);\n    terms = new HashSet<>();\n    weight.extractTerms(terms);\n    termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    indexReader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7","date":1552575873,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testExtractTerms().mjava","sourceNew":null,"sourceOld":"  public void testExtractTerms() throws Exception {\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n    QueryBitSetProducer bitSetProducer = new QueryBitSetProducer(new MatchNoDocsQuery());\n    ToParentBlockJoinQuery toParentBlockJoinQuery = new ToParentBlockJoinQuery(termQuery, bitSetProducer, ScoreMode.None);\n    ToChildBlockJoinQuery toChildBlockJoinQuery = new ToChildBlockJoinQuery(toParentBlockJoinQuery, bitSetProducer);\n\n    Directory directory = newDirectory();\n    final IndexWriter w = new IndexWriter(directory, new IndexWriterConfig(new MockAnalyzer(random())));\n    w.close();\n    IndexReader indexReader = DirectoryReader.open(directory);\n    IndexSearcher indexSearcher = new IndexSearcher(indexReader);\n\n    Weight weight = toParentBlockJoinQuery.createWeight(indexSearcher, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES, 1f);\n    Set<Term> terms = new HashSet<>();\n    weight.extractTerms(terms);\n    Term[] termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    weight = toChildBlockJoinQuery.createWeight(indexSearcher, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES, 1f);\n    terms = new HashSet<>();\n    weight.extractTerms(terms);\n    termArr =terms.toArray(new Term[0]);\n    assertEquals(1, termArr.length);\n\n    indexReader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["d9c5763f9e0fcdee71e1f90969b9f99d56a5a1c5"],"d9c5763f9e0fcdee71e1f90969b9f99d56a5a1c5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d9c5763f9e0fcdee71e1f90969b9f99d56a5a1c5","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9c5763f9e0fcdee71e1f90969b9f99d56a5a1c5"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["9fc47cb7b4346802411bb432f501ed0673d7119e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","417142ff08fda9cf0b72d5133e63097a166c6458"],"d9c5763f9e0fcdee71e1f90969b9f99d56a5a1c5":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"417142ff08fda9cf0b72d5133e63097a166c6458":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}