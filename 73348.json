{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReader#testWritingNormsNoReader().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReader#testWritingNormsNoReader().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexReader#testWritingNormsNoReader().mjava","sourceNew":"    // Make sure you can set norms & commit, and there are\n    // no extra norms files left:\n    public void testWritingNormsNoReader() throws IOException\n    {\n        Directory dir = new MockRAMDirectory();\n        IndexWriter writer = null;\n        IndexReader reader = null;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0 (writes to\n        //  _0_1.s0)\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n        reader.close();\n        \n        //  now open reader again & set norm for doc 0 (writes to _0_2.s0)\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n        reader.close();\n        assertFalse(\"failed to remove first generation norms file on writing second generation\",\n                    dir.fileExists(\"_0_1.s0\"));\n        \n        dir.close();\n    }\n\n","sourceOld":"    // Make sure you can set norms & commit, and there are\n    // no extra norms files left:\n    public void testWritingNormsNoReader() throws IOException\n    {\n        Directory dir = new MockRAMDirectory();\n        IndexWriter writer = null;\n        IndexReader reader = null;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0 (writes to\n        //  _0_1.s0)\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n        reader.close();\n        \n        //  now open reader again & set norm for doc 0 (writes to _0_2.s0)\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n        reader.close();\n        assertFalse(\"failed to remove first generation norms file on writing second generation\",\n                    dir.fileExists(\"_0_1.s0\"));\n        \n        dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReader#testWritingNormsNoReader().mjava","sourceNew":null,"sourceOld":"    // Make sure you can set norms & commit, and there are\n    // no extra norms files left:\n    public void testWritingNormsNoReader() throws IOException\n    {\n        Directory dir = new MockRAMDirectory();\n        IndexWriter writer = null;\n        IndexReader reader = null;\n        Term searchTerm = new Term(\"content\", \"aaa\");\n\n        //  add 1 documents with term : aaa\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        writer.setUseCompoundFile(false);\n        addDoc(writer, searchTerm.text());\n        writer.close();\n\n        //  now open reader & set norm for doc 0 (writes to\n        //  _0_1.s0)\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n        reader.close();\n        \n        //  now open reader again & set norm for doc 0 (writes to _0_2.s0)\n        reader = IndexReader.open(dir, false);\n        reader.setNorm(0, \"content\", (float) 2.0);\n        reader.close();\n        assertFalse(\"failed to remove first generation norms file on writing second generation\",\n                    dir.fileExists(\"_0_1.s0\"));\n        \n        dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}