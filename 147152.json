{"path":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","sourceNew":"  /** Return the corrected offset. If {@link #input} is a {@link CharStream} subclass\n   * this method calls {@link CharStream#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharStream#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    return (input instanceof CharStream) ? ((CharStream) input).correctOffset(currentOff) : currentOff;\n  }\n\n","sourceOld":"  /** Return the corrected offset. If {@link #input} is a {@link CharStream} subclass\n   * this method calls {@link CharStream#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharStream#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    return (input instanceof CharStream) ? ((CharStream) input).correctOffset(currentOff) : currentOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2782fe88d18fedf3ef67402c9cb5a41978a8c7","date":1328901155,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","sourceNew":"  /** Return the corrected offset. If {@link #input} is a {@link CharStream} subclass\n   * this method calls {@link CharStream#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharStream#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    assert input != null: \"this tokenizer is closed\";\n    return (input instanceof CharStream) ? ((CharStream) input).correctOffset(currentOff) : currentOff;\n  }\n\n","sourceOld":"  /** Return the corrected offset. If {@link #input} is a {@link CharStream} subclass\n   * this method calls {@link CharStream#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharStream#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    return (input instanceof CharStream) ? ((CharStream) input).correctOffset(currentOff) : currentOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","sourceNew":"  /** Return the corrected offset. If {@link #input} is a {@link CharFilter} subclass\n   * this method calls {@link CharFilter#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharFilter#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    assert input != null: \"this tokenizer is closed\";\n    return (input instanceof CharFilter) ? ((CharFilter) input).correctOffset(currentOff) : currentOff;\n  }\n\n","sourceOld":"  /** Return the corrected offset. If {@link #input} is a {@link CharStream} subclass\n   * this method calls {@link CharStream#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharStream#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    assert input != null: \"this tokenizer is closed\";\n    return (input instanceof CharStream) ? ((CharStream) input).correctOffset(currentOff) : currentOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","sourceNew":"  /** Return the corrected offset. If {@link #input} is a {@link CharFilter} subclass\n   * this method calls {@link CharFilter#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharFilter#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    assert input != null: \"this tokenizer is closed\";\n    return (input instanceof CharFilter) ? ((CharFilter) input).correctOffset(currentOff) : currentOff;\n  }\n\n","sourceOld":"  /** Return the corrected offset. If {@link #input} is a {@link CharStream} subclass\n   * this method calls {@link CharStream#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharStream#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    assert input != null: \"this tokenizer is closed\";\n    return (input instanceof CharStream) ? ((CharStream) input).correctOffset(currentOff) : currentOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","sourceNew":"  /** Return the corrected offset. If {@link #input} is a {@link CharFilter} subclass\n   * this method calls {@link CharFilter#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharFilter#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    assert input != null: \"this tokenizer is closed\";\n    return (input instanceof CharFilter) ? ((CharFilter) input).correctOffset(currentOff) : currentOff;\n  }\n\n","sourceOld":"  /** Return the corrected offset. If {@link #input} is a {@link CharStream} subclass\n   * this method calls {@link CharStream#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharStream#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    assert input != null: \"this tokenizer is closed\";\n    return (input instanceof CharStream) ? ((CharStream) input).correctOffset(currentOff) : currentOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","date":1379858263,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#correctOffset(int).mjava","sourceNew":"  /** Return the corrected offset. If {@link #input} is a {@link CharFilter} subclass\n   * this method calls {@link CharFilter#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharFilter#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    return (input instanceof CharFilter) ? ((CharFilter) input).correctOffset(currentOff) : currentOff;\n  }\n\n","sourceOld":"  /** Return the corrected offset. If {@link #input} is a {@link CharFilter} subclass\n   * this method calls {@link CharFilter#correctOffset}, else returns <code>currentOff</code>.\n   * @param currentOff offset as seen in the output\n   * @return corrected offset based on the input\n   * @see CharFilter#correctOffset\n   */\n  protected final int correctOffset(int currentOff) {\n    assert input != null: \"this tokenizer is closed\";\n    return (input instanceof CharFilter) ? ((CharFilter) input).correctOffset(currentOff) : currentOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["fc706b1e03a539d44d99998108feb684bb44cbb2"],"aba371508186796cc6151d8223a5b4e16d02e26e":["6c2782fe88d18fedf3ef67402c9cb5a41978a8c7","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["6c2782fe88d18fedf3ef67402c9cb5a41978a8c7"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["6c2782fe88d18fedf3ef67402c9cb5a41978a8c7","fc706b1e03a539d44d99998108feb684bb44cbb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c2782fe88d18fedf3ef67402c9cb5a41978a8c7":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0"]},"commit2Childs":{"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fc706b1e03a539d44d99998108feb684bb44cbb2":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6c2782fe88d18fedf3ef67402c9cb5a41978a8c7"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6c2782fe88d18fedf3ef67402c9cb5a41978a8c7":["aba371508186796cc6151d8223a5b4e16d02e26e","fc706b1e03a539d44d99998108feb684bb44cbb2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}