{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestToken#testCtor().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestToken#testCtor().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestToken#testCtor().mjava","sourceNew":"  public void testCtor() throws Exception {\n    Token t = new Token();\n    char[] content = \"hello\".toCharArray();\n    t.copyBuffer(content, 0, content.length);\n    assertNotSame(t.buffer(), content);\n    assertEquals(0, t.startOffset());\n    assertEquals(0, t.endOffset());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"word\", t.type());\n    assertEquals(0, t.getFlags());\n\n    t = new Token(6, 22);\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"word\", t.type());\n    assertEquals(0, t.getFlags());\n\n    t = new Token(6, 22, 7);\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"word\", t.type());\n    assertEquals(7, t.getFlags());\n\n    t = new Token(6, 22, \"junk\");\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"junk\", t.type());\n    assertEquals(0, t.getFlags());\n  }\n\n","sourceOld":"  public void testCtor() throws Exception {\n    Token t = new Token();\n    char[] content = \"hello\".toCharArray();\n    t.copyBuffer(content, 0, content.length);\n    assertNotSame(t.buffer(), content);\n    assertEquals(0, t.startOffset());\n    assertEquals(0, t.endOffset());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"word\", t.type());\n    assertEquals(0, t.getFlags());\n\n    t = new Token(6, 22);\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"word\", t.type());\n    assertEquals(0, t.getFlags());\n\n    t = new Token(6, 22, 7);\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"word\", t.type());\n    assertEquals(7, t.getFlags());\n\n    t = new Token(6, 22, \"junk\");\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"junk\", t.type());\n    assertEquals(0, t.getFlags());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","date":1399205975,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestToken#testCtor().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestToken#testCtor().mjava","sourceNew":"  public void testCtor() throws Exception {\n    Token t = new Token();\n    char[] content = \"hello\".toCharArray();\n    t.copyBuffer(content, 0, content.length);\n    assertNotSame(t.buffer(), content);\n    assertEquals(0, t.startOffset());\n    assertEquals(0, t.endOffset());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"word\", t.type());\n    assertEquals(0, t.getFlags());\n\n    t = new Token();\n    t.setOffset(6, 22);\n    t.setFlags(7);\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"word\", t.type());\n    assertEquals(7, t.getFlags());\n\n    t = new Token();\n    t.setOffset(6, 22);\n    t.setType(\"junk\");\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"junk\", t.type());\n    assertEquals(0, t.getFlags());\n  }\n\n","sourceOld":"  public void testCtor() throws Exception {\n    Token t = new Token();\n    char[] content = \"hello\".toCharArray();\n    t.copyBuffer(content, 0, content.length);\n    assertNotSame(t.buffer(), content);\n    assertEquals(0, t.startOffset());\n    assertEquals(0, t.endOffset());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"word\", t.type());\n    assertEquals(0, t.getFlags());\n\n    t = new Token(6, 22);\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"word\", t.type());\n    assertEquals(0, t.getFlags());\n\n    t = new Token(6, 22, 7);\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"word\", t.type());\n    assertEquals(7, t.getFlags());\n\n    t = new Token(6, 22, \"junk\");\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"junk\", t.type());\n    assertEquals(0, t.getFlags());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93124590c6e2a8b45898cbae46f96c3a05d9bce0","date":1399415098,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestToken#testCtor().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestToken#testCtor().mjava","sourceNew":"  public void testCtor() throws Exception {\n    Token t = new Token(\"hello\", 0, 0);\n    assertEquals(0, t.startOffset());\n    assertEquals(0, t.endOffset());\n    assertEquals(1, t.getPositionIncrement());\n    assertEquals(1, t.getPositionLength());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"word\", t.type());\n    assertEquals(0, t.getFlags());\n    assertNull(t.getPayload());\n  }\n\n","sourceOld":"  public void testCtor() throws Exception {\n    Token t = new Token();\n    char[] content = \"hello\".toCharArray();\n    t.copyBuffer(content, 0, content.length);\n    assertNotSame(t.buffer(), content);\n    assertEquals(0, t.startOffset());\n    assertEquals(0, t.endOffset());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"word\", t.type());\n    assertEquals(0, t.getFlags());\n\n    t = new Token();\n    t.setOffset(6, 22);\n    t.setFlags(7);\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"word\", t.type());\n    assertEquals(7, t.getFlags());\n\n    t = new Token();\n    t.setOffset(6, 22);\n    t.setType(\"junk\");\n    t.copyBuffer(content, 0, content.length);\n    assertEquals(\"hello\", t.toString());\n    assertEquals(\"hello\", t.toString());\n    assertEquals(6, t.startOffset());\n    assertEquals(22, t.endOffset());\n    assertEquals(\"junk\", t.type());\n    assertEquals(0, t.getFlags());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93124590c6e2a8b45898cbae46f96c3a05d9bce0":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93124590c6e2a8b45898cbae46f96c3a05d9bce0"]},"commit2Childs":{"93124590c6e2a8b45898cbae46f96c3a05d9bce0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["93124590c6e2a8b45898cbae46f96c3a05d9bce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}