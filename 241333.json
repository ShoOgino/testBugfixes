{"path":"src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#createProcessor(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"d656bfb8102419b4568f368a9606efc4f059912e","date":1217031644,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#createProcessor(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/update/processor/ChainedUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public UpdateRequestProcessor createProcessor(SolrQueryRequest req, SolrQueryResponse rsp) \n  {\n    UpdateRequestProcessor processor = null;\n    UpdateRequestProcessor last = null;\n    for (int i = chain.length-1; i>=0; i--) {\n      processor = chain[i].getInstance(req, rsp, last);\n      last = processor == null ? last : processor;\n    }\n    return last;\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) \n  {\n    UpdateRequestProcessor processor = null;\n    UpdateRequestProcessor last = null;\n    for (int i = factory.length-1; i>=0; i--) {\n      processor = factory[i].getInstance(req, rsp, last);\n      last = processor == null ? last : processor;\n    }\n    return last;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#createProcessor(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#createProcessor(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public UpdateRequestProcessor createProcessor(SolrQueryRequest req, SolrQueryResponse rsp) \n  {\n    UpdateRequestProcessor processor = null;\n    UpdateRequestProcessor last = null;\n    for (int i = chain.length-1; i>=0; i--) {\n      processor = chain[i].getInstance(req, rsp, last);\n      last = processor == null ? last : processor;\n    }\n    return last;\n  }\n\n","sourceOld":"  public UpdateRequestProcessor createProcessor(SolrQueryRequest req, SolrQueryResponse rsp) \n  {\n    UpdateRequestProcessor processor = null;\n    UpdateRequestProcessor last = null;\n    for (int i = chain.length-1; i>=0; i--) {\n      processor = chain[i].getInstance(req, rsp, last);\n      last = processor == null ? last : processor;\n    }\n    return last;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"d656bfb8102419b4568f368a9606efc4f059912e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["d656bfb8102419b4568f368a9606efc4f059912e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["d656bfb8102419b4568f368a9606efc4f059912e"],"d656bfb8102419b4568f368a9606efc4f059912e":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}