{"path":"src/java/org/apache/solr/search/DocSet#addUnique(int).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/DocSet#addUnique(int).mjava","pathOld":"/dev/null","sourceNew":"  public void addUnique(int doc);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d447dab9352f36e9fc4fe467c8ccf77e5ae83477","date":1148776893,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/search/DocSet#addUnique(int).mjava","pathOld":"src/java/org/apache/solr/search/DocSet#addUnique(int).mjava","sourceNew":"  /**\n   * Adds a document the caller knows is not currently in the DocSet\n   * (optional operation).\n   *\n   * <p>\n   * This method may be faster then <code>add(doc)</code> in some\n   * implimentaions provided the caller is certain of the precondition.\n   * </p>\n   *\n   * @see #add\n   * @throws SolrException if the implimentation does not allow modifications\n   */\n  public void addUnique(int doc);\n\n","sourceOld":"  public void addUnique(int doc);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb5d56855c3688f1b492154d46c0f18af3f3837e","date":1148781481,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/DocSet#addUnique(int).mjava","pathOld":"src/java/org/apache/solr/search/DocSet#addUnique(int).mjava","sourceNew":"  /**\n   * Adds a document the caller knows is not currently in the DocSet\n   * (optional operation).\n   *\n   * <p>\n   * This method may be faster then <code>add(doc)</code> in some\n   * implementaions provided the caller is certain of the precondition.\n   * </p>\n   *\n   * @see #add\n   * @throws SolrException if the implementation does not allow modifications\n   */\n  public void addUnique(int doc);\n\n","sourceOld":"  /**\n   * Adds a document the caller knows is not currently in the DocSet\n   * (optional operation).\n   *\n   * <p>\n   * This method may be faster then <code>add(doc)</code> in some\n   * implimentaions provided the caller is certain of the precondition.\n   * </p>\n   *\n   * @see #add\n   * @throws SolrException if the implimentation does not allow modifications\n   */\n  public void addUnique(int doc);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/DocSet#addUnique(int).mjava","pathOld":"src/java/org/apache/solr/search/DocSet#addUnique(int).mjava","sourceNew":"  /**\n   * Adds a document the caller knows is not currently in the DocSet\n   * (optional operation).\n   *\n   * <p>\n   * This method may be faster then <code>add(doc)</code> in some\n   * implementaions provided the caller is certain of the precondition.\n   * </p>\n   *\n   * @see #add\n   * @throws SolrException if the implementation does not allow modifications\n   */\n  public void addUnique(int doc);\n\n","sourceOld":"  /**\n   * Adds a document the caller knows is not currently in the DocSet\n   * (optional operation).\n   *\n   * <p>\n   * This method may be faster then <code>add(doc)</code> in some\n   * implementaions provided the caller is certain of the precondition.\n   * </p>\n   *\n   * @see #add\n   * @throws SolrException if the implementation does not allow modifications\n   */\n  public void addUnique(int doc);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d447dab9352f36e9fc4fe467c8ccf77e5ae83477":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"cb5d56855c3688f1b492154d46c0f18af3f3837e":["d447dab9352f36e9fc4fe467c8ccf77e5ae83477"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["cb5d56855c3688f1b492154d46c0f18af3f3837e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d447dab9352f36e9fc4fe467c8ccf77e5ae83477":["cb5d56855c3688f1b492154d46c0f18af3f3837e"],"cb5d56855c3688f1b492154d46c0f18af3f3837e":["ad94625fb8d088209f46650c8097196fec67f00c"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["d447dab9352f36e9fc4fe467c8ccf77e5ae83477"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}