{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoDistanceUtils#closestPointOnBBox(double,double,double,double,double,double,double[]).mjava","commits":[{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoDistanceUtils#closestPointOnBBox(double,double,double,double,double,double,double[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoDistanceUtils#closestPointOnBBox(double,double,double,double,double,double,double[]).mjava","sourceNew":"  /**\n   *  Finds the closest point within a rectangle (defined by rMinX, rMinY, rMaxX, rMaxY) to the given (lon, lat) point\n   *  the result is provided in closestPt.  When the point is outside the rectangle, the closest point is on an edge\n   *  or corner of the rectangle; else, the closest point is the point itself.\n   */\n  public static void closestPointOnBBox(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                        final double lon, final double lat, double[] closestPt) {\n    assert closestPt != null && closestPt.length == 2;\n\n    closestPt[0] = 0;\n    closestPt[1] = 0;\n\n    boolean xSet = true;\n    boolean ySet = true;\n\n    if (lon > rMaxX) {\n      closestPt[0] = rMaxX;\n    } else if (lon < rMinX) {\n      closestPt[0] = rMinX;\n    } else {\n      xSet = false;\n    }\n\n    if (lat > rMaxY) {\n      closestPt[1] = rMaxY;\n    } else if (lat < rMinY) {\n      closestPt[1] = rMinY;\n    } else {\n      ySet = false;\n    }\n\n    if (closestPt[0] == 0 && xSet == false) {\n      closestPt[0] = lon;\n    }\n\n    if (closestPt[1] == 0 && ySet == false) {\n      closestPt[1] = lat;\n    }\n  }\n\n","sourceOld":"  /**\n   *  Finds the closest point within a rectangle (defined by rMinX, rMinY, rMaxX, rMaxY) to the given (lon, lat) point\n   *  the result is provided in closestPt.  When the point is outside the rectangle, the closest point is on an edge\n   *  or corner of the rectangle; else, the closest point is the point itself.\n   */\n  public static void closestPointOnBBox(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                        final double lon, final double lat, double[] closestPt) {\n    assert closestPt != null && closestPt.length == 2;\n\n    closestPt[0] = 0;\n    closestPt[1] = 0;\n\n    boolean xSet = true;\n    boolean ySet = true;\n\n    if (lon > rMaxX) {\n      closestPt[0] = rMaxX;\n    } else if (lon < rMinX) {\n      closestPt[0] = rMinX;\n    } else {\n      xSet = false;\n    }\n\n    if (lat > rMaxY) {\n      closestPt[1] = rMaxY;\n    } else if (lat < rMinY) {\n      closestPt[1] = rMinY;\n    } else {\n      ySet = false;\n    }\n\n    if (closestPt[0] == 0 && xSet == false) {\n      closestPt[0] = lon;\n    }\n\n    if (closestPt[1] == 0 && ySet == false) {\n      closestPt[1] = lat;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoDistanceUtils#closestPointOnBBox(double,double,double,double,double,double,double[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/util/GeoDistanceUtils#closestPointOnBBox(double,double,double,double,double,double,double[]).mjava","sourceNew":"  /**\n   *  Finds the closest point within a rectangle (defined by rMinX, rMinY, rMaxX, rMaxY) to the given (lon, lat) point\n   *  the result is provided in closestPt.  When the point is outside the rectangle, the closest point is on an edge\n   *  or corner of the rectangle; else, the closest point is the point itself.\n   */\n  public static void closestPointOnBBox(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                        final double lon, final double lat, double[] closestPt) {\n    assert closestPt != null && closestPt.length == 2;\n\n    closestPt[0] = 0;\n    closestPt[1] = 0;\n\n    boolean xSet = true;\n    boolean ySet = true;\n\n    if (lon > rMaxX) {\n      closestPt[0] = rMaxX;\n    } else if (lon < rMinX) {\n      closestPt[0] = rMinX;\n    } else {\n      xSet = false;\n    }\n\n    if (lat > rMaxY) {\n      closestPt[1] = rMaxY;\n    } else if (lat < rMinY) {\n      closestPt[1] = rMinY;\n    } else {\n      ySet = false;\n    }\n\n    if (closestPt[0] == 0 && xSet == false) {\n      closestPt[0] = lon;\n    }\n\n    if (closestPt[1] == 0 && ySet == false) {\n      closestPt[1] = lat;\n    }\n  }\n\n","sourceOld":"  /**\n   *  Finds the closest point within a rectangle (defined by rMinX, rMinY, rMaxX, rMaxY) to the given (lon, lat) point\n   *  the result is provided in closestPt.  When the point is outside the rectangle, the closest point is on an edge\n   *  or corner of the rectangle; else, the closest point is the point itself.\n   */\n  public static void closestPointOnBBox(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                        final double lon, final double lat, double[] closestPt) {\n    assert closestPt != null && closestPt.length == 2;\n\n    closestPt[0] = 0;\n    closestPt[1] = 0;\n\n    boolean xSet = true;\n    boolean ySet = true;\n\n    if (lon > rMaxX) {\n      closestPt[0] = rMaxX;\n    } else if (lon < rMinX) {\n      closestPt[0] = rMinX;\n    } else {\n      xSet = false;\n    }\n\n    if (lat > rMaxY) {\n      closestPt[1] = rMaxY;\n    } else if (lat < rMinY) {\n      closestPt[1] = rMinY;\n    } else {\n      ySet = false;\n    }\n\n    if (closestPt[0] == 0 && xSet == false) {\n      closestPt[0] = lon;\n    }\n\n    if (closestPt[1] == 0 && ySet == false) {\n      closestPt[1] = lat;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoDistanceUtils#closestPointOnBBox(double,double,double,double,double,double,double[]).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoDistanceUtils#closestPointOnBBox(double,double,double,double,double,double,double[]).mjava","sourceNew":"  /**\n   *  Finds the closest point within a rectangle (defined by rMinX, rMinY, rMaxX, rMaxY) to the given (lon, lat) point\n   *  the result is provided in closestPt (lat, lon).  When the point is outside the rectangle, the closest point is on an edge\n   *  or corner of the rectangle; else, the closest point is the point itself.\n   */\n  public static void closestPointOnBBox(final double rMinY, final double rMaxY, final double rMinX, final double rMaxX,\n                                        final double lat, final double lon, double[] closestPt) {\n    assert closestPt != null && closestPt.length == 2;\n\n    closestPt[0] = 0;\n    closestPt[1] = 0;\n\n    boolean xSet = true;\n    boolean ySet = true;\n\n    if (lon > rMaxX) {\n      closestPt[1] = rMaxX;\n    } else if (lon < rMinX) {\n      closestPt[1] = rMinX;\n    } else {\n      xSet = false;\n    }\n\n    if (lat > rMaxY) {\n      closestPt[0] = rMaxY;\n    } else if (lat < rMinY) {\n      closestPt[0] = rMinY;\n    } else {\n      ySet = false;\n    }\n\n    if (closestPt[0] == 0 && ySet == false) {\n      closestPt[0] = lat;\n    }\n\n    if (closestPt[1] == 0 && xSet == false) {\n      closestPt[1] = lon;\n    }\n  }\n\n","sourceOld":"  /**\n   *  Finds the closest point within a rectangle (defined by rMinX, rMinY, rMaxX, rMaxY) to the given (lon, lat) point\n   *  the result is provided in closestPt.  When the point is outside the rectangle, the closest point is on an edge\n   *  or corner of the rectangle; else, the closest point is the point itself.\n   */\n  public static void closestPointOnBBox(final double rMinX, final double rMinY, final double rMaxX, final double rMaxY,\n                                        final double lon, final double lat, double[] closestPt) {\n    assert closestPt != null && closestPt.length == 2;\n\n    closestPt[0] = 0;\n    closestPt[1] = 0;\n\n    boolean xSet = true;\n    boolean ySet = true;\n\n    if (lon > rMaxX) {\n      closestPt[0] = rMaxX;\n    } else if (lon < rMinX) {\n      closestPt[0] = rMinX;\n    } else {\n      xSet = false;\n    }\n\n    if (lat > rMaxY) {\n      closestPt[1] = rMaxY;\n    } else if (lat < rMinY) {\n      closestPt[1] = rMinY;\n    } else {\n      ySet = false;\n    }\n\n    if (closestPt[0] == 0 && xSet == false) {\n      closestPt[0] = lon;\n    }\n\n    if (closestPt[1] == 0 && ySet == false) {\n      closestPt[1] = lat;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca8abb1a4010d2a9e71b0162d3600e898a8a4f56","date":1458685284,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoDistanceUtils#closestPointOnBBox(double,double,double,double,double,double,double[]).mjava","sourceNew":null,"sourceOld":"  /**\n   *  Finds the closest point within a rectangle (defined by rMinX, rMinY, rMaxX, rMaxY) to the given (lon, lat) point\n   *  the result is provided in closestPt (lat, lon).  When the point is outside the rectangle, the closest point is on an edge\n   *  or corner of the rectangle; else, the closest point is the point itself.\n   */\n  public static void closestPointOnBBox(final double rMinY, final double rMaxY, final double rMinX, final double rMaxX,\n                                        final double lat, final double lon, double[] closestPt) {\n    assert closestPt != null && closestPt.length == 2;\n\n    closestPt[0] = 0;\n    closestPt[1] = 0;\n\n    boolean xSet = true;\n    boolean ySet = true;\n\n    if (lon > rMaxX) {\n      closestPt[1] = rMaxX;\n    } else if (lon < rMinX) {\n      closestPt[1] = rMinX;\n    } else {\n      xSet = false;\n    }\n\n    if (lat > rMaxY) {\n      closestPt[0] = rMaxY;\n    } else if (lat < rMinY) {\n      closestPt[0] = rMinY;\n    } else {\n      ySet = false;\n    }\n\n    if (closestPt[0] == 0 && ySet == false) {\n      closestPt[0] = lat;\n    }\n\n    if (closestPt[1] == 0 && xSet == false) {\n      closestPt[1] = lon;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ca8abb1a4010d2a9e71b0162d3600e898a8a4f56":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["937923083e4d137932336fc80f3d78758ff698a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ca8abb1a4010d2a9e71b0162d3600e898a8a4f56"]},"commit2Childs":{"ca8abb1a4010d2a9e71b0162d3600e898a8a4f56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["ca8abb1a4010d2a9e71b0162d3600e898a8a4f56"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"937923083e4d137932336fc80f3d78758ff698a6":["ec996bf2daff09d61a876319e8fae4aebbea58e3","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}