{"path":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(FieldInfo,SegmentReader,NumericDocValues).mjava","commits":[{"id":"988a443ec59cc75e4087970f81fb02ea1f74ee62","date":1353356370,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(FieldInfo,SegmentReader,NumericDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private void checkNumericDocValues(FieldInfo fi, SegmentReader reader, NumericDocValues ndv) {\n    final long minValue = ndv.minValue();\n    final long maxValue = ndv.maxValue();\n    long minValue2 = Long.MAX_VALUE;\n    long maxValue2 = Long.MIN_VALUE;\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      long value = ndv.get(i);\n      minValue2 = Math.min(minValue2, value);\n      maxValue2 = Math.max(maxValue2, value);\n    }\n    if (minValue != minValue2) {\n      throw new RuntimeException(\"dv for field: \" + fi.name + \" reports minValue=\" + minValue + \" but this is not the case: \" + minValue2);\n    }\n    if (maxValue != maxValue2) {\n      throw new RuntimeException(\"dv for field: \" + fi.name + \" reports maxValue=\" + maxValue + \" but this is not the case: \" + maxValue2);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e99275efa2c9c9ae3bdba986218af82f2bf3dc30","date":1354658499,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(FieldInfo,AtomicReader,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkNumericDocValues(FieldInfo,SegmentReader,NumericDocValues).mjava","sourceNew":"  private static void checkNumericDocValues(FieldInfo fi, AtomicReader reader, NumericDocValues ndv) {\n    // nocommit remove this:\n    if (ndv == null) {\n      return;\n    }\n    final long minValue = ndv.minValue();\n    final long maxValue = ndv.maxValue();\n    long minValue2 = Long.MAX_VALUE;\n    long maxValue2 = Long.MIN_VALUE;\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      long value = ndv.get(i);\n      minValue2 = Math.min(minValue2, value);\n      maxValue2 = Math.max(maxValue2, value);\n    }\n    if (minValue != minValue2) {\n      throw new RuntimeException(\"dv for field: \" + fi.name + \" reports minValue=\" + minValue + \" but this is not the case: \" + minValue2);\n    }\n    if (maxValue != maxValue2) {\n      throw new RuntimeException(\"dv for field: \" + fi.name + \" reports maxValue=\" + maxValue + \" but this is not the case: \" + maxValue2);\n    }\n  }\n\n","sourceOld":"  private void checkNumericDocValues(FieldInfo fi, SegmentReader reader, NumericDocValues ndv) {\n    final long minValue = ndv.minValue();\n    final long maxValue = ndv.maxValue();\n    long minValue2 = Long.MAX_VALUE;\n    long maxValue2 = Long.MIN_VALUE;\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      long value = ndv.get(i);\n      minValue2 = Math.min(minValue2, value);\n      maxValue2 = Math.max(maxValue2, value);\n    }\n    if (minValue != minValue2) {\n      throw new RuntimeException(\"dv for field: \" + fi.name + \" reports minValue=\" + minValue + \" but this is not the case: \" + minValue2);\n    }\n    if (maxValue != maxValue2) {\n      throw new RuntimeException(\"dv for field: \" + fi.name + \" reports maxValue=\" + maxValue + \" but this is not the case: \" + maxValue2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"988a443ec59cc75e4087970f81fb02ea1f74ee62":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e99275efa2c9c9ae3bdba986218af82f2bf3dc30":["988a443ec59cc75e4087970f81fb02ea1f74ee62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"988a443ec59cc75e4087970f81fb02ea1f74ee62":["e99275efa2c9c9ae3bdba986218af82f2bf3dc30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["988a443ec59cc75e4087970f81fb02ea1f74ee62","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e99275efa2c9c9ae3bdba986218af82f2bf3dc30":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e99275efa2c9c9ae3bdba986218af82f2bf3dc30","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}