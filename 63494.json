{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/Similarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","sourceNew":"  /**\n   * Creates a new {@link Similarity.ExactSimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(float, CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return ExactSimScorer for scoring documents across <code>context</code>\n   * @throws IOException\n   */\n  public abstract ExactSimScorer exactSimScorer(SimWeight weight, AtomicReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Creates a new {@link Similarity.ExactSimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(float, CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return ExactSimScorer for scoring documents across <code>context</code>\n   * @throws IOException\n   */\n  public abstract ExactSimScorer exactSimScorer(SimWeight weight, AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","sourceNew":"  /**\n   * Creates a new {@link Similarity.ExactSimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(float, CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return ExactSimScorer for scoring documents across <code>context</code>\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract ExactSimScorer exactSimScorer(SimWeight weight, AtomicReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Creates a new {@link Similarity.ExactSimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(float, CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return ExactSimScorer for scoring documents across <code>context</code>\n   * @throws IOException\n   */\n  public abstract ExactSimScorer exactSimScorer(SimWeight weight, AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b799defcfda6d303cbb180917bf1e749089adf42","date":1370695356,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#exactSimScorer(SimWeight,AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new {@link Similarity.ExactSimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(float, CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return ExactSimScorer for scoring documents across <code>context</code>\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract ExactSimScorer exactSimScorer(SimWeight weight, AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b799defcfda6d303cbb180917bf1e749089adf42":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b799defcfda6d303cbb180917bf1e749089adf42"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["b799defcfda6d303cbb180917bf1e749089adf42"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b799defcfda6d303cbb180917bf1e749089adf42":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}