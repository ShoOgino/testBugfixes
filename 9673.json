{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","commits":[{"id":"b374d78db8148ec6796fdf37148b33897ab40a8c","date":1351606544,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, libLoader, getCoreProps(instanceDir, dcore.getPropertiesName(), dcore.getCoreProperties()));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, libLoader, SolrProperties.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}/{}\", instanceDir, dcore.getConfigName());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, libLoader, getCoreProps(instanceDir, dcore.getPropertiesName(), dcore.getCoreProperties()));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.name);\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.name);\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9cf81bc8c6e4078e236f0e38b3a2d0271854f207","date":1364832963,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, libLoader, SolrProperties.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}/{}\", instanceDir, dcore.getConfigName());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, libLoader, SolrProperties.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}/{}\", instanceDir, dcore.getConfigName());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = new IndexSchema(config, dcore.getSchemaName(), null);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = new IndexSchema(config, dcore.getSchemaName(), null);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9818efa55563ddfecdecafbdd43f4bee9f252e7d","date":1364853872,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, libLoader, ConfigSolrXml.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}/{}\", instanceDir, dcore.getConfigName());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, libLoader, SolrProperties.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}/{}\", instanceDir, dcore.getConfigName());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":["4cc2a5e90b34bfc6bb00b6261a7956c2c022c275"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cc2a5e90b34bfc6bb00b6261a7956c2c022c275","date":1364946285,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), ConfigSolrXml.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}/{}\", instanceDir, dcore.getConfigName());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, libLoader, ConfigSolrXml.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}/{}\", instanceDir, dcore.getConfigName());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":["9818efa55563ddfecdecafbdd43f4bee9f252e7d"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3278df77f7f499b55fdb79861c0641450444e7d0","date":1366238988,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), ConfigSolrXml.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), ConfigSolrXml.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}/{}\", instanceDir, dcore.getConfigName());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), ConfigSolrXml.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), ConfigSolrXml.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      File schemaFile = new File(dcore.getSchemaName());\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getInstanceDir() + \"conf\"\n            + File.separator + dcore.getSchemaName());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), dcore.getCoreProperties());\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getName());\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getName());\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), ConfigSolrXml.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), dcore.getCoreProperties());\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getName());\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getName());\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), ConfigSolrXml.getCoreProperties(instanceDir, dcore));\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getProperty(CoreDescriptor.CORE_NAME));\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e9769bcabf28416689da7ec56a0c799b2a66b87","date":1376765390,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), dcore.getSubstitutableProperties());\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getName());\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getName());\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), dcore.getCoreProperties());\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getName());\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getName());\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), dcore.getSubstitutableProperties());\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getName());\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getName());\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), dcore.getCoreProperties());\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getName());\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getName());\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), dcore.getSubstitutableProperties());\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getName());\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getName());\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), dcore.getCoreProperties());\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getName());\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getName());\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0","date":1377955248,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), dcore.getSubstitutableProperties());\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n          \"Could not load config file \" + new File(instanceDir, dcore.getConfigName()).getAbsolutePath(),\n          e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getName());\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getName());\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), dcore.getSubstitutableProperties());\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load config for \" + dcore.getConfigName(), e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getName());\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getName());\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":["b374d78db8148ec6796fdf37148b33897ab40a8c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d4e985daefcb892b529223b478c47985fc3c483","date":1395658491,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#createFromLocal(String,CoreDescriptor).mjava","sourceNew":null,"sourceOld":"  // Helper method to separate out creating a core from local configuration files. See create()\n  private SolrCore createFromLocal(String instanceDir, CoreDescriptor dcore) {\n    SolrResourceLoader solrLoader = null;\n\n    SolrConfig config = null;\n    solrLoader = new SolrResourceLoader(instanceDir, loader.getClassLoader(), dcore.getSubstitutableProperties());\n    try {\n      config = new SolrConfig(solrLoader, dcore.getConfigName(), null);\n    } catch (Exception e) {\n      log.error(\"Failed to load file {}\", new File(instanceDir, dcore.getConfigName()).getAbsolutePath());\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n          \"Could not load config file \" + new File(instanceDir, dcore.getConfigName()).getAbsolutePath(),\n          e);\n    }\n\n    IndexSchema schema = null;\n    if (indexSchemaCache != null) {\n      final String resourceNameToBeUsed = IndexSchemaFactory.getResourceNameToBeUsed(dcore.getSchemaName(), config);\n      File schemaFile = new File(resourceNameToBeUsed);\n      if (!schemaFile.isAbsolute()) {\n        schemaFile = new File(solrLoader.getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        schema = indexSchemaCache.get(key);\n        if (schema == null) {\n          log.info(\"creating new schema object for core: \" + dcore.getName());\n          schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n          indexSchemaCache.put(key, schema);\n        } else {\n          log.info(\"re-using schema object for core: \" + dcore.getName());\n        }\n      }\n    }\n\n    if (schema == null) {\n      schema = IndexSchemaFactory.buildIndexSchema(dcore.getSchemaName(), config);\n    }\n\n    SolrCore core = new SolrCore(dcore.getName(), null, config, schema, dcore);\n\n    if (core.getUpdateHandler().getUpdateLog() != null) {\n      // always kick off recovery if we are in standalone mode.\n      core.getUpdateHandler().getUpdateLog().recoverFromLog();\n    }\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0":["1e9769bcabf28416689da7ec56a0c799b2a66b87"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["08970e5b8411182a29412c177eff67ec1110095b","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"4cc2a5e90b34bfc6bb00b6261a7956c2c022c275":["9818efa55563ddfecdecafbdd43f4bee9f252e7d"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["37a0f60745e53927c4c876cfe5b5a58170f0646c","1e9769bcabf28416689da7ec56a0c799b2a66b87"],"31d4861802ca404d78ca1d15f4550eec415b9199":["6e764e9a107f93be9fa3c922bc6a197b3eec387e","1e9769bcabf28416689da7ec56a0c799b2a66b87"],"08970e5b8411182a29412c177eff67ec1110095b":["3278df77f7f499b55fdb79861c0641450444e7d0"],"9818efa55563ddfecdecafbdd43f4bee9f252e7d":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"1e9769bcabf28416689da7ec56a0c799b2a66b87":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["a837c064b67fa63a9394136e31218b908cdcf783"],"3278df77f7f499b55fdb79861c0641450444e7d0":["4cc2a5e90b34bfc6bb00b6261a7956c2c022c275"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b374d78db8148ec6796fdf37148b33897ab40a8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2d4e985daefcb892b529223b478c47985fc3c483":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["08970e5b8411182a29412c177eff67ec1110095b"],"a837c064b67fa63a9394136e31218b908cdcf783":["b374d78db8148ec6796fdf37148b33897ab40a8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d4e985daefcb892b529223b478c47985fc3c483"]},"commit2Childs":{"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0":["2d4e985daefcb892b529223b478c47985fc3c483"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"4cc2a5e90b34bfc6bb00b6261a7956c2c022c275":["3278df77f7f499b55fdb79861c0641450444e7d0"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"08970e5b8411182a29412c177eff67ec1110095b":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"9818efa55563ddfecdecafbdd43f4bee9f252e7d":["4cc2a5e90b34bfc6bb00b6261a7956c2c022c275"],"1e9769bcabf28416689da7ec56a0c799b2a66b87":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199"],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["9818efa55563ddfecdecafbdd43f4bee9f252e7d"],"3278df77f7f499b55fdb79861c0641450444e7d0":["08970e5b8411182a29412c177eff67ec1110095b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b374d78db8148ec6796fdf37148b33897ab40a8c"],"b374d78db8148ec6796fdf37148b33897ab40a8c":["a837c064b67fa63a9394136e31218b908cdcf783"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","31d4861802ca404d78ca1d15f4550eec415b9199","1e9769bcabf28416689da7ec56a0c799b2a66b87"],"2d4e985daefcb892b529223b478c47985fc3c483":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a837c064b67fa63a9394136e31218b908cdcf783":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}