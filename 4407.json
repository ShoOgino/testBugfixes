{"path":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":null,"sourceOld":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce83f0d72db4660fd277a9d357698004d8f4336","date":1269047368,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94","date":1269556173,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf4043d1468fe2601522c77072842bc478cb4e91","date":1298673752,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\u1234llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\u1234llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n @Test\n public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"h\\uD866\\uDF05llo\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    assertEquals( 2, rsp.getResults().getNumFound() );\n    // System.out.println( rsp.getResults() );\n\n    // query outside ascii range\n    query.setQuery(\"name:h\\uD866\\uDF05llo\");\n    rsp = server.query( query );\n    assertEquals( 1, rsp.getResults().getNumFound() );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["bf4043d1468fe2601522c77072842bc478cb4e91","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"9ce83f0d72db4660fd277a9d357698004d8f4336":["1da8d55113b689b06716246649de6f62430f15c0"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94","bf4043d1468fe2601522c77072842bc478cb4e91"],"2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94":["9ce83f0d72db4660fd277a9d357698004d8f4336"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["bf4043d1468fe2601522c77072842bc478cb4e91"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94","bf4043d1468fe2601522c77072842bc478cb4e91"],"bf4043d1468fe2601522c77072842bc478cb4e91":["2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["bf4043d1468fe2601522c77072842bc478cb4e91"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"1da8d55113b689b06716246649de6f62430f15c0":["9ce83f0d72db4660fd277a9d357698004d8f4336"],"9ce83f0d72db4660fd277a9d357698004d8f4336":["2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","bf4043d1468fe2601522c77072842bc478cb4e91"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"bf4043d1468fe2601522c77072842bc478cb4e91":["c26f00b574427b55127e869b935845554afde1fa","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","c903c3d15906a3da96b8c0c2fb704491005fdbdb","d619839baa8ce5503e496b94a9e42ad6f079293f","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}