{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String).mjava","commits":[{"id":"1396efc84e04da571f41a8f47919f874385db0a8","date":1494866186,"type":1,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String,String,String).mjava","sourceNew":"    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      if (SystemUtils.IS_OS_WINDOWS) {\n        includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n        includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n        includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      } else {\n        includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n        includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n        includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      System.out.println(\"Written out credentials file: \" + basicAuthConfFile + \", updated Solr include file: \" + includeFile.getAbsolutePath() + \".\");\n    }\n\n","sourceOld":"    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile, String username, String password) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      if (SystemUtils.IS_OS_WINDOWS) {\n        includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n        includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n        includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      } else {\n        includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n        includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n        includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      System.out.println(\"Written out credentials file: \" + basicAuthConfFile + \", updated Solr include file: \" + includeFile.getAbsolutePath() + \".\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f","date":1495081498,"type":1,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String,String,String).mjava","sourceNew":"    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      if (SystemUtils.IS_OS_WINDOWS) {\n        includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n        includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n        includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      } else {\n        includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n        includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n        includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      System.out.println(\"Written out credentials file: \" + basicAuthConfFile + \", updated Solr include file: \" + includeFile.getAbsolutePath() + \".\");\n    }\n\n","sourceOld":"    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile, String username, String password) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      if (SystemUtils.IS_OS_WINDOWS) {\n        includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n        includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n        includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      } else {\n        includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n        includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n        includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      System.out.println(\"Written out credentials file: \" + basicAuthConfFile + \", updated Solr include file: \" + includeFile.getAbsolutePath() + \".\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String).mjava","pathOld":"/dev/null","sourceNew":"    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      if (SystemUtils.IS_OS_WINDOWS) {\n        includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n        includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n        includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      } else {\n        includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n        includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n        includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      System.out.println(\"Written out credentials file: \" + basicAuthConfFile + \", updated Solr include file: \" + includeFile.getAbsolutePath() + \".\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e12ffe0fc2f16d13edb8f82cd33da7cbedda264","date":1499421663,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String).mjava","sourceNew":null,"sourceOld":"    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      if (SystemUtils.IS_OS_WINDOWS) {\n        includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n        includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n        includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      } else {\n        includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n        includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n        includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      System.out.println(\"Written out credentials file: \" + basicAuthConfFile + \", updated Solr include file: \" + includeFile.getAbsolutePath() + \".\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9a989a32a073c55e3aef6f807a3474184bbcf49","date":1499930209,"type":4,"author":"Cao Manh Dat","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String).mjava","sourceNew":null,"sourceOld":"    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      if (SystemUtils.IS_OS_WINDOWS) {\n        includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n        includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n        includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      } else {\n        includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n        includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n        includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      System.out.println(\"Written out credentials file: \" + basicAuthConfFile + \", updated Solr include file: \" + includeFile.getAbsolutePath() + \".\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb569fd721c41eafc2a2d788499a7df490c7f1a5","date":1499930871,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileEnableAuth(File,String).mjava","sourceNew":null,"sourceOld":"    private void updateIncludeFileEnableAuth(File includeFile, String basicAuthConfFile) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n        }\n      }\n      includeFileLines.add(\"\"); // blank line\n      if (SystemUtils.IS_OS_WINDOWS) {\n        includeFileLines.add(\"REM The following lines added by solr.cmd for enabling BasicAuth\");\n        includeFileLines.add(\"set SOLR_AUTH_TYPE=basic\");\n        includeFileLines.add(\"set SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      } else {\n        includeFileLines.add(\"# The following lines added by ./solr for enabling BasicAuth\");\n        includeFileLines.add(\"SOLR_AUTH_TYPE=\\\"basic\\\"\");\n        includeFileLines.add(\"SOLR_AUTHENTICATION_OPTS=\\\"-Dsolr.httpclient.config=\" + basicAuthConfFile + \"\\\"\");\n      }\n      FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n\n      System.out.println(\"Written out credentials file: \" + basicAuthConfFile + \", updated Solr include file: \" + includeFile.getAbsolutePath() + \".\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb569fd721c41eafc2a2d788499a7df490c7f1a5":["e9017cf144952056066919f1ebc7897ff9bd71b1","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"1396efc84e04da571f41a8f47919f874385db0a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e12ffe0fc2f16d13edb8f82cd33da7cbedda264":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1396efc84e04da571f41a8f47919f874385db0a8"],"f9a989a32a073c55e3aef6f807a3474184bbcf49":["e9017cf144952056066919f1ebc7897ff9bd71b1","6e12ffe0fc2f16d13edb8f82cd33da7cbedda264"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e12ffe0fc2f16d13edb8f82cd33da7cbedda264"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["fb569fd721c41eafc2a2d788499a7df490c7f1a5","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","1396efc84e04da571f41a8f47919f874385db0a8","c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"fb569fd721c41eafc2a2d788499a7df490c7f1a5":[],"1396efc84e04da571f41a8f47919f874385db0a8":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"6e12ffe0fc2f16d13edb8f82cd33da7cbedda264":["f9a989a32a073c55e3aef6f807a3474184bbcf49","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f":["e9017cf144952056066919f1ebc7897ff9bd71b1","6e12ffe0fc2f16d13edb8f82cd33da7cbedda264"],"f9a989a32a073c55e3aef6f807a3474184bbcf49":["fb569fd721c41eafc2a2d788499a7df490c7f1a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fb569fd721c41eafc2a2d788499a7df490c7f1a5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}