{"path":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#beforeClass().mjava","commits":[{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    Document doc = new Document();\n    Field field = newField(FIELD, \"meaninglessnames\", Field.Store.NO,\n        Field.Index.NOT_ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    for (int i = 0; i < 5137; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n\n    field.setValue(\"meaninglessnames\");\n    for (int i = 5138; i < 11377; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    Document doc = new Document();\n    Field field = newField(FIELD, \"meaninglessnames\", Field.Store.NO,\n        Field.Index.NOT_ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    for (int i = 0; i < 5137; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n\n    field.setValue(\"meaninglessnames\");\n    for (int i = 5138; i < 11377; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    Document doc = new Document();\n    Field field = newField(FIELD, \"meaninglessnames\", Field.Store.NO,\n        Field.Index.NOT_ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    for (int i = 0; i < 5137; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n\n    field.setValue(\"meaninglessnames\");\n    for (int i = 5138; i < 11377; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    for (int i = 0; i < 5137; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    { \n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n\n    for (int i = 5138; i < 11377; ++i) {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"meaninglessnames\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    {\n      Document doc = new Document();\n      doc.add(newField(FIELD, \"tangfulin\", Field.Store.YES,\n                        Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    Document doc = new Document();\n    Field field = newField(FIELD, \"meaninglessnames\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    for (int i = 0; i < 5137; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n\n    field.setValue(\"meaninglessnames\");\n    for (int i = 5138; i < 11377; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    Document doc = new Document();\n    Field field = newField(FIELD, \"meaninglessnames\", Field.Store.NO,\n        Field.Index.NOT_ANALYZED_NO_NORMS);\n    doc.add(field);\n    \n    for (int i = 0; i < 5137; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n\n    field.setValue(\"meaninglessnames\");\n    for (int i = 5138; i < 11377; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPrefixInBooleanQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    Document doc = new Document();\n    Field field = newField(FIELD, \"meaninglessnames\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    for (int i = 0; i < 5137; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n\n    field.setValue(\"meaninglessnames\");\n    for (int i = 5138; i < 11377; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n\n    Document doc = new Document();\n    Field field = newField(FIELD, \"meaninglessnames\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    for (int i = 0; i < 5137; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n\n    field.setValue(\"meaninglessnames\");\n    for (int i = 5138; i < 11377; ++i) {\n      writer.addDocument(doc);\n    }\n    \n    field.setValue(\"tangfulin\");\n    writer.addDocument(doc);\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"79c2cb24929f2649a8875fb629086171f914d5ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}