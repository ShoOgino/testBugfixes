{"path":"lucene/contrib/xml-query-parser/src/test/com/apache/lucene/xmlparser/builders/NumericRangeQueryBuilderTestCase#testGetFilterHandleNumericParseErrorStrict().mjava","commits":[{"id":"05bdab91555bc2728769812fa2e40814e900f661","date":1269650215,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/com/apache/lucene/xmlparser/builders/NumericRangeQueryBuilderTestCase#testGetFilterHandleNumericParseErrorStrict().mjava","pathOld":"/dev/null","sourceNew":"\tpublic void testGetFilterHandleNumericParseErrorStrict() throws Exception {\n\t\tNumericRangeQueryBuilder filterBuilder = new NumericRangeQueryBuilder();\n\n\t\tString xml = \"<NumericRangeQuery fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\ttry {\n\t\t\tfilterBuilder.getQuery(doc.getDocumentElement());\n\t\t} catch (ParserException e) {\n\t\t\treturn;\n\t\t}\n\t\tfail(\"Expected to throw \" + ParserException.class);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"539040a2eeaeb2ec1252c35b94773ddf32175f5a","date":1269681454,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeQueryBuilder#testGetFilterHandleNumericParseErrorStrict().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/com/apache/lucene/xmlparser/builders/NumericRangeQueryBuilderTestCase#testGetFilterHandleNumericParseErrorStrict().mjava","sourceNew":"\tpublic void testGetFilterHandleNumericParseErrorStrict() throws Exception {\n\t\tNumericRangeQueryBuilder filterBuilder = new NumericRangeQueryBuilder();\n\n\t\tString xml = \"<NumericRangeQuery fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\ttry {\n\t\t\tfilterBuilder.getQuery(doc.getDocumentElement());\n\t\t} catch (ParserException e) {\n\t\t\treturn;\n\t\t}\n\t\tfail(\"Expected to throw \" + ParserException.class);\n\t}\n\n","sourceOld":"\tpublic void testGetFilterHandleNumericParseErrorStrict() throws Exception {\n\t\tNumericRangeQueryBuilder filterBuilder = new NumericRangeQueryBuilder();\n\n\t\tString xml = \"<NumericRangeQuery fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n\t\tDocument doc = getDocumentFromString(xml);\n\t\ttry {\n\t\t\tfilterBuilder.getQuery(doc.getDocumentElement());\n\t\t} catch (ParserException e) {\n\t\t\treturn;\n\t\t}\n\t\tfail(\"Expected to throw \" + ParserException.class);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"539040a2eeaeb2ec1252c35b94773ddf32175f5a":["05bdab91555bc2728769812fa2e40814e900f661"],"05bdab91555bc2728769812fa2e40814e900f661":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["539040a2eeaeb2ec1252c35b94773ddf32175f5a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05bdab91555bc2728769812fa2e40814e900f661"],"539040a2eeaeb2ec1252c35b94773ddf32175f5a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05bdab91555bc2728769812fa2e40814e900f661":["539040a2eeaeb2ec1252c35b94773ddf32175f5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}