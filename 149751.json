{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","commits":[{"id":"76f7066a3ec6e68e257b01dd46edbbdd3530690a","date":1358805020,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","pathOld":"/dev/null","sourceNew":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    //System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.getDocCount();\n    isNorms = ext.equals(\"len\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33b99b59f252327c7208ef3c400d3b71b08ebeed","date":1358805858,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","sourceNew":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    //System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.getDocCount();\n  }\n\n","sourceOld":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    //System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.getDocCount();\n    isNorms = ext.equals(\"len\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","pathOld":"/dev/null","sourceNew":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    //System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.getDocCount();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e072d0b1fc19e0533d8ce432eed245196bca6fde","date":1379265112,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","sourceNew":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    // System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.getDocCount();\n  }\n\n","sourceOld":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    //System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.getDocCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0267c69e2456a3477a1ad785723f2135da3117e","date":1425317087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","sourceNew":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    // System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.maxDoc() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.maxDoc();\n  }\n\n","sourceOld":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    // System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.getDocCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","sourceNew":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    // System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.maxDoc() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.maxDoc();\n  }\n\n","sourceOld":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    // System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.getDocCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","sourceNew":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    // System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.maxDoc() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.maxDoc();\n  }\n\n","sourceOld":"  public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n    // System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n    data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n    numDocs = state.segmentInfo.getDocCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"33b99b59f252327c7208ef3c400d3b71b08ebeed":["76f7066a3ec6e68e257b01dd46edbbdd3530690a"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["e072d0b1fc19e0533d8ce432eed245196bca6fde","b0267c69e2456a3477a1ad785723f2135da3117e"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","33b99b59f252327c7208ef3c400d3b71b08ebeed"],"76f7066a3ec6e68e257b01dd46edbbdd3530690a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b06445ae1731e049327712db0454e5643ca9b7fe":["e072d0b1fc19e0533d8ce432eed245196bca6fde","b0267c69e2456a3477a1ad785723f2135da3117e"],"b0267c69e2456a3477a1ad785723f2135da3117e":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b0267c69e2456a3477a1ad785723f2135da3117e"]},"commit2Childs":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","b0267c69e2456a3477a1ad785723f2135da3117e"],"33b99b59f252327c7208ef3c400d3b71b08ebeed":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"76f7066a3ec6e68e257b01dd46edbbdd3530690a":["33b99b59f252327c7208ef3c400d3b71b08ebeed"],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"b0267c69e2456a3477a1ad785723f2135da3117e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","76f7066a3ec6e68e257b01dd46edbbdd3530690a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}