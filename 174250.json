{"path":"src/test/org/apache/solr/search/TestDocSet#dummyIndexReader(int).mjava","commits":[{"id":"1919b234a992d6438a59ccbb02bd0656162e602e","date":1242941438,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/search/TestDocSet#dummyIndexReader(int).mjava","pathOld":"/dev/null","sourceNew":"   /**** needs code insertion into HashDocSet\n   public void testExistsCollisions() {\n    loadfactor=.75f;\n    rand=new Random(12345);  // make deterministic\n    int maxSetsize=4000;\n    int nSets=512;\n    int[] maxDocs=new int[] {100000,500000,1000000,5000000,10000000};\n    int ret=0;\n\n    for (int maxDoc : maxDocs) {\n      int mask = (BitUtil.nextHighestPowerOfTwo(maxDoc)>>1)-1;\n      DocSet[] sets = getRandomHashSets(nSets,maxSetsize, maxDoc);\n      int cstart = HashDocSet.collisions;      \n      for (DocSet s1 : sets) {\n        for (int j=0; j<maxDocs[0]; j++) {\n          int idx = rand.nextInt()&mask;\n          ret += s1.exists(idx) ? 1 :0;\n        }\n      }\n      int cend = HashDocSet.collisions;\n      System.out.println(\"maxDoc=\"+maxDoc+\"\\tcollisions=\"+(cend-cstart));\n    }\n    if (ret==-1)System.out.println(\"wow!\");\n    System.out.println(\"collisions=\"+HashDocSet.collisions);\n  }\n  ***/\n\n  public IndexReader dummyIndexReader(final int maxDoc) {\n\n    IndexReader r = new FilterIndexReader(null) {\n      @Override\n      public int maxDoc() {\n        return maxDoc;\n      }\n\n      @Override\n      public boolean hasDeletions() {\n        return false;\n      }\n\n      @Override\n      public IndexReader[] getSequentialSubReaders() {\n        return null;\n      }\n    };\n    return r;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fe43a17fb193c95257604ee5486e9f6e2a392c28","fe43a17fb193c95257604ee5486e9f6e2a392c28","fe43a17fb193c95257604ee5486e9f6e2a392c28","a2a81b3988dfbdfb187c425043b89868e359b238","a2a81b3988dfbdfb187c425043b89868e359b238","a2a81b3988dfbdfb187c425043b89868e359b238","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/TestDocSet#dummyIndexReader(int).mjava","pathOld":"src/test/org/apache/solr/search/TestDocSet#dummyIndexReader(int).mjava","sourceNew":"   /**** needs code insertion into HashDocSet\n   public void testExistsCollisions() {\n    loadfactor=.75f;\n    rand=new Random(12345);  // make deterministic\n    int maxSetsize=4000;\n    int nSets=512;\n    int[] maxDocs=new int[] {100000,500000,1000000,5000000,10000000};\n    int ret=0;\n\n    for (int maxDoc : maxDocs) {\n      int mask = (BitUtil.nextHighestPowerOfTwo(maxDoc)>>1)-1;\n      DocSet[] sets = getRandomHashSets(nSets,maxSetsize, maxDoc);\n      int cstart = HashDocSet.collisions;      \n      for (DocSet s1 : sets) {\n        for (int j=0; j<maxDocs[0]; j++) {\n          int idx = rand.nextInt()&mask;\n          ret += s1.exists(idx) ? 1 :0;\n        }\n      }\n      int cend = HashDocSet.collisions;\n      System.out.println(\"maxDoc=\"+maxDoc+\"\\tcollisions=\"+(cend-cstart));\n    }\n    if (ret==-1)System.out.println(\"wow!\");\n    System.out.println(\"collisions=\"+HashDocSet.collisions);\n  }\n  ***/\n\n  public IndexReader dummyIndexReader(final int maxDoc) {\n\n    IndexReader r = new FilterIndexReader(null) {\n      @Override\n      public int maxDoc() {\n        return maxDoc;\n      }\n\n      @Override\n      public boolean hasDeletions() {\n        return false;\n      }\n\n      @Override\n      public IndexReader[] getSequentialSubReaders() {\n        return null;\n      }\n    };\n    return r;\n  }\n\n","sourceOld":"   /**** needs code insertion into HashDocSet\n   public void testExistsCollisions() {\n    loadfactor=.75f;\n    rand=new Random(12345);  // make deterministic\n    int maxSetsize=4000;\n    int nSets=512;\n    int[] maxDocs=new int[] {100000,500000,1000000,5000000,10000000};\n    int ret=0;\n\n    for (int maxDoc : maxDocs) {\n      int mask = (BitUtil.nextHighestPowerOfTwo(maxDoc)>>1)-1;\n      DocSet[] sets = getRandomHashSets(nSets,maxSetsize, maxDoc);\n      int cstart = HashDocSet.collisions;      \n      for (DocSet s1 : sets) {\n        for (int j=0; j<maxDocs[0]; j++) {\n          int idx = rand.nextInt()&mask;\n          ret += s1.exists(idx) ? 1 :0;\n        }\n      }\n      int cend = HashDocSet.collisions;\n      System.out.println(\"maxDoc=\"+maxDoc+\"\\tcollisions=\"+(cend-cstart));\n    }\n    if (ret==-1)System.out.println(\"wow!\");\n    System.out.println(\"collisions=\"+HashDocSet.collisions);\n  }\n  ***/\n\n  public IndexReader dummyIndexReader(final int maxDoc) {\n\n    IndexReader r = new FilterIndexReader(null) {\n      @Override\n      public int maxDoc() {\n        return maxDoc;\n      }\n\n      @Override\n      public boolean hasDeletions() {\n        return false;\n      }\n\n      @Override\n      public IndexReader[] getSequentialSubReaders() {\n        return null;\n      }\n    };\n    return r;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1919b234a992d6438a59ccbb02bd0656162e602e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1919b234a992d6438a59ccbb02bd0656162e602e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1919b234a992d6438a59ccbb02bd0656162e602e":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["1919b234a992d6438a59ccbb02bd0656162e602e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}