{"path":"lucene/core/src/test/org/apache/lucene/search/TestSort.MyFieldComparator#compareDocToValue(int,Integer).mjava","commits":[{"id":"fb02351ae2b114dd41585916d1e35fb2cff98fb0","date":1337171337,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort.MyFieldComparator#compareDocToValue(int,Integer).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int compareDocToValue(int doc, Integer valueObj) {\n      final int value = valueObj.intValue();\n      final int docValue = docValues[doc];\n\n      // values are small enough that overflow won't happen\n      return docValue - value;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort.MyFieldComparator#compareDocToValue(int,Integer).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int compareDocToValue(int doc, Integer valueObj) {\n      final int value = valueObj.intValue();\n      final int docValue = docValues[doc];\n\n      // values are small enough that overflow won't happen\n      return docValue - value;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f45457a742a53533c348c4b990b1c579ff364467","date":1353197071,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort.MyFieldComparator#compareDocToValue(int,Integer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort.MyFieldComparator#compareDocToValue(int,Integer).mjava","sourceNew":"    @Override\n    public int compareDocToValue(int doc, Integer valueObj) {\n      final int value = valueObj.intValue();\n      final int docValue = docValues.get(doc);\n\n      // values are small enough that overflow won't happen\n      return docValue - value;\n    }\n\n","sourceOld":"    @Override\n    public int compareDocToValue(int doc, Integer valueObj) {\n      final int value = valueObj.intValue();\n      final int docValue = docValues[doc];\n\n      // values are small enough that overflow won't happen\n      return docValue - value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort.MyFieldComparator#compareDocToValue(int,Integer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort.MyFieldComparator#compareDocToValue(int,Integer).mjava","sourceNew":"    @Override\n    public int compareDocToValue(int doc, Integer valueObj) {\n      final int value = valueObj.intValue();\n      final int docValue = docValues.get(doc);\n\n      // values are small enough that overflow won't happen\n      return docValue - value;\n    }\n\n","sourceOld":"    @Override\n    public int compareDocToValue(int doc, Integer valueObj) {\n      final int value = valueObj.intValue();\n      final int docValue = docValues[doc];\n\n      // values are small enough that overflow won't happen\n      return docValue - value;\n    }\n\n","bugFix":["fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f183729ece15402db94402d482f29ebac4f7f54","date":1360963151,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort.MyFieldComparator#compareDocToValue(int,Integer).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int compareDocToValue(int doc, Integer valueObj) {\n      final int value = valueObj.intValue();\n      final int docValue = docValues.get(doc);\n\n      // values are small enough that overflow won't happen\n      return docValue - value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort.MyFieldComparator#compareDocToValue(int,Integer).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int compareDocToValue(int doc, Integer valueObj) {\n      final int value = valueObj.intValue();\n      final int docValue = docValues.get(doc);\n\n      // values are small enough that overflow won't happen\n      return docValue - value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f183729ece15402db94402d482f29ebac4f7f54":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["fb02351ae2b114dd41585916d1e35fb2cff98fb0","f45457a742a53533c348c4b990b1c579ff364467"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["d4d69c535930b5cce125cff868d40f6373dc27d4","5f183729ece15402db94402d482f29ebac4f7f54"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f45457a742a53533c348c4b990b1c579ff364467":["fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"ef0d8a69209261514c5739c770bba706c2308450":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f183729ece15402db94402d482f29ebac4f7f54"]},"commit2Childs":{"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["d4d69c535930b5cce125cff868d40f6373dc27d4","f45457a742a53533c348c4b990b1c579ff364467","ef0d8a69209261514c5739c770bba706c2308450"],"5f183729ece15402db94402d482f29ebac4f7f54":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["5f183729ece15402db94402d482f29ebac4f7f54","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb02351ae2b114dd41585916d1e35fb2cff98fb0","ef0d8a69209261514c5739c770bba706c2308450"],"f45457a742a53533c348c4b990b1c579ff364467":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["95303ff3749680c743b9425f9cf99e6e4065e8a8","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}