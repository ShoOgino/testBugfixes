{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/PagedBytes#copy(IndexInput,long).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/PagedBytes#copy(IndexInput,long).mjava","pathOld":"/dev/null","sourceNew":"  /** Read this many bytes from in */\n  public void copy(IndexInput in, long byteCount) throws IOException {\n    while (byteCount > 0) {\n      int left = blockSize - upto;\n      if (left == 0) {\n        if (currentBlock != null) {\n          blocks.add(currentBlock);\n        }\n        currentBlock = new byte[blockSize];\n        upto = 0;\n        left = blockSize;\n      }\n      if (left < byteCount) {\n        in.readBytes(currentBlock, upto, left, false);\n        upto = blockSize;\n        byteCount -= left;\n      } else {\n        in.readBytes(currentBlock, upto, (int) byteCount, false);\n        upto += byteCount;\n        byteCount = 0;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be20f9fed1d3edcb1c84abcc39df87a90fab22df","date":1275590285,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/PagedBytes#copy(IndexInput,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/PagedBytes#copy(IndexInput,long).mjava","sourceNew":"  /** Read this many bytes from in */\n  public void copy(IndexInput in, long byteCount) throws IOException {\n    while (byteCount > 0) {\n      int left = blockSize - upto;\n      if (left == 0) {\n        if (currentBlock != null) {\n          blocks.add(currentBlock);\n        }\n        currentBlock = new byte[blockSize];\n        upto = 0;\n        left = blockSize;\n      }\n      if (left < byteCount) {\n        in.readBytes(currentBlock, upto, left, false);\n        upto = blockSize;\n        byteCount -= left;\n      } else {\n        in.readBytes(currentBlock, upto, (int) byteCount, false);\n        upto += byteCount;\n        break;\n      }\n    }\n  }\n\n","sourceOld":"  /** Read this many bytes from in */\n  public void copy(IndexInput in, long byteCount) throws IOException {\n    while (byteCount > 0) {\n      int left = blockSize - upto;\n      if (left == 0) {\n        if (currentBlock != null) {\n          blocks.add(currentBlock);\n        }\n        currentBlock = new byte[blockSize];\n        upto = 0;\n        left = blockSize;\n      }\n      if (left < byteCount) {\n        in.readBytes(currentBlock, upto, left, false);\n        upto = blockSize;\n        byteCount -= left;\n      } else {\n        in.readBytes(currentBlock, upto, (int) byteCount, false);\n        upto += byteCount;\n        byteCount = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"]},"commit2Childs":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}