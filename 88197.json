{"path":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal#testCustomMergeScheduler().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal#testCustomMergeScheduler().mjava","pathOld":"lucene/src/test/org/apache/lucene/TestMergeSchedulerExternal#testCustomMergeScheduler().mjava","sourceNew":"  public void testCustomMergeScheduler() throws Exception {\n    // we don't really need to execute anything, just to make sure the custom MS\n    // compiles. But ensure that it can be used as well, e.g., no other hidden\n    // dependencies or something. Therefore, don't use any random API !\n    Directory dir = new RAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergeScheduler(new ReportingMergeScheduler());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.forceMerge(1);\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCustomMergeScheduler() throws Exception {\n    // we don't really need to execute anything, just to make sure the custom MS\n    // compiles. But ensure that it can be used as well, e.g., no other hidden\n    // dependencies or something. Therefore, don't use any random API !\n    Directory dir = new RAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergeScheduler(new ReportingMergeScheduler());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.forceMerge(1);\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal#testCustomMergeScheduler().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal#testCustomMergeScheduler().mjava","sourceNew":"  public void testCustomMergeScheduler() throws Exception {\n    // we don't really need to execute anything, just to make sure the custom MS\n    // compiles. But ensure that it can be used as well, e.g., no other hidden\n    // dependencies or something. Therefore, don't use any random API !\n    Directory dir = new RAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergeScheduler(new ReportingMergeScheduler());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.forceMerge(1);\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCustomMergeScheduler() throws Exception {\n    // we don't really need to execute anything, just to make sure the custom MS\n    // compiles. But ensure that it can be used as well, e.g., no other hidden\n    // dependencies or something. Therefore, don't use any random API !\n    Directory dir = new RAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergeScheduler(new ReportingMergeScheduler());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.forceMerge(1);\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal#testCustomMergeScheduler().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal#testCustomMergeScheduler().mjava","sourceNew":"  public void testCustomMergeScheduler() throws Exception {\n    // we don't really need to execute anything, just to make sure the custom MS\n    // compiles. But ensure that it can be used as well, e.g., no other hidden\n    // dependencies or something. Therefore, don't use any random API !\n    Directory dir = new RAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(null);\n    conf.setMergeScheduler(new ReportingMergeScheduler());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.forceMerge(1);\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCustomMergeScheduler() throws Exception {\n    // we don't really need to execute anything, just to make sure the custom MS\n    // compiles. But ensure that it can be used as well, e.g., no other hidden\n    // dependencies or something. Therefore, don't use any random API !\n    Directory dir = new RAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, null);\n    conf.setMergeScheduler(new ReportingMergeScheduler());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.forceMerge(1);\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal#testCustomMergeScheduler().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal#testCustomMergeScheduler().mjava","sourceNew":"  public void testCustomMergeScheduler() throws Exception {\n    // we don't really need to execute anything, just to make sure the custom MS\n    // compiles. But ensure that it can be used as well, e.g., no other hidden\n    // dependencies or something. Therefore, don't use any random API !\n    Directory dir = new ByteBuffersDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(null);\n    conf.setMergeScheduler(new ReportingMergeScheduler());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.forceMerge(1);\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testCustomMergeScheduler() throws Exception {\n    // we don't really need to execute anything, just to make sure the custom MS\n    // compiles. But ensure that it can be used as well, e.g., no other hidden\n    // dependencies or something. Therefore, don't use any random API !\n    Directory dir = new RAMDirectory();\n    IndexWriterConfig conf = new IndexWriterConfig(null);\n    conf.setMergeScheduler(new ReportingMergeScheduler());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.addDocument(new Document());\n    writer.commit(); // trigger flush\n    writer.forceMerge(1);\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d77dafd89756a5161d244985903e3487ca109182":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["d77dafd89756a5161d244985903e3487ca109182"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}