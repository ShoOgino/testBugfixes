{"path":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester.IdentityHashSet#add(KType).mjava","commits":[{"id":"e1eb6b3ce884c0b9e064e112da158013ec33cd91","date":1402692077,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester.IdentityHashSet#add(KType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator.IdentityHashSet#add(KType).mjava","sourceNew":"    /**\n     * Adds a reference to the set. Null keys are not allowed.\n     */\n    public boolean add(KType e) {\n      assert e != null : \"Null keys not allowed.\";\n      \n      if (assigned >= resizeThreshold) expandAndRehash();\n      \n      final int mask = keys.length - 1;\n      int slot = rehash(e) & mask;\n      Object existing;\n      while ((existing = keys[slot]) != null) {\n        if (e == existing) {\n          return false; // already found.\n        }\n        slot = (slot + 1) & mask;\n      }\n      assigned++;\n      keys[slot] = e;\n      return true;\n    }\n\n","sourceOld":"    /**\n     * Adds a reference to the set. Null keys are not allowed.\n     */\n    public boolean add(KType e) {\n      assert e != null : \"Null keys not allowed.\";\n      \n      if (assigned >= resizeThreshold) expandAndRehash();\n      \n      final int mask = keys.length - 1;\n      int slot = rehash(e) & mask;\n      Object existing;\n      while ((existing = keys[slot]) != null) {\n        if (e == existing) {\n          return false; // already found.\n        }\n        slot = (slot + 1) & mask;\n      }\n      assigned++;\n      keys[slot] = e;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester.IdentityHashSet#add(KType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator.IdentityHashSet#add(KType).mjava","sourceNew":"    /**\n     * Adds a reference to the set. Null keys are not allowed.\n     */\n    public boolean add(KType e) {\n      assert e != null : \"Null keys not allowed.\";\n      \n      if (assigned >= resizeThreshold) expandAndRehash();\n      \n      final int mask = keys.length - 1;\n      int slot = rehash(e) & mask;\n      Object existing;\n      while ((existing = keys[slot]) != null) {\n        if (e == existing) {\n          return false; // already found.\n        }\n        slot = (slot + 1) & mask;\n      }\n      assigned++;\n      keys[slot] = e;\n      return true;\n    }\n\n","sourceOld":"    /**\n     * Adds a reference to the set. Null keys are not allowed.\n     */\n    public boolean add(KType e) {\n      assert e != null : \"Null keys not allowed.\";\n      \n      if (assigned >= resizeThreshold) expandAndRehash();\n      \n      final int mask = keys.length - 1;\n      int slot = rehash(e) & mask;\n      Object existing;\n      while ((existing = keys[slot]) != null) {\n        if (e == existing) {\n          return false; // already found.\n        }\n        slot = (slot + 1) & mask;\n      }\n      assigned++;\n      keys[slot] = e;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b8f3bf7eb63b67ff23cc48ab2aee7df2393f06f","date":1418292961,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/RamUsageTester.IdentityHashSet#add(KType).mjava","sourceNew":null,"sourceOld":"    /**\n     * Adds a reference to the set. Null keys are not allowed.\n     */\n    public boolean add(KType e) {\n      assert e != null : \"Null keys not allowed.\";\n      \n      if (assigned >= resizeThreshold) expandAndRehash();\n      \n      final int mask = keys.length - 1;\n      int slot = rehash(e) & mask;\n      Object existing;\n      while ((existing = keys[slot]) != null) {\n        if (e == existing) {\n          return false; // already found.\n        }\n        slot = (slot + 1) & mask;\n      }\n      assigned++;\n      keys[slot] = e;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e1eb6b3ce884c0b9e064e112da158013ec33cd91"],"e1eb6b3ce884c0b9e064e112da158013ec33cd91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6b8f3bf7eb63b67ff23cc48ab2aee7df2393f06f":["e1eb6b3ce884c0b9e064e112da158013ec33cd91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6b8f3bf7eb63b67ff23cc48ab2aee7df2393f06f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","e1eb6b3ce884c0b9e064e112da158013ec33cd91"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"e1eb6b3ce884c0b9e064e112da158013ec33cd91":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","6b8f3bf7eb63b67ff23cc48ab2aee7df2393f06f"],"6b8f3bf7eb63b67ff23cc48ab2aee7df2393f06f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}