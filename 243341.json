{"path":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","sourceNew":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = _TestUtil.randomUnicodeString(random);\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","sourceOld":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = _TestUtil.randomUnicodeString(random);\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","sourceNew":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = _TestUtil.randomUnicodeString(random());\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","sourceOld":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = _TestUtil.randomUnicodeString(random);\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","sourceNew":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = TestUtil.randomUnicodeString(random());\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","sourceOld":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = _TestUtil.randomUnicodeString(random());\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = TestUtil.randomUnicodeString(random());\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","sourceOld":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = TestUtil.randomUnicodeString(random());\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","sourceNew":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = TestUtil.randomUnicodeString(random());\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = TestUtil.randomUnicodeString(random());\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestCharsRef#testUTF16InUTF8Order().mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = TestUtil.randomUnicodeString(random());\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","sourceOld":"  public void testUTF16InUTF8Order() {\n    final int numStrings = atLeast(1000);\n    BytesRef utf8[] = new BytesRef[numStrings];\n    CharsRef utf16[] = new CharsRef[numStrings];\n    \n    for (int i = 0; i < numStrings; i++) {\n      String s = TestUtil.randomUnicodeString(random());\n      utf8[i] = new BytesRef(s);\n      utf16[i] = new CharsRef(s);\n    }\n    \n    Arrays.sort(utf8);\n    Arrays.sort(utf16, CharsRef.getUTF16SortedAsUTF8Comparator());\n    \n    for (int i = 0; i < numStrings; i++) {\n      assertEquals(utf8[i].utf8ToString(), utf16[i].toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["6613659748fe4411a7dcf85266e55db1f95f7315"],"6613659748fe4411a7dcf85266e55db1f95f7315":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"6613659748fe4411a7dcf85266e55db1f95f7315":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["6613659748fe4411a7dcf85266e55db1f95f7315"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}