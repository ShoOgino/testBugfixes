{"path":"solr/core/src/test/org/apache/solr/cloud/TriLevelCompositeIdRoutingTest#TriLevelCompositeIdRoutingTest().mjava","commits":[{"id":"f7623716022a9a68898e329e8ffe6c36d168fba7","date":1384524101,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TriLevelCompositeIdRoutingTest#TriLevelCompositeIdRoutingTest().mjava","pathOld":"/dev/null","sourceNew":"  public TriLevelCompositeIdRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = 12;             // a lot of slices for more ranges and buckets\n    super.shardCount = 24;\n    super.fixShardCount = true;\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TriLevelCompositeIdRoutingTest#TriLevelCompositeIdRoutingTest().mjava","pathOld":"/dev/null","sourceNew":"  public TriLevelCompositeIdRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = 12;             // a lot of slices for more ranges and buckets\n    super.shardCount = 24;\n    super.fixShardCount = true;\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dfd006d350203756d745b28745992bf1d0044784","date":1408891745,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TriLevelCompositeIdRoutingTest#TriLevelCompositeIdRoutingTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TriLevelCompositeIdRoutingTest#TriLevelCompositeIdRoutingTest().mjava","sourceNew":"  public TriLevelCompositeIdRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = TEST_NIGHTLY ? 12 : 2;             // a lot of slices for more ranges and buckets\n    super.shardCount = TEST_NIGHTLY ? 24 : 3;\n    super.fixShardCount = true;\n\n  }\n\n","sourceOld":"  public TriLevelCompositeIdRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = 12;             // a lot of slices for more ranges and buckets\n    super.shardCount = 24;\n    super.fixShardCount = true;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TriLevelCompositeIdRoutingTest#TriLevelCompositeIdRoutingTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TriLevelCompositeIdRoutingTest#TriLevelCompositeIdRoutingTest().mjava","sourceNew":"  public TriLevelCompositeIdRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    sliceCount = TEST_NIGHTLY ? 12 : 2;             // a lot of slices for more ranges and buckets\n    fixShardCount(TEST_NIGHTLY ? 24 : 3);\n  }\n\n","sourceOld":"  public TriLevelCompositeIdRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    super.sliceCount = TEST_NIGHTLY ? 12 : 2;             // a lot of slices for more ranges and buckets\n    super.shardCount = TEST_NIGHTLY ? 24 : 3;\n    super.fixShardCount = true;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0949f20e74c954865e5cfd653de9059bfc1a9aca","date":1548956712,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TriLevelCompositeIdRoutingTest#TriLevelCompositeIdRoutingTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TriLevelCompositeIdRoutingTest#TriLevelCompositeIdRoutingTest().mjava","sourceNew":"  public TriLevelCompositeIdRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    \n    \n    sliceCount = TestUtil.nextInt(random(), 1, (TEST_NIGHTLY ? 5 : 3)); // this is the number of *SHARDS*\n    int replicationFactor = rarely() ? 2 : 1; // replication is not the focus of this test\n    fixShardCount(replicationFactor * sliceCount); // total num cores, one per node\n    \n    NUM_APPS = atLeast(5);\n    NUM_USERS = atLeast(10);\n    NUM_DOCS = atLeast(100);\n  }\n\n","sourceOld":"  public TriLevelCompositeIdRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    sliceCount = TEST_NIGHTLY ? 12 : 2;             // a lot of slices for more ranges and buckets\n    fixShardCount(TEST_NIGHTLY ? 24 : 3);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06e68e6090ed0bd8f1f9b96e03328d9a4591e451","date":1549489350,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TriLevelCompositeIdRoutingTest#TriLevelCompositeIdRoutingTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TriLevelCompositeIdRoutingTest#TriLevelCompositeIdRoutingTest().mjava","sourceNew":"  public TriLevelCompositeIdRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    \n    sliceCount = TestUtil.nextInt(random(), 1, (TEST_NIGHTLY ? 5 : 3)); // this is the number of *SHARDS*\n    int replicationFactor = rarely() ? 2 : 1; // replication is not the focus of this test\n    fixShardCount(replicationFactor * sliceCount); // total num cores, one per node\n\n    MAX_APP_ID = atLeast(5);\n    MAX_USER_ID = atLeast(10);\n    MAX_DOC_ID = atLeast(20);\n    NUM_ADDS = atLeast(200);\n  }\n\n","sourceOld":"  public TriLevelCompositeIdRoutingTest() {\n    schemaString = \"schema15.xml\";      // we need a string id\n    \n    \n    sliceCount = TestUtil.nextInt(random(), 1, (TEST_NIGHTLY ? 5 : 3)); // this is the number of *SHARDS*\n    int replicationFactor = rarely() ? 2 : 1; // replication is not the focus of this test\n    fixShardCount(replicationFactor * sliceCount); // total num cores, one per node\n    \n    NUM_APPS = atLeast(5);\n    NUM_USERS = atLeast(10);\n    NUM_DOCS = atLeast(100);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dfd006d350203756d745b28745992bf1d0044784":["f7623716022a9a68898e329e8ffe6c36d168fba7"],"abb23fcc2461782ab204e61213240feb77d355aa":["dfd006d350203756d745b28745992bf1d0044784"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f7623716022a9a68898e329e8ffe6c36d168fba7"],"0949f20e74c954865e5cfd653de9059bfc1a9aca":["abb23fcc2461782ab204e61213240feb77d355aa"],"06e68e6090ed0bd8f1f9b96e03328d9a4591e451":["0949f20e74c954865e5cfd653de9059bfc1a9aca"],"f7623716022a9a68898e329e8ffe6c36d168fba7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06e68e6090ed0bd8f1f9b96e03328d9a4591e451"]},"commit2Childs":{"dfd006d350203756d745b28745992bf1d0044784":["abb23fcc2461782ab204e61213240feb77d355aa"],"abb23fcc2461782ab204e61213240feb77d355aa":["0949f20e74c954865e5cfd653de9059bfc1a9aca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","f7623716022a9a68898e329e8ffe6c36d168fba7"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"0949f20e74c954865e5cfd653de9059bfc1a9aca":["06e68e6090ed0bd8f1f9b96e03328d9a4591e451"],"f7623716022a9a68898e329e8ffe6c36d168fba7":["dfd006d350203756d745b28745992bf1d0044784","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"06e68e6090ed0bd8f1f9b96e03328d9a4591e451":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}