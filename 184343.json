{"path":"solr/core/src/test/org/apache/solr/cloud/TestWithCollection#testAddReplicaSimple().mjava","commits":[{"id":"27639bb5e041490ce599065875dd2f6d8beef62a","date":1532829373,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestWithCollection#testAddReplicaSimple().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAddReplicaSimple() throws Exception {\n    String prefix = \"testAddReplica\";\n    String xyz = prefix + \"_xyz\";\n    String abc = prefix + \"_abc\";\n\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String chosenNode = cluster.getRandomJetty(random()).getNodeName();\n    log.info(\"Chosen node {} for collection {}\", chosenNode, abc);\n    CollectionAdminRequest.createCollection(abc, 1, 1)\n        .setCreateNodeSet(chosenNode) // randomize to avoid choosing the first node always\n        .process(solrClient);\n    CollectionAdminRequest.createCollection(xyz, 1, 1)\n        .setWithCollection(abc)\n        .process(solrClient);\n\n    String otherNode = null;\n    for (JettySolrRunner jettySolrRunner : cluster.getJettySolrRunners()) {\n      if (!chosenNode.equals(jettySolrRunner.getNodeName())) {\n        otherNode = jettySolrRunner.getNodeName();\n      }\n    }\n    CollectionAdminRequest.addReplicaToShard(xyz, \"shard1\")\n        .setNode(otherNode)\n        .process(solrClient);\n    DocCollection collection = solrClient.getZkStateReader().getClusterState().getCollection(xyz);\n    DocCollection withCollection = solrClient.getZkStateReader().getClusterState().getCollection(abc);\n\n    assertTrue(collection.getReplicas().stream().noneMatch(replica -> withCollection.getReplicas(replica.getNodeName()).isEmpty()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestWithCollection#testAddReplicaSimple().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testAddReplicaSimple() throws Exception {\n    String prefix = \"testAddReplica\";\n    String xyz = prefix + \"_xyz\";\n    String abc = prefix + \"_abc\";\n\n    CloudSolrClient solrClient = cluster.getSolrClient();\n    String chosenNode = cluster.getRandomJetty(random()).getNodeName();\n    log.info(\"Chosen node {} for collection {}\", chosenNode, abc);\n    CollectionAdminRequest.createCollection(abc, 1, 1)\n        .setCreateNodeSet(chosenNode) // randomize to avoid choosing the first node always\n        .process(solrClient);\n    CollectionAdminRequest.createCollection(xyz, 1, 1)\n        .setWithCollection(abc)\n        .process(solrClient);\n\n    String otherNode = null;\n    for (JettySolrRunner jettySolrRunner : cluster.getJettySolrRunners()) {\n      if (!chosenNode.equals(jettySolrRunner.getNodeName())) {\n        otherNode = jettySolrRunner.getNodeName();\n      }\n    }\n    CollectionAdminRequest.addReplicaToShard(xyz, \"shard1\")\n        .setNode(otherNode)\n        .process(solrClient);\n    DocCollection collection = solrClient.getZkStateReader().getClusterState().getCollection(xyz);\n    DocCollection withCollection = solrClient.getZkStateReader().getClusterState().getCollection(abc);\n\n    assertTrue(collection.getReplicas().stream().noneMatch(replica -> withCollection.getReplicas(replica.getNodeName()).isEmpty()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["27639bb5e041490ce599065875dd2f6d8beef62a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"27639bb5e041490ce599065875dd2f6d8beef62a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["27639bb5e041490ce599065875dd2f6d8beef62a"],"27639bb5e041490ce599065875dd2f6d8beef62a":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}