{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","sourceNew":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer(TEST_VERSION_CURRENT);\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n  }\n\n","sourceOld":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer(TEST_VERSION_CURRENT);\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","sourceNew":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer();\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n  }\n\n","sourceOld":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer(TEST_VERSION_CURRENT);\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","sourceNew":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer(TEST_VERSION_CURRENT);\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n  }\n\n","sourceOld":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer();\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","sourceNew":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer();\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n  }\n\n","sourceOld":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer(TEST_VERSION_CURRENT);\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","sourceNew":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer();\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n    a.close();\n  }\n\n","sourceOld":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer();\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","sourceNew":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer();\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n    a.close();\n  }\n\n","sourceOld":"  /**\n   * Test the analysis of various greek strings.\n   *\n   * @throws Exception in case an error occurs\n   */\n  public void testAnalyzer() throws Exception {\n    Analyzer a = new GreekAnalyzer();\n    // Verify the correct analysis of capitals and small accented letters, and\n    // stemming\n    assertAnalyzesTo(a, \"Μία εξαιρετικά καλή και πλούσια σειρά χαρακτήρων της Ελληνικής γλώσσας\",\n        new String[] { \"μια\", \"εξαιρετ\", \"καλ\", \"πλουσ\", \"σειρ\", \"χαρακτηρ\",\n        \"ελληνικ\", \"γλωσσ\" });\n    // Verify the correct analysis of small letters with diaeresis and the elimination\n    // of punctuation marks\n    assertAnalyzesTo(a, \"Προϊόντα (και)     [πολλαπλές] - ΑΝΑΓΚΕΣ\",\n        new String[] { \"προιοντ\", \"πολλαπλ\", \"αναγκ\" });\n    // Verify the correct analysis of capital accented letters and capital letters with diaeresis,\n    // as well as the elimination of stop words\n    assertAnalyzesTo(a, \"ΠΡΟΫΠΟΘΕΣΕΙΣ  Άψογος, ο μεστός και οι άλλοι\",\n        new String[] { \"προυποθεσ\", \"αψογ\", \"μεστ\", \"αλλ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["379db3ad24c4f0214f30a122265a6d6be003a99d","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}