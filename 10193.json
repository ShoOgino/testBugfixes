{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/CollisionMap#grow().mjava","commits":[{"id":"5cad50ed6659649a0edef71b8cf56280b0bdadd7","date":1385496862,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/CollisionMap#grow().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/cl2o/CollisionMap#grow().mjava","sourceNew":"  private void grow() {\n    int newCapacity = this.capacity * 2;\n    Entry[] newEntries = new Entry[newCapacity];\n    Entry[] src = this.entries;\n\n    for (int j = 0; j < src.length; j++) {\n      Entry e = src[j];\n      if (e != null) {\n        src[j] = null;\n        do {\n          Entry next = e.next;\n          int hash = e.hash;\n          int i = indexFor(hash, newCapacity);  \n          e.next = newEntries[i];\n          newEntries[i] = e;\n          e = next;\n        } while (e != null);\n      }\n    }\n\n    this.capacity = newCapacity;\n    this.entries = newEntries;\n    this.threshold = (int) (this.capacity * this.loadFactor);\n  }\n\n","sourceOld":"  private void grow() {\n    int newCapacity = this.capacity * 2;\n    Entry[] newEntries = new Entry[newCapacity];\n    Entry[] src = this.entries;\n\n    for (int j = 0; j < src.length; j++) {\n      Entry e = src[j];\n      if (e != null) {\n        src[j] = null;\n        do {\n          Entry next = e.next;\n          int hash = e.hash;\n          int i = indexFor(hash, newCapacity);  \n          e.next = newEntries[i];\n          newEntries[i] = e;\n          e = next;\n        } while (e != null);\n      }\n    }\n\n    this.capacity = newCapacity;\n    this.entries = newEntries;\n    this.threshold = (int) (this.capacity * this.loadFactor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/CollisionMap#grow().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/cl2o/CollisionMap#grow().mjava","sourceNew":"  private void grow() {\n    int newCapacity = this.capacity * 2;\n    Entry[] newEntries = new Entry[newCapacity];\n    Entry[] src = this.entries;\n\n    for (int j = 0; j < src.length; j++) {\n      Entry e = src[j];\n      if (e != null) {\n        src[j] = null;\n        do {\n          Entry next = e.next;\n          int hash = e.hash;\n          int i = indexFor(hash, newCapacity);  \n          e.next = newEntries[i];\n          newEntries[i] = e;\n          e = next;\n        } while (e != null);\n      }\n    }\n\n    this.capacity = newCapacity;\n    this.entries = newEntries;\n    this.threshold = (int) (this.capacity * this.loadFactor);\n  }\n\n","sourceOld":"  private void grow() {\n    int newCapacity = this.capacity * 2;\n    Entry[] newEntries = new Entry[newCapacity];\n    Entry[] src = this.entries;\n\n    for (int j = 0; j < src.length; j++) {\n      Entry e = src[j];\n      if (e != null) {\n        src[j] = null;\n        do {\n          Entry next = e.next;\n          int hash = e.hash;\n          int i = indexFor(hash, newCapacity);  \n          e.next = newEntries[i];\n          newEntries[i] = e;\n          e = next;\n        } while (e != null);\n      }\n    }\n\n    this.capacity = newCapacity;\n    this.entries = newEntries;\n    this.threshold = (int) (this.capacity * this.loadFactor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ae0982c0457fa3cfe0cda93a327c573fbe6f874","date":1507039114,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/writercache/CollisionMap#grow().mjava","sourceNew":null,"sourceOld":"  private void grow() {\n    int newCapacity = this.capacity * 2;\n    Entry[] newEntries = new Entry[newCapacity];\n    Entry[] src = this.entries;\n\n    for (int j = 0; j < src.length; j++) {\n      Entry e = src[j];\n      if (e != null) {\n        src[j] = null;\n        do {\n          Entry next = e.next;\n          int hash = e.hash;\n          int i = indexFor(hash, newCapacity);  \n          e.next = newEntries[i];\n          newEntries[i] = e;\n          e = next;\n        } while (e != null);\n      }\n    }\n\n    this.capacity = newCapacity;\n    this.entries = newEntries;\n    this.threshold = (int) (this.capacity * this.loadFactor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ae0982c0457fa3cfe0cda93a327c573fbe6f874":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cad50ed6659649a0edef71b8cf56280b0bdadd7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5cad50ed6659649a0edef71b8cf56280b0bdadd7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ae0982c0457fa3cfe0cda93a327c573fbe6f874"]},"commit2Childs":{"2ae0982c0457fa3cfe0cda93a327c573fbe6f874":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5cad50ed6659649a0edef71b8cf56280b0bdadd7","3cc728b07df73b197e6d940d27f9b08b63918f13"],"5cad50ed6659649a0edef71b8cf56280b0bdadd7":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["2ae0982c0457fa3cfe0cda93a327c573fbe6f874"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}