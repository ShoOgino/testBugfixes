{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ramDir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ramDir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f8e68717c68517265937c911e1ce9f25750247","date":1274071103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ramDir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ramDir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ramDir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ramDir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = newDirectory(random);\n    ramDir = newDirectory(random);\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ramDir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    random = newRandom();\n    dir = newDirectory(random);\n    ramDir = newDirectory(random);\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ramDir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (int i = 0; i < texts.length; i++) {\n      addDoc(writer, texts[i]);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, Store.YES, true);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":["fa0f44f887719e97183771e977cfc4bfb485b766"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.optimize();\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir, true);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new NumericField(NUMERIC_FIELD_NAME, 1, NumericField.getFieldType(NumericField.DataType.INT, true)));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new NumericField(NUMERIC_FIELD_NAME, 3, NumericField.getFieldType(NumericField.DataType.INT, true)));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new NumericField(NUMERIC_FIELD_NAME, 5, NumericField.getFieldType(NumericField.DataType.INT, true)));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new NumericField(NUMERIC_FIELD_NAME, 7, NumericField.getFieldType(NumericField.DataType.INT, true)));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    NumericField nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(1);\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(3);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(5);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    nfield = new NumericField(NUMERIC_FIELD_NAME, NumericField.TYPE_STORED);\n    nfield.setIntValue(7);\n    doc = new Document();\n    doc.add(nfield);\n    writer.addDocument(doc, analyzer);\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":["54668f9ceae36bd32ddd82aca6d9abc2ba3dc92f","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a78a90fc9701e511308346ea29f4f5e548bb39fe","date":1329489995,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new NumericField(NUMERIC_FIELD_NAME, 1, NumericField.getFieldType(NumericField.DataType.INT, true)));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new NumericField(NUMERIC_FIELD_NAME, 3, NumericField.getFieldType(NumericField.DataType.INT, true)));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new NumericField(NUMERIC_FIELD_NAME, 5, NumericField.getFieldType(NumericField.DataType.INT, true)));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new NumericField(NUMERIC_FIELD_NAME, 7, NumericField.getFieldType(NumericField.DataType.INT, true)));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":["fa0f44f887719e97183771e977cfc4bfb485b766"],"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    dir = newDirectory();\n    ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    for (String text : texts) {\n      addDoc(writer, text);\n    }\n    Document doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 1));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 1));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 3));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 3));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 5));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 5));\n    writer.addDocument(doc, analyzer);\n\n    doc = new Document();\n    doc.add(new IntField(NUMERIC_FIELD_NAME, 7));\n    doc.add(new StoredField(NUMERIC_FIELD_NAME, 7));\n    writer.addDocument(doc, analyzer);\n\n    writer.forceMerge(1);\n    writer.close();\n    reader = IndexReader.open(ramDir);\n    numHighlights = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3bb13258feba31ab676502787ab2e1779f129b7a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"c7f8e68717c68517265937c911e1ce9f25750247":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c7f8e68717c68517265937c911e1ce9f25750247","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"43b04c27924fe393e38e9f0986e32c634f261859":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["fa0f44f887719e97183771e977cfc4bfb485b766"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4e8cc373c801e54cec75daf9f52792cb4b17f536","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["c7f8e68717c68517265937c911e1ce9f25750247"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"3bb13258feba31ab676502787ab2e1779f129b7a":["43b04c27924fe393e38e9f0986e32c634f261859","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["43b04c27924fe393e38e9f0986e32c634f261859"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"c7f8e68717c68517265937c911e1ce9f25750247":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"43b04c27924fe393e38e9f0986e32c634f261859":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["43b04c27924fe393e38e9f0986e32c634f261859"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","fa0f44f887719e97183771e977cfc4bfb485b766"],"fa0f44f887719e97183771e977cfc4bfb485b766":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3bb13258feba31ab676502787ab2e1779f129b7a":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c7f8e68717c68517265937c911e1ce9f25750247"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}