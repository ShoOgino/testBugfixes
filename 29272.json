{"path":"solr/core/src/test/org/apache/solr/util/hll/HLLSerializationTest#assertCardinality(HLLType,int,Collection[Long]).mjava","commits":[{"id":"a81b342a33a0e68d2bb194ebcc3dfadcc69868b2","date":1440606819,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/HLLSerializationTest#assertCardinality(HLLType,int,Collection[Long]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Iterates over all possible constructor args, with the exception of log2m, \n   * which is only iterated up to the specified max so the test runs in a \n   * \"reasonable\" amount of time and ram.\n   */\n  private static void assertCardinality(final HLLType hllType,\n                                        final int maxLog2m,\n                                        final Collection<Long> items) throws CloneNotSupportedException {\n    for(int regw=MINIMUM_REGWIDTH_PARAM; regw<=MAXIMUM_REGWIDTH_PARAM; regw++) {\n      for(int expthr=MINIMUM_EXPTHRESH_PARAM; expthr<=MAXIMUM_EXPTHRESH_PARAM; expthr++ ) {\n        for(final boolean sparse: new boolean[]{true, false}) {\n          for(int log2m=MINIMUM_LOG2M_PARAM; log2m<=maxLog2m; log2m++) {\n            assertCardinality(new HLL(log2m, regw, expthr, sparse, hllType), items);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a81b342a33a0e68d2bb194ebcc3dfadcc69868b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a81b342a33a0e68d2bb194ebcc3dfadcc69868b2"]},"commit2Childs":{"a81b342a33a0e68d2bb194ebcc3dfadcc69868b2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a81b342a33a0e68d2bb194ebcc3dfadcc69868b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}