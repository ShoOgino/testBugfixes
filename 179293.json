{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","pathOld":"/dev/null","sourceNew":"  protected void initializeBlockReadLazily() {\n    if (blockStartFP == -1) {\n      blockInput = blockInput.clone();\n      blockLineReader = new BlockLine.Serializer();\n      blockReadBuffer = new ByteArrayDataInput();\n      termStatesReadBuffer = new ByteArrayDataInput();\n      termStateSerializer = new DeltaBaseTermStateSerializer();\n      scratchBlockBytes = new BytesRef();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f6185d883389450f593fb00103d2e89a0b8336","date":1577705030,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","sourceNew":"  protected void initializeBlockReadLazily() throws IOException {\n    if (blockStartFP == -1) {\n      blockInput = blockInput.clone();\n      blockLineReader = new BlockLine.Serializer();\n      blockReadBuffer = new ByteArrayDataInput();\n      termStatesReadBuffer = new ByteArrayDataInput();\n      termStateSerializer = new DeltaBaseTermStateSerializer();\n      scratchBlockBytes = new BytesRef();\n    }\n  }\n\n","sourceOld":"  protected void initializeBlockReadLazily() {\n    if (blockStartFP == -1) {\n      blockInput = blockInput.clone();\n      blockLineReader = new BlockLine.Serializer();\n      blockReadBuffer = new ByteArrayDataInput();\n      termStatesReadBuffer = new ByteArrayDataInput();\n      termStateSerializer = new DeltaBaseTermStateSerializer();\n      scratchBlockBytes = new BytesRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e478fa10594a2ef9d1ddf7d195020300453c4e","date":1577783287,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","sourceNew":"  protected void initializeBlockReadLazily() throws IOException {\n    if (blockStartFP == -1) {\n      blockInput = blockInput.clone();\n      blockLineReader = new BlockLine.Serializer();\n      blockReadBuffer = new ByteArrayDataInput();\n      termStatesReadBuffer = new ByteArrayDataInput();\n      termStateSerializer = new DeltaBaseTermStateSerializer();\n      scratchBlockBytes = new BytesRef();\n    }\n  }\n\n","sourceOld":"  protected void initializeBlockReadLazily() {\n    if (blockStartFP == -1) {\n      blockInput = blockInput.clone();\n      blockLineReader = new BlockLine.Serializer();\n      blockReadBuffer = new ByteArrayDataInput();\n      termStatesReadBuffer = new ByteArrayDataInput();\n      termStateSerializer = new DeltaBaseTermStateSerializer();\n      scratchBlockBytes = new BytesRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d28da8a459f5f0c930da7185c56d0c25edd3fbd1","date":1577783695,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","sourceNew":"  protected void initializeBlockReadLazily() throws IOException {\n    if (blockStartFP == -1) {\n      blockInput = blockInput.clone();\n      blockHeaderReader = createBlockHeaderSerializer();\n      blockLineReader = createBlockLineSerializer();\n      blockReadBuffer = new ByteArrayDataInput();\n      termStatesReadBuffer = new ByteArrayDataInput();\n      termStateSerializer = createDeltaBaseTermStateSerializer();\n      scratchBlockBytes = new BytesRef();\n    }\n  }\n\n","sourceOld":"  protected void initializeBlockReadLazily() throws IOException {\n    if (blockStartFP == -1) {\n      blockInput = blockInput.clone();\n      blockLineReader = new BlockLine.Serializer();\n      blockReadBuffer = new ByteArrayDataInput();\n      termStatesReadBuffer = new ByteArrayDataInput();\n      termStateSerializer = new DeltaBaseTermStateSerializer();\n      scratchBlockBytes = new BytesRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c606b777c4250f3f3f6f66d659c7c4c403679b71","date":1577958559,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","sourceNew":"  protected void initializeBlockReadLazily() throws IOException {\n    if (blockStartFP == -1) {\n      blockInput = blockInput.clone();\n      blockHeaderReader = createBlockHeaderSerializer();\n      blockLineReader = createBlockLineSerializer();\n      blockReadBuffer = new ByteArrayDataInput();\n      termStatesReadBuffer = new ByteArrayDataInput();\n      termStateSerializer = createDeltaBaseTermStateSerializer();\n      scratchBlockBytes = new BytesRef();\n    }\n  }\n\n","sourceOld":"  protected void initializeBlockReadLazily() throws IOException {\n    if (blockStartFP == -1) {\n      blockInput = blockInput.clone();\n      blockLineReader = new BlockLine.Serializer();\n      blockReadBuffer = new ByteArrayDataInput();\n      termStatesReadBuffer = new ByteArrayDataInput();\n      termStateSerializer = new DeltaBaseTermStateSerializer();\n      scratchBlockBytes = new BytesRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23fcccd57316410c404dd37307a496ab850efa9c","date":1582897939,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/BlockReader#initializeBlockReadLazily().mjava","sourceNew":"  protected void initializeBlockReadLazily() throws IOException {\n    if (blockStartFP == -1) {\n      blockInput = blockInput.clone();\n      blockHeaderReader = createBlockHeaderSerializer();\n      blockLineReader = createBlockLineSerializer();\n      blockReadBuffer = new ByteArrayDataInput();\n      termStatesReadBuffer = new ByteArrayDataInput();\n      termStateSerializer = createDeltaBaseTermStateSerializer();\n      scratchBlockBytes = new BytesRef();\n      scratchBlockLine = new BlockLine(new TermBytes(0, scratchBlockBytes), 0);\n    }\n  }\n\n","sourceOld":"  protected void initializeBlockReadLazily() throws IOException {\n    if (blockStartFP == -1) {\n      blockInput = blockInput.clone();\n      blockHeaderReader = createBlockHeaderSerializer();\n      blockLineReader = createBlockLineSerializer();\n      blockReadBuffer = new ByteArrayDataInput();\n      termStatesReadBuffer = new ByteArrayDataInput();\n      termStateSerializer = createDeltaBaseTermStateSerializer();\n      scratchBlockBytes = new BytesRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c606b777c4250f3f3f6f66d659c7c4c403679b71":["62e478fa10594a2ef9d1ddf7d195020300453c4e","d28da8a459f5f0c930da7185c56d0c25edd3fbd1"],"42f6185d883389450f593fb00103d2e89a0b8336":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"62e478fa10594a2ef9d1ddf7d195020300453c4e":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","42f6185d883389450f593fb00103d2e89a0b8336"],"23fcccd57316410c404dd37307a496ab850efa9c":["d28da8a459f5f0c930da7185c56d0c25edd3fbd1"],"d28da8a459f5f0c930da7185c56d0c25edd3fbd1":["42f6185d883389450f593fb00103d2e89a0b8336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23fcccd57316410c404dd37307a496ab850efa9c"]},"commit2Childs":{"c606b777c4250f3f3f6f66d659c7c4c403679b71":[],"42f6185d883389450f593fb00103d2e89a0b8336":["62e478fa10594a2ef9d1ddf7d195020300453c4e","d28da8a459f5f0c930da7185c56d0c25edd3fbd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["42f6185d883389450f593fb00103d2e89a0b8336","62e478fa10594a2ef9d1ddf7d195020300453c4e"],"62e478fa10594a2ef9d1ddf7d195020300453c4e":["c606b777c4250f3f3f6f66d659c7c4c403679b71"],"d28da8a459f5f0c930da7185c56d0c25edd3fbd1":["c606b777c4250f3f3f6f66d659c7c4c403679b71","23fcccd57316410c404dd37307a496ab850efa9c"],"23fcccd57316410c404dd37307a496ab850efa9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c606b777c4250f3f3f6f66d659c7c4c403679b71","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}