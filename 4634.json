{"path":"lucene/src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","sourceNew":"  @Override\n  protected void doUndeleteAll() {\n    deletedDocsDirty = false;\n    if (deletedDocs != null) {\n      assert deletedDocsRef != null;\n      deletedDocsRef.decrementAndGet();\n      deletedDocs = null;\n      deletedDocsRef = null;\n      pendingDeleteCount = 0;\n      si.clearDelGen();\n      si.setDelCount(0);\n    } else {\n      assert deletedDocsRef == null;\n      assert pendingDeleteCount == 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doUndeleteAll() {\n    deletedDocsDirty = false;\n    if (deletedDocs != null) {\n      assert deletedDocsRef != null;\n      deletedDocsRef.decrementAndGet();\n      deletedDocs = null;\n      deletedDocsRef = null;\n      pendingDeleteCount = 0;\n      si.clearDelGen();\n      si.setDelCount(0);\n    } else {\n      assert deletedDocsRef == null;\n      assert pendingDeleteCount == 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","sourceNew":"  @Override\n  protected void doUndeleteAll() {\n    liveDocsDirty = false;\n    if (liveDocs != null) {\n      assert liveDocsRef != null;\n      liveDocsRef.decrementAndGet();\n      liveDocs = null;\n      liveDocsRef = null;\n      pendingDeleteCount = 0;\n      si.clearDelGen();\n      si.setDelCount(0);\n    } else {\n      assert liveDocsRef == null;\n      assert pendingDeleteCount == 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doUndeleteAll() {\n    deletedDocsDirty = false;\n    if (deletedDocs != null) {\n      assert deletedDocsRef != null;\n      deletedDocsRef.decrementAndGet();\n      deletedDocs = null;\n      deletedDocsRef = null;\n      pendingDeleteCount = 0;\n      si.clearDelGen();\n      si.setDelCount(0);\n    } else {\n      assert deletedDocsRef == null;\n      assert pendingDeleteCount == 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","sourceNew":"  @Override\n  protected void doUndeleteAll() {\n    liveDocsDirty = false;\n    if (liveDocs != null) {\n      assert liveDocsRef != null;\n      liveDocsRef.decrementAndGet();\n      liveDocs = null;\n      liveDocsRef = null;\n      pendingDeleteCount = 0;\n      si.clearDelGen();\n      si.setDelCount(0);\n    } else {\n      assert liveDocsRef == null;\n      assert pendingDeleteCount == 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doUndeleteAll() {\n    deletedDocsDirty = false;\n    if (deletedDocs != null) {\n      assert deletedDocsRef != null;\n      deletedDocsRef.decrementAndGet();\n      deletedDocs = null;\n      deletedDocsRef = null;\n      pendingDeleteCount = 0;\n      si.clearDelGen();\n      si.setDelCount(0);\n    } else {\n      assert deletedDocsRef == null;\n      assert pendingDeleteCount == 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","sourceNew":"  @Override\n  protected void doUndeleteAll() {\n    liveDocsDirty = false;\n    if (liveDocs != null) {\n      assert liveDocsRef != null;\n      liveDocsRef.decrementAndGet();\n      liveDocs = null;\n      liveDocsRef = null;\n      pendingDeleteCount = 0;\n      si.clearDelGen();\n      si.setDelCount(0);\n    } else {\n      assert liveDocsRef == null;\n      assert pendingDeleteCount == 0;\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doUndeleteAll() {\n    deletedDocsDirty = false;\n    if (deletedDocs != null) {\n      assert deletedDocsRef != null;\n      deletedDocsRef.decrementAndGet();\n      deletedDocs = null;\n      deletedDocsRef = null;\n      pendingDeleteCount = 0;\n      si.clearDelGen();\n      si.setDelCount(0);\n    } else {\n      assert deletedDocsRef == null;\n      assert pendingDeleteCount == 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75ec8c9aaa10ac00b30fd4c2465409770c838f7b","date":1323020115,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void doUndeleteAll() {\n    liveDocsDirty = false;\n    if (liveDocs != null) {\n      assert liveDocsRef != null;\n      liveDocsRef.decrementAndGet();\n      liveDocs = null;\n      liveDocsRef = null;\n      pendingDeleteCount = 0;\n      si.clearDelGen();\n      si.setDelCount(0);\n    } else {\n      assert liveDocsRef == null;\n      assert pendingDeleteCount == 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void doUndeleteAll() {\n    liveDocsDirty = false;\n    if (liveDocs != null) {\n      assert liveDocsRef != null;\n      liveDocsRef.decrementAndGet();\n      liveDocs = null;\n      liveDocsRef = null;\n      pendingDeleteCount = 0;\n      si.clearDelGen();\n      si.setDelCount(0);\n    } else {\n      assert liveDocsRef == null;\n      assert pendingDeleteCount == 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#doUndeleteAll().mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void doUndeleteAll() {\n    liveDocsDirty = false;\n    if (liveDocs != null) {\n      assert liveDocsRef != null;\n      liveDocsRef.decrementAndGet();\n      liveDocs = null;\n      liveDocsRef = null;\n      pendingDeleteCount = 0;\n      si.clearDelGen();\n      si.setDelCount(0);\n    } else {\n      assert liveDocsRef == null;\n      assert pendingDeleteCount == 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","75ec8c9aaa10ac00b30fd4c2465409770c838f7b"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["9454a6510e2db155fb01faa5c049b06ece95fab9","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["9454a6510e2db155fb01faa5c049b06ece95fab9","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["75ec8c9aaa10ac00b30fd4c2465409770c838f7b","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}