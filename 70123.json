{"path":"lucene/core/src/java/org/apache/lucene/util/hash/MurmurHash2#hash32(byte[],int,int).mjava","commits":[{"id":"0274c27988a26cb0cda3a0d15b282221b1b453f0","date":1343923460,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/hash/MurmurHash2#hash32(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * Generates 32 bit hash from byte array with default seed value.\r\n   * \r\n   * @param data \r\n   *          byte array to hash\r\n   * @param offset\r\n   *          the start position in the array to hash\r\n   * @param len\r\n   *          length of the array elements to hash\r\n   * @return 32 bit hash of the given array\r\n   */\r\n  public static final int hash32(final byte[] data, int offset, int len) {\r\n    return MurmurHash2.hash(data, 0x9747b28c, offset, len);\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/hash/MurmurHash2#hash32(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * Generates 32 bit hash from byte array with default seed value.\r\n   * \r\n   * @param data \r\n   *          byte array to hash\r\n   * @param offset\r\n   *          the start position in the array to hash\r\n   * @param len\r\n   *          length of the array elements to hash\r\n   * @return 32 bit hash of the given array\r\n   */\r\n  public static final int hash32(final byte[] data, int offset, int len) {\r\n    return MurmurHash2.hash(data, 0x9747b28c, offset, len);\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/hash/MurmurHash2#hash32(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * Generates 32 bit hash from byte array with default seed value.\r\n   * \r\n   * @param data \r\n   *          byte array to hash\r\n   * @param offset\r\n   *          the start position in the array to hash\r\n   * @param len\r\n   *          length of the array elements to hash\r\n   * @return 32 bit hash of the given array\r\n   */\r\n  public static final int hash32(final byte[] data, int offset, int len) {\r\n    return MurmurHash2.hash(data, 0x9747b28c, offset, len);\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d681ca1a1c487b2501ef9bde8602a65c4c717a46","date":1346078839,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/hash/MurmurHash2#hash32(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/hash/MurmurHash2#hash32(byte[],int,int).mjava","sourceNew":"  /**\n   * Generates 32 bit hash from byte array with default seed value.\n   * \n   * @param data \n   *          byte array to hash\n   * @param offset\n   *          the start position in the array to hash\n   * @param len\n   *          length of the array elements to hash\n   * @return 32 bit hash of the given array\n   */\n  public static final int hash32(final byte[] data, int offset, int len) {\n    return MurmurHash2.hash(data, 0x9747b28c, offset, len);\n  }\n\n","sourceOld":"  /**\r\n   * Generates 32 bit hash from byte array with default seed value.\r\n   * \r\n   * @param data \r\n   *          byte array to hash\r\n   * @param offset\r\n   *          the start position in the array to hash\r\n   * @param len\r\n   *          length of the array elements to hash\r\n   * @return 32 bit hash of the given array\r\n   */\r\n  public static final int hash32(final byte[] data, int offset, int len) {\r\n    return MurmurHash2.hash(data, 0x9747b28c, offset, len);\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/hash/MurmurHash2#hash32(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/hash/MurmurHash2#hash32(byte[],int,int).mjava","sourceNew":"  /**\n   * Generates 32 bit hash from byte array with default seed value.\n   * \n   * @param data \n   *          byte array to hash\n   * @param offset\n   *          the start position in the array to hash\n   * @param len\n   *          length of the array elements to hash\n   * @return 32 bit hash of the given array\n   */\n  public static final int hash32(final byte[] data, int offset, int len) {\n    return MurmurHash2.hash(data, 0x9747b28c, offset, len);\n  }\n\n","sourceOld":"  /**\r\n   * Generates 32 bit hash from byte array with default seed value.\r\n   * \r\n   * @param data \r\n   *          byte array to hash\r\n   * @param offset\r\n   *          the start position in the array to hash\r\n   * @param len\r\n   *          length of the array elements to hash\r\n   * @return 32 bit hash of the given array\r\n   */\r\n  public static final int hash32(final byte[] data, int offset, int len) {\r\n    return MurmurHash2.hash(data, 0x9747b28c, offset, len);\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30","date":1346918556,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/MurmurHash2#hash32(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/hash/MurmurHash2#hash32(byte[],int,int).mjava","sourceNew":"  /**\n   * Generates 32 bit hash from byte array with default seed value.\n   * \n   * @param data \n   *          byte array to hash\n   * @param offset\n   *          the start position in the array to hash\n   * @param len\n   *          length of the array elements to hash\n   * @return 32 bit hash of the given array\n   */\n  public static final int hash32(final byte[] data, int offset, int len) {\n    return MurmurHash2.hash(data, 0x9747b28c, offset, len);\n  }\n\n","sourceOld":"  /**\n   * Generates 32 bit hash from byte array with default seed value.\n   * \n   * @param data \n   *          byte array to hash\n   * @param offset\n   *          the start position in the array to hash\n   * @param len\n   *          length of the array elements to hash\n   * @return 32 bit hash of the given array\n   */\n  public static final int hash32(final byte[] data, int offset, int len) {\n    return MurmurHash2.hash(data, 0x9747b28c, offset, len);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d681ca1a1c487b2501ef9bde8602a65c4c717a46":["0274c27988a26cb0cda3a0d15b282221b1b453f0"],"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30":["d681ca1a1c487b2501ef9bde8602a65c4c717a46"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0274c27988a26cb0cda3a0d15b282221b1b453f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0274c27988a26cb0cda3a0d15b282221b1b453f0"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0274c27988a26cb0cda3a0d15b282221b1b453f0"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["d6f074e73200c07d54f242d3880a8da5a35ff97b","d681ca1a1c487b2501ef9bde8602a65c4c717a46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f1361ca6e7d39bfd5cf15485d8843ea798bdd30"]},"commit2Childs":{"d681ca1a1c487b2501ef9bde8602a65c4c717a46":["3f1361ca6e7d39bfd5cf15485d8843ea798bdd30","05a14b2611ead08655a2b2bdc61632eb31316e57"],"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0274c27988a26cb0cda3a0d15b282221b1b453f0","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"0274c27988a26cb0cda3a0d15b282221b1b453f0":["d681ca1a1c487b2501ef9bde8602a65c4c717a46","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["05a14b2611ead08655a2b2bdc61632eb31316e57"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8fd5be977c105554c6a7b68afcdbc511439723ab","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}