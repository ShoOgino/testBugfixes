{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  // ParseException expected due to too many boolean clauses\n  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    expectThrows(QueryNodeException.class, () -> {\n      getParser(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n    });\n  }\n\n","sourceOld":"  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    try {\n      getParser(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n      fail(\"ParseException expected due to too many boolean clauses\");\n    } catch (QueryNodeException expected) {\n      // too many boolean clauses, so ParseException is expected\n    }\n  }\n\n","bugFix":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32","de78a3a2b1c56fcb670ee23d8c50ce678b7c1b1c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36c70eb3b44de4355a7168b762cadc0f1cf194bc","date":1561542955,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#testBooleanQuery().mjava","sourceNew":"  // ParseException expected due to too many boolean clauses\n  public void testBooleanQuery() throws Exception {\n    IndexSearcher.setMaxClauseCount(2);\n    expectThrows(QueryNodeException.class, () -> {\n      getParser(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n    });\n  }\n\n","sourceOld":"  // ParseException expected due to too many boolean clauses\n  public void testBooleanQuery() throws Exception {\n    BooleanQuery.setMaxClauseCount(2);\n    expectThrows(QueryNodeException.class, () -> {\n      getParser(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).parse(\"one two three\", \"field\");\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36c70eb3b44de4355a7168b762cadc0f1cf194bc"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"05fe562aa248790944d43cdd478f512572835ba0":["36c70eb3b44de4355a7168b762cadc0f1cf194bc"],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}