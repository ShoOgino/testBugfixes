{"path":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","commits":[{"id":"0eff89b16ebd0046c839c5d02ee44500be5c7886","date":1355766557,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<String, Set<String>>();\n    \n    List<MBeanServer> servers = new LinkedList<MBeanServer>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<ObjectName>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value.toString().equals(Category.CORE.toString())) &&\n              ((value = server.getAttribute(mbean, \"source\")) != null && value.toString().contains(SolrCore.class.getSimpleName())) &&\n              ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null) &&\n              ((name = server.getAttribute(mbean, \"name\")) != null)) {\n              if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n                indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<String>());\n              }\n              indexDirToShardNamesMap.get(indexDir.toString()).add(name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute not found\n        }\n      }\n    }\n    \n    assertTrue(\"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \" + SolrCore.class.getSimpleName(), indexDirToShardNamesMap.size() > 0);\n    for (Entry<String, Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \" + entry.getValue().toString() + \" all use indexDir \" + entry.getKey());\n      }\n    }\n    \n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<String, Set<String>>();\n    \n    List<MBeanServer> servers = new LinkedList<MBeanServer>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<ObjectName>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value.toString().equals(Category.CORE.toString())) &&\n              ((value = server.getAttribute(mbean, \"source\")) != null && value.toString().contains(SolrCore.class.getSimpleName())) &&\n              ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null) &&\n              ((name = server.getAttribute(mbean, \"name\")) != null)) {\n              if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n                indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<String>());\n              }\n              indexDirToShardNamesMap.get(indexDir.toString()).add(name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute not found\n        }\n      }\n    }\n    \n    assertTrue(\"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \" + SolrCore.class.getSimpleName(), indexDirToShardNamesMap.size() > 0);\n    for (Entry<String, Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \" + entry.getValue().toString() + \" all use indexDir \" + entry.getKey());\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c0daec3b5f385ea143f3be33e4d65dbf26b638c","date":1356642534,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<String, Set<String>>();\n    \n    List<MBeanServer> servers = new LinkedList<MBeanServer>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<ObjectName>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value\n              .toString().equals(Category.CORE.toString()))\n              && ((indexDir = server.getAttribute(mbean, \"coreName\")) != null)\n              && ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null)\n              && ((name = server.getAttribute(mbean, \"name\")) != null)) {\n            if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n              indexDirToShardNamesMap.put(indexDir.toString(),\n                  new HashSet<String>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(\n                name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<String, Set<String>>();\n    \n    List<MBeanServer> servers = new LinkedList<MBeanServer>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<ObjectName>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value.toString().equals(Category.CORE.toString())) &&\n              ((value = server.getAttribute(mbean, \"source\")) != null && value.toString().contains(SolrCore.class.getSimpleName())) &&\n              ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null) &&\n              ((name = server.getAttribute(mbean, \"name\")) != null)) {\n              if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n                indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<String>());\n              }\n              indexDirToShardNamesMap.get(indexDir.toString()).add(name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute not found\n        }\n      }\n    }\n    \n    assertTrue(\"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \" + SolrCore.class.getSimpleName(), indexDirToShardNamesMap.size() > 0);\n    for (Entry<String, Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \" + entry.getValue().toString() + \" all use indexDir \" + entry.getKey());\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":["273ff2f5b0b365591fcbe91ea23b5e97027ca60d","273ff2f5b0b365591fcbe91ea23b5e97027ca60d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"/dev/null","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<String, Set<String>>();\n    \n    List<MBeanServer> servers = new LinkedList<MBeanServer>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<ObjectName>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value\n              .toString().equals(Category.CORE.toString()))\n              && ((indexDir = server.getAttribute(mbean, \"coreName\")) != null)\n              && ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null)\n              && ((name = server.getAttribute(mbean, \"name\")) != null)) {\n            if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n              indexDirToShardNamesMap.put(indexDir.toString(),\n                  new HashSet<String>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(\n                name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value\n              .toString().equals(Category.CORE.toString()))\n              && ((indexDir = server.getAttribute(mbean, \"coreName\")) != null)\n              && ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null)\n              && ((name = server.getAttribute(mbean, \"name\")) != null)) {\n            if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n              indexDirToShardNamesMap.put(indexDir.toString(),\n                  new HashSet<String>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(\n                name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<String, Set<String>>();\n    \n    List<MBeanServer> servers = new LinkedList<MBeanServer>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<ObjectName>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value\n              .toString().equals(Category.CORE.toString()))\n              && ((indexDir = server.getAttribute(mbean, \"coreName\")) != null)\n              && ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null)\n              && ((name = server.getAttribute(mbean, \"name\")) != null)) {\n            if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n              indexDirToShardNamesMap.put(indexDir.toString(),\n                  new HashSet<String>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(\n                name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":["273ff2f5b0b365591fcbe91ea23b5e97027ca60d","273ff2f5b0b365591fcbe91ea23b5e97027ca60d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value\n              .toString().equals(Category.CORE.toString()))\n              && ((indexDir = server.getAttribute(mbean, \"coreName\")) != null)\n              && ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null)\n              && ((name = server.getAttribute(mbean, \"name\")) != null)) {\n            if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n              indexDirToShardNamesMap.put(indexDir.toString(),\n                  new HashSet<String>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(\n                name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":["273ff2f5b0b365591fcbe91ea23b5e97027ca60d","273ff2f5b0b365591fcbe91ea23b5e97027ca60d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        Object value;\n        Object indexDir;\n        Object name;\n\n        try {\n          if (((value = server.getAttribute(mbean, \"category\")) != null && value\n              .toString().equals(Category.CORE.toString()))\n              && ((indexDir = server.getAttribute(mbean, \"coreName\")) != null)\n              && ((indexDir = server.getAttribute(mbean, \"indexDir\")) != null)\n              && ((name = server.getAttribute(mbean, \"name\")) != null)) {\n            if (!indexDirToShardNamesMap.containsKey(indexDir.toString())) {\n              indexDirToShardNamesMap.put(indexDir.toString(),\n                  new HashSet<String>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(\n                name.toString());\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"category\" or \"source\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4c0daec3b5f385ea143f3be33e4d65dbf26b638c"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["4c0daec3b5f385ea143f3be33e4d65dbf26b638c"],"b94236357aaa22b76c10629851fe4e376e0cea82":["816521ebaad5add9cb96bb88c577394e2938c40b","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"0eff89b16ebd0046c839c5d02ee44500be5c7886":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["816521ebaad5add9cb96bb88c577394e2938c40b"],"4c0daec3b5f385ea143f3be33e4d65dbf26b638c":["0eff89b16ebd0046c839c5d02ee44500be5c7886"],"816521ebaad5add9cb96bb88c577394e2938c40b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","0eff89b16ebd0046c839c5d02ee44500be5c7886"],"0eff89b16ebd0046c839c5d02ee44500be5c7886":["4c0daec3b5f385ea143f3be33e4d65dbf26b638c"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"4c0daec3b5f385ea143f3be33e4d65dbf26b638c":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"816521ebaad5add9cb96bb88c577394e2938c40b":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}