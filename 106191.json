{"path":"src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#testVerifyIndex().mjava","commits":[{"id":"4cf220eb1cc65fcd52b78436bd9c17eb4c4aabf2","date":1117758167,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#testVerifyIndex().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Verifies that the index has the correct number of documents.\n     *\n     * @throws Exception\n     */\n    public void testVerifyIndex() throws Exception {\n        final IndexReader reader = IndexReader.open(mDirectory);\n        assertEquals(8, reader.numDocs());\n        reader.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#testVerifyIndex().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#testVerifyIndex().mjava","sourceNew":"    /**\n     * Verifies that the index has the correct number of documents.\n     *\n     * @throws Exception\n     */\n    public void testVerifyIndex() throws Exception {\n        final IndexReader reader = IndexReader.open(mDirectory, true);\n        assertEquals(8, reader.numDocs());\n        reader.close();\n    }\n\n","sourceOld":"    /**\n     * Verifies that the index has the correct number of documents.\n     *\n     * @throws Exception\n     */\n    public void testVerifyIndex() throws Exception {\n        final IndexReader reader = IndexReader.open(mDirectory);\n        assertEquals(8, reader.numDocs());\n        reader.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#testVerifyIndex().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#testVerifyIndex().mjava","sourceNew":"    /**\n     * Verifies that the index has the correct number of documents.\n     *\n     * @throws Exception\n     */\n    public void testVerifyIndex() throws Exception {\n        final IndexReader reader = IndexReader.open(mDirectory, true);\n        assertEquals(8, reader.numDocs());\n        reader.close();\n    }\n\n","sourceOld":"    /**\n     * Verifies that the index has the correct number of documents.\n     *\n     * @throws Exception\n     */\n    public void testVerifyIndex() throws Exception {\n        final IndexReader reader = IndexReader.open(mDirectory);\n        assertEquals(8, reader.numDocs());\n        reader.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#testVerifyIndex().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpansAdvanced2#testVerifyIndex().mjava","sourceNew":"    /**\n     * Verifies that the index has the correct number of documents.\n     *\n     * @throws Exception\n     */\n    public void testVerifyIndex() throws Exception {\n        final IndexReader reader = IndexReader.open(mDirectory, true);\n        assertEquals(8, reader.numDocs());\n        reader.close();\n    }\n\n","sourceOld":"    /**\n     * Verifies that the index has the correct number of documents.\n     *\n     * @throws Exception\n     */\n    public void testVerifyIndex() throws Exception {\n        final IndexReader reader = IndexReader.open(mDirectory, true);\n        assertEquals(8, reader.numDocs());\n        reader.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["4cf220eb1cc65fcd52b78436bd9c17eb4c4aabf2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["4cf220eb1cc65fcd52b78436bd9c17eb4c4aabf2","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"4cf220eb1cc65fcd52b78436bd9c17eb4c4aabf2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0a046c0c310bc77931fc8441bd920053b607dd14"]},"commit2Childs":{"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cf220eb1cc65fcd52b78436bd9c17eb4c4aabf2"],"0a046c0c310bc77931fc8441bd920053b607dd14":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4cf220eb1cc65fcd52b78436bd9c17eb4c4aabf2":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}