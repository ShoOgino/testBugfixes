{"path":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","commits":[{"id":"b8b3b526542a07c380e03ce642edd7ca82ac961f","date":1226443334,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"/dev/null","sourceNew":"  protected void setUp() throws Exception {\n    dir = new MockRAMDirectory();\n    //\t\tdir=FSDirectory.getDirectory(\"/indexes/testDeletionPolicy\");\n    //\t\tString[] files = dir.list();\n    //\t\tfor (String string : files) {\n    //\t\t\tdir.deleteFile(string);\n    //\t\t}\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    int firstRecordIdInThisTransaction=1;\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        String userData=\"records 1-\"+currentRecordId;\n        w.commit(userData);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3ab91f3bb602daf6393fa7f78b11afd3400d669","date":1243282044,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    dir = new MockRAMDirectory();\n    //\t\tdir=FSDirectory.getDirectory(\"/indexes/testDeletionPolicy\");\n    //\t\tString[] files = dir.list();\n    //\t\tfor (String string : files) {\n    //\t\t\tdir.deleteFile(string);\n    //\t\t}\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map data = new HashMap();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    dir = new MockRAMDirectory();\n    //\t\tdir=FSDirectory.getDirectory(\"/indexes/testDeletionPolicy\");\n    //\t\tString[] files = dir.list();\n    //\t\tfor (String string : files) {\n    //\t\t\tdir.deleteFile(string);\n    //\t\t}\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    int firstRecordIdInThisTransaction=1;\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        String userData=\"records 1-\"+currentRecordId;\n        w.commit(userData);\n      }\n    }\n\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","date":1243677645,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map data = new HashMap();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    dir = new MockRAMDirectory();\n    //\t\tdir=FSDirectory.getDirectory(\"/indexes/testDeletionPolicy\");\n    //\t\tString[] files = dir.list();\n    //\t\tfor (String string : files) {\n    //\t\t\tdir.deleteFile(string);\n    //\t\t}\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map data = new HashMap();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58db9ee7d88a7b7c23d77436675c11bcb755c8f9","date":1249451023,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map data = new HashMap();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map data = new HashMap();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map data = new HashMap();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map data = new HashMap();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e450c7d50c2fc84c963d0d7ade9d3217d868064d","date":1259932067,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map data = new HashMap();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(Version.LUCENE_CURRENT),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(TEST_VERSION_CURRENT),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(Version.LUCENE_CURRENT),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setIndexDeletionPolicy(sdp));\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(TEST_VERSION_CURRENT),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(TEST_VERSION_CURRENT),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setIndexDeletionPolicy(sdp));\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setIndexDeletionPolicy(sdp));\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir,new WhitespaceAnalyzer(TEST_VERSION_CURRENT),sdp,MaxFieldLength.UNLIMITED);\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactionRollback#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setIndexDeletionPolicy(sdp));\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new MockRAMDirectory();\n\t\t\n    //Build index, of records 1 to 100, committing after each batch of 10\n    IndexDeletionPolicy sdp=new KeepAllDeletionPolicy();\n    IndexWriter w=new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setIndexDeletionPolicy(sdp));\n    for(int currentRecordId=1;currentRecordId<=100;currentRecordId++) {\n      Document doc=new Document();\n      doc.add(new Field(FIELD_RECORD_ID,\"\"+currentRecordId,Field.Store.YES,Field.Index.ANALYZED));\n      w.addDocument(doc);\n\t\t\t\n      if (currentRecordId%10 == 0) {\n        Map<String,String> data = new HashMap<String,String>();\n        data.put(\"index\", \"records 1-\"+currentRecordId);\n        w.commit(data);\n      }\n    }\n\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["58db9ee7d88a7b7c23d77436675c11bcb755c8f9"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"58db9ee7d88a7b7c23d77436675c11bcb755c8f9":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["b8b3b526542a07c380e03ce642edd7ca82ac961f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b8b3b526542a07c380e03ce642edd7ca82ac961f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"58db9ee7d88a7b7c23d77436675c11bcb755c8f9":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["58db9ee7d88a7b7c23d77436675c11bcb755c8f9"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b8b3b526542a07c380e03ce642edd7ca82ac961f"],"b8b3b526542a07c380e03ce642edd7ca82ac961f":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}