{"path":"lucene/core/src/java/org/apache/lucene/search/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      Similarity.SimScorer simScorer = simWeight == null ? null : similarity.simScorer(simWeight, context);\n      return (spans == null) ? null : new SpanScorer(spans, this, simScorer);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      Spans spans = getSpans(context, acceptDocs, Postings.PAYLOADS);\n      Similarity.SimScorer simScorer = simWeight == null ? null : similarity.simScorer(simWeight, context);\n      return (spans == null) ? null : new SpanScorer(spans, this, simScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      Similarity.SimScorer simScorer = simWeight == null ? null : similarity.simScorer(simWeight, context);\n      return (spans == null) ? null : new SpanScorer(spans, this, simScorer);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      Similarity.SimScorer simScorer = simWeight == null ? null : similarity.simScorer(simWeight, context);\n      return (spans == null) ? null : new SpanScorer(spans, this, simScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"]},"commit2Childs":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}