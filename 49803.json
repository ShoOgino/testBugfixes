{"path":"src/java/org/apache/lucene/index/MultiReader#initialize(IndexReader[]).mjava","commits":[{"id":"f653aecb322b74d99e6ecdb93765e453a3d7aa71","date":1082107025,"type":0,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#initialize(IndexReader[]).mjava","pathOld":"/dev/null","sourceNew":"  private void initialize(IndexReader[] subReaders) throws IOException{\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];\t  // build starts array\n    for (int i = 0; i < subReaders.length; i++) { \n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();\t\t  // compute maxDocs\n\n      if (subReaders[i].hasDeletions())\n        hasDeletions = true;\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbe196f6406e5d96f401c346389b069dc7fd0e1","date":1084538986,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#initialize(IndexReader[]).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#initialize(IndexReader[]).mjava","sourceNew":"  private void initialize(IndexReader[] subReaders) throws IOException{\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n\n      if (subReaders[i].hasDeletions())\n        hasDeletions = true;\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","sourceOld":"  private void initialize(IndexReader[] subReaders) throws IOException{\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];\t  // build starts array\n    for (int i = 0; i < subReaders.length; i++) { \n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();\t\t  // compute maxDocs\n\n      if (subReaders[i].hasDeletions())\n        hasDeletions = true;\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e444951e98c00cc6f00fdbc2e00286be07067f8","date":1091825429,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#initialize(IndexReader[]).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#initialize(IndexReader[]).mjava","sourceNew":"  private void initialize(IndexReader[] subReaders) {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n\n      if (subReaders[i].hasDeletions())\n        hasDeletions = true;\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","sourceOld":"  private void initialize(IndexReader[] subReaders) throws IOException{\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n\n      if (subReaders[i].hasDeletions())\n        hasDeletions = true;\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f2552b9f13037c62acd400d263d1e9262d6e4e","date":1185490328,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiSegmentReader#initialize(IndexReader[]).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#initialize(IndexReader[]).mjava","sourceNew":"  private void initialize(IndexReader[] subReaders) {\r\n    this.subReaders = subReaders;\r\n    starts = new int[subReaders.length + 1];    // build starts array\r\n    for (int i = 0; i < subReaders.length; i++) {\r\n      starts[i] = maxDoc;\r\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\r\n\r\n      if (subReaders[i].hasDeletions())\r\n        hasDeletions = true;\r\n    }\r\n    starts[subReaders.length] = maxDoc;\r\n  }\r\n\n","sourceOld":"  private void initialize(IndexReader[] subReaders) {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n\n      if (subReaders[i].hasDeletions())\n        hasDeletions = true;\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#initialize(IndexReader[]).mjava","pathOld":"src/java/org/apache/lucene/index/MultiSegmentReader#initialize(IndexReader[]).mjava","sourceNew":"  private void initialize(IndexReader[] subReaders) {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n\n      if (subReaders[i].hasDeletions())\n        hasDeletions = true;\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","sourceOld":"  private void initialize(IndexReader[] subReaders) {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n\n      if (subReaders[i].hasDeletions())\n        hasDeletions = true;\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8","date":1195335263,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#initialize(IndexReader[],boolean).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#initialize(IndexReader[]).mjava","sourceNew":"  private void initialize(IndexReader[] subReaders, boolean closeSubReaders) {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    decrefOnClose = new boolean[subReaders.length];\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n\n      if (!closeSubReaders) {\n        subReaders[i].incRef();\n        decrefOnClose[i] = true;\n      } else {\n        decrefOnClose[i] = false;\n      }\n      \n      if (subReaders[i].hasDeletions())\n        hasDeletions = true;\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","sourceOld":"  private void initialize(IndexReader[] subReaders) {\n    this.subReaders = subReaders;\n    starts = new int[subReaders.length + 1];    // build starts array\n    for (int i = 0; i < subReaders.length; i++) {\n      starts[i] = maxDoc;\n      maxDoc += subReaders[i].maxDoc();      // compute maxDocs\n\n      if (subReaders[i].hasDeletions())\n        hasDeletions = true;\n    }\n    starts[subReaders.length] = maxDoc;\n  }\n\n","bugFix":null,"bugIntro":["3f8fa8e07e97430f3696a3612ea855d4c6f08000"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"3e444951e98c00cc6f00fdbc2e00286be07067f8":["ddbe196f6406e5d96f401c346389b069dc7fd0e1"],"ddbe196f6406e5d96f401c346389b069dc7fd0e1":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["3e444951e98c00cc6f00fdbc2e00286be07067f8"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"]},"commit2Childs":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"],"3e444951e98c00cc6f00fdbc2e00286be07067f8":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"ddbe196f6406e5d96f401c346389b069dc7fd0e1":["3e444951e98c00cc6f00fdbc2e00286be07067f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["ddbe196f6406e5d96f401c346389b069dc7fd0e1"],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}