{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","commits":[{"id":"7bb889a868ab9d608bde8136f42ed7234a3a927b","date":1359393528,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getShingleConfig(String).mjava","sourceNew":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().getAbsolutePath(),\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","sourceOld":"  private String[] getShingleConfig(String params) { \n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"NewShingleAnalyzer(\" + params + \")\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cb341fb448c8f9d3190218c284c38210739f7af","date":1359437920,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","sourceNew":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().getAbsolutePath().replaceAll(\"\\\\\\\\\", \"/\"), // Fix Windows path\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","sourceOld":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().getAbsolutePath(),\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de522d9303bd67c8473a269a1319125d1f3700e0","date":1359477856,"type":1,"author":"Adrien Grand","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getShingleConfig(String).mjava","sourceNew":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().getAbsolutePath().replaceAll(\"\\\\\\\\\", \"/\"), // Fix Windows path\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","sourceOld":"  private String[] getShingleConfig(String params) { \n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"NewShingleAnalyzer(\" + params + \")\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","sourceNew":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().getAbsolutePath().replaceAll(\"\\\\\\\\\", \"/\"), // Fix Windows path\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","sourceOld":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().getAbsolutePath().replaceAll(\"\\\\\\\\\", \"/\"), // Fix Windows path\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","sourceNew":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().getAbsolutePath().replaceAll(\"\\\\\\\\\", \"/\"), // Fix Windows path\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","sourceOld":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().getAbsolutePath().replaceAll(\"\\\\\\\\\", \"/\"), // Fix Windows path\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","sourceNew":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().toAbsolutePath().toString().replaceAll(\"\\\\\\\\\", \"/\"), // Fix Windows path\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","sourceOld":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().getAbsolutePath().replaceAll(\"\\\\\\\\\", \"/\"), // Fix Windows path\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#getAnalyzerFactoryConfig(String,String).mjava","sourceNew":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().toAbsolutePath().toString().replaceAll(\"\\\\\\\\\", \"/\"), // Fix Windows path\n        \"content.source.forever=false\",\n        \"directory=ByteBuffersDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","sourceOld":"  private String[] getAnalyzerFactoryConfig(String name, String params) {\n    final String singleQuoteEscapedName = name.replaceAll(\"'\", \"\\\\\\\\'\");\n    String algLines[] = {\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"work.dir=\" + getWorkDir().toAbsolutePath().toString().replaceAll(\"\\\\\\\\\", \"/\"), // Fix Windows path\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"AnalyzerFactory(name:'\" + singleQuoteEscapedName + \"', \" + params + \")\",\n        \"NewAnalyzer('\" + singleQuoteEscapedName + \"')\",\n        \"CreateIndex\",\n        \"{ \\\"AddDocs\\\"  AddDoc > : * \"\n    };\n    return algLines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cb341fb448c8f9d3190218c284c38210739f7af":["7bb889a868ab9d608bde8136f42ed7234a3a927b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7bb889a868ab9d608bde8136f42ed7234a3a927b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["4cb341fb448c8f9d3190218c284c38210739f7af"],"d77dafd89756a5161d244985903e3487ca109182":["f4abec28b874149a7223e32cc7a01704c27790de"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["4cb341fb448c8f9d3190218c284c38210739f7af"],"f4abec28b874149a7223e32cc7a01704c27790de":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"de522d9303bd67c8473a269a1319125d1f3700e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cb341fb448c8f9d3190218c284c38210739f7af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"4cb341fb448c8f9d3190218c284c38210739f7af":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4","de522d9303bd67c8473a269a1319125d1f3700e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7bb889a868ab9d608bde8136f42ed7234a3a927b","de522d9303bd67c8473a269a1319125d1f3700e0"],"7bb889a868ab9d608bde8136f42ed7234a3a927b":["4cb341fb448c8f9d3190218c284c38210739f7af"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["d77dafd89756a5161d244985903e3487ca109182"],"de522d9303bd67c8473a269a1319125d1f3700e0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","de522d9303bd67c8473a269a1319125d1f3700e0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}