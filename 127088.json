{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery)include.clone(),(SpanQuery) exclude.clone());\n    spanNotQuery.setBoost(getBoost());\n    return  spanNotQuery;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery)include.clone(),(SpanQuery) exclude.clone());\n    spanNotQuery.setBoost(getBoost());\n    return  spanNotQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5bf508bfc98425280b4bb708ab724f718705c9d","date":1332973345,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","sourceNew":"  @Override\n  public SpanNotQuery clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery)include.clone(),(SpanQuery) exclude.clone());\n    spanNotQuery.setBoost(getBoost());\n    return  spanNotQuery;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery)include.clone(),(SpanQuery) exclude.clone());\n    spanNotQuery.setBoost(getBoost());\n    return  spanNotQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2102da8a037e2ce5cb9f72256c58c8722b9cd706","date":1374864457,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","sourceNew":"  @Override\n  public SpanNotQuery clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery)include.clone(),\n          (SpanQuery) exclude.clone(), pre, post);\n    spanNotQuery.setBoost(getBoost());\n    return  spanNotQuery;\n  }\n\n","sourceOld":"  @Override\n  public SpanNotQuery clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery)include.clone(),(SpanQuery) exclude.clone());\n    spanNotQuery.setBoost(getBoost());\n    return  spanNotQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","sourceNew":"  @Override\n  public SpanNotQuery clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery)include.clone(),\n          (SpanQuery) exclude.clone(), pre, post);\n    spanNotQuery.setBoost(getBoost());\n    return  spanNotQuery;\n  }\n\n","sourceOld":"  @Override\n  public SpanNotQuery clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery)include.clone(),(SpanQuery) exclude.clone());\n    spanNotQuery.setBoost(getBoost());\n    return  spanNotQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","sourceNew":"  @Override\n  public SpanNotQuery clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery) include.clone(),\n                                                                (SpanQuery) exclude.clone(), pre, post);\n    spanNotQuery.setBoost(getBoost());\n    return spanNotQuery;\n  }\n\n","sourceOld":"  @Override\n  public SpanNotQuery clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery)include.clone(),\n          (SpanQuery) exclude.clone(), pre, post);\n    spanNotQuery.setBoost(getBoost());\n    return  spanNotQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","sourceNew":"  @Override\n  public SpanNotQuery clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery) include.clone(),\n                                                                (SpanQuery) exclude.clone(), pre, post);\n    spanNotQuery.setBoost(getBoost());\n    return spanNotQuery;\n  }\n\n","sourceOld":"  @Override\n  public SpanNotQuery clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery)include.clone(),\n          (SpanQuery) exclude.clone(), pre, post);\n    spanNotQuery.setBoost(getBoost());\n    return  spanNotQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNotQuery#clone().mjava","sourceNew":null,"sourceOld":"  @Override\n  public SpanNotQuery clone() {\n    SpanNotQuery spanNotQuery = new SpanNotQuery((SpanQuery) include.clone(),\n                                                                (SpanQuery) exclude.clone(), pre, post);\n    spanNotQuery.setBoost(getBoost());\n    return spanNotQuery;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["f5bf508bfc98425280b4bb708ab724f718705c9d"],"2102da8a037e2ce5cb9f72256c58c8722b9cd706":["f5bf508bfc98425280b4bb708ab724f718705c9d"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["2102da8a037e2ce5cb9f72256c58c8722b9cd706"],"f5bf508bfc98425280b4bb708ab724f718705c9d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fab172655716b96f7e42376116235017a922de3a":["2102da8a037e2ce5cb9f72256c58c8722b9cd706","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f5bf508bfc98425280b4bb708ab724f718705c9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"2102da8a037e2ce5cb9f72256c58c8722b9cd706":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["2dfdf766e55e943d942055d7de53c7ad6bc45283","fab172655716b96f7e42376116235017a922de3a"],"f5bf508bfc98425280b4bb708ab724f718705c9d":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","2102da8a037e2ce5cb9f72256c58c8722b9cd706"],"fab172655716b96f7e42376116235017a922de3a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}