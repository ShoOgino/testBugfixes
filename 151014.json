{"path":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","pathOld":"src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","sourceNew":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static boolean checkIndex(Directory dir) throws IOException {\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos));\n    CheckIndex.Status indexStatus = checker.checkIndex();\n    if (indexStatus == null || indexStatus.clean == false) {\n      System.out.println(\"CheckIndex failed\");\n      System.out.println(bos.toString());\n      throw new RuntimeException(\"CheckIndex failed\");\n    } else\n      return true;\n  }\n\n","sourceOld":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static boolean checkIndex(Directory dir) throws IOException {\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos));\n    CheckIndex.Status indexStatus = checker.checkIndex();\n    if (indexStatus == null || indexStatus.clean == false) {\n      System.out.println(\"CheckIndex failed\");\n      System.out.println(bos.toString());\n      throw new RuntimeException(\"CheckIndex failed\");\n    } else\n      return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6c7b564e6275fb0c0e137d84fda55b447c19d9c","date":1286438356,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","sourceNew":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos));\n    CheckIndex.Status indexStatus = checker.checkIndex();\n    if (indexStatus == null || indexStatus.clean == false) {\n      System.out.println(\"CheckIndex failed\");\n      System.out.println(bos.toString());\n      throw new RuntimeException(\"CheckIndex failed\");\n    } else {\n      return indexStatus;\n    }\n  }\n\n","sourceOld":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static boolean checkIndex(Directory dir) throws IOException {\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos));\n    CheckIndex.Status indexStatus = checker.checkIndex();\n    if (indexStatus == null || indexStatus.clean == false) {\n      System.out.println(\"CheckIndex failed\");\n      System.out.println(bos.toString());\n      throw new RuntimeException(\"CheckIndex failed\");\n    } else\n      return true;\n  }\n\n","bugFix":null,"bugIntro":["2248ea99d1f1e5ae6d67d1547acfe3e29576b8a6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2248ea99d1f1e5ae6d67d1547acfe3e29576b8a6","date":1288888250,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","sourceNew":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    return checkIndex(dir, CodecProvider.getDefault());\n  }\n\n","sourceOld":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos));\n    CheckIndex.Status indexStatus = checker.checkIndex();\n    if (indexStatus == null || indexStatus.clean == false) {\n      System.out.println(\"CheckIndex failed\");\n      System.out.println(bos.toString());\n      throw new RuntimeException(\"CheckIndex failed\");\n    } else {\n      return indexStatus;\n    }\n  }\n\n","bugFix":["ac1242ce6d99813874fddfe4ca5f57779beddb22","f4ba1ab90d9a427e7f2c7d1e65a3ce5869ed8e5d","a6c7b564e6275fb0c0e137d84fda55b447c19d9c","cba44a7c8f0e3eb449bcdbd53960b7705c0bf902","7391c1f4ab1a6817de8a262f5c1b3de3cf190785"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","sourceNew":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    return checkIndex(dir, CodecProvider.getDefault());\n  }\n\n","sourceOld":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos));\n    CheckIndex.Status indexStatus = checker.checkIndex();\n    if (indexStatus == null || indexStatus.clean == false) {\n      System.out.println(\"CheckIndex failed\");\n      System.out.println(bos.toString());\n      throw new RuntimeException(\"CheckIndex failed\");\n    } else {\n      return indexStatus;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","sourceNew":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    return checkIndex(dir, CodecProvider.getDefault());\n  }\n\n","sourceOld":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static boolean checkIndex(Directory dir) throws IOException {\n    ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n\n    CheckIndex checker = new CheckIndex(dir);\n    checker.setInfoStream(new PrintStream(bos));\n    CheckIndex.Status indexStatus = checker.checkIndex();\n    if (indexStatus == null || indexStatus.clean == false) {\n      System.out.println(\"CheckIndex failed\");\n      System.out.println(bos.toString());\n      throw new RuntimeException(\"CheckIndex failed\");\n    } else\n      return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","sourceNew":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    return checkIndex(dir, CodecProvider.getDefault());\n  }\n\n","sourceOld":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    return checkIndex(dir, CodecProvider.getDefault());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","sourceNew":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    return checkIndex(dir, CodecProvider.getDefault());\n  }\n\n","sourceOld":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    return checkIndex(dir, CodecProvider.getDefault());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#checkIndex(Directory).mjava","sourceNew":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    return checkIndex(dir, CodecProvider.getDefault());\n  }\n\n","sourceOld":"  /** This runs the CheckIndex tool on the index in.  If any\n   *  issues are hit, a RuntimeException is thrown; else,\n   *  true is returned. */\n  public static CheckIndex.Status checkIndex(Directory dir) throws IOException {\n    return checkIndex(dir, CodecProvider.getDefault());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["85a883878c0af761245ab048babc63d099f835f3","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a6c7b564e6275fb0c0e137d84fda55b447c19d9c","2248ea99d1f1e5ae6d67d1547acfe3e29576b8a6"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","2248ea99d1f1e5ae6d67d1547acfe3e29576b8a6"],"2248ea99d1f1e5ae6d67d1547acfe3e29576b8a6":["a6c7b564e6275fb0c0e137d84fda55b447c19d9c"],"a6c7b564e6275fb0c0e137d84fda55b447c19d9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["2248ea99d1f1e5ae6d67d1547acfe3e29576b8a6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"85a883878c0af761245ab048babc63d099f835f3":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a6c7b564e6275fb0c0e137d84fda55b447c19d9c":["85a883878c0af761245ab048babc63d099f835f3","2248ea99d1f1e5ae6d67d1547acfe3e29576b8a6"],"2248ea99d1f1e5ae6d67d1547acfe3e29576b8a6":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a6c7b564e6275fb0c0e137d84fda55b447c19d9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}