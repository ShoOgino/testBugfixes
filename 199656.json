{"path":"lucene/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#copyBytes(IndexOutput,long).mjava","commits":[{"id":"67aadace85f701c87a4e0721eedcda25d8415a70","date":1314201925,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#copyBytes(IndexOutput,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DefaultCompoundFileDirectory.CSIndexInput#copyBytes(IndexOutput,long).mjava","sourceNew":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new IOException(\"read past EOF\");\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new IOException(\"read past EOF\");\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5090f41e198d9dd9374e99981f940b111973af2","date":1325969785,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#copyBytes(IndexOutput,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#copyBytes(IndexOutput,long).mjava","sourceNew":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new EOFException(\"read past EOF: \" + this);\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new IOException(\"read past EOF\");\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#copyBytes(IndexOutput,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory.SlicedIndexInput#copyBytes(IndexOutput,long).mjava","sourceNew":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new EOFException(\"read past EOF: \" + this);\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void copyBytes(IndexOutput out, long numBytes) throws IOException {\n      // Copy first whatever is in the buffer\n      numBytes -= flushBuffer(out, numBytes);\n      \n      // If there are more bytes left to copy, delegate the copy task to the\n      // base IndexInput, in case it can do an optimized copy.\n      if (numBytes > 0) {\n        long start = getFilePointer();\n        if (start + numBytes > length) {\n          throw new EOFException(\"read past EOF: \" + this);\n        }\n        base.seek(fileOffset + start);\n        base.copyBytes(out, numBytes);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"67aadace85f701c87a4e0721eedcda25d8415a70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e5090f41e198d9dd9374e99981f940b111973af2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e5090f41e198d9dd9374e99981f940b111973af2":["67aadace85f701c87a4e0721eedcda25d8415a70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"67aadace85f701c87a4e0721eedcda25d8415a70":["e5090f41e198d9dd9374e99981f940b111973af2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["67aadace85f701c87a4e0721eedcda25d8415a70"],"e5090f41e198d9dd9374e99981f940b111973af2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}