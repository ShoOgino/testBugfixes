{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","sourceNew":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    return reader.termPositionsEnum(null, fieldName, bytes, false);\n  }\n\n","sourceOld":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    return reader.termPositionsEnum(null, fieldName, bytes, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"322360ac5185a8446d3e0b530b2068bef67cd3d5","date":1343669494,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","sourceNew":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    return reader.termPositionsEnum(null, fieldName, bytes);\n  }\n\n","sourceOld":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    return reader.termPositionsEnum(null, fieldName, bytes, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","sourceNew":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    return reader.termPositionsEnum(null, fieldName, bytes);\n  }\n\n","sourceOld":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    return reader.termPositionsEnum(null, fieldName, bytes, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","sourceNew":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    return reader.termPositionsEnum(null, fieldName, bytes);\n  }\n\n","sourceOld":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    return reader.termPositionsEnum(null, fieldName, bytes, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a0e3c1c21aac8ecf75706605133012833585c7","date":1347535263,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","sourceNew":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    Terms terms = reader.terms(fieldName);\n    if (terms != null) {\n      TermsEnum te = terms.iterator(null);\n      if (te.seekExact(bytes, true)) {\n        return te.docsAndPositions(liveDocs, null);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    return reader.termPositionsEnum(null, fieldName, bytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","sourceNew":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    Terms terms = reader.terms(fieldName);\n    if (terms != null) {\n      TermsEnum te = terms.iterator(null);\n      if (te.seekExact(bytes)) {\n        return te.docsAndPositions(liveDocs, null);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    Terms terms = reader.terms(fieldName);\n    if (terms != null) {\n      TermsEnum te = terms.iterator(null);\n      if (te.seekExact(bytes, true)) {\n        return te.docsAndPositions(liveDocs, null);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","sourceNew":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    Terms terms = reader.terms(fieldName);\n    if (terms != null) {\n      TermsEnum te = terms.iterator(null);\n      if (te.seekExact(bytes)) {\n        return te.docsAndPositions(liveDocs, null);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    Terms terms = reader.terms(fieldName);\n    if (terms != null) {\n      TermsEnum te = terms.iterator(null);\n      if (te.seekExact(bytes, true)) {\n        return te.docsAndPositions(liveDocs, null);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsAndPositions(AtomicReader,BytesRef,Bits).mjava","sourceNew":null,"sourceOld":"  public DocsAndPositionsEnum getDocsAndPositions(AtomicReader reader,\n      BytesRef bytes, Bits liveDocs) throws IOException {\n    Terms terms = reader.terms(fieldName);\n    if (terms != null) {\n      TermsEnum te = terms.iterator(null);\n      if (te.seekExact(bytes)) {\n        return te.docsAndPositions(liveDocs, null);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"b6a0e3c1c21aac8ecf75706605133012833585c7":["322360ac5185a8446d3e0b530b2068bef67cd3d5"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b6a0e3c1c21aac8ecf75706605133012833585c7"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["b6a0e3c1c21aac8ecf75706605133012833585c7"],"322360ac5185a8446d3e0b530b2068bef67cd3d5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","322360ac5185a8446d3e0b530b2068bef67cd3d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"b6a0e3c1c21aac8ecf75706605133012833585c7":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"322360ac5185a8446d3e0b530b2068bef67cd3d5":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","b6a0e3c1c21aac8ecf75706605133012833585c7","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}