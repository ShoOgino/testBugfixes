{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#assertRefCountEquals(int,IndexReader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#assertRefCountEquals(int,IndexReader).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#assertRefCountEquals(int,IndexReader).mjava","sourceNew":"  private void assertRefCountEquals(int refCount, IndexReader reader) {\n    assertEquals(\"Reader has wrong refCount value.\", refCount, reader.getRefCount());\n  }\n\n","sourceOld":"  private void assertRefCountEquals(int refCount, IndexReader reader) {\n    assertEquals(\"Reader has wrong refCount value.\", refCount, reader.getRefCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40b62adb64d8f7b2f85ee849349cfb0bef03f45","date":1327855938,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#assertRefCountEquals(int,DirectoryReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#assertRefCountEquals(int,IndexReader).mjava","sourceNew":"  private void assertRefCountEquals(int refCount, DirectoryReader reader) {\n    assertEquals(\"Reader has wrong refCount value.\", refCount, reader.getRefCount());\n  }\n\n","sourceOld":"  private void assertRefCountEquals(int refCount, IndexReader reader) {\n    assertEquals(\"Reader has wrong refCount value.\", refCount, reader.getRefCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#assertRefCountEquals(int,DirectoryReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#assertRefCountEquals(int,IndexReader).mjava","sourceNew":"  private void assertRefCountEquals(int refCount, DirectoryReader reader) {\n    assertEquals(\"Reader has wrong refCount value.\", refCount, reader.getRefCount());\n  }\n\n","sourceOld":"  private void assertRefCountEquals(int refCount, IndexReader reader) {\n    assertEquals(\"Reader has wrong refCount value.\", refCount, reader.getRefCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["9454a6510e2db155fb01faa5c049b06ece95fab9","d40b62adb64d8f7b2f85ee849349cfb0bef03f45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d40b62adb64d8f7b2f85ee849349cfb0bef03f45","5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}