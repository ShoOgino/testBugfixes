{"path":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        accum += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return (docID = accum);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        accum += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return (docID = accum);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7424161ac990ef8f959f09ee516148e4d12c48bc","date":1336236796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        accum += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n        startOffset = storeOffsets ? 0 : -1; // always return -1 if no offsets are stored\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return (docID = accum);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        accum += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return (docID = accum);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        accum += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n        startOffset = storeOffsets ? 0 : -1; // always return -1 if no offsets are stored\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return (docID = accum);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      //System.out.println(\"PR d&p nextDoc this=\" + this);\n\n      while(true) {\n        //System.out.println(\"  cycle skip posPending=\" + posPending);\n\n        skipPositions();\n\n        if (postings.eof()) {\n          //System.out.println(\"PR   END\");\n          return docID = NO_MORE_DOCS;\n        }\n\n        final int code = postings.readVInt();\n        accum += code >>> 1;            // shift off low bit\n        if ((code & 1) != 0) {          // if low bit is set\n          freq = 1;                     // freq is one\n        } else {\n          freq = postings.readVInt();     // else read freq\n        }\n        posPending = freq;\n        startOffset = storeOffsets ? 0 : -1; // always return -1 if no offsets are stored\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          //System.out.println(\"  return docID=\" + docID + \" freq=\" + freq);\n          position = 0;\n          return (docID = accum);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["7424161ac990ef8f959f09ee516148e4d12c48bc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7424161ac990ef8f959f09ee516148e4d12c48bc":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7424161ac990ef8f959f09ee516148e4d12c48bc"],"7424161ac990ef8f959f09ee516148e4d12c48bc":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}