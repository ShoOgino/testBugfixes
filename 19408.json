{"path":"src/test/org/apache/solr/analysis/HTMLStripReaderTest#test().mjava","commits":[{"id":"242cbb7397e76eee3a485b1ac0060c2b98559c89","date":1199634401,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/HTMLStripReaderTest#test().mjava","pathOld":"/dev/null","sourceNew":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \"                 this is some text       here is a                link     and \" +\n            \"another                                     link    . \" +\n            \"This is an entity: & plus a <.  Here is an &.                      \";\n    HTMLStripReader reader = new HTMLStripReader(new StringReader(html));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position] + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertTrue(gold + \" is not equal to \" + builder.toString(), gold.equals(builder.toString()) == true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ab081a78869a616f9c93e5b2f3ec2f99c2f7f741"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"187b932e3f791668d245124e03d899af557d22df","date":1199907679,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/HTMLStripReaderTest#test().mjava","pathOld":"src/test/org/apache/solr/analysis/HTMLStripReaderTest#test().mjava","sourceNew":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \"                 this is some text       here is a                link     and \" +\n            \"another                                     link    . \" +\n            \"This is an entity: &     plus a <   .  Here is an &.                      \";\n    HTMLStripReader reader = new HTMLStripReader(new StringReader(html));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertTrue(gold + \" is not equal to \" + builder.toString(), gold.equals(builder.toString()) == true);\n  }\n\n","sourceOld":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \"                 this is some text       here is a                link     and \" +\n            \"another                                     link    . \" +\n            \"This is an entity: & plus a <.  Here is an &.                      \";\n    HTMLStripReader reader = new HTMLStripReader(new StringReader(html));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position] + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertTrue(gold + \" is not equal to \" + builder.toString(), gold.equals(builder.toString()) == true);\n  }\n\n","bugFix":null,"bugIntro":["ab081a78869a616f9c93e5b2f3ec2f99c2f7f741"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bd69280df0902763e47cb14745388ee17a2fb602","date":1249686305,"type":5,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/HTMLStripCharFilterTest#test().mjava","pathOld":"src/test/org/apache/solr/analysis/HTMLStripReaderTest#test().mjava","sourceNew":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \"                 this is some text       here is a                link     and \" +\n            \"another                                     link    . \" +\n            \"This is an entity: &     plus a <   .  Here is an &.                      \";\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new StringReader(html)));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertTrue(gold + \" is not equal to \" + builder.toString(), gold.equals(builder.toString()) == true);\n  }\n\n","sourceOld":"  //this is some text  here is a  link  and another  link . This is an entity: & plus a <.  Here is an &\n  //\n  public void test() throws IOException {\n    String html = \"<div class=\\\"foo\\\">this is some text</div> here is a <a href=\\\"#bar\\\">link</a> and \" +\n            \"another <a href=\\\"http://lucene.apache.org/\\\">link</a>. \" +\n            \"This is an entity: &amp; plus a &lt;.  Here is an &. <!-- is a comment -->\";\n    String gold = \"                 this is some text       here is a                link     and \" +\n            \"another                                     link    . \" +\n            \"This is an entity: &     plus a <   .  Here is an &.                      \";\n    HTMLStripReader reader = new HTMLStripReader(new StringReader(html));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    char [] goldArray = gold.toCharArray();\n    int position = 0;\n    while ((ch = reader.read()) != -1){\n      char theChar = (char) ch;\n      builder.append(theChar);\n      assertTrue(\"\\\"\" + theChar + \"\\\"\" + \" at position: \" + position + \" does not equal: \" + goldArray[position]\n              + \" Buffer so far: \" + builder + \"<EOB>\", theChar == goldArray[position]);\n      position++;\n    }\n    assertTrue(gold + \" is not equal to \" + builder.toString(), gold.equals(builder.toString()) == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"242cbb7397e76eee3a485b1ac0060c2b98559c89":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"bd69280df0902763e47cb14745388ee17a2fb602":["187b932e3f791668d245124e03d899af557d22df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"187b932e3f791668d245124e03d899af557d22df":["242cbb7397e76eee3a485b1ac0060c2b98559c89"]},"commit2Childs":{"242cbb7397e76eee3a485b1ac0060c2b98559c89":["187b932e3f791668d245124e03d899af557d22df"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["242cbb7397e76eee3a485b1ac0060c2b98559c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bd69280df0902763e47cb14745388ee17a2fb602":[],"187b932e3f791668d245124e03d899af557d22df":["bd69280df0902763e47cb14745388ee17a2fb602"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bd69280df0902763e47cb14745388ee17a2fb602","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}