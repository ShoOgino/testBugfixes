{"path":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","commits":[{"id":"1c88b3d0bf235942b9ead3322cac5fcee1e732d8","date":1133977717,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","pathOld":"/dev/null","sourceNew":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n            indexWriter=new IndexWriter(directory, new KeywordAnalyzer(), create);\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","sourceNew":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n            indexWriter=new IndexWriter(directory, new KeywordAnalyzer(), create, IndexWriter.MaxFieldLength.LIMITED);\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n            indexWriter=new IndexWriter(directory, new KeywordAnalyzer(), create);\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","sourceNew":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT).setAnalyzer(new KeywordAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n            indexWriter=new IndexWriter(directory, new KeywordAnalyzer(), create, IndexWriter.MaxFieldLength.LIMITED);\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","sourceNew":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n            indexWriter=new IndexWriter(directory, new KeywordAnalyzer(), create, IndexWriter.MaxFieldLength.LIMITED);\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT).setAnalyzer(new KeywordAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","sourceNew":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT, new KeywordAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n            indexWriter=new IndexWriter(directory, new KeywordAnalyzer(), create, IndexWriter.MaxFieldLength.LIMITED);\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","sourceNew":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT, new KeywordAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT, new KeywordAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["1c88b3d0bf235942b9ead3322cac5fcee1e732d8"],"1c88b3d0bf235942b9ead3322cac5fcee1e732d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1c88b3d0bf235942b9ead3322cac5fcee1e732d8"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"1c88b3d0bf235942b9ead3322cac5fcee1e732d8":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}