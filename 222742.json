{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,Bits,int).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,Bits,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,Bits,int).mjava","sourceNew":"    public FSTDocsEnum reset(BytesRef bufferIn, Bits liveDocs, int numDocs) {\n      assert numDocs > 0;\n      if (buffer.length < bufferIn.length - bufferIn.offset) {\n        buffer = ArrayUtil.grow(buffer, bufferIn.length - bufferIn.offset);\n      }\n      in.reset(buffer, 0, bufferIn.length - bufferIn.offset);\n      System.arraycopy(bufferIn.bytes, bufferIn.offset, buffer, 0, bufferIn.length - bufferIn.offset);\n      this.liveDocs = liveDocs;\n      docID = -1;\n      accum = 0;\n      docUpto = 0;\n      freq = 1;\n      payloadLen = 0;\n      this.numDocs = numDocs;\n      return this;\n    }\n\n","sourceOld":"    public FSTDocsEnum reset(BytesRef bufferIn, Bits liveDocs, int numDocs) {\n      assert numDocs > 0;\n      if (buffer.length < bufferIn.length - bufferIn.offset) {\n        buffer = ArrayUtil.grow(buffer, bufferIn.length - bufferIn.offset);\n      }\n      in.reset(buffer, 0, bufferIn.length - bufferIn.offset);\n      System.arraycopy(bufferIn.bytes, bufferIn.offset, buffer, 0, bufferIn.length - bufferIn.offset);\n      this.liveDocs = liveDocs;\n      docID = -1;\n      accum = 0;\n      docUpto = 0;\n      freq = 1;\n      payloadLen = 0;\n      this.numDocs = numDocs;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c7c5f2319949ba567dd867f78f86ea8ff0f1476","date":1375469665,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,Bits,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,Bits,int).mjava","sourceNew":"    public FSTDocsEnum reset(BytesRef bufferIn, Bits liveDocs, int numDocs) {\n      assert numDocs > 0;\n      if (buffer.length < bufferIn.length) {\n        buffer = ArrayUtil.grow(buffer, bufferIn.length);\n      }\n      in.reset(buffer, 0, bufferIn.length);\n      System.arraycopy(bufferIn.bytes, bufferIn.offset, buffer, 0, bufferIn.length);\n      this.liveDocs = liveDocs;\n      docID = -1;\n      accum = 0;\n      docUpto = 0;\n      freq = 1;\n      payloadLen = 0;\n      this.numDocs = numDocs;\n      return this;\n    }\n\n","sourceOld":"    public FSTDocsEnum reset(BytesRef bufferIn, Bits liveDocs, int numDocs) {\n      assert numDocs > 0;\n      if (buffer.length < bufferIn.length - bufferIn.offset) {\n        buffer = ArrayUtil.grow(buffer, bufferIn.length - bufferIn.offset);\n      }\n      in.reset(buffer, 0, bufferIn.length - bufferIn.offset);\n      System.arraycopy(bufferIn.bytes, bufferIn.offset, buffer, 0, bufferIn.length - bufferIn.offset);\n      this.liveDocs = liveDocs;\n      docID = -1;\n      accum = 0;\n      docUpto = 0;\n      freq = 1;\n      payloadLen = 0;\n      this.numDocs = numDocs;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,Bits,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,Bits,int).mjava","sourceNew":"    public FSTDocsEnum reset(BytesRef bufferIn, Bits liveDocs, int numDocs) {\n      assert numDocs > 0;\n      if (buffer.length < bufferIn.length) {\n        buffer = ArrayUtil.grow(buffer, bufferIn.length);\n      }\n      in.reset(buffer, 0, bufferIn.length);\n      System.arraycopy(bufferIn.bytes, bufferIn.offset, buffer, 0, bufferIn.length);\n      this.liveDocs = liveDocs;\n      docID = -1;\n      accum = 0;\n      docUpto = 0;\n      freq = 1;\n      payloadLen = 0;\n      this.numDocs = numDocs;\n      return this;\n    }\n\n","sourceOld":"    public FSTDocsEnum reset(BytesRef bufferIn, Bits liveDocs, int numDocs) {\n      assert numDocs > 0;\n      if (buffer.length < bufferIn.length - bufferIn.offset) {\n        buffer = ArrayUtil.grow(buffer, bufferIn.length - bufferIn.offset);\n      }\n      in.reset(buffer, 0, bufferIn.length - bufferIn.offset);\n      System.arraycopy(bufferIn.bytes, bufferIn.offset, buffer, 0, bufferIn.length - bufferIn.offset);\n      this.liveDocs = liveDocs;\n      docID = -1;\n      accum = 0;\n      docUpto = 0;\n      freq = 1;\n      payloadLen = 0;\n      this.numDocs = numDocs;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsEnum#reset(BytesRef,Bits,int).mjava","sourceNew":"    public FSTDocsEnum reset(BytesRef bufferIn, int numDocs) {\n      assert numDocs > 0;\n      if (buffer.length < bufferIn.length) {\n        buffer = ArrayUtil.grow(buffer, bufferIn.length);\n      }\n      in.reset(buffer, 0, bufferIn.length);\n      System.arraycopy(bufferIn.bytes, bufferIn.offset, buffer, 0, bufferIn.length);\n      docID = -1;\n      accum = 0;\n      docUpto = 0;\n      freq = 1;\n      payloadLen = 0;\n      this.numDocs = numDocs;\n      return this;\n    }\n\n","sourceOld":"    public FSTDocsEnum reset(BytesRef bufferIn, Bits liveDocs, int numDocs) {\n      assert numDocs > 0;\n      if (buffer.length < bufferIn.length) {\n        buffer = ArrayUtil.grow(buffer, bufferIn.length);\n      }\n      in.reset(buffer, 0, bufferIn.length);\n      System.arraycopy(bufferIn.bytes, bufferIn.offset, buffer, 0, bufferIn.length);\n      this.liveDocs = liveDocs;\n      docID = -1;\n      accum = 0;\n      docUpto = 0;\n      freq = 1;\n      payloadLen = 0;\n      this.numDocs = numDocs;\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["3c7c5f2319949ba567dd867f78f86ea8ff0f1476"],"3c7c5f2319949ba567dd867f78f86ea8ff0f1476":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3c7c5f2319949ba567dd867f78f86ea8ff0f1476":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["3c7c5f2319949ba567dd867f78f86ea8ff0f1476","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}