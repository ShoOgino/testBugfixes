{"path":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.LeapFrogFilterStrategy#filteredScorer(LeafReaderContext,Weight,DocIdSet,boolean).mjava","commits":[{"id":"781239fc84d36be12b84e4d3e2618f5f07a182e3","date":1423139668,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.LeapFrogFilterStrategy#filteredScorer(LeafReaderContext,Weight,DocIdSet,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.LeapFrogFilterStrategy#filteredScorer(LeafReaderContext,Weight,DocIdSet).mjava","sourceNew":"    @Override\n    public Scorer filteredScorer(LeafReaderContext context,\n        Weight weight, DocIdSet docIdSet, boolean needsScores) throws IOException {\n      final DocIdSetIterator filterIter = docIdSet.iterator();\n      if (filterIter == null) {\n        // this means the filter does not accept any documents.\n        return null;\n      }\n      // we pass null as acceptDocs, as our filter has already respected acceptDocs, no need to do twice\n      final Scorer scorer = weight.scorer(context, null, needsScores);\n      if (scorer == null) {\n        return null;\n      }\n\n      if (scorerFirst) {\n        return new LeapFrogScorer(weight, scorer, filterIter, scorer);  \n      } else {\n        return new LeapFrogScorer(weight, filterIter, scorer, scorer);  \n      }\n    }\n\n","sourceOld":"    @Override\n    public Scorer filteredScorer(LeafReaderContext context,\n        Weight weight, DocIdSet docIdSet) throws IOException {\n      final DocIdSetIterator filterIter = docIdSet.iterator();\n      if (filterIter == null) {\n        // this means the filter does not accept any documents.\n        return null;\n      }\n      // we pass null as acceptDocs, as our filter has already respected acceptDocs, no need to do twice\n      final Scorer scorer = weight.scorer(context, null);\n      if (scorer == null) {\n        return null;\n      }\n\n      if (scorerFirst) {\n        return new LeapFrogScorer(weight, scorer, filterIter, scorer);  \n      } else {\n        return new LeapFrogScorer(weight, filterIter, scorer, scorer);  \n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.LeapFrogFilterStrategy#filteredScorer(LeafReaderContext,Weight,DocIdSet).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteredQuery.LeapFrogFilterStrategy#filteredScorer(LeafReaderContext,Weight,DocIdSet,boolean).mjava","sourceNew":"    @Override\n    public Scorer filteredScorer(LeafReaderContext context,\n        Weight weight, DocIdSet docIdSet) throws IOException {\n      final DocIdSetIterator filterIter = docIdSet.iterator();\n      if (filterIter == null) {\n        // this means the filter does not accept any documents.\n        return null;\n      }\n      // we pass null as acceptDocs, as our filter has already respected acceptDocs, no need to do twice\n      final Scorer scorer = weight.scorer(context, null);\n      if (scorer == null) {\n        return null;\n      }\n\n      if (scorerFirst) {\n        return new LeapFrogScorer(weight, scorer, filterIter, scorer);  \n      } else {\n        return new LeapFrogScorer(weight, filterIter, scorer, scorer);  \n      }\n    }\n\n","sourceOld":"    @Override\n    public Scorer filteredScorer(LeafReaderContext context,\n        Weight weight, DocIdSet docIdSet, boolean needsScores) throws IOException {\n      final DocIdSetIterator filterIter = docIdSet.iterator();\n      if (filterIter == null) {\n        // this means the filter does not accept any documents.\n        return null;\n      }\n      // we pass null as acceptDocs, as our filter has already respected acceptDocs, no need to do twice\n      final Scorer scorer = weight.scorer(context, null, needsScores);\n      if (scorer == null) {\n        return null;\n      }\n\n      if (scorerFirst) {\n        return new LeapFrogScorer(weight, scorer, filterIter, scorer);  \n      } else {\n        return new LeapFrogScorer(weight, filterIter, scorer, scorer);  \n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb17639909a369c1e64866842e5c213440acc17e"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["fb17639909a369c1e64866842e5c213440acc17e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}