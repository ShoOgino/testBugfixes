{"path":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#setResult(QueryResult).mjava","commits":[{"id":"ac9de183adbc9483681f275ac1e2d92ed19f52e1","date":1452414626,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#setResult(QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#setResult(SolrIndexSearcher.QueryResult).mjava","sourceNew":"  /**\n   * Sets results from a SolrIndexSearcher.QueryResult.\n   */\n  public void setResult(QueryResult result) {\n    setResults(result.getDocListAndSet());\n    if (result.isPartialResults()) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE);\n    }\n    if (null != cursorMark) {\n      assert null != result.getNextCursorMark() : \"using cursor but no next cursor set\";\n      this.setNextCursorMark(result.getNextCursorMark());\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets results from a SolrIndexSearcher.QueryResult.\n   */\n  public void setResult(SolrIndexSearcher.QueryResult result) {\n    setResults(result.getDocListAndSet());\n    if (result.isPartialResults()) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE);\n    }\n    if (null != cursorMark) {\n      assert null != result.getNextCursorMark() : \"using cursor but no next cursor set\";\n      this.setNextCursorMark(result.getNextCursorMark());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b","date":1455308162,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#setResult(QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#setResult(QueryResult).mjava","sourceNew":"  /**\n   * Sets results from a SolrIndexSearcher.QueryResult.\n   */\n  public void setResult(QueryResult result) {\n    setResults(result.getDocListAndSet());\n    if (result.isPartialResults()) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE);\n    }\n    final Boolean segmentTerminatedEarly = result.getSegmentTerminatedEarly();\n    if (segmentTerminatedEarly != null) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_SEGMENT_TERMINATED_EARLY_KEY, segmentTerminatedEarly);\n    }\n    if (null != cursorMark) {\n      assert null != result.getNextCursorMark() : \"using cursor but no next cursor set\";\n      this.setNextCursorMark(result.getNextCursorMark());\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets results from a SolrIndexSearcher.QueryResult.\n   */\n  public void setResult(QueryResult result) {\n    setResults(result.getDocListAndSet());\n    if (result.isPartialResults()) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE);\n    }\n    if (null != cursorMark) {\n      assert null != result.getNextCursorMark() : \"using cursor but no next cursor set\";\n      this.setNextCursorMark(result.getNextCursorMark());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3584d3db8b472772e3329d9d95d584b68ae997e","date":1551710517,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#setResult(QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#setResult(QueryResult).mjava","sourceNew":"  /**\n   * Sets results from a SolrIndexSearcher.QueryResult.\n   */\n  public void setResult(QueryResult result) {\n    setResults(result.getDocListAndSet());\n    if (result.isPartialResults()) {\n      rsp.getResponseHeader().asShallowMap()\n          .put(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE);\n      if(getResults().docList==null) {\n        getResults().docList = new DocSlice(0, 0, new int[] {}, new float[] {}, 0, 0);\n      }\n    }\n    final Boolean segmentTerminatedEarly = result.getSegmentTerminatedEarly();\n    if (segmentTerminatedEarly != null) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_SEGMENT_TERMINATED_EARLY_KEY, segmentTerminatedEarly);\n    }\n    if (null != cursorMark) {\n      assert null != result.getNextCursorMark() : \"using cursor but no next cursor set\";\n      this.setNextCursorMark(result.getNextCursorMark());\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets results from a SolrIndexSearcher.QueryResult.\n   */\n  public void setResult(QueryResult result) {\n    setResults(result.getDocListAndSet());\n    if (result.isPartialResults()) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE);\n    }\n    final Boolean segmentTerminatedEarly = result.getSegmentTerminatedEarly();\n    if (segmentTerminatedEarly != null) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_SEGMENT_TERMINATED_EARLY_KEY, segmentTerminatedEarly);\n    }\n    if (null != cursorMark) {\n      assert null != result.getNextCursorMark() : \"using cursor but no next cursor set\";\n      this.setNextCursorMark(result.getNextCursorMark());\n    }\n  }\n\n","bugFix":["83b038ad0480d5e81e058bf9fafb2dd85399985d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7821a96a128719bd3bc4700abf083eca1b895b6","date":1551823000,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#setResult(QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#setResult(QueryResult).mjava","sourceNew":"  /**\n   * Sets results from a SolrIndexSearcher.QueryResult.\n   */\n  public void setResult(QueryResult result) {\n    setResults(result.getDocListAndSet());\n    if (result.isPartialResults()) {\n      rsp.getResponseHeader().asShallowMap()\n          .put(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE);\n      if(getResults() != null && getResults().docList==null) {\n        getResults().docList = new DocSlice(0, 0, new int[] {}, new float[] {}, 0, 0);\n      }\n    }\n    final Boolean segmentTerminatedEarly = result.getSegmentTerminatedEarly();\n    if (segmentTerminatedEarly != null) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_SEGMENT_TERMINATED_EARLY_KEY, segmentTerminatedEarly);\n    }\n    if (null != cursorMark) {\n      assert null != result.getNextCursorMark() : \"using cursor but no next cursor set\";\n      this.setNextCursorMark(result.getNextCursorMark());\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets results from a SolrIndexSearcher.QueryResult.\n   */\n  public void setResult(QueryResult result) {\n    setResults(result.getDocListAndSet());\n    if (result.isPartialResults()) {\n      rsp.getResponseHeader().asShallowMap()\n          .put(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE);\n      if(getResults().docList==null) {\n        getResults().docList = new DocSlice(0, 0, new int[] {}, new float[] {}, 0, 0);\n      }\n    }\n    final Boolean segmentTerminatedEarly = result.getSegmentTerminatedEarly();\n    if (segmentTerminatedEarly != null) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_SEGMENT_TERMINATED_EARLY_KEY, segmentTerminatedEarly);\n    }\n    if (null != cursorMark) {\n      assert null != result.getNextCursorMark() : \"using cursor but no next cursor set\";\n      this.setNextCursorMark(result.getNextCursorMark());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"640ded7811e1b7d29236a5e2934ec3cd266a8199","date":1588973147,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#setResult(QueryResult).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#setResult(QueryResult).mjava","sourceNew":"  /**\n   * Sets results from a SolrIndexSearcher.QueryResult.\n   */\n  public void setResult(QueryResult result) {\n    setResults(result.getDocListAndSet());\n    if (result.isPartialResults()) {\n      rsp.getResponseHeader().asShallowMap()\n          .put(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE);\n      if(getResults() != null && getResults().docList==null) {\n        getResults().docList = new DocSlice(0, 0, new int[] {}, new float[] {}, 0, 0, TotalHits.Relation.EQUAL_TO);\n      }\n    }\n    final Boolean segmentTerminatedEarly = result.getSegmentTerminatedEarly();\n    if (segmentTerminatedEarly != null) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_SEGMENT_TERMINATED_EARLY_KEY, segmentTerminatedEarly);\n    }\n    if (null != cursorMark) {\n      assert null != result.getNextCursorMark() : \"using cursor but no next cursor set\";\n      this.setNextCursorMark(result.getNextCursorMark());\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets results from a SolrIndexSearcher.QueryResult.\n   */\n  public void setResult(QueryResult result) {\n    setResults(result.getDocListAndSet());\n    if (result.isPartialResults()) {\n      rsp.getResponseHeader().asShallowMap()\n          .put(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE);\n      if(getResults() != null && getResults().docList==null) {\n        getResults().docList = new DocSlice(0, 0, new int[] {}, new float[] {}, 0, 0);\n      }\n    }\n    final Boolean segmentTerminatedEarly = result.getSegmentTerminatedEarly();\n    if (segmentTerminatedEarly != null) {\n      rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_SEGMENT_TERMINATED_EARLY_KEY, segmentTerminatedEarly);\n    }\n    if (null != cursorMark) {\n      assert null != result.getNextCursorMark() : \"using cursor but no next cursor set\";\n      this.setNextCursorMark(result.getNextCursorMark());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"640ded7811e1b7d29236a5e2934ec3cd266a8199":["f7821a96a128719bd3bc4700abf083eca1b895b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3584d3db8b472772e3329d9d95d584b68ae997e":["1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b"],"f7821a96a128719bd3bc4700abf083eca1b895b6":["a3584d3db8b472772e3329d9d95d584b68ae997e"],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["640ded7811e1b7d29236a5e2934ec3cd266a8199"]},"commit2Childs":{"1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b":["a3584d3db8b472772e3329d9d95d584b68ae997e"],"640ded7811e1b7d29236a5e2934ec3cd266a8199":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"a3584d3db8b472772e3329d9d95d584b68ae997e":["f7821a96a128719bd3bc4700abf083eca1b895b6"],"f7821a96a128719bd3bc4700abf083eca1b895b6":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}