{"path":"lucene/contrib/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizer#testApostrophesSA().mjava","commits":[{"id":"185d73416ce4b3eaac6886de46a0a95eafbb01da","date":1272892809,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizer#testApostrophesSA().mjava","pathOld":"/dev/null","sourceNew":"  public void testApostrophesSA() throws Exception {\n    // internal apostrophes: O'Reilly, you're, O'Reilly's\n    assertAnalyzesTo(a, \"O'Reilly\", new String[]{\"o'reilly\"});\n    assertAnalyzesTo(a, \"you're\", new String[]{\"you're\"});\n    assertAnalyzesTo(a, \"she's\", new String[]{\"she's\"});\n    assertAnalyzesTo(a, \"Jim's\", new String[]{\"jim's\"});\n    assertAnalyzesTo(a, \"don't\", new String[]{\"don't\"});\n    assertAnalyzesTo(a, \"O'Reilly's\", new String[]{\"o'reilly's\"});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b441220ceb933f50f32318ab45acc05d5943f3aa","date":1274352360,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizer#testApostrophesSA().mjava","pathOld":"lucene/contrib/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizer#testApostrophesSA().mjava","sourceNew":"  public void testApostrophesSA() throws Exception {\n    // internal apostrophes: O'Reilly, you're, O'Reilly's\n    assertAnalyzesTo(a, \"O'Reilly\", new String[]{\"o'reilly\"});\n    assertAnalyzesTo(a, \"you're\", new String[]{\"you're\"});\n    assertAnalyzesTo(a, \"she's\", new String[]{\"she's\"});\n    assertAnalyzesTo(a, \"Jim's\", new String[]{\"jim's\"});\n    assertAnalyzesTo(a, \"don't\", new String[]{\"don't\"});\n    assertAnalyzesTo(a, \"O'Reilly's\", new String[]{\"o'reilly's\"});\n  }\n\n","sourceOld":"  public void testApostrophesSA() throws Exception {\n    // internal apostrophes: O'Reilly, you're, O'Reilly's\n    assertAnalyzesTo(a, \"O'Reilly\", new String[]{\"o'reilly\"});\n    assertAnalyzesTo(a, \"you're\", new String[]{\"you're\"});\n    assertAnalyzesTo(a, \"she's\", new String[]{\"she's\"});\n    assertAnalyzesTo(a, \"Jim's\", new String[]{\"jim's\"});\n    assertAnalyzesTo(a, \"don't\", new String[]{\"don't\"});\n    assertAnalyzesTo(a, \"O'Reilly's\", new String[]{\"o'reilly's\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b441220ceb933f50f32318ab45acc05d5943f3aa":["185d73416ce4b3eaac6886de46a0a95eafbb01da"],"185d73416ce4b3eaac6886de46a0a95eafbb01da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b441220ceb933f50f32318ab45acc05d5943f3aa"]},"commit2Childs":{"b441220ceb933f50f32318ab45acc05d5943f3aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"185d73416ce4b3eaac6886de46a0a95eafbb01da":["b441220ceb933f50f32318ab45acc05d5943f3aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["185d73416ce4b3eaac6886de46a0a95eafbb01da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}