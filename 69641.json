{"path":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(ReaderContext).mjava","commits":[{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(ReaderContext).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final ReaderContext context) throws IOException {\n    final Bits delDocs = context.reader.getDeletedDocs();\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Bits delDocs = reader.getDeletedDocs();\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(ReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context) throws IOException {\n    final Bits delDocs = context.reader.getDeletedDocs();\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final ReaderContext context) throws IOException {\n    final Bits delDocs = context.reader.getDeletedDocs();\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"]},"commit2Childs":{"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}