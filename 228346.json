{"path":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","commits":[{"id":"e1c058cf6636d4738330f52c3b56f52c0aa8fcc9","date":1479205115,"type":1,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheLocation).mjava","sourceNew":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    if (onRelease != null) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","sourceOld":"  private void releaseLocation(BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21019aa828c8c9b0153877543a8b3f200bf2ca19","date":1479224450,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheLocation).mjava","sourceNew":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    if (onRelease != null) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","sourceOld":"  private void releaseLocation(BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7f1c4c6036266b3b18d87602c698de56702520c","date":1487092004,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","sourceNew":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    for (OnRelease onRelease : onReleases) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","sourceOld":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    if (onRelease != null) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","bugFix":["e1c058cf6636d4738330f52c3b56f52c0aa8fcc9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"022a4de90e0479b604264ca9c2e134c996454ab3","date":1487118265,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","sourceNew":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    for (OnRelease onRelease : onReleases) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","sourceOld":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    if (onRelease != null) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96","date":1487122334,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","sourceNew":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    if (onRelease != null) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","sourceOld":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    for (OnRelease onRelease : onReleases) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"897b06b1364bd1f658a8be7591e43f0851458e7f","date":1487123008,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","sourceNew":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    for (OnRelease onRelease : onReleases) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","sourceOld":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    if (onRelease != null) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46386805f467fa40cb9d5a3cab791713306548c2","date":1487170610,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","sourceNew":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n\n    // mark the block removed before we release the lock to allow it to be reused\n    location.setRemoved(true);\n\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    for (OnRelease onRelease : onReleases) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","sourceOld":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n    location.setRemoved(true);\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    for (OnRelease onRelease : onReleases) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2aeae9008caa3439c2f8b209183da208994812d1","date":1488562773,"type":5,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation,RemovalCause).mjava","pathOld":"solr/core/src/java/org/apache/solr/store/blockcache/BlockCache#releaseLocation(BlockCacheKey,BlockCacheLocation).mjava","sourceNew":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location, RemovalCause removalCause) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n\n    // mark the block removed before we release the lock to allow it to be reused\n    location.setRemoved(true);\n\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    for (OnRelease onRelease : onReleases) {\n      onRelease.release(blockCacheKey);\n    }\n    if (removalCause.wasEvicted()) {\n      metrics.blockCacheEviction.incrementAndGet();\n    }\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","sourceOld":"  private void releaseLocation(BlockCacheKey blockCacheKey, BlockCacheLocation location) {\n    if (location == null) {\n      return;\n    }\n    int bankId = location.getBankId();\n    int block = location.getBlock();\n\n    // mark the block removed before we release the lock to allow it to be reused\n    location.setRemoved(true);\n\n    locks[bankId].clear(block);\n    lockCounters[bankId].decrementAndGet();\n    for (OnRelease onRelease : onReleases) {\n      onRelease.release(blockCacheKey);\n    }\n    metrics.blockCacheEviction.incrementAndGet();\n    metrics.blockCacheSize.decrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["022a4de90e0479b604264ca9c2e134c996454ab3"],"2aeae9008caa3439c2f8b209183da208994812d1":["46386805f467fa40cb9d5a3cab791713306548c2"],"022a4de90e0479b604264ca9c2e134c996454ab3":["e1c058cf6636d4738330f52c3b56f52c0aa8fcc9","e7f1c4c6036266b3b18d87602c698de56702520c"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"e7f1c4c6036266b3b18d87602c698de56702520c":["e1c058cf6636d4738330f52c3b56f52c0aa8fcc9"],"21019aa828c8c9b0153877543a8b3f200bf2ca19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e1c058cf6636d4738330f52c3b56f52c0aa8fcc9"],"e1c058cf6636d4738330f52c3b56f52c0aa8fcc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"46386805f467fa40cb9d5a3cab791713306548c2":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2aeae9008caa3439c2f8b209183da208994812d1"]},"commit2Childs":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"2aeae9008caa3439c2f8b209183da208994812d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"022a4de90e0479b604264ca9c2e134c996454ab3":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"e7f1c4c6036266b3b18d87602c698de56702520c":["022a4de90e0479b604264ca9c2e134c996454ab3"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["46386805f467fa40cb9d5a3cab791713306548c2"],"21019aa828c8c9b0153877543a8b3f200bf2ca19":[],"e1c058cf6636d4738330f52c3b56f52c0aa8fcc9":["022a4de90e0479b604264ca9c2e134c996454ab3","e7f1c4c6036266b3b18d87602c698de56702520c","21019aa828c8c9b0153877543a8b3f200bf2ca19"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21019aa828c8c9b0153877543a8b3f200bf2ca19","e1c058cf6636d4738330f52c3b56f52c0aa8fcc9"],"46386805f467fa40cb9d5a3cab791713306548c2":["2aeae9008caa3439c2f8b209183da208994812d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21019aa828c8c9b0153877543a8b3f200bf2ca19","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}