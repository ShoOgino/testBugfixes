{"path":"solr/core/src/test/org/apache/solr/update/AnalysisErrorHandlingTest#testMultipleUpdatesPerAdd().mjava","commits":[{"id":"070e0f665721fd467c6fcea5721fce31017180b7","date":1391560323,"type":0,"author":"Benson Margulies","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AnalysisErrorHandlingTest#testMultipleUpdatesPerAdd().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultipleUpdatesPerAdd() {\n    clearIndex();\n    try {\n      h.update(\"<add><doc><field name=\\\"id\\\">1</field><field name=\\\"text\\\">Alas Poor Yorik</field></doc></add>\");\n      fail(\"Failed to even throw the exception we are stewing over.\");\n    } catch (SolrException se) {\n      assertTrue(se.getMessage().contains(\"Exception writing document id 1 to the index\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AnalysisErrorHandlingTest#testMultipleUpdatesPerAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AnalysisErrorHandlingTest#testMultipleUpdatesPerAdd().mjava","sourceNew":"  @Test\n  public void testMultipleUpdatesPerAdd() {\n    clearIndex();\n    SolrException se = expectThrows(SolrException.class,\n        () -> h.update(\"<add><doc><field name=\\\"id\\\">1</field><field name=\\\"text\\\">Alas Poor Yorik</field></doc></add>\")\n    );\n    assertTrue(se.getMessage().contains(\"Exception writing document id 1 to the index\"));\n  }\n\n","sourceOld":"  @Test\n  public void testMultipleUpdatesPerAdd() {\n    clearIndex();\n    try {\n      h.update(\"<add><doc><field name=\\\"id\\\">1</field><field name=\\\"text\\\">Alas Poor Yorik</field></doc></add>\");\n      fail(\"Failed to even throw the exception we are stewing over.\");\n    } catch (SolrException se) {\n      assertTrue(se.getMessage().contains(\"Exception writing document id 1 to the index\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AnalysisErrorHandlingTest#testMultipleUpdatesPerAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AnalysisErrorHandlingTest#testMultipleUpdatesPerAdd().mjava","sourceNew":"  @Test\n  public void testMultipleUpdatesPerAdd() {\n    clearIndex();\n    SolrException se = expectThrows(SolrException.class,\n        () -> h.update(\"<add><doc><field name=\\\"id\\\">1</field><field name=\\\"text\\\">Alas Poor Yorik</field></doc></add>\")\n    );\n    assertTrue(se.getMessage().contains(\"Exception writing document id 1 to the index\"));\n  }\n\n","sourceOld":"  @Test\n  public void testMultipleUpdatesPerAdd() {\n    clearIndex();\n    try {\n      h.update(\"<add><doc><field name=\\\"id\\\">1</field><field name=\\\"text\\\">Alas Poor Yorik</field></doc></add>\");\n      fail(\"Failed to even throw the exception we are stewing over.\");\n    } catch (SolrException se) {\n      assertTrue(se.getMessage().contains(\"Exception writing document id 1 to the index\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AnalysisErrorHandlingTest#testMultipleUpdatesPerAdd().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AnalysisErrorHandlingTest#testMultipleUpdatesPerAdd().mjava","sourceNew":"  @Test\n  public void testMultipleUpdatesPerAdd() {\n    clearIndex();\n    SolrException se = expectThrows(SolrException.class,\n        () -> h.update(\"<add><doc><field name=\\\"id\\\">1</field><field name=\\\"text\\\">Alas Poor Yorik</field></doc></add>\")\n    );\n    assertTrue(se.getMessage().contains(\"Exception writing document id 1 to the index\"));\n  }\n\n","sourceOld":"  @Test\n  public void testMultipleUpdatesPerAdd() {\n    clearIndex();\n    try {\n      h.update(\"<add><doc><field name=\\\"id\\\">1</field><field name=\\\"text\\\">Alas Poor Yorik</field></doc></add>\");\n      fail(\"Failed to even throw the exception we are stewing over.\");\n    } catch (SolrException se) {\n      assertTrue(se.getMessage().contains(\"Exception writing document id 1 to the index\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"070e0f665721fd467c6fcea5721fce31017180b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["070e0f665721fd467c6fcea5721fce31017180b7"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["070e0f665721fd467c6fcea5721fce31017180b7","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["070e0f665721fd467c6fcea5721fce31017180b7","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"070e0f665721fd467c6fcea5721fce31017180b7":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["070e0f665721fd467c6fcea5721fce31017180b7"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}