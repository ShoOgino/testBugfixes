{"path":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#numericAsBinaryDocValues(String,LegacyNumericType).mjava","commits":[{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#numericAsBinaryDocValues(String,LegacyNumericType).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#numericAsBinaryDocValues(String,NumericType).mjava","sourceNew":"  static Function<BinaryDocValues> numericAsBinaryDocValues(String field, LegacyNumericType numTyp) {\n    return (ctx) -> {\n      final NumericDocValues numeric = DocValues.getNumeric(ctx, field);\n      final BytesRefBuilder bytes = new BytesRefBuilder();\n      \n      final LongConsumer coder = coder(bytes, numTyp, field);\n      \n      return new BinaryDocValues() {\n        @Override\n        public BytesRef get(int docID) {\n          final long lVal = numeric.get(docID);\n          coder.accept(lVal);\n          return bytes.get();\n        }\n      };\n    };\n  }\n\n","sourceOld":"  static Function<BinaryDocValues> numericAsBinaryDocValues(String field, NumericType numTyp) {\n    return (ctx) -> {\n      final NumericDocValues numeric = DocValues.getNumeric(ctx, field);\n      final BytesRefBuilder bytes = new BytesRefBuilder();\n      \n      final LongConsumer coder = coder(bytes, numTyp, field);\n      \n      return new BinaryDocValues() {\n        @Override\n        public BytesRef get(int docID) {\n          final long lVal = numeric.get(docID);\n          coder.accept(lVal);\n          return bytes.get();\n        }\n      };\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50b8410419cbbe9d8e1a96c918a951976bffe680","date":1471869553,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#numericAsBinaryDocValues(String,LegacyNumericType).mjava","sourceNew":null,"sourceOld":"  static Function<BinaryDocValues> numericAsBinaryDocValues(String field, LegacyNumericType numTyp) {\n    return (ctx) -> {\n      final NumericDocValues numeric = DocValues.getNumeric(ctx, field);\n      final BytesRefBuilder bytes = new BytesRefBuilder();\n      \n      final LongConsumer coder = coder(bytes, numTyp, field);\n      \n      return new BinaryDocValues() {\n        @Override\n        public BytesRef get(int docID) {\n          final long lVal = numeric.get(docID);\n          coder.accept(lVal);\n          return bytes.get();\n        }\n      };\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c82557b0a8c9d4012f208e5de912ae7500ea351","date":1471888093,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#numericAsBinaryDocValues(String,LegacyNumericType).mjava","sourceNew":null,"sourceOld":"  static Function<BinaryDocValues> numericAsBinaryDocValues(String field, LegacyNumericType numTyp) {\n    return (ctx) -> {\n      final NumericDocValues numeric = DocValues.getNumeric(ctx, field);\n      final BytesRefBuilder bytes = new BytesRefBuilder();\n      \n      final LongConsumer coder = coder(bytes, numTyp, field);\n      \n      return new BinaryDocValues() {\n        @Override\n        public BytesRef get(int docID) {\n          final long lVal = numeric.get(docID);\n          coder.accept(lVal);\n          return bytes.get();\n        }\n      };\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","date":1472163016,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#numericAsBinaryDocValues(String,LegacyNumericType).mjava","sourceNew":null,"sourceOld":"  static Function<BinaryDocValues> numericAsBinaryDocValues(String field, LegacyNumericType numTyp) {\n    return (ctx) -> {\n      final NumericDocValues numeric = DocValues.getNumeric(ctx, field);\n      final BytesRefBuilder bytes = new BytesRefBuilder();\n      \n      final LongConsumer coder = coder(bytes, numTyp, field);\n      \n      return new BinaryDocValues() {\n        @Override\n        public BytesRef get(int docID) {\n          final long lVal = numeric.get(docID);\n          coder.accept(lVal);\n          return bytes.get();\n        }\n      };\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#numericAsBinaryDocValues(String,LegacyNumericType).mjava","sourceNew":null,"sourceOld":"  static Function<BinaryDocValues> numericAsBinaryDocValues(String field, LegacyNumericType numTyp) {\n    return (ctx) -> {\n      final NumericDocValues numeric = DocValues.getNumeric(ctx, field);\n      final BytesRefBuilder bytes = new BytesRefBuilder();\n      \n      final LongConsumer coder = coder(bytes, numTyp, field);\n      \n      return new BinaryDocValues() {\n        @Override\n        public BytesRef get(int docID) {\n          final long lVal = numeric.get(docID);\n          coder.accept(lVal);\n          return bytes.get();\n        }\n      };\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c82557b0a8c9d4012f208e5de912ae7500ea351":["770342641f7b505eaa8dccdc666158bff2419109","50b8410419cbbe9d8e1a96c918a951976bffe680"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["770342641f7b505eaa8dccdc666158bff2419109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"770342641f7b505eaa8dccdc666158bff2419109":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["770342641f7b505eaa8dccdc666158bff2419109","0c82557b0a8c9d4012f208e5de912ae7500ea351"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["770342641f7b505eaa8dccdc666158bff2419109","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"]},"commit2Childs":{"0c82557b0a8c9d4012f208e5de912ae7500ea351":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["0c82557b0a8c9d4012f208e5de912ae7500ea351"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770342641f7b505eaa8dccdc666158bff2419109"],"770342641f7b505eaa8dccdc666158bff2419109":["0c82557b0a8c9d4012f208e5de912ae7500ea351","50b8410419cbbe9d8e1a96c918a951976bffe680","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}