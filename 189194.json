{"path":"solr/src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","pathOld":"/dev/null","sourceNew":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      if (tenum != null) tenum.close();\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","sourceNew":null,"sourceOld":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      if (tenum != null) tenum.close();\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","pathOld":"src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","sourceNew":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      if (tenum != null) tenum.close();\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","sourceOld":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      if (tenum != null) tenum.close();\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","pathOld":"/dev/null","sourceNew":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      if (tenum != null) tenum.close();\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/request/NumberedTermsEnum[UnInvertedField]#skipTo(int).mjava","pathOld":"solr/src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","sourceNew":"  public BytesRef skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      BytesRef base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      TermsEnum.SeekStatus seekStatus = tenum.seek(base);\n      assert seekStatus == TermsEnum.SeekStatus.FOUND;\n    }\n    while (--delta >= 0) {\n      BytesRef br = tenum.next();\n      if (br == null) {\n        termText = null;\n        return null;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","sourceOld":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      if (tenum != null) tenum.close();\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/request/NumberedTermEnum[UnInvertedField]#skipTo(int).mjava","sourceNew":null,"sourceOld":"  public boolean skipTo(int termNumber) throws IOException {\n    int delta = termNumber - pos;\n    if (delta < 0 || delta > tindex.interval || tenum==null) {\n      int idx = termNumber >>> tindex.intervalBits;\n      String base = tindex.index[idx];\n      pos = idx << tindex.intervalBits;\n      delta = termNumber - pos;\n      if (tenum != null) tenum.close();\n      tenum = reader.terms(tindex.createTerm(base));\n    }\n    while (--delta >= 0) {\n      boolean b = tenum.next();\n      if (b==false) {\n        t = null;\n        return false;\n      }\n      ++pos;\n    }\n    return setTerm();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["1da8d55113b689b06716246649de6f62430f15c0"],"5f4e87790277826a2aea119328600dfb07761f32":["1da8d55113b689b06716246649de6f62430f15c0","28427ef110c4c5bf5b4057731b83110bd1e13724"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28427ef110c4c5bf5b4057731b83110bd1e13724"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["28427ef110c4c5bf5b4057731b83110bd1e13724","5f4e87790277826a2aea119328600dfb07761f32"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5f4e87790277826a2aea119328600dfb07761f32":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}