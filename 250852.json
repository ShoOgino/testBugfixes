{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testSpanOr().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testSpanOr().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestBasics#testSpanOr().mjava","sourceNew":"  @Test\n  public void testSpanOr() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"thirty\"));\n    SpanTermQuery term2 = new SpanTermQuery(new Term(\"field\", \"three\"));\n    SpanNearQuery near1 = new SpanNearQuery(new SpanQuery[] {term1, term2},\n                                            0, true);\n    SpanTermQuery term3 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term4 = new SpanTermQuery(new Term(\"field\", \"seven\"));\n    SpanNearQuery near2 = new SpanNearQuery(new SpanQuery[] {term3, term4},\n                                            0, true);\n\n    SpanOrQuery query = new SpanOrQuery(near1, near2);\n\n    checkHits(query, new int[]\n      {33, 47, 133, 147, 233, 247, 333, 347, 433, 447, 533, 547, 633, 647, 733,\n              747, 833, 847, 933, 947, 1033, 1047, 1133, 1147, 1233, 1247, 1333,\n              1347, 1433, 1447, 1533, 1547, 1633, 1647, 1733, 1747, 1833, 1847, 1933, 1947});\n\n    assertTrue(searcher.explain(query, 33).getValue() > 0.0f);\n    assertTrue(searcher.explain(query, 947).getValue() > 0.0f);\n  }\n\n","sourceOld":"  @Test\n  public void testSpanOr() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"thirty\"));\n    SpanTermQuery term2 = new SpanTermQuery(new Term(\"field\", \"three\"));\n    SpanNearQuery near1 = new SpanNearQuery(new SpanQuery[] {term1, term2},\n                                            0, true);\n    SpanTermQuery term3 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term4 = new SpanTermQuery(new Term(\"field\", \"seven\"));\n    SpanNearQuery near2 = new SpanNearQuery(new SpanQuery[] {term3, term4},\n                                            0, true);\n\n    SpanOrQuery query = new SpanOrQuery(near1, near2);\n\n    checkHits(query, new int[]\n      {33, 47, 133, 147, 233, 247, 333, 347, 433, 447, 533, 547, 633, 647, 733,\n              747, 833, 847, 933, 947, 1033, 1047, 1133, 1147, 1233, 1247, 1333,\n              1347, 1433, 1447, 1533, 1547, 1633, 1647, 1733, 1747, 1833, 1847, 1933, 1947});\n\n    assertTrue(searcher.explain(query, 33).getValue() > 0.0f);\n    assertTrue(searcher.explain(query, 947).getValue() > 0.0f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4f600f812447b5512daeaf8e5c9df5dbcc4a254","date":1428874774,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testSpanOr().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testSpanOr().mjava","sourceNew":"  public void testSpanOr() throws Exception {\n    SpanQuery near1 = spanNearOrderedQuery(\"field\", 0, \"thirty\", \"three\");\n    SpanQuery near2 = spanNearOrderedQuery(\"field\", 0, \"forty\", \"seven\");\n    SpanQuery query = spanOrQuery(near1, near2);\n\n    checkHits(query, new int[]\n      {33, 47, 133, 147, 233, 247, 333, 347, 433, 447, 533, 547, 633, 647, 733,\n              747, 833, 847, 933, 947, 1033, 1047, 1133, 1147, 1233, 1247, 1333,\n              1347, 1433, 1447, 1533, 1547, 1633, 1647, 1733, 1747, 1833, 1847, 1933, 1947});\n\n    assertTrue(searcher.explain(query, 33).getValue() > 0.0f);\n    assertTrue(searcher.explain(query, 947).getValue() > 0.0f);\n  }\n\n","sourceOld":"  @Test\n  public void testSpanOr() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"thirty\"));\n    SpanTermQuery term2 = new SpanTermQuery(new Term(\"field\", \"three\"));\n    SpanNearQuery near1 = new SpanNearQuery(new SpanQuery[] {term1, term2},\n                                            0, true);\n    SpanTermQuery term3 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanTermQuery term4 = new SpanTermQuery(new Term(\"field\", \"seven\"));\n    SpanNearQuery near2 = new SpanNearQuery(new SpanQuery[] {term3, term4},\n                                            0, true);\n\n    SpanOrQuery query = new SpanOrQuery(near1, near2);\n\n    checkHits(query, new int[]\n      {33, 47, 133, 147, 233, 247, 333, 347, 433, 447, 533, 547, 633, 647, 733,\n              747, 833, 847, 933, 947, 1033, 1047, 1133, 1147, 1233, 1247, 1333,\n              1347, 1433, 1447, 1533, 1547, 1633, 1647, 1733, 1747, 1833, 1847, 1933, 1947});\n\n    assertTrue(searcher.explain(query, 33).getValue() > 0.0f);\n    assertTrue(searcher.explain(query, 947).getValue() > 0.0f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf","date":1514891219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testSpanOr().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestBasics#testSpanOr().mjava","sourceNew":"  public void testSpanOr() throws Exception {\n    SpanQuery near1 = spanNearOrderedQuery(\"field\", 0, \"thirty\", \"three\");\n    SpanQuery near2 = spanNearOrderedQuery(\"field\", 0, \"forty\", \"seven\");\n    SpanQuery query = spanOrQuery(near1, near2);\n\n    checkHits(query, new int[]\n      {33, 47, 133, 147, 233, 247, 333, 347, 433, 447, 533, 547, 633, 647, 733,\n              747, 833, 847, 933, 947, 1033, 1047, 1133, 1147, 1233, 1247, 1333,\n              1347, 1433, 1447, 1533, 1547, 1633, 1647, 1733, 1747, 1833, 1847, 1933, 1947});\n\n    assertTrue(searcher.explain(query, 33).getValue().doubleValue() > 0.0f);\n    assertTrue(searcher.explain(query, 947).getValue().doubleValue() > 0.0f);\n  }\n\n","sourceOld":"  public void testSpanOr() throws Exception {\n    SpanQuery near1 = spanNearOrderedQuery(\"field\", 0, \"thirty\", \"three\");\n    SpanQuery near2 = spanNearOrderedQuery(\"field\", 0, \"forty\", \"seven\");\n    SpanQuery query = spanOrQuery(near1, near2);\n\n    checkHits(query, new int[]\n      {33, 47, 133, 147, 233, 247, 333, 347, 433, 447, 533, 547, 633, 647, 733,\n              747, 833, 847, 933, 947, 1033, 1047, 1133, 1147, 1233, 1247, 1333,\n              1347, 1433, 1447, 1533, 1547, 1633, 1647, 1733, 1747, 1833, 1847, 1933, 1947});\n\n    assertTrue(searcher.explain(query, 33).getValue() > 0.0f);\n    assertTrue(searcher.explain(query, 947).getValue() > 0.0f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["c4f600f812447b5512daeaf8e5c9df5dbcc4a254"],"c4f600f812447b5512daeaf8e5c9df5dbcc4a254":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"]},"commit2Childs":{"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c4f600f812447b5512daeaf8e5c9df5dbcc4a254":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c4f600f812447b5512daeaf8e5c9df5dbcc4a254"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}