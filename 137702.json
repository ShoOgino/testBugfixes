{"path":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9","date":1434467834,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    new JavaBinCodec(resolver).setWritableDocFields(resolver).marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    JavaBinCodec codec = new JavaBinCodec(resolver);\n    codec.marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecd75942508378ccc92c3a26f71db6cba9f25784","date":1450708761,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.removeResponseHeader();\n    new JavaBinCodec(resolver).setWritableDocFields(resolver).marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.getValues().remove(\"responseHeader\");\n    new JavaBinCodec(resolver).setWritableDocFields(resolver).marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ed124d21605b0e41f648c25f80f60ba1828e78a","date":1477056513,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    if (req.getParams().getBool(CommonParams.OMIT_HEADER, false)) response.removeResponseHeader();\n    new JavaBinCodec(resolver).setWritableDocFields(resolver).marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.removeResponseHeader();\n    new JavaBinCodec(resolver).setWritableDocFields(resolver).marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    if (req.getParams().getBool(CommonParams.OMIT_HEADER, false)) response.removeResponseHeader();\n    new JavaBinCodec(resolver).setWritableDocFields(resolver).marshal(response.getValues(), out);\n  }\n\n","sourceOld":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    Boolean omitHeader = req.getParams().getBool(CommonParams.OMIT_HEADER);\n    if (omitHeader != null && omitHeader) response.removeResponseHeader();\n    new JavaBinCodec(resolver).setWritableDocFields(resolver).marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2","date":1497850557,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    if (req.getParams().getBool(CommonParams.OMIT_HEADER, false)) response.removeResponseHeader();\n    try (JavaBinCodec jbc = new JavaBinCodec(resolver)) {\n      jbc.setWritableDocFields(resolver).marshal(response.getValues(), out);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    if (req.getParams().getBool(CommonParams.OMIT_HEADER, false)) response.removeResponseHeader();\n    new JavaBinCodec(resolver).setWritableDocFields(resolver).marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    if (req.getParams().getBool(CommonParams.OMIT_HEADER, false)) response.removeResponseHeader();\n    try (JavaBinCodec jbc = new JavaBinCodec(resolver)) {\n      jbc.setWritableDocFields(resolver).marshal(response.getValues(), out);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    if (req.getParams().getBool(CommonParams.OMIT_HEADER, false)) response.removeResponseHeader();\n    new JavaBinCodec(resolver).setWritableDocFields(resolver).marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/BinaryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    if (req.getParams().getBool(CommonParams.OMIT_HEADER, false)) response.removeResponseHeader();\n    try (JavaBinCodec jbc = new JavaBinCodec(resolver)) {\n      jbc.setWritableDocFields(resolver).marshal(response.getValues(), out);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(OutputStream out, SolrQueryRequest req, SolrQueryResponse response) throws IOException {\n    Resolver resolver = new Resolver(req, response.getReturnFields());\n    if (req.getParams().getBool(CommonParams.OMIT_HEADER, false)) response.removeResponseHeader();\n    new JavaBinCodec(resolver).setWritableDocFields(resolver).marshal(response.getValues(), out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","7530de27b87b961b51f01bd1299b7004d46e8823"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["7530de27b87b961b51f01bd1299b7004d46e8823","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["7530de27b87b961b51f01bd1299b7004d46e8823"],"28288370235ed02234a64753cdbf0c6ec096304a":["8ed124d21605b0e41f648c25f80f60ba1828e78a","97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2"],"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2":["8ed124d21605b0e41f648c25f80f60ba1828e78a"],"8ed124d21605b0e41f648c25f80f60ba1828e78a":["ecd75942508378ccc92c3a26f71db6cba9f25784"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["ecd75942508378ccc92c3a26f71db6cba9f25784","8ed124d21605b0e41f648c25f80f60ba1828e78a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ecd75942508378ccc92c3a26f71db6cba9f25784":["b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9"],"7530de27b87b961b51f01bd1299b7004d46e8823":["c26f00b574427b55127e869b935845554afde1fa"],"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["8ed124d21605b0e41f648c25f80f60ba1828e78a","97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"8ed124d21605b0e41f648c25f80f60ba1828e78a":["28288370235ed02234a64753cdbf0c6ec096304a","97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ecd75942508378ccc92c3a26f71db6cba9f25784":["8ed124d21605b0e41f648c25f80f60ba1828e78a","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"b263a3dc926f93ae0dadfc542cdcaa2f8c5a95c9":["ecd75942508378ccc92c3a26f71db6cba9f25784"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","a258fbb26824fd104ed795e5d9033d2d040049ee","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}