{"path":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","commits":[{"id":"278dfa5f2627d3afb9b86fdc8c52e8977c24bb3d","date":1399983810,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.shutdown();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    AtomicReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1)); \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortField#testSingleton().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.shutdown();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    AtomicReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1)); \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSingleton() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"value\", \"baz\", Field.Store.NO));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"bar\", Field.Store.NO));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedSetSortField(\"value\", false));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // 'bar' comes before 'baz'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSortedSetSortField#testSingleton().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.shutdown();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    AtomicReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1)); \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSingleton() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"value\", \"baz\", Field.Store.NO));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"bar\", Field.Store.NO));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortedSetSortField(\"value\", false));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(2, td.totalHits);\n    // 'bar' comes before 'baz'\n    assertEquals(\"1\", searcher.doc(td.scoreDocs[0].doc).get(\"id\"));\n    assertEquals(\"2\", searcher.doc(td.scoreDocs[1].doc).get(\"id\"));\n    \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.shutdown();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    AtomicReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1)); \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.shutdown();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    AtomicReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1)); \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    AtomicReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1)); \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.shutdown();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    AtomicReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1)); \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    LeafReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1)); \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    AtomicReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1)); \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3f7f81a15cd0183e4e6262806b2e491a130e63db","date":1438643602,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(ir);\n    LeafReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1));\n\n    // test SortField optimization\n    final boolean reverse = random().nextBoolean();\n    SortField vssf = vs.getSortField(reverse);\n    SortField sf = new SortedSetSortField(\"value\", reverse);\n    assertEquals(sf, vssf);\n\n    vssf = vssf.rewrite(searcher);\n    sf = sf.rewrite(searcher);\n    assertEquals(sf, vssf);\n      \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    LeafReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1)); \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["3b431ce77ca86508f48a977c5fc07a63828f3241"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","date":1457644139,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(ir);\n    LeafReader ar = getOnlyLeafReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1));\n\n    // test SortField optimization\n    final boolean reverse = random().nextBoolean();\n    SortField vssf = vs.getSortField(reverse);\n    SortField sf = new SortedSetSortField(\"value\", reverse);\n    assertEquals(sf, vssf);\n\n    vssf = vssf.rewrite(searcher);\n    sf = sf.rewrite(searcher);\n    assertEquals(sf, vssf);\n      \n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(ir);\n    LeafReader ar = getOnlySegmentReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1));\n\n    // test SortField optimization\n    final boolean reverse = random().nextBoolean();\n    SortField vssf = vs.getSortField(reverse);\n    SortField sf = new SortedSetSortField(\"value\", reverse);\n    assertEquals(sf, vssf);\n\n    vssf = vssf.rewrite(searcher);\n    sf = sf.rewrite(searcher);\n    assertEquals(sf, vssf);\n      \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b431ce77ca86508f48a977c5fc07a63828f3241","date":1583960267,"type":3,"author":"Michele Palmia","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(ir);\n    LeafReader ar = getOnlyLeafReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1));\n\n    // test SortField optimization\n    final boolean reverse = random().nextBoolean();\n    SortField vssf = vs.getSortField(reverse);\n    SortField sf = new SortedSetSortField(\"value\", reverse);\n    assertEquals(sf, vssf);\n\n    vssf = vssf.rewrite(searcher);\n    sf = sf.rewrite(searcher);\n    assertEquals(sf, vssf);\n\n    // test scorer\n    vs = new SortedSetFieldSource(\"value\");\n    values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    ValueSourceScorer vss = values.getRangeScorer(new MatchAllDocsQuery().createWeight(searcher, ScoreMode.TOP_SCORES, 1), ar.getContext(), \"a\", \"z\", true, true);\n\n    DocIdSetIterator iterator = vss.iterator();\n    assertEquals(\"baz\", values.strVal(iterator.nextDoc()));\n    assertEquals(\"bar\", values.strVal(iterator.nextDoc()));\n\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"baz\")));\n    doc.add(newStringField(\"id\", \"2\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"foo\")));\n    doc.add(new SortedSetDocValuesField(\"value\", new BytesRef(\"bar\")));\n    doc.add(newStringField(\"id\", \"1\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.forceMerge(1);\n    writer.close();\n\n    DirectoryReader ir = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(ir);\n    LeafReader ar = getOnlyLeafReader(ir);\n    \n    ValueSource vs = new SortedSetFieldSource(\"value\");\n    FunctionValues values = vs.getValues(Collections.emptyMap(), ar.getContext());\n    assertEquals(\"baz\", values.strVal(0));\n    assertEquals(\"bar\", values.strVal(1));\n\n    // test SortField optimization\n    final boolean reverse = random().nextBoolean();\n    SortField vssf = vs.getSortField(reverse);\n    SortField sf = new SortedSetSortField(\"value\", reverse);\n    assertEquals(sf, vssf);\n\n    vssf = vssf.rewrite(searcher);\n    sf = sf.rewrite(searcher);\n    assertEquals(sf, vssf);\n      \n    ir.close();\n    dir.close();\n  }\n\n","bugFix":["3f7f81a15cd0183e4e6262806b2e491a130e63db"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["3f7f81a15cd0183e4e6262806b2e491a130e63db"],"3f7f81a15cd0183e4e6262806b2e491a130e63db":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"278dfa5f2627d3afb9b86fdc8c52e8977c24bb3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","278dfa5f2627d3afb9b86fdc8c52e8977c24bb3d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b431ce77ca86508f48a977c5fc07a63828f3241":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93dd449115a9247533e44bab47e8429e5dccbc6d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b431ce77ca86508f48a977c5fc07a63828f3241"]},"commit2Childs":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["3b431ce77ca86508f48a977c5fc07a63828f3241"],"3f7f81a15cd0183e4e6262806b2e491a130e63db":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"278dfa5f2627d3afb9b86fdc8c52e8977c24bb3d":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["278dfa5f2627d3afb9b86fdc8c52e8977c24bb3d","93dd449115a9247533e44bab47e8429e5dccbc6d","56572ec06f1407c066d6b7399413178b33176cd8"],"3b431ce77ca86508f48a977c5fc07a63828f3241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["3f7f81a15cd0183e4e6262806b2e491a130e63db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}