{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EvaluatorBag#getFunctionsNamespace(List[Map[String,String]],DocBuilder,VariableResolverImpl).mjava","commits":[{"id":"4b84e23a1c994ea309896dd9424563e0092f3607","date":1332774278,"type":1,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EvaluatorBag#getFunctionsNamespace(List[Map[String,String]],DocBuilder,VariableResolverImpl).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EvaluatorBag#getFunctionsNamespace(List[Map[String,String]],DocBuilder).mjava","sourceNew":"  static Map<String, Object> getFunctionsNamespace(final List<Map<String, String>> fn, DocBuilder docBuilder, final VariableResolverImpl vr) {\n    final Map<String, Evaluator> evaluators = new HashMap<String, Evaluator>();\n    evaluators.put(DATE_FORMAT_EVALUATOR, getDateFormatEvaluator());\n    evaluators.put(SQL_ESCAPE_EVALUATOR, getSqlEscapingEvaluator());\n    evaluators.put(URL_ENCODE_EVALUATOR, getUrlEvaluator());\n    evaluators.put(ESCAPE_SOLR_QUERY_CHARS, getSolrQueryEscapingEvaluator());\n    SolrCore core = docBuilder == null ? null : docBuilder.dataImporter.getCore();\n    for (Map<String, String> map : fn) {\n      try {\n        evaluators.put(map.get(NAME), (Evaluator) loadClass(map.get(CLASS), core).newInstance());\n      } catch (Exception e) {\n        wrapAndThrow(SEVERE, e, \"Unable to instantiate evaluator: \" + map.get(CLASS));\n      }\n    }\n\n    return new HashMap<String, Object>() {\n      @Override\n      public String get(Object key) {\n        if (key == null)\n          return null;\n        Matcher m = FORMAT_METHOD.matcher((String) key);\n        if (!m.find())\n          return null;\n        String fname = m.group(1);\n        Evaluator evaluator = evaluators.get(fname);\n        if (evaluator == null)\n          return null;\n        ContextImpl ctx = new ContextImpl(null, vr, null, null, null, null, null);\n        String g2 = m.group(2);\n        return evaluator.evaluate(g2, ctx);\n      }\n\n    };\n  }\n\n","sourceOld":"  static Map<String, Object> getFunctionsNamespace(final List<Map<String, String>> fn, DocBuilder docBuilder) {\n    final Map<String, Evaluator> evaluators = new HashMap<String, Evaluator>();\n    evaluators.put(DATE_FORMAT_EVALUATOR, getDateFormatEvaluator());\n    evaluators.put(SQL_ESCAPE_EVALUATOR, getSqlEscapingEvaluator());\n    evaluators.put(URL_ENCODE_EVALUATOR, getUrlEvaluator());\n    evaluators.put(ESCAPE_SOLR_QUERY_CHARS, getSolrQueryEscapingEvaluator());\n    SolrCore core = docBuilder == null ? null : docBuilder.dataImporter.getCore();\n    for (Map<String, String> map : fn) {\n      try {\n        evaluators.put(map.get(NAME), (Evaluator) loadClass(map.get(CLASS), core).newInstance());\n      } catch (Exception e) {\n        wrapAndThrow(SEVERE, e, \"Unable to instantiate evaluator: \" + map.get(CLASS));\n      }\n    }\n\n    return new HashMap<String, Object>() {\n      @Override\n      public String get(Object key) {\n        if (key == null)\n          return null;\n        Matcher m = FORMAT_METHOD.matcher((String) key);\n        if (!m.find())\n          return null;\n        String fname = m.group(1);\n        Evaluator evaluator = evaluators.get(fname);\n        if (evaluator == null)\n          return null;\n        return evaluator.evaluate(m.group(2), Context.CURRENT_CONTEXT.get());\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":4,"author":"James Dyer","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EvaluatorBag#getFunctionsNamespace(List[Map[String,String]],DocBuilder,VariableResolverImpl).mjava","sourceNew":null,"sourceOld":"  static Map<String, Object> getFunctionsNamespace(final List<Map<String, String>> fn, DocBuilder docBuilder, final VariableResolverImpl vr) {\n    final Map<String, Evaluator> evaluators = new HashMap<String, Evaluator>();\n    evaluators.put(DATE_FORMAT_EVALUATOR, getDateFormatEvaluator());\n    evaluators.put(SQL_ESCAPE_EVALUATOR, getSqlEscapingEvaluator());\n    evaluators.put(URL_ENCODE_EVALUATOR, getUrlEvaluator());\n    evaluators.put(ESCAPE_SOLR_QUERY_CHARS, getSolrQueryEscapingEvaluator());\n    SolrCore core = docBuilder == null ? null : docBuilder.dataImporter.getCore();\n    for (Map<String, String> map : fn) {\n      try {\n        evaluators.put(map.get(NAME), (Evaluator) loadClass(map.get(CLASS), core).newInstance());\n      } catch (Exception e) {\n        wrapAndThrow(SEVERE, e, \"Unable to instantiate evaluator: \" + map.get(CLASS));\n      }\n    }\n\n    return new HashMap<String, Object>() {\n      @Override\n      public String get(Object key) {\n        if (key == null)\n          return null;\n        Matcher m = FORMAT_METHOD.matcher((String) key);\n        if (!m.find())\n          return null;\n        String fname = m.group(1);\n        Evaluator evaluator = evaluators.get(fname);\n        if (evaluator == null)\n          return null;\n        ContextImpl ctx = new ContextImpl(null, vr, null, null, null, null, null);\n        String g2 = m.group(2);\n        return evaluator.evaluate(g2, ctx);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EvaluatorBag#getFunctionsNamespace(List[Map[String,String]],DocBuilder,VariableResolverImpl).mjava","sourceNew":null,"sourceOld":"  static Map<String, Object> getFunctionsNamespace(final List<Map<String, String>> fn, DocBuilder docBuilder, final VariableResolverImpl vr) {\n    final Map<String, Evaluator> evaluators = new HashMap<String, Evaluator>();\n    evaluators.put(DATE_FORMAT_EVALUATOR, getDateFormatEvaluator());\n    evaluators.put(SQL_ESCAPE_EVALUATOR, getSqlEscapingEvaluator());\n    evaluators.put(URL_ENCODE_EVALUATOR, getUrlEvaluator());\n    evaluators.put(ESCAPE_SOLR_QUERY_CHARS, getSolrQueryEscapingEvaluator());\n    SolrCore core = docBuilder == null ? null : docBuilder.dataImporter.getCore();\n    for (Map<String, String> map : fn) {\n      try {\n        evaluators.put(map.get(NAME), (Evaluator) loadClass(map.get(CLASS), core).newInstance());\n      } catch (Exception e) {\n        wrapAndThrow(SEVERE, e, \"Unable to instantiate evaluator: \" + map.get(CLASS));\n      }\n    }\n\n    return new HashMap<String, Object>() {\n      @Override\n      public String get(Object key) {\n        if (key == null)\n          return null;\n        Matcher m = FORMAT_METHOD.matcher((String) key);\n        if (!m.find())\n          return null;\n        String fname = m.group(1);\n        Evaluator evaluator = evaluators.get(fname);\n        if (evaluator == null)\n          return null;\n        ContextImpl ctx = new ContextImpl(null, vr, null, null, null, null, null);\n        String g2 = m.group(2);\n        return evaluator.evaluate(g2, ctx);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b84e23a1c994ea309896dd9424563e0092f3607":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["4b84e23a1c994ea309896dd9424563e0092f3607"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["4b84e23a1c994ea309896dd9424563e0092f3607","7c7b0ae5716b6c2044195a818e9ae58205175659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c7b0ae5716b6c2044195a818e9ae58205175659"]},"commit2Childs":{"4b84e23a1c994ea309896dd9424563e0092f3607":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b84e23a1c994ea309896dd9424563e0092f3607"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}