{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoExactCircle.ApproximationSlice#ApproximationSlice(GeoPoint,GeoPoint,double,GeoPoint,double,GeoPoint,double,boolean).mjava","commits":[{"id":"9c5af811fc387444c4a3b568755b76a85e4bc4fc","date":1512143098,"type":1,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoExactCircle.ApproximationSlice#ApproximationSlice(GeoPoint,GeoPoint,double,GeoPoint,double,GeoPoint,double,boolean).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoExactCircle.ApproximationSlice#ApproximationSlice(GeoPoint,GeoPoint,double,GeoPoint,double,GeoPoint,double).mjava","sourceNew":"    public ApproximationSlice(final GeoPoint center,\n      final GeoPoint endPoint1, final double point1Bearing,\n      final GeoPoint endPoint2, final double point2Bearing,\n      final GeoPoint middlePoint, final double middlePointBearing, final boolean mustSplit) {\n      this.endPoint1 = endPoint1;\n      this.point1Bearing = point1Bearing;\n      this.endPoint2 = endPoint2;\n      this.point2Bearing = point2Bearing;\n      this.middlePoint = middlePoint;\n      this.middlePointBearing = middlePointBearing;\n      this.mustSplit = mustSplit;\n      // Construct the plane going through the three given points\n      this.plane = SidedPlane.constructNormalizedThreePointSidedPlane(center, endPoint1, endPoint2, middlePoint);\n      if (this.plane == null) {\n        throw new IllegalArgumentException(\"Either circle is too small or accuracy is too high; could not construct a plane with endPoint1=\"+endPoint1+\" bearing \"+point1Bearing+\", endPoint2=\"+endPoint2+\" bearing \"+point2Bearing+\", middle=\"+middlePoint+\" bearing \"+middlePointBearing);\n      }\n      if (plane.isWithin(center) == false || !plane.evaluateIsZero(endPoint1) || !plane.evaluateIsZero(endPoint2) || !plane.evaluateIsZero(middlePoint))\n        throw new IllegalStateException(\"SidedPlane constructor built a bad plane!!\");\n    }\n\n","sourceOld":"    public ApproximationSlice(final GeoPoint center,\n      final GeoPoint endPoint1, final double point1Bearing,\n      final GeoPoint endPoint2, final double point2Bearing,\n      final GeoPoint middlePoint, final double middlePointBearing) {\n      this.endPoint1 = endPoint1;\n      this.point1Bearing = point1Bearing;\n      this.endPoint2 = endPoint2;\n      this.point2Bearing = point2Bearing;\n      this.middlePoint = middlePoint;\n      this.middlePointBearing = middlePointBearing;\n      // Construct the plane going through the three given points\n      this.plane = SidedPlane.constructNormalizedThreePointSidedPlane(center, endPoint1, endPoint2, middlePoint);\n      if (this.plane == null) {\n        throw new IllegalArgumentException(\"Either circle is too small or accuracy is too high; could not construct a plane with endPoint1=\"+endPoint1+\" bearing \"+point1Bearing+\", endPoint2=\"+endPoint2+\" bearing \"+point2Bearing+\", middle=\"+middlePoint+\" bearing \"+middlePointBearing);\n      }\n      if (plane.isWithin(center) == false || !plane.evaluateIsZero(endPoint1) || !plane.evaluateIsZero(endPoint2) || !plane.evaluateIsZero(middlePoint))\n        throw new IllegalStateException(\"SidedPlane constructor built a bad plane!!\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a03d351abb1e487ff1b7feaacc286da105d59a04","date":1512729671,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoExactCircle.ApproximationSlice#ApproximationSlice(GeoPoint,GeoPoint,double,GeoPoint,double,GeoPoint,double,boolean).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoExactCircle.ApproximationSlice#ApproximationSlice(GeoPoint,GeoPoint,double,GeoPoint,double,GeoPoint,double,boolean).mjava","sourceNew":"    public ApproximationSlice(final GeoPoint center,\n      final GeoPoint endPoint1, final double point1Bearing,\n      final GeoPoint endPoint2, final double point2Bearing,\n      final GeoPoint middlePoint, final double middlePointBearing, final boolean mustSplit) {\n      this.endPoint1 = endPoint1;\n      this.point1Bearing = point1Bearing;\n      this.endPoint2 = endPoint2;\n      this.point2Bearing = point2Bearing;\n      this.middlePoint = middlePoint;\n      this.middlePointBearing = middlePointBearing;\n      this.mustSplit = mustSplit;\n      // Construct the plane going through the three given points\n      this.plane = SidedPlane.constructNormalizedThreePointSidedPlane(center, endPoint1, endPoint2, middlePoint);\n      if (this.plane == null) {\n        throw new IllegalArgumentException(\"Either circle is too small or accuracy is too high; could not construct a plane with endPoint1=\"+endPoint1+\" bearing \"+point1Bearing+\", endPoint2=\"+endPoint2+\" bearing \"+point2Bearing+\", middle=\"+middlePoint+\" bearing \"+middlePointBearing);\n      }\n      if (this.plane.isWithin(-center.x, -center.y, -center.z)) {\n        //Plane is bogus, we cannot build the circle\n        throw new IllegalArgumentException(\"Could not construct a valid plane for this planet model with endPoint1=\"+endPoint1+\" bearing \"+point1Bearing+\", endPoint2=\"+endPoint2+\" bearing \"+point2Bearing+\", middle=\"+middlePoint+\" bearing \"+middlePointBearing);\n      }\n    }\n\n","sourceOld":"    public ApproximationSlice(final GeoPoint center,\n      final GeoPoint endPoint1, final double point1Bearing,\n      final GeoPoint endPoint2, final double point2Bearing,\n      final GeoPoint middlePoint, final double middlePointBearing, final boolean mustSplit) {\n      this.endPoint1 = endPoint1;\n      this.point1Bearing = point1Bearing;\n      this.endPoint2 = endPoint2;\n      this.point2Bearing = point2Bearing;\n      this.middlePoint = middlePoint;\n      this.middlePointBearing = middlePointBearing;\n      this.mustSplit = mustSplit;\n      // Construct the plane going through the three given points\n      this.plane = SidedPlane.constructNormalizedThreePointSidedPlane(center, endPoint1, endPoint2, middlePoint);\n      if (this.plane == null) {\n        throw new IllegalArgumentException(\"Either circle is too small or accuracy is too high; could not construct a plane with endPoint1=\"+endPoint1+\" bearing \"+point1Bearing+\", endPoint2=\"+endPoint2+\" bearing \"+point2Bearing+\", middle=\"+middlePoint+\" bearing \"+middlePointBearing);\n      }\n      if (plane.isWithin(center) == false || !plane.evaluateIsZero(endPoint1) || !plane.evaluateIsZero(endPoint2) || !plane.evaluateIsZero(middlePoint))\n        throw new IllegalStateException(\"SidedPlane constructor built a bad plane!!\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a03d351abb1e487ff1b7feaacc286da105d59a04":["9c5af811fc387444c4a3b568755b76a85e4bc4fc"],"9c5af811fc387444c4a3b568755b76a85e4bc4fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a03d351abb1e487ff1b7feaacc286da105d59a04"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9c5af811fc387444c4a3b568755b76a85e4bc4fc"],"a03d351abb1e487ff1b7feaacc286da105d59a04":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9c5af811fc387444c4a3b568755b76a85e4bc4fc":["a03d351abb1e487ff1b7feaacc286da105d59a04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}