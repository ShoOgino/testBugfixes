{"path":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ee056ec8e953928ee49a691090634eed1fa4d6b","date":1274852580,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage, false);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33e4a95ed08968b85d84e9fba82424f1fd945fbb","date":1274878310,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage, false);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f0d8e9a3f2e45eeea14a4803eaac02a0865097","date":1279565910,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage, false);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage, false);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d94d6afa51157e490fc169e192a154ffc4cdad0b","date":1283184289,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (regexp) {\n         q = getRegexpQuery(field, term.image.substring(1, term.image.length()-1));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage, false);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage, false);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a4d59223802237d352245759cf541e315aab20a","date":1285686672,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (regexp) {\n         q = getRegexpQuery(field, term.image.substring(1, term.image.length()-1));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(\"Fractional edit distances are not allowed!\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage, false);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (regexp) {\n         q = getRegexpQuery(field, term.image.substring(1, term.image.length()-1));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage, false);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecaea79e307d83311c31273b0ea89b9fdb0c5a32","date":1287584790,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","sourceNew":null,"sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (regexp) {\n         q = getRegexpQuery(field, term.image.substring(1, term.image.length()-1));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(\"Fractional edit distances are not allowed!\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage, false);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8017ab6544f30f93b106e419e7298173bad77f69","date":1287608126,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","sourceNew":null,"sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean regexp = false;\n\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case REGEXPTERM:\n        term = jj_consume_token(REGEXPTERM);\n                             regexp=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (regexp) {\n         q = getRegexpQuery(field, term.image.substring(1, term.image.length()-1));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         } else if (fms >= 1.0f && fms != (int) fms) {\n           {if (true) throw new ParseException(\"Fractional edit distances are not allowed!\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage, false);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#Term(String).mjava","sourceNew":null,"sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[11] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage, false);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[22] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[23] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ecaea79e307d83311c31273b0ea89b9fdb0c5a32":["3a4d59223802237d352245759cf541e315aab20a"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d94d6afa51157e490fc169e192a154ffc4cdad0b":["55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33e4a95ed08968b85d84e9fba82424f1fd945fbb":["2ee056ec8e953928ee49a691090634eed1fa4d6b"],"3a4d59223802237d352245759cf541e315aab20a":["d94d6afa51157e490fc169e192a154ffc4cdad0b"],"2ee056ec8e953928ee49a691090634eed1fa4d6b":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"5f4e87790277826a2aea119328600dfb07761f32":["33e4a95ed08968b85d84e9fba82424f1fd945fbb","55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"8017ab6544f30f93b106e419e7298173bad77f69":["3a4d59223802237d352245759cf541e315aab20a","ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"55f0d8e9a3f2e45eeea14a4803eaac02a0865097":["33e4a95ed08968b85d84e9fba82424f1fd945fbb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32"]},"commit2Childs":{"ecaea79e307d83311c31273b0ea89b9fdb0c5a32":["8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["2ee056ec8e953928ee49a691090634eed1fa4d6b"],"d94d6afa51157e490fc169e192a154ffc4cdad0b":["3a4d59223802237d352245759cf541e315aab20a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"33e4a95ed08968b85d84e9fba82424f1fd945fbb":["5f4e87790277826a2aea119328600dfb07761f32","55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"3a4d59223802237d352245759cf541e315aab20a":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32","8017ab6544f30f93b106e419e7298173bad77f69"],"2ee056ec8e953928ee49a691090634eed1fa4d6b":["33e4a95ed08968b85d84e9fba82424f1fd945fbb"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"8017ab6544f30f93b106e419e7298173bad77f69":[],"55f0d8e9a3f2e45eeea14a4803eaac02a0865097":["d94d6afa51157e490fc169e192a154ffc4cdad0b","5f4e87790277826a2aea119328600dfb07761f32"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}