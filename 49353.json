{"path":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","commits":[{"id":"917e62f3497c83634a13edd833e8e21dd6cc6496","date":1490728467,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = new HttpSolrClient(\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3732e34f27916e98704736cc6924a34fffca249a","date":1490873946,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = new HttpSolrClient(\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63a1978c6710c767fa084741e3d6424840003a62","date":1495850671,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","sourceNew":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = new HttpSolrClient(\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","sourceNew":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = new HttpSolrClient(\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","sourceNew":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = new HttpSolrClient(\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac1e7fa558287a811ea07634d815ee7b1c541284","date":1500910922,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","sourceNew":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","sourceNew":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","sourceNew":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&wt=json&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","sourceNew":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    @SuppressWarnings({\"rawtypes\"})\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7612891097d4751617c396cdd7a092833799147","date":1600707827,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","sourceNew":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(cluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    ignoreException(\"The configuration name should be provided\");\n    // Checking error when no configuration name is specified in request\n    @SuppressWarnings({\"rawtypes\"})\n    Map map = postDataAndGetResponse(cluster.getSolrClient(),\n        cluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD\", emptyData, null);\n    assertNotNull(map);\n    unIgnoreException(\"The configuration name should be provided\");\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(cluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    ignoreException(\"already exists\");\n    map = postDataAndGetResponse(cluster.getSolrClient(),\n        cluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&name=myconf\", emptyData, null);\n    assertNotNull(map);\n    unIgnoreException(\"already exists`\");\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    // Checking error when no configuration name is specified in request\n    @SuppressWarnings({\"rawtypes\"})\n    Map map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD\", emptyData, null, null);\n    assertNotNull(map);\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    map = postDataAndGetResponse(solrCluster.getSolrClient(),\n        solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&name=myconf\", emptyData, null, null);\n    assertNotNull(map);\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0709b256ed89906e7b5f558ba1a675826f0a858f","date":1600796219,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#testUploadErrors().mjava","sourceNew":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(cluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    ignoreException(\"The configuration name should be provided\");\n    // Checking error when no configuration name is specified in request\n    @SuppressWarnings({\"rawtypes\"})\n    Map map = postDataAndGetResponse(cluster.getSolrClient(),\n        cluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD\", emptyData, null);\n    assertNotNull(map);\n    unIgnoreException(\"The configuration name should be provided\");\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(cluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    ignoreException(\"already exists\");\n    map = postDataAndGetResponse(cluster.getSolrClient(),\n        cluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&name=myconf\", emptyData, null);\n    assertNotNull(map);\n    unIgnoreException(\"already exists`\");\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUploadErrors() throws Exception {\n    final SolrClient solrClient = getHttpSolrClient(cluster.getJettySolrRunners().get(0).getBaseUrl().toString());\n\n    ByteBuffer emptyData = ByteBuffer.allocate(0);\n\n    ignoreException(\"The configuration name should be provided\");\n    // Checking error when no configuration name is specified in request\n    @SuppressWarnings({\"rawtypes\"})\n    Map map = postDataAndGetResponse(cluster.getSolrClient(),\n        cluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD\", emptyData, null);\n    assertNotNull(map);\n    unIgnoreException(\"The configuration name should be provided\");\n    long statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n\n    SolrZkClient zkClient = new SolrZkClient(cluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n\n    // Create dummy config files in zookeeper\n    zkClient.makePath(\"/configs/myconf\", true);\n    zkClient.create(\"/configs/myconf/firstDummyFile\",\n        \"first dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n    zkClient.create(\"/configs/myconf/anotherDummyFile\",\n        \"second dummy content\".getBytes(StandardCharsets.UTF_8), CreateMode.PERSISTENT, true);\n\n    // Checking error when configuration name specified already exists\n    ignoreException(\"already exists\");\n    map = postDataAndGetResponse(cluster.getSolrClient(),\n        cluster.getJettySolrRunners().get(0).getBaseUrl().toString()\n        + \"/admin/configs?action=UPLOAD&name=myconf\", emptyData, null);\n    assertNotNull(map);\n    unIgnoreException(\"already exists`\");\n    statusCode = (long) getObjectByPath(map, false,\n        Arrays.asList(\"responseHeader\", \"status\"));\n    assertEquals(400l, statusCode);\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/firstDummyFile\", true));\n    assertTrue(\"Expected file doesnt exist in zk. It's possibly overwritten\",\n        zkClient.exists(\"/configs/myconf/anotherDummyFile\", true));\n\n    zkClient.close();\n    solrClient.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7612891097d4751617c396cdd7a092833799147":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"63a1978c6710c767fa084741e3d6424840003a62":["917e62f3497c83634a13edd833e8e21dd6cc6496"],"936cdd5882761db3b844afd6f84ab81cbb011a75":["e9017cf144952056066919f1ebc7897ff9bd71b1","ac1e7fa558287a811ea07634d815ee7b1c541284"],"0709b256ed89906e7b5f558ba1a675826f0a858f":["c7612891097d4751617c396cdd7a092833799147"],"917e62f3497c83634a13edd833e8e21dd6cc6496":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["3732e34f27916e98704736cc6924a34fffca249a","63a1978c6710c767fa084741e3d6424840003a62"],"a52341299179de5479672f7cf518bf4b173f34b3":["d1f5728f32a4a256b36cfabd7a2636452f599bb9","ac1e7fa558287a811ea07634d815ee7b1c541284"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["a52341299179de5479672f7cf518bf4b173f34b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3732e34f27916e98704736cc6924a34fffca249a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["917e62f3497c83634a13edd833e8e21dd6cc6496","63a1978c6710c767fa084741e3d6424840003a62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0709b256ed89906e7b5f558ba1a675826f0a858f"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"]},"commit2Childs":{"c7612891097d4751617c396cdd7a092833799147":["0709b256ed89906e7b5f558ba1a675826f0a858f"],"63a1978c6710c767fa084741e3d6424840003a62":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"0709b256ed89906e7b5f558ba1a675826f0a858f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"917e62f3497c83634a13edd833e8e21dd6cc6496":["63a1978c6710c767fa084741e3d6424840003a62","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["936cdd5882761db3b844afd6f84ab81cbb011a75"],"a52341299179de5479672f7cf518bf4b173f34b3":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["c7612891097d4751617c396cdd7a092833799147"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["917e62f3497c83634a13edd833e8e21dd6cc6496","3732e34f27916e98704736cc6924a34fffca249a"],"3732e34f27916e98704736cc6924a34fffca249a":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a52341299179de5479672f7cf518bf4b173f34b3","ac1e7fa558287a811ea07634d815ee7b1c541284"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["936cdd5882761db3b844afd6f84ab81cbb011a75","a52341299179de5479672f7cf518bf4b173f34b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}