{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_multipleDictWithOverride().mjava","commits":[{"id":"c011b4031a2ac8357f86f6998552baf0c74ea214","date":1372811779,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_multipleDictWithOverride().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testHunspellDictionary_multipleDictWithOverride() throws IOException, ParseException {\n    InputStream affixStream = getClass().getResourceAsStream(\"test.aff\");\n    List<InputStream> dictStreams = new ArrayList<InputStream>();\n    dictStreams.add(getClass().getResourceAsStream(\"test.dic\"));\n    dictStreams.add(getClass().getResourceAsStream(\"testOverride.dic\"));\n\n    HunspellDictionary dictionary = new HunspellDictionary(affixStream, dictStreams, TEST_VERSION_CURRENT, false);\n    assertEquals(\"Wrong number of flags for lucen\", 3, dictionary.lookupWord(new char[]{'l', 'u', 'c', 'e', 'n'}, 0, 5).get(0).getFlags().length);\n    assertEquals(\"Wrong number of flags for bar\", 1, dictionary.lookupWord(new char[]{'b', 'a', 'r'}, 0, 3).get(0).getFlags().length);\n\n    affixStream.close();\n    for(InputStream dstream : dictStreams) {\n      dstream.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_multipleDictWithOverride().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testHunspellDictionary_multipleDictWithOverride() throws IOException, ParseException {\n    InputStream affixStream = getClass().getResourceAsStream(\"test.aff\");\n    List<InputStream> dictStreams = new ArrayList<InputStream>();\n    dictStreams.add(getClass().getResourceAsStream(\"test.dic\"));\n    dictStreams.add(getClass().getResourceAsStream(\"testOverride.dic\"));\n\n    HunspellDictionary dictionary = new HunspellDictionary(affixStream, dictStreams, TEST_VERSION_CURRENT, false);\n    assertEquals(\"Wrong number of flags for lucen\", 3, dictionary.lookupWord(new char[]{'l', 'u', 'c', 'e', 'n'}, 0, 5).get(0).getFlags().length);\n    assertEquals(\"Wrong number of flags for bar\", 1, dictionary.lookupWord(new char[]{'b', 'a', 'r'}, 0, 3).get(0).getFlags().length);\n\n    affixStream.close();\n    for(InputStream dstream : dictStreams) {\n      dstream.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","date":1393532367,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_multipleDictWithOverride().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testHunspellDictionary_multipleDictWithOverride() throws IOException, ParseException {\n    InputStream affixStream = getClass().getResourceAsStream(\"test.aff\");\n    List<InputStream> dictStreams = new ArrayList<InputStream>();\n    dictStreams.add(getClass().getResourceAsStream(\"test.dic\"));\n    dictStreams.add(getClass().getResourceAsStream(\"testOverride.dic\"));\n\n    HunspellDictionary dictionary = new HunspellDictionary(affixStream, dictStreams, TEST_VERSION_CURRENT, false);\n    assertEquals(\"Wrong number of flags for lucen\", 3, dictionary.lookupWord(new char[]{'l', 'u', 'c', 'e', 'n'}, 0, 5).get(0).getFlags().length);\n    assertEquals(\"Wrong number of flags for bar\", 1, dictionary.lookupWord(new char[]{'b', 'a', 'r'}, 0, 3).get(0).getFlags().length);\n\n    affixStream.close();\n    for(InputStream dstream : dictStreams) {\n      dstream.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_multipleDictWithOverride().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testHunspellDictionary_multipleDictWithOverride() throws IOException, ParseException {\n    InputStream affixStream = getClass().getResourceAsStream(\"test.aff\");\n    List<InputStream> dictStreams = new ArrayList<InputStream>();\n    dictStreams.add(getClass().getResourceAsStream(\"test.dic\"));\n    dictStreams.add(getClass().getResourceAsStream(\"testOverride.dic\"));\n\n    HunspellDictionary dictionary = new HunspellDictionary(affixStream, dictStreams, TEST_VERSION_CURRENT, false);\n    assertEquals(\"Wrong number of flags for lucen\", 3, dictionary.lookupWord(new char[]{'l', 'u', 'c', 'e', 'n'}, 0, 5).get(0).getFlags().length);\n    assertEquals(\"Wrong number of flags for bar\", 1, dictionary.lookupWord(new char[]{'b', 'a', 'r'}, 0, 3).get(0).getFlags().length);\n\n    affixStream.close();\n    for(InputStream dstream : dictStreams) {\n      dstream.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba791bce8103c79e38f957e9c5a53a75871bd918":["c011b4031a2ac8357f86f6998552baf0c74ea214","dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c011b4031a2ac8357f86f6998552baf0c74ea214"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["c011b4031a2ac8357f86f6998552baf0c74ea214"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c011b4031a2ac8357f86f6998552baf0c74ea214":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba791bce8103c79e38f957e9c5a53a75871bd918"]},"commit2Childs":{"ba791bce8103c79e38f957e9c5a53a75871bd918":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","c011b4031a2ac8357f86f6998552baf0c74ea214"],"c011b4031a2ac8357f86f6998552baf0c74ea214":["ba791bce8103c79e38f957e9c5a53a75871bd918","37a0f60745e53927c4c876cfe5b5a58170f0646c","dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}