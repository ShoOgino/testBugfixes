{"path":"backwards/src/java/org/apache/lucene/index/IndexWriter#updateDocument(Term,Document).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/IndexWriter#updateDocument(Term,Document).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Updates a document by first deleting the document(s)\n   * containing <code>term</code> and then adding the new\n   * document.  The delete and then add are atomic as seen\n   * by a reader on the same index (flush may happen only after\n   * the add).\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @param term the term to identify the document(s) to be\n   * deleted\n   * @param doc the document to be added\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void updateDocument(Term term, Document doc) throws CorruptIndexException, IOException {\n    ensureOpen();\n    updateDocument(term, doc, getAnalyzer());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#updateDocument(Term,Document).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexWriter#updateDocument(Term,Document).mjava","sourceNew":"  /**\n   * Updates a document by first deleting the document(s)\n   * containing <code>term</code> and then adding the new\n   * document.  The delete and then add are atomic as seen\n   * by a reader on the same index (flush may happen only after\n   * the add).\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @param term the term to identify the document(s) to be\n   * deleted\n   * @param doc the document to be added\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void updateDocument(Term term, Document doc) throws CorruptIndexException, IOException {\n    ensureOpen();\n    updateDocument(term, doc, getAnalyzer());\n  }\n\n","sourceOld":"  /**\n   * Updates a document by first deleting the document(s)\n   * containing <code>term</code> and then adding the new\n   * document.  The delete and then add are atomic as seen\n   * by a reader on the same index (flush may happen only after\n   * the add).\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @param term the term to identify the document(s) to be\n   * deleted\n   * @param doc the document to be added\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void updateDocument(Term term, Document doc) throws CorruptIndexException, IOException {\n    ensureOpen();\n    updateDocument(term, doc, getAnalyzer());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}