{"path":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","pathOld":"solr/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","sourceNew":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    \n    Map<String,Integer> units = new HashMap<String,Integer>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","sourceOld":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    \n    Map<String,Integer> units = new HashMap<String,Integer>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","pathOld":"solr/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","sourceNew":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    \n    Map<String,Integer> units = new HashMap<String,Integer>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","sourceOld":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    \n    Map<String,Integer> units = new HashMap<String,Integer>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","pathOld":"solr/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","sourceNew":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    \n    Map<String,Integer> units = new HashMap<String,Integer>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","sourceOld":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    \n    Map<String,Integer> units = new HashMap<String,Integer>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3c7501e15f71c01b69ba22749b192827fa2019b","date":1335285341,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","sourceNew":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,Integer> units = new HashMap<String,Integer>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","sourceOld":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    \n    Map<String,Integer> units = new HashMap<String,Integer>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","sourceNew":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,Integer> units = new HashMap<>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","sourceOld":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,Integer> units = new HashMap<String,Integer>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","bugFix":null,"bugIntro":["ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0158ced21948b6626f733c1c42c1e18d94449789","date":1462994341,"type":3,"author":"Bartosz Krasiński","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","sourceNew":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // around a month/year boundary.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,Integer> units = new HashMap<>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","sourceOld":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,Integer> units = new HashMap<>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","date":1463148204,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","sourceNew":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,ChronoUnit> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // around a month/year boundary.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,ChronoUnit> units = new HashMap<>(13);\n    units.put(\"YEAR\",        ChronoUnit.YEARS);\n    units.put(\"YEARS\",       ChronoUnit.YEARS);\n    units.put(\"MONTH\",       ChronoUnit.MONTHS);\n    units.put(\"MONTHS\",      ChronoUnit.MONTHS);\n    units.put(\"DAY\",         ChronoUnit.DAYS);\n    units.put(\"DAYS\",        ChronoUnit.DAYS);\n    units.put(\"DATE\",        ChronoUnit.DAYS);\n    units.put(\"HOUR\",        ChronoUnit.HOURS);\n    units.put(\"HOURS\",       ChronoUnit.HOURS);\n    units.put(\"MINUTE\",      ChronoUnit.MINUTES);\n    units.put(\"MINUTES\",     ChronoUnit.MINUTES);\n    units.put(\"SECOND\",      ChronoUnit.SECONDS);\n    units.put(\"SECONDS\",     ChronoUnit.SECONDS);\n    units.put(\"MILLI\",       ChronoUnit.MILLIS);\n    units.put(\"MILLIS\",      ChronoUnit.MILLIS);\n    units.put(\"MILLISECOND\", ChronoUnit.MILLIS);\n    units.put(\"MILLISECONDS\",ChronoUnit.MILLIS);\n\n    // NOTE: Maybe eventually support NANOS\n\n    return units;\n  }\n\n","sourceOld":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // around a month/year boundary.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,Integer> units = new HashMap<>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","bugFix":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","183ba46e9837e95333f35c590df5d02d0071c076"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","sourceNew":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,ChronoUnit> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // around a month/year boundary.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,ChronoUnit> units = new HashMap<>(13);\n    units.put(\"YEAR\",        ChronoUnit.YEARS);\n    units.put(\"YEARS\",       ChronoUnit.YEARS);\n    units.put(\"MONTH\",       ChronoUnit.MONTHS);\n    units.put(\"MONTHS\",      ChronoUnit.MONTHS);\n    units.put(\"DAY\",         ChronoUnit.DAYS);\n    units.put(\"DAYS\",        ChronoUnit.DAYS);\n    units.put(\"DATE\",        ChronoUnit.DAYS);\n    units.put(\"HOUR\",        ChronoUnit.HOURS);\n    units.put(\"HOURS\",       ChronoUnit.HOURS);\n    units.put(\"MINUTE\",      ChronoUnit.MINUTES);\n    units.put(\"MINUTES\",     ChronoUnit.MINUTES);\n    units.put(\"SECOND\",      ChronoUnit.SECONDS);\n    units.put(\"SECONDS\",     ChronoUnit.SECONDS);\n    units.put(\"MILLI\",       ChronoUnit.MILLIS);\n    units.put(\"MILLIS\",      ChronoUnit.MILLIS);\n    units.put(\"MILLISECOND\", ChronoUnit.MILLIS);\n    units.put(\"MILLISECONDS\",ChronoUnit.MILLIS);\n\n    // NOTE: Maybe eventually support NANOS\n\n    return units;\n  }\n\n","sourceOld":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // around a month/year boundary.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,Integer> units = new HashMap<>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","sourceNew":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,ChronoUnit> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // around a month/year boundary.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,ChronoUnit> units = new HashMap<>(13);\n    units.put(\"YEAR\",        ChronoUnit.YEARS);\n    units.put(\"YEARS\",       ChronoUnit.YEARS);\n    units.put(\"MONTH\",       ChronoUnit.MONTHS);\n    units.put(\"MONTHS\",      ChronoUnit.MONTHS);\n    units.put(\"DAY\",         ChronoUnit.DAYS);\n    units.put(\"DAYS\",        ChronoUnit.DAYS);\n    units.put(\"DATE\",        ChronoUnit.DAYS);\n    units.put(\"HOUR\",        ChronoUnit.HOURS);\n    units.put(\"HOURS\",       ChronoUnit.HOURS);\n    units.put(\"MINUTE\",      ChronoUnit.MINUTES);\n    units.put(\"MINUTES\",     ChronoUnit.MINUTES);\n    units.put(\"SECOND\",      ChronoUnit.SECONDS);\n    units.put(\"SECONDS\",     ChronoUnit.SECONDS);\n    units.put(\"MILLI\",       ChronoUnit.MILLIS);\n    units.put(\"MILLIS\",      ChronoUnit.MILLIS);\n    units.put(\"MILLISECOND\", ChronoUnit.MILLIS);\n    units.put(\"MILLISECONDS\",ChronoUnit.MILLIS);\n\n    // NOTE: Maybe eventually support NANOS\n\n    return units;\n  }\n\n","sourceOld":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,Integer> units = new HashMap<>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/DateMathParser#makeUnitsMap().mjava","sourceNew":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,ChronoUnit> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // around a month/year boundary.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,ChronoUnit> units = new HashMap<>(13);\n    units.put(\"YEAR\",        ChronoUnit.YEARS);\n    units.put(\"YEARS\",       ChronoUnit.YEARS);\n    units.put(\"MONTH\",       ChronoUnit.MONTHS);\n    units.put(\"MONTHS\",      ChronoUnit.MONTHS);\n    units.put(\"DAY\",         ChronoUnit.DAYS);\n    units.put(\"DAYS\",        ChronoUnit.DAYS);\n    units.put(\"DATE\",        ChronoUnit.DAYS);\n    units.put(\"HOUR\",        ChronoUnit.HOURS);\n    units.put(\"HOURS\",       ChronoUnit.HOURS);\n    units.put(\"MINUTE\",      ChronoUnit.MINUTES);\n    units.put(\"MINUTES\",     ChronoUnit.MINUTES);\n    units.put(\"SECOND\",      ChronoUnit.SECONDS);\n    units.put(\"SECONDS\",     ChronoUnit.SECONDS);\n    units.put(\"MILLI\",       ChronoUnit.MILLIS);\n    units.put(\"MILLIS\",      ChronoUnit.MILLIS);\n    units.put(\"MILLISECOND\", ChronoUnit.MILLIS);\n    units.put(\"MILLISECONDS\",ChronoUnit.MILLIS);\n\n    // NOTE: Maybe eventually support NANOS\n\n    return units;\n  }\n\n","sourceOld":"  /** @see #CALENDAR_UNITS */\n  private static Map<String,Integer> makeUnitsMap() {\n\n    // NOTE: consciously choosing not to support WEEK at this time,\n    // because of complexity in rounding down to the nearest week\n    // arround a month/year boundry.\n    // (Not to mention: it's not clear what people would *expect*)\n    // \n    // If we consider adding some time of \"week\" support, then\n    // we probably need to change \"Locale loc\" to default to something \n    // from a param via SolrRequestInfo as well.\n    \n    Map<String,Integer> units = new HashMap<>(13);\n    units.put(\"YEAR\",        Calendar.YEAR);\n    units.put(\"YEARS\",       Calendar.YEAR);\n    units.put(\"MONTH\",       Calendar.MONTH);\n    units.put(\"MONTHS\",      Calendar.MONTH);\n    units.put(\"DAY\",         Calendar.DATE);\n    units.put(\"DAYS\",        Calendar.DATE);\n    units.put(\"DATE\",        Calendar.DATE);\n    units.put(\"HOUR\",        Calendar.HOUR_OF_DAY);\n    units.put(\"HOURS\",       Calendar.HOUR_OF_DAY);\n    units.put(\"MINUTE\",      Calendar.MINUTE);\n    units.put(\"MINUTES\",     Calendar.MINUTE);\n    units.put(\"SECOND\",      Calendar.SECOND);\n    units.put(\"SECONDS\",     Calendar.SECOND);\n    units.put(\"MILLI\",       Calendar.MILLISECOND);\n    units.put(\"MILLIS\",      Calendar.MILLISECOND);\n    units.put(\"MILLISECOND\", Calendar.MILLISECOND);\n    units.put(\"MILLISECONDS\",Calendar.MILLISECOND);\n\n    return units;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["0158ced21948b6626f733c1c42c1e18d94449789"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b3c7501e15f71c01b69ba22749b192827fa2019b"],"b3c7501e15f71c01b69ba22749b192827fa2019b":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["0158ced21948b6626f733c1c42c1e18d94449789","ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","0ad30c6a479e764150a3316e57263319775f1df2"],"0158ced21948b6626f733c1c42c1e18d94449789":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29":["0ad30c6a479e764150a3316e57263319775f1df2"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","0158ced21948b6626f733c1c42c1e18d94449789"],"b3c7501e15f71c01b69ba22749b192827fa2019b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["b3c7501e15f71c01b69ba22749b192827fa2019b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"0158ced21948b6626f733c1c42c1e18d94449789":["ba0bb1c61dbf71a82da9a3ea8cda3d481f703d29","0ad30c6a479e764150a3316e57263319775f1df2"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}