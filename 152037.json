{"path":"lucene/src/java/org/apache/lucene/codecs/lucene3x/TermInfosReaderIndex#seekEnum(SegmentTermEnum,int).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/TermInfosReaderIndex#seekEnum(SegmentTermEnum,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/TermInfosReaderIndex#seekEnum(SegmentTermEnum,int).mjava","sourceNew":"  void seekEnum(SegmentTermEnum enumerator, int indexOffset) throws IOException {\n    PagedBytesDataInput input = (PagedBytesDataInput) dataInput.clone();\n    \n    input.setPosition(indexToDataOffset.get(indexOffset));\n\n    // read the term\n    int fieldId = input.readVInt();\n    Term field = fields[fieldId];\n    Term term = new Term(field.field(), input.readString());\n\n    // read the terminfo\n    TermInfo termInfo = new TermInfo();\n    termInfo.docFreq = input.readVInt();\n    if (termInfo.docFreq >= skipInterval) {\n      termInfo.skipOffset = input.readVInt();\n    } else {\n      termInfo.skipOffset = 0;\n    }\n    termInfo.freqPointer = input.readVLong();\n    termInfo.proxPointer = input.readVLong();\n\n    long pointer = input.readVLong();\n\n    // perform the seek\n    enumerator.seek(pointer, ((long) indexOffset * totalIndexInterval) - 1, term, termInfo);\n  }\n\n","sourceOld":"  void seekEnum(SegmentTermEnum enumerator, int indexOffset) throws IOException {\n    PagedBytesDataInput input = (PagedBytesDataInput) dataInput.clone();\n    \n    input.setPosition(indexToDataOffset.get(indexOffset));\n\n    // read the term\n    int fieldId = input.readVInt();\n    Term field = fields[fieldId];\n    Term term = new Term(field.field(), input.readString());\n\n    // read the terminfo\n    TermInfo termInfo = new TermInfo();\n    termInfo.docFreq = input.readVInt();\n    if (termInfo.docFreq >= skipInterval) {\n      termInfo.skipOffset = input.readVInt();\n    } else {\n      termInfo.skipOffset = 0;\n    }\n    termInfo.freqPointer = input.readVLong();\n    termInfo.proxPointer = input.readVLong();\n\n    long pointer = input.readVLong();\n\n    // perform the seek\n    enumerator.seek(pointer, ((long) indexOffset * totalIndexInterval) - 1, term, termInfo);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/TermInfosReaderIndex#seekEnum(SegmentTermEnum,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/TermInfosReaderIndex#seekEnum(SegmentTermEnum,int).mjava","sourceNew":"  void seekEnum(SegmentTermEnum enumerator, int indexOffset) throws IOException {\n    PagedBytesDataInput input = (PagedBytesDataInput) dataInput.clone();\n    \n    input.setPosition(indexToDataOffset.get(indexOffset));\n\n    // read the term\n    int fieldId = input.readVInt();\n    Term field = fields[fieldId];\n    Term term = new Term(field.field(), input.readString());\n\n    // read the terminfo\n    TermInfo termInfo = new TermInfo();\n    termInfo.docFreq = input.readVInt();\n    if (termInfo.docFreq >= skipInterval) {\n      termInfo.skipOffset = input.readVInt();\n    } else {\n      termInfo.skipOffset = 0;\n    }\n    termInfo.freqPointer = input.readVLong();\n    termInfo.proxPointer = input.readVLong();\n\n    long pointer = input.readVLong();\n\n    // perform the seek\n    enumerator.seek(pointer, ((long) indexOffset * totalIndexInterval) - 1, term, termInfo);\n  }\n\n","sourceOld":"  void seekEnum(SegmentTermEnum enumerator, int indexOffset) throws IOException {\n    PagedBytesDataInput input = (PagedBytesDataInput) dataInput.clone();\n    \n    input.setPosition(indexToDataOffset.get(indexOffset));\n\n    // read the term\n    int fieldId = input.readVInt();\n    Term field = fields[fieldId];\n    Term term = new Term(field.field(), input.readString());\n\n    // read the terminfo\n    TermInfo termInfo = new TermInfo();\n    termInfo.docFreq = input.readVInt();\n    if (termInfo.docFreq >= skipInterval) {\n      termInfo.skipOffset = input.readVInt();\n    } else {\n      termInfo.skipOffset = 0;\n    }\n    termInfo.freqPointer = input.readVLong();\n    termInfo.proxPointer = input.readVLong();\n\n    long pointer = input.readVLong();\n\n    // perform the seek\n    enumerator.seek(pointer, ((long) indexOffset * totalIndexInterval) - 1, term, termInfo);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}