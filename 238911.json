{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","commits":[{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, Version minVersion, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.minVersion = minVersion;\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, Version minVersion, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.minVersion = minVersion;\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d33e731a93d4b57e662ff094f64f94a745422d4"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["31741cf1390044e38a2ec3127cf302ba841bfd75"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ceaef6cfc68c8ab22a684192e469a8280f9e6e70","0ad30c6a479e764150a3316e57263319775f1df2","3d33e731a93d4b57e662ff094f64f94a745422d4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":[],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","31741cf1390044e38a2ec3127cf302ba841bfd75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"31741cf1390044e38a2ec3127cf302ba841bfd75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}