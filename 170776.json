{"path":"lucene/src/java/org/apache/lucene/index/SegmentReader#getTermVectorsReader().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getTermVectorsReader().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getTermVectorsReader().mjava","sourceNew":"  /**\n   * Create a clone from the initial TermVectorsReader and store it in the ThreadLocal.\n   * @return TermVectorsReader\n   */\n  TermVectorsReader getTermVectorsReader() {\n    TermVectorsReader tvReader = termVectorsLocal.get();\n    if (tvReader == null) {\n      TermVectorsReader orig = core.getTermVectorsReaderOrig();\n      if (orig == null) {\n        return null;\n      } else {\n        try {\n          tvReader = (TermVectorsReader) orig.clone();\n        } catch (CloneNotSupportedException cnse) {\n          return null;\n        }\n      }\n      termVectorsLocal.set(tvReader);\n    }\n    return tvReader;\n  }\n\n","sourceOld":"  /**\n   * Create a clone from the initial TermVectorsReader and store it in the ThreadLocal.\n   * @return TermVectorsReader\n   */\n  TermVectorsReader getTermVectorsReader() {\n    TermVectorsReader tvReader = termVectorsLocal.get();\n    if (tvReader == null) {\n      TermVectorsReader orig = core.getTermVectorsReaderOrig();\n      if (orig == null) {\n        return null;\n      } else {\n        try {\n          tvReader = (TermVectorsReader) orig.clone();\n        } catch (CloneNotSupportedException cnse) {\n          return null;\n        }\n      }\n      termVectorsLocal.set(tvReader);\n    }\n    return tvReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getTermVectorsReader().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getTermVectorsReader().mjava","sourceNew":"  /**\n   * Create a clone from the initial TermVectorsReader and store it in the ThreadLocal.\n   * @return TermVectorsReader\n   * @lucene.internal\n   */\n  public TermVectorsReader getTermVectorsReader() {\n    TermVectorsReader tvReader = termVectorsLocal.get();\n    if (tvReader == null) {\n      TermVectorsReader orig = core.getTermVectorsReaderOrig();\n      if (orig == null) {\n        return null;\n      } else {\n        tvReader = orig.clone();\n      }\n      termVectorsLocal.set(tvReader);\n    }\n    return tvReader;\n  }\n\n","sourceOld":"  /**\n   * Create a clone from the initial TermVectorsReader and store it in the ThreadLocal.\n   * @return TermVectorsReader\n   */\n  TermVectorsReader getTermVectorsReader() {\n    TermVectorsReader tvReader = termVectorsLocal.get();\n    if (tvReader == null) {\n      TermVectorsReader orig = core.getTermVectorsReaderOrig();\n      if (orig == null) {\n        return null;\n      } else {\n        try {\n          tvReader = (TermVectorsReader) orig.clone();\n        } catch (CloneNotSupportedException cnse) {\n          return null;\n        }\n      }\n      termVectorsLocal.set(tvReader);\n    }\n    return tvReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e20df67a853508f7bfb3d17e165ec68fe6a2843","date":1324458411,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getTermVectorsReader().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getTermVectorsReader().mjava","sourceNew":"  /**\n   * Create a clone from the initial TermVectorsReader and store it in the ThreadLocal.\n   * @return TermVectorsReader\n   * @lucene.internal\n   */\n  public TermVectorsReader getTermVectorsReader() {\n    return termVectorsLocal.get();\n  }\n\n","sourceOld":"  /**\n   * Create a clone from the initial TermVectorsReader and store it in the ThreadLocal.\n   * @return TermVectorsReader\n   * @lucene.internal\n   */\n  public TermVectorsReader getTermVectorsReader() {\n    TermVectorsReader tvReader = termVectorsLocal.get();\n    if (tvReader == null) {\n      TermVectorsReader orig = core.getTermVectorsReaderOrig();\n      if (orig == null) {\n        return null;\n      } else {\n        tvReader = orig.clone();\n      }\n      termVectorsLocal.set(tvReader);\n    }\n    return tvReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1514b41e236336b1aae6b4ab4493995ef80a321e","date":1324465707,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getTermVectorsReader().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getTermVectorsReader().mjava","sourceNew":"  /** @lucene.internal */\n  public TermVectorsReader getTermVectorsReader() {\n    ensureOpen();\n    return core.termVectorsLocal.get();\n  }\n\n","sourceOld":"  /**\n   * Create a clone from the initial TermVectorsReader and store it in the ThreadLocal.\n   * @return TermVectorsReader\n   * @lucene.internal\n   */\n  public TermVectorsReader getTermVectorsReader() {\n    return termVectorsLocal.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getTermVectorsReader().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getTermVectorsReader().mjava","sourceNew":"  /** @lucene.internal */\n  public TermVectorsReader getTermVectorsReader() {\n    ensureOpen();\n    return core.termVectorsLocal.get();\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public TermVectorsReader getTermVectorsReader() {\n    ensureOpen();\n    return core.termVectorsLocal.get();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1514b41e236336b1aae6b4ab4493995ef80a321e":["2e20df67a853508f7bfb3d17e165ec68fe6a2843"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1514b41e236336b1aae6b4ab4493995ef80a321e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2e20df67a853508f7bfb3d17e165ec68fe6a2843":["3cc749c053615f5871f3b95715fe292f34e70a53"],"3cc749c053615f5871f3b95715fe292f34e70a53":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1514b41e236336b1aae6b4ab4493995ef80a321e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"2e20df67a853508f7bfb3d17e165ec68fe6a2843":["1514b41e236336b1aae6b4ab4493995ef80a321e"],"3cc749c053615f5871f3b95715fe292f34e70a53":["2e20df67a853508f7bfb3d17e165ec68fe6a2843"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3cc749c053615f5871f3b95715fe292f34e70a53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}