{"path":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testDeterminizeTooManyStates().mjava","commits":[{"id":"8b316f82baae88f5e279893a9cb7eee51fd8902f","date":1415131390,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testDeterminizeTooManyStates().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Compiles a regular expression that is prohibitively expensive to\n   * determinize and expexts to catch an exception for it.\n   */\n  public void testDeterminizeTooManyStates() {\n    // LUCENE-6046\n    String source = \"[ac]*a[ac]{50,200}\";\n    try {\n      new RegExp(source).toAutomaton();\n      fail();\n    } catch (TooComplexToDeterminizeException e) {\n      assert(e.getMessage().contains(source));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testDeterminizeTooManyStates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp#testDeterminizeTooManyStates().mjava","sourceNew":"  /**\n   * Compiles a regular expression that is prohibitively expensive to\n   * determinize and expexts to catch an exception for it.\n   */\n  public void testDeterminizeTooManyStates() {\n    // LUCENE-6046\n    String source = \"[ac]*a[ac]{50,200}\";\n    TooComplexToDeterminizeException expected = expectThrows(TooComplexToDeterminizeException.class, () -> {\n      new RegExp(source).toAutomaton();\n    });\n    assertTrue(expected.getMessage().contains(source));\n  }\n\n","sourceOld":"  /**\n   * Compiles a regular expression that is prohibitively expensive to\n   * determinize and expexts to catch an exception for it.\n   */\n  public void testDeterminizeTooManyStates() {\n    // LUCENE-6046\n    String source = \"[ac]*a[ac]{50,200}\";\n    try {\n      new RegExp(source).toAutomaton();\n      fail();\n    } catch (TooComplexToDeterminizeException e) {\n      assert(e.getMessage().contains(source));\n    }\n  }\n\n","bugFix":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}