{"path":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","pathOld":"/dev/null","sourceNew":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72584c1b1d38813cce9071e38f9e8481bf4add9a","date":1309788398,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","sourceNew":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        doc.add(new Field(\"del\", Integer.toString(docNum), Store.YES, Index.NO));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","sourceOld":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","pathOld":"/dev/null","sourceNew":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        doc.add(new Field(\"del\", Integer.toString(docNum), Store.YES, Index.NO));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","pathOld":"/dev/null","sourceNew":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        doc.add(new Field(\"del\", Integer.toString(docNum), Store.YES, Index.NO));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","sourceNew":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        FieldType ft = new FieldType();\n        ft.setStored(true);\n        doc.add(new Field(\"del\", ft, Integer.toString(docNum)));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","sourceOld":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        doc.add(new Field(\"del\", Integer.toString(docNum), Store.YES, Index.NO));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","sourceNew":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        FieldType ft = new FieldType();\n        ft.setStored(true);\n        doc.add(new Field(\"del\", Integer.toString(docNum), ft));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","sourceOld":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        FieldType ft = new FieldType();\n        ft.setStored(true);\n        doc.add(new Field(\"del\", ft, Integer.toString(docNum)));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.DocumentFactory#getDoc(int).mjava","sourceNew":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        FieldType ft = new FieldType();\n        ft.setStored(true);\n        doc.add(new Field(\"del\", Integer.toString(docNum), ft));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","sourceOld":"    public Document getDoc(int docNum) {\n      Document doc = new Document();\n      if (markedDeleted(docNum)) {\n        doc.add(deletionMark);\n        // Add a special field for docs that are marked for deletion. Later we\n        // assert that those docs are not returned by all-scored-doc-IDs.\n        FieldType ft = new FieldType();\n        ft.setStored(true);\n        doc.add(new Field(\"del\", Integer.toString(docNum), ft));\n      }\n\n      if (haveAlpha(docNum)) {\n        doc.add(alphaContent);\n      }\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"72584c1b1d38813cce9071e38f9e8481bf4add9a":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["72584c1b1d38813cce9071e38f9e8481bf4add9a"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","72584c1b1d38813cce9071e38f9e8481bf4add9a"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","72584c1b1d38813cce9071e38f9e8481bf4add9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"72584c1b1d38813cce9071e38f9e8481bf4add9a":["1509f151d7692d84fae414b2b799ac06ba60fcb4","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["72584c1b1d38813cce9071e38f9e8481bf4add9a"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}