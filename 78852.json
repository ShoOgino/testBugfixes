{"path":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,boolean,LockFactory,boolean).mjava","commits":[{"id":"284c1d3c8b19931bf6f312fae7470487f5d9e580","date":1163805527,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,boolean,LockFactory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the directory instance for the named location, using the\n   * provided LockFactory implementation.\n   *\n   * <p>Directories are cached, so that, for a given canonical path, the same\n   * FSDirectory instance will always be returned.  This permits\n   * synchronization on directories.\n   *\n   * @param path the path to the directory.\n   * @param create if true, create, or erase any existing contents.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, boolean create,\n                                         LockFactory lockFactory, boolean doRemoveOldFiles)\n      throws IOException {\n    return getDirectory(new File(path), create, lockFactory, doRemoveOldFiles);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66b12ba4967665216eeb706b58d424c51fb3641a","date":1169160423,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,boolean,LockFactory,boolean).mjava","sourceNew":null,"sourceOld":"  /** Returns the directory instance for the named location, using the\n   * provided LockFactory implementation.\n   *\n   * <p>Directories are cached, so that, for a given canonical path, the same\n   * FSDirectory instance will always be returned.  This permits\n   * synchronization on directories.\n   *\n   * @param path the path to the directory.\n   * @param create if true, create, or erase any existing contents.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, boolean create,\n                                         LockFactory lockFactory, boolean doRemoveOldFiles)\n      throws IOException {\n    return getDirectory(new File(path), create, lockFactory, doRemoveOldFiles);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66b12ba4967665216eeb706b58d424c51fb3641a":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["66b12ba4967665216eeb706b58d424c51fb3641a"]},"commit2Childs":{"66b12ba4967665216eeb706b58d424c51fb3641a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["66b12ba4967665216eeb706b58d424c51fb3641a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}