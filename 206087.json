{"path":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","commits":[{"id":"6bdd460d2fe72f80e52acb2774d58a4ae2e67b9b","date":1392108367,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","pathOld":"/dev/null","sourceNew":"    private ClusterState updateStateNew(ClusterState clusterState, ZkNodeProps message) {\n      String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n      String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n      if(collection==null || sliceName == null){\n        log.error(\"Invalid collection and slice {}\", message);\n        return clusterState;\n      }\n      Slice slice = clusterState.getSlice(collection, sliceName);\n      if(slice == null){\n        log.error(\"No such slice exists {}\", message);\n        return clusterState;\n      }\n\n      return updateState(clusterState, message);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afd709fe548f0ddbaa0a678015e7c3d41ff1c87a","date":1392108948,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","sourceNew":null,"sourceOld":"    private ClusterState updateStateNew(ClusterState clusterState, ZkNodeProps message) {\n      String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n      String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n      if(collection==null || sliceName == null){\n        log.error(\"Invalid collection and slice {}\", message);\n        return clusterState;\n      }\n      Slice slice = clusterState.getSlice(collection, sliceName);\n      if(slice == null){\n        log.error(\"No such slice exists {}\", message);\n        return clusterState;\n      }\n\n      return updateState(clusterState, message);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8497bb4f9de61b5520423bd9af88ea11a6e109e7","date":1393245090,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","pathOld":"/dev/null","sourceNew":"    private ClusterState updateStateNew(ClusterState clusterState, ZkNodeProps message) {\n      String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n      String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n      if(collection==null || sliceName == null){\n        log.error(\"Invalid collection and slice {}\", message);\n        return clusterState;\n      }\n      Slice slice = clusterState.getSlice(collection, sliceName);\n      if(slice == null){\n        log.error(\"No such slice exists {}\", message);\n        return clusterState;\n      }\n\n      return updateState(clusterState, message);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","date":1393532551,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","pathOld":"/dev/null","sourceNew":"    private ClusterState updateStateNew(ClusterState clusterState, ZkNodeProps message) {\n      String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n      String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n      if(collection==null || sliceName == null){\n        log.error(\"Invalid collection and slice {}\", message);\n        return clusterState;\n      }\n      Slice slice = clusterState.getSlice(collection, sliceName);\n      if(slice == null){\n        log.error(\"No such slice exists {}\", message);\n        return clusterState;\n      }\n\n      return updateState(clusterState, message);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29f5eaf296600e1665151e7929d42a3cbe22e481","date":1393983215,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","sourceNew":"    private ClusterState updateStateNew(ClusterState clusterState, ZkNodeProps message) {\n      String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n      checkCollection(message, collection);\n      String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n      if(collection==null || sliceName == null){\n        log.error(\"Invalid collection and slice {}\", message);\n        return clusterState;\n      }\n      Slice slice = clusterState.getSlice(collection, sliceName);\n      if(slice == null){\n        log.error(\"No such slice exists {}\", message);\n        return clusterState;\n      }\n\n      return updateState(clusterState, message);\n    }\n\n","sourceOld":"    private ClusterState updateStateNew(ClusterState clusterState, ZkNodeProps message) {\n      String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n      String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n      if(collection==null || sliceName == null){\n        log.error(\"Invalid collection and slice {}\", message);\n        return clusterState;\n      }\n      Slice slice = clusterState.getSlice(collection, sliceName);\n      if(slice == null){\n        log.error(\"No such slice exists {}\", message);\n        return clusterState;\n      }\n\n      return updateState(clusterState, message);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6df412542f3e2161f4bc2b13357b4a973195bfb7","date":1394040511,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","sourceNew":"    private ClusterState updateStateNew(ClusterState clusterState, ZkNodeProps message) {\n      String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n      if (!checkCollectionKeyExistence(message)) return clusterState;\n      String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n      if(collection==null || sliceName == null){\n        log.error(\"Invalid collection and slice {}\", message);\n        return clusterState;\n      }\n      Slice slice = clusterState.getSlice(collection, sliceName);\n      if(slice == null){\n        log.error(\"No such slice exists {}\", message);\n        return clusterState;\n      }\n\n      return updateState(clusterState, message);\n    }\n\n","sourceOld":"    private ClusterState updateStateNew(ClusterState clusterState, ZkNodeProps message) {\n      String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n      checkCollection(message, collection);\n      String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n      if(collection==null || sliceName == null){\n        log.error(\"Invalid collection and slice {}\", message);\n        return clusterState;\n      }\n      Slice slice = clusterState.getSlice(collection, sliceName);\n      if(slice == null){\n        log.error(\"No such slice exists {}\", message);\n        return clusterState;\n      }\n\n      return updateState(clusterState, message);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ea64d994d340044e0d57aeb6a5871539d10ca5","date":1394225445,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","sourceNew":"    private ClusterState updateStateNew(ClusterState clusterState, ZkNodeProps message) {\n      String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n      if (!checkCollectionKeyExistence(message)) return clusterState;\n      String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n      if(collection==null || sliceName == null){\n        log.error(\"Invalid collection and slice {}\", message);\n        return clusterState;\n      }\n      Slice slice = clusterState.getSlice(collection, sliceName);\n      if(slice == null){\n        log.error(\"No such slice exists {}\", message);\n        return clusterState;\n      }\n\n      return updateState(clusterState, message);\n    }\n\n","sourceOld":"    private ClusterState updateStateNew(ClusterState clusterState, ZkNodeProps message) {\n      String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n      String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n      if(collection==null || sliceName == null){\n        log.error(\"Invalid collection and slice {}\", message);\n        return clusterState;\n      }\n      Slice slice = clusterState.getSlice(collection, sliceName);\n      if(slice == null){\n        log.error(\"No such slice exists {}\", message);\n        return clusterState;\n      }\n\n      return updateState(clusterState, message);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24a5da2a0d397ff29f3de8f6cf451d3412c2509a","date":1417276391,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#updateStateNew(ClusterState,ZkNodeProps).mjava","sourceNew":null,"sourceOld":"    private ClusterState updateStateNew(ClusterState clusterState, ZkNodeProps message) {\n      String collection = message.getStr(ZkStateReader.COLLECTION_PROP);\n      if (!checkCollectionKeyExistence(message)) return clusterState;\n      String sliceName = message.getStr(ZkStateReader.SHARD_ID_PROP);\n\n      if(collection==null || sliceName == null){\n        log.error(\"Invalid collection and slice {}\", message);\n        return clusterState;\n      }\n      Slice slice = clusterState.getSlice(collection, sliceName);\n      if(slice == null){\n        log.error(\"No such slice exists {}\", message);\n        return clusterState;\n      }\n\n      return updateState(clusterState, message);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29f5eaf296600e1665151e7929d42a3cbe22e481":["8497bb4f9de61b5520423bd9af88ea11a6e109e7"],"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["6df412542f3e2161f4bc2b13357b4a973195bfb7"],"96ea64d994d340044e0d57aeb6a5871539d10ca5":["8497bb4f9de61b5520423bd9af88ea11a6e109e7","6df412542f3e2161f4bc2b13357b4a973195bfb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6df412542f3e2161f4bc2b13357b4a973195bfb7":["29f5eaf296600e1665151e7929d42a3cbe22e481"],"afd709fe548f0ddbaa0a678015e7c3d41ff1c87a":["6bdd460d2fe72f80e52acb2774d58a4ae2e67b9b"],"6bdd460d2fe72f80e52acb2774d58a4ae2e67b9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8497bb4f9de61b5520423bd9af88ea11a6e109e7":["afd709fe548f0ddbaa0a678015e7c3d41ff1c87a"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":["afd709fe548f0ddbaa0a678015e7c3d41ff1c87a","8497bb4f9de61b5520423bd9af88ea11a6e109e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a"]},"commit2Childs":{"29f5eaf296600e1665151e7929d42a3cbe22e481":["6df412542f3e2161f4bc2b13357b4a973195bfb7"],"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"96ea64d994d340044e0d57aeb6a5871539d10ca5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6bdd460d2fe72f80e52acb2774d58a4ae2e67b9b"],"6df412542f3e2161f4bc2b13357b4a973195bfb7":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a","96ea64d994d340044e0d57aeb6a5871539d10ca5"],"afd709fe548f0ddbaa0a678015e7c3d41ff1c87a":["8497bb4f9de61b5520423bd9af88ea11a6e109e7","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8"],"6bdd460d2fe72f80e52acb2774d58a4ae2e67b9b":["afd709fe548f0ddbaa0a678015e7c3d41ff1c87a"],"8497bb4f9de61b5520423bd9af88ea11a6e109e7":["29f5eaf296600e1665151e7929d42a3cbe22e481","96ea64d994d340044e0d57aeb6a5871539d10ca5","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96ea64d994d340044e0d57aeb6a5871539d10ca5","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}