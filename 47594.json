{"path":"lucene/core/src/test/org/apache/lucene/search/TestLatLonPointQueries#testDistanceQueryWithInvertedIntersection().mjava","commits":[{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLatLonPointQueries#testDistanceQueryWithInvertedIntersection().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestLatLonPointQueries#testDistanceQueryWithInvertedIntersection().mjava","sourceNew":"  public void testDistanceQueryWithInvertedIntersection() throws IOException {\n    final int numMatchingDocs = atLeast(10 * BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE);\n\n    try (Directory dir = newDirectory()) {\n\n      try (IndexWriter w = new IndexWriter(dir, newIndexWriterConfig())) {\n        for (int i = 0; i < numMatchingDocs; ++i) {\n          Document doc = new Document();\n          addPointToDoc(\"field\", doc, 18.313694, -65.227444);\n          w.addDocument(doc);\n        }\n\n        // Add a handful of docs that don't match\n        for (int i = 0; i < 11; ++i) {\n          Document doc = new Document();\n          addPointToDoc(\"field\", doc, 10, -65.227444);\n          w.addDocument(doc);\n        }\n        w.forceMerge(1);\n      }\n\n      try (IndexReader r = DirectoryReader.open(dir)) {\n        IndexSearcher searcher = newSearcher(r);\n        assertEquals(numMatchingDocs, searcher.count(newDistanceQuery(\"field\", 18, -65, 50_000)));\n      }\n    }\n  }\n\n","sourceOld":"  public void testDistanceQueryWithInvertedIntersection() throws IOException {\n    final int numMatchingDocs = atLeast(10 * BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE);\n\n    try (Directory dir = newDirectory()) {\n\n      try (IndexWriter w = new IndexWriter(dir, newIndexWriterConfig())) {\n        for (int i = 0; i < numMatchingDocs; ++i) {\n          Document doc = new Document();\n          addPointToDoc(\"field\", doc, 18.313694, -65.227444);\n          w.addDocument(doc);\n        }\n\n        // Add a handful of docs that don't match\n        for (int i = 0; i < 11; ++i) {\n          Document doc = new Document();\n          addPointToDoc(\"field\", doc, 10, -65.227444);\n          w.addDocument(doc);\n        }\n        w.forceMerge(1);\n      }\n\n      try (IndexReader r = DirectoryReader.open(dir)) {\n        IndexSearcher searcher = newSearcher(r);\n        assertEquals(numMatchingDocs, searcher.count(newDistanceQuery(\"field\", 18, -65, 50_000)));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLatLonPointQueries#testDistanceQueryWithInvertedIntersection().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLatLonPointQueries#testDistanceQueryWithInvertedIntersection().mjava","sourceNew":"  public void testDistanceQueryWithInvertedIntersection() throws IOException {\n    final int numMatchingDocs = atLeast(10 * BKDConfig.DEFAULT_MAX_POINTS_IN_LEAF_NODE);\n\n    try (Directory dir = newDirectory()) {\n\n      try (IndexWriter w = new IndexWriter(dir, newIndexWriterConfig())) {\n        for (int i = 0; i < numMatchingDocs; ++i) {\n          Document doc = new Document();\n          addPointToDoc(\"field\", doc, 18.313694, -65.227444);\n          w.addDocument(doc);\n        }\n\n        // Add a handful of docs that don't match\n        for (int i = 0; i < 11; ++i) {\n          Document doc = new Document();\n          addPointToDoc(\"field\", doc, 10, -65.227444);\n          w.addDocument(doc);\n        }\n        w.forceMerge(1);\n      }\n\n      try (IndexReader r = DirectoryReader.open(dir)) {\n        IndexSearcher searcher = newSearcher(r);\n        assertEquals(numMatchingDocs, searcher.count(newDistanceQuery(\"field\", 18, -65, 50_000)));\n      }\n    }\n  }\n\n","sourceOld":"  public void testDistanceQueryWithInvertedIntersection() throws IOException {\n    final int numMatchingDocs = atLeast(10 * BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE);\n\n    try (Directory dir = newDirectory()) {\n\n      try (IndexWriter w = new IndexWriter(dir, newIndexWriterConfig())) {\n        for (int i = 0; i < numMatchingDocs; ++i) {\n          Document doc = new Document();\n          addPointToDoc(\"field\", doc, 18.313694, -65.227444);\n          w.addDocument(doc);\n        }\n\n        // Add a handful of docs that don't match\n        for (int i = 0; i < 11; ++i) {\n          Document doc = new Document();\n          addPointToDoc(\"field\", doc, 10, -65.227444);\n          w.addDocument(doc);\n        }\n        w.forceMerge(1);\n      }\n\n      try (IndexReader r = DirectoryReader.open(dir)) {\n        IndexSearcher searcher = newSearcher(r);\n        assertEquals(numMatchingDocs, searcher.count(newDistanceQuery(\"field\", 18, -65, 50_000)));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"88b0212386fe531136816706dc37dc49b9dbf7dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"88b0212386fe531136816706dc37dc49b9dbf7dc":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}