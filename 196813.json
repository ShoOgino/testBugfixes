{"path":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","commits":[{"id":"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","date":1286986267,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#basic().mjava","sourceNew":"  @Test\n  @Ignore\n  public void testBasic() {\n    String script = \"function f1(row,context){\"\n            + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n    Context context = getContext(\"f1\", script);\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"name\", \"Scott\");\n    EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n    sep.init(context);\n    sep.applyTransformer(map);\n    assertEquals(map.get(\"name\"), \"Hello Scott\");\n  }\n\n","sourceOld":"  @Test\n  @Ignore\n  public void basic() {\n    String script = \"function f1(row,context){\"\n            + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n    Context context = getContext(\"f1\", script);\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"name\", \"Scott\");\n    EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n    sep.init(context);\n    sep.applyTransformer(map);\n    Assert.assertEquals(map.get(\"name\"), \"Hello Scott\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff66da7438bc59c3e60b554e872e2dea658ae8b9","date":1287230935,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    String script = \"function f1(row,context){\"\n            + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n    Context context = getContext(\"f1\", script);\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"name\", \"Scott\");\n    EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n    sep.init(context);\n    sep.applyTransformer(map);\n    assertEquals(map.get(\"name\"), \"Hello Scott\");\n  }\n\n","sourceOld":"  @Test\n  @Ignore\n  public void testBasic() {\n    String script = \"function f1(row,context){\"\n            + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n    Context context = getContext(\"f1\", script);\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"name\", \"Scott\");\n    EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n    sep.init(context);\n    sep.applyTransformer(map);\n    assertEquals(map.get(\"name\"), \"Hello Scott\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46b2e34f0b8dafcbde2a78e1502422f75082e96c","date":1287233182,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  @Ignore\n  public void testBasic() {\n    String script = \"function f1(row,context){\"\n            + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n    Context context = getContext(\"f1\", script);\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"name\", \"Scott\");\n    EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n    sep.init(context);\n    sep.applyTransformer(map);\n    assertEquals(map.get(\"name\"), \"Hello Scott\");\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    String script = \"function f1(row,context){\"\n            + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n    Context context = getContext(\"f1\", script);\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"name\", \"Scott\");\n    EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n    sep.init(context);\n    sep.applyTransformer(map);\n    assertEquals(map.get(\"name\"), \"Hello Scott\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5964dd1e558949587f9d060ccdff7e59bae1b01a","date":1287253628,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  @Ignore\n  public void testBasic() {\n    String script = \"function f1(row,context){\"\n            + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n    Context context = getContext(\"f1\", script);\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"name\", \"Scott\");\n    EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n    sep.init(context);\n    sep.applyTransformer(map);\n    assertEquals(map.get(\"name\"), \"Hello Scott\");\n  }\n\n","bugFix":null,"bugIntro":["d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e","d7cb8d0a1ba6a886ec4f07b3205bd0618d98982e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestScriptTransformer#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() {\n    try {\n      String script = \"function f1(row,context){\"\n              + \"row.put('name','Hello ' + row.get('name'));\" + \"return row;\\n\" + \"}\";\n      Context context = getContext(\"f1\", script);\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"name\", \"Scott\");\n      EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null);\n      sep.init(context);\n      sep.applyTransformer(map);\n      assertEquals(map.get(\"name\"), \"Hello Scott\");\n    } catch (DataImportHandlerException e) {\n      assumeFalse(\"JRE does not contain a JavaScript engine (OpenJDK)\", \"<script> can be used only in java 6 or above\".equals(e.getMessage()));\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"5964dd1e558949587f9d060ccdff7e59bae1b01a":["46b2e34f0b8dafcbde2a78e1502422f75082e96c"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["5964dd1e558949587f9d060ccdff7e59bae1b01a","5964dd1e558949587f9d060ccdff7e59bae1b01a"],"46b2e34f0b8dafcbde2a78e1502422f75082e96c":["ff66da7438bc59c3e60b554e872e2dea658ae8b9"],"c26f00b574427b55127e869b935845554afde1fa":["5964dd1e558949587f9d060ccdff7e59bae1b01a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff66da7438bc59c3e60b554e872e2dea658ae8b9":["fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5964dd1e558949587f9d060ccdff7e59bae1b01a"],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5964dd1e558949587f9d060ccdff7e59bae1b01a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"5964dd1e558949587f9d060ccdff7e59bae1b01a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"46b2e34f0b8dafcbde2a78e1502422f75082e96c":["5964dd1e558949587f9d060ccdff7e59bae1b01a"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"ff66da7438bc59c3e60b554e872e2dea658ae8b9":["46b2e34f0b8dafcbde2a78e1502422f75082e96c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["ff66da7438bc59c3e60b554e872e2dea658ae8b9"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}