{"path":"lucene/src/java/org/apache/lucene/index/SegmentCodecs#read(IndexInput).mjava","commits":[{"id":"a493e6d0c3ad86bd55c0a1360d110142e948f2bd","date":1289406991,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentCodecs#read(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  void read(IndexInput in) throws IOException {\n    final int size = in.readVInt();\n    final ArrayList<Codec> list = new ArrayList<Codec>();\n    for (int i = 0; i < size; i++) {\n      final String codecName = in.readString();\n      final Codec lookup = provider.lookup(codecName);\n      list.add(i, lookup);\n    }\n    codecs = list.toArray(Codec.EMPTY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentCodecs#read(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  void read(IndexInput in) throws IOException {\n    final int size = in.readVInt();\n    final ArrayList<Codec> list = new ArrayList<Codec>();\n    for (int i = 0; i < size; i++) {\n      final String codecName = in.readString();\n      final Codec lookup = provider.lookup(codecName);\n      list.add(i, lookup);\n    }\n    codecs = list.toArray(Codec.EMPTY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentCodecs#read(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  void read(IndexInput in) throws IOException {\n    final int size = in.readVInt();\n    final ArrayList<Codec> list = new ArrayList<Codec>();\n    for (int i = 0; i < size; i++) {\n      final String codecName = in.readString();\n      final Codec lookup = provider.lookup(codecName);\n      list.add(i, lookup);\n    }\n    codecs = list.toArray(Codec.EMPTY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e92442af786151ee55bc283eb472f629e3c7b52b","date":1301070252,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentCodecs#read(IndexInput,CodecProvider).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentCodecs#read(IndexInput).mjava","sourceNew":"  private static Codec[] read(IndexInput in, CodecProvider provider) throws IOException {\n    final int size = in.readVInt();\n    final ArrayList<Codec> list = new ArrayList<Codec>();\n    for (int i = 0; i < size; i++) {\n      final String codecName = in.readString();\n      final Codec lookup = provider.lookup(codecName);\n      list.add(i, lookup);\n    }\n    return list.toArray(Codec.EMPTY);\n  }\n\n","sourceOld":"  void read(IndexInput in) throws IOException {\n    final int size = in.readVInt();\n    final ArrayList<Codec> list = new ArrayList<Codec>();\n    for (int i = 0; i < size; i++) {\n      final String codecName = in.readString();\n      final Codec lookup = provider.lookup(codecName);\n      list.add(i, lookup);\n    }\n    codecs = list.toArray(Codec.EMPTY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentCodecs#read(IndexInput).mjava","sourceNew":null,"sourceOld":"  void read(IndexInput in) throws IOException {\n    final int size = in.readVInt();\n    final ArrayList<Codec> list = new ArrayList<Codec>();\n    for (int i = 0; i < size; i++) {\n      final String codecName = in.readString();\n      final Codec lookup = provider.lookup(codecName);\n      list.add(i, lookup);\n    }\n    codecs = list.toArray(Codec.EMPTY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentCodecs#read(IndexInput).mjava","sourceNew":null,"sourceOld":"  void read(IndexInput in) throws IOException {\n    final int size = in.readVInt();\n    final ArrayList<Codec> list = new ArrayList<Codec>();\n    for (int i = 0; i < size; i++) {\n      final String codecName = in.readString();\n      final Codec lookup = provider.lookup(codecName);\n      list.add(i, lookup);\n    }\n    codecs = list.toArray(Codec.EMPTY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e92442af786151ee55bc283eb472f629e3c7b52b":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e92442af786151ee55bc283eb472f629e3c7b52b"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["85a883878c0af761245ab048babc63d099f835f3","e92442af786151ee55bc283eb472f629e3c7b52b"],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e92442af786151ee55bc283eb472f629e3c7b52b"]},"commit2Childs":{"e92442af786151ee55bc283eb472f629e3c7b52b":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["e92442af786151ee55bc283eb472f629e3c7b52b","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"85a883878c0af761245ab048babc63d099f835f3":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}