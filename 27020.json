{"path":"lucene/backwards/src/java/org/apache/lucene/search/IndexSearcher#searchWithFilter(IndexReader,Weight,Filter,Collector).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/IndexSearcher#searchWithFilter(IndexReader,Weight,Filter,Collector).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/IndexSearcher#searchWithFilter(IndexReader,Weight,Filter,Collector).mjava","sourceNew":"  private void searchWithFilter(IndexReader reader, Weight weight,\n      final Filter filter, final Collector collector) throws IOException {\n\n    assert filter != null;\n    \n    Scorer scorer = weight.scorer(reader, true, false);\n    if (scorer == null) {\n      return;\n    }\n\n    int docID = scorer.docID();\n    assert docID == -1 || docID == DocIdSetIterator.NO_MORE_DOCS;\n\n    // CHECKME: use ConjunctionScorer here?\n    DocIdSet filterDocIdSet = filter.getDocIdSet(reader);\n    if (filterDocIdSet == null) {\n      // this means the filter does not accept any documents.\n      return;\n    }\n    \n    DocIdSetIterator filterIter = filterDocIdSet.iterator();\n    if (filterIter == null) {\n      // this means the filter does not accept any documents.\n      return;\n    }\n    int filterDoc = filterIter.nextDoc();\n    int scorerDoc = scorer.advance(filterDoc);\n    \n    collector.setScorer(scorer);\n    while (true) {\n      if (scorerDoc == filterDoc) {\n        // Check if scorer has exhausted, only before collecting.\n        if (scorerDoc == DocIdSetIterator.NO_MORE_DOCS) {\n          break;\n        }\n        collector.collect(scorerDoc);\n        filterDoc = filterIter.nextDoc();\n        scorerDoc = scorer.advance(filterDoc);\n      } else if (scorerDoc > filterDoc) {\n        filterDoc = filterIter.advance(scorerDoc);\n      } else {\n        scorerDoc = scorer.advance(filterDoc);\n      }\n    }\n  }\n\n","sourceOld":"  private void searchWithFilter(IndexReader reader, Weight weight,\n      final Filter filter, final Collector collector) throws IOException {\n\n    assert filter != null;\n    \n    Scorer scorer = weight.scorer(reader, true, false);\n    if (scorer == null) {\n      return;\n    }\n\n    int docID = scorer.docID();\n    assert docID == -1 || docID == DocIdSetIterator.NO_MORE_DOCS;\n\n    // CHECKME: use ConjunctionScorer here?\n    DocIdSet filterDocIdSet = filter.getDocIdSet(reader);\n    if (filterDocIdSet == null) {\n      // this means the filter does not accept any documents.\n      return;\n    }\n    \n    DocIdSetIterator filterIter = filterDocIdSet.iterator();\n    if (filterIter == null) {\n      // this means the filter does not accept any documents.\n      return;\n    }\n    int filterDoc = filterIter.nextDoc();\n    int scorerDoc = scorer.advance(filterDoc);\n    \n    collector.setScorer(scorer);\n    while (true) {\n      if (scorerDoc == filterDoc) {\n        // Check if scorer has exhausted, only before collecting.\n        if (scorerDoc == DocIdSetIterator.NO_MORE_DOCS) {\n          break;\n        }\n        collector.collect(scorerDoc);\n        filterDoc = filterIter.nextDoc();\n        scorerDoc = scorer.advance(filterDoc);\n      } else if (scorerDoc > filterDoc) {\n        filterDoc = filterIter.advance(scorerDoc);\n      } else {\n        scorerDoc = scorer.advance(filterDoc);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/search/IndexSearcher#searchWithFilter(IndexReader,Weight,Filter,Collector).mjava","sourceNew":null,"sourceOld":"  private void searchWithFilter(IndexReader reader, Weight weight,\n      final Filter filter, final Collector collector) throws IOException {\n\n    assert filter != null;\n    \n    Scorer scorer = weight.scorer(reader, true, false);\n    if (scorer == null) {\n      return;\n    }\n\n    int docID = scorer.docID();\n    assert docID == -1 || docID == DocIdSetIterator.NO_MORE_DOCS;\n\n    // CHECKME: use ConjunctionScorer here?\n    DocIdSet filterDocIdSet = filter.getDocIdSet(reader);\n    if (filterDocIdSet == null) {\n      // this means the filter does not accept any documents.\n      return;\n    }\n    \n    DocIdSetIterator filterIter = filterDocIdSet.iterator();\n    if (filterIter == null) {\n      // this means the filter does not accept any documents.\n      return;\n    }\n    int filterDoc = filterIter.nextDoc();\n    int scorerDoc = scorer.advance(filterDoc);\n    \n    collector.setScorer(scorer);\n    while (true) {\n      if (scorerDoc == filterDoc) {\n        // Check if scorer has exhausted, only before collecting.\n        if (scorerDoc == DocIdSetIterator.NO_MORE_DOCS) {\n          break;\n        }\n        collector.collect(scorerDoc);\n        filterDoc = filterIter.nextDoc();\n        scorerDoc = scorer.advance(filterDoc);\n      } else if (scorerDoc > filterDoc) {\n        filterDoc = filterIter.advance(scorerDoc);\n      } else {\n        scorerDoc = scorer.advance(filterDoc);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}