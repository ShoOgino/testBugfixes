{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKAnalyzer#testFinalOffset().mjava","commits":[{"id":"680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee","date":1325135089,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKAnalyzer#testFinalOffset().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * LUCENE-2207: wrong offset calculated by end() \n   */\n  public void testFinalOffset() throws IOException {\n    assertAnalyzesTo(analyzer, \"あい\",\n      new String[] { \"あい\" },\n      new int[] { 0 },\n      new int[] { 2 },\n      new String[] { \"<DOUBLE>\" },\n      new int[] { 1 });\n    \n    assertAnalyzesTo(analyzer, \"あい   \",\n      new String[] { \"あい\" },\n      new int[] { 0 },\n      new int[] { 2 },\n      new String[] { \"<DOUBLE>\" },\n      new int[] { 1 });\n\n    assertAnalyzesTo(analyzer, \"test\",\n      new String[] { \"test\" },\n      new int[] { 0 },\n      new int[] { 4 },\n      new String[] { \"<ALPHANUM>\" },\n      new int[] { 1 });\n    \n    assertAnalyzesTo(analyzer, \"test   \",\n      new String[] { \"test\" },\n      new int[] { 0 },\n      new int[] { 4 },\n      new String[] { \"<ALPHANUM>\" },\n      new int[] { 1 });\n    \n    assertAnalyzesTo(analyzer, \"あいtest\",\n      new String[] { \"あい\", \"test\" },\n      new int[] { 0, 2 },\n      new int[] { 2, 6 },\n      new String[] { \"<DOUBLE>\", \"<ALPHANUM>\" },\n      new int[] { 1, 1 });\n    \n    assertAnalyzesTo(analyzer, \"testあい    \",\n      new String[] { \"test\", \"あい\" },\n      new int[] { 0, 4 },\n      new int[] { 4, 6 },\n      new String[] { \"<ALPHANUM>\", \"<DOUBLE>\" },\n      new int[] { 1, 1 });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKAnalyzer#testFinalOffset().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKAnalyzer#testFinalOffset().mjava","sourceNew":"  /**\n   * LUCENE-2207: wrong offset calculated by end() \n   */\n  public void testFinalOffset() throws IOException {\n    assertAnalyzesTo(analyzer, \"あい\",\n      new String[] { \"あい\" },\n      new int[] { 0 },\n      new int[] { 2 },\n      new String[] { \"<DOUBLE>\" },\n      new int[] { 1 });\n    \n    assertAnalyzesTo(analyzer, \"あい   \",\n      new String[] { \"あい\" },\n      new int[] { 0 },\n      new int[] { 2 },\n      new String[] { \"<DOUBLE>\" },\n      new int[] { 1 });\n\n    assertAnalyzesTo(analyzer, \"test\",\n      new String[] { \"test\" },\n      new int[] { 0 },\n      new int[] { 4 },\n      new String[] { \"<ALPHANUM>\" },\n      new int[] { 1 });\n    \n    assertAnalyzesTo(analyzer, \"test   \",\n      new String[] { \"test\" },\n      new int[] { 0 },\n      new int[] { 4 },\n      new String[] { \"<ALPHANUM>\" },\n      new int[] { 1 });\n    \n    assertAnalyzesTo(analyzer, \"あいtest\",\n      new String[] { \"あい\", \"test\" },\n      new int[] { 0, 2 },\n      new int[] { 2, 6 },\n      new String[] { \"<DOUBLE>\", \"<ALPHANUM>\" },\n      new int[] { 1, 1 });\n    \n    assertAnalyzesTo(analyzer, \"testあい    \",\n      new String[] { \"test\", \"あい\" },\n      new int[] { 0, 4 },\n      new int[] { 4, 6 },\n      new String[] { \"<ALPHANUM>\", \"<DOUBLE>\" },\n      new int[] { 1, 1 });\n  }\n\n","sourceOld":"  /**\n   * LUCENE-2207: wrong offset calculated by end() \n   */\n  public void testFinalOffset() throws IOException {\n    assertAnalyzesTo(analyzer, \"あい\",\n      new String[] { \"あい\" },\n      new int[] { 0 },\n      new int[] { 2 },\n      new String[] { \"<DOUBLE>\" },\n      new int[] { 1 });\n    \n    assertAnalyzesTo(analyzer, \"あい   \",\n      new String[] { \"あい\" },\n      new int[] { 0 },\n      new int[] { 2 },\n      new String[] { \"<DOUBLE>\" },\n      new int[] { 1 });\n\n    assertAnalyzesTo(analyzer, \"test\",\n      new String[] { \"test\" },\n      new int[] { 0 },\n      new int[] { 4 },\n      new String[] { \"<ALPHANUM>\" },\n      new int[] { 1 });\n    \n    assertAnalyzesTo(analyzer, \"test   \",\n      new String[] { \"test\" },\n      new int[] { 0 },\n      new int[] { 4 },\n      new String[] { \"<ALPHANUM>\" },\n      new int[] { 1 });\n    \n    assertAnalyzesTo(analyzer, \"あいtest\",\n      new String[] { \"あい\", \"test\" },\n      new int[] { 0, 2 },\n      new int[] { 2, 6 },\n      new String[] { \"<DOUBLE>\", \"<ALPHANUM>\" },\n      new int[] { 1, 1 });\n    \n    assertAnalyzesTo(analyzer, \"testあい    \",\n      new String[] { \"test\", \"あい\" },\n      new int[] { 0, 4 },\n      new int[] { 4, 6 },\n      new String[] { \"<ALPHANUM>\", \"<DOUBLE>\" },\n      new int[] { 1, 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee"],"680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["680e7f726eaa1fd44ade8bc1f8a02f452ca7c4ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}