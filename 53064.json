{"path":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7211b1fba79597955a78855e9f646de9248ca57","date":1345763711,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"useCompoundFile=\").append(useCompoundFile).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56fb5e4e4b239474721e13b4cd9542ea2d215451","date":1529091182,"type":3,"author":"Erick","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio).append(\", \");\n    sb.append(\"reclaimDeletesWeight=\").append(reclaimDeletesWeight);\n    //TODO: See LUCENE-8263\n    //sb.append(\"indexPctDeletedTarget=\").append(indexPctDeletedTarget);\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio).append(\", \");\n    sb.append(\"reclaimDeletesWeight=\").append(reclaimDeletesWeight);\n    //TODO: See LUCENE-8263\n    //sb.append(\"indexPctDeletedTarget=\").append(indexPctDeletedTarget);\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a90cc8c90aa53ddf51fbd15019989ac269514a3","date":1531845066,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio).append(\", \");\n    sb.append(\"deletesPctAllowed=\").append(deletesPctAllowed);\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio).append(\", \");\n    sb.append(\"reclaimDeletesWeight=\").append(reclaimDeletesWeight);\n    //TODO: See LUCENE-8263\n    //sb.append(\"indexPctDeletedTarget=\").append(indexPctDeletedTarget);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio).append(\", \");\n    sb.append(\"deletesPctAllowed=\").append(deletesPctAllowed);\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(\"[\" + getClass().getSimpleName() + \": \");\n    sb.append(\"maxMergeAtOnce=\").append(maxMergeAtOnce).append(\", \");\n    sb.append(\"maxMergeAtOnceExplicit=\").append(maxMergeAtOnceExplicit).append(\", \");\n    sb.append(\"maxMergedSegmentMB=\").append(maxMergedSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"floorSegmentMB=\").append(floorSegmentBytes/1024/1024.).append(\", \");\n    sb.append(\"forceMergeDeletesPctAllowed=\").append(forceMergeDeletesPctAllowed).append(\", \");\n    sb.append(\"segmentsPerTier=\").append(segsPerTier).append(\", \");\n    sb.append(\"maxCFSSegmentSizeMB=\").append(getMaxCFSSegmentSizeMB()).append(\", \");\n    sb.append(\"noCFSRatio=\").append(noCFSRatio);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","c7211b1fba79597955a78855e9f646de9248ca57"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["088a7ef694fd43d5d9a4d200c4005865f773d1e7","4a90cc8c90aa53ddf51fbd15019989ac269514a3"],"56fb5e4e4b239474721e13b4cd9542ea2d215451":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["c7211b1fba79597955a78855e9f646de9248ca57"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7211b1fba79597955a78855e9f646de9248ca57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a90cc8c90aa53ddf51fbd15019989ac269514a3":["56fb5e4e4b239474721e13b4cd9542ea2d215451"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a90cc8c90aa53ddf51fbd15019989ac269514a3"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["088a7ef694fd43d5d9a4d200c4005865f773d1e7","56fb5e4e4b239474721e13b4cd9542ea2d215451"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","56fb5e4e4b239474721e13b4cd9542ea2d215451","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"56fb5e4e4b239474721e13b4cd9542ea2d215451":["4a90cc8c90aa53ddf51fbd15019989ac269514a3","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["001b25b42373b22a52f399dbf072f1224632e8e6","c7211b1fba79597955a78855e9f646de9248ca57"],"c7211b1fba79597955a78855e9f646de9248ca57":["001b25b42373b22a52f399dbf072f1224632e8e6","088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4a90cc8c90aa53ddf51fbd15019989ac269514a3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}