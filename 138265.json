{"path":"src/java/org/apache/lucene/search/spans/SpanOrQuery#hashCode().mjava","commits":[{"id":"7906c5abe56bd9dcad466e5035e40b9b6a4bda81","date":1124639142,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanOrQuery#hashCode().mjava","pathOld":"/dev/null","sourceNew":"  public int hashCode() {\n    int result;\n    result = clauses.hashCode();\n    result = 29 * result + field.hashCode();\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37727c003d0055afbc22d49ba0434cc4028166db","date":1135617136,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanOrQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanOrQuery#hashCode().mjava","sourceNew":"  public int hashCode() {\n    int h = clauses.hashCode();\n    h ^= (h << 10) | (h >>> 23);\n    h ^= Float.floatToRawIntBits(getBoost());\n    return h;\n  }\n\n","sourceOld":"  public int hashCode() {\n    int result;\n    result = clauses.hashCode();\n    result = 29 * result + field.hashCode();\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/SpanOrQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanOrQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    int h = clauses.hashCode();\n    h ^= (h << 10) | (h >>> 23);\n    h ^= Float.floatToRawIntBits(getBoost());\n    return h;\n  }\n\n","sourceOld":"  public int hashCode() {\n    int h = clauses.hashCode();\n    h ^= (h << 10) | (h >>> 23);\n    h ^= Float.floatToRawIntBits(getBoost());\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/SpanOrQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/spans/SpanOrQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    int h = clauses.hashCode();\n    h ^= (h << 10) | (h >>> 23);\n    h ^= Float.floatToRawIntBits(getBoost());\n    return h;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    int h = clauses.hashCode();\n    h ^= (h << 10) | (h >>> 23);\n    h ^= Float.floatToRawIntBits(getBoost());\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a9e385641d717e641408d8fbbc62be8fc766357":["37727c003d0055afbc22d49ba0434cc4028166db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37727c003d0055afbc22d49ba0434cc4028166db":["7906c5abe56bd9dcad466e5035e40b9b6a4bda81"],"7906c5abe56bd9dcad466e5035e40b9b6a4bda81":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7906c5abe56bd9dcad466e5035e40b9b6a4bda81"],"37727c003d0055afbc22d49ba0434cc4028166db":["8a9e385641d717e641408d8fbbc62be8fc766357"],"7906c5abe56bd9dcad466e5035e40b9b6a4bda81":["37727c003d0055afbc22d49ba0434cc4028166db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}