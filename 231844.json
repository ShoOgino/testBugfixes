{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#getMergingSegments().mjava","commits":[{"id":"867c1d467255521b6a85a819a2097440670b7cc9","date":1296856472,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getMergingSegments().mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: to be used by a {@link MergePolicy} to avoid\n   *  selecting merges for segments already being merged.\n   *  The returned collection is not cloned, and thus is\n   *  only safe to access if you hold IndexWriter's lock\n   *  (which you do when IndexWriter invokes the\n   *  MergePolicy).\n   *\n   *  <p>Do not alter the returned collection! */\n  public synchronized Collection<SegmentInfo> getMergingSegments() {\n    return mergingSegments;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getMergingSegments().mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: to be used by a {@link MergePolicy} to avoid\n   *  selecting merges for segments already being merged.\n   *  The returned collection is not cloned, and thus is\n   *  only safe to access if you hold IndexWriter's lock\n   *  (which you do when IndexWriter invokes the\n   *  MergePolicy).\n   *\n   *  <p>Do not alter the returned collection! */\n  public synchronized Collection<SegmentInfo> getMergingSegments() {\n    return mergingSegments;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#getMergingSegments().mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: to be used by a {@link MergePolicy} to avoid\n   *  selecting merges for segments already being merged.\n   *  The returned collection is not cloned, and thus is\n   *  only safe to access if you hold IndexWriter's lock\n   *  (which you do when IndexWriter invokes the\n   *  MergePolicy).\n   *\n   *  <p>Do not alter the returned collection! */\n  public synchronized Collection<SegmentInfo> getMergingSegments() {\n    return mergingSegments;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getMergingSegments().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#getMergingSegments().mjava","sourceNew":"  /** Expert: to be used by a {@link MergePolicy} to avoid\n   *  selecting merges for segments already being merged.\n   *  The returned collection is not cloned, and thus is\n   *  only safe to access if you hold IndexWriter's lock\n   *  (which you do when IndexWriter invokes the\n   *  MergePolicy).\n   *\n   *  <p>Do not alter the returned collection! */\n  public synchronized Collection<SegmentInfo> getMergingSegments() {\n    return mergingSegments;\n  }\n\n","sourceOld":"  /** Expert: to be used by a {@link MergePolicy} to avoid\n   *  selecting merges for segments already being merged.\n   *  The returned collection is not cloned, and thus is\n   *  only safe to access if you hold IndexWriter's lock\n   *  (which you do when IndexWriter invokes the\n   *  MergePolicy).\n   *\n   *  <p>Do not alter the returned collection! */\n  public synchronized Collection<SegmentInfo> getMergingSegments() {\n    return mergingSegments;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"867c1d467255521b6a85a819a2097440670b7cc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["867c1d467255521b6a85a819a2097440670b7cc9"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","867c1d467255521b6a85a819a2097440670b7cc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","867c1d467255521b6a85a819a2097440670b7cc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"867c1d467255521b6a85a819a2097440670b7cc9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["867c1d467255521b6a85a819a2097440670b7cc9","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}