{"path":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","commits":[{"id":"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","date":1394784078,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","pathOld":"/dev/null","sourceNew":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrServer) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrServer baseServer = new HttpSolrServer(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    return baseServer.request(request);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["69e6520a21709190413a63084ed135271aab1a7c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","sourceNew":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrClient baseClient = new HttpSolrClient(baseUrl);\n    baseClient.setConnectionTimeout(15000);\n    return baseClient.request(request);\n  }\n\n","sourceOld":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrServer) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrServer baseServer = new HttpSolrServer(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    return baseServer.request(request);\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","sourceNew":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrClient baseServer = new HttpSolrClient(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    NamedList<Object> resp = baseServer.request(request);\n    baseServer.shutdown();\n    return resp;\n  }\n\n","sourceOld":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrClient baseClient = new HttpSolrClient(baseUrl);\n    baseClient.setConnectionTimeout(15000);\n    return baseClient.request(request);\n  }\n\n","bugFix":["bafca15d8e408346a67f4282ad1143b88023893b"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","sourceNew":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = new HttpSolrClient(baseUrl)) {\n      baseServer.setConnectionTimeout(15000);\n      return baseServer.request(request);\n    }\n\n  }\n\n","sourceOld":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrClient baseServer = new HttpSolrClient(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    NamedList<Object> resp = baseServer.request(request);\n    baseServer.shutdown();\n    return resp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3088cdaa24ffe3ef44713ac9484114bd56eca2af","date":1453441194,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","sourceNew":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = new HttpSolrClient(baseUrl)) {\n      baseServer.setConnectionTimeout(15000);\n      return baseServer.request(request);\n    }\n\n  }\n\n","sourceOld":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = new HttpSolrClient(baseUrl)) {\n      baseServer.setConnectionTimeout(15000);\n      return baseServer.request(request);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","sourceNew":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = getHttpSolrClient(baseUrl)) {\n      baseServer.setConnectionTimeout(15000);\n      return baseServer.request(request);\n    }\n\n  }\n\n","sourceOld":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = new HttpSolrClient(baseUrl)) {\n      baseServer.setConnectionTimeout(15000);\n      return baseServer.request(request);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","sourceNew":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = getHttpSolrClient(baseUrl)) {\n      baseServer.setConnectionTimeout(15000);\n      return baseServer.request(request);\n    }\n\n  }\n\n","sourceOld":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = new HttpSolrClient(baseUrl)) {\n      baseServer.setConnectionTimeout(15000);\n      return baseServer.request(request);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"43d1e498704edd2bba13548a189eed4dfccff11b","date":1499143458,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","sourceNew":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = getHttpSolrClient(baseUrl, 15000)) {\n      return baseServer.request(request);\n    }\n\n  }\n\n","sourceOld":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = getHttpSolrClient(baseUrl)) {\n      baseServer.setConnectionTimeout(15000);\n      return baseServer.request(request);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2ea161f828a3a7a6eb9410a431aecda6d7ab1065","date":1499213384,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","sourceNew":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = getHttpSolrClient(baseUrl, 15000)) {\n      return baseServer.request(request);\n    }\n\n  }\n\n","sourceOld":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = getHttpSolrClient(baseUrl)) {\n      baseServer.setConnectionTimeout(15000);\n      return baseServer.request(request);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","sourceNew":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.getSolrClient()).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = getHttpSolrClient(baseUrl, 15000)) {\n      return baseServer.request(request);\n    }\n\n  }\n\n","sourceOld":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = getHttpSolrClient(baseUrl, 15000)) {\n      return baseServer.request(request);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestRequestStatusCollectionAPI#sendRequest(ModifiableSolrParams).mjava","sourceNew":null,"sourceOld":"  protected NamedList sendRequest(ModifiableSolrParams params) throws SolrServerException, IOException {\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient).getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseServer = getHttpSolrClient(baseUrl, 15000)) {\n      return baseServer.request(request);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["43d1e498704edd2bba13548a189eed4dfccff11b","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"3088cdaa24ffe3ef44713ac9484114bd56eca2af":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["3088cdaa24ffe3ef44713ac9484114bd56eca2af"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["43d1e498704edd2bba13548a189eed4dfccff11b"],"bafca15d8e408346a67f4282ad1143b88023893b":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"43d1e498704edd2bba13548a189eed4dfccff11b":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","43d1e498704edd2bba13548a189eed4dfccff11b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["3088cdaa24ffe3ef44713ac9484114bd56eca2af","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3088cdaa24ffe3ef44713ac9484114bd56eca2af":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"43d1e498704edd2bba13548a189eed4dfccff11b":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["43d1e498704edd2bba13548a189eed4dfccff11b","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["3088cdaa24ffe3ef44713ac9484114bd56eca2af"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2ea161f828a3a7a6eb9410a431aecda6d7ab1065","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}