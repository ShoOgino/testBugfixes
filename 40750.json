{"path":"contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","commits":[{"id":"0a04035855bf53c50aaef580f2ec794acf73029e","date":1253578101,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","pathOld":"/dev/null","sourceNew":"  public void testDistances() throws IOException, InvalidGeoException {\n    LatLng p1 = new FloatLatLng( 7.06, 171.2 );\n    LatLng p2 = new FloatLatLng( 21.6032207, -158.0 );\n    double miles = p1.arcDistance( p2, DistanceUnits.MILES );\n    System.out.println(\"testDistances\");\n    System.out.println(\"miles:\" + miles);\n    assertEquals(2288.82495932794, miles); \n    LatLng p3 = new FloatLatLng( 41.6032207, -73.087749);\n    LatLng p4 = new FloatLatLng( 55.0, 4.0 );\n    miles = p3.arcDistance( p4, DistanceUnits.MILES );\n    System.out.println(\"miles:\" + miles);\n    assertEquals(3474.331719997617, miles); \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42607aa380c892dc1ec0ab26e86a575c28e13618","date":1268641604,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","pathOld":"contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","sourceNew":"  public void testDistances() throws IOException, InvalidGeoException {\n    LatLng p1 = new FloatLatLng( 7.06, 171.2 );\n    LatLng p2 = new FloatLatLng( 21.6032207, -158.0 );\n    double miles = p1.arcDistance( p2, DistanceUnits.MILES );\n    if (VERBOSE) {\n      System.out.println(\"testDistances\");\n      System.out.println(\"miles:\" + miles);\n    }\n    assertEquals(2288.82495932794, miles); \n    LatLng p3 = new FloatLatLng( 41.6032207, -73.087749);\n    LatLng p4 = new FloatLatLng( 55.0, 4.0 );\n    miles = p3.arcDistance( p4, DistanceUnits.MILES );\n    if (VERBOSE) System.out.println(\"miles:\" + miles);\n    assertEquals(3474.331719997617, miles); \n  }\n\n","sourceOld":"  public void testDistances() throws IOException, InvalidGeoException {\n    LatLng p1 = new FloatLatLng( 7.06, 171.2 );\n    LatLng p2 = new FloatLatLng( 21.6032207, -158.0 );\n    double miles = p1.arcDistance( p2, DistanceUnits.MILES );\n    System.out.println(\"testDistances\");\n    System.out.println(\"miles:\" + miles);\n    assertEquals(2288.82495932794, miles); \n    LatLng p3 = new FloatLatLng( 41.6032207, -73.087749);\n    LatLng p4 = new FloatLatLng( 55.0, 4.0 );\n    miles = p3.arcDistance( p4, DistanceUnits.MILES );\n    System.out.println(\"miles:\" + miles);\n    assertEquals(3474.331719997617, miles); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","pathOld":"contrib/spatial/src/test/org/apache/lucene/spatial/tier/TestCartesian#testDistances().mjava","sourceNew":"  public void testDistances() throws IOException, InvalidGeoException {\n    LatLng p1 = new FloatLatLng( 7.06, 171.2 );\n    LatLng p2 = new FloatLatLng( 21.6032207, -158.0 );\n    double miles = p1.arcDistance( p2, DistanceUnits.MILES );\n    if (VERBOSE) {\n      System.out.println(\"testDistances\");\n      System.out.println(\"miles:\" + miles);\n    }\n    assertEquals(2288.82495932794, miles); \n    LatLng p3 = new FloatLatLng( 41.6032207, -73.087749);\n    LatLng p4 = new FloatLatLng( 55.0, 4.0 );\n    miles = p3.arcDistance( p4, DistanceUnits.MILES );\n    if (VERBOSE) System.out.println(\"miles:\" + miles);\n    assertEquals(3474.331719997617, miles); \n  }\n\n","sourceOld":"  public void testDistances() throws IOException, InvalidGeoException {\n    LatLng p1 = new FloatLatLng( 7.06, 171.2 );\n    LatLng p2 = new FloatLatLng( 21.6032207, -158.0 );\n    double miles = p1.arcDistance( p2, DistanceUnits.MILES );\n    if (VERBOSE) {\n      System.out.println(\"testDistances\");\n      System.out.println(\"miles:\" + miles);\n    }\n    assertEquals(2288.82495932794, miles); \n    LatLng p3 = new FloatLatLng( 41.6032207, -73.087749);\n    LatLng p4 = new FloatLatLng( 55.0, 4.0 );\n    miles = p3.arcDistance( p4, DistanceUnits.MILES );\n    if (VERBOSE) System.out.println(\"miles:\" + miles);\n    assertEquals(3474.331719997617, miles); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a04035855bf53c50aaef580f2ec794acf73029e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"42607aa380c892dc1ec0ab26e86a575c28e13618":["0a04035855bf53c50aaef580f2ec794acf73029e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["42607aa380c892dc1ec0ab26e86a575c28e13618"]},"commit2Childs":{"0a04035855bf53c50aaef580f2ec794acf73029e":["42607aa380c892dc1ec0ab26e86a575c28e13618"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a04035855bf53c50aaef580f2ec794acf73029e"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}