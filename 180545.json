{"path":"lucene/core/src/test/org/apache/lucene/store/TestByteBuffersDataOutput#testConstructorWithExpectedSize().mjava","commits":[{"id":"fad01f81cc24b33263ccec7dbff3fb907702f91e","date":1535461373,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestByteBuffersDataOutput#testConstructorWithExpectedSize().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testConstructorWithExpectedSize() {\n    {\n      ByteBuffersDataOutput o = new ByteBuffersDataOutput(0);\n      o.writeByte((byte) 0);\n      assertEquals(1 << ByteBuffersDataOutput.DEFAULT_MIN_BITS_PER_BLOCK, o.toBufferList().get(0).capacity());\n    }\n\n    {\n      long MB = 1024 * 1024;\n      long expectedSize = randomLongBetween(MB, MB * 1024);\n      ByteBuffersDataOutput o = new ByteBuffersDataOutput(expectedSize);\n      o.writeByte((byte) 0);\n      int cap = o.toBufferList().get(0).capacity();\n      assertTrue((cap >> 1) * ByteBuffersDataOutput.MAX_BLOCKS_BEFORE_BLOCK_EXPANSION < expectedSize);\n      assertTrue(\"cap=\" + cap + \", exp=\" + expectedSize,\n          (cap) * ByteBuffersDataOutput.MAX_BLOCKS_BEFORE_BLOCK_EXPANSION >= expectedSize);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fad01f81cc24b33263ccec7dbff3fb907702f91e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fad01f81cc24b33263ccec7dbff3fb907702f91e"],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}