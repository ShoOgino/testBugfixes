{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/CellTokenStream#incrementToken().mjava","commits":[{"id":"4de14be4bd1b857ba37ca138b61c4661c6d1bed3","date":1396628861,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/CellTokenStream#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  /** Outputs the token of a cell, and if its a leaf, outputs it again with the leaf byte. */\n  @Override\n  public final boolean incrementToken() {\n    if (iter == null)\n      throw new IllegalStateException(\"call setCells() before usage\");\n\n    // this will only clear all other attributes in this TokenStream\n    clearAttributes();\n\n    if (cellAtt.getOmitLeafByte()) {\n      cellAtt.setOmitLeafByte(false);\n      return true;\n    }\n    //get next\n    if (!iter.hasNext())\n      return false;\n    cellAtt.setCell(iter.next());\n    if (cellAtt.getCell().isLeaf())\n      cellAtt.setOmitLeafByte(true);\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/CellTokenStream#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  /** Outputs the token of a cell, and if its a leaf, outputs it again with the leaf byte. */\n  @Override\n  public final boolean incrementToken() {\n    if (iter == null)\n      throw new IllegalStateException(\"call setCells() before usage\");\n\n    // this will only clear all other attributes in this TokenStream\n    clearAttributes();\n\n    if (cellAtt.getOmitLeafByte()) {\n      cellAtt.setOmitLeafByte(false);\n      return true;\n    }\n    //get next\n    if (!iter.hasNext())\n      return false;\n    cellAtt.setCell(iter.next());\n    if (cellAtt.getCell().isLeaf())\n      cellAtt.setOmitLeafByte(true);\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/CellTokenStream#incrementToken().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/CellTokenStream#incrementToken().mjava","sourceNew":"  /** Outputs the token of a cell, and if it's a leaf, outputs it again with the leaf byte. */\n  @Override\n  public final boolean incrementToken() {\n    if (iter == null)\n      throw new IllegalStateException(\"call setCells() before usage\");\n\n    // this will only clear all other attributes in this TokenStream\n    clearAttributes();\n\n    if (cellAtt.getOmitLeafByte()) {\n      cellAtt.setOmitLeafByte(false);\n      return true;\n    }\n    //get next\n    if (!iter.hasNext())\n      return false;\n    cellAtt.setCell(iter.next());\n    if (cellAtt.getCell().isLeaf())\n      cellAtt.setOmitLeafByte(true);\n    return true;\n  }\n\n","sourceOld":"  /** Outputs the token of a cell, and if its a leaf, outputs it again with the leaf byte. */\n  @Override\n  public final boolean incrementToken() {\n    if (iter == null)\n      throw new IllegalStateException(\"call setCells() before usage\");\n\n    // this will only clear all other attributes in this TokenStream\n    clearAttributes();\n\n    if (cellAtt.getOmitLeafByte()) {\n      cellAtt.setOmitLeafByte(false);\n      return true;\n    }\n    //get next\n    if (!iter.hasNext())\n      return false;\n    cellAtt.setCell(iter.next());\n    if (cellAtt.getCell().isLeaf())\n      cellAtt.setOmitLeafByte(true);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0","date":1426015524,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/CellTokenStream#incrementToken().mjava","sourceNew":null,"sourceOld":"  /** Outputs the token of a cell, and if it's a leaf, outputs it again with the leaf byte. */\n  @Override\n  public final boolean incrementToken() {\n    if (iter == null)\n      throw new IllegalStateException(\"call setCells() before usage\");\n\n    // this will only clear all other attributes in this TokenStream\n    clearAttributes();\n\n    if (cellAtt.getOmitLeafByte()) {\n      cellAtt.setOmitLeafByte(false);\n      return true;\n    }\n    //get next\n    if (!iter.hasNext())\n      return false;\n    cellAtt.setCell(iter.next());\n    if (cellAtt.getCell().isLeaf())\n      cellAtt.setOmitLeafByte(true);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/CellTokenStream#incrementToken().mjava","sourceNew":null,"sourceOld":"  /** Outputs the token of a cell, and if it's a leaf, outputs it again with the leaf byte. */\n  @Override\n  public final boolean incrementToken() {\n    if (iter == null)\n      throw new IllegalStateException(\"call setCells() before usage\");\n\n    // this will only clear all other attributes in this TokenStream\n    clearAttributes();\n\n    if (cellAtt.getOmitLeafByte()) {\n      cellAtt.setOmitLeafByte(false);\n      return true;\n    }\n    //get next\n    if (!iter.hasNext())\n      return false;\n    cellAtt.setCell(iter.next());\n    if (cellAtt.getCell().isLeaf())\n      cellAtt.setOmitLeafByte(true);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","15e323346eac5e4685c0a9f2df85eb96b4239bbb"],"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}