{"path":"modules/spatial/strategy/src/java/org/apache/lucene/spatial/base/prefix/SpatialPrefixTree#getMaxLevelForPrecision(Shape,double).mjava","commits":[{"id":"c2047ba81272a0c4edeb11b1c7810ee23ba73502","date":1329808655,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/strategy/src/java/org/apache/lucene/spatial/base/prefix/SpatialPrefixTree#getMaxLevelForPrecision(Shape,double).mjava","pathOld":"modules/spatial-TEMP/src/java/org/apache/lucene/spatial/base/prefix/SpatialPrefixTree#getMaxLevelForPrecision(Shape,double).mjava","sourceNew":"  /**\n   * See {@link org.apache.lucene.spatial.base.query.SpatialArgs#getDistPrecision()}.\n   * A grid level looked up via {@link #getLevelForDistance(double)} is returned.\n   *\n   * @param shape\n   * @param precision 0-0.5\n   * @return 1-maxLevels\n   */\n  public int getMaxLevelForPrecision(Shape shape, double precision) {\n    if (precision < 0 || precision > 0.5) {\n      throw new IllegalArgumentException(\"Precision \" + precision + \" must be between [0-0.5]\");\n    }\n    if (precision == 0 || shape instanceof Point) {\n      return maxLevels;\n    }\n    double bboxArea = shape.getBoundingBox().getArea();\n    if (bboxArea == 0) {\n      return maxLevels;\n    }\n    double avgSideLenFromCenter = Math.sqrt(bboxArea) / 2;\n    return getLevelForDistance(avgSideLenFromCenter * precision);\n  }\n\n","sourceOld":"  /**\n   * See {@link org.apache.lucene.spatial.base.query.SpatialArgs#getDistPrecision()}.\n   * A grid level looked up via {@link #getLevelForDistance(double)} is returned.\n   *\n   * @param shape\n   * @param precision 0-0.5\n   * @return 1-maxLevels\n   */\n  public int getMaxLevelForPrecision(Shape shape, double precision) {\n    if (precision < 0 || precision > 0.5) {\n      throw new IllegalArgumentException(\"Precision \" + precision + \" must be between [0-0.5]\");\n    }\n    if (precision == 0 || shape instanceof Point) {\n      return maxLevels;\n    }\n    double bboxArea = shape.getBoundingBox().getArea();\n    if (bboxArea == 0) {\n      return maxLevels;\n    }\n    double avgSideLenFromCenter = Math.sqrt(bboxArea) / 2;\n    return getLevelForDistance(avgSideLenFromCenter * precision);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0df2b6e5bc4da595d109453e90eff8dc0ffeb8a","date":1329809096,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/base/src/java/org/apache/lucene/spatial/base/prefix/SpatialPrefixTree#getMaxLevelForPrecision(Shape,double).mjava","pathOld":"modules/spatial/strategy/src/java/org/apache/lucene/spatial/base/prefix/SpatialPrefixTree#getMaxLevelForPrecision(Shape,double).mjava","sourceNew":"  /**\n   * See {@link org.apache.lucene.spatial.base.query.SpatialArgs#getDistPrecision()}.\n   * A grid level looked up via {@link #getLevelForDistance(double)} is returned.\n   *\n   * @param shape\n   * @param precision 0-0.5\n   * @return 1-maxLevels\n   */\n  public int getMaxLevelForPrecision(Shape shape, double precision) {\n    if (precision < 0 || precision > 0.5) {\n      throw new IllegalArgumentException(\"Precision \" + precision + \" must be between [0-0.5]\");\n    }\n    if (precision == 0 || shape instanceof Point) {\n      return maxLevels;\n    }\n    double bboxArea = shape.getBoundingBox().getArea();\n    if (bboxArea == 0) {\n      return maxLevels;\n    }\n    double avgSideLenFromCenter = Math.sqrt(bboxArea) / 2;\n    return getLevelForDistance(avgSideLenFromCenter * precision);\n  }\n\n","sourceOld":"  /**\n   * See {@link org.apache.lucene.spatial.base.query.SpatialArgs#getDistPrecision()}.\n   * A grid level looked up via {@link #getLevelForDistance(double)} is returned.\n   *\n   * @param shape\n   * @param precision 0-0.5\n   * @return 1-maxLevels\n   */\n  public int getMaxLevelForPrecision(Shape shape, double precision) {\n    if (precision < 0 || precision > 0.5) {\n      throw new IllegalArgumentException(\"Precision \" + precision + \" must be between [0-0.5]\");\n    }\n    if (precision == 0 || shape instanceof Point) {\n      return maxLevels;\n    }\n    double bboxArea = shape.getBoundingBox().getArea();\n    if (bboxArea == 0) {\n      return maxLevels;\n    }\n    double avgSideLenFromCenter = Math.sqrt(bboxArea) / 2;\n    return getLevelForDistance(avgSideLenFromCenter * precision);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0df2b6e5bc4da595d109453e90eff8dc0ffeb8a":["c2047ba81272a0c4edeb11b1c7810ee23ba73502"]},"commit2Childs":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":["d0df2b6e5bc4da595d109453e90eff8dc0ffeb8a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2047ba81272a0c4edeb11b1c7810ee23ba73502","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d0df2b6e5bc4da595d109453e90eff8dc0ffeb8a":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","d0df2b6e5bc4da595d109453e90eff8dc0ffeb8a"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}