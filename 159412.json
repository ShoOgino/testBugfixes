{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#addSuppressed(Throwable,Throwable).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#addSuppressed(Throwable,Throwable).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/IOUtils#addSuppressed(Throwable,Throwable).mjava","sourceNew":"  /** adds a Throwable to the list of suppressed Exceptions of the first Throwable (if Java 7 is detected)\n   * @param exception this exception should get the suppressed one added\n   * @param suppressed the suppressed exception\n   */\n  private static final void addSuppressed(Throwable exception, Throwable suppressed) {\n    if (SUPPRESS_METHOD != null && exception != null && suppressed != null) {\n      try {\n        SUPPRESS_METHOD.invoke(exception, suppressed);\n      } catch (Exception e) {\n        // ignore any exceptions caused by invoking (e.g. security constraints)\n      }\n    }\n  }\n\n","sourceOld":"  /** adds a Throwable to the list of suppressed Exceptions of the first Throwable (if Java 7 is detected)\n   * @param exception this exception should get the suppressed one added\n   * @param suppressed the suppressed exception\n   */\n  private static final void addSuppressed(Throwable exception, Throwable suppressed) {\n    if (SUPPRESS_METHOD != null && exception != null && suppressed != null) {\n      try {\n        SUPPRESS_METHOD.invoke(exception, suppressed);\n      } catch (Exception e) {\n        // ignore any exceptions caused by invoking (e.g. security constraints)\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcc3f14899cdc45c5d2b0ada50798af081c9e045","date":1363612341,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#addSuppressed(Throwable,Throwable).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#addSuppressed(Throwable,Throwable).mjava","sourceNew":"  /** adds a Throwable to the list of suppressed Exceptions of the first Throwable\n   * @param exception this exception should get the suppressed one added\n   * @param suppressed the suppressed exception\n   */\n  private static final void addSuppressed(Throwable exception, Throwable suppressed) {\n    if (exception != null && suppressed != null) {\n      exception.addSuppressed(suppressed);\n    }\n  }\n\n","sourceOld":"  /** adds a Throwable to the list of suppressed Exceptions of the first Throwable (if Java 7 is detected)\n   * @param exception this exception should get the suppressed one added\n   * @param suppressed the suppressed exception\n   */\n  private static final void addSuppressed(Throwable exception, Throwable suppressed) {\n    if (SUPPRESS_METHOD != null && exception != null && suppressed != null) {\n      try {\n        SUPPRESS_METHOD.invoke(exception, suppressed);\n      } catch (Exception e) {\n        // ignore any exceptions caused by invoking (e.g. security constraints)\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666","date":1381263930,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#addSuppressed(Throwable,Throwable).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#addSuppressed(Throwable,Throwable).mjava","sourceNew":"  /** adds a Throwable to the list of suppressed Exceptions of the first Throwable\n   * @param exception this exception should get the suppressed one added\n   * @param suppressed the suppressed exception\n   */\n  private static void addSuppressed(Throwable exception, Throwable suppressed) {\n    if (exception != null && suppressed != null) {\n      exception.addSuppressed(suppressed);\n    }\n  }\n\n","sourceOld":"  /** adds a Throwable to the list of suppressed Exceptions of the first Throwable\n   * @param exception this exception should get the suppressed one added\n   * @param suppressed the suppressed exception\n   */\n  private static final void addSuppressed(Throwable exception, Throwable suppressed) {\n    if (exception != null && suppressed != null) {\n      exception.addSuppressed(suppressed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb04d6a79e860154f2a1c519790fc42f5a792915","date":1521621668,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#addSuppressed(Throwable,Throwable).mjava","sourceNew":null,"sourceOld":"  /** adds a Throwable to the list of suppressed Exceptions of the first Throwable\n   * @param exception this exception should get the suppressed one added\n   * @param suppressed the suppressed exception\n   */\n  private static void addSuppressed(Throwable exception, Throwable suppressed) {\n    if (exception != null && suppressed != null) {\n      exception.addSuppressed(suppressed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#addSuppressed(Throwable,Throwable).mjava","sourceNew":null,"sourceOld":"  /** adds a Throwable to the list of suppressed Exceptions of the first Throwable\n   * @param exception this exception should get the suppressed one added\n   * @param suppressed the suppressed exception\n   */\n  private static void addSuppressed(Throwable exception, Throwable suppressed) {\n    if (exception != null && suppressed != null) {\n      exception.addSuppressed(suppressed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666":["dcc3f14899cdc45c5d2b0ada50798af081c9e045"],"dcc3f14899cdc45c5d2b0ada50798af081c9e045":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666","bb04d6a79e860154f2a1c519790fc42f5a792915"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb04d6a79e860154f2a1c519790fc42f5a792915":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"]},"commit2Childs":{"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","bb04d6a79e860154f2a1c519790fc42f5a792915"],"dcc3f14899cdc45c5d2b0ada50798af081c9e045":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["dcc3f14899cdc45c5d2b0ada50798af081c9e045"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"bb04d6a79e860154f2a1c519790fc42f5a792915":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}