{"path":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.PendingBlock#PendingBlock(BytesRef,long,boolean,boolean,int,List[FST[BytesRef]]).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.PendingBlock#PendingBlock(BytesRef,long,boolean,boolean,int,List[FST[BytesRef]]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsWriter.PendingBlock#PendingBlock(BytesRef,long,boolean,boolean,int,List[FST[BytesRef]]).mjava","sourceNew":"    public PendingBlock(BytesRef prefix, long fp, boolean hasTerms, boolean isFloor, int floorLeadByte, List<FST<BytesRef>> subIndices) {\n      super(false);\n      this.prefix = prefix;\n      this.fp = fp;\n      this.hasTerms = hasTerms;\n      this.isFloor = isFloor;\n      this.floorLeadByte = floorLeadByte;\n      this.subIndices = subIndices;\n    }\n\n","sourceOld":"    public PendingBlock(BytesRef prefix, long fp, boolean hasTerms, boolean isFloor, int floorLeadByte, List<FST<BytesRef>> subIndices) {\n      super(false);\n      this.prefix = prefix;\n      this.fp = fp;\n      this.hasTerms = hasTerms;\n      this.isFloor = isFloor;\n      this.floorLeadByte = floorLeadByte;\n      this.subIndices = subIndices;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.PendingBlock#PendingBlock(BytesRef,long,boolean,boolean,int,List[FST[BytesRef]]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.PendingBlock#PendingBlock(BytesRef,long,boolean,boolean,int,List[FST[BytesRef]]).mjava","sourceNew":"    public PendingBlock(BytesRef prefix, long fp, boolean hasTerms, boolean isFloor, int floorLeadByte, List<FST<BytesRef>> subIndices) {\n      super(false);\n      this.prefix = prefix;\n      this.fp = fp;\n      this.hasTerms = hasTerms;\n      this.isFloor = isFloor;\n      this.floorLeadByte = floorLeadByte;\n      this.subIndices = subIndices;\n    }\n\n","sourceOld":"    public PendingBlock(BytesRef prefix, long fp, boolean hasTerms, boolean isFloor, int floorLeadByte, List<FST<BytesRef>> subIndices) {\n      super(false);\n      this.prefix = prefix;\n      this.fp = fp;\n      this.hasTerms = hasTerms;\n      this.isFloor = isFloor;\n      this.floorLeadByte = floorLeadByte;\n      this.subIndices = subIndices;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}