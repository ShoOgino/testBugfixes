{"path":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider.PerTermPayloadProcessor#getProcessor(String,BytesRef).mjava","commits":[{"id":"433777d1eaf9998136cd16515dc0e1eb26f5d535","date":1273839120,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider.PerTermPayloadProcessor#getProcessor(String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public PayloadProcessor getProcessor(String field, BytesRef text) throws IOException {\n      // don't process payloads of terms other than \"p:p1\"\n      if (!field.equals(\"p\") || !text.bytesEquals(new BytesRef(\"p1\"))) {\n        return null;\n      }\n      \n      // All other terms are processed the same way\n      return new DeletePayloadProcessor();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloadProcessorProvider.PerTermPayloadProcessor#getProcessor(String,BytesRef).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloadProcessorProvider.PerTermPayloadProcessor#getProcessor(String,BytesRef).mjava","sourceNew":"    @Override\n    public PayloadProcessor getProcessor(String field, BytesRef text) throws IOException {\n      // don't process payloads of terms other than \"p:p1\"\n      if (!field.equals(\"p\") || !text.bytesEquals(new BytesRef(\"p1\"))) {\n        return null;\n      }\n      \n      // All other terms are processed the same way\n      return new DeletePayloadProcessor();\n    }\n\n","sourceOld":"    @Override\n    public PayloadProcessor getProcessor(String field, BytesRef text) throws IOException {\n      // don't process payloads of terms other than \"p:p1\"\n      if (!field.equals(\"p\") || !text.bytesEquals(new BytesRef(\"p1\"))) {\n        return null;\n      }\n      \n      // All other terms are processed the same way\n      return new DeletePayloadProcessor();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["433777d1eaf9998136cd16515dc0e1eb26f5d535"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"433777d1eaf9998136cd16515dc0e1eb26f5d535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["433777d1eaf9998136cd16515dc0e1eb26f5d535"],"433777d1eaf9998136cd16515dc0e1eb26f5d535":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}