{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestPointQueryParser#testDoubles().mjava","commits":[{"id":"683242c67a3f6086bae8b1354748fcaa38edfbd5","date":1457575601,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestPointQueryParser#testDoubles().mjava","pathOld":"/dev/null","sourceNew":"  public void testDoubles() throws Exception {\n    StandardQueryParser parser = new StandardQueryParser();\n    Map<String,PointsConfig> pointsConfig = new HashMap<>();\n    pointsConfig.put(\"doubleField\", new PointsConfig(NumberFormat.getNumberInstance(Locale.ROOT), Double.class));\n    parser.setPointsConfigMap(pointsConfig);\n    \n    assertEquals(DoublePoint.newRangeQuery(\"doubleField\", 1.5D, 3.6D),\n                 parser.parse(\"doubleField:[1.5 TO 3.6]\", \"body\"));\n    assertEquals(DoublePoint.newRangeQuery(\"floatField\", 1.5D, 1.5D),\n                 parser.parse(\"doubleField:1.5\", \"body\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d2270976e274799939e1b5339eb6c16c7601dfda"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d2270976e274799939e1b5339eb6c16c7601dfda","date":1458767534,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestPointQueryParser#testDoubles().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestPointQueryParser#testDoubles().mjava","sourceNew":"  public void testDoubles() throws Exception {\n    StandardQueryParser parser = new StandardQueryParser();\n    Map<String,PointsConfig> pointsConfig = new HashMap<>();\n    pointsConfig.put(\"doubleField\", new PointsConfig(NumberFormat.getNumberInstance(Locale.ROOT), Double.class));\n    parser.setPointsConfigMap(pointsConfig);\n    \n    assertEquals(DoublePoint.newRangeQuery(\"doubleField\", 1.5D, 3.6D),\n                 parser.parse(\"doubleField:[1.5 TO 3.6]\", \"body\"));\n    assertEquals(DoublePoint.newRangeQuery(\"doubleField\", 1.5D, 1.5D),\n                 parser.parse(\"doubleField:1.5\", \"body\"));\n  }\n\n","sourceOld":"  public void testDoubles() throws Exception {\n    StandardQueryParser parser = new StandardQueryParser();\n    Map<String,PointsConfig> pointsConfig = new HashMap<>();\n    pointsConfig.put(\"doubleField\", new PointsConfig(NumberFormat.getNumberInstance(Locale.ROOT), Double.class));\n    parser.setPointsConfigMap(pointsConfig);\n    \n    assertEquals(DoublePoint.newRangeQuery(\"doubleField\", 1.5D, 3.6D),\n                 parser.parse(\"doubleField:[1.5 TO 3.6]\", \"body\"));\n    assertEquals(DoublePoint.newRangeQuery(\"floatField\", 1.5D, 1.5D),\n                 parser.parse(\"doubleField:1.5\", \"body\"));\n  }\n\n","bugFix":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2270976e274799939e1b5339eb6c16c7601dfda":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"683242c67a3f6086bae8b1354748fcaa38edfbd5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2270976e274799939e1b5339eb6c16c7601dfda"]},"commit2Childs":{"d2270976e274799939e1b5339eb6c16c7601dfda":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"683242c67a3f6086bae8b1354748fcaa38edfbd5":["d2270976e274799939e1b5339eb6c16c7601dfda"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}