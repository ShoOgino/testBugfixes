{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#DirectoryTaxonomyReader(DirectoryReader,DirectoryTaxonomyWriter,LRUHashMap[CategoryPath,Integer],LRUHashMap[Integer,CategoryPath],ParallelTaxonomyArrays).mjava","commits":[{"id":"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","date":1357499264,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#DirectoryTaxonomyReader(DirectoryReader,DirectoryTaxonomyWriter,LRUHashMap[CategoryPath,Integer],LRUHashMap[Integer,CategoryPath],ParallelTaxonomyArrays).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#DirectoryTaxonomyReader(DirectoryReader,DirectoryTaxonomyWriter,LRUHashMap[String,Integer],LRUHashMap[Integer,String],ParallelTaxonomyArrays).mjava","sourceNew":"  /**\n   * Called only from {@link #doOpenIfChanged()}. If the taxonomy has been\n   * recreated, you should pass {@code null} as the caches and parent/children\n   * arrays.\n   */\n  DirectoryTaxonomyReader(DirectoryReader indexReader, DirectoryTaxonomyWriter taxoWriter,\n      LRUHashMap<CategoryPath,Integer> ordinalCache, LRUHashMap<Integer,CategoryPath> categoryCache,\n      ParallelTaxonomyArrays taxoArrays) throws IOException {\n    this.indexReader = indexReader;\n    this.taxoWriter = taxoWriter;\n    this.taxoEpoch = taxoWriter == null ? -1 : taxoWriter.getTaxonomyEpoch();\n    \n    // use the same instance of the cache, note the protective code in getOrdinal and getPath\n    this.ordinalCache = ordinalCache == null ? new LRUHashMap<CategoryPath,Integer>(DEFAULT_CACHE_VALUE) : ordinalCache;\n    this.categoryCache = categoryCache == null ? new LRUHashMap<Integer,CategoryPath>(DEFAULT_CACHE_VALUE) : categoryCache;\n    \n    this.taxoArrays = taxoArrays != null ? new ParallelTaxonomyArrays(indexReader, taxoArrays) : null;\n  }\n\n","sourceOld":"  /**\n   * Called only from {@link #doOpenIfChanged()}. If the taxonomy has been\n   * recreated, you should pass {@code null} as the caches and parent/children\n   * arrays.\n   */\n  DirectoryTaxonomyReader(DirectoryReader indexReader, DirectoryTaxonomyWriter taxoWriter,\n      LRUHashMap<String,Integer> ordinalCache, LRUHashMap<Integer,String> categoryCache,\n      ParallelTaxonomyArrays taxoArrays) throws IOException {\n    this.indexReader = indexReader;\n    this.taxoWriter = taxoWriter;\n    this.taxoEpoch = taxoWriter == null ? -1 : taxoWriter.getTaxonomyEpoch();\n    \n    // use the same instance of the cache, note the protective code in getOrdinal and getPath\n    this.ordinalCache = ordinalCache == null ? new LRUHashMap<String,Integer>(DEFAULT_CACHE_VALUE) : ordinalCache;\n    this.categoryCache = categoryCache == null ? new LRUHashMap<Integer,String>(DEFAULT_CACHE_VALUE) : categoryCache;\n    \n    this.taxoArrays = taxoArrays != null ? new ParallelTaxonomyArrays(indexReader, taxoArrays) : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#DirectoryTaxonomyReader(DirectoryReader,DirectoryTaxonomyWriter,LRUHashMap[CategoryPath,Integer],LRUHashMap[Integer,CategoryPath],ParallelTaxonomyArrays).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called only from {@link #doOpenIfChanged()}. If the taxonomy has been\n   * recreated, you should pass {@code null} as the caches and parent/children\n   * arrays.\n   */\n  DirectoryTaxonomyReader(DirectoryReader indexReader, DirectoryTaxonomyWriter taxoWriter,\n      LRUHashMap<CategoryPath,Integer> ordinalCache, LRUHashMap<Integer,CategoryPath> categoryCache,\n      ParallelTaxonomyArrays taxoArrays) throws IOException {\n    this.indexReader = indexReader;\n    this.taxoWriter = taxoWriter;\n    this.taxoEpoch = taxoWriter == null ? -1 : taxoWriter.getTaxonomyEpoch();\n    \n    // use the same instance of the cache, note the protective code in getOrdinal and getPath\n    this.ordinalCache = ordinalCache == null ? new LRUHashMap<CategoryPath,Integer>(DEFAULT_CACHE_VALUE) : ordinalCache;\n    this.categoryCache = categoryCache == null ? new LRUHashMap<Integer,CategoryPath>(DEFAULT_CACHE_VALUE) : categoryCache;\n    \n    this.taxoArrays = taxoArrays != null ? new ParallelTaxonomyArrays(indexReader, taxoArrays) : null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2ae7e371df56ccde467b71db7e82066f05a5972","date":1363620258,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#DirectoryTaxonomyReader(DirectoryReader,DirectoryTaxonomyWriter,LRUHashMap[CategoryPath,Integer],LRUHashMap[Integer,CategoryPath],TaxonomyIndexArrays).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyReader#DirectoryTaxonomyReader(DirectoryReader,DirectoryTaxonomyWriter,LRUHashMap[CategoryPath,Integer],LRUHashMap[Integer,CategoryPath],ParallelTaxonomyArrays).mjava","sourceNew":"  /**\n   * Called only from {@link #doOpenIfChanged()}. If the taxonomy has been\n   * recreated, you should pass {@code null} as the caches and parent/children\n   * arrays.\n   */\n  DirectoryTaxonomyReader(DirectoryReader indexReader, DirectoryTaxonomyWriter taxoWriter,\n      LRUHashMap<CategoryPath,Integer> ordinalCache, LRUHashMap<Integer,CategoryPath> categoryCache,\n      TaxonomyIndexArrays taxoArrays) throws IOException {\n    this.indexReader = indexReader;\n    this.taxoWriter = taxoWriter;\n    this.taxoEpoch = taxoWriter == null ? -1 : taxoWriter.getTaxonomyEpoch();\n    \n    // use the same instance of the cache, note the protective code in getOrdinal and getPath\n    this.ordinalCache = ordinalCache == null ? new LRUHashMap<CategoryPath,Integer>(DEFAULT_CACHE_VALUE) : ordinalCache;\n    this.categoryCache = categoryCache == null ? new LRUHashMap<Integer,CategoryPath>(DEFAULT_CACHE_VALUE) : categoryCache;\n    \n    this.taxoArrays = taxoArrays != null ? new TaxonomyIndexArrays(indexReader, taxoArrays) : null;\n  }\n\n","sourceOld":"  /**\n   * Called only from {@link #doOpenIfChanged()}. If the taxonomy has been\n   * recreated, you should pass {@code null} as the caches and parent/children\n   * arrays.\n   */\n  DirectoryTaxonomyReader(DirectoryReader indexReader, DirectoryTaxonomyWriter taxoWriter,\n      LRUHashMap<CategoryPath,Integer> ordinalCache, LRUHashMap<Integer,CategoryPath> categoryCache,\n      ParallelTaxonomyArrays taxoArrays) throws IOException {\n    this.indexReader = indexReader;\n    this.taxoWriter = taxoWriter;\n    this.taxoEpoch = taxoWriter == null ? -1 : taxoWriter.getTaxonomyEpoch();\n    \n    // use the same instance of the cache, note the protective code in getOrdinal and getPath\n    this.ordinalCache = ordinalCache == null ? new LRUHashMap<CategoryPath,Integer>(DEFAULT_CACHE_VALUE) : ordinalCache;\n    this.categoryCache = categoryCache == null ? new LRUHashMap<Integer,CategoryPath>(DEFAULT_CACHE_VALUE) : categoryCache;\n    \n    this.taxoArrays = taxoArrays != null ? new ParallelTaxonomyArrays(indexReader, taxoArrays) : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f2ae7e371df56ccde467b71db7e82066f05a5972":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f2ae7e371df56ccde467b71db7e82066f05a5972"]},"commit2Childs":{"f2ae7e371df56ccde467b71db7e82066f05a5972":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["f2ae7e371df56ccde467b71db7e82066f05a5972","d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}