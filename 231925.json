{"path":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","pathOld":"solr/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","pathOld":"solr/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","pathOld":"solr/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e90f09c8e56fa270cdbf5adc76067c67249dac10","date":1330792705,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33d0ed80b7b47e34ad3ff033a77544563aba3085","date":1341244632,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(testDir, testDir + \"/control/data\", \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      JettySolrRunner j = createJetty(testDir, testDir + \"/jetty\" + i, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#createServers(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#createServers(int).mjava","sourceNew":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void createServers(int numShards) throws Exception {\n    // give everyone there own solrhome\n    File controlHome = new File(new File(getSolrHome()).getParentFile(), \"control\" + homeCount.incrementAndGet());\n    FileUtils.copyDirectory(new File(getSolrHome()), controlHome);\n    \n    System.setProperty(\"collection\", \"control_collection\");\n    controlJetty = createJetty(controlHome, null, \"control_shard\");\n    System.clearProperty(\"collection\");\n    controlClient = createNewSolrServer(controlJetty.getLocalPort());\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i <= numShards; i++) {\n      if (sb.length() > 0) sb.append(',');\n      // give everyone there own solrhome\n      File jettyHome = new File(new File(getSolrHome()).getParentFile(), \"jetty\" + homeCount.incrementAndGet());\n      FileUtils.copyDirectory(new File(getSolrHome()), jettyHome);\n      JettySolrRunner j = createJetty(jettyHome, null, \"shard\" + (i + 2));\n      jettys.add(j);\n      clients.add(createNewSolrServer(j.getLocalPort()));\n      sb.append(\"localhost:\").append(j.getLocalPort()).append(context);\n    }\n\n    shards = sb.toString();\n    \n    // now wait till we see the leader for each shard\n    for (int i = 1; i <= numShards; i++) {\n      ZkStateReader zkStateReader = ((SolrDispatchFilter) jettys.get(0)\n          .getDispatchFilter().getFilter()).getCores().getZkController()\n          .getZkStateReader();\n      zkStateReader.getLeaderProps(\"collection1\", \"shard\" + (i + 2), 15000);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"33d0ed80b7b47e34ad3ff033a77544563aba3085":["e90f09c8e56fa270cdbf5adc76067c67249dac10"],"e90f09c8e56fa270cdbf5adc76067c67249dac10":["c26f00b574427b55127e869b935845554afde1fa"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2c30e4c1cee08b3b229a77991882594fe7250b66"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","e90f09c8e56fa270cdbf5adc76067c67249dac10"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["e90f09c8e56fa270cdbf5adc76067c67249dac10","33d0ed80b7b47e34ad3ff033a77544563aba3085"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["33d0ed80b7b47e34ad3ff033a77544563aba3085","2c30e4c1cee08b3b229a77991882594fe7250b66"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["33d0ed80b7b47e34ad3ff033a77544563aba3085"]},"commit2Childs":{"33d0ed80b7b47e34ad3ff033a77544563aba3085":["fe33227f6805edab2036cbb80645cc4e2d1fa424","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"e90f09c8e56fa270cdbf5adc76067c67249dac10":["33d0ed80b7b47e34ad3ff033a77544563aba3085","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["e90f09c8e56fa270cdbf5adc76067c67249dac10","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"2c30e4c1cee08b3b229a77991882594fe7250b66":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d6f074e73200c07d54f242d3880a8da5a35ff97b","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}