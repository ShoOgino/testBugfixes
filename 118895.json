{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62dce719f7b1e83e0b4020f146a516e5cf618884","date":1286643323,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;    \n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n  }\n\n","bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;    \n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcbc12aa8147f5203ca283e7252ba4280d6ffd16","date":1305663400,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;\n    exhausted = false;\n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;    \n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","bugFix":["62dce719f7b1e83e0b4020f146a516e5cf618884"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;\n    exhausted = false;\n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;    \n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;\n    exhausted = false;\n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;    \n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fe387609beb4415c86e551adc1d9c7157f226d1","date":1334065803,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    nextInputStreamToken = null;\n    isNextInputStreamToken = false;\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;\n    exhausted = false;\n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;\n    exhausted = false;\n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","date":1334174049,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    nextInputStreamToken = null;\n    isNextInputStreamToken = false;\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;\n    exhausted = false;\n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;\n    exhausted = false;\n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    nextInputStreamToken = null;\n    isNextInputStreamToken = false;\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;\n    exhausted = false;\n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    super.reset();\n    gramSize.reset();\n    inputWindow.clear();\n    nextInputStreamToken = null;\n    isNextInputStreamToken = false;\n    numFillerTokensToInsert = 0;\n    isOutputHere = false;\n    noShingleOutput = true;\n    exhausted = false;\n    if (outputUnigramsIfNoShingles && ! outputUnigrams) {\n      // Fix up gramSize if minValue was reset for outputUnigramsIfNoShingles\n      gramSize.minValue = minShingleSize;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["62dce719f7b1e83e0b4020f146a516e5cf618884"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"62dce719f7b1e83e0b4020f146a516e5cf618884":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["62dce719f7b1e83e0b4020f146a516e5cf618884","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16","3fe387609beb4415c86e551adc1d9c7157f226d1"],"a3776dccca01c11e7046323cfad46a3b4a471233":["62dce719f7b1e83e0b4020f146a516e5cf618884","fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3fe387609beb4415c86e551adc1d9c7157f226d1":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["0f080986da691a3bba7b757f43ab72cdc82b57ce","62dce719f7b1e83e0b4020f146a516e5cf618884"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"fcbc12aa8147f5203ca283e7252ba4280d6ffd16":["c3a8a449466c1ff7ce2274fe73dab487256964b4","ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","a3776dccca01c11e7046323cfad46a3b4a471233","3fe387609beb4415c86e551adc1d9c7157f226d1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"62dce719f7b1e83e0b4020f146a516e5cf618884":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"3fe387609beb4415c86e551adc1d9c7157f226d1":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["62dce719f7b1e83e0b4020f146a516e5cf618884","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}