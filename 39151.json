{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","sourceNew":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","sourceNew":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7ee868f5038843b2550e6e996be578b90d65378","date":1309428052,"type":4,"author":"Doron Cohen","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","sourceNew":null,"sourceOld":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","sourceNew":null,"sourceOld":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData#toString().mjava","sourceNew":null,"sourceOld":"    @Override\n    public String toString()\n    {\n        StringBuilder res = new StringBuilder();\n        res.append(\"#-- ID: \").append(id).append(\", \").append(new Date()).append(\", heap=\").append(heap).append(\" --\\n\");\n        res.append(\"# source=\").append(source).append(\", directory=\").append(directory).append(\"\\n\");\n        res.append(\"# maxBufferedDocs=\").append(maxBufferedDocs).append(\", mergeFactor=\").append(mergeFactor);\n        res.append(\", compound=\").append(compound).append(\", optimize=\").append(optimize).append(\"\\n\");\n        if (queries != null)\n        {\n            res.append(QueryData.getLabels()).append(\"\\n\");\n            for (int i = 0; i < queries.length; i++)\n            {\n                res.append(\"# \").append(queries[i].toString()).append(\"\\n\");\n            }\n        }\n        return res.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e7ee868f5038843b2550e6e996be578b90d65378":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["ecc11368dc265bfdad90214f8bf5da99016ab1e2","e7ee868f5038843b2550e6e996be578b90d65378"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["ecc11368dc265bfdad90214f8bf5da99016ab1e2","e7ee868f5038843b2550e6e996be578b90d65378"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7ee868f5038843b2550e6e996be578b90d65378"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","e7ee868f5038843b2550e6e996be578b90d65378","d083e83f225b11e5fdd900e83d26ddb385b6955c","868da859b43505d9d2a023bfeae6dd0c795f5295","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"e7ee868f5038843b2550e6e996be578b90d65378":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","d083e83f225b11e5fdd900e83d26ddb385b6955c","868da859b43505d9d2a023bfeae6dd0c795f5295","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}