{"path":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector#GlobalOrdinalsWithScoreCollector(String,MultiDocValues.OrdinalMap,long,ScoreMode,int,int).mjava","commits":[{"id":"9a8ccb9d7a971a53ccd8bc3d8230590bca107c51","date":1431446228,"type":1,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector#GlobalOrdinalsWithScoreCollector(String,MultiDocValues.OrdinalMap,long,ScoreMode,int,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector#GlobalOrdinalsWithScoreCollector(String,MultiDocValues.OrdinalMap,long).mjava","sourceNew":"  GlobalOrdinalsWithScoreCollector(String field, MultiDocValues.OrdinalMap ordinalMap, long valueCount, ScoreMode scoreMode, int min, int max) {\n    if (valueCount > Integer.MAX_VALUE) {\n      // We simply don't support more than\n      throw new IllegalStateException(\"Can't collect more than [\" + Integer.MAX_VALUE + \"] ids\");\n    }\n    this.field = field;\n    this.doMinMax = !(min <= 0 && max == Integer.MAX_VALUE);\n    this.min = min;\n    this.max = max;;\n    this.ordinalMap = ordinalMap;\n    this.collectedOrds = new LongBitSet(valueCount);\n    if (scoreMode != ScoreMode.None) {\n      this.scores = new Scores(valueCount, unset());\n    } else {\n      this.scores = null;\n    }\n    if (scoreMode == ScoreMode.Avg || doMinMax) {\n      this.occurrences = new Occurrences(valueCount);\n    } else {\n      this.occurrences = null;\n    }\n  }\n\n","sourceOld":"  GlobalOrdinalsWithScoreCollector(String field, MultiDocValues.OrdinalMap ordinalMap, long valueCount) {\n    if (valueCount > Integer.MAX_VALUE) {\n      // We simply don't support more than\n      throw new IllegalStateException(\"Can't collect more than [\" + Integer.MAX_VALUE + \"] ids\");\n    }\n    this.field = field;\n    this.ordinalMap = ordinalMap;\n    this.collectedOrds = new LongBitSet(valueCount);\n    this.scores = new Scores(valueCount, unset());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"957c610636f393a85a38f1af670540028db13e6b","date":1500044517,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector#GlobalOrdinalsWithScoreCollector(String,OrdinalMap,long,ScoreMode,int,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector#GlobalOrdinalsWithScoreCollector(String,MultiDocValues.OrdinalMap,long,ScoreMode,int,int).mjava","sourceNew":"  GlobalOrdinalsWithScoreCollector(String field, OrdinalMap ordinalMap, long valueCount, ScoreMode scoreMode, int min, int max) {\n    if (valueCount > Integer.MAX_VALUE) {\n      // We simply don't support more than\n      throw new IllegalStateException(\"Can't collect more than [\" + Integer.MAX_VALUE + \"] ids\");\n    }\n    this.field = field;\n    this.doMinMax = !(min <= 0 && max == Integer.MAX_VALUE);\n    this.min = min;\n    this.max = max;;\n    this.ordinalMap = ordinalMap;\n    this.collectedOrds = new LongBitSet(valueCount);\n    if (scoreMode != ScoreMode.None) {\n      this.scores = new Scores(valueCount, unset());\n    } else {\n      this.scores = null;\n    }\n    if (scoreMode == ScoreMode.Avg || doMinMax) {\n      this.occurrences = new Occurrences(valueCount);\n    } else {\n      this.occurrences = null;\n    }\n  }\n\n","sourceOld":"  GlobalOrdinalsWithScoreCollector(String field, MultiDocValues.OrdinalMap ordinalMap, long valueCount, ScoreMode scoreMode, int min, int max) {\n    if (valueCount > Integer.MAX_VALUE) {\n      // We simply don't support more than\n      throw new IllegalStateException(\"Can't collect more than [\" + Integer.MAX_VALUE + \"] ids\");\n    }\n    this.field = field;\n    this.doMinMax = !(min <= 0 && max == Integer.MAX_VALUE);\n    this.min = min;\n    this.max = max;;\n    this.ordinalMap = ordinalMap;\n    this.collectedOrds = new LongBitSet(valueCount);\n    if (scoreMode != ScoreMode.None) {\n      this.scores = new Scores(valueCount, unset());\n    } else {\n      this.scores = null;\n    }\n    if (scoreMode == ScoreMode.Avg || doMinMax) {\n      this.occurrences = new Occurrences(valueCount);\n    } else {\n      this.occurrences = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaf90fc29510e72665ac7934f34c3d1c25efad64","date":1500354819,"type":5,"author":"Cao Manh Dat","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector#GlobalOrdinalsWithScoreCollector(String,OrdinalMap,long,ScoreMode,int,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector#GlobalOrdinalsWithScoreCollector(String,MultiDocValues.OrdinalMap,long,ScoreMode,int,int).mjava","sourceNew":"  GlobalOrdinalsWithScoreCollector(String field, OrdinalMap ordinalMap, long valueCount, ScoreMode scoreMode, int min, int max) {\n    if (valueCount > Integer.MAX_VALUE) {\n      // We simply don't support more than\n      throw new IllegalStateException(\"Can't collect more than [\" + Integer.MAX_VALUE + \"] ids\");\n    }\n    this.field = field;\n    this.doMinMax = !(min <= 0 && max == Integer.MAX_VALUE);\n    this.min = min;\n    this.max = max;;\n    this.ordinalMap = ordinalMap;\n    this.collectedOrds = new LongBitSet(valueCount);\n    if (scoreMode != ScoreMode.None) {\n      this.scores = new Scores(valueCount, unset());\n    } else {\n      this.scores = null;\n    }\n    if (scoreMode == ScoreMode.Avg || doMinMax) {\n      this.occurrences = new Occurrences(valueCount);\n    } else {\n      this.occurrences = null;\n    }\n  }\n\n","sourceOld":"  GlobalOrdinalsWithScoreCollector(String field, MultiDocValues.OrdinalMap ordinalMap, long valueCount, ScoreMode scoreMode, int min, int max) {\n    if (valueCount > Integer.MAX_VALUE) {\n      // We simply don't support more than\n      throw new IllegalStateException(\"Can't collect more than [\" + Integer.MAX_VALUE + \"] ids\");\n    }\n    this.field = field;\n    this.doMinMax = !(min <= 0 && max == Integer.MAX_VALUE);\n    this.min = min;\n    this.max = max;;\n    this.ordinalMap = ordinalMap;\n    this.collectedOrds = new LongBitSet(valueCount);\n    if (scoreMode != ScoreMode.None) {\n      this.scores = new Scores(valueCount, unset());\n    } else {\n      this.scores = null;\n    }\n    if (scoreMode == ScoreMode.Avg || doMinMax) {\n      this.occurrences = new Occurrences(valueCount);\n    } else {\n      this.occurrences = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"957c610636f393a85a38f1af670540028db13e6b":["9a8ccb9d7a971a53ccd8bc3d8230590bca107c51"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":["9a8ccb9d7a971a53ccd8bc3d8230590bca107c51","957c610636f393a85a38f1af670540028db13e6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["957c610636f393a85a38f1af670540028db13e6b"],"9a8ccb9d7a971a53ccd8bc3d8230590bca107c51":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"957c610636f393a85a38f1af670540028db13e6b":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a8ccb9d7a971a53ccd8bc3d8230590bca107c51"],"9a8ccb9d7a971a53ccd8bc3d8230590bca107c51":["957c610636f393a85a38f1af670540028db13e6b","aaf90fc29510e72665ac7934f34c3d1c25efad64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}