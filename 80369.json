{"path":"backwards/src/java/org/apache/lucene/search/MultiSearcher.MultiSearcherCallableNoSort#call().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/MultiSearcher.MultiSearcherCallableNoSort#call().mjava","pathOld":"/dev/null","sourceNew":"    public TopDocs call() throws IOException {\n      final TopDocs docs = searchable.search (weight, filter, nDocs);\n      final ScoreDoc[] scoreDocs = docs.scoreDocs;\n      for (int j = 0; j < scoreDocs.length; j++) { // merge scoreDocs into hq\n        final ScoreDoc scoreDoc = scoreDocs[j];\n        scoreDoc.doc += starts[i]; // convert doc \n        //it would be so nice if we had a thread-safe insert \n        lock.lock();\n        try {\n          if (scoreDoc == hq.insertWithOverflow(scoreDoc))\n            break;\n        } finally {\n          lock.unlock();\n        }\n      }\n      return docs;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/MultiSearcher.MultiSearcherCallableNoSort#call().mjava","pathOld":"backwards/src/java/org/apache/lucene/search/MultiSearcher.MultiSearcherCallableNoSort#call().mjava","sourceNew":"    public TopDocs call() throws IOException {\n      final TopDocs docs = searchable.search (weight, filter, nDocs);\n      final ScoreDoc[] scoreDocs = docs.scoreDocs;\n      for (int j = 0; j < scoreDocs.length; j++) { // merge scoreDocs into hq\n        final ScoreDoc scoreDoc = scoreDocs[j];\n        scoreDoc.doc += starts[i]; // convert doc \n        //it would be so nice if we had a thread-safe insert \n        lock.lock();\n        try {\n          if (scoreDoc == hq.insertWithOverflow(scoreDoc))\n            break;\n        } finally {\n          lock.unlock();\n        }\n      }\n      return docs;\n    }\n\n","sourceOld":"    public TopDocs call() throws IOException {\n      final TopDocs docs = searchable.search (weight, filter, nDocs);\n      final ScoreDoc[] scoreDocs = docs.scoreDocs;\n      for (int j = 0; j < scoreDocs.length; j++) { // merge scoreDocs into hq\n        final ScoreDoc scoreDoc = scoreDocs[j];\n        scoreDoc.doc += starts[i]; // convert doc \n        //it would be so nice if we had a thread-safe insert \n        lock.lock();\n        try {\n          if (scoreDoc == hq.insertWithOverflow(scoreDoc))\n            break;\n        } finally {\n          lock.unlock();\n        }\n      }\n      return docs;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}