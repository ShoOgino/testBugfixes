{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/HeatmapFacetCounterTest#countMatchingDocsAtLevel(Point,int).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/HeatmapFacetCounterTest#countMatchingDocsAtLevel(Point,int).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/HeatmapFacetCounterTest#countMatchingDocsAtLevel(Point,int).mjava","sourceNew":"  private int countMatchingDocsAtLevel(Point pt, int facetLevel) throws IOException {\n    // we use IntersectsPrefixTreeFilter directly so that we can specify the level to go to exactly.\n    RecursivePrefixTreeStrategy strategy = (RecursivePrefixTreeStrategy) this.strategy;\n    Query filter = new IntersectsPrefixTreeQuery(\n        pt, strategy.getFieldName(), grid, facetLevel, grid.getMaxLevels());\n    final TotalHitCountCollector collector = new TotalHitCountCollector();\n    indexSearcher.search(filter, collector);\n    cellsValidated++;\n    if (collector.getTotalHits() > 0) {\n      cellValidatedNonZero++;\n    }\n    return collector.getTotalHits();\n  }\n\n","sourceOld":"  private int countMatchingDocsAtLevel(Point pt, int facetLevel) throws IOException {\n    // we use IntersectsPrefixTreeFilter directly so that we can specify the level to go to exactly.\n    RecursivePrefixTreeStrategy strategy = (RecursivePrefixTreeStrategy) this.strategy;\n    Query filter = new IntersectsPrefixTreeQuery(\n        pt, strategy.getFieldName(), grid, facetLevel, grid.getMaxLevels());\n    final TotalHitCountCollector collector = new TotalHitCountCollector();\n    indexSearcher.search(filter, collector);\n    cellsValidated++;\n    if (collector.getTotalHits() > 0) {\n      cellValidatedNonZero++;\n    }\n    return collector.getTotalHits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/HeatmapFacetCounterTest#countMatchingDocsAtLevel(Point,int).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/HeatmapFacetCounterTest#countMatchingDocsAtLevel(Point,int).mjava","sourceNew":"  private int countMatchingDocsAtLevel(Point pt, int facetLevel) throws IOException {\n    // we use IntersectsPrefixTreeFilter directly so that we can specify the level to go to exactly.\n    RecursivePrefixTreeStrategy strategy = (RecursivePrefixTreeStrategy) this.strategy;\n    Query filter = new IntersectsPrefixTreeQuery(\n        pt, strategy.getFieldName(), grid, facetLevel, grid.getMaxLevels());\n    final TotalHitCountCollector collector = new TotalHitCountCollector();\n    indexSearcher.search(filter, collector);\n    cellsValidated++;\n    if (collector.getTotalHits() > 0) {\n      cellValidatedNonZero++;\n    }\n    return collector.getTotalHits();\n  }\n\n","sourceOld":"  private int countMatchingDocsAtLevel(Point pt, int facetLevel) throws IOException {\n    // we use IntersectsPrefixTreeFilter directly so that we can specify the level to go to exactly.\n    RecursivePrefixTreeStrategy strategy = (RecursivePrefixTreeStrategy) this.strategy;\n    Query filter = new IntersectsPrefixTreeQuery(\n        pt, strategy.getFieldName(), grid, facetLevel, grid.getMaxLevels());\n    final TotalHitCountCollector collector = new TotalHitCountCollector();\n    indexSearcher.search(filter, collector);\n    cellsValidated++;\n    if (collector.getTotalHits() > 0) {\n      cellValidatedNonZero++;\n    }\n    return collector.getTotalHits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}