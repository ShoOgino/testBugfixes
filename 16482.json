{"path":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","commits":[{"id":"5acb0ee59cc50caf85402e92d148fdb2af61bc19","date":1272929037,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","sourceOld":"    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","sourceOld":"    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","sourceOld":"    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["5acb0ee59cc50caf85402e92d148fdb2af61bc19","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["5acb0ee59cc50caf85402e92d148fdb2af61bc19","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}