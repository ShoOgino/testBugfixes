{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleJettyTest#testUtf8QueryPerf().mjava","commits":[{"id":"4e7ba4f223712927a09f4dfb65a4c261d07ccc54","date":1544513757,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleJettyTest#testUtf8QueryPerf().mjava","pathOld":"/dev/null","sourceNew":"  @Ignore\n  public void testUtf8QueryPerf() throws Exception {\n    HttpSolrClient client = (HttpSolrClient) getSolrClient();\n    client.deleteByQuery(\"*:*\");\n    client.commit();\n    List<SolrInputDocument> docs = new ArrayList<>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc2 = new SolrInputDocument();\n      doc2.addField(\"id\", \"\" + i);\n      doc2.addField(\"fld1_s\", \"1 value 1 value 1 value 1 value 1 value 1 value 1 value \");\n      doc2.addField(\"fld2_s\", \"2 value 2 value 2 value 2 value 2 value 2 value 2 value 2 value 2 value 2 value \");\n      doc2.addField(\"fld3_s\", \"3 value 3 value 3 value 3 value 3 value 3 value 3 value 3 value 3 value 3 value 3 value 3 value 3 value 3 value \");\n      doc2.addField(\"fld4_s\", \"4 value 4 value 4 value 4 value 4 value 4 value 4 value 4 value 4 value \");\n      doc2.addField(\"fld5_s\", \"5 value 5 value 5 value 5 value 5 value 5 value 5 value 5 value 5 value 5 value 5 value 5 value \");\n      docs.add(doc2);\n    }\n    client.add(docs);\n    client.commit();\n    QueryResponse rsp = client.query(new SolrQuery(\"*:*\"));\n    assertEquals(10, rsp.getResults().getNumFound());\n\n\n    client.setParser(new BinaryResponseParser() {\n      @Override\n      public NamedList<Object> processResponse(InputStream body, String encoding) {\n        try {\n          IOUtils.skip(body, 1024 * 1000);\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        return rsp.getResponse();\n      }\n    });\n\n\n    runQueries(client, 1000, true);\n    /*BinaryResponseWriter.useUtf8CharSeq = false;\n    System.out.println(\"BinaryResponseWriter.useUtf8CharSeq = \" + BinaryResponseWriter.useUtf8CharSeq);\n    runQueries(client, 10000, false);\n    BinaryResponseWriter.useUtf8CharSeq = true;\n    System.out.println(\"BinaryResponseWriter.useUtf8CharSeq = \" + BinaryResponseWriter.useUtf8CharSeq);*/\n    runQueries(client, 10000, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e7ba4f223712927a09f4dfb65a4c261d07ccc54":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e7ba4f223712927a09f4dfb65a4c261d07ccc54"]},"commit2Childs":{"4e7ba4f223712927a09f4dfb65a4c261d07ccc54":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e7ba4f223712927a09f4dfb65a4c261d07ccc54"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}