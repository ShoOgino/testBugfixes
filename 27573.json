{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestMultiRangeQueries#testDoublePointMultiRangeQuery().mjava","commits":[{"id":"bc29621aa343e88cbc47d168a1d556972a8d3851","date":1564149243,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestMultiRangeQueries#testDoublePointMultiRangeQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testDoublePointMultiRangeQuery() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    double[] firstPoint = {112.4, 296.2, 512.7};\n    double[] secondPoint = {219.3, 514.7, 624.2};\n\n    Document doc = new Document();\n    doc.add(new DoublePoint(\"point\", firstPoint));\n    iw.addDocument(doc);\n    iw.commit();\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", secondPoint));\n    iw.addDocument(doc);\n    iw.commit();\n\n    // One range matches\n    double[] firstLowerRange= {111.3, 294.2, 502.8};\n    double[] firstUpperRange = {117.3, 301.4, 514.5};\n\n    double[] secondLowerRange = {15.3, 4.5, 415.7};\n    double[] secondUpperRange = {200.2, 402.4, 583.6};\n\n    DoublePointMultiRangeBuilder builder = new DoublePointMultiRangeBuilder(\"point\", 3);\n\n    builder.add(firstLowerRange, firstUpperRange);\n    builder.add(secondLowerRange, secondUpperRange);\n\n    Query query = builder.build();\n\n    IndexReader reader = iw.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    iw.close();\n\n    assertEquals(searcher.count(query), 1);\n\n    // Both ranges match\n    double[] firstMatchingLowerRange= {111.3, 294.2, 502.4};\n    double[] firstMatchingUpperRange = {117.6, 301.8, 514.2};\n\n    double[] secondMatchingLowerRange = {212.4, 512.3, 415.7};\n    double[] secondMatchingUpperRange = {228.3, 538.7, 647.1};\n\n    DoublePointMultiRangeBuilder builder2 = new DoublePointMultiRangeBuilder(\"point\", 3);\n\n    builder2.add(firstMatchingLowerRange, firstMatchingUpperRange);\n    builder2.add(secondMatchingLowerRange, secondMatchingUpperRange);\n\n    query = builder2.build();\n\n    assertEquals(searcher.count(query), 2);\n\n    // None match\n    double[] nonMatchingFirstRangeLower = {1.3, 3.5, 2.7};\n    double[] nonMatchingFirstRangeUpper = {5.2, 8.3, 7.8};\n\n    double[] nonMatchingSecondRangeLower = {11246.3, 19388.7, 21248.4};\n    double[] nonMatchingSecondRangeUpper = {13242.9, 20214.2, 23236.5};\n    DoublePointMultiRangeBuilder builder3 = new DoublePointMultiRangeBuilder(\"point\", 3);\n\n    builder3.add(nonMatchingFirstRangeLower, nonMatchingFirstRangeUpper);\n    builder3.add(nonMatchingSecondRangeLower, nonMatchingSecondRangeUpper);\n\n    query = builder3.build();\n\n    assertEquals(searcher.count(query), 0);\n\n    // Lower point is equal to a point\n    double[] firstEqualLowerRange= {112.4, 296.2, 512.7};\n    double[] firstEqualUpperRange = {117.6, 301.8, 514.2};\n\n    double[] secondEqualLowerRange = {219.3, 514.7, 624.2};\n    double[] secondEqualUpperRange = {228.3, 538.7, 647.1};\n\n    DoublePointMultiRangeBuilder builder4 = new DoublePointMultiRangeBuilder(\"point\", 3);\n\n    builder4.add(firstEqualLowerRange, firstEqualUpperRange);\n    builder4.add(secondEqualLowerRange, secondEqualUpperRange);\n\n    query = builder4.build();\n\n    assertEquals(searcher.count(query), 2);\n\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf9da1d4a2d2f04a562030d1d46862163f506f62","date":1566205061,"type":0,"author":"Jim Ferenczi","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestMultiRangeQueries#testDoublePointMultiRangeQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testDoublePointMultiRangeQuery() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    double[] firstPoint = {112.4, 296.2, 512.7};\n    double[] secondPoint = {219.3, 514.7, 624.2};\n\n    Document doc = new Document();\n    doc.add(new DoublePoint(\"point\", firstPoint));\n    iw.addDocument(doc);\n    iw.commit();\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", secondPoint));\n    iw.addDocument(doc);\n    iw.commit();\n\n    // One range matches\n    double[] firstLowerRange= {111.3, 294.2, 502.8};\n    double[] firstUpperRange = {117.3, 301.4, 514.5};\n\n    double[] secondLowerRange = {15.3, 4.5, 415.7};\n    double[] secondUpperRange = {200.2, 402.4, 583.6};\n\n    DoublePointMultiRangeBuilder builder = new DoublePointMultiRangeBuilder(\"point\", 3);\n\n    builder.add(firstLowerRange, firstUpperRange);\n    builder.add(secondLowerRange, secondUpperRange);\n\n    Query query = builder.build();\n\n    IndexReader reader = iw.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    iw.close();\n\n    assertEquals(searcher.count(query), 1);\n\n    // Both ranges match\n    double[] firstMatchingLowerRange= {111.3, 294.2, 502.4};\n    double[] firstMatchingUpperRange = {117.6, 301.8, 514.2};\n\n    double[] secondMatchingLowerRange = {212.4, 512.3, 415.7};\n    double[] secondMatchingUpperRange = {228.3, 538.7, 647.1};\n\n    DoublePointMultiRangeBuilder builder2 = new DoublePointMultiRangeBuilder(\"point\", 3);\n\n    builder2.add(firstMatchingLowerRange, firstMatchingUpperRange);\n    builder2.add(secondMatchingLowerRange, secondMatchingUpperRange);\n\n    query = builder2.build();\n\n    assertEquals(searcher.count(query), 2);\n\n    // None match\n    double[] nonMatchingFirstRangeLower = {1.3, 3.5, 2.7};\n    double[] nonMatchingFirstRangeUpper = {5.2, 8.3, 7.8};\n\n    double[] nonMatchingSecondRangeLower = {11246.3, 19388.7, 21248.4};\n    double[] nonMatchingSecondRangeUpper = {13242.9, 20214.2, 23236.5};\n    DoublePointMultiRangeBuilder builder3 = new DoublePointMultiRangeBuilder(\"point\", 3);\n\n    builder3.add(nonMatchingFirstRangeLower, nonMatchingFirstRangeUpper);\n    builder3.add(nonMatchingSecondRangeLower, nonMatchingSecondRangeUpper);\n\n    query = builder3.build();\n\n    assertEquals(searcher.count(query), 0);\n\n    // Lower point is equal to a point\n    double[] firstEqualLowerRange= {112.4, 296.2, 512.7};\n    double[] firstEqualUpperRange = {117.6, 301.8, 514.2};\n\n    double[] secondEqualLowerRange = {219.3, 514.7, 624.2};\n    double[] secondEqualUpperRange = {228.3, 538.7, 647.1};\n\n    DoublePointMultiRangeBuilder builder4 = new DoublePointMultiRangeBuilder(\"point\", 3);\n\n    builder4.add(firstEqualLowerRange, firstEqualUpperRange);\n    builder4.add(secondEqualLowerRange, secondEqualUpperRange);\n\n    query = builder4.build();\n\n    assertEquals(searcher.count(query), 2);\n\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc29621aa343e88cbc47d168a1d556972a8d3851":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf9da1d4a2d2f04a562030d1d46862163f506f62":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bc29621aa343e88cbc47d168a1d556972a8d3851"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf9da1d4a2d2f04a562030d1d46862163f506f62"]},"commit2Childs":{"bc29621aa343e88cbc47d168a1d556972a8d3851":["cf9da1d4a2d2f04a562030d1d46862163f506f62"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc29621aa343e88cbc47d168a1d556972a8d3851","cf9da1d4a2d2f04a562030d1d46862163f506f62"],"cf9da1d4a2d2f04a562030d1d46862163f506f62":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}