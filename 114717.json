{"path":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","commits":[{"id":"2062967ab57824b59d116b38d53d2058ac7e4592","date":1367320813,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Create a LongRange. */\n  public LongRange(String label, long min, boolean minInclusive, long max, boolean maxInclusive) {\n    super(label);\n    this.min = min;\n    this.max = max;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive && min != Long.MAX_VALUE) {\n      min++;\n    }\n\n    if (!maxInclusive && max != Long.MIN_VALUE) {\n      max--;\n    }\n\n    this.minIncl = min;\n    this.maxIncl = max;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1800b996d8677670482a071dcb7a48b08c423ace","1800b996d8677670482a071dcb7a48b08c423ace"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/LongRange#LongRange(String,long,boolean,long,boolean).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","sourceNew":"  /** Create a LongRange. */\n  public LongRange(String label, long min, boolean minInclusive, long max, boolean maxInclusive) {\n    super(label);\n    this.min = min;\n    this.max = max;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive && min != Long.MAX_VALUE) {\n      min++;\n    }\n\n    if (!maxInclusive && max != Long.MIN_VALUE) {\n      max--;\n    }\n\n    this.minIncl = min;\n    this.maxIncl = max;\n  }\n\n","sourceOld":"  /** Create a LongRange. */\n  public LongRange(String label, long min, boolean minInclusive, long max, boolean maxInclusive) {\n    super(label);\n    this.min = min;\n    this.max = max;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive && min != Long.MAX_VALUE) {\n      min++;\n    }\n\n    if (!maxInclusive && max != Long.MIN_VALUE) {\n      max--;\n    }\n\n    this.minIncl = min;\n    this.maxIncl = max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/LongRange#LongRange(String,long,boolean,long,boolean).mjava","sourceNew":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n    this.min = minIn;\n    this.max = maxIn;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.minIncl = minIn;\n    this.maxIncl = maxIn;\n  }\n\n","sourceOld":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n    this.min = minIn;\n    this.max = maxIn;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.minIncl = minIn;\n    this.maxIncl = maxIn;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","sourceNew":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n    this.min = minIn;\n    this.max = maxIn;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.minIncl = minIn;\n    this.maxIncl = maxIn;\n  }\n\n","sourceOld":"  /** Create a LongRange. */\n  public LongRange(String label, long min, boolean minInclusive, long max, boolean maxInclusive) {\n    super(label);\n    this.min = min;\n    this.max = max;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive && min != Long.MAX_VALUE) {\n      min++;\n    }\n\n    if (!maxInclusive && max != Long.MIN_VALUE) {\n      max--;\n    }\n\n    this.minIncl = min;\n    this.maxIncl = max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1800b996d8677670482a071dcb7a48b08c423ace","date":1456955558,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","sourceNew":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.min = minIn;\n    this.max = maxIn;\n  }\n\n","sourceOld":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n    this.min = minIn;\n    this.max = maxIn;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.minIncl = minIn;\n    this.maxIncl = maxIn;\n  }\n\n","bugFix":["6119ef33e3fbd8582640c23b3f5b3fbb22ba8d30","2062967ab57824b59d116b38d53d2058ac7e4592"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c422e924212367b334b4938f1fd3e44438e88c40","date":1456962933,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","sourceNew":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.min = minIn;\n    this.max = maxIn;\n  }\n\n","sourceOld":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n    this.min = minIn;\n    this.max = maxIn;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.minIncl = minIn;\n    this.maxIncl = maxIn;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/range/LongRange#LongRange(String,long,boolean,long,boolean).mjava","sourceNew":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.min = minIn;\n    this.max = maxIn;\n  }\n\n","sourceOld":"  /** Create a LongRange. */\n  public LongRange(String label, long minIn, boolean minInclusive, long maxIn, boolean maxInclusive) {\n    super(label);\n    this.min = minIn;\n    this.max = maxIn;\n    this.minInclusive = minInclusive;\n    this.maxInclusive = maxInclusive;\n\n    if (!minInclusive) {\n      if (minIn != Long.MAX_VALUE) {\n        minIn++;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (!maxInclusive) {\n      if (maxIn != Long.MIN_VALUE) {\n        maxIn--;\n      } else {\n        failNoMatch();\n      }\n    }\n\n    if (minIn > maxIn) {\n      failNoMatch();\n    }\n\n    this.minIncl = minIn;\n    this.maxIncl = maxIn;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2062967ab57824b59d116b38d53d2058ac7e4592":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["2062967ab57824b59d116b38d53d2058ac7e4592"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["d33e19a97046248623a7591aeaa6547233fd15e2"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["2062967ab57824b59d116b38d53d2058ac7e4592","4edc984f0f4ac77c37e48ace2932f780f888453c"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["3cc728b07df73b197e6d940d27f9b08b63918f13","c422e924212367b334b4938f1fd3e44438e88c40"],"c422e924212367b334b4938f1fd3e44438e88c40":["3cc728b07df73b197e6d940d27f9b08b63918f13","1800b996d8677670482a071dcb7a48b08c423ace"],"1800b996d8677670482a071dcb7a48b08c423ace":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"2062967ab57824b59d116b38d53d2058ac7e4592":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d33e19a97046248623a7591aeaa6547233fd15e2":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2062967ab57824b59d116b38d53d2058ac7e4592"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","c422e924212367b334b4938f1fd3e44438e88c40","1800b996d8677670482a071dcb7a48b08c423ace"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c422e924212367b334b4938f1fd3e44438e88c40":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"1800b996d8677670482a071dcb7a48b08c423ace":["c422e924212367b334b4938f1fd3e44438e88c40"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}