{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","commits":[{"id":"32f306edd62f81390a6e263e8b913f089f3e98a1","date":1305615519,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,Healthiness,long).mjava","sourceNew":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      IndexWriterConfig config) {\n    this.stallControl = new DocumentsWriterStallControl();\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;;\n    this.config = config;\n    this.documentsWriter = documentsWriter;\n  }\n\n","sourceOld":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      Healthiness healthiness, long hardMaxBytesPerDWPT) {\n    this.healthiness = healthiness;\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = hardMaxBytesPerDWPT;\n    this.documentsWriter = documentsWriter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,Healthiness,long).mjava","sourceNew":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      IndexWriterConfig config) {\n    this.stallControl = new DocumentsWriterStallControl();\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;;\n    this.config = config;\n    this.documentsWriter = documentsWriter;\n  }\n\n","sourceOld":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      Healthiness healthiness, long hardMaxBytesPerDWPT) {\n    this.healthiness = healthiness;\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = hardMaxBytesPerDWPT;\n    this.documentsWriter = documentsWriter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","pathOld":"/dev/null","sourceNew":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      IndexWriterConfig config) {\n    this.stallControl = new DocumentsWriterStallControl();\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;;\n    this.config = config;\n    this.documentsWriter = documentsWriter;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27","date":1306166545,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","sourceNew":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      IndexWriterConfig config) {\n    this.stallControl = new DocumentsWriterStallControl();\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    this.config = config;\n    this.documentsWriter = documentsWriter;\n  }\n\n","sourceOld":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      IndexWriterConfig config) {\n    this.stallControl = new DocumentsWriterStallControl();\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;;\n    this.config = config;\n    this.documentsWriter = documentsWriter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","sourceNew":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      IndexWriterConfig config) {\n    this.stallControl = new DocumentsWriterStallControl();\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    this.config = config;\n    this.documentsWriter = documentsWriter;\n  }\n\n","sourceOld":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      IndexWriterConfig config) {\n    this.stallControl = new DocumentsWriterStallControl();\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;;\n    this.config = config;\n    this.documentsWriter = documentsWriter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","sourceNew":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      IndexWriterConfig config) {\n    this.stallControl = new DocumentsWriterStallControl();\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    this.config = config;\n    this.documentsWriter = documentsWriter;\n  }\n\n","sourceOld":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      IndexWriterConfig config) {\n    this.stallControl = new DocumentsWriterStallControl();\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;;\n    this.config = config;\n    this.documentsWriter = documentsWriter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#DocumentsWriterFlushControl(DocumentsWriter,IndexWriterConfig).mjava","sourceNew":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      IndexWriterConfig config) {\n    this.stallControl = new DocumentsWriterStallControl();\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    this.config = config;\n    this.documentsWriter = documentsWriter;\n  }\n\n","sourceOld":"  DocumentsWriterFlushControl(DocumentsWriter documentsWriter,\n      IndexWriterConfig config) {\n    this.stallControl = new DocumentsWriterStallControl();\n    this.perThreadPool = documentsWriter.perThreadPool;\n    this.flushPolicy = documentsWriter.flushPolicy;\n    this.hardMaxBytesPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    this.config = config;\n    this.documentsWriter = documentsWriter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27":["32f306edd62f81390a6e263e8b913f089f3e98a1"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32f306edd62f81390a6e263e8b913f089f3e98a1"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32f306edd62f81390a6e263e8b913f089f3e98a1"],"32f306edd62f81390a6e263e8b913f089f3e98a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["c3a8a449466c1ff7ce2274fe73dab487256964b4","2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"]},"commit2Childs":{"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","3a119bbc8703c10faa329ec201c654b3a35a1e3e","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"32f306edd62f81390a6e263e8b913f089f3e98a1":["2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","32f306edd62f81390a6e263e8b913f089f3e98a1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}