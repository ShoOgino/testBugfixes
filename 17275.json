{"path":"lucene/src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":2,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","pathOld":"backwards/src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","sourceNew":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.termLength(), 5);\n    assertEquals(t.term(), \"hello\");\n    t.setTermBuffer(\"hello2\");\n    assertEquals(t.termLength(), 6);\n    assertEquals(t.term(), \"hello2\");\n    t.setTermBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.term(), \"hello3\");\n\n    char[] buffer = t.termBuffer();\n    buffer[1] = 'o';\n    assertEquals(t.term(), \"hollo3\");\n  }\n\n","sourceOld":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.termLength(), 5);\n    assertEquals(t.term(), \"hello\");\n    t.setTermBuffer(\"hello2\");\n    assertEquals(t.termLength(), 6);\n    assertEquals(t.term(), \"hello2\");\n    t.setTermBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.term(), \"hello3\");\n\n    char[] buffer = t.termBuffer();\n    buffer[1] = 'o';\n    assertEquals(t.term(), \"hollo3\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3ba5366b7a7f11839e9c824b23007f048d002f6","date":1275996475,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","sourceNew":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.length(), 5);\n    assertEquals(t.toString(), \"hello\");\n    t.setEmpty().append(\"hello2\");\n    assertEquals(t.length(), 6);\n    assertEquals(t.toString(), \"hello2\");\n    t.copyBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.toString(), \"hello3\");\n\n    char[] buffer = t.buffer();\n    buffer[1] = 'o';\n    assertEquals(t.toString(), \"hollo3\");\n  }\n\n","sourceOld":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.termLength(), 5);\n    assertEquals(t.term(), \"hello\");\n    t.setTermBuffer(\"hello2\");\n    assertEquals(t.termLength(), 6);\n    assertEquals(t.term(), \"hello2\");\n    t.setTermBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.term(), \"hello3\");\n\n    char[] buffer = t.termBuffer();\n    buffer[1] = 'o';\n    assertEquals(t.term(), \"hollo3\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestToken#testMixedStringArray().mjava","sourceNew":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.length(), 5);\n    assertEquals(t.toString(), \"hello\");\n    t.setEmpty().append(\"hello2\");\n    assertEquals(t.length(), 6);\n    assertEquals(t.toString(), \"hello2\");\n    t.copyBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.toString(), \"hello3\");\n\n    char[] buffer = t.buffer();\n    buffer[1] = 'o';\n    assertEquals(t.toString(), \"hollo3\");\n  }\n\n","sourceOld":"  public void testMixedStringArray() throws Exception {\n    Token t = new Token(\"hello\", 0, 5);\n    assertEquals(t.length(), 5);\n    assertEquals(t.toString(), \"hello\");\n    t.setEmpty().append(\"hello2\");\n    assertEquals(t.length(), 6);\n    assertEquals(t.toString(), \"hello2\");\n    t.copyBuffer(\"hello3\".toCharArray(), 0, 6);\n    assertEquals(t.toString(), \"hello3\");\n\n    char[] buffer = t.buffer();\n    buffer[1] = 'o';\n    assertEquals(t.toString(), \"hollo3\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c3ba5366b7a7f11839e9c824b23007f048d002f6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c3ba5366b7a7f11839e9c824b23007f048d002f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c3ba5366b7a7f11839e9c824b23007f048d002f6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c3ba5366b7a7f11839e9c824b23007f048d002f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}