{"path":"lucene/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","commits":[{"id":"b3cefb552695b930cefe85eb7880cccdb914be6b","date":1275316631,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  @Test\n  public void testExistingSnapshots() throws Exception {\n    int numSnapshots = 3;\n    Directory dir = new MockRAMDirectory();\n    PersistentSnapshotDeletionPolicy psdp = (PersistentSnapshotDeletionPolicy) getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(psdp));\n    prepareIndexAndSnapshots(psdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n    psdp.close();\n\n    // Re-initialize and verify snapshots were persisted\n    psdp = new PersistentSnapshotDeletionPolicy(\n        new KeepOnlyLastCommitDeletionPolicy(), snapshotDir, OpenMode.APPEND,\n        TEST_VERSION_CURRENT);\n    new IndexWriter(dir, getConfig(psdp)).close();\n\n    assertSnapshotExists(dir, psdp, numSnapshots);\n    assertEquals(numSnapshots, psdp.getSnapshots().size());\n    psdp.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","sourceNew":"  @Override\n  @Test\n  public void testExistingSnapshots() throws Exception {\n    Random random = newRandom();\n    int numSnapshots = 3;\n    Directory dir = new MockRAMDirectory();\n    PersistentSnapshotDeletionPolicy psdp = (PersistentSnapshotDeletionPolicy) getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, psdp));\n    prepareIndexAndSnapshots(psdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n    psdp.close();\n\n    // Re-initialize and verify snapshots were persisted\n    psdp = new PersistentSnapshotDeletionPolicy(\n        new KeepOnlyLastCommitDeletionPolicy(), snapshotDir, OpenMode.APPEND,\n        TEST_VERSION_CURRENT);\n    new IndexWriter(dir, getConfig(random, psdp)).close();\n\n    assertSnapshotExists(dir, psdp, numSnapshots);\n    assertEquals(numSnapshots, psdp.getSnapshots().size());\n    psdp.close();\n  }\n\n","sourceOld":"  @Override\n  @Test\n  public void testExistingSnapshots() throws Exception {\n    int numSnapshots = 3;\n    Directory dir = new MockRAMDirectory();\n    PersistentSnapshotDeletionPolicy psdp = (PersistentSnapshotDeletionPolicy) getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(psdp));\n    prepareIndexAndSnapshots(psdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n    psdp.close();\n\n    // Re-initialize and verify snapshots were persisted\n    psdp = new PersistentSnapshotDeletionPolicy(\n        new KeepOnlyLastCommitDeletionPolicy(), snapshotDir, OpenMode.APPEND,\n        TEST_VERSION_CURRENT);\n    new IndexWriter(dir, getConfig(psdp)).close();\n\n    assertSnapshotExists(dir, psdp, numSnapshots);\n    assertEquals(numSnapshots, psdp.getSnapshots().size());\n    psdp.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","sourceNew":"  @Override\n  @Test\n  public void testExistingSnapshots() throws Exception {\n    int numSnapshots = 3;\n    Directory dir = newDirectory(random);\n    PersistentSnapshotDeletionPolicy psdp = (PersistentSnapshotDeletionPolicy) getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, psdp));\n    prepareIndexAndSnapshots(psdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n    psdp.close();\n\n    // Re-initialize and verify snapshots were persisted\n    psdp = new PersistentSnapshotDeletionPolicy(\n        new KeepOnlyLastCommitDeletionPolicy(), snapshotDir, OpenMode.APPEND,\n        TEST_VERSION_CURRENT);\n    new IndexWriter(dir, getConfig(random, psdp)).close();\n\n    assertSnapshotExists(dir, psdp, numSnapshots);\n    assertEquals(numSnapshots, psdp.getSnapshots().size());\n    psdp.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Override\n  @Test\n  public void testExistingSnapshots() throws Exception {\n    Random random = newRandom();\n    int numSnapshots = 3;\n    Directory dir = new MockRAMDirectory();\n    PersistentSnapshotDeletionPolicy psdp = (PersistentSnapshotDeletionPolicy) getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, psdp));\n    prepareIndexAndSnapshots(psdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n    psdp.close();\n\n    // Re-initialize and verify snapshots were persisted\n    psdp = new PersistentSnapshotDeletionPolicy(\n        new KeepOnlyLastCommitDeletionPolicy(), snapshotDir, OpenMode.APPEND,\n        TEST_VERSION_CURRENT);\n    new IndexWriter(dir, getConfig(random, psdp)).close();\n\n    assertSnapshotExists(dir, psdp, numSnapshots);\n    assertEquals(numSnapshots, psdp.getSnapshots().size());\n    psdp.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","sourceNew":"  @Override\n  @Test\n  public void testExistingSnapshots() throws Exception {\n    int numSnapshots = 3;\n    Directory dir = newDirectory();\n    PersistentSnapshotDeletionPolicy psdp = (PersistentSnapshotDeletionPolicy) getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, psdp));\n    prepareIndexAndSnapshots(psdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n    psdp.close();\n\n    // Re-initialize and verify snapshots were persisted\n    psdp = new PersistentSnapshotDeletionPolicy(\n        new KeepOnlyLastCommitDeletionPolicy(), snapshotDir, OpenMode.APPEND,\n        TEST_VERSION_CURRENT);\n    new IndexWriter(dir, getConfig(random, psdp)).close();\n\n    assertSnapshotExists(dir, psdp, numSnapshots);\n    assertEquals(numSnapshots, psdp.getSnapshots().size());\n    psdp.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Override\n  @Test\n  public void testExistingSnapshots() throws Exception {\n    int numSnapshots = 3;\n    Directory dir = newDirectory(random);\n    PersistentSnapshotDeletionPolicy psdp = (PersistentSnapshotDeletionPolicy) getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, psdp));\n    prepareIndexAndSnapshots(psdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n    psdp.close();\n\n    // Re-initialize and verify snapshots were persisted\n    psdp = new PersistentSnapshotDeletionPolicy(\n        new KeepOnlyLastCommitDeletionPolicy(), snapshotDir, OpenMode.APPEND,\n        TEST_VERSION_CURRENT);\n    new IndexWriter(dir, getConfig(random, psdp)).close();\n\n    assertSnapshotExists(dir, psdp, numSnapshots);\n    assertEquals(numSnapshots, psdp.getSnapshots().size());\n    psdp.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","sourceNew":"  @Override\n  @Test\n  public void testExistingSnapshots() throws Exception {\n    int numSnapshots = 3;\n    Directory dir = newDirectory();\n    PersistentSnapshotDeletionPolicy psdp = (PersistentSnapshotDeletionPolicy) getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, psdp));\n    prepareIndexAndSnapshots(psdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n    psdp.close();\n\n    // Re-initialize and verify snapshots were persisted\n    psdp = new PersistentSnapshotDeletionPolicy(\n        new KeepOnlyLastCommitDeletionPolicy(), snapshotDir, OpenMode.APPEND,\n        TEST_VERSION_CURRENT);\n    new IndexWriter(dir, getConfig(random, psdp)).close();\n\n    assertSnapshotExists(dir, psdp, numSnapshots);\n    assertEquals(numSnapshots, psdp.getSnapshots().size());\n    psdp.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Override\n  @Test\n  public void testExistingSnapshots() throws Exception {\n    int numSnapshots = 3;\n    Directory dir = new MockRAMDirectory();\n    PersistentSnapshotDeletionPolicy psdp = (PersistentSnapshotDeletionPolicy) getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(psdp));\n    prepareIndexAndSnapshots(psdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n    psdp.close();\n\n    // Re-initialize and verify snapshots were persisted\n    psdp = new PersistentSnapshotDeletionPolicy(\n        new KeepOnlyLastCommitDeletionPolicy(), snapshotDir, OpenMode.APPEND,\n        TEST_VERSION_CURRENT);\n    new IndexWriter(dir, getConfig(psdp)).close();\n\n    assertSnapshotExists(dir, psdp, numSnapshots);\n    assertEquals(numSnapshots, psdp.getSnapshots().size());\n    psdp.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPersistentSnapshotDeletionPolicy#testExistingSnapshots().mjava","sourceNew":"  @Override\n  @Test\n  public void testExistingSnapshots() throws Exception {\n    int numSnapshots = 3;\n    Directory dir = newDirectory();\n    PersistentSnapshotDeletionPolicy psdp = (PersistentSnapshotDeletionPolicy) getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, psdp));\n    prepareIndexAndSnapshots(psdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n    psdp.close();\n\n    // Re-initialize and verify snapshots were persisted\n    psdp = new PersistentSnapshotDeletionPolicy(\n        new KeepOnlyLastCommitDeletionPolicy(), snapshotDir, OpenMode.APPEND,\n        TEST_VERSION_CURRENT);\n    new IndexWriter(dir, getConfig(random, psdp)).close();\n\n    assertSnapshotExists(dir, psdp, numSnapshots);\n    assertEquals(numSnapshots, psdp.getSnapshots().size());\n    psdp.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Override\n  @Test\n  public void testExistingSnapshots() throws Exception {\n    int numSnapshots = 3;\n    Directory dir = newDirectory();\n    PersistentSnapshotDeletionPolicy psdp = (PersistentSnapshotDeletionPolicy) getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, psdp));\n    prepareIndexAndSnapshots(psdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n    psdp.close();\n\n    // Re-initialize and verify snapshots were persisted\n    psdp = new PersistentSnapshotDeletionPolicy(\n        new KeepOnlyLastCommitDeletionPolicy(), snapshotDir, OpenMode.APPEND,\n        TEST_VERSION_CURRENT);\n    new IndexWriter(dir, getConfig(random, psdp)).close();\n\n    assertSnapshotExists(dir, psdp, numSnapshots);\n    assertEquals(numSnapshots, psdp.getSnapshots().size());\n    psdp.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"b3cefb552695b930cefe85eb7880cccdb914be6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["b3cefb552695b930cefe85eb7880cccdb914be6b","1f653cfcf159baeaafe5d01682a911e95bba4012"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["b3cefb552695b930cefe85eb7880cccdb914be6b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b3cefb552695b930cefe85eb7880cccdb914be6b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3cefb552695b930cefe85eb7880cccdb914be6b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}