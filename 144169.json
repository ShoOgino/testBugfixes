{"path":"contrib/db/src/java/org/apache/lucene/store/db/DbIndexOutput#writeBytes(byte[],int).mjava","commits":[{"id":"7b2b5b310b2a013b9dbcea87b9e51860112a89c4","date":1115064360,"type":1,"author":"Andreas Vajda","isMerge":false,"pathNew":"contrib/db/src/java/org/apache/lucene/store/db/DbIndexOutput#writeBytes(byte[],int).mjava","pathOld":"contrib/db/src/java/org/apache/lucene/store/db/DbOutputStream#flushBuffer(byte[],int).mjava","sourceNew":"    public void writeBytes(byte[] b, int len)\n        throws IOException\n    {\n        int blockPos = (int) (position & BLOCK_MASK);\n        int offset = 0;\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(directory);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(directory);\n            blockPos = 0;\n        }\n\n        if (len > 0)\n        {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","sourceOld":"    protected void flushBuffer(byte[] b, int len)\n        throws IOException\n    {\n        int blockPos = (int) (position & BLOCK_MASK);\n        int offset = 0;\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(blocks, txn, flags);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(blocks, txn, flags);\n            blockPos = 0;\n        }\n\n        if (len > 0)\n        {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87fc6f159522f12e67225691468cbf3d11be8590","date":1136423057,"type":5,"author":"Andreas Vajda","isMerge":false,"pathNew":"contrib/db/bdb/src/java/org/apache/lucene/store/db/DbIndexOutput#writeBytes(byte[],int).mjava","pathOld":"contrib/db/src/java/org/apache/lucene/store/db/DbIndexOutput#writeBytes(byte[],int).mjava","sourceNew":"    public void writeBytes(byte[] b, int len)\n        throws IOException\n    {\n        int blockPos = (int) (position & BLOCK_MASK);\n        int offset = 0;\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(directory);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(directory);\n            blockPos = 0;\n        }\n\n        if (len > 0)\n        {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","sourceOld":"    public void writeBytes(byte[] b, int len)\n        throws IOException\n    {\n        int blockPos = (int) (position & BLOCK_MASK);\n        int offset = 0;\n\n        while (blockPos + len >= BLOCK_LEN) {\n            int blockLen = BLOCK_LEN - blockPos;\n\n            System.arraycopy(b, offset, block.getData(), blockPos, blockLen);\n            block.put(directory);\n\n            len -= blockLen;\n            offset += blockLen;\n            position += blockLen;\n\n            block.seek(position);\n            block.get(directory);\n            blockPos = 0;\n        }\n\n        if (len > 0)\n        {\n            System.arraycopy(b, offset, block.getData(), blockPos, len);\n            position += len;\n        }\n\n        if (position > length)\n            length = position;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b2b5b310b2a013b9dbcea87b9e51860112a89c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87fc6f159522f12e67225691468cbf3d11be8590":["7b2b5b310b2a013b9dbcea87b9e51860112a89c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["87fc6f159522f12e67225691468cbf3d11be8590"]},"commit2Childs":{"7b2b5b310b2a013b9dbcea87b9e51860112a89c4":["87fc6f159522f12e67225691468cbf3d11be8590"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b2b5b310b2a013b9dbcea87b9e51860112a89c4"],"87fc6f159522f12e67225691468cbf3d11be8590":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}