{"path":"src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","commits":[{"id":"52ce7e961a8217faac8128e3c8fe67819eefdde9","date":1201979043,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @return    An iterator over the sorted integers.\n   */\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      int bytePos = 0;\n      int lastInt = 0;\n      \n      private void advance() {\n        // See org.apache.lucene.store.IndexInput.readVInt()\n        byte b = bytes[bytePos++];\n        lastInt += b & VB1;\n        for (int s = BIT_SHIFT; (b & ~VB1) != 0; s += BIT_SHIFT) {\n          b = bytes[bytePos++];\n          lastInt += (b & VB1) << s;\n        }\n      }\n      \n      public int doc() {return lastInt;}\n      \n      public boolean next() {\n        if (bytePos >= lastBytePos) {\n          return false;\n        } else {\n          advance();\n          return true;\n        }\n      }\n\n      public boolean skipTo(int docNr) {\n        while (bytePos < lastBytePos) {\n          advance();\n          if (lastInt >= docNr) { // No skipping to docNr available.\n            return true;\n          }\n        }\n        return false;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","pathOld":"src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","sourceNew":"  /**\n   * @return    An iterator over the sorted integers.\n   */\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      int bytePos = 0;\n      int lastInt = 0;\n      int doc = -1;\n      \n      private void advance() {\n        // See org.apache.lucene.store.IndexInput.readVInt()\n        byte b = bytes[bytePos++];\n        lastInt += b & VB1;\n        for (int s = BIT_SHIFT; (b & ~VB1) != 0; s += BIT_SHIFT) {\n          b = bytes[bytePos++];\n          lastInt += (b & VB1) << s;\n        }\n      }\n      \n      /** @deprecated use {@link #docID()} instead. */\n      public int doc() {return lastInt;}\n      \n      public int docID() {\n        return doc;\n      }\n      \n      /** @deprecated use {@link #nextDoc()} instead. */\n      public boolean next() {\n        return nextDoc() != NO_MORE_DOCS;\n      }\n\n      public int nextDoc() {\n        if (bytePos >= lastBytePos) {\n          doc = NO_MORE_DOCS;\n        } else {\n          advance();\n          doc = lastInt;\n        }\n        return doc;\n      }\n      \n      /** @deprecated use {@link #advance(int)} instead. */\n      public boolean skipTo(int docNr) {\n        return advance(docNr) != NO_MORE_DOCS;\n      }\n      \n      public int advance(int target) {\n        while (bytePos < lastBytePos) {\n          advance();\n          if (lastInt >= target) {\n            return doc = lastInt;\n          }\n        }\n        return doc = NO_MORE_DOCS;\n      }\n      \n    };\n  }\n\n","sourceOld":"  /**\n   * @return    An iterator over the sorted integers.\n   */\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      int bytePos = 0;\n      int lastInt = 0;\n      \n      private void advance() {\n        // See org.apache.lucene.store.IndexInput.readVInt()\n        byte b = bytes[bytePos++];\n        lastInt += b & VB1;\n        for (int s = BIT_SHIFT; (b & ~VB1) != 0; s += BIT_SHIFT) {\n          b = bytes[bytePos++];\n          lastInt += (b & VB1) << s;\n        }\n      }\n      \n      public int doc() {return lastInt;}\n      \n      public boolean next() {\n        if (bytePos >= lastBytePos) {\n          return false;\n        } else {\n          advance();\n          return true;\n        }\n      }\n\n      public boolean skipTo(int docNr) {\n        while (bytePos < lastBytePos) {\n          advance();\n          if (lastInt >= docNr) { // No skipping to docNr available.\n            return true;\n          }\n        }\n        return false;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"deea6cc1ba78d8fc8f75be6514b6c5219cfb8c10","date":1255233602,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","pathOld":"src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","sourceNew":"  /**\n   * @return    An iterator over the sorted integers.\n   */\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      int bytePos = 0;\n      int lastInt = 0;\n      int doc = -1;\n      \n      private void advance() {\n        // See org.apache.lucene.store.IndexInput.readVInt()\n        byte b = bytes[bytePos++];\n        lastInt += b & VB1;\n        for (int s = BIT_SHIFT; (b & ~VB1) != 0; s += BIT_SHIFT) {\n          b = bytes[bytePos++];\n          lastInt += (b & VB1) << s;\n        }\n      }\n      \n      public int docID() {\n        return doc;\n      }\n      \n      public int nextDoc() {\n        if (bytePos >= lastBytePos) {\n          doc = NO_MORE_DOCS;\n        } else {\n          advance();\n          doc = lastInt;\n        }\n        return doc;\n      }\n      \n      public int advance(int target) {\n        while (bytePos < lastBytePos) {\n          advance();\n          if (lastInt >= target) {\n            return doc = lastInt;\n          }\n        }\n        return doc = NO_MORE_DOCS;\n      }\n      \n    };\n  }\n\n","sourceOld":"  /**\n   * @return    An iterator over the sorted integers.\n   */\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      int bytePos = 0;\n      int lastInt = 0;\n      int doc = -1;\n      \n      private void advance() {\n        // See org.apache.lucene.store.IndexInput.readVInt()\n        byte b = bytes[bytePos++];\n        lastInt += b & VB1;\n        for (int s = BIT_SHIFT; (b & ~VB1) != 0; s += BIT_SHIFT) {\n          b = bytes[bytePos++];\n          lastInt += (b & VB1) << s;\n        }\n      }\n      \n      /** @deprecated use {@link #docID()} instead. */\n      public int doc() {return lastInt;}\n      \n      public int docID() {\n        return doc;\n      }\n      \n      /** @deprecated use {@link #nextDoc()} instead. */\n      public boolean next() {\n        return nextDoc() != NO_MORE_DOCS;\n      }\n\n      public int nextDoc() {\n        if (bytePos >= lastBytePos) {\n          doc = NO_MORE_DOCS;\n        } else {\n          advance();\n          doc = lastInt;\n        }\n        return doc;\n      }\n      \n      /** @deprecated use {@link #advance(int)} instead. */\n      public boolean skipTo(int docNr) {\n        return advance(docNr) != NO_MORE_DOCS;\n      }\n      \n      public int advance(int target) {\n        while (bytePos < lastBytePos) {\n          advance();\n          if (lastInt >= target) {\n            return doc = lastInt;\n          }\n        }\n        return doc = NO_MORE_DOCS;\n      }\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d62b1ed69b2d54a65df6f993499b39562d1dc1f9","date":1255700561,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","pathOld":"src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","sourceNew":"  /**\n   * @return    An iterator over the sorted integers.\n   */\n  @Override\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      int bytePos = 0;\n      int lastInt = 0;\n      int doc = -1;\n      \n      private void advance() {\n        // See org.apache.lucene.store.IndexInput.readVInt()\n        byte b = bytes[bytePos++];\n        lastInt += b & VB1;\n        for (int s = BIT_SHIFT; (b & ~VB1) != 0; s += BIT_SHIFT) {\n          b = bytes[bytePos++];\n          lastInt += (b & VB1) << s;\n        }\n      }\n      \n      public int docID() {\n        return doc;\n      }\n      \n      public int nextDoc() {\n        if (bytePos >= lastBytePos) {\n          doc = NO_MORE_DOCS;\n        } else {\n          advance();\n          doc = lastInt;\n        }\n        return doc;\n      }\n      \n      public int advance(int target) {\n        while (bytePos < lastBytePos) {\n          advance();\n          if (lastInt >= target) {\n            return doc = lastInt;\n          }\n        }\n        return doc = NO_MORE_DOCS;\n      }\n      \n    };\n  }\n\n","sourceOld":"  /**\n   * @return    An iterator over the sorted integers.\n   */\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      int bytePos = 0;\n      int lastInt = 0;\n      int doc = -1;\n      \n      private void advance() {\n        // See org.apache.lucene.store.IndexInput.readVInt()\n        byte b = bytes[bytePos++];\n        lastInt += b & VB1;\n        for (int s = BIT_SHIFT; (b & ~VB1) != 0; s += BIT_SHIFT) {\n          b = bytes[bytePos++];\n          lastInt += (b & VB1) << s;\n        }\n      }\n      \n      public int docID() {\n        return doc;\n      }\n      \n      public int nextDoc() {\n        if (bytePos >= lastBytePos) {\n          doc = NO_MORE_DOCS;\n        } else {\n          advance();\n          doc = lastInt;\n        }\n        return doc;\n      }\n      \n      public int advance(int target) {\n        while (bytePos < lastBytePos) {\n          advance();\n          if (lastInt >= target) {\n            return doc = lastInt;\n          }\n        }\n        return doc = NO_MORE_DOCS;\n      }\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","pathOld":"src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","sourceNew":"  /**\n   * @return    An iterator over the sorted integers.\n   */\n  @Override\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      int bytePos = 0;\n      int lastInt = 0;\n      int doc = -1;\n      \n      private void advance() {\n        // See org.apache.lucene.store.IndexInput.readVInt()\n        byte b = bytes[bytePos++];\n        lastInt += b & VB1;\n        for (int s = BIT_SHIFT; (b & ~VB1) != 0; s += BIT_SHIFT) {\n          b = bytes[bytePos++];\n          lastInt += (b & VB1) << s;\n        }\n      }\n      \n      @Override\n      public int docID() {\n        return doc;\n      }\n      \n      @Override\n      public int nextDoc() {\n        if (bytePos >= lastBytePos) {\n          doc = NO_MORE_DOCS;\n        } else {\n          advance();\n          doc = lastInt;\n        }\n        return doc;\n      }\n      \n      @Override\n      public int advance(int target) {\n        while (bytePos < lastBytePos) {\n          advance();\n          if (lastInt >= target) {\n            return doc = lastInt;\n          }\n        }\n        return doc = NO_MORE_DOCS;\n      }\n      \n    };\n  }\n\n","sourceOld":"  /**\n   * @return    An iterator over the sorted integers.\n   */\n  @Override\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      int bytePos = 0;\n      int lastInt = 0;\n      int doc = -1;\n      \n      private void advance() {\n        // See org.apache.lucene.store.IndexInput.readVInt()\n        byte b = bytes[bytePos++];\n        lastInt += b & VB1;\n        for (int s = BIT_SHIFT; (b & ~VB1) != 0; s += BIT_SHIFT) {\n          b = bytes[bytePos++];\n          lastInt += (b & VB1) << s;\n        }\n      }\n      \n      public int docID() {\n        return doc;\n      }\n      \n      public int nextDoc() {\n        if (bytePos >= lastBytePos) {\n          doc = NO_MORE_DOCS;\n        } else {\n          advance();\n          doc = lastInt;\n        }\n        return doc;\n      }\n      \n      public int advance(int target) {\n        while (bytePos < lastBytePos) {\n          advance();\n          if (lastInt >= target) {\n            return doc = lastInt;\n          }\n        }\n        return doc = NO_MORE_DOCS;\n      }\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","pathOld":"src/java/org/apache/lucene/util/SortedVIntList#iterator().mjava","sourceNew":"  /**\n   * @return    An iterator over the sorted integers.\n   */\n  @Override\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      int bytePos = 0;\n      int lastInt = 0;\n      int doc = -1;\n      \n      private void advance() {\n        // See org.apache.lucene.store.IndexInput.readVInt()\n        byte b = bytes[bytePos++];\n        lastInt += b & VB1;\n        for (int s = BIT_SHIFT; (b & ~VB1) != 0; s += BIT_SHIFT) {\n          b = bytes[bytePos++];\n          lastInt += (b & VB1) << s;\n        }\n      }\n      \n      @Override\n      public int docID() {\n        return doc;\n      }\n      \n      @Override\n      public int nextDoc() {\n        if (bytePos >= lastBytePos) {\n          doc = NO_MORE_DOCS;\n        } else {\n          advance();\n          doc = lastInt;\n        }\n        return doc;\n      }\n      \n      @Override\n      public int advance(int target) {\n        while (bytePos < lastBytePos) {\n          advance();\n          if (lastInt >= target) {\n            return doc = lastInt;\n          }\n        }\n        return doc = NO_MORE_DOCS;\n      }\n      \n    };\n  }\n\n","sourceOld":"  /**\n   * @return    An iterator over the sorted integers.\n   */\n  @Override\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      int bytePos = 0;\n      int lastInt = 0;\n      int doc = -1;\n      \n      private void advance() {\n        // See org.apache.lucene.store.IndexInput.readVInt()\n        byte b = bytes[bytePos++];\n        lastInt += b & VB1;\n        for (int s = BIT_SHIFT; (b & ~VB1) != 0; s += BIT_SHIFT) {\n          b = bytes[bytePos++];\n          lastInt += (b & VB1) << s;\n        }\n      }\n      \n      @Override\n      public int docID() {\n        return doc;\n      }\n      \n      @Override\n      public int nextDoc() {\n        if (bytePos >= lastBytePos) {\n          doc = NO_MORE_DOCS;\n        } else {\n          advance();\n          doc = lastInt;\n        }\n        return doc;\n      }\n      \n      @Override\n      public int advance(int target) {\n        while (bytePos < lastBytePos) {\n          advance();\n          if (lastInt >= target) {\n            return doc = lastInt;\n          }\n        }\n        return doc = NO_MORE_DOCS;\n      }\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d62b1ed69b2d54a65df6f993499b39562d1dc1f9":["deea6cc1ba78d8fc8f75be6514b6c5219cfb8c10"],"30a558487f2298c2c19ceca9103c1b6865d64708":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"8a9e385641d717e641408d8fbbc62be8fc766357":["d62b1ed69b2d54a65df6f993499b39562d1dc1f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"deea6cc1ba78d8fc8f75be6514b6c5219cfb8c10":["30a558487f2298c2c19ceca9103c1b6865d64708"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"d62b1ed69b2d54a65df6f993499b39562d1dc1f9":["8a9e385641d717e641408d8fbbc62be8fc766357"],"30a558487f2298c2c19ceca9103c1b6865d64708":["deea6cc1ba78d8fc8f75be6514b6c5219cfb8c10"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["30a558487f2298c2c19ceca9103c1b6865d64708"],"deea6cc1ba78d8fc8f75be6514b6c5219cfb8c10":["d62b1ed69b2d54a65df6f993499b39562d1dc1f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}