{"path":"solr/core/src/java/org/apache/solr/search/facet/RelatednessAgg.Merger#compareTo(FacetModule.FacetSortableMerger,FacetRequest.SortDirection).mjava","commits":[{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/RelatednessAgg.Merger#compareTo(FacetModule.FacetSortableMerger,FacetRequest.SortDirection).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/RelatednessAgg.Merger#compareTo(FacetSortableMerger,FacetRequest.SortDirection).mjava","sourceNew":"    @Override\n    public int compareTo(FacetModule.FacetSortableMerger other, FacetRequest.SortDirection direction) {\n      // NOTE: regardless of the SortDirection hint, we want normal comparison of the BucketData\n      \n      assert other instanceof Merger;\n      Merger that = (Merger)other;\n      return mergedData.compareTo(that.mergedData);\n    }\n\n","sourceOld":"    @Override\n    public int compareTo(FacetSortableMerger other, FacetRequest.SortDirection direction) {\n      // NOTE: regardless of the SortDirection hint, we want normal comparison of the BucketData\n      \n      assert other instanceof Merger;\n      Merger that = (Merger)other;\n      return mergedData.compareTo(that.mergedData);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"]},"commit2Childs":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}