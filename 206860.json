{"path":"lucene/core/src/java/org/apache/lucene/search/TermRangeTermsEnum#accept(BytesRef).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermRangeTermsEnum#accept(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermRangeTermsEnum#accept(BytesRef).mjava","sourceNew":"  @Override\n  protected AcceptStatus accept(BytesRef term) {\n    if (!this.includeLower && term.equals(lowerBytesRef))\n      return AcceptStatus.NO;\n    \n    // Use this field's default sort ordering\n    if (upperBytesRef != null) {\n      final int cmp = termComp.compare(upperBytesRef, term);\n      /*\n       * if beyond the upper term, or is exclusive and this is equal to\n       * the upper term, break out\n       */\n      if ((cmp < 0) ||\n          (!includeUpper && cmp==0)) {\n        return AcceptStatus.END;\n      }\n    }\n\n    return AcceptStatus.YES;\n  }\n\n","sourceOld":"  @Override\n  protected AcceptStatus accept(BytesRef term) {\n    if (!this.includeLower && term.equals(lowerBytesRef))\n      return AcceptStatus.NO;\n    \n    // Use this field's default sort ordering\n    if (upperBytesRef != null) {\n      final int cmp = termComp.compare(upperBytesRef, term);\n      /*\n       * if beyond the upper term, or is exclusive and this is equal to\n       * the upper term, break out\n       */\n      if ((cmp < 0) ||\n          (!includeUpper && cmp==0)) {\n        return AcceptStatus.END;\n      }\n    }\n\n    return AcceptStatus.YES;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","date":1379624229,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermRangeTermsEnum#accept(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermRangeTermsEnum#accept(BytesRef).mjava","sourceNew":"  @Override\n  protected AcceptStatus accept(BytesRef term) {\n    if (!this.includeLower && term.equals(lowerBytesRef))\n      return AcceptStatus.NO;\n    \n    // Use this field's default sort ordering\n    if (upperBytesRef != null) {\n      final int cmp = upperBytesRef.compareTo(term);\n      /*\n       * if beyond the upper term, or is exclusive and this is equal to\n       * the upper term, break out\n       */\n      if ((cmp < 0) ||\n          (!includeUpper && cmp==0)) {\n        return AcceptStatus.END;\n      }\n    }\n\n    return AcceptStatus.YES;\n  }\n\n","sourceOld":"  @Override\n  protected AcceptStatus accept(BytesRef term) {\n    if (!this.includeLower && term.equals(lowerBytesRef))\n      return AcceptStatus.NO;\n    \n    // Use this field's default sort ordering\n    if (upperBytesRef != null) {\n      final int cmp = termComp.compare(upperBytesRef, term);\n      /*\n       * if beyond the upper term, or is exclusive and this is equal to\n       * the upper term, break out\n       */\n      if ((cmp < 0) ||\n          (!includeUpper && cmp==0)) {\n        return AcceptStatus.END;\n      }\n    }\n\n    return AcceptStatus.YES;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e8715d826e588419327562287d5d6a8040d63d6","date":1427987148,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermRangeTermsEnum#accept(BytesRef).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected AcceptStatus accept(BytesRef term) {\n    if (!this.includeLower && term.equals(lowerBytesRef))\n      return AcceptStatus.NO;\n    \n    // Use this field's default sort ordering\n    if (upperBytesRef != null) {\n      final int cmp = upperBytesRef.compareTo(term);\n      /*\n       * if beyond the upper term, or is exclusive and this is equal to\n       * the upper term, break out\n       */\n      if ((cmp < 0) ||\n          (!includeUpper && cmp==0)) {\n        return AcceptStatus.END;\n      }\n    }\n\n    return AcceptStatus.YES;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermRangeTermsEnum#accept(BytesRef).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected AcceptStatus accept(BytesRef term) {\n    if (!this.includeLower && term.equals(lowerBytesRef))\n      return AcceptStatus.NO;\n    \n    // Use this field's default sort ordering\n    if (upperBytesRef != null) {\n      final int cmp = upperBytesRef.compareTo(term);\n      /*\n       * if beyond the upper term, or is exclusive and this is equal to\n       * the upper term, break out\n       */\n      if ((cmp < 0) ||\n          (!includeUpper && cmp==0)) {\n        return AcceptStatus.END;\n      }\n    }\n\n    return AcceptStatus.YES;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","3e8715d826e588419327562287d5d6a8040d63d6"],"3e8715d826e588419327562287d5d6a8040d63d6":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e8715d826e588419327562287d5d6a8040d63d6"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["d2638f781be724518ff6c2263d14a48cf6e68017","3e8715d826e588419327562287d5d6a8040d63d6"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"3e8715d826e588419327562287d5d6a8040d63d6":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}