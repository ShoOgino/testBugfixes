{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","pathOld":"contrib/snowball/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","sourceNew":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    TermAttribute termAtt = filter.getAttribute(TermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.term());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","sourceOld":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    TermAttribute termAtt = filter.getAttribute(TermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.term());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#testFilterTokens().mjava","sourceNew":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    TermAttribute termAtt = filter.getAttribute(TermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.term());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","sourceOld":"  public void testFilterTokens() throws Exception {\n    SnowballFilter filter = new SnowballFilter(new TestTokenStream(), \"English\");\n    TermAttribute termAtt = filter.getAttribute(TermAttribute.class);\n    OffsetAttribute offsetAtt = filter.getAttribute(OffsetAttribute.class);\n    TypeAttribute typeAtt = filter.getAttribute(TypeAttribute.class);\n    PayloadAttribute payloadAtt = filter.getAttribute(PayloadAttribute.class);\n    PositionIncrementAttribute posIncAtt = filter.getAttribute(PositionIncrementAttribute.class);\n    FlagsAttribute flagsAtt = filter.getAttribute(FlagsAttribute.class);\n    \n    filter.incrementToken();\n\n    assertEquals(\"accent\", termAtt.term());\n    assertEquals(2, offsetAtt.startOffset());\n    assertEquals(7, offsetAtt.endOffset());\n    assertEquals(\"wrd\", typeAtt.type());\n    assertEquals(3, posIncAtt.getPositionIncrement());\n    assertEquals(77, flagsAtt.getFlags());\n    assertEquals(new Payload(new byte[]{0,1,2,3}), payloadAtt.getPayload());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}