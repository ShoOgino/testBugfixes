{"path":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#newLoader(SolrQueryRequest,UpdateRequestProcessor).mjava","commits":[{"id":"8d0c1d69778439d99fc635727129e99480e64f06","date":1232050859,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#newLoader(SolrQueryRequest,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"  protected ContentStreamLoader newLoader(SolrQueryRequest req, final UpdateRequestProcessor processor) {\n    return new ContentStreamLoader() {\n      public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n        parseAndLoadDocs(req, rsp, stream.getStream(), processor);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["dbf8bf15546966c2999be987d32191fc1ef495ef"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dbf8bf15546966c2999be987d32191fc1ef495ef","date":1265300798,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#newLoader(SolrQueryRequest,UpdateRequestProcessor).mjava","pathOld":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#newLoader(SolrQueryRequest,UpdateRequestProcessor).mjava","sourceNew":"  protected ContentStreamLoader newLoader(SolrQueryRequest req, final UpdateRequestProcessor processor) {\n    return new ContentStreamLoader() {\n      public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n        InputStream is = null;\n        try {\n          is = stream.getStream();\n          parseAndLoadDocs(req, rsp, is, processor);\n        } finally {\n          if(is != null) {\n            is.close();\n          }\n        }\n      }\n    };\n  }\n\n","sourceOld":"  protected ContentStreamLoader newLoader(SolrQueryRequest req, final UpdateRequestProcessor processor) {\n    return new ContentStreamLoader() {\n      public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n        parseAndLoadDocs(req, rsp, stream.getStream(), processor);\n      }\n    };\n  }\n\n","bugFix":["8d0c1d69778439d99fc635727129e99480e64f06"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#newLoader(SolrQueryRequest,UpdateRequestProcessor).mjava","pathOld":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#newLoader(SolrQueryRequest,UpdateRequestProcessor).mjava","sourceNew":"  protected ContentStreamLoader newLoader(SolrQueryRequest req, final UpdateRequestProcessor processor) {\n    return new ContentStreamLoader() {\n      public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n        InputStream is = null;\n        try {\n          is = stream.getStream();\n          parseAndLoadDocs(req, rsp, is, processor);\n        } finally {\n          if(is != null) {\n            is.close();\n          }\n        }\n      }\n    };\n  }\n\n","sourceOld":"  protected ContentStreamLoader newLoader(SolrQueryRequest req, final UpdateRequestProcessor processor) {\n    return new ContentStreamLoader() {\n      public void load(SolrQueryRequest req, SolrQueryResponse rsp, ContentStream stream) throws Exception {\n        InputStream is = null;\n        try {\n          is = stream.getStream();\n          parseAndLoadDocs(req, rsp, is, processor);\n        } finally {\n          if(is != null) {\n            is.close();\n          }\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8d0c1d69778439d99fc635727129e99480e64f06":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["dbf8bf15546966c2999be987d32191fc1ef495ef"],"dbf8bf15546966c2999be987d32191fc1ef495ef":["8d0c1d69778439d99fc635727129e99480e64f06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8d0c1d69778439d99fc635727129e99480e64f06":["dbf8bf15546966c2999be987d32191fc1ef495ef"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["8d0c1d69778439d99fc635727129e99480e64f06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"dbf8bf15546966c2999be987d32191fc1ef495ef":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}