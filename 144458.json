{"path":"lucene/core/src/java/org/apache/lucene/util/fst/Util#printableLabel(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util#printableLabel(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/Util#printableLabel(int).mjava","sourceNew":"  /**\n   * Ensures an arc's label is indeed printable (dot uses US-ASCII). \n   */\n  private static String printableLabel(int label) {\n    if (label >= 0x20 && label <= 0x7d) {\n      return Character.toString((char) label);\n    } else {\n      return \"0x\" + Integer.toHexString(label);\n    }\n  }\n\n","sourceOld":"  /**\n   * Ensures an arc's label is indeed printable (dot uses US-ASCII). \n   */\n  private static String printableLabel(int label) {\n    if (label >= 0x20 && label <= 0x7d) {\n      return Character.toString((char) label);\n    } else {\n      return \"0x\" + Integer.toHexString(label);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"050ba1ba249733cac50c2612418b7179591d2df9","date":1374633633,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util#printableLabel(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util#printableLabel(int).mjava","sourceNew":"  /**\n   * Ensures an arc's label is indeed printable (dot uses US-ASCII). \n   */\n  private static String printableLabel(int label) {\n    if (label >= 0x20 && label <= 0x7d) {\n      if (label != 0x22 && label != 0x5c) {  // \" OR \\\n        return Character.toString((char) label);\n      }\n    }\n    return \"0x\" + Integer.toHexString(label);\n  }\n\n","sourceOld":"  /**\n   * Ensures an arc's label is indeed printable (dot uses US-ASCII). \n   */\n  private static String printableLabel(int label) {\n    if (label >= 0x20 && label <= 0x7d) {\n      return Character.toString((char) label);\n    } else {\n      return \"0x\" + Integer.toHexString(label);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util#printableLabel(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util#printableLabel(int).mjava","sourceNew":"  /**\n   * Ensures an arc's label is indeed printable (dot uses US-ASCII). \n   */\n  private static String printableLabel(int label) {\n    if (label >= 0x20 && label <= 0x7d) {\n      if (label != 0x22 && label != 0x5c) {  // \" OR \\\n        return Character.toString((char) label);\n      }\n    }\n    return \"0x\" + Integer.toHexString(label);\n  }\n\n","sourceOld":"  /**\n   * Ensures an arc's label is indeed printable (dot uses US-ASCII). \n   */\n  private static String printableLabel(int label) {\n    if (label >= 0x20 && label <= 0x7d) {\n      return Character.toString((char) label);\n    } else {\n      return \"0x\" + Integer.toHexString(label);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0af0c31a687dd847212ae59f661152896c76516","date":1380727430,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/Util#printableLabel(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/Util#printableLabel(int).mjava","sourceNew":"  /**\n   * Ensures an arc's label is indeed printable (dot uses US-ASCII). \n   */\n  private static String printableLabel(int label) {\n    // Any ordinary ascii character, except for \" or \\, are\n    // printed as the character; else, as a hex string:\n    if (label >= 0x20 && label <= 0x7d && label != 0x22 && label != 0x5c) {  // \" OR \\\n      return Character.toString((char) label);\n    }\n    return \"0x\" + Integer.toHexString(label);\n  }\n\n","sourceOld":"  /**\n   * Ensures an arc's label is indeed printable (dot uses US-ASCII). \n   */\n  private static String printableLabel(int label) {\n    if (label >= 0x20 && label <= 0x7d) {\n      if (label != 0x22 && label != 0x5c) {  // \" OR \\\n        return Character.toString((char) label);\n      }\n    }\n    return \"0x\" + Integer.toHexString(label);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d0af0c31a687dd847212ae59f661152896c76516":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f948dd442d23baa6cbb28daf77c8db78b351329":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","050ba1ba249733cac50c2612418b7179591d2df9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0af0c31a687dd847212ae59f661152896c76516"],"050ba1ba249733cac50c2612418b7179591d2df9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"d0af0c31a687dd847212ae59f661152896c76516":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2f948dd442d23baa6cbb28daf77c8db78b351329","050ba1ba249733cac50c2612418b7179591d2df9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["d0af0c31a687dd847212ae59f661152896c76516"],"050ba1ba249733cac50c2612418b7179591d2df9":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}