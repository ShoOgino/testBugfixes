{"path":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","pathOld":"solr/contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","sourceNew":"\tprivate void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n\t\t\tthrows IOException {\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\n\t\tparams.set(\"merge-resources\", false);\n\t\tparams.set(AttributeUtils.getKey(\n\t\t\t\tLexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n\t\t\t\twordsToCheck);\n\n\t\t// \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n\t\t// stoplabels.en, so we're expecting only one cluster with label \"online\".\n\t\tfinal List<NamedList<Object>> clusters = checkEngine(\n\t\t\t\tgetClusteringEngine(engineName), 1, params);\n\t\tassertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n\t}\n\n","sourceOld":"\tprivate void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n\t\t\tthrows IOException {\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\n\t\tparams.set(\"merge-resources\", false);\n\t\tparams.set(AttributeUtils.getKey(\n\t\t\t\tLexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n\t\t\t\twordsToCheck);\n\n\t\t// \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n\t\t// stoplabels.en, so we're expecting only one cluster with label \"online\".\n\t\tfinal List<NamedList<Object>> clusters = checkEngine(\n\t\t\t\tgetClusteringEngine(engineName), 1, params);\n\t\tassertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","pathOld":"solr/contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","sourceNew":"\tprivate void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n\t\t\tthrows IOException {\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\n\t\tparams.set(\"merge-resources\", false);\n\t\tparams.set(AttributeUtils.getKey(\n\t\t\t\tLexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n\t\t\t\twordsToCheck);\n\n\t\t// \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n\t\t// stoplabels.en, so we're expecting only one cluster with label \"online\".\n\t\tfinal List<NamedList<Object>> clusters = checkEngine(\n\t\t\t\tgetClusteringEngine(engineName), 1, params);\n\t\tassertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n\t}\n\n","sourceOld":"\tprivate void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n\t\t\tthrows IOException {\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\n\t\tparams.set(\"merge-resources\", false);\n\t\tparams.set(AttributeUtils.getKey(\n\t\t\t\tLexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n\t\t\t\twordsToCheck);\n\n\t\t// \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n\t\t// stoplabels.en, so we're expecting only one cluster with label \"online\".\n\t\tfinal List<NamedList<Object>> clusters = checkEngine(\n\t\t\t\tgetClusteringEngine(engineName), 1, params);\n\t\tassertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7ad8cec4fae7376b9e16eaffdc98d990dc84556","date":1313065237,"type":3,"author":"Stanisław Osiński","isMerge":false,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","sourceNew":"\tprivate void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n\t\t\tthrows IOException {\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\n\t\tparams.set(\"merge-resources\", false);\n\t\tparams.set(AttributeUtils.getKey(\n\t\t\t\tLexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n\t\t\t\twordsToCheck);\n\n\t\t// \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n\t\t// stoplabels.mt, so we're expecting only one cluster with label \"online\".\n\t\tfinal List<NamedList<Object>> clusters = checkEngine(\n\t\t\t\tgetClusteringEngine(engineName), 1, params);\n\t\tassertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n\t}\n\n","sourceOld":"\tprivate void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n\t\t\tthrows IOException {\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\n\t\tparams.set(\"merge-resources\", false);\n\t\tparams.set(AttributeUtils.getKey(\n\t\t\t\tLexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n\t\t\t\twordsToCheck);\n\n\t\t// \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n\t\t// stoplabels.en, so we're expecting only one cluster with label \"online\".\n\t\tfinal List<NamedList<Object>> clusters = checkEngine(\n\t\t\t\tgetClusteringEngine(engineName), 1, params);\n\t\tassertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef9e7ba08c124ce913ef60415c21ae1ca833d211","date":1323446079,"type":3,"author":"Stanisław Osiński","isMerge":false,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","sourceNew":"  private void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n      throws IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n        wordsToCheck);\n\n    // \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n    // stoplabels.mt, so we're expecting only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(engineName), 1, params);\n    assertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n  }\n\n","sourceOld":"\tprivate void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n\t\t\tthrows IOException {\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\n\t\tparams.set(\"merge-resources\", false);\n\t\tparams.set(AttributeUtils.getKey(\n\t\t\t\tLexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n\t\t\t\twordsToCheck);\n\n\t\t// \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n\t\t// stoplabels.mt, so we're expecting only one cluster with label \"online\".\n\t\tfinal List<NamedList<Object>> clusters = checkEngine(\n\t\t\t\tgetClusteringEngine(engineName), 1, params);\n\t\tassertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","date":1323540308,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","sourceNew":"  private void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n      throws IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n        wordsToCheck);\n\n    // \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n    // stoplabels.mt, so we're expecting only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(engineName), 1, params);\n    assertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n  }\n\n","sourceOld":"\tprivate void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n\t\t\tthrows IOException {\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\n\t\tparams.set(\"merge-resources\", false);\n\t\tparams.set(AttributeUtils.getKey(\n\t\t\t\tLexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n\t\t\t\twordsToCheck);\n\n\t\t// \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n\t\t// stoplabels.mt, so we're expecting only one cluster with label \"online\".\n\t\tfinal List<NamedList<Object>> clusters = checkEngine(\n\t\t\t\tgetClusteringEngine(engineName), 1, params);\n\t\tassertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f","date":1478271720,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","sourceNew":"  private void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n      throws IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n        wordsToCheck);\n\n    // \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n    // stoplabels.mt, so we're expecting only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(engineName), 1, params);\n    assertEquals(getLabels(clusters.get(0)), Collections.singletonList(\"online\"));\n  }\n\n","sourceOld":"  private void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n      throws IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n        wordsToCheck);\n\n    // \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n    // stoplabels.mt, so we're expecting only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(engineName), 1, params);\n    assertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","pathOld":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkLexicalResourcesFromSolrConfig(String,String).mjava","sourceNew":"  private void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n      throws IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n        wordsToCheck);\n\n    // \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n    // stoplabels.mt, so we're expecting only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(engineName), 1, params);\n    assertEquals(getLabels(clusters.get(0)), Collections.singletonList(\"online\"));\n  }\n\n","sourceOld":"  private void checkLexicalResourcesFromSolrConfig(String engineName, String wordsToCheck)\n      throws IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"merge-resources\", false);\n    params.set(AttributeUtils.getKey(\n        LexicalResourcesCheckClusteringAlgorithm.class, \"wordsToCheck\"),\n        wordsToCheck);\n\n    // \"customsolrstopword\" is in stopwords.en, \"customsolrstoplabel\" is in\n    // stoplabels.mt, so we're expecting only one cluster with label \"online\".\n    final List<NamedList<Object>> clusters = checkEngine(\n        getClusteringEngine(engineName), 1, params);\n    assertEquals(getLabels(clusters.get(0)), ImmutableList.of(\"online\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a7ad8cec4fae7376b9e16eaffdc98d990dc84556":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f":["ef9e7ba08c124ce913ef60415c21ae1ca833d211"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["ef9e7ba08c124ce913ef60415c21ae1ca833d211","7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f"],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":["a7ad8cec4fae7376b9e16eaffdc98d990dc84556","ef9e7ba08c124ce913ef60415c21ae1ca833d211"],"ef9e7ba08c124ce913ef60415c21ae1ca833d211":["a7ad8cec4fae7376b9e16eaffdc98d990dc84556"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f"]},"commit2Childs":{"a7ad8cec4fae7376b9e16eaffdc98d990dc84556":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","ef9e7ba08c124ce913ef60415c21ae1ca833d211"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a7ad8cec4fae7376b9e16eaffdc98d990dc84556"],"7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":[],"ef9e7ba08c124ce913ef60415c21ae1ca833d211":["7290fa7ae2cc2a80abb6aecc0b0dd90cbfde2b7f","199dfa410f1fdbfd3294106b04096cce5ed34b21","ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}