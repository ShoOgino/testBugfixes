{"path":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","commits":[{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    s.close();\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    s.close();\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    s.close();\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    s.close();\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0e7c2454a6a8237bfd0e953f5b940838408c9055","date":1323649300,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    s.close();\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    s.close();\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0e7c2454a6a8237bfd0e953f5b940838408c9055"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["1509f151d7692d84fae414b2b799ac06ba60fcb4","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["b89678825b68eccaf09e6ab71675fc0b0af1e099","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["0e7c2454a6a8237bfd0e953f5b940838408c9055","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}