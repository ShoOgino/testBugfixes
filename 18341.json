{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#init(Context).mjava","commits":[{"id":"0d2b69725d5832c3c9fa9df6b9081c7d4e46a281","date":1260515652,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#init(Context).mjava","pathOld":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#init(Context).mjava","sourceNew":"  public void init(Context context) {\n    super.init(context);\n    // set attributes using  XXX getXXXFromContext(attribute, defualtValue);\n    // applies variable resolver and return default if value is not found or null\n    // REQUIRED : connection and folder info\n    user = getStringFromContext(\"user\", null);\n    password = getStringFromContext(\"password\", null);\n    host = getStringFromContext(\"host\", null);\n    protocol = getStringFromContext(\"protocol\", null);\n    folderNames = getStringFromContext(\"folders\", null);\n    // validate\n    if (host == null || protocol == null || user == null || password == null\n            || folderNames == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'user|password|protocol|host|folders' are required attributes\");\n\n    //OPTIONAL : have defaults and are optional\n    recurse = getBoolFromContext(\"recurse\", true);\n    String excludes = getStringFromContext(\"exclude\", \"\");\n    if (excludes != null && !excludes.trim().equals(\"\")) {\n      exclude = Arrays.asList(excludes.split(\",\"));\n    }\n    String includes = getStringFromContext(\"include\", \"\");\n    if (includes != null && !includes.trim().equals(\"\")) {\n      include = Arrays.asList(includes.split(\",\"));\n    }\n    batchSize = getIntFromContext(\"batchSize\", 20);\n    customFilter = getStringFromContext(\"customFilter\", \"\");\n    String s = getStringFromContext(\"fetchMailsSince\", \"\");\n    if (s != null)\n      try {\n        fetchMailsSince = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(s);\n      } catch (ParseException e) {\n        throw new DataImportHandlerException(DataImportHandlerException.SEVERE, \"Invalid value for fetchMailSince: \" + s, e);\n      }\n\n    fetchSize = getIntFromContext(\"fetchSize\", 32 * 1024);\n    cTimeout = getIntFromContext(\"connectTimeout\", 30 * 1000);\n    rTimeout = getIntFromContext(\"readTimeout\", 60 * 1000);\n    processAttachment = getBoolFromContext(\"processAttachement\", true);\n\n    logConfig();\n  }\n\n","sourceOld":"  public void init(Context context) {\n    super.init(context);\n    // set attributes using  XXX getXXXFromContext(attribute, defualtValue);\n    // applies variable resolver and return default if value is not found or null\n    // REQUIRED : connection and folder info\n    user = getStringFromContext(\"user\", null);\n    password = getStringFromContext(\"password\", null);\n    host = getStringFromContext(\"host\", null);\n    protocol = getStringFromContext(\"protocol\", null);\n    folderNames = getStringFromContext(\"folders\", null);\n    // validate\n    if (host == null || protocol == null || user == null || password == null\n            || folderNames == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'user|password|protocol|host|folders' are required attributes\");\n\n    //OPTIONAL : have defaults and are optional\n    recurse = getBoolFromContext(\"recurse\", true);\n    String excludes = getStringFromContext(\"exclude\", \"\");\n    if (excludes != null && !excludes.trim().equals(\"\")) {\n      exclude = Arrays.asList(excludes.split(\",\"));\n    }\n    String includes = getStringFromContext(\"include\", \"\");\n    if (includes != null && !includes.trim().equals(\"\")) {\n      include = Arrays.asList(includes.split(\",\"));\n    }\n    batchSize = getIntFromContext(\"batchSize\", 20);\n    customFilter = getStringFromContext(\"customFilter\", \"\");\n    String s = getStringFromContext(\"fetchMailsSince\", \"\");\n    if (s != null)\n      try {\n        fetchMailsSince = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(s);\n      } catch (ParseException e) {\n        throw new DataImportHandlerException(DataImportHandlerException.SEVERE, \"Invalid value for fetchMailSince: \" + s, e);\n      }\n\n    fetchSize = getIntFromContext(\"fetchSize\", 32 * 1024);\n    cTimeout = getIntFromContext(\"connectTimeout\", 30 * 1000);\n    rTimeout = getIntFromContext(\"readTimeout\", 60 * 1000);\n    processAttachment = getBoolFromContext(\"processAttachement\", true);\n\n    logConfig();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492","date":1260863347,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#init(Context).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#init(Context).mjava","sourceNew":"  public void init(Context context) {\n    super.init(context);\n    // set attributes using  XXX getXXXFromContext(attribute, defualtValue);\n    // applies variable resolver and return default if value is not found or null\n    // REQUIRED : connection and folder info\n    user = getStringFromContext(\"user\", null);\n    password = getStringFromContext(\"password\", null);\n    host = getStringFromContext(\"host\", null);\n    protocol = getStringFromContext(\"protocol\", null);\n    folderNames = getStringFromContext(\"folders\", null);\n    // validate\n    if (host == null || protocol == null || user == null || password == null\n            || folderNames == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'user|password|protocol|host|folders' are required attributes\");\n\n    //OPTIONAL : have defaults and are optional\n    recurse = getBoolFromContext(\"recurse\", true);\n    String excludes = getStringFromContext(\"exclude\", \"\");\n    if (excludes != null && !excludes.trim().equals(\"\")) {\n      exclude = Arrays.asList(excludes.split(\",\"));\n    }\n    String includes = getStringFromContext(\"include\", \"\");\n    if (includes != null && !includes.trim().equals(\"\")) {\n      include = Arrays.asList(includes.split(\",\"));\n    }\n    batchSize = getIntFromContext(\"batchSize\", 20);\n    customFilter = getStringFromContext(\"customFilter\", \"\");\n    String s = getStringFromContext(\"fetchMailsSince\", \"\");\n    if (s != null)\n      try {\n        fetchMailsSince = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(s);\n      } catch (ParseException e) {\n        throw new DataImportHandlerException(DataImportHandlerException.SEVERE, \"Invalid value for fetchMailSince: \" + s, e);\n      }\n\n    fetchSize = getIntFromContext(\"fetchSize\", 32 * 1024);\n    cTimeout = getIntFromContext(\"connectTimeout\", 30 * 1000);\n    rTimeout = getIntFromContext(\"readTimeout\", 60 * 1000);\n    processAttachment = getBoolFromContext(\"processAttachement\", true);\n\n    logConfig();\n  }\n\n","sourceOld":"  public void init(Context context) {\n    super.init(context);\n    // set attributes using  XXX getXXXFromContext(attribute, defualtValue);\n    // applies variable resolver and return default if value is not found or null\n    // REQUIRED : connection and folder info\n    user = getStringFromContext(\"user\", null);\n    password = getStringFromContext(\"password\", null);\n    host = getStringFromContext(\"host\", null);\n    protocol = getStringFromContext(\"protocol\", null);\n    folderNames = getStringFromContext(\"folders\", null);\n    // validate\n    if (host == null || protocol == null || user == null || password == null\n            || folderNames == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'user|password|protocol|host|folders' are required attributes\");\n\n    //OPTIONAL : have defaults and are optional\n    recurse = getBoolFromContext(\"recurse\", true);\n    String excludes = getStringFromContext(\"exclude\", \"\");\n    if (excludes != null && !excludes.trim().equals(\"\")) {\n      exclude = Arrays.asList(excludes.split(\",\"));\n    }\n    String includes = getStringFromContext(\"include\", \"\");\n    if (includes != null && !includes.trim().equals(\"\")) {\n      include = Arrays.asList(includes.split(\",\"));\n    }\n    batchSize = getIntFromContext(\"batchSize\", 20);\n    customFilter = getStringFromContext(\"customFilter\", \"\");\n    String s = getStringFromContext(\"fetchMailsSince\", \"\");\n    if (s != null)\n      try {\n        fetchMailsSince = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(s);\n      } catch (ParseException e) {\n        throw new DataImportHandlerException(DataImportHandlerException.SEVERE, \"Invalid value for fetchMailSince: \" + s, e);\n      }\n\n    fetchSize = getIntFromContext(\"fetchSize\", 32 * 1024);\n    cTimeout = getIntFromContext(\"connectTimeout\", 30 * 1000);\n    rTimeout = getIntFromContext(\"readTimeout\", 60 * 1000);\n    processAttachment = getBoolFromContext(\"processAttachement\", true);\n\n    logConfig();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0d2b69725d5832c3c9fa9df6b9081c7d4e46a281":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492":["0d2b69725d5832c3c9fa9df6b9081c7d4e46a281"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0d2b69725d5832c3c9fa9df6b9081c7d4e46a281":["6b7b8ee0df825b37bc7fb44a2bfd91aa08357492"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0d2b69725d5832c3c9fa9df6b9081c7d4e46a281"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6b7b8ee0df825b37bc7fb44a2bfd91aa08357492","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}