{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/fr/FrenchLightStemmer#stem(char[],int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/fr/FrenchLightStemmer#stem(char[],int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/fr/FrenchLightStemmer#stem(char[],int).mjava","sourceNew":"  public int stem(char s[], int len) {\n    if (len > 5 && s[len-1] == 'x') {\n      if (s[len-3] == 'a' && s[len-2] == 'u' && s[len-4] != 'e')\n        s[len-2] = 'l';\n      len--;\n    }\n    \n    if (len > 3 && s[len-1] == 'x')\n      len--;\n    \n    if (len > 3 && s[len-1] == 's')\n      len--;\n    \n    if (len > 9 && endsWith(s, len, \"issement\")) {\n      len -= 6;\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 8 && endsWith(s, len, \"issant\")) {\n      len -= 4;\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 6 && endsWith(s, len, \"ement\")) {\n      len -= 4;\n      if (len > 3 && endsWith(s, len, \"ive\")) {\n        len--;\n        s[len-1] = 'f';\n      }\n      return norm(s, len);\n    }\n    \n    if (len > 11 && endsWith(s, len, \"ficatrice\")) {\n      len -= 5;\n      s[len-2] = 'e';\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 10 && endsWith(s, len, \"ficateur\")) {\n      len -= 4;\n      s[len-2] = 'e';\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 9 && endsWith(s, len, \"catrice\")) {\n      len -= 3;\n      s[len-4] = 'q';\n      s[len-3] = 'u';\n      s[len-2] = 'e';\n      //s[len-1] = 'r' <-- unnecessary, already 'r'.\n      return norm(s, len);\n    }\n    \n    if (len > 8 && endsWith(s, len, \"cateur\")) {\n      len -= 2;\n      s[len-4] = 'q';\n      s[len-3] = 'u';\n      s[len-2] = 'e';\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 8 && endsWith(s, len, \"atrice\")) {\n      len -= 4;\n      s[len-2] = 'e';\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 7 && endsWith(s, len, \"ateur\")) {\n      len -= 3;\n      s[len-2] = 'e';\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 6 && endsWith(s, len, \"trice\")) {\n      len--;\n      s[len-3] = 'e';\n      s[len-2] = 'u';\n      s[len-1] = 'r';\n    }\n    \n    if (len > 5 && endsWith(s, len, \"ième\"))\n      return norm(s, len-4);\n    \n    if (len > 7 && endsWith(s, len, \"teuse\")) {\n      len -= 2;\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 6 && endsWith(s, len, \"teur\")) {\n      len--;\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 5 && endsWith(s, len, \"euse\"))\n      return norm(s, len-2);\n    \n    if (len > 8 && endsWith(s, len, \"ère\")) {\n      len--;\n      s[len-2] = 'e';\n      return norm(s, len);\n    }\n    \n    if (len > 7 && endsWith(s, len, \"ive\")) {\n      len--;\n      s[len-1] = 'f';\n      return norm(s, len);\n    }\n    \n    if (len > 4 && \n        (endsWith(s, len, \"folle\") ||\n         endsWith(s, len, \"molle\"))) {\n      len -= 2;\n      s[len-1] = 'u';\n      return norm(s, len);\n    }\n    \n    if (len > 9 && endsWith(s, len, \"nnelle\"))\n      return norm(s, len-5);\n    \n    if (len > 9 && endsWith(s, len, \"nnel\"))\n      return norm(s, len-3);\n    \n    if (len > 4 && endsWith(s, len, \"ète\")) {\n      len--;\n      s[len-2] = 'e';\n    }\n    \n    if (len > 8 && endsWith(s, len, \"ique\"))\n      len -= 4;\n    \n    if (len > 8 && endsWith(s, len, \"esse\"))\n      return norm(s, len-3);\n    \n    if (len > 7 && endsWith(s, len, \"inage\"))\n      return norm(s, len-3);\n    \n    if (len > 9 && endsWith(s, len, \"isation\")) {\n      len -= 7;\n      if (len > 5 && endsWith(s, len, \"ual\"))\n        s[len-2] = 'e';\n      return norm(s, len);\n    }\n    \n    if (len > 9 && endsWith(s, len, \"isateur\"))\n      return norm(s, len-7);\n    \n    if (len > 8 && endsWith(s, len, \"ation\"))\n      return norm(s, len-5);\n\n    if (len > 8 && endsWith(s, len, \"ition\"))\n      return norm(s, len-5);\n    \n    return norm(s, len);\n  }\n\n","sourceOld":"  public int stem(char s[], int len) {\n    if (len > 5 && s[len-1] == 'x') {\n      if (s[len-3] == 'a' && s[len-2] == 'u' && s[len-4] != 'e')\n        s[len-2] = 'l';\n      len--;\n    }\n    \n    if (len > 3 && s[len-1] == 'x')\n      len--;\n    \n    if (len > 3 && s[len-1] == 's')\n      len--;\n    \n    if (len > 9 && endsWith(s, len, \"issement\")) {\n      len -= 6;\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 8 && endsWith(s, len, \"issant\")) {\n      len -= 4;\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 6 && endsWith(s, len, \"ement\")) {\n      len -= 4;\n      if (len > 3 && endsWith(s, len, \"ive\")) {\n        len--;\n        s[len-1] = 'f';\n      }\n      return norm(s, len);\n    }\n    \n    if (len > 11 && endsWith(s, len, \"ficatrice\")) {\n      len -= 5;\n      s[len-2] = 'e';\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 10 && endsWith(s, len, \"ficateur\")) {\n      len -= 4;\n      s[len-2] = 'e';\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 9 && endsWith(s, len, \"catrice\")) {\n      len -= 3;\n      s[len-4] = 'q';\n      s[len-3] = 'u';\n      s[len-2] = 'e';\n      //s[len-1] = 'r' <-- unnecessary, already 'r'.\n      return norm(s, len);\n    }\n    \n    if (len > 8 && endsWith(s, len, \"cateur\")) {\n      len -= 2;\n      s[len-4] = 'q';\n      s[len-3] = 'u';\n      s[len-2] = 'e';\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 8 && endsWith(s, len, \"atrice\")) {\n      len -= 4;\n      s[len-2] = 'e';\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 7 && endsWith(s, len, \"ateur\")) {\n      len -= 3;\n      s[len-2] = 'e';\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 6 && endsWith(s, len, \"trice\")) {\n      len--;\n      s[len-3] = 'e';\n      s[len-2] = 'u';\n      s[len-1] = 'r';\n    }\n    \n    if (len > 5 && endsWith(s, len, \"ième\"))\n      return norm(s, len-4);\n    \n    if (len > 7 && endsWith(s, len, \"teuse\")) {\n      len -= 2;\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 6 && endsWith(s, len, \"teur\")) {\n      len--;\n      s[len-1] = 'r';\n      return norm(s, len);\n    }\n    \n    if (len > 5 && endsWith(s, len, \"euse\"))\n      return norm(s, len-2);\n    \n    if (len > 8 && endsWith(s, len, \"ère\")) {\n      len--;\n      s[len-2] = 'e';\n      return norm(s, len);\n    }\n    \n    if (len > 7 && endsWith(s, len, \"ive\")) {\n      len--;\n      s[len-1] = 'f';\n      return norm(s, len);\n    }\n    \n    if (len > 4 && \n        (endsWith(s, len, \"folle\") ||\n         endsWith(s, len, \"molle\"))) {\n      len -= 2;\n      s[len-1] = 'u';\n      return norm(s, len);\n    }\n    \n    if (len > 9 && endsWith(s, len, \"nnelle\"))\n      return norm(s, len-5);\n    \n    if (len > 9 && endsWith(s, len, \"nnel\"))\n      return norm(s, len-3);\n    \n    if (len > 4 && endsWith(s, len, \"ète\")) {\n      len--;\n      s[len-2] = 'e';\n    }\n    \n    if (len > 8 && endsWith(s, len, \"ique\"))\n      len -= 4;\n    \n    if (len > 8 && endsWith(s, len, \"esse\"))\n      return norm(s, len-3);\n    \n    if (len > 7 && endsWith(s, len, \"inage\"))\n      return norm(s, len-3);\n    \n    if (len > 9 && endsWith(s, len, \"isation\")) {\n      len -= 7;\n      if (len > 5 && endsWith(s, len, \"ual\"))\n        s[len-2] = 'e';\n      return norm(s, len);\n    }\n    \n    if (len > 9 && endsWith(s, len, \"isateur\"))\n      return norm(s, len-7);\n    \n    if (len > 8 && endsWith(s, len, \"ation\"))\n      return norm(s, len-5);\n\n    if (len > 8 && endsWith(s, len, \"ition\"))\n      return norm(s, len-5);\n    \n    return norm(s, len);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}