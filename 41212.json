{"path":"src/java/org/apache/lucene/index/TermVectorMapper#setExpectations(String,int,boolean,boolean).mjava","commits":[{"id":"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb","date":1185160645,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermVectorMapper#setExpectations(String,int,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Tell the mapper what to expect in regards to field, number of terms, offset and position storage.\n   * This method will be called once before retrieving the vector for a field.\n   *\n   * This method will be called before {@link #map(String,int,TermVectorOffsetInfo[],int[])}.\n   * @param field The field the vector is for\n   * @param numTerms The number of terms that need to be mapped\n   * @param storeOffsets true if the mapper should expect offset information\n   * @param storePositions true if the mapper should expect positions info\n   */\n  public abstract void setExpectations(String field, int numTerms, boolean storeOffsets, boolean storePositions);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorMapper#setExpectations(String,int,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorMapper#setExpectations(String,int,boolean,boolean).mjava","sourceNew":"  /**\n   * Tell the mapper what to expect in regards to field, number of terms, offset and position storage.\n   * This method will be called once before retrieving the vector for a field.\n   *\n   * This method will be called before {@link #map(String,int,TermVectorOffsetInfo[],int[])}.\n   * @param field The field the vector is for\n   * @param numTerms The number of terms that need to be mapped\n   * @param storeOffsets true if the mapper should expect offset information\n   * @param storePositions true if the mapper should expect positions info\n   */\n  public abstract void setExpectations(String field, int numTerms, boolean storeOffsets, boolean storePositions);\n\n","sourceOld":"  /**\n   * Tell the mapper what to expect in regards to field, number of terms, offset and position storage.\n   * This method will be called once before retrieving the vector for a field.\n   *\n   * This method will be called before {@link #map(String,int,TermVectorOffsetInfo[],int[])}.\n   * @param field The field the vector is for\n   * @param numTerms The number of terms that need to be mapped\n   * @param storeOffsets true if the mapper should expect offset information\n   * @param storePositions true if the mapper should expect positions info\n   */\n  public abstract void setExpectations(String field, int numTerms, boolean storeOffsets, boolean storePositions);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["352bfe1fae83b92d1562f01c057bfbe6f5af3ddb"]},"commit2Childs":{"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["352bfe1fae83b92d1562f01c057bfbe6f5af3ddb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}