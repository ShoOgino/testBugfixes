{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoRect#fromPolygon(Polygon[]).mjava","commits":[{"id":"43ddc1b7a872fafd838d3f3129984ca661e29b36","date":1459526591,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoRect#fromPolygon(Polygon[]).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/Polygon#getBoundingBox(Polygon[]).mjava","sourceNew":"  /** Returns the bounding box over an array of polygons */\n  public static GeoRect fromPolygon(Polygon[] polygons) {\n    // compute bounding box\n    double minLat = Double.POSITIVE_INFINITY;\n    double maxLat = Double.NEGATIVE_INFINITY;\n    double minLon = Double.POSITIVE_INFINITY;\n    double maxLon = Double.NEGATIVE_INFINITY;\n\n    for (int i = 0;i < polygons.length; i++) {\n      minLat = Math.min(polygons[i].minLat, minLat);\n      maxLat = Math.max(polygons[i].maxLat, maxLat);\n      minLon = Math.min(polygons[i].minLon, minLon);\n      maxLon = Math.max(polygons[i].maxLon, maxLon);\n    }\n\n    return new GeoRect(minLat, maxLat, minLon, maxLon);\n  }\n\n","sourceOld":"  /** Returns the bounding box over an array of polygons */\n  public static GeoRect getBoundingBox(Polygon[] polygons) {\n    // compute bounding box\n    double minLat = Double.POSITIVE_INFINITY;\n    double maxLat = Double.NEGATIVE_INFINITY;\n    double minLon = Double.POSITIVE_INFINITY;\n    double maxLon = Double.NEGATIVE_INFINITY;\n\n    for (int i = 0;i < polygons.length; i++) {\n      minLat = Math.min(polygons[i].minLat, minLat);\n      maxLat = Math.max(polygons[i].maxLat, maxLat);\n      minLon = Math.min(polygons[i].minLon, minLon);\n      maxLon = Math.max(polygons[i].maxLon, maxLon);\n    }\n    \n    return new GeoRect(minLat, maxLat, minLon, maxLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","date":1459623422,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Rectangle#fromPolygon(Polygon[]).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/GeoRect#fromPolygon(Polygon[]).mjava","sourceNew":"  /** Returns the bounding box over an array of polygons */\n  public static Rectangle fromPolygon(Polygon[] polygons) {\n    // compute bounding box\n    double minLat = Double.POSITIVE_INFINITY;\n    double maxLat = Double.NEGATIVE_INFINITY;\n    double minLon = Double.POSITIVE_INFINITY;\n    double maxLon = Double.NEGATIVE_INFINITY;\n\n    for (int i = 0;i < polygons.length; i++) {\n      minLat = Math.min(polygons[i].minLat, minLat);\n      maxLat = Math.max(polygons[i].maxLat, maxLat);\n      minLon = Math.min(polygons[i].minLon, minLon);\n      maxLon = Math.max(polygons[i].maxLon, maxLon);\n    }\n\n    return new Rectangle(minLat, maxLat, minLon, maxLon);\n  }\n\n","sourceOld":"  /** Returns the bounding box over an array of polygons */\n  public static GeoRect fromPolygon(Polygon[] polygons) {\n    // compute bounding box\n    double minLat = Double.POSITIVE_INFINITY;\n    double maxLat = Double.NEGATIVE_INFINITY;\n    double minLon = Double.POSITIVE_INFINITY;\n    double maxLon = Double.NEGATIVE_INFINITY;\n\n    for (int i = 0;i < polygons.length; i++) {\n      minLat = Math.min(polygons[i].minLat, minLat);\n      maxLat = Math.max(polygons[i].maxLat, maxLat);\n      minLon = Math.min(polygons[i].minLon, minLon);\n      maxLon = Math.max(polygons[i].maxLon, maxLon);\n    }\n\n    return new GeoRect(minLat, maxLat, minLon, maxLon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["43ddc1b7a872fafd838d3f3129984ca661e29b36"],"43ddc1b7a872fafd838d3f3129984ca661e29b36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43ddc1b7a872fafd838d3f3129984ca661e29b36"],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43ddc1b7a872fafd838d3f3129984ca661e29b36":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}