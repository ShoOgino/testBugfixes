{"path":"lucene/analysis/nori/src/test/org/apache/lucene/analysis/ko/TestKoreanTokenizer#testPartOfSpeechsWithCompound().mjava","commits":[{"id":"8493925b2e70246f0961df584c01a8c2e61ee52f","date":1523611602,"type":0,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/analysis/nori/src/test/org/apache/lucene/analysis/ko/TestKoreanTokenizer#testPartOfSpeechsWithCompound().mjava","pathOld":"/dev/null","sourceNew":"  public void testPartOfSpeechsWithCompound() throws IOException {\n    assertAnalyzesTo(analyzer, \"가락지나물은 한국, 중국, 일본\",\n        new String[]{\"가락지나물\", \"은\", \"한국\", \"중국\", \"일본\"},\n        new int[]{0, 5, 7, 11, 15},\n        new int[]{5, 6, 9, 13, 17},\n        new int[]{1, 1, 1, 1, 1}\n    );\n\n    assertPartsOfSpeech(analyzer,\"가락지나물은 한국, 중국, 일본\",\n        new POS.Type[]{POS.Type.COMPOUND, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP}\n    );\n\n    assertAnalyzesTo(analyzerDecompound, \"가락지나물은 한국, 중국, 일본\",\n        new String[]{\"가락지\", \"나물\", \"은\", \"한국\", \"중국\", \"일본\"},\n        new int[]{0, 3, 5, 7, 11, 15},\n        new int[]{3, 5, 6, 9, 13, 17},\n        new int[]{1, 1, 1, 1, 1, 1}\n    );\n\n    assertAnalyzesTo(analyzerDecompoundKeep, \"가락지나물은 한국, 중국, 일본\",\n        new String[]{\"가락지나물\", \"가락지\", \"나물\", \"은\", \"한국\", \"중국\", \"일본\"},\n        new int[]{0, 0, 3, 5, 7, 11, 15},\n        new int[]{5, 3, 5, 6, 9, 13, 17},\n        null,\n        new int[]{1, 0, 1, 1, 1, 1, 1},\n        new int[]{2, 1, 1, 1, 1, 1, 1}\n    );\n\n    assertPartsOfSpeech(analyzerDecompound,\"가락지나물은 한국, 중국, 일본\",\n        new POS.Type[]{POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP}\n    );\n\n    assertPartsOfSpeech(analyzerDecompoundKeep,\"가락지나물은 한국, 중국, 일본\",\n        new POS.Type[]{POS.Type.COMPOUND, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.NNG, POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.NNG, POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP}\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c6453827f947004a68ad9db7418781e9df2f660","date":1523626811,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/nori/src/test/org/apache/lucene/analysis/ko/TestKoreanTokenizer#testPartOfSpeechsWithCompound().mjava","pathOld":"/dev/null","sourceNew":"  public void testPartOfSpeechsWithCompound() throws IOException {\n    assertAnalyzesTo(analyzer, \"가락지나물은 한국, 중국, 일본\",\n        new String[]{\"가락지나물\", \"은\", \"한국\", \"중국\", \"일본\"},\n        new int[]{0, 5, 7, 11, 15},\n        new int[]{5, 6, 9, 13, 17},\n        new int[]{1, 1, 1, 1, 1}\n    );\n\n    assertPartsOfSpeech(analyzer,\"가락지나물은 한국, 중국, 일본\",\n        new POS.Type[]{POS.Type.COMPOUND, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP}\n    );\n\n    assertAnalyzesTo(analyzerDecompound, \"가락지나물은 한국, 중국, 일본\",\n        new String[]{\"가락지\", \"나물\", \"은\", \"한국\", \"중국\", \"일본\"},\n        new int[]{0, 3, 5, 7, 11, 15},\n        new int[]{3, 5, 6, 9, 13, 17},\n        new int[]{1, 1, 1, 1, 1, 1}\n    );\n\n    assertAnalyzesTo(analyzerDecompoundKeep, \"가락지나물은 한국, 중국, 일본\",\n        new String[]{\"가락지나물\", \"가락지\", \"나물\", \"은\", \"한국\", \"중국\", \"일본\"},\n        new int[]{0, 0, 3, 5, 7, 11, 15},\n        new int[]{5, 3, 5, 6, 9, 13, 17},\n        null,\n        new int[]{1, 0, 1, 1, 1, 1, 1},\n        new int[]{2, 1, 1, 1, 1, 1, 1}\n    );\n\n    assertPartsOfSpeech(analyzerDecompound,\"가락지나물은 한국, 중국, 일본\",\n        new POS.Type[]{POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP}\n    );\n\n    assertPartsOfSpeech(analyzerDecompoundKeep,\"가락지나물은 한국, 중국, 일본\",\n        new POS.Type[]{POS.Type.COMPOUND, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME, POS.Type.MORPHEME},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.NNG, POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP},\n        new POS.Tag[]{POS.Tag.NNG, POS.Tag.NNG, POS.Tag.NNG, POS.Tag.J, POS.Tag.NNP, POS.Tag.NNP, POS.Tag.NNP}\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8493925b2e70246f0961df584c01a8c2e61ee52f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c6453827f947004a68ad9db7418781e9df2f660"],"5c6453827f947004a68ad9db7418781e9df2f660":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8493925b2e70246f0961df584c01a8c2e61ee52f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8493925b2e70246f0961df584c01a8c2e61ee52f","5c6453827f947004a68ad9db7418781e9df2f660"],"8493925b2e70246f0961df584c01a8c2e61ee52f":["5c6453827f947004a68ad9db7418781e9df2f660"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5c6453827f947004a68ad9db7418781e9df2f660":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}