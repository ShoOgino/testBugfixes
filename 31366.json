{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#score(Collector).mjava","commits":[{"id":"66ad19eb69be5720d673695d38a1f5a0fed70c06","date":1366664507,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#score(Collector).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void score(Collector collector) throws IOException {\n    assert topScorer != TopScorer.NO;\n    if (SCORE_COLLECTOR.isOverriddenAsOf(this.in.getClass())) {\n      if (random.nextBoolean()) {\n        try {\n          final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS, in.nextDoc());\n          assert !remaining;\n        } catch (UnsupportedOperationException e) {\n          in.score(collector);\n        }\n      } else {\n        in.score(collector);\n      }\n    } else {\n      // score(Collector) has not been overridden, use the super method in\n      // order to benefit from all assertions\n      super.score(collector);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#score(Collector).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void score(Collector collector) throws IOException {\n    assert topScorer != TopScorer.NO;\n    if (SCORE_COLLECTOR.isOverriddenAsOf(this.in.getClass())) {\n      if (random.nextBoolean()) {\n        try {\n          final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS, in.nextDoc());\n          assert !remaining;\n        } catch (UnsupportedOperationException e) {\n          in.score(collector);\n        }\n      } else {\n        in.score(collector);\n      }\n    } else {\n      // score(Collector) has not been overridden, use the super method in\n      // order to benefit from all assertions\n      super.score(collector);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54e3893378c69acef0a7c85bd25c43aeea3249c4","date":1394442120,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#score(Collector).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#score(Collector).mjava","sourceNew":"  @Override\n  public void score(Collector collector) throws IOException {\n    assert topScorer != TopScorer.NO;\n    if (SCORE_COLLECTOR.isOverriddenAsOf(this.in.getClass())) {\n      if (random.nextBoolean()) {\n        try {\n          final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS, in.nextDoc());\n          assert !remaining;\n        } catch (UnsupportedOperationException e) {\n          in.score(collector);\n        }\n      } else {\n        in.score(collector);\n      }\n    } else {\n      // score(Collector) has not been overridden, use the super method in\n      // order to benefit from all assertions\n      if (collector.acceptsDocsOutOfOrder() && random.nextBoolean()) {\n        scoreInRandomOrder(collector);\n      } else {\n        super.score(collector);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void score(Collector collector) throws IOException {\n    assert topScorer != TopScorer.NO;\n    if (SCORE_COLLECTOR.isOverriddenAsOf(this.in.getClass())) {\n      if (random.nextBoolean()) {\n        try {\n          final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS, in.nextDoc());\n          assert !remaining;\n        } catch (UnsupportedOperationException e) {\n          in.score(collector);\n        }\n      } else {\n        in.score(collector);\n      }\n    } else {\n      // score(Collector) has not been overridden, use the super method in\n      // order to benefit from all assertions\n      super.score(collector);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#score(Collector).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void score(Collector collector) throws IOException {\n    assert topScorer != TopScorer.NO;\n    if (SCORE_COLLECTOR.isOverriddenAsOf(this.in.getClass())) {\n      if (random.nextBoolean()) {\n        try {\n          final boolean remaining = in.score(collector, DocsEnum.NO_MORE_DOCS, in.nextDoc());\n          assert !remaining;\n        } catch (UnsupportedOperationException e) {\n          in.score(collector);\n        }\n      } else {\n        in.score(collector);\n      }\n    } else {\n      // score(Collector) has not been overridden, use the super method in\n      // order to benefit from all assertions\n      if (collector.acceptsDocsOutOfOrder() && random.nextBoolean()) {\n        scoreInRandomOrder(collector);\n      } else {\n        super.score(collector);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66ad19eb69be5720d673695d38a1f5a0fed70c06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["66ad19eb69be5720d673695d38a1f5a0fed70c06"],"54e3893378c69acef0a7c85bd25c43aeea3249c4":["66ad19eb69be5720d673695d38a1f5a0fed70c06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acf00221f44c5f08ccea014f2492b53af15ecd66":["54e3893378c69acef0a7c85bd25c43aeea3249c4","2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acf00221f44c5f08ccea014f2492b53af15ecd66"]},"commit2Childs":{"66ad19eb69be5720d673695d38a1f5a0fed70c06":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","54e3893378c69acef0a7c85bd25c43aeea3249c4"],"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["66ad19eb69be5720d673695d38a1f5a0fed70c06"],"54e3893378c69acef0a7c85bd25c43aeea3249c4":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}