{"path":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    for (int i = 0; i < 5; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        port = server.getLocalPort();\n        server.close();\n        System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":null,"sourceOld":"  @Before\n  public void setUp() throws Exception {\n    for (int i = 0; i < 5; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        port = server.getLocalPort();\n        server.close();\n        System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    for (int i = 0; i < 5; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        port = server.getLocalPort();\n        server.close();\n        System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    for (int i = 0; i < 5; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        port = server.getLocalPort();\n        server.close();\n        System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    for (int i = 0; i < 5; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        port = server.getLocalPort();\n        server.close();\n        System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce83f0d72db4660fd277a9d357698004d8f4336","date":1269047368,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    for (int i = 0; i < 5; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        port = server.getLocalPort();\n        server.close();\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    for (int i = 0; i < 5; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        port = server.getLocalPort();\n        server.close();\n        System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e21ee33db0f4181e54540dd82854d619072e9c7a","date":1269610947,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    for (int i = 0; i < 5; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        port = server.getLocalPort();\n        server.close();\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1022a1f20389592cc23df1aa905788e89daf849","date":1281380794,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca9f0d2674f0af26237bf66660b2e5be1512723b","date":1293818922,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    int retries = 5;\n    for (int i = 0; i < retries; i++) {\n      try {\n        ServerSocket server = new ServerSocket(0);\n        try {\n          port = server.getLocalPort();\n        } finally {\n          server.close();\n        }\n        // System.out.println(\"Using port: \" + port);\n        try {\n          LocateRegistry.createRegistry(port);\n        } catch (RemoteException e) {\n          throw e;\n        }\n        String url = \"service:jmx:rmi:///jndi/rmi://:\" + port + \"/solrjmx\";\n        JmxConfiguration config = new JmxConfiguration(true, null, url, null);\n        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);\n        JMXServiceURL u = new JMXServiceURL(url);\n        connector = JMXConnectorFactory.connect(u);\n        mbeanServer = connector.getMBeanServerConnection();\n        break;\n      } catch (Exception e) {\n        if(retries == (i + 1)) {\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["ca9f0d2674f0af26237bf66660b2e5be1512723b"],"70ad682703b8585f5d0a637efec044d57ec05efb":["e1022a1f20389592cc23df1aa905788e89daf849","ca9f0d2674f0af26237bf66660b2e5be1512723b"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e21ee33db0f4181e54540dd82854d619072e9c7a","e1022a1f20389592cc23df1aa905788e89daf849"],"e21ee33db0f4181e54540dd82854d619072e9c7a":["9ce83f0d72db4660fd277a9d357698004d8f4336"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"9ce83f0d72db4660fd277a9d357698004d8f4336":["1da8d55113b689b06716246649de6f62430f15c0"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca9f0d2674f0af26237bf66660b2e5be1512723b"],"ca9f0d2674f0af26237bf66660b2e5be1512723b":["e1022a1f20389592cc23df1aa905788e89daf849"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"e1022a1f20389592cc23df1aa905788e89daf849":["e21ee33db0f4181e54540dd82854d619072e9c7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"e21ee33db0f4181e54540dd82854d619072e9c7a":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e1022a1f20389592cc23df1aa905788e89daf849"],"1da8d55113b689b06716246649de6f62430f15c0":["9ce83f0d72db4660fd277a9d357698004d8f4336"],"9ce83f0d72db4660fd277a9d357698004d8f4336":["e21ee33db0f4181e54540dd82854d619072e9c7a"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"ca9f0d2674f0af26237bf66660b2e5be1512723b":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"e1022a1f20389592cc23df1aa905788e89daf849":["70ad682703b8585f5d0a637efec044d57ec05efb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca9f0d2674f0af26237bf66660b2e5be1512723b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}