{"path":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","date":1218639440,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    CoreContainer manager = getMultiCore();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"CoreContainer support must be enabled at startup.\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    SolrCore core = null;\n    // Handle a core creation\n    //---------------------------------------------------------\n    if (action == MultiCoreAction.CREATE) {\n      CoreDescriptor dcore = new CoreDescriptor(manager);\n      dcore.init(params.get(MultiCoreParams.NAME),\n                params.get(MultiCoreParams.INSTANCE_DIR));\n      \n      // fillup optional parameters\n      String opts = params.get(MultiCoreParams.CONFIG);\n      if (opts != null)\n        dcore.setConfigName(opts);\n      \n      opts = params.get(MultiCoreParams.SCHEMA);\n      if (opts != null)\n        dcore.setSchemaName(opts);\n      \n      core = manager.create(dcore);\n      rsp.add(\"core\", core.getName());\n      do_persist = manager.isPersistent();\n    }\n    else {\n      // Select the core\n      String cname = params.get( MultiCoreParams.CORE );\n      if( cname != null ) {\n        core = manager.getCore(cname);\n        if( core == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+cname );\n        }\n      }\n\n      // Handle a Status Request\n      //---------------------------------------------------------\n      if( action == MultiCoreAction.STATUS ) {\n        do_persist = false; // no state change\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( core == null ) {\n          for (CoreDescriptor d : manager.getDescriptors()) {\n            status.add(d.getName(), getCoreStatus( d.getCore() ) );\n          }\n        } \n        else {\n          status.add(core.getName(), getCoreStatus(core) );\n        }\n        rsp.add( \"status\", status );\n      } \n      else if (core == null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Action '\"+action+\"' requires a core name.\" );\n      } \n      else {\n        // Handle all other\n        //---------------------------------------------------------\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, manager.isPersistent());\n        switch( action ) {\n          case RELOAD: {\n            manager.reload( manager.getDescriptor( core.getName() ) );\n            do_persist = false; // no change on reload\n            break;\n          }\n  \n          case SWAP: {\n            String name = required.get( MultiCoreParams.WITH );\n            CoreDescriptor swap = manager.getDescriptor( name );\n            \n            if( swap == null ) {\n              throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unknown core: \"+name );\n            }\n            manager.swap( manager.getDescriptor( core.getName() ), swap );\n            break;\n          } \n        \n          case PERSIST: {\n            do_persist = true;\n            break;\n          } \n          \n          default: {\n            throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                \"TODO: IMPLEMENT: \" + action );\n          }\n        } // switch\n      }\n    }\n    \n    // Should we persist the changes?\n    if (do_persist) {\n      manager.persist();\n      rsp.add(\"saved\", manager.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    MultiCore manager = getMultiCore();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"MultiCore support must be enabled at startup.\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    SolrCore core = null;\n    // Handle a core creation\n    //---------------------------------------------------------\n    if (action == MultiCoreAction.CREATE) {\n      CoreDescriptor dcore = new CoreDescriptor(manager);\n      dcore.init(params.get(MultiCoreParams.NAME),\n                params.get(MultiCoreParams.INSTANCE_DIR));\n      \n      // fillup optional parameters\n      String opts = params.get(MultiCoreParams.CONFIG);\n      if (opts != null)\n        dcore.setConfigName(opts);\n      \n      opts = params.get(MultiCoreParams.SCHEMA);\n      if (opts != null)\n        dcore.setSchemaName(opts);\n      \n      core = manager.create(dcore);\n      rsp.add(\"core\", core.getName());\n      do_persist = manager.isPersistent();\n    }\n    else {\n      // Select the core\n      String cname = params.get( MultiCoreParams.CORE );\n      if( cname != null ) {\n        core = manager.getCore(cname);\n        if( core == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+cname );\n        }\n      }\n\n      // Handle a Status Request\n      //---------------------------------------------------------\n      if( action == MultiCoreAction.STATUS ) {\n        do_persist = false; // no state change\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( core == null ) {\n          for (CoreDescriptor d : manager.getDescriptors()) {\n            status.add(d.getName(), getCoreStatus( d.getCore() ) );\n          }\n        } \n        else {\n          status.add(core.getName(), getCoreStatus(core) );\n        }\n        rsp.add( \"status\", status );\n      } \n      else if (core == null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Action '\"+action+\"' requires a core name.\" );\n      } \n      else {\n        // Handle all other\n        //---------------------------------------------------------\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, manager.isPersistent());\n        switch( action ) {\n          case RELOAD: {\n            manager.reload( manager.getDescriptor( core.getName() ) );\n            do_persist = false; // no change on reload\n            break;\n          }\n  \n          case SWAP: {\n            String name = required.get( MultiCoreParams.WITH );\n            CoreDescriptor swap = manager.getDescriptor( name );\n            \n            if( swap == null ) {\n              throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unknown core: \"+name );\n            }\n            manager.swap( manager.getDescriptor( core.getName() ), swap );\n            break;\n          } \n        \n          case PERSIST: {\n            do_persist = true;\n            break;\n          } \n          \n          default: {\n            throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                \"TODO: IMPLEMENT: \" + action );\n          }\n        } // switch\n      }\n    }\n    \n    // Should we persist the changes?\n    if (do_persist) {\n      manager.persist();\n      rsp.add(\"saved\", manager.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4926b5318ba4167d360445a0c5f3fc8af2cf8c49","date":1218678599,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    String cname = params.get( MultiCoreParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        CoreDescriptor dcore = new CoreDescriptor(cores);\n        dcore.init(params.get(MultiCoreParams.NAME),\n                  params.get(MultiCoreParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(MultiCoreParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(MultiCoreParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n      \n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (CoreDescriptor d : cores.getDescriptors()) {\n            cname = d.getName();\n            status.add(d.getName(), getCoreStatus( cores, cname  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, cores.isPersistent());\n        String with = required.get( MultiCoreParams.WITH );\n        cores.swap( cname, with );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    CoreContainer manager = getMultiCore();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"CoreContainer support must be enabled at startup.\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    SolrCore core = null;\n    // Handle a core creation\n    //---------------------------------------------------------\n    if (action == MultiCoreAction.CREATE) {\n      CoreDescriptor dcore = new CoreDescriptor(manager);\n      dcore.init(params.get(MultiCoreParams.NAME),\n                params.get(MultiCoreParams.INSTANCE_DIR));\n      \n      // fillup optional parameters\n      String opts = params.get(MultiCoreParams.CONFIG);\n      if (opts != null)\n        dcore.setConfigName(opts);\n      \n      opts = params.get(MultiCoreParams.SCHEMA);\n      if (opts != null)\n        dcore.setSchemaName(opts);\n      \n      core = manager.create(dcore);\n      rsp.add(\"core\", core.getName());\n      do_persist = manager.isPersistent();\n    }\n    else {\n      // Select the core\n      String cname = params.get( MultiCoreParams.CORE );\n      if( cname != null ) {\n        core = manager.getCore(cname);\n        if( core == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+cname );\n        }\n      }\n\n      // Handle a Status Request\n      //---------------------------------------------------------\n      if( action == MultiCoreAction.STATUS ) {\n        do_persist = false; // no state change\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( core == null ) {\n          for (CoreDescriptor d : manager.getDescriptors()) {\n            status.add(d.getName(), getCoreStatus( d.getCore() ) );\n          }\n        } \n        else {\n          status.add(core.getName(), getCoreStatus(core) );\n        }\n        rsp.add( \"status\", status );\n      } \n      else if (core == null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Action '\"+action+\"' requires a core name.\" );\n      } \n      else {\n        // Handle all other\n        //---------------------------------------------------------\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, manager.isPersistent());\n        switch( action ) {\n          case RELOAD: {\n            manager.reload( manager.getDescriptor( core.getName() ) );\n            do_persist = false; // no change on reload\n            break;\n          }\n  \n          case SWAP: {\n            String name = required.get( MultiCoreParams.WITH );\n            CoreDescriptor swap = manager.getDescriptor( name );\n            \n            if( swap == null ) {\n              throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unknown core: \"+name );\n            }\n            manager.swap( manager.getDescriptor( core.getName() ), swap );\n            break;\n          } \n        \n          case PERSIST: {\n            do_persist = true;\n            break;\n          } \n          \n          default: {\n            throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                \"TODO: IMPLEMENT: \" + action );\n          }\n        } // switch\n      }\n    }\n    \n    // Should we persist the changes?\n    if (do_persist) {\n      manager.persist();\n      rsp.add(\"saved\", manager.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":["c28792ff7d1774c306e16afbd44ded91a417049b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2284f4281eb212e60f8318c30e1d67c7d25422a7","date":1218739496,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        CoreDescriptor dcore = new CoreDescriptor(cores);\n        dcore.init(params.get(CoreAdminParams.NAME),\n                  params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n      \n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (CoreDescriptor d : cores.getDescriptors()) {\n            cname = d.getName();\n            status.add(d.getName(), getCoreStatus( cores, cname  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String with = required.get( CoreAdminParams.WITH );\n        cores.swap( cname, with );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    String cname = params.get( MultiCoreParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        CoreDescriptor dcore = new CoreDescriptor(cores);\n        dcore.init(params.get(MultiCoreParams.NAME),\n                  params.get(MultiCoreParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(MultiCoreParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(MultiCoreParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n      \n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (CoreDescriptor d : cores.getDescriptors()) {\n            cname = d.getName();\n            status.add(d.getName(), getCoreStatus( cores, cname  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, cores.isPersistent());\n        String with = required.get( MultiCoreParams.WITH );\n        cores.swap( cname, with );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":["c28792ff7d1774c306e16afbd44ded91a417049b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c28792ff7d1774c306e16afbd44ded91a417049b","date":1219072108,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n      \n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (SolrCore core : cores.getCores()) {\n            status.add(core.getName(), getCoreStatus( cores, cname  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String with = required.get( CoreAdminParams.WITH );\n        cores.swap( cname, with );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        CoreDescriptor dcore = new CoreDescriptor(cores);\n        dcore.init(params.get(CoreAdminParams.NAME),\n                  params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n      \n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (CoreDescriptor d : cores.getDescriptors()) {\n            cname = d.getName();\n            status.add(d.getName(), getCoreStatus( cores, cname  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String with = required.get( CoreAdminParams.WITH );\n        cores.swap( cname, with );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":["2284f4281eb212e60f8318c30e1d67c7d25422a7","4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03a23d883b818d258c0eac4c2a49ef05ea534979","date":1219162051,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case RENAME: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n\n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();          \n          cores.register(name, core, false);\n          cores.remove(cname);\n          core.close();\n        }\n        break;\n      }\n\n      case ALIAS: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n        \n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();\n          cores.register(name, core, false);\n          // no core.close() since each entry in the cores map should increase the ref\n        }\n        break;\n      }\n\n      case UNLOAD: {\n        SolrCore core = cores.remove(cname);\n        core.close();\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (String name : cores.getCoreNames()) {\n            status.add(name, getCoreStatus( cores, name  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String other = required.get( CoreAdminParams.OTHER );\n        cores.swap( cname, other );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n      \n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (SolrCore core : cores.getCores()) {\n            status.add(core.getName(), getCoreStatus( cores, cname  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String with = required.get( CoreAdminParams.WITH );\n        cores.swap( cname, with );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e142aa415d64cc28851a60cf70119546316a3dc3","date":1219436738,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case RENAME: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n\n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();          \n          cores.register(name, core, false);\n          cores.remove(cname);\n          core.close();\n        }\n        break;\n      }\n\n      case ALIAS: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n        \n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();\n          cores.register(name, core, false);\n          // no core.close() since each entry in the cores map should increase the ref\n        }\n        break;\n      }\n\n      case UNLOAD: {\n        SolrCore core = cores.remove(cname);\n        core.close();\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (String name : cores.getCoreNames()) {\n            status.add(name, getCoreStatus( cores, name  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        String fileName = params.get( CoreAdminParams.FILE );\n        if (fileName != null) {\n          java.io.File file = new java.io.File(fileName);\n          cores.persistFile(file);\n          rsp.add(\"saved\", file.getAbsolutePath());\n          do_persist = false;\n        }\n        else if (!cores.isPersistent()) {\n          throw new SolrException (SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n        }\n        else\n          do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String other = required.get( CoreAdminParams.OTHER );\n        cores.swap( cname, other );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case RENAME: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n\n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();          \n          cores.register(name, core, false);\n          cores.remove(cname);\n          core.close();\n        }\n        break;\n      }\n\n      case ALIAS: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n        \n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();\n          cores.register(name, core, false);\n          // no core.close() since each entry in the cores map should increase the ref\n        }\n        break;\n      }\n\n      case UNLOAD: {\n        SolrCore core = cores.remove(cname);\n        core.close();\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (String name : cores.getCoreNames()) {\n            status.add(name, getCoreStatus( cores, name  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String other = required.get( CoreAdminParams.OTHER );\n        cores.swap( cname, other );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":["6ab7653257459a54554c674f0b6a96fe135bcc90"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6ab7653257459a54554c674f0b6a96fe135bcc90","date":1219532296,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case RENAME: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n\n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();          \n          cores.register(name, core, false);\n          cores.remove(cname);\n          core.close();\n        }\n        break;\n      }\n\n      case ALIAS: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n        \n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();\n          cores.register(name, core, false);\n          // no core.close() since each entry in the cores map should increase the ref\n        }\n        break;\n      }\n\n      case UNLOAD: {\n        SolrCore core = cores.remove(cname);\n        core.close();\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (String name : cores.getCoreNames()) {\n            status.add(name, getCoreStatus( cores, name  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        String fileName = params.get( CoreAdminParams.FILE );\n        if (fileName != null) {\n          File file = new File(cores.getConfigFile().getParentFile(), fileName);\n          cores.persistFile(file);\n          rsp.add(\"saved\", file.getAbsolutePath());\n          do_persist = false;\n        }\n        else if (!cores.isPersistent()) {\n          throw new SolrException (SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n        }\n        else\n          do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String other = required.get( CoreAdminParams.OTHER );\n        cores.swap( cname, other );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case RENAME: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n\n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();          \n          cores.register(name, core, false);\n          cores.remove(cname);\n          core.close();\n        }\n        break;\n      }\n\n      case ALIAS: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n        \n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();\n          cores.register(name, core, false);\n          // no core.close() since each entry in the cores map should increase the ref\n        }\n        break;\n      }\n\n      case UNLOAD: {\n        SolrCore core = cores.remove(cname);\n        core.close();\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (String name : cores.getCoreNames()) {\n            status.add(name, getCoreStatus( cores, name  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        String fileName = params.get( CoreAdminParams.FILE );\n        if (fileName != null) {\n          java.io.File file = new java.io.File(fileName);\n          cores.persistFile(file);\n          rsp.add(\"saved\", file.getAbsolutePath());\n          do_persist = false;\n        }\n        else if (!cores.isPersistent()) {\n          throw new SolrException (SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n        }\n        else\n          do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String other = required.get( CoreAdminParams.OTHER );\n        cores.swap( cname, other );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":["e142aa415d64cc28851a60cf70119546316a3dc3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2d0ad8759bad601c993ea6eda6e5df1c2db2b28","date":1233124258,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        dcore.setCoreProperties(null);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case RENAME: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n\n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();          \n          cores.register(name, core, false);\n          cores.remove(cname);\n          core.close();\n        }\n        break;\n      }\n\n      case ALIAS: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n        \n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();\n          cores.register(name, core, false);\n          // no core.close() since each entry in the cores map should increase the ref\n        }\n        break;\n      }\n\n      case UNLOAD: {\n        SolrCore core = cores.remove(cname);\n        core.close();\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (String name : cores.getCoreNames()) {\n            status.add(name, getCoreStatus( cores, name  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        String fileName = params.get( CoreAdminParams.FILE );\n        if (fileName != null) {\n          File file = new File(cores.getConfigFile().getParentFile(), fileName);\n          cores.persistFile(file);\n          rsp.add(\"saved\", file.getAbsolutePath());\n          do_persist = false;\n        }\n        else if (!cores.isPersistent()) {\n          throw new SolrException (SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n        }\n        else\n          do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String other = required.get( CoreAdminParams.OTHER );\n        cores.swap( cname, other );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case RENAME: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n\n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();          \n          cores.register(name, core, false);\n          cores.remove(cname);\n          core.close();\n        }\n        break;\n      }\n\n      case ALIAS: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n        \n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();\n          cores.register(name, core, false);\n          // no core.close() since each entry in the cores map should increase the ref\n        }\n        break;\n      }\n\n      case UNLOAD: {\n        SolrCore core = cores.remove(cname);\n        core.close();\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (String name : cores.getCoreNames()) {\n            status.add(name, getCoreStatus( cores, name  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        String fileName = params.get( CoreAdminParams.FILE );\n        if (fileName != null) {\n          File file = new File(cores.getConfigFile().getParentFile(), fileName);\n          cores.persistFile(file);\n          rsp.add(\"saved\", file.getAbsolutePath());\n          do_persist = false;\n        }\n        else if (!cores.isPersistent()) {\n          throw new SolrException (SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n        }\n        else\n          do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String other = required.get( CoreAdminParams.OTHER );\n        cores.swap( cname, other );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5231549ca15f43ec84ff65b78dffc6d239adf007","date":1233912291,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        opts = params.get(CoreAdminParams.DATA_DIR);\n        if (opts != null)\n          dcore.setDataDir(opts);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case RENAME: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n\n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();          \n          cores.register(name, core, false);\n          cores.remove(cname);\n          core.close();\n        }\n        break;\n      }\n\n      case ALIAS: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n        \n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();\n          cores.register(name, core, false);\n          // no core.close() since each entry in the cores map should increase the ref\n        }\n        break;\n      }\n\n      case UNLOAD: {\n        SolrCore core = cores.remove(cname);\n        core.close();\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (String name : cores.getCoreNames()) {\n            status.add(name, getCoreStatus( cores, name  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        String fileName = params.get( CoreAdminParams.FILE );\n        if (fileName != null) {\n          File file = new File(cores.getConfigFile().getParentFile(), fileName);\n          cores.persistFile(file);\n          rsp.add(\"saved\", file.getAbsolutePath());\n          do_persist = false;\n        }\n        else if (!cores.isPersistent()) {\n          throw new SolrException (SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n        }\n        else\n          do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String other = required.get( CoreAdminParams.OTHER );\n        cores.swap( cname, other );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        dcore.setCoreProperties(null);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case RENAME: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n\n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();          \n          cores.register(name, core, false);\n          cores.remove(cname);\n          core.close();\n        }\n        break;\n      }\n\n      case ALIAS: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n        \n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();\n          cores.register(name, core, false);\n          // no core.close() since each entry in the cores map should increase the ref\n        }\n        break;\n      }\n\n      case UNLOAD: {\n        SolrCore core = cores.remove(cname);\n        core.close();\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (String name : cores.getCoreNames()) {\n            status.add(name, getCoreStatus( cores, name  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        String fileName = params.get( CoreAdminParams.FILE );\n        if (fileName != null) {\n          File file = new File(cores.getConfigFile().getParentFile(), fileName);\n          cores.persistFile(file);\n          rsp.add(\"saved\", file.getAbsolutePath());\n          do_persist = false;\n        }\n        else if (!cores.isPersistent()) {\n          throw new SolrException (SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n        }\n        else\n          do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String other = required.get( CoreAdminParams.OTHER );\n        cores.swap( cname, other );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64dd09b29d9d8046920d09defbc90ae1791c725d","date":1240554655,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n    boolean doPersist = false;\n\n    // Pick the action\n    SolrParams params = req.getParams();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      action = CoreAdminAction.get(a);\n      if (action == null) {\n        doPersist = this.handleCustomAction(req, rsp);\n      }\n    }\n    if (action != null) {\n      switch (action) {\n        case CREATE: {\n          doPersist = this.handleCreateAction(req, rsp);\n          break;\n        }\n\n        case RENAME: {\n          doPersist = this.handleRenameAction(req, rsp);\n          break;\n        }\n\n        case ALIAS: {\n          doPersist = this.handleAliasAction(req, rsp);\n          break;\n        }\n\n        case UNLOAD: {\n          doPersist = this.handleUnloadAction(req, rsp);\n          break;\n        }\n\n        case STATUS: {\n          doPersist = this.handleStatusAction(req, rsp);\n          break;\n\n        }\n\n        case PERSIST: {\n          doPersist = this.handlePersistAction(req, rsp);\n          break;\n        }\n\n        case RELOAD: {\n          doPersist = this.handleReloadAction(req, rsp);\n          break;\n        }\n\n        case SWAP: {\n          doPersist = this.handleSwapAction(req, rsp);\n          break;\n        }\n\n        default: {\n          doPersist = this.handleCustomAction(req, rsp);\n          break;\n        }\n      } // switch\n    }\n    // Should we persist the changes?\n    if (doPersist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if( cores == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Core container instance missing\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get( CoreAdminParams.ACTION );\n    if( a != null ) {\n      action = CoreAdminAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+CoreAdminAction.values() );\n      }\n    }\n    String cname = params.get( CoreAdminParams.CORE );\n    \n    switch(action) {\n      case CREATE: {\n        String name = params.get(CoreAdminParams.NAME);\n        CoreDescriptor dcore = new CoreDescriptor(cores, name, params.get(CoreAdminParams.INSTANCE_DIR));\n\n        // fillup optional parameters\n        String opts = params.get(CoreAdminParams.CONFIG);\n        if (opts != null)\n          dcore.setConfigName(opts);\n\n        opts = params.get(CoreAdminParams.SCHEMA);\n        if (opts != null)\n          dcore.setSchemaName(opts);\n\n        opts = params.get(CoreAdminParams.DATA_DIR);\n        if (opts != null)\n          dcore.setDataDir(opts);\n\n        SolrCore core = cores.create(dcore);\n        cores.register(name, core,false);\n        rsp.add(\"core\", core.getName());\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case RENAME: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n\n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();          \n          cores.register(name, core, false);\n          cores.remove(cname);\n          core.close();\n        }\n        break;\n      }\n\n      case ALIAS: {\n        String name = params.get(CoreAdminParams.OTHER);\n        if (cname.equals(name)) break;\n        \n        SolrCore core = cores.getCore(cname);\n        if (core != null) {\n          do_persist = cores.isPersistent();\n          cores.register(name, core, false);\n          // no core.close() since each entry in the cores map should increase the ref\n        }\n        break;\n      }\n\n      case UNLOAD: {\n        SolrCore core = cores.remove(cname);\n        core.close();\n        do_persist = cores.isPersistent();\n        break;\n      }\n\n      case STATUS: {\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( cname == null ) {\n          for (String name : cores.getCoreNames()) {\n            status.add(name, getCoreStatus( cores, name  ) );\n          }\n        } \n        else {\n          status.add(cname, getCoreStatus( cores, cname  ) );\n        }\n        rsp.add( \"status\", status );\n        do_persist = false; // no state change\n        break;\n       \n      }\n      \n      case PERSIST: {\n        String fileName = params.get( CoreAdminParams.FILE );\n        if (fileName != null) {\n          File file = new File(cores.getConfigFile().getParentFile(), fileName);\n          cores.persistFile(file);\n          rsp.add(\"saved\", file.getAbsolutePath());\n          do_persist = false;\n        }\n        else if (!cores.isPersistent()) {\n          throw new SolrException (SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n        }\n        else\n          do_persist = true;\n        break;\n      }\n\n      case RELOAD: {\n        cores.reload( cname  );\n        do_persist = false; // no change on reload\n        break;\n      }\n\n      case SWAP: {\n        do_persist = params.getBool(CoreAdminParams.PERSISTENT, cores.isPersistent());\n        String other = required.get( CoreAdminParams.OTHER );\n        cores.swap( cname, other );\n        break;\n      } \n\n      default: {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n    } // switch\n      \n    // Should we persist the changes?\n    if (do_persist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61da3ca2ecb2710b1cc3080ea9d08114b9365cca","date":1243484201,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n    boolean doPersist = false;\n\n    // Pick the action\n    SolrParams params = req.getParams();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      action = CoreAdminAction.get(a);\n      if (action == null) {\n        doPersist = this.handleCustomAction(req, rsp);\n      }\n    }\n    if (action != null) {\n      switch (action) {\n        case CREATE: {\n          doPersist = this.handleCreateAction(req, rsp);\n          break;\n        }\n\n        case RENAME: {\n          doPersist = this.handleRenameAction(req, rsp);\n          break;\n        }\n\n        case ALIAS: {\n          doPersist = this.handleAliasAction(req, rsp);\n          break;\n        }\n\n        case UNLOAD: {\n          doPersist = this.handleUnloadAction(req, rsp);\n          break;\n        }\n\n        case STATUS: {\n          doPersist = this.handleStatusAction(req, rsp);\n          break;\n\n        }\n\n        case PERSIST: {\n          doPersist = this.handlePersistAction(req, rsp);\n          break;\n        }\n\n        case RELOAD: {\n          doPersist = this.handleReloadAction(req, rsp);\n          break;\n        }\n\n        case SWAP: {\n          doPersist = this.handleSwapAction(req, rsp);\n          break;\n        }\n\n        case MERGEINDEXES: {\n          doPersist = this.handleMergeAction(req, rsp);\n          break;\n        }\n\n        default: {\n          doPersist = this.handleCustomAction(req, rsp);\n          break;\n        }\n        case LOAD:\n          break;\n      }\n    }\n    // Should we persist the changes?\n    if (doPersist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n    boolean doPersist = false;\n\n    // Pick the action\n    SolrParams params = req.getParams();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      action = CoreAdminAction.get(a);\n      if (action == null) {\n        doPersist = this.handleCustomAction(req, rsp);\n      }\n    }\n    if (action != null) {\n      switch (action) {\n        case CREATE: {\n          doPersist = this.handleCreateAction(req, rsp);\n          break;\n        }\n\n        case RENAME: {\n          doPersist = this.handleRenameAction(req, rsp);\n          break;\n        }\n\n        case ALIAS: {\n          doPersist = this.handleAliasAction(req, rsp);\n          break;\n        }\n\n        case UNLOAD: {\n          doPersist = this.handleUnloadAction(req, rsp);\n          break;\n        }\n\n        case STATUS: {\n          doPersist = this.handleStatusAction(req, rsp);\n          break;\n\n        }\n\n        case PERSIST: {\n          doPersist = this.handlePersistAction(req, rsp);\n          break;\n        }\n\n        case RELOAD: {\n          doPersist = this.handleReloadAction(req, rsp);\n          break;\n        }\n\n        case SWAP: {\n          doPersist = this.handleSwapAction(req, rsp);\n          break;\n        }\n\n        default: {\n          doPersist = this.handleCustomAction(req, rsp);\n          break;\n        }\n      } // switch\n    }\n    // Should we persist the changes?\n    if (doPersist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea6404328413e5baef3771fcb95475356c339454","date":1246540822,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n    boolean doPersist = false;\n\n    // Pick the action\n    SolrParams params = req.getParams();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      action = CoreAdminAction.get(a);\n      if (action == null) {\n        doPersist = this.handleCustomAction(req, rsp);\n      }\n    }\n    if (action != null) {\n      switch (action) {\n        case CREATE: {\n          doPersist = this.handleCreateAction(req, rsp);\n          break;\n        }\n\n        case RENAME: {\n          doPersist = this.handleRenameAction(req, rsp);\n          break;\n        }\n\n        case ALIAS: {\n          doPersist = this.handleAliasAction(req, rsp);\n          break;\n        }\n\n        case UNLOAD: {\n          doPersist = this.handleUnloadAction(req, rsp);\n          break;\n        }\n\n        case STATUS: {\n          doPersist = this.handleStatusAction(req, rsp);\n          break;\n\n        }\n\n        case PERSIST: {\n          doPersist = this.handlePersistAction(req, rsp);\n          break;\n        }\n\n        case RELOAD: {\n          doPersist = this.handleReloadAction(req, rsp);\n          break;\n        }\n\n        case SWAP: {\n          doPersist = this.handleSwapAction(req, rsp);\n          break;\n        }\n\n        case MERGEINDEXES: {\n          doPersist = this.handleMergeAction(req, rsp);\n          break;\n        }\n\n        default: {\n          doPersist = this.handleCustomAction(req, rsp);\n          break;\n        }\n        case LOAD:\n          break;\n      }\n    }\n    // Should we persist the changes?\n    if (doPersist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n    boolean doPersist = false;\n\n    // Pick the action\n    SolrParams params = req.getParams();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      action = CoreAdminAction.get(a);\n      if (action == null) {\n        doPersist = this.handleCustomAction(req, rsp);\n      }\n    }\n    if (action != null) {\n      switch (action) {\n        case CREATE: {\n          doPersist = this.handleCreateAction(req, rsp);\n          break;\n        }\n\n        case RENAME: {\n          doPersist = this.handleRenameAction(req, rsp);\n          break;\n        }\n\n        case ALIAS: {\n          doPersist = this.handleAliasAction(req, rsp);\n          break;\n        }\n\n        case UNLOAD: {\n          doPersist = this.handleUnloadAction(req, rsp);\n          break;\n        }\n\n        case STATUS: {\n          doPersist = this.handleStatusAction(req, rsp);\n          break;\n\n        }\n\n        case PERSIST: {\n          doPersist = this.handlePersistAction(req, rsp);\n          break;\n        }\n\n        case RELOAD: {\n          doPersist = this.handleReloadAction(req, rsp);\n          break;\n        }\n\n        case SWAP: {\n          doPersist = this.handleSwapAction(req, rsp);\n          break;\n        }\n\n        case MERGEINDEXES: {\n          doPersist = this.handleMergeAction(req, rsp);\n          break;\n        }\n\n        default: {\n          doPersist = this.handleCustomAction(req, rsp);\n          break;\n        }\n        case LOAD:\n          break;\n      }\n    }\n    // Should we persist the changes?\n    if (doPersist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72","date":1260860758,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n    boolean doPersist = false;\n\n    // Pick the action\n    SolrParams params = req.getParams();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      action = CoreAdminAction.get(a);\n      if (action == null) {\n        doPersist = this.handleCustomAction(req, rsp);\n      }\n    }\n    if (action != null) {\n      switch (action) {\n        case CREATE: {\n          doPersist = this.handleCreateAction(req, rsp);\n          break;\n        }\n\n        case RENAME: {\n          doPersist = this.handleRenameAction(req, rsp);\n          break;\n        }\n\n        case ALIAS: {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"'ALIAS' is not supported \" +\n            req.getParams().get(CoreAdminParams.ACTION));\n        }\n\n        case UNLOAD: {\n          doPersist = this.handleUnloadAction(req, rsp);\n          break;\n        }\n\n        case STATUS: {\n          doPersist = this.handleStatusAction(req, rsp);\n          break;\n\n        }\n\n        case PERSIST: {\n          doPersist = this.handlePersistAction(req, rsp);\n          break;\n        }\n\n        case RELOAD: {\n          doPersist = this.handleReloadAction(req, rsp);\n          break;\n        }\n\n        case SWAP: {\n          doPersist = this.handleSwapAction(req, rsp);\n          break;\n        }\n\n        case MERGEINDEXES: {\n          doPersist = this.handleMergeAction(req, rsp);\n          break;\n        }\n\n        default: {\n          doPersist = this.handleCustomAction(req, rsp);\n          break;\n        }\n        case LOAD:\n          break;\n      }\n    }\n    // Should we persist the changes?\n    if (doPersist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n    boolean doPersist = false;\n\n    // Pick the action\n    SolrParams params = req.getParams();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      action = CoreAdminAction.get(a);\n      if (action == null) {\n        doPersist = this.handleCustomAction(req, rsp);\n      }\n    }\n    if (action != null) {\n      switch (action) {\n        case CREATE: {\n          doPersist = this.handleCreateAction(req, rsp);\n          break;\n        }\n\n        case RENAME: {\n          doPersist = this.handleRenameAction(req, rsp);\n          break;\n        }\n\n        case ALIAS: {\n          doPersist = this.handleAliasAction(req, rsp);\n          break;\n        }\n\n        case UNLOAD: {\n          doPersist = this.handleUnloadAction(req, rsp);\n          break;\n        }\n\n        case STATUS: {\n          doPersist = this.handleStatusAction(req, rsp);\n          break;\n\n        }\n\n        case PERSIST: {\n          doPersist = this.handlePersistAction(req, rsp);\n          break;\n        }\n\n        case RELOAD: {\n          doPersist = this.handleReloadAction(req, rsp);\n          break;\n        }\n\n        case SWAP: {\n          doPersist = this.handleSwapAction(req, rsp);\n          break;\n        }\n\n        case MERGEINDEXES: {\n          doPersist = this.handleMergeAction(req, rsp);\n          break;\n        }\n\n        default: {\n          doPersist = this.handleCustomAction(req, rsp);\n          break;\n        }\n        case LOAD:\n          break;\n      }\n    }\n    // Should we persist the changes?\n    if (doPersist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n    boolean doPersist = false;\n\n    // Pick the action\n    SolrParams params = req.getParams();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      action = CoreAdminAction.get(a);\n      if (action == null) {\n        doPersist = this.handleCustomAction(req, rsp);\n      }\n    }\n    if (action != null) {\n      switch (action) {\n        case CREATE: {\n          doPersist = this.handleCreateAction(req, rsp);\n          break;\n        }\n\n        case RENAME: {\n          doPersist = this.handleRenameAction(req, rsp);\n          break;\n        }\n\n        case ALIAS: {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"'ALIAS' is not supported \" +\n            req.getParams().get(CoreAdminParams.ACTION));\n        }\n\n        case UNLOAD: {\n          doPersist = this.handleUnloadAction(req, rsp);\n          break;\n        }\n\n        case STATUS: {\n          doPersist = this.handleStatusAction(req, rsp);\n          break;\n\n        }\n\n        case PERSIST: {\n          doPersist = this.handlePersistAction(req, rsp);\n          break;\n        }\n\n        case RELOAD: {\n          doPersist = this.handleReloadAction(req, rsp);\n          break;\n        }\n\n        case SWAP: {\n          doPersist = this.handleSwapAction(req, rsp);\n          break;\n        }\n\n        case MERGEINDEXES: {\n          doPersist = this.handleMergeAction(req, rsp);\n          break;\n        }\n\n        default: {\n          doPersist = this.handleCustomAction(req, rsp);\n          break;\n        }\n        case LOAD:\n          break;\n      }\n    }\n    // Should we persist the changes?\n    if (doPersist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {\n    // Make sure the cores is enabled\n    CoreContainer cores = getCoreContainer();\n    if (cores == null) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Core container instance missing\");\n    }\n    boolean doPersist = false;\n\n    // Pick the action\n    SolrParams params = req.getParams();\n    CoreAdminAction action = CoreAdminAction.STATUS;\n    String a = params.get(CoreAdminParams.ACTION);\n    if (a != null) {\n      action = CoreAdminAction.get(a);\n      if (action == null) {\n        doPersist = this.handleCustomAction(req, rsp);\n      }\n    }\n    if (action != null) {\n      switch (action) {\n        case CREATE: {\n          doPersist = this.handleCreateAction(req, rsp);\n          break;\n        }\n\n        case RENAME: {\n          doPersist = this.handleRenameAction(req, rsp);\n          break;\n        }\n\n        case ALIAS: {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"'ALIAS' is not supported \" +\n            req.getParams().get(CoreAdminParams.ACTION));\n        }\n\n        case UNLOAD: {\n          doPersist = this.handleUnloadAction(req, rsp);\n          break;\n        }\n\n        case STATUS: {\n          doPersist = this.handleStatusAction(req, rsp);\n          break;\n\n        }\n\n        case PERSIST: {\n          doPersist = this.handlePersistAction(req, rsp);\n          break;\n        }\n\n        case RELOAD: {\n          doPersist = this.handleReloadAction(req, rsp);\n          break;\n        }\n\n        case SWAP: {\n          doPersist = this.handleSwapAction(req, rsp);\n          break;\n        }\n\n        case MERGEINDEXES: {\n          doPersist = this.handleMergeAction(req, rsp);\n          break;\n        }\n\n        default: {\n          doPersist = this.handleCustomAction(req, rsp);\n          break;\n        }\n        case LOAD:\n          break;\n      }\n    }\n    // Should we persist the changes?\n    if (doPersist) {\n      cores.persist();\n      rsp.add(\"saved\", cores.getConfigFile().getAbsolutePath());\n    }\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e142aa415d64cc28851a60cf70119546316a3dc3":["03a23d883b818d258c0eac4c2a49ef05ea534979"],"03a23d883b818d258c0eac4c2a49ef05ea534979":["c28792ff7d1774c306e16afbd44ded91a417049b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c28792ff7d1774c306e16afbd44ded91a417049b":["2284f4281eb212e60f8318c30e1d67c7d25422a7"],"64dd09b29d9d8046920d09defbc90ae1791c725d":["5231549ca15f43ec84ff65b78dffc6d239adf007"],"5231549ca15f43ec84ff65b78dffc6d239adf007":["f2d0ad8759bad601c993ea6eda6e5df1c2db2b28"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ea6404328413e5baef3771fcb95475356c339454":["61da3ca2ecb2710b1cc3080ea9d08114b9365cca"],"e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72":["ea6404328413e5baef3771fcb95475356c339454"],"6ab7653257459a54554c674f0b6a96fe135bcc90":["e142aa415d64cc28851a60cf70119546316a3dc3"],"2284f4281eb212e60f8318c30e1d67c7d25422a7":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f2d0ad8759bad601c993ea6eda6e5df1c2db2b28":["6ab7653257459a54554c674f0b6a96fe135bcc90"],"61da3ca2ecb2710b1cc3080ea9d08114b9365cca":["64dd09b29d9d8046920d09defbc90ae1791c725d"],"ad94625fb8d088209f46650c8097196fec67f00c":["e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e142aa415d64cc28851a60cf70119546316a3dc3":["6ab7653257459a54554c674f0b6a96fe135bcc90"],"03a23d883b818d258c0eac4c2a49ef05ea534979":["e142aa415d64cc28851a60cf70119546316a3dc3"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"c28792ff7d1774c306e16afbd44ded91a417049b":["03a23d883b818d258c0eac4c2a49ef05ea534979"],"64dd09b29d9d8046920d09defbc90ae1791c725d":["61da3ca2ecb2710b1cc3080ea9d08114b9365cca"],"5231549ca15f43ec84ff65b78dffc6d239adf007":["64dd09b29d9d8046920d09defbc90ae1791c725d"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"ea6404328413e5baef3771fcb95475356c339454":["e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72"],"e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72":["ad94625fb8d088209f46650c8097196fec67f00c"],"2284f4281eb212e60f8318c30e1d67c7d25422a7":["c28792ff7d1774c306e16afbd44ded91a417049b"],"6ab7653257459a54554c674f0b6a96fe135bcc90":["f2d0ad8759bad601c993ea6eda6e5df1c2db2b28"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["2284f4281eb212e60f8318c30e1d67c7d25422a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2d0ad8759bad601c993ea6eda6e5df1c2db2b28":["5231549ca15f43ec84ff65b78dffc6d239adf007"],"61da3ca2ecb2710b1cc3080ea9d08114b9365cca":["ea6404328413e5baef3771fcb95475356c339454"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}