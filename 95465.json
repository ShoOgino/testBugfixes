{"path":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#concatenateTest().mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#concatenateTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void concatenateTest() throws Exception { \n    StringBuilder builder = new StringBuilder();\n    builder.append((String)getStatResult(response, \"cr\", \"str\", \"csmin\"));\n    builder.append((String)getStatResult(response, \"cr\", \"str\", \"min\"));\n    String concat = (String)getStatResult(response, \"cr\", \"str\", \"ccmin\");\n    assertTrue(concat.equals(builder.toString()));\n\n    builder.setLength(0);\n    builder.append((String)getStatResult(response, \"cr\", \"str\", \"csmax\"));\n    builder.append((String)getStatResult(response, \"cr\", \"str\", \"max\"));\n    concat = (String)getStatResult(response, \"cr\", \"str\", \"ccmax\");\n    assertTrue(concat.equals(builder.toString()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b035f2b3f6fe0e60179e9f949a11950ad532cde","date":1385472320,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#concatenateTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#concatenateTest().mjava","sourceNew":"  @Test\n  public void concatenateTest() throws Exception {\n    StringBuilder builder = new StringBuilder();\n    builder.append((String) getStatResult(\"cr\", \"csmin\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"min\", VAL_TYPE.STRING));\n    String concat = (String) getStatResult(\"cr\", \"ccmin\", VAL_TYPE.STRING);\n    assertEquals(concat, builder.toString());\n\n    builder.setLength(0);\n    builder.append((String) getStatResult(\"cr\", \"csmax\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"max\", VAL_TYPE.STRING));\n    concat = (String) getStatResult(\"cr\", \"ccmax\", VAL_TYPE.STRING);\n    assertEquals(concat, builder.toString());\n  }\n\n","sourceOld":"  @Test\n  public void concatenateTest() throws Exception { \n    StringBuilder builder = new StringBuilder();\n    builder.append((String)getStatResult(response, \"cr\", \"str\", \"csmin\"));\n    builder.append((String)getStatResult(response, \"cr\", \"str\", \"min\"));\n    String concat = (String)getStatResult(response, \"cr\", \"str\", \"ccmin\");\n    assertTrue(concat.equals(builder.toString()));\n\n    builder.setLength(0);\n    builder.append((String)getStatResult(response, \"cr\", \"str\", \"csmax\"));\n    builder.append((String)getStatResult(response, \"cr\", \"str\", \"max\"));\n    concat = (String)getStatResult(response, \"cr\", \"str\", \"ccmax\");\n    assertTrue(concat.equals(builder.toString()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d840db4e4ec73c3ff5d5457046c6854cc630e26","date":1385608650,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#concatenateTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#concatenateTest().mjava","sourceNew":"  @Test\n  public void concatenateTest() throws Exception {\n    StringBuilder builder = new StringBuilder();\n    builder.append((String) getStatResult(\"cr\", \"csmin\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"min\", VAL_TYPE.STRING));\n    String concat = (String) getStatResult(\"cr\", \"ccmin\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), concat, builder.toString());\n\n    builder.setLength(0);\n    builder.append((String) getStatResult(\"cr\", \"csmax\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"max\", VAL_TYPE.STRING));\n    concat = (String) getStatResult(\"cr\", \"ccmax\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), concat, builder.toString());\n  }\n\n","sourceOld":"  @Test\n  public void concatenateTest() throws Exception {\n    StringBuilder builder = new StringBuilder();\n    builder.append((String) getStatResult(\"cr\", \"csmin\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"min\", VAL_TYPE.STRING));\n    String concat = (String) getStatResult(\"cr\", \"ccmin\", VAL_TYPE.STRING);\n    assertEquals(concat, builder.toString());\n\n    builder.setLength(0);\n    builder.append((String) getStatResult(\"cr\", \"csmax\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"max\", VAL_TYPE.STRING));\n    concat = (String) getStatResult(\"cr\", \"ccmax\", VAL_TYPE.STRING);\n    assertEquals(concat, builder.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#concatenateTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void concatenateTest() throws Exception {\n    StringBuilder builder = new StringBuilder();\n    builder.append((String) getStatResult(\"cr\", \"csmin\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"min\", VAL_TYPE.STRING));\n    String concat = (String) getStatResult(\"cr\", \"ccmin\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), concat, builder.toString());\n\n    builder.setLength(0);\n    builder.append((String) getStatResult(\"cr\", \"csmax\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"max\", VAL_TYPE.STRING));\n    concat = (String) getStatResult(\"cr\", \"ccmax\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), concat, builder.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/expression/ExpressionTest#concatenateTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#concatenateTest().mjava","sourceNew":"  @Test\n  public void concatenateTest() throws Exception {\n    StringBuilder builder = new StringBuilder();\n    builder.append((String) getStatResult(\"cr\", \"csmin\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"min\", VAL_TYPE.STRING));\n    String concat = (String) getStatResult(\"cr\", \"ccmin\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), concat, builder.toString());\n\n    builder.setLength(0);\n    builder.append((String) getStatResult(\"cr\", \"csmax\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"max\", VAL_TYPE.STRING));\n    concat = (String) getStatResult(\"cr\", \"ccmax\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), concat, builder.toString());\n  }\n\n","sourceOld":"  @Test\n  public void concatenateTest() throws Exception {\n    StringBuilder builder = new StringBuilder();\n    builder.append((String) getStatResult(\"cr\", \"csmin\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"min\", VAL_TYPE.STRING));\n    String concat = (String) getStatResult(\"cr\", \"ccmin\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), concat, builder.toString());\n\n    builder.setLength(0);\n    builder.append((String) getStatResult(\"cr\", \"csmax\", VAL_TYPE.STRING));\n    builder.append((String) getStatResult(\"cr\", \"max\", VAL_TYPE.STRING));\n    concat = (String) getStatResult(\"cr\", \"ccmax\", VAL_TYPE.STRING);\n    assertEquals(getRawResponse(), concat, builder.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8b035f2b3f6fe0e60179e9f949a11950ad532cde":["ff403346522eaa9de75403763e297e83a3ea585c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2d840db4e4ec73c3ff5d5457046c6854cc630e26":["8b035f2b3f6fe0e60179e9f949a11950ad532cde"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"]},"commit2Childs":{"8b035f2b3f6fe0e60179e9f949a11950ad532cde":["2d840db4e4ec73c3ff5d5457046c6854cc630e26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ff403346522eaa9de75403763e297e83a3ea585c":["8b035f2b3f6fe0e60179e9f949a11950ad532cde"],"2d840db4e4ec73c3ff5d5457046c6854cc630e26":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","0f719faa74f7213d4a395510dbc1f1b7cb178484"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}