{"path":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory#loadData().mjava","commits":[{"id":"a799d5c6eb6dd4c46e099b34640cc369f6db9155","date":1318737330,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory#loadData().mjava","pathOld":"/dev/null","sourceNew":"  public static synchronized void loadData() throws IOException, LangDetectException {\n    if (loaded)\n      return;\n    loaded = true;\n    List<String> profileData = new ArrayList<String>();\n    Charset encoding = Charset.forName(\"UTF-8\");\n    for (String language : languages) {\n      InputStream stream = LangDetectLanguageIdentifierUpdateProcessor.class.getResourceAsStream(\"langdetect-profiles/\" + language);\n      BufferedReader reader = new BufferedReader(new InputStreamReader(stream, encoding));\n      profileData.add(new String(IOUtils.toCharArray(reader)));\n      reader.close();\n    }\n    DetectorFactory.loadProfile(profileData);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3d746d6531bcbd34d88ebf9d99fe5735ee15e5","date":1328641123,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory#loadData().mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory#loadData().mjava","sourceNew":"  public static synchronized void loadData() throws IOException, LangDetectException {\n    if (loaded) {\n      return;\n    }\n    loaded = true;\n    List<String> profileData = new ArrayList<String>();\n    Charset encoding = Charset.forName(\"UTF-8\");\n    for (String language : languages) {\n      InputStream stream = LangDetectLanguageIdentifierUpdateProcessor.class.getResourceAsStream(\"langdetect-profiles/\" + language);\n      BufferedReader reader = new BufferedReader(new InputStreamReader(stream, encoding));\n      profileData.add(new String(IOUtils.toCharArray(reader)));\n      reader.close();\n    }\n    DetectorFactory.loadProfile(profileData);\n    DetectorFactory.setSeed(0);\n  }\n\n","sourceOld":"  public static synchronized void loadData() throws IOException, LangDetectException {\n    if (loaded)\n      return;\n    loaded = true;\n    List<String> profileData = new ArrayList<String>();\n    Charset encoding = Charset.forName(\"UTF-8\");\n    for (String language : languages) {\n      InputStream stream = LangDetectLanguageIdentifierUpdateProcessor.class.getResourceAsStream(\"langdetect-profiles/\" + language);\n      BufferedReader reader = new BufferedReader(new InputStreamReader(stream, encoding));\n      profileData.add(new String(IOUtils.toCharArray(reader)));\n      reader.close();\n    }\n    DetectorFactory.loadProfile(profileData);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory#loadData().mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory#loadData().mjava","sourceNew":"  public static synchronized void loadData() throws IOException, LangDetectException {\n    if (loaded) {\n      return;\n    }\n    loaded = true;\n    List<String> profileData = new ArrayList<>();\n    Charset encoding = Charset.forName(\"UTF-8\");\n    for (String language : languages) {\n      InputStream stream = LangDetectLanguageIdentifierUpdateProcessor.class.getResourceAsStream(\"langdetect-profiles/\" + language);\n      BufferedReader reader = new BufferedReader(new InputStreamReader(stream, encoding));\n      profileData.add(new String(IOUtils.toCharArray(reader)));\n      reader.close();\n    }\n    DetectorFactory.loadProfile(profileData);\n    DetectorFactory.setSeed(0);\n  }\n\n","sourceOld":"  public static synchronized void loadData() throws IOException, LangDetectException {\n    if (loaded) {\n      return;\n    }\n    loaded = true;\n    List<String> profileData = new ArrayList<String>();\n    Charset encoding = Charset.forName(\"UTF-8\");\n    for (String language : languages) {\n      InputStream stream = LangDetectLanguageIdentifierUpdateProcessor.class.getResourceAsStream(\"langdetect-profiles/\" + language);\n      BufferedReader reader = new BufferedReader(new InputStreamReader(stream, encoding));\n      profileData.add(new String(IOUtils.toCharArray(reader)));\n      reader.close();\n    }\n    DetectorFactory.loadProfile(profileData);\n    DetectorFactory.setSeed(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory#loadData().mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory#loadData().mjava","sourceNew":"  public static synchronized void loadData() throws IOException, LangDetectException {\n    if (loaded) {\n      return;\n    }\n    loaded = true;\n    List<String> profileData = new ArrayList<>();\n    for (String language : languages) {\n      InputStream stream = LangDetectLanguageIdentifierUpdateProcessor.class.getResourceAsStream(\"langdetect-profiles/\" + language);\n      BufferedReader reader = new BufferedReader(new InputStreamReader(stream, StandardCharsets.UTF_8));\n      profileData.add(new String(IOUtils.toCharArray(reader)));\n      reader.close();\n    }\n    DetectorFactory.loadProfile(profileData);\n    DetectorFactory.setSeed(0);\n  }\n\n","sourceOld":"  public static synchronized void loadData() throws IOException, LangDetectException {\n    if (loaded) {\n      return;\n    }\n    loaded = true;\n    List<String> profileData = new ArrayList<>();\n    Charset encoding = Charset.forName(\"UTF-8\");\n    for (String language : languages) {\n      InputStream stream = LangDetectLanguageIdentifierUpdateProcessor.class.getResourceAsStream(\"langdetect-profiles/\" + language);\n      BufferedReader reader = new BufferedReader(new InputStreamReader(stream, encoding));\n      profileData.add(new String(IOUtils.toCharArray(reader)));\n      reader.close();\n    }\n    DetectorFactory.loadProfile(profileData);\n    DetectorFactory.setSeed(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory#loadData().mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LangDetectLanguageIdentifierUpdateProcessorFactory#loadData().mjava","sourceNew":"  public static synchronized void loadData() throws IOException, LangDetectException {\n    if (loaded) {\n      return;\n    }\n    loaded = true;\n    List<String> profileData = new ArrayList<>();\n    for (String language : languages) {\n      InputStream stream = LangDetectLanguageIdentifierUpdateProcessor.class.getResourceAsStream(\"langdetect-profiles/\" + language);\n      BufferedReader reader = new BufferedReader(new InputStreamReader(stream, StandardCharsets.UTF_8));\n      profileData.add(new String(IOUtils.toCharArray(reader)));\n      reader.close();\n    }\n    DetectorFactory.loadProfile(profileData);\n    DetectorFactory.setSeed(0);\n  }\n\n","sourceOld":"  public static synchronized void loadData() throws IOException, LangDetectException {\n    if (loaded) {\n      return;\n    }\n    loaded = true;\n    List<String> profileData = new ArrayList<>();\n    Charset encoding = Charset.forName(\"UTF-8\");\n    for (String language : languages) {\n      InputStream stream = LangDetectLanguageIdentifierUpdateProcessor.class.getResourceAsStream(\"langdetect-profiles/\" + language);\n      BufferedReader reader = new BufferedReader(new InputStreamReader(stream, encoding));\n      profileData.add(new String(IOUtils.toCharArray(reader)));\n      reader.close();\n    }\n    DetectorFactory.loadProfile(profileData);\n    DetectorFactory.setSeed(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","9d3d365762604952e436b51980101dfc84cc1b3e"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["9d3d746d6531bcbd34d88ebf9d99fe5735ee15e5"],"9d3d746d6531bcbd34d88ebf9d99fe5735ee15e5":["a799d5c6eb6dd4c46e099b34640cc369f6db9155"],"9d3d365762604952e436b51980101dfc84cc1b3e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a799d5c6eb6dd4c46e099b34640cc369f6db9155":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d3d365762604952e436b51980101dfc84cc1b3e"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["5eb2511ababf862ea11e10761c70ee560cd84510","9d3d365762604952e436b51980101dfc84cc1b3e"],"9d3d746d6531bcbd34d88ebf9d99fe5735ee15e5":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a799d5c6eb6dd4c46e099b34640cc369f6db9155"],"a799d5c6eb6dd4c46e099b34640cc369f6db9155":["9d3d746d6531bcbd34d88ebf9d99fe5735ee15e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}