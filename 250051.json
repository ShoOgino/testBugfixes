{"path":"src/java/org/apache/lucene/search/DisjunctionSumScorer#initScorerDocQueue().mjava","commits":[{"id":"2e7672ca1c0bbf8f4b8c130c2debe1da508a27ed","date":1161132968,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DisjunctionSumScorer#initScorerDocQueue().mjava","pathOld":"src/java/org/apache/lucene/search/DisjunctionSumScorer#initScorerQueue().mjava","sourceNew":"  /** Called the first time next() or skipTo() is called to\n   * initialize <code>scorerDocQueue</code>.\n   */\n  private void initScorerDocQueue() throws IOException {\n    Iterator si = subScorers.iterator();\n    scorerDocQueue = new ScorerDocQueue(nrScorers);\n    queueSize = 0;\n    while (si.hasNext()) {\n      Scorer se = (Scorer) si.next();\n      if (se.next()) { // doc() method will be used in scorerDocQueue.\n        if (scorerDocQueue.insert(se)) {\n          queueSize++;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** Called the first time next() or skipTo() is called to\n   * initialize <code>scorerQueue</code>.\n   */\n  private void initScorerQueue() throws IOException {\n    Iterator si = subScorers.iterator();\n    scorerQueue = new ScorerQueue(nrScorers);\n    while (si.hasNext()) {\n      Scorer se = (Scorer) si.next();\n      if (se.next()) { // doc() method will be used in scorerQueue.\n        scorerQueue.insert(se);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7be534ca83a593a45a836cbffd544f2671d9ca60","date":1237394690,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DisjunctionSumScorer#initScorerDocQueue().mjava","pathOld":"src/java/org/apache/lucene/search/DisjunctionSumScorer#initScorerDocQueue().mjava","sourceNew":"  /** Called the first time next() or skipTo() is called to\n   * initialize <code>scorerDocQueue</code>.\n   */\n  private void initScorerDocQueue() throws IOException {\n    Iterator si = subScorers.iterator();\n    scorerDocQueue = new ScorerDocQueue(nrScorers);\n    while (si.hasNext()) {\n      Scorer se = (Scorer) si.next();\n      if (se.next()) { // doc() method will be used in scorerDocQueue.\n        scorerDocQueue.insert(se);\n      }\n    }\n  }\n\n","sourceOld":"  /** Called the first time next() or skipTo() is called to\n   * initialize <code>scorerDocQueue</code>.\n   */\n  private void initScorerDocQueue() throws IOException {\n    Iterator si = subScorers.iterator();\n    scorerDocQueue = new ScorerDocQueue(nrScorers);\n    queueSize = 0;\n    while (si.hasNext()) {\n      Scorer se = (Scorer) si.next();\n      if (se.next()) { // doc() method will be used in scorerDocQueue.\n        if (scorerDocQueue.insert(se)) {\n          queueSize++;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a558487f2298c2c19ceca9103c1b6865d64708","date":1244393921,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DisjunctionSumScorer#initScorerDocQueue().mjava","pathOld":"src/java/org/apache/lucene/search/DisjunctionSumScorer#initScorerDocQueue().mjava","sourceNew":"  /** Called the first time next() or skipTo() is called to\n   * initialize <code>scorerDocQueue</code>.\n   */\n  private void initScorerDocQueue() throws IOException {\n    Iterator si = subScorers.iterator();\n    scorerDocQueue = new ScorerDocQueue(nrScorers);\n    while (si.hasNext()) {\n      Scorer se = (Scorer) si.next();\n      if (se.nextDoc() != NO_MORE_DOCS) { // doc() method will be used in scorerDocQueue.\n        scorerDocQueue.insert(se);\n      }\n    }\n  }\n\n","sourceOld":"  /** Called the first time next() or skipTo() is called to\n   * initialize <code>scorerDocQueue</code>.\n   */\n  private void initScorerDocQueue() throws IOException {\n    Iterator si = subScorers.iterator();\n    scorerDocQueue = new ScorerDocQueue(nrScorers);\n    while (si.hasNext()) {\n      Scorer se = (Scorer) si.next();\n      if (se.next()) { // doc() method will be used in scorerDocQueue.\n        scorerDocQueue.insert(se);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0d3ac29cb12b76130b702427d6bcd355e68d126","date":1255699234,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DisjunctionSumScorer#initScorerDocQueue().mjava","pathOld":"src/java/org/apache/lucene/search/DisjunctionSumScorer#initScorerDocQueue().mjava","sourceNew":"  /** Called the first time next() or skipTo() is called to\n   * initialize <code>scorerDocQueue</code>.\n   */\n  private void initScorerDocQueue() throws IOException {\n    scorerDocQueue = new ScorerDocQueue(nrScorers);\n    for (Scorer se : subScorers) {\n      if (se.nextDoc() != NO_MORE_DOCS) {\n        scorerDocQueue.insert(se);\n      }\n    }\n  }\n\n","sourceOld":"  /** Called the first time next() or skipTo() is called to\n   * initialize <code>scorerDocQueue</code>.\n   */\n  private void initScorerDocQueue() throws IOException {\n    Iterator si = subScorers.iterator();\n    scorerDocQueue = new ScorerDocQueue(nrScorers);\n    while (si.hasNext()) {\n      Scorer se = (Scorer) si.next();\n      if (se.nextDoc() != NO_MORE_DOCS) { // doc() method will be used in scorerDocQueue.\n        scorerDocQueue.insert(se);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/DisjunctionSumScorer#initScorerDocQueue().mjava","pathOld":"src/java/org/apache/lucene/search/DisjunctionSumScorer#initScorerDocQueue().mjava","sourceNew":"  /** Called the first time next() or skipTo() is called to\n   * initialize <code>scorerDocQueue</code>.\n   */\n  private void initScorerDocQueue() throws IOException {\n    scorerDocQueue = new ScorerDocQueue(nrScorers);\n    for (Scorer se : subScorers) {\n      if (se.nextDoc() != NO_MORE_DOCS) {\n        scorerDocQueue.insert(se);\n      }\n    }\n  }\n\n","sourceOld":"  /** Called the first time next() or skipTo() is called to\n   * initialize <code>scorerDocQueue</code>.\n   */\n  private void initScorerDocQueue() throws IOException {\n    scorerDocQueue = new ScorerDocQueue(nrScorers);\n    for (Scorer se : subScorers) {\n      if (se.nextDoc() != NO_MORE_DOCS) {\n        scorerDocQueue.insert(se);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e7672ca1c0bbf8f4b8c130c2debe1da508a27ed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30a558487f2298c2c19ceca9103c1b6865d64708":["7be534ca83a593a45a836cbffd544f2671d9ca60"],"e0d3ac29cb12b76130b702427d6bcd355e68d126":["30a558487f2298c2c19ceca9103c1b6865d64708"],"7be534ca83a593a45a836cbffd544f2671d9ca60":["2e7672ca1c0bbf8f4b8c130c2debe1da508a27ed"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e0d3ac29cb12b76130b702427d6bcd355e68d126"]},"commit2Childs":{"2e7672ca1c0bbf8f4b8c130c2debe1da508a27ed":["7be534ca83a593a45a836cbffd544f2671d9ca60"],"30a558487f2298c2c19ceca9103c1b6865d64708":["e0d3ac29cb12b76130b702427d6bcd355e68d126"],"e0d3ac29cb12b76130b702427d6bcd355e68d126":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7be534ca83a593a45a836cbffd544f2671d9ca60":["30a558487f2298c2c19ceca9103c1b6865d64708"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2e7672ca1c0bbf8f4b8c130c2debe1da508a27ed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}