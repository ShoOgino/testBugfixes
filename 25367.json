{"path":"lucene/spatial3d/src/test/org/apache/lucene/bkdtree3d/TestGeo3DPointField#testBasic().mjava","commits":[{"id":"f64b7098768253180859cd8faeae6b1a185b06ed","date":1441223971,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/bkdtree3d/TestGeo3DPointField#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    int maxPointsInLeaf = TestUtil.nextInt(random(), 16, 2048);\n    int maxPointsSortInHeap = TestUtil.nextInt(random(), maxPointsInLeaf, 1024*1024);\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(TestUtil.alwaysDocValuesFormat(new Geo3DDocValuesFormat(PlanetModel.WGS84, maxPointsInLeaf, maxPointsSortInHeap)));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPointField(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        new GeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9891fa1f5a5571b36fbd8a69ccc12f24f5201e48"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9891fa1f5a5571b36fbd8a69ccc12f24f5201e48","date":1441921550,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/bkdtree3d/TestGeo3DPointField#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/bkdtree3d/TestGeo3DPointField#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    int maxPointsInLeaf = TestUtil.nextInt(random(), 16, 2048);\n    int maxPointsSortInHeap = TestUtil.nextInt(random(), maxPointsInLeaf, 1024*1024);\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(TestUtil.alwaysDocValuesFormat(new Geo3DDocValuesFormat(PlanetModel.WGS84, maxPointsInLeaf, maxPointsSortInHeap)));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPointField(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        new GeoStandardCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    int maxPointsInLeaf = TestUtil.nextInt(random(), 16, 2048);\n    int maxPointsSortInHeap = TestUtil.nextInt(random(), maxPointsInLeaf, 1024*1024);\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(TestUtil.alwaysDocValuesFormat(new Geo3DDocValuesFormat(PlanetModel.WGS84, maxPointsInLeaf, maxPointsSortInHeap)));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPointField(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        new GeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["f64b7098768253180859cd8faeae6b1a185b06ed"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae6b82f3eeb00bd6696223fc1aaf31128810162a","date":1441977719,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/bkdtree3d/TestGeo3DPointField#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/bkdtree3d/TestGeo3DPointField#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    int maxPointsInLeaf = TestUtil.nextInt(random(), 16, 2048);\n    int maxPointsSortInHeap = TestUtil.nextInt(random(), maxPointsInLeaf, 1024*1024);\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(TestUtil.alwaysDocValuesFormat(new Geo3DDocValuesFormat(PlanetModel.WGS84, maxPointsInLeaf, maxPointsSortInHeap)));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPointField(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    int maxPointsInLeaf = TestUtil.nextInt(random(), 16, 2048);\n    int maxPointsSortInHeap = TestUtil.nextInt(random(), maxPointsInLeaf, 1024*1024);\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(TestUtil.alwaysDocValuesFormat(new Geo3DDocValuesFormat(PlanetModel.WGS84, maxPointsInLeaf, maxPointsSortInHeap)));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPointField(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        new GeoStandardCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/bkdtree3d/TestGeo3DPointField#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/bkdtree3d/TestGeo3DPointField#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    int maxPointsInLeaf = TestUtil.nextInt(random(), 16, 2048);\n    int maxPointsSortInHeap = TestUtil.nextInt(random(), maxPointsInLeaf, 1024*1024);\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(TestUtil.alwaysDocValuesFormat(new Geo3DDocValuesFormat(PlanetModel.WGS84, maxPointsInLeaf, maxPointsSortInHeap)));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPointField(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    int maxPointsInLeaf = TestUtil.nextInt(random(), 16, 2048);\n    int maxPointsSortInHeap = TestUtil.nextInt(random(), maxPointsInLeaf, 1024*1024);\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(TestUtil.alwaysDocValuesFormat(new Geo3DDocValuesFormat(PlanetModel.WGS84, maxPointsInLeaf, maxPointsSortInHeap)));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPointField(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPointField#testBasic().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/bkdtree3d/TestGeo3DPointField#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPointField(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = getDirectory();\n    int maxPointsInLeaf = TestUtil.nextInt(random(), 16, 2048);\n    int maxPointsSortInHeap = TestUtil.nextInt(random(), maxPointsInLeaf, 1024*1024);\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(TestUtil.alwaysDocValuesFormat(new Geo3DDocValuesFormat(PlanetModel.WGS84, maxPointsInLeaf, maxPointsSortInHeap)));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new Geo3DPointField(\"field\", PlanetModel.WGS84, toRadians(50.7345267), toRadians(-97.5303555)));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    // We can't wrap with \"exotic\" readers because the query must see the BKD3DDVFormat:\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.search(new PointInGeo3DShapeQuery(PlanetModel.WGS84,\n                                                        \"field\",\n                                                        GeoCircleFactory.makeGeoCircle(PlanetModel.WGS84, toRadians(50), toRadians(-97), Math.PI/180.)), 1).totalHits);\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f64b7098768253180859cd8faeae6b1a185b06ed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"9891fa1f5a5571b36fbd8a69ccc12f24f5201e48":["f64b7098768253180859cd8faeae6b1a185b06ed"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["ae6b82f3eeb00bd6696223fc1aaf31128810162a"],"ae6b82f3eeb00bd6696223fc1aaf31128810162a":["9891fa1f5a5571b36fbd8a69ccc12f24f5201e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1904709ea0185dc04e3d77ea01c79e909caf2796"]},"commit2Childs":{"f64b7098768253180859cd8faeae6b1a185b06ed":["9891fa1f5a5571b36fbd8a69ccc12f24f5201e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f64b7098768253180859cd8faeae6b1a185b06ed"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9891fa1f5a5571b36fbd8a69ccc12f24f5201e48":["ae6b82f3eeb00bd6696223fc1aaf31128810162a"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"ae6b82f3eeb00bd6696223fc1aaf31128810162a":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}