{"path":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(Reader).mjava","commits":[{"id":"4f483a44e10befaaa6da11d433e2eb0f52829eec","date":1175273998,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(Reader).mjava","pathOld":"/dev/null","sourceNew":"  /** load the CSV input */\n  void load(Reader input) throws IOException {\n    Reader reader = input;\n    if (skipLines>0) {\n      if (!(reader instanceof BufferedReader)) {\n        reader = new BufferedReader(reader);\n      }\n      BufferedReader r = (BufferedReader)reader;\n      for (int i=0; i<skipLines; i++) {\n        r.readLine();\n      }\n    }\n\n    CSVParser parser = new CSVParser(reader, strategy);\n\n    // parse the fieldnames from the header of the file\n    if (fieldnames==null) {\n      fieldnames = parser.getLine();\n      if (fieldnames==null) {\n        throw new SolrException(400,\"Expected fieldnames in CSV input\");\n      }\n      prepareFields();\n    }\n\n    // read the rest of the CSV file\n    for(;;) {\n      int line = parser.getLineNumber();  // for error reporting in MT mode\n      String[] vals = parser.getLine();\n      if (vals==null) break;\n\n      if (vals.length != fields.length) {\n        input_err(\"expected \"+fields.length+\" values but got \"+vals.length, vals, line);\n      }\n\n      addDoc(line,vals);\n    }\n\n    if (params.getBool(COMMIT,true)) {\n      handler.commit(new CommitUpdateCommand(false));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39fe916f708b7a41a8b8f6572f135e2cb4d66aed","date":1175360846,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(Reader).mjava","pathOld":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(Reader).mjava","sourceNew":"  /** load the CSV input */\n  void load(Reader input) throws IOException {\n    Reader reader = input;\n    if (skipLines>0) {\n      if (!(reader instanceof BufferedReader)) {\n        reader = new BufferedReader(reader);\n      }\n      BufferedReader r = (BufferedReader)reader;\n      for (int i=0; i<skipLines; i++) {\n        r.readLine();\n      }\n    }\n\n    CSVParser parser = new CSVParser(reader, strategy);\n\n    // parse the fieldnames from the header of the file\n    if (fieldnames==null) {\n      fieldnames = parser.getLine();\n      if (fieldnames==null) {\n        throw new SolrException(400,\"Expected fieldnames in CSV input\");\n      }\n      prepareFields();\n    }\n\n    // read the rest of the CSV file\n    for(;;) {\n      int line = parser.getLineNumber();  // for error reporting in MT mode\n      String[] vals = parser.getLine();\n      if (vals==null) break;\n\n      if (vals.length != fields.length) {\n        input_err(\"expected \"+fields.length+\" values but got \"+vals.length, vals, line);\n      }\n\n      addDoc(line,vals);\n    }\n\n    if (params.getBool(COMMIT,false)) {\n      handler.commit(new CommitUpdateCommand(false));\n    }\n  }\n\n","sourceOld":"  /** load the CSV input */\n  void load(Reader input) throws IOException {\n    Reader reader = input;\n    if (skipLines>0) {\n      if (!(reader instanceof BufferedReader)) {\n        reader = new BufferedReader(reader);\n      }\n      BufferedReader r = (BufferedReader)reader;\n      for (int i=0; i<skipLines; i++) {\n        r.readLine();\n      }\n    }\n\n    CSVParser parser = new CSVParser(reader, strategy);\n\n    // parse the fieldnames from the header of the file\n    if (fieldnames==null) {\n      fieldnames = parser.getLine();\n      if (fieldnames==null) {\n        throw new SolrException(400,\"Expected fieldnames in CSV input\");\n      }\n      prepareFields();\n    }\n\n    // read the rest of the CSV file\n    for(;;) {\n      int line = parser.getLineNumber();  // for error reporting in MT mode\n      String[] vals = parser.getLine();\n      if (vals==null) break;\n\n      if (vals.length != fields.length) {\n        input_err(\"expected \"+fields.length+\" values but got \"+vals.length, vals, line);\n      }\n\n      addDoc(line,vals);\n    }\n\n    if (params.getBool(COMMIT,true)) {\n      handler.commit(new CommitUpdateCommand(false));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5992372a0b4dffa024ea5ce638410723e4687c62","date":1175440405,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(Reader).mjava","pathOld":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(Reader).mjava","sourceNew":"  /** load the CSV input */\n  void load(Reader input) throws IOException {\n    Reader reader = input;\n    if (skipLines>0) {\n      if (!(reader instanceof BufferedReader)) {\n        reader = new BufferedReader(reader);\n      }\n      BufferedReader r = (BufferedReader)reader;\n      for (int i=0; i<skipLines; i++) {\n        r.readLine();\n      }\n    }\n\n    CSVParser parser = new CSVParser(reader, strategy);\n\n    // parse the fieldnames from the header of the file\n    if (fieldnames==null) {\n      fieldnames = parser.getLine();\n      if (fieldnames==null) {\n        throw new SolrException(400,\"Expected fieldnames in CSV input\");\n      }\n      prepareFields();\n    }\n\n    // read the rest of the CSV file\n    for(;;) {\n      int line = parser.getLineNumber();  // for error reporting in MT mode\n      String[] vals = parser.getLine();\n      if (vals==null) break;\n\n      if (vals.length != fields.length) {\n        input_err(\"expected \"+fields.length+\" values but got \"+vals.length, vals, line);\n      }\n\n      addDoc(line,vals);\n    }\n  }\n\n","sourceOld":"  /** load the CSV input */\n  void load(Reader input) throws IOException {\n    Reader reader = input;\n    if (skipLines>0) {\n      if (!(reader instanceof BufferedReader)) {\n        reader = new BufferedReader(reader);\n      }\n      BufferedReader r = (BufferedReader)reader;\n      for (int i=0; i<skipLines; i++) {\n        r.readLine();\n      }\n    }\n\n    CSVParser parser = new CSVParser(reader, strategy);\n\n    // parse the fieldnames from the header of the file\n    if (fieldnames==null) {\n      fieldnames = parser.getLine();\n      if (fieldnames==null) {\n        throw new SolrException(400,\"Expected fieldnames in CSV input\");\n      }\n      prepareFields();\n    }\n\n    // read the rest of the CSV file\n    for(;;) {\n      int line = parser.getLineNumber();  // for error reporting in MT mode\n      String[] vals = parser.getLine();\n      if (vals==null) break;\n\n      if (vals.length != fields.length) {\n        input_err(\"expected \"+fields.length+\" values but got \"+vals.length, vals, line);\n      }\n\n      addDoc(line,vals);\n    }\n\n    if (params.getBool(COMMIT,false)) {\n      handler.commit(new CommitUpdateCommand(false));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(Reader).mjava","pathOld":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(Reader).mjava","sourceNew":"  /** load the CSV input */\n  void load(Reader input) throws IOException {\n    Reader reader = input;\n    if (skipLines>0) {\n      if (!(reader instanceof BufferedReader)) {\n        reader = new BufferedReader(reader);\n      }\n      BufferedReader r = (BufferedReader)reader;\n      for (int i=0; i<skipLines; i++) {\n        r.readLine();\n      }\n    }\n\n    CSVParser parser = new CSVParser(reader, strategy);\n\n    // parse the fieldnames from the header of the file\n    if (fieldnames==null) {\n      fieldnames = parser.getLine();\n      if (fieldnames==null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Expected fieldnames in CSV input\");\n      }\n      prepareFields();\n    }\n\n    // read the rest of the CSV file\n    for(;;) {\n      int line = parser.getLineNumber();  // for error reporting in MT mode\n      String[] vals = parser.getLine();\n      if (vals==null) break;\n\n      if (vals.length != fields.length) {\n        input_err(\"expected \"+fields.length+\" values but got \"+vals.length, vals, line);\n      }\n\n      addDoc(line,vals);\n    }\n  }\n\n","sourceOld":"  /** load the CSV input */\n  void load(Reader input) throws IOException {\n    Reader reader = input;\n    if (skipLines>0) {\n      if (!(reader instanceof BufferedReader)) {\n        reader = new BufferedReader(reader);\n      }\n      BufferedReader r = (BufferedReader)reader;\n      for (int i=0; i<skipLines; i++) {\n        r.readLine();\n      }\n    }\n\n    CSVParser parser = new CSVParser(reader, strategy);\n\n    // parse the fieldnames from the header of the file\n    if (fieldnames==null) {\n      fieldnames = parser.getLine();\n      if (fieldnames==null) {\n        throw new SolrException(400,\"Expected fieldnames in CSV input\");\n      }\n      prepareFields();\n    }\n\n    // read the rest of the CSV file\n    for(;;) {\n      int line = parser.getLineNumber();  // for error reporting in MT mode\n      String[] vals = parser.getLine();\n      if (vals==null) break;\n\n      if (vals.length != fields.length) {\n        input_err(\"expected \"+fields.length+\" values but got \"+vals.length, vals, line);\n      }\n\n      addDoc(line,vals);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e34a66231ee53fe909c5f7c0e71131fcb5246d89","date":1226598668,"type":4,"author":"Grant Ingersoll","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#load(Reader).mjava","sourceNew":null,"sourceOld":"  /** load the CSV input */\n  void load(Reader input) throws IOException {\n    Reader reader = input;\n    if (skipLines>0) {\n      if (!(reader instanceof BufferedReader)) {\n        reader = new BufferedReader(reader);\n      }\n      BufferedReader r = (BufferedReader)reader;\n      for (int i=0; i<skipLines; i++) {\n        r.readLine();\n      }\n    }\n\n    CSVParser parser = new CSVParser(reader, strategy);\n\n    // parse the fieldnames from the header of the file\n    if (fieldnames==null) {\n      fieldnames = parser.getLine();\n      if (fieldnames==null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Expected fieldnames in CSV input\");\n      }\n      prepareFields();\n    }\n\n    // read the rest of the CSV file\n    for(;;) {\n      int line = parser.getLineNumber();  // for error reporting in MT mode\n      String[] vals = parser.getLine();\n      if (vals==null) break;\n\n      if (vals.length != fields.length) {\n        input_err(\"expected \"+fields.length+\" values but got \"+vals.length, vals, line);\n      }\n\n      addDoc(line,vals);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5992372a0b4dffa024ea5ce638410723e4687c62":["39fe916f708b7a41a8b8f6572f135e2cb4d66aed"],"39fe916f708b7a41a8b8f6572f135e2cb4d66aed":["4f483a44e10befaaa6da11d433e2eb0f52829eec"],"e34a66231ee53fe909c5f7c0e71131fcb5246d89":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["5992372a0b4dffa024ea5ce638410723e4687c62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4f483a44e10befaaa6da11d433e2eb0f52829eec":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4f483a44e10befaaa6da11d433e2eb0f52829eec"],"5992372a0b4dffa024ea5ce638410723e4687c62":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"39fe916f708b7a41a8b8f6572f135e2cb4d66aed":["5992372a0b4dffa024ea5ce638410723e4687c62"],"e34a66231ee53fe909c5f7c0e71131fcb5246d89":[],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["e34a66231ee53fe909c5f7c0e71131fcb5246d89"],"4f483a44e10befaaa6da11d433e2eb0f52829eec":["39fe916f708b7a41a8b8f6572f135e2cb4d66aed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e34a66231ee53fe909c5f7c0e71131fcb5246d89","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}