{"path":"solr/core/src/test/org/apache/solr/search/TestFoldingMultitermQuery#testMultiBad().mjava","commits":[{"id":"f8d5405ac4f2510f9f83e07236792d1056c19640","date":1322235986,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFoldingMultitermQuery#testMultiBad().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultiBad() {\n    try {\n      assertQ(req(\"q\", \"content_multi_bad:\" + \"abCD*\"));\n      fail(\"Should throw exception when token evaluates to more than one term\");\n    } catch (Exception expected) {\n      assertTrue(expected.getCause() instanceof IllegalArgumentException);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15795b2193a8dd132f374975d4243687bee9351","date":1322413478,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFoldingMultitermQuery#testMultiBad().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFoldingMultitermQuery#testMultiBad().mjava","sourceNew":"  @Test\n  public void testMultiBad() {\n    try {\n      ignoreException(\"analyzer returned too many terms\");\n      assertQ(req(\"q\", \"content_multi_bad:\" + \"abCD*\"));\n      fail(\"Should throw exception when token evaluates to more than one term\");\n    } catch (Exception expected) {\n      assertTrue(expected.getCause() instanceof org.apache.solr.common.SolrException);\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiBad() {\n    try {\n      assertQ(req(\"q\", \"content_multi_bad:\" + \"abCD*\"));\n      fail(\"Should throw exception when token evaluates to more than one term\");\n    } catch (Exception expected) {\n      assertTrue(expected.getCause() instanceof IllegalArgumentException);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"464e7336798bc8a1281d5cf610c649c5a0784e83","date":1541256496,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFoldingMultitermQuery#testMultiBad().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFoldingMultitermQuery#testMultiBad().mjava","sourceNew":"  @Test\n  public void testMultiBad() {\n    try {\n      ignoreException(\"analyzer returned too many terms\");\n      Exception expected = expectThrows(Exception.class, \"Should throw exception when token evaluates to more than one term\",\n          () -> assertQ(req(\"q\", \"content_multi_bad:\" + \"abCD*\"))\n      );\n      assertTrue(expected.getCause() instanceof org.apache.solr.common.SolrException);\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMultiBad() {\n    try {\n      ignoreException(\"analyzer returned too many terms\");\n      assertQ(req(\"q\", \"content_multi_bad:\" + \"abCD*\"));\n      fail(\"Should throw exception when token evaluates to more than one term\");\n    } catch (Exception expected) {\n      assertTrue(expected.getCause() instanceof org.apache.solr.common.SolrException);\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8d5405ac4f2510f9f83e07236792d1056c19640":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f15795b2193a8dd132f374975d4243687bee9351":["f8d5405ac4f2510f9f83e07236792d1056c19640"],"464e7336798bc8a1281d5cf610c649c5a0784e83":["f15795b2193a8dd132f374975d4243687bee9351"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["464e7336798bc8a1281d5cf610c649c5a0784e83"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f8d5405ac4f2510f9f83e07236792d1056c19640"],"f8d5405ac4f2510f9f83e07236792d1056c19640":["f15795b2193a8dd132f374975d4243687bee9351"],"f15795b2193a8dd132f374975d4243687bee9351":["464e7336798bc8a1281d5cf610c649c5a0784e83"],"464e7336798bc8a1281d5cf610c649c5a0784e83":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}