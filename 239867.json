{"path":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#addDateTrieCodedDocumentField(Document,String,Date,boolean,Field.Store).mjava","commits":[{"id":"29191e6ce86bfcd231cd069834a87833fa4079c1","date":1228333111,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#addDateTrieCodedDocumentField(Document,String,Date,boolean,Field.Store).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Stores a Date value in trie-form in document for indexing.\n\t * <p>To store the different precisions of the long values (from one byte [only the most significant one] to the full eight bytes),\n\t * each lower precision is prefixed by the length ({@link #TRIE_CODED_PADDING_START}<code>+precision</code>),\n\t * in an extra \"helper\" field with a name of <code>fieldname+{@link #LOWER_PRECISION_FIELD_NAME_SUFFIX}</code>\n\t * (i.e. fieldname \"numeric\" => lower precision's name \"numeric#trie\").\n\t * The full long is not prefixed at all and indexed and stored according to the given flags in the original field name.\n\t * If the field should not be searchable, set <code>index</code> to <code>false</code>. It is then only stored (for convenience).\n\t * Fields added to a document using this method can be queried by {@link TrieRangeQuery}. \n\t */\n\tpublic void addDateTrieCodedDocumentField(\n\t\tfinal Document ldoc, final String fieldname,\n\t\tfinal Date val, final boolean index, final Field.Store store\n\t) {\n\t\taddConvertedTrieCodedDocumentField(ldoc, fieldname, dateToTrieCoded(val), index, store);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ef14ec05032a847f9ce1820055c6c29f72d771a","date":1231669514,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#addDateTrieCodedDocumentField(Document,String,Date,boolean,Field.Store).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#addDateTrieCodedDocumentField(Document,String,Date,boolean,Field.Store).mjava","sourceNew":"  /**\n   * Stores a Date value in trie-form in document for indexing.\n   * <p>To store the different precisions of the long values (from one byte [only the most significant one] to the full eight bytes),\n   * each lower precision is prefixed by the length ({@link #TRIE_CODED_PADDING_START}<code>+precision</code>),\n   * in an extra \"helper\" field with a name of <code>fieldname+{@link #LOWER_PRECISION_FIELD_NAME_SUFFIX}</code>\n   * (i.e. fieldname \"numeric\" => lower precision's name \"numeric#trie\").\n   * The full long is not prefixed at all and indexed and stored according to the given flags in the original field name.\n   * If the field should not be searchable, set <code>index</code> to <code>false</code>. It is then only stored (for convenience).\n   * Fields added to a document using this method can be queried by {@link TrieRangeQuery}. \n   */\n  public void addDateTrieCodedDocumentField(\n    final Document ldoc, final String fieldname,\n    final Date val, final boolean index, final Field.Store store\n  ) {\n    addConvertedTrieCodedDocumentField(ldoc, fieldname, dateToTrieCoded(val), index, store);\n  }\n\n","sourceOld":"\t/**\n\t * Stores a Date value in trie-form in document for indexing.\n\t * <p>To store the different precisions of the long values (from one byte [only the most significant one] to the full eight bytes),\n\t * each lower precision is prefixed by the length ({@link #TRIE_CODED_PADDING_START}<code>+precision</code>),\n\t * in an extra \"helper\" field with a name of <code>fieldname+{@link #LOWER_PRECISION_FIELD_NAME_SUFFIX}</code>\n\t * (i.e. fieldname \"numeric\" => lower precision's name \"numeric#trie\").\n\t * The full long is not prefixed at all and indexed and stored according to the given flags in the original field name.\n\t * If the field should not be searchable, set <code>index</code> to <code>false</code>. It is then only stored (for convenience).\n\t * Fields added to a document using this method can be queried by {@link TrieRangeQuery}. \n\t */\n\tpublic void addDateTrieCodedDocumentField(\n\t\tfinal Document ldoc, final String fieldname,\n\t\tfinal Date val, final boolean index, final Field.Store store\n\t) {\n\t\taddConvertedTrieCodedDocumentField(ldoc, fieldname, dateToTrieCoded(val), index, store);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0","date":1234549621,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#addDateTrieCodedDocumentField(Document,String,Date,boolean,Field.Store).mjava","sourceNew":null,"sourceOld":"  /**\n   * Stores a Date value in trie-form in document for indexing.\n   * <p>To store the different precisions of the long values (from one byte [only the most significant one] to the full eight bytes),\n   * each lower precision is prefixed by the length ({@link #TRIE_CODED_PADDING_START}<code>+precision</code>),\n   * in an extra \"helper\" field with a name of <code>fieldname+{@link #LOWER_PRECISION_FIELD_NAME_SUFFIX}</code>\n   * (i.e. fieldname \"numeric\" => lower precision's name \"numeric#trie\").\n   * The full long is not prefixed at all and indexed and stored according to the given flags in the original field name.\n   * If the field should not be searchable, set <code>index</code> to <code>false</code>. It is then only stored (for convenience).\n   * Fields added to a document using this method can be queried by {@link TrieRangeQuery}. \n   */\n  public void addDateTrieCodedDocumentField(\n    final Document ldoc, final String fieldname,\n    final Date val, final boolean index, final Field.Store store\n  ) {\n    addConvertedTrieCodedDocumentField(ldoc, fieldname, dateToTrieCoded(val), index, store);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0":["8ef14ec05032a847f9ce1820055c6c29f72d771a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29191e6ce86bfcd231cd069834a87833fa4079c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8ef14ec05032a847f9ce1820055c6c29f72d771a":["29191e6ce86bfcd231cd069834a87833fa4079c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0"]},"commit2Childs":{"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29191e6ce86bfcd231cd069834a87833fa4079c1"],"29191e6ce86bfcd231cd069834a87833fa4079c1":["8ef14ec05032a847f9ce1820055c6c29f72d771a"],"8ef14ec05032a847f9ce1820055c6c29f72d771a":["d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}