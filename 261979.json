{"path":"src/java/org/apache/lucene/index/DocumentsWriterFieldData#processField(Analyzer).mjava","commits":[{"id":"5a0af3a442be522899177e5e11384a45a6784a3f","date":1205348952,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriterFieldData#processField(Analyzer).mjava","pathOld":"/dev/null","sourceNew":"  /** Process all occurrences of one field in the document. */\n  public void processField(Analyzer analyzer) throws IOException, AbortException {\n    length = 0;\n    position = 0;\n    offset = 0;\n    boost = threadState.docBoost;\n\n    final int maxFieldLength = threadState.docWriter.writer.getMaxFieldLength();\n\n    final int limit = fieldCount;\n    final Fieldable[] docFieldsFinal = docFields;\n\n    boolean doWriteVectors = true;\n\n    // Walk through all occurrences in this doc for this\n    // field:\n    try {\n      for(int j=0;j<limit;j++) {\n        Fieldable field = docFieldsFinal[j];\n\n        if (field.isIndexed())\n          invertField(field, analyzer, maxFieldLength);\n\n        if (field.isStored()) {\n          threadState.numStoredFields++;\n          boolean success = false;\n          try {\n            threadState.localFieldsWriter.writeField(fieldInfo, field);\n            success = true;\n          } finally {\n            // If we hit an exception inside\n            // localFieldsWriter.writeField, the\n            // contents of fdtLocal can be corrupt, so\n            // we must discard all stored fields for\n            // this document:\n            if (!success)\n              threadState.fdtLocal.reset();\n          }\n        }\n\n        docFieldsFinal[j] = null;\n      }\n    } catch (AbortException ae) {\n      doWriteVectors = false;\n      throw ae;\n    } finally {\n      if (postingsVectorsUpto > 0) {\n        try {\n          if (doWriteVectors) {\n            // Add term vectors for this field\n            boolean success = false;\n            try {\n              writeVectors(fieldInfo);\n              success = true;\n            } finally {\n              if (!success) {\n                // If we hit an exception inside\n                // writeVectors, the contents of tvfLocal\n                // can be corrupt, so we must discard all\n                // term vectors for this document:\n                threadState.numVectorFields = 0;\n                threadState.tvfLocal.reset();\n              }\n            }\n          }\n        } finally {\n          if (postingsVectorsUpto > threadState.maxPostingsVectors)\n            threadState.maxPostingsVectors = postingsVectorsUpto;\n          postingsVectorsUpto = 0;\n          threadState.vectorsPool.reset();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/DocumentsWriterFieldData#processField(Analyzer).mjava","sourceNew":null,"sourceOld":"  /** Process all occurrences of one field in the document. */\n  public void processField(Analyzer analyzer) throws IOException, AbortException {\n    length = 0;\n    position = 0;\n    offset = 0;\n    boost = threadState.docBoost;\n\n    final int maxFieldLength = threadState.docWriter.writer.getMaxFieldLength();\n\n    final int limit = fieldCount;\n    final Fieldable[] docFieldsFinal = docFields;\n\n    boolean doWriteVectors = true;\n\n    // Walk through all occurrences in this doc for this\n    // field:\n    try {\n      for(int j=0;j<limit;j++) {\n        Fieldable field = docFieldsFinal[j];\n\n        if (field.isIndexed())\n          invertField(field, analyzer, maxFieldLength);\n\n        if (field.isStored()) {\n          threadState.numStoredFields++;\n          boolean success = false;\n          try {\n            threadState.localFieldsWriter.writeField(fieldInfo, field);\n            success = true;\n          } finally {\n            // If we hit an exception inside\n            // localFieldsWriter.writeField, the\n            // contents of fdtLocal can be corrupt, so\n            // we must discard all stored fields for\n            // this document:\n            if (!success)\n              threadState.fdtLocal.reset();\n          }\n        }\n\n        docFieldsFinal[j] = null;\n      }\n    } catch (AbortException ae) {\n      doWriteVectors = false;\n      throw ae;\n    } finally {\n      if (postingsVectorsUpto > 0) {\n        try {\n          if (doWriteVectors) {\n            // Add term vectors for this field\n            boolean success = false;\n            try {\n              writeVectors(fieldInfo);\n              success = true;\n            } finally {\n              if (!success) {\n                // If we hit an exception inside\n                // writeVectors, the contents of tvfLocal\n                // can be corrupt, so we must discard all\n                // term vectors for this document:\n                threadState.numVectorFields = 0;\n                threadState.tvfLocal.reset();\n              }\n            }\n          }\n        } finally {\n          if (postingsVectorsUpto > threadState.maxPostingsVectors)\n            threadState.maxPostingsVectors = postingsVectorsUpto;\n          postingsVectorsUpto = 0;\n          threadState.vectorsPool.reset();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a0af3a442be522899177e5e11384a45a6784a3f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5350389bf83287111f7760b9e3db3af8e3648474":["5a0af3a442be522899177e5e11384a45a6784a3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5350389bf83287111f7760b9e3db3af8e3648474"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a0af3a442be522899177e5e11384a45a6784a3f"],"5a0af3a442be522899177e5e11384a45a6784a3f":["5350389bf83287111f7760b9e3db3af8e3648474"],"5350389bf83287111f7760b9e3db3af8e3648474":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}