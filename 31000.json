{"path":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","commits":[{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n    if (field.hasDocValues() && !(field.isRequired() || field.getDefaultValue() != null)) {\n      throw new IllegalStateException(\"Field \" + this + \" has doc values enabled, but has no default value and is not required\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n    if (field.hasDocValues() && !(field.isRequired() || field.getDefaultValue() != null)) {\n      throw new IllegalStateException(\"Field \" + this + \" has doc values enabled, but has no default value and is not required\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3","date":1361894345,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","sourceNew":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n    if (field.hasDocValues() && !field.multiValued() && !(field.isRequired() || field.getDefaultValue() != null)) {\n      throw new IllegalStateException(\"Field \" + this + \" has single-valued doc values enabled, but has no default value and is not required\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n    if (field.hasDocValues() && !(field.isRequired() || field.getDefaultValue() != null)) {\n      throw new IllegalStateException(\"Field \" + this + \" has doc values enabled, but has no default value and is not required\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10307c7cc22e7e4087990972985e1d1043f01442","date":1376933032,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","sourceNew":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n  }\n\n","sourceOld":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n    if (field.hasDocValues() && !field.multiValued() && !(field.isRequired() || field.getDefaultValue() != null)) {\n      throw new IllegalStateException(\"Field \" + this + \" has single-valued doc values enabled, but has no default value and is not required\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","sourceNew":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n  }\n\n","sourceOld":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n    if (field.hasDocValues() && !field.multiValued() && !(field.isRequired() || field.getDefaultValue() != null)) {\n      throw new IllegalStateException(\"Field \" + this + \" has single-valued doc values enabled, but has no default value and is not required\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","sourceNew":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n  }\n\n","sourceOld":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n    if (field.hasDocValues() && !field.multiValued() && !(field.isRequired() || field.getDefaultValue() != null)) {\n      throw new IllegalStateException(\"Field \" + this + \" has single-valued doc values enabled, but has no default value and is not required\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12f7f335611574989edc8f87d25d91e89aa385b6","date":1489690739,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b4eb0a25318cc756077fbde9bd3052690aed03d","date":1490280009,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieField#checkSchemaField(SchemaField).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void checkSchemaField(final SchemaField field) {\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3":["73bb5a57dc75b54a39494f99986599cae7dff417"],"10307c7cc22e7e4087990972985e1d1043f01442":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","73bb5a57dc75b54a39494f99986599cae7dff417"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b4eb0a25318cc756077fbde9bd3052690aed03d":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3","10307c7cc22e7e4087990972985e1d1043f01442"],"12f7f335611574989edc8f87d25d91e89aa385b6":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12f7f335611574989edc8f87d25d91e89aa385b6"],"73bb5a57dc75b54a39494f99986599cae7dff417":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3":["10307c7cc22e7e4087990972985e1d1043f01442","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"10307c7cc22e7e4087990972985e1d1043f01442":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["95303ff3749680c743b9425f9cf99e6e4065e8a8","73bb5a57dc75b54a39494f99986599cae7dff417"],"7b4eb0a25318cc756077fbde9bd3052690aed03d":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","7b4eb0a25318cc756077fbde9bd3052690aed03d","12f7f335611574989edc8f87d25d91e89aa385b6"],"12f7f335611574989edc8f87d25d91e89aa385b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"73bb5a57dc75b54a39494f99986599cae7dff417":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["95303ff3749680c743b9425f9cf99e6e4065e8a8","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","7b4eb0a25318cc756077fbde9bd3052690aed03d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}