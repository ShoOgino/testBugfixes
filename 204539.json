{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/field/IntFieldsTest#multiValuedTrieIntTest().mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/field/IntFieldsTest#multiValuedTrieIntTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void multiValuedTrieIntTest() throws IOException {\n    IntMultiTrieField valueField = new IntMultiTrieField(\"int_im_t\");\n    Map<String,Map<Integer,Integer>> values = new HashMap<>();\n    \n    Set<String> missing = collectFieldValues(valueField, id -> {\n      Map<Integer, Integer> doc = new HashMap<>();\n      valueField.streamInts( value -> {\n        doc.put(value, doc.getOrDefault(value, 0) + 1);\n      });\n      if (doc.size() > 0) {\n        values.put(id, doc);\n      }\n      return doc.size() > 0;\n    });\n    \n    checkMultiFieldValues(multiInts, values, missing, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/field/IntFieldsTest#multiValuedTrieIntTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/field/IntFieldsTest#multiValuedTrieIntTest().mjava","sourceNew":"  @Test\n  public void multiValuedTrieIntTest() throws IOException {\n    IntMultiTrieField valueField = new IntMultiTrieField(\"int_im_t\");\n    Map<String,Map<Integer,Integer>> values = new HashMap<>();\n\n    Set<String> missing = collectFieldValues(valueField, id -> {\n      Map<Integer, Integer> doc = new HashMap<>();\n      valueField.streamInts( value -> {\n        doc.put(value, doc.getOrDefault(value, 0) + 1);\n      });\n      if (doc.size() > 0) {\n        values.put(id, doc);\n      }\n      return doc.size() > 0;\n    });\n\n    checkMultiFieldValues(multiInts, values, missing, true);\n  }\n\n","sourceOld":"  @Test\n  public void multiValuedTrieIntTest() throws IOException {\n    IntMultiTrieField valueField = new IntMultiTrieField(\"int_im_t\");\n    Map<String,Map<Integer,Integer>> values = new HashMap<>();\n    \n    Set<String> missing = collectFieldValues(valueField, id -> {\n      Map<Integer, Integer> doc = new HashMap<>();\n      valueField.streamInts( value -> {\n        doc.put(value, doc.getOrDefault(value, 0) + 1);\n      });\n      if (doc.size() > 0) {\n        values.put(id, doc);\n      }\n      return doc.size() > 0;\n    });\n    \n    checkMultiFieldValues(multiInts, values, missing, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/field/IntFieldsTest#multiValuedTrieIntTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/field/IntFieldsTest#multiValuedTrieIntTest().mjava","sourceNew":"  @Test\n  public void multiValuedTrieIntTest() throws IOException {\n    IntMultiTrieField valueField = new IntMultiTrieField(\"int_im_t\");\n    Map<String,Map<Integer,Integer>> values = new HashMap<>();\n\n    Set<String> missing = collectFieldValues(valueField, id -> {\n      Map<Integer, Integer> doc = new HashMap<>();\n      valueField.streamInts( value -> {\n        doc.put(value, doc.getOrDefault(value, 0) + 1);\n      });\n      if (doc.size() > 0) {\n        values.put(id, doc);\n      }\n      return doc.size() > 0;\n    });\n\n    checkMultiFieldValues(multiInts, values, missing, true);\n  }\n\n","sourceOld":"  @Test\n  public void multiValuedTrieIntTest() throws IOException {\n    IntMultiTrieField valueField = new IntMultiTrieField(\"int_im_t\");\n    Map<String,Map<Integer,Integer>> values = new HashMap<>();\n    \n    Set<String> missing = collectFieldValues(valueField, id -> {\n      Map<Integer, Integer> doc = new HashMap<>();\n      valueField.streamInts( value -> {\n        doc.put(value, doc.getOrDefault(value, 0) + 1);\n      });\n      if (doc.size() > 0) {\n        values.put(id, doc);\n      }\n      return doc.size() > 0;\n    });\n    \n    checkMultiFieldValues(multiInts, values, missing, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/field/IntFieldsTest#multiValuedTrieIntTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/field/IntFieldsTest#multiValuedTrieIntTest().mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  @Test\n  public void multiValuedTrieIntTest() throws IOException {\n    IntMultiTrieField valueField = new IntMultiTrieField(\"int_im_t\");\n    Map<String,Map<Integer,Integer>> values = new HashMap<>();\n\n    Set<String> missing = collectFieldValues(valueField, id -> {\n      Map<Integer, Integer> doc = new HashMap<>();\n      valueField.streamInts( value -> {\n        doc.put(value, doc.getOrDefault(value, 0) + 1);\n      });\n      if (doc.size() > 0) {\n        values.put(id, doc);\n      }\n      return doc.size() > 0;\n    });\n\n    checkMultiFieldValues(multiInts, values, missing, true);\n  }\n\n","sourceOld":"  @Test\n  public void multiValuedTrieIntTest() throws IOException {\n    IntMultiTrieField valueField = new IntMultiTrieField(\"int_im_t\");\n    Map<String,Map<Integer,Integer>> values = new HashMap<>();\n\n    Set<String> missing = collectFieldValues(valueField, id -> {\n      Map<Integer, Integer> doc = new HashMap<>();\n      valueField.streamInts( value -> {\n        doc.put(value, doc.getOrDefault(value, 0) + 1);\n      });\n      if (doc.size() > 0) {\n        values.put(id, doc);\n      }\n      return doc.size() > 0;\n    });\n\n    checkMultiFieldValues(multiInts, values, missing, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/field/IntFieldsTest#multiValuedTrieIntTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/field/IntFieldsTest#multiValuedTrieIntTest().mjava","sourceNew":"  @Test\n  public void multiValuedTrieIntTest() throws IOException {\n    IntMultiTrieField valueField = new IntMultiTrieField(\"int_im_t\");\n    Map<String,Map<Integer,Integer>> values = new HashMap<>();\n\n    Set<String> missing = collectFieldValues(valueField, id -> {\n      Map<Integer, Integer> doc = new HashMap<>();\n      valueField.streamInts( value -> {\n        doc.put(value, doc.getOrDefault(value, 0) + 1);\n      });\n      if (doc.size() > 0) {\n        values.put(id, doc);\n      }\n      return doc.size() > 0;\n    });\n\n    checkMultiFieldValues(multiInts, values, missing, true);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  @Test\n  public void multiValuedTrieIntTest() throws IOException {\n    IntMultiTrieField valueField = new IntMultiTrieField(\"int_im_t\");\n    Map<String,Map<Integer,Integer>> values = new HashMap<>();\n\n    Set<String> missing = collectFieldValues(valueField, id -> {\n      Map<Integer, Integer> doc = new HashMap<>();\n      valueField.streamInts( value -> {\n        doc.put(value, doc.getOrDefault(value, 0) + 1);\n      });\n      if (doc.size() > 0) {\n        values.put(id, doc);\n      }\n      return doc.size() > 0;\n    });\n\n    checkMultiFieldValues(multiInts, values, missing, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","f8061ddd97f3352007d927dae445884a6f3d857b"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}