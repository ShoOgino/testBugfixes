{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    if (canReuse(reuse, liveDocs)) {\n      // if (DEBUG) System.out.println(\"SPR.docs ts=\" + termState);\n      return ((SegmentDocsEnumBase) reuse).reset(fieldInfo, (StandardTermState)termState);\n    }\n    return newDocsEnum(liveDocs, fieldInfo, (StandardTermState)termState);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    if (canReuse(reuse, liveDocs)) {\n      // if (DEBUG) System.out.println(\"SPR.docs ts=\" + termState);\n      return ((SegmentDocsEnumBase) reuse).reset(fieldInfo, (StandardTermState)termState);\n    }\n    return newDocsEnum(liveDocs, fieldInfo, (StandardTermState)termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    if (canReuse(reuse, liveDocs)) {\n      // if (DEBUG) System.out.println(\"SPR.docs ts=\" + termState);\n      return ((SegmentDocsEnumBase) reuse).reset(fieldInfo, (StandardTermState)termState);\n    }\n    return newDocsEnum(liveDocs, fieldInfo, (StandardTermState)termState);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    if (canReuse(reuse, liveDocs)) {\n      // if (DEBUG) System.out.println(\"SPR.docs ts=\" + termState);\n      return ((SegmentDocsEnumBase) reuse).reset(fieldInfo, (StandardTermState)termState);\n    }\n    return newDocsEnum(liveDocs, fieldInfo, (StandardTermState)termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    if (canReuse(reuse, liveDocs)) {\n      // if (DEBUG) System.out.println(\"SPR.docs ts=\" + termState);\n      return ((SegmentDocsEnumBase) reuse).reset(fieldInfo, (StandardTermState)termState);\n    }\n    return newDocsEnum(liveDocs, fieldInfo, (StandardTermState)termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}