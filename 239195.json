{"path":"lucene/core/src/java/org/apache/lucene/document/FloatPoint#FloatPoint(String,float...).mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FloatPoint#FloatPoint(String,float...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DimensionalFloatField#DimensionalFloatField(String,float...).mjava","sourceNew":"  /** Creates a new FloatPoint, indexing the\n   *  provided N-dimensional float point.\n   *\n   *  @param name field name\n   *  @param point int[] value\n   *  @throws IllegalArgumentException if the field name or value is null.\n   */\n  public FloatPoint(String name, float... point) {\n    super(name, pack(point), getType(point.length));\n  }\n\n","sourceOld":"  /** Creates a new DimensionalFloatField, indexing the\n   *  provided N-dimensional float point.\n   *\n   *  @param name field name\n   *  @param point int[] value\n   *  @throws IllegalArgumentException if the field name or value is null.\n   */\n  public DimensionalFloatField(String name, float... point) {\n    super(name, pack(point), getType(point.length));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3104a6ba367dfb690806b227c5ef17c42c6107b","date":1456265035,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FloatPoint#FloatPoint(String,float...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FloatPoint#FloatPoint(String,float...).mjava","sourceNew":"  /** Creates a new FloatPoint, indexing the\n   *  provided N-dimensional float point.\n   *\n   *  @param name field name\n   *  @param point float[] value\n   *  @throws IllegalArgumentException if the field name or value is null.\n   */\n  public FloatPoint(String name, float... point) {\n    super(name, pack(point), getType(point.length));\n  }\n\n","sourceOld":"  /** Creates a new FloatPoint, indexing the\n   *  provided N-dimensional float point.\n   *\n   *  @param name field name\n   *  @param point int[] value\n   *  @throws IllegalArgumentException if the field name or value is null.\n   */\n  public FloatPoint(String name, float... point) {\n    super(name, pack(point), getType(point.length));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","date":1456265720,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FloatPoint#FloatPoint(String,float...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FloatPoint#FloatPoint(String,float...).mjava","sourceNew":"  /** Creates a new FloatPoint, indexing the\n   *  provided N-dimensional float point.\n   *\n   *  @param name field name\n   *  @param point float[] value\n   *  @throws IllegalArgumentException if the field name or value is null.\n   */\n  public FloatPoint(String name, float... point) {\n    super(name, pack(point), getType(point.length));\n  }\n\n","sourceOld":"  /** Creates a new FloatPoint, indexing the\n   *  provided N-dimensional float point.\n   *\n   *  @param name field name\n   *  @param point int[] value\n   *  @throws IllegalArgumentException if the field name or value is null.\n   */\n  public FloatPoint(String name, float... point) {\n    super(name, pack(point), getType(point.length));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5296efc4b319f5647b606629c093a94b23692c6","date":1456267155,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FloatPoint#FloatPoint(String,float...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FloatPoint#FloatPoint(String,float...).mjava","sourceNew":"  /** Creates a new FloatPoint, indexing the\n   *  provided N-dimensional float point.\n   *\n   *  @param name field name\n   *  @param point float[] value\n   *  @throws IllegalArgumentException if the field name or value is null.\n   */\n  public FloatPoint(String name, float... point) {\n    super(name, pack(point), getType(point.length));\n  }\n\n","sourceOld":"  /** Creates a new FloatPoint, indexing the\n   *  provided N-dimensional float point.\n   *\n   *  @param name field name\n   *  @param point int[] value\n   *  @throws IllegalArgumentException if the field name or value is null.\n   */\n  public FloatPoint(String name, float... point) {\n    super(name, pack(point), getType(point.length));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6","date":1456306182,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/FloatPoint#FloatPoint(String,float...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/FloatPoint#FloatPoint(String,float...).mjava","sourceNew":"  /** Creates a new FloatPoint, indexing the\n   *  provided N-dimensional float point.\n   *\n   *  @param name field name\n   *  @param point float[] value\n   *  @throws IllegalArgumentException if the field name or value is null.\n   */\n  public FloatPoint(String name, float... point) {\n    super(name, pack(point), getType(point.length));\n  }\n\n","sourceOld":"  /** Creates a new FloatPoint, indexing the\n   *  provided N-dimensional float point.\n   *\n   *  @param name field name\n   *  @param point int[] value\n   *  @throws IllegalArgumentException if the field name or value is null.\n   */\n  public FloatPoint(String name, float... point) {\n    super(name, pack(point), getType(point.length));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d3104a6ba367dfb690806b227c5ef17c42c6107b":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","a5296efc4b319f5647b606629c093a94b23692c6"],"7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","d3104a6ba367dfb690806b227c5ef17c42c6107b"],"a5296efc4b319f5647b606629c093a94b23692c6":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","d3104a6ba367dfb690806b227c5ef17c42c6107b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1ff4a3d0540c1b0f828f19adccd01d1b33c996a6"]},"commit2Childs":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["d3104a6ba367dfb690806b227c5ef17c42c6107b","1ff4a3d0540c1b0f828f19adccd01d1b33c996a6","7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","a5296efc4b319f5647b606629c093a94b23692c6"],"d3104a6ba367dfb690806b227c5ef17c42c6107b":["7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","a5296efc4b319f5647b606629c093a94b23692c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5":[],"a5296efc4b319f5647b606629c093a94b23692c6":["1ff4a3d0540c1b0f828f19adccd01d1b33c996a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}