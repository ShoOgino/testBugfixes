{"path":"lucene/test-framework/src/java/org/apache/lucene/geo/BaseXYPointTestCase#testRectBoundariesAreInclusive().mjava","commits":[{"id":"0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04","date":1582280790,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/BaseXYPointTestCase#testRectBoundariesAreInclusive().mjava","pathOld":"/dev/null","sourceNew":"  public void testRectBoundariesAreInclusive() throws Exception {\n    XYRectangle rect = ShapeTestUtil.nextBox(random());\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    // Else seeds may not reproduce:\n    iwc.setMergeScheduler(new SerialMergeScheduler());\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    for(int i = 0; i < 3; i++) {\n      float y;\n      if (i == 0) {\n        y = rect.minY;\n      } else if (i == 1) {\n        y = (float) (((double) rect.minY + rect.maxY) / 2.0);\n      } else {\n        y = rect.maxY;\n      }\n      for(int j = 0; j < 3; j++) {\n        float x;\n        if (j == 0) {\n          x = rect.minX;\n        } else if (j == 1) {\n          if (i == 1) {\n            continue;\n          }\n          x = (float) (((double) rect.minX + rect.maxX) / 2.0);\n        } else {\n          x = rect.maxX;\n        }\n\n        Document doc = new Document();\n        addPointToDoc(FIELD_NAME, doc, x, y);\n        w.addDocument(doc);\n      }\n    }\n    IndexReader r = w.getReader();\n    IndexSearcher s = newSearcher(r, false);\n    // exact edge cases\n    assertEquals(8, s.count(newRectQuery(FIELD_NAME, rect.minX, rect.maxX, rect.minY, rect.maxY)));\n    // expand 1 ulp in each direction if possible and test a slightly larger box!\n    if (rect.minX != -Float.MAX_VALUE) {\n      assertEquals(8, s.count(newRectQuery(FIELD_NAME, Math.nextDown(rect.minX), rect.maxX, rect.minY, rect.maxY)));\n    }\n    if (rect.maxX != Float.MAX_VALUE) {\n      assertEquals(8, s.count(newRectQuery(FIELD_NAME, rect.minX, Math.nextUp(rect.maxX), rect.minY, rect.maxY)));\n    }\n    if (rect.minY != -Float.MAX_VALUE) {\n      assertEquals(8, s.count(newRectQuery(FIELD_NAME, rect.minX, rect.maxX, Math.nextDown(rect.minY), rect.maxY)));\n    }\n    if (rect.maxY != Float.MAX_VALUE) {\n      assertEquals(8, s.count(newRectQuery(FIELD_NAME, rect.minX, rect.maxX, rect.minY, Math.nextUp(rect.maxY))));\n    }\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04"],"0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}