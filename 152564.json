{"path":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","commits":[{"id":"e5d451f04bea3df3123dd3c3c2df8010d0f90c23","date":1244615057,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(Config).mjava","sourceNew":"  public void initalize( SolrConfig config) {\n    formatters.clear();\n    fragmenters.clear();\n\n    // Load the fragmenters\n    ResourceLoader loader= config.getResourceLoader();\n    SolrFragmenter frag = null;\n    for (SolrConfig.PluginInfo info : config.getHighlightingFragmenterInfo()) {\n      SolrFragmenter fragmenter = (SolrFragmenter) loader.newInstance(info.className);\n      fragmenter.init(info.initArgs);\n      if(info.isDefault) frag = fragmenter;\n      fragmenters.put(info.name,fragmenter);\n    }\n\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    // Load the formatters\n    SolrFormatter fmt = null;\n    for (SolrConfig.PluginInfo info : config.getHighlightingFormatterInfo()) {\n      SolrFormatter formatter = (SolrFormatter) loader.newInstance(info.className);\n      formatter.init(info.initArgs);\n      formatters.put(info.name, formatter);\n      if(info.isDefault) fmt = formatter;\n    }\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n\n  }\n\n","sourceOld":"  public void initalize( final Config config )\n  {\n    formatters.clear();\n    fragmenters.clear();\n    \n    // Load the fragmenters\n    String xpath = \"highlighting/fragmenter\";\n    NamedListPluginLoader<SolrFragmenter> fragloader = new NamedListPluginLoader<SolrFragmenter>( xpath, fragmenters );\n    SolrFragmenter frag = fragloader.load( config.getResourceLoader(), (NodeList)config.evaluate( xpath, XPathConstants.NODESET ) );\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    \n    // Load the formatters\n    xpath = \"highlighting/formatter\";\n    NamedListPluginLoader<SolrFormatter> fmtloader = new NamedListPluginLoader<SolrFormatter>( xpath, formatters );\n    SolrFormatter fmt = fmtloader.load( config.getResourceLoader(), (NodeList)config.evaluate( xpath, XPathConstants.NODESET ) );\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d10311dc892eac490ca97851d5764dfe32d86759","date":1251102986,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","sourceNew":"  public void initalize( SolrConfig config) {\n    formatters.clear();\n    fragmenters.clear();\n\n    // Load the fragmenters\n    ResourceLoader loader= config.getResourceLoader();\n    SolrFragmenter frag = null;\n    for (PluginInfo info : config.getHighlightingFragmenterInfo()) {\n      SolrFragmenter fragmenter = (SolrFragmenter) loader.newInstance(info.className);\n      fragmenter.init(info.initArgs);\n      if(info.isDefault) frag = fragmenter;\n      fragmenters.put(info.name,fragmenter);\n    }\n\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    // Load the formatters\n    SolrFormatter fmt = null;\n    for (PluginInfo info : config.getHighlightingFormatterInfo()) {\n      SolrFormatter formatter = (SolrFormatter) loader.newInstance(info.className);\n      formatter.init(info.initArgs);\n      formatters.put(info.name, formatter);\n      if(info.isDefault) fmt = formatter;\n    }\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n\n  }\n\n","sourceOld":"  public void initalize( SolrConfig config) {\n    formatters.clear();\n    fragmenters.clear();\n\n    // Load the fragmenters\n    ResourceLoader loader= config.getResourceLoader();\n    SolrFragmenter frag = null;\n    for (SolrConfig.PluginInfo info : config.getHighlightingFragmenterInfo()) {\n      SolrFragmenter fragmenter = (SolrFragmenter) loader.newInstance(info.className);\n      fragmenter.init(info.initArgs);\n      if(info.isDefault) frag = fragmenter;\n      fragmenters.put(info.name,fragmenter);\n    }\n\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    // Load the formatters\n    SolrFormatter fmt = null;\n    for (SolrConfig.PluginInfo info : config.getHighlightingFormatterInfo()) {\n      SolrFormatter formatter = (SolrFormatter) loader.newInstance(info.className);\n      formatter.init(info.initArgs);\n      formatters.put(info.name, formatter);\n      if(info.isDefault) fmt = formatter;\n    }\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28a016ae2abf4934515e45810192aa4350e3092b","date":1252309557,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","sourceNew":"  public void initalize( SolrConfig config) {\n    formatters.clear();\n    fragmenters.clear();\n\n    // Load the fragmenters\n    ResourceLoader loader= config.getResourceLoader();\n    SolrFragmenter frag = null;\n    for (PluginInfo info : config.getPluginInfos(SolrFragmenter.class.getName())) {\n      SolrFragmenter fragmenter = (SolrFragmenter) loader.newInstance(info.className);\n      fragmenter.init(info.initArgs);\n      if(info.isDefault) frag = fragmenter;\n      fragmenters.put(info.name,fragmenter);\n    }\n\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    // Load the formatters\n    SolrFormatter fmt = null;\n    for (PluginInfo info : config.getPluginInfos(SolrFormatter.class.getName())) {\n      SolrFormatter formatter = (SolrFormatter) loader.newInstance(info.className);\n      formatter.init(info.initArgs);\n      formatters.put(info.name, formatter);\n      if(info.isDefault) fmt = formatter;\n    }\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n\n  }\n\n","sourceOld":"  public void initalize( SolrConfig config) {\n    formatters.clear();\n    fragmenters.clear();\n\n    // Load the fragmenters\n    ResourceLoader loader= config.getResourceLoader();\n    SolrFragmenter frag = null;\n    for (PluginInfo info : config.getHighlightingFragmenterInfo()) {\n      SolrFragmenter fragmenter = (SolrFragmenter) loader.newInstance(info.className);\n      fragmenter.init(info.initArgs);\n      if(info.isDefault) frag = fragmenter;\n      fragmenters.put(info.name,fragmenter);\n    }\n\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    // Load the formatters\n    SolrFormatter fmt = null;\n    for (PluginInfo info : config.getHighlightingFormatterInfo()) {\n      SolrFormatter formatter = (SolrFormatter) loader.newInstance(info.className);\n      formatter.init(info.initArgs);\n      formatters.put(info.name, formatter);\n      if(info.isDefault) fmt = formatter;\n    }\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a7153c5cd4b2cd8054f8e46101442030d8a3c37","date":1253512682,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","sourceNew":"  public void initalize( SolrConfig config) {\n    formatters.clear();\n    fragmenters.clear();\n\n    // Load the fragmenters\n    ResourceLoader loader= config.getResourceLoader();\n    SolrFragmenter frag = null;\n    for (PluginInfo info : config.getPluginInfos(SolrFragmenter.class.getName())) {\n      SolrFragmenter fragmenter = (SolrFragmenter) loader.newInstance(info.className);\n      fragmenter.init(info.initArgs);\n      if(info.isDefault()) frag = fragmenter;\n      fragmenters.put(info.name,fragmenter);\n    }\n\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    // Load the formatters\n    SolrFormatter fmt = null;\n    for (PluginInfo info : config.getPluginInfos(SolrFormatter.class.getName())) {\n      SolrFormatter formatter = (SolrFormatter) loader.newInstance(info.className);\n      formatter.init(info.initArgs);\n      formatters.put(info.name, formatter);\n      if(info.isDefault()) fmt = formatter;\n    }\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n\n  }\n\n","sourceOld":"  public void initalize( SolrConfig config) {\n    formatters.clear();\n    fragmenters.clear();\n\n    // Load the fragmenters\n    ResourceLoader loader= config.getResourceLoader();\n    SolrFragmenter frag = null;\n    for (PluginInfo info : config.getPluginInfos(SolrFragmenter.class.getName())) {\n      SolrFragmenter fragmenter = (SolrFragmenter) loader.newInstance(info.className);\n      fragmenter.init(info.initArgs);\n      if(info.isDefault) frag = fragmenter;\n      fragmenters.put(info.name,fragmenter);\n    }\n\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    // Load the formatters\n    SolrFormatter fmt = null;\n    for (PluginInfo info : config.getPluginInfos(SolrFormatter.class.getName())) {\n      SolrFormatter formatter = (SolrFormatter) loader.newInstance(info.className);\n      formatter.init(info.initArgs);\n      formatters.put(info.name, formatter);\n      if(info.isDefault) fmt = formatter;\n    }\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae2d1b1882412cb224513ad453e3bc316a99118a","date":1253535818,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","sourceNew":"  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n\n  }\n\n","sourceOld":"  public void initalize( SolrConfig config) {\n    formatters.clear();\n    fragmenters.clear();\n\n    // Load the fragmenters\n    ResourceLoader loader= config.getResourceLoader();\n    SolrFragmenter frag = null;\n    for (PluginInfo info : config.getPluginInfos(SolrFragmenter.class.getName())) {\n      SolrFragmenter fragmenter = (SolrFragmenter) loader.newInstance(info.className);\n      fragmenter.init(info.initArgs);\n      if(info.isDefault()) frag = fragmenter;\n      fragmenters.put(info.name,fragmenter);\n    }\n\n    if( frag == null ) {\n      frag = new GapFragmenter();\n    }\n    fragmenters.put( \"\", frag );\n    fragmenters.put( null, frag );\n    // Load the formatters\n    SolrFormatter fmt = null;\n    for (PluginInfo info : config.getPluginInfos(SolrFormatter.class.getName())) {\n      SolrFormatter formatter = (SolrFormatter) loader.newInstance(info.className);\n      formatter.init(info.initArgs);\n      formatters.put(info.name, formatter);\n      if(info.isDefault()) fmt = formatter;\n    }\n    if( fmt == null ) {\n      fmt = new HtmlFormatter();\n    }\n    formatters.put( \"\", fmt );\n    formatters.put( null, fmt );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3","date":1263013040,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","sourceNew":"  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n  }\n\n","sourceOld":"  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#initalize(SolrConfig).mjava","sourceNew":"  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n  }\n\n","sourceOld":"  @Deprecated\n  public void initalize( SolrConfig config) {\n    if (initialized) return;\n    SolrFragmenter frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    SolrFormatter fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);    \n\n    SolrFragListBuilder fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    SolrFragmentsBuilder fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae2d1b1882412cb224513ad453e3bc316a99118a":["6a7153c5cd4b2cd8054f8e46101442030d8a3c37"],"d10311dc892eac490ca97851d5764dfe32d86759":["e5d451f04bea3df3123dd3c3c2df8010d0f90c23"],"6a7153c5cd4b2cd8054f8e46101442030d8a3c37":["28a016ae2abf4934515e45810192aa4350e3092b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"e5d451f04bea3df3123dd3c3c2df8010d0f90c23":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3"],"28a016ae2abf4934515e45810192aa4350e3092b":["d10311dc892eac490ca97851d5764dfe32d86759"],"5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3":["ae2d1b1882412cb224513ad453e3bc316a99118a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ae2d1b1882412cb224513ad453e3bc316a99118a":["5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3"],"d10311dc892eac490ca97851d5764dfe32d86759":["28a016ae2abf4934515e45810192aa4350e3092b"],"6a7153c5cd4b2cd8054f8e46101442030d8a3c37":["ae2d1b1882412cb224513ad453e3bc316a99118a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e5d451f04bea3df3123dd3c3c2df8010d0f90c23"],"e5d451f04bea3df3123dd3c3c2df8010d0f90c23":["d10311dc892eac490ca97851d5764dfe32d86759"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"28a016ae2abf4934515e45810192aa4350e3092b":["6a7153c5cd4b2cd8054f8e46101442030d8a3c37"],"5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}