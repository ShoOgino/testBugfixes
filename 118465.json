{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrServer).mjava","commits":[{"id":"40dce2b6d4360eb09fa16fb6c40a18b25507ed73","date":1383035822,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#waitForNon403or404or503(HttpSolrServer).mjava","sourceNew":" public  static void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":"  private void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n    \n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3a46663789411cdf016145a96a40cf861798ae3","date":1395119088,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrServer).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrServer).mjava","sourceNew":" public static void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":" public  static void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"963b0a9b072593721af39e1d9b815fba17e88e7f","date":1395120846,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrServer).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrServer).mjava","sourceNew":" public  static void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":" public static void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrClient).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrServer).mjava","sourceNew":" public  static void waitForNon403or404or503(HttpSolrClient collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":" public  static void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":["275019a81d0883a1db4560391b072d1fbe272ec4"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"963b0a9b072593721af39e1d9b815fba17e88e7f":["d3a46663789411cdf016145a96a40cf861798ae3"],"d3a46663789411cdf016145a96a40cf861798ae3":["40dce2b6d4360eb09fa16fb6c40a18b25507ed73"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["963b0a9b072593721af39e1d9b815fba17e88e7f"],"40dce2b6d4360eb09fa16fb6c40a18b25507ed73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"963b0a9b072593721af39e1d9b815fba17e88e7f":["bafca15d8e408346a67f4282ad1143b88023893b"],"d3a46663789411cdf016145a96a40cf861798ae3":["963b0a9b072593721af39e1d9b815fba17e88e7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["40dce2b6d4360eb09fa16fb6c40a18b25507ed73"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"40dce2b6d4360eb09fa16fb6c40a18b25507ed73":["d3a46663789411cdf016145a96a40cf861798ae3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}