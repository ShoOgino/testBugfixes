{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#incrementToken().mjava","commits":[{"id":"9b5756469957918cac40a831acec9cf01c8c2bb3","date":1249167152,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      reverse( termAtt.termBuffer(), termAtt.termLength() );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"547be27e5d40f96d4df7eb150b9a3d29bc83c513","date":1250683635,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#incrementToken().mjava","sourceNew":"  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      int len = termAtt.termLength();\n      if (marker != NOMARKER) {\n        len++;\n        termAtt.resizeTermBuffer(len);\n        termAtt.termBuffer()[len - 1] = marker;\n      }\n      reverse( termAtt.termBuffer(), len );\n      termAtt.setTermLength(len);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      reverse( termAtt.termBuffer(), termAtt.termLength() );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":["58d9574cef968871d3be931d4850a274eda83049"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      int len = termAtt.termLength();\n      if (marker != NOMARKER) {\n        len++;\n        termAtt.resizeTermBuffer(len);\n        termAtt.termBuffer()[len - 1] = marker;\n      }\n      reverse( termAtt.termBuffer(), len );\n      termAtt.setTermLength(len);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      int len = termAtt.termLength();\n      if (marker != NOMARKER) {\n        len++;\n        termAtt.resizeTermBuffer(len);\n        termAtt.termBuffer()[len - 1] = marker;\n      }\n      reverse( termAtt.termBuffer(), len );\n      termAtt.setTermLength(len);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"58d9574cef968871d3be931d4850a274eda83049","date":1258924182,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      int len = termAtt.termLength();\n      if (marker != NOMARKER) {\n        len++;\n        termAtt.resizeTermBuffer(len);\n        termAtt.termBuffer()[len - 1] = marker;\n      }\n      reverse( matchVersion, termAtt.termBuffer(), 0, len );\n      termAtt.setTermLength(len);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      int len = termAtt.termLength();\n      if (marker != NOMARKER) {\n        len++;\n        termAtt.resizeTermBuffer(len);\n        termAtt.termBuffer()[len - 1] = marker;\n      }\n      reverse( termAtt.termBuffer(), len );\n      termAtt.setTermLength(len);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":["547be27e5d40f96d4df7eb150b9a3d29bc83c513"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      int len = termAtt.termLength();\n      if (marker != NOMARKER) {\n        len++;\n        termAtt.resizeTermBuffer(len);\n        termAtt.termBuffer()[len - 1] = marker;\n      }\n      reverse( matchVersion, termAtt.termBuffer(), 0, len );\n      termAtt.setTermLength(len);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      int len = termAtt.termLength();\n      if (marker != NOMARKER) {\n        len++;\n        termAtt.resizeTermBuffer(len);\n        termAtt.termBuffer()[len - 1] = marker;\n      }\n      reverse( matchVersion, termAtt.termBuffer(), 0, len );\n      termAtt.setTermLength(len);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"547be27e5d40f96d4df7eb150b9a3d29bc83c513":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"58d9574cef968871d3be931d4850a274eda83049":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b5756469957918cac40a831acec9cf01c8c2bb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["547be27e5d40f96d4df7eb150b9a3d29bc83c513"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["58d9574cef968871d3be931d4850a274eda83049"]},"commit2Childs":{"547be27e5d40f96d4df7eb150b9a3d29bc83c513":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"58d9574cef968871d3be931d4850a274eda83049":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["547be27e5d40f96d4df7eb150b9a3d29bc83c513"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["58d9574cef968871d3be931d4850a274eda83049"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}