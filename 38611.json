{"path":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","commits":[{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","pathOld":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","sourceNew":"  public static String match(String path, String input, String expected) throws Exception {\n    Object inputObj = ObjectBuilder.fromJSON(input);\n    Object expectObj = ObjectBuilder.fromJSON(expected);\n    return matchObj(path, inputObj, expectObj);\n  }\n\n","sourceOld":"  public static String match(String path, String input, String expected) throws Exception {\n    Object inputObj = ObjectBuilder.fromJSON(input);\n    Object expectObj = ObjectBuilder.fromJSON(expected);\n    return matchObj(path, inputObj, expectObj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b09c7419b92e982a901698cb401ce22ac35e4b04","date":1301668869,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","pathOld":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","sourceNew":"  public static String match(String path, String input, String expected) throws Exception {\n    Object inputObj = ObjectBuilder.fromJSON(input);\n    Object expectObj = ObjectBuilder.fromJSON(expected);\n    return matchObj(path, inputObj, expectObj);\n  }\n\n","sourceOld":"  public static String match(String path, String input, String expected) throws Exception {\n    Object inputObj = ObjectBuilder.fromJSON(input);\n    Object expectObj = ObjectBuilder.fromJSON(expected);\n    return matchObj(path, inputObj, expectObj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","pathOld":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","sourceNew":"  public static String match(String path, String input, String expected) throws Exception {\n    Object inputObj = ObjectBuilder.fromJSON(input);\n    Object expectObj = ObjectBuilder.fromJSON(expected);\n    return matchObj(path, inputObj, expectObj);\n  }\n\n","sourceOld":"  public static String match(String path, String input, String expected) throws Exception {\n    Object inputObj = ObjectBuilder.fromJSON(input);\n    Object expectObj = ObjectBuilder.fromJSON(expected);\n    return matchObj(path, inputObj, expectObj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","pathOld":"solr/src/test/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","sourceNew":"  public static String match(String path, String input, String expected) throws Exception {\n    Object inputObj = ObjectBuilder.fromJSON(input);\n    Object expectObj = ObjectBuilder.fromJSON(expected);\n    return matchObj(path, inputObj, expectObj);\n  }\n\n","sourceOld":"  public static String match(String path, String input, String expected) throws Exception {\n    Object inputObj = ObjectBuilder.fromJSON(input);\n    Object expectObj = ObjectBuilder.fromJSON(expected);\n    return matchObj(path, inputObj, expectObj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7395bdaa5646a7eb2087b1043b713b4bf3294a5c","date":1305324215,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","sourceNew":"  /** \n   * comparison using default delta\n   * @see #DEFAULT_DELTA\n   * @see #match(String,String,String,double)\n   */\n  public static String match(String path, String input, String expected) throws Exception {\n    return match(path, input, expected, DEFAULT_DELTA);\n  }\n\n","sourceOld":"  public static String match(String path, String input, String expected) throws Exception {\n    Object inputObj = ObjectBuilder.fromJSON(input);\n    Object expectObj = ObjectBuilder.fromJSON(expected);\n    return matchObj(path, inputObj, expectObj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","sourceNew":"  /** \n   * comparison using default delta\n   * @see #DEFAULT_DELTA\n   * @see #match(String,String,String,double)\n   */\n  public static String match(String path, String input, String expected) throws Exception {\n    return match(path, input, expected, DEFAULT_DELTA);\n  }\n\n","sourceOld":"  public static String match(String path, String input, String expected) throws Exception {\n    Object inputObj = ObjectBuilder.fromJSON(input);\n    Object expectObj = ObjectBuilder.fromJSON(expected);\n    return matchObj(path, inputObj, expectObj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","sourceNew":"  /**\n   * comparison using default delta\n   * @see #DEFAULT_DELTA\n   * @see #match(String,String,String,double)\n   */\n  public static String match(String path, String input, String expected) throws Exception {\n    return match(path, input, expected, DEFAULT_DELTA);\n  }\n\n","sourceOld":"  public static String match(String path, String input, String expected) throws Exception {\n    Object inputObj = ObjectBuilder.fromJSON(input);\n    Object expectObj = ObjectBuilder.fromJSON(expected);\n    return matchObj(path, inputObj, expectObj);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","sourceNew":"  /**\n   * comparison using default delta\n   * @see #DEFAULT_DELTA\n   * @see #match(String,String,String,double)\n   */\n  public static String match(String path, String input, String expected) throws Exception {\n    return match(path, input, expected, DEFAULT_DELTA);\n  }\n\n","sourceOld":"  /**\n   * comparison using default delta\n   * @see #DEFAULT_DELTA\n   * @see #match(String,String,String,double)\n   */\n  public static String match(String path, String input, String expected) throws Exception {\n    return match(path, input, expected, DEFAULT_DELTA);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","sourceNew":"  /** \n   * comparison using default delta\n   * @see #DEFAULT_DELTA\n   * @see #match(String,String,String,double)\n   */\n  public static String match(String path, String input, String expected) throws Exception {\n    return match(path, input, expected, DEFAULT_DELTA);\n  }\n\n","sourceOld":"  /** \n   * comparison using default delta\n   * @see #DEFAULT_DELTA\n   * @see #match(String,String,String,double)\n   */\n  public static String match(String path, String input, String expected) throws Exception {\n    return match(path, input, expected, DEFAULT_DELTA);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/JSONTestUtil#match(String,String,String).mjava","sourceNew":"  /**\n   * comparison using default delta\n   * @see #DEFAULT_DELTA\n   * @see #match(String,String,String,double)\n   */\n  public static String match(String path, String input, String expected) throws Exception {\n    return match(path, input, expected, DEFAULT_DELTA);\n  }\n\n","sourceOld":"  /** \n   * comparison using default delta\n   * @see #DEFAULT_DELTA\n   * @see #match(String,String,String,double)\n   */\n  public static String match(String path, String input, String expected) throws Exception {\n    return match(path, input, expected, DEFAULT_DELTA);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7395bdaa5646a7eb2087b1043b713b4bf3294a5c":["b09c7419b92e982a901698cb401ce22ac35e4b04"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["135621f3a0670a9394eb563224a3b76cc4dddc0f","7395bdaa5646a7eb2087b1043b713b4bf3294a5c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a3776dccca01c11e7046323cfad46a3b4a471233"],"c26f00b574427b55127e869b935845554afde1fa":["7395bdaa5646a7eb2087b1043b713b4bf3294a5c","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a3776dccca01c11e7046323cfad46a3b4a471233":["d20d5e40789b1c42f4f926e3174b271256c43657","7395bdaa5646a7eb2087b1043b713b4bf3294a5c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b09c7419b92e982a901698cb401ce22ac35e4b04"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d20d5e40789b1c42f4f926e3174b271256c43657":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["7395bdaa5646a7eb2087b1043b713b4bf3294a5c"],"45669a651c970812a680841b97a77cce06af559f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b09c7419b92e982a901698cb401ce22ac35e4b04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"7395bdaa5646a7eb2087b1043b713b4bf3294a5c":["c3a8a449466c1ff7ce2274fe73dab487256964b4","c26f00b574427b55127e869b935845554afde1fa","a3776dccca01c11e7046323cfad46a3b4a471233","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["135621f3a0670a9394eb563224a3b76cc4dddc0f","b09c7419b92e982a901698cb401ce22ac35e4b04","d20d5e40789b1c42f4f926e3174b271256c43657","45669a651c970812a680841b97a77cce06af559f"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["7395bdaa5646a7eb2087b1043b713b4bf3294a5c","135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f"],"d20d5e40789b1c42f4f926e3174b271256c43657":["a3776dccca01c11e7046323cfad46a3b4a471233"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a258fbb26824fd104ed795e5d9033d2d040049ee","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}