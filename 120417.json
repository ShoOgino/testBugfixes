{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","commits":[{"id":"9c327517edf97b94827c01757fbf21e0ca625eb7","date":1341211669,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"/dev/null","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid);\n    ctorArgs.add(new Object[]{\"recursive_geohash\",strategy});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid);\n    ctorArgs.add(new Object[]{\"recursive_quad\",strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid);\n    ctorArgs.add(new Object[]{\"termquery_geohash\",strategy});\n\n    return ctorArgs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0415a016b37e58a017fed0a91234f733ab359971","date":1341458183,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{strategy});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid);\n    ctorArgs.add(new Object[]{\"recursive_geohash\",strategy});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid);\n    ctorArgs.add(new Object[]{\"recursive_quad\",strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid);\n    ctorArgs.add(new Object[]{\"termquery_geohash\",strategy});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c613449aafb2c44720a47df4166dc35d11319b76","date":1341604108,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_geohash\")});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_quad\")});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"termquery_geohash\")});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{strategy});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e7f30683f53928b2fce016e6430c9795caff22","date":1341839598,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_geohash\")});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_quad\")});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"termquery_geohash\")});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{strategy});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"/dev/null","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_geohash\")});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_quad\")});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"termquery_geohash\")});\n\n    return ctorArgs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da956410d7a790f567af4e7e94584fb0930212f2","date":1346859431,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_geohash\")});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_quad\")});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"termquery_geohash\")});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SimpleSpatialContext.GEO_KM;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_geohash\")});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_quad\")});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"termquery_geohash\")});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2165e2bf547d6644ce2088f7789457b9f30c787","date":1347728770,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_geohash\")});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_quad\")});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"termquery_geohash\")});\n\n    strategy = new TwoDoublesStrategy(ctx, \"twodoubles\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"twodoubles\")});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_geohash\")});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_quad\")});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"termquery_geohash\")});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ffe5c8a21a05ba5844462044bfe08ce16b4b0fa","date":1347918236,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new TwoDoublesStrategy(ctx, \"twodoubles\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_geohash\")});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"recursive_quad\")});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"termquery_geohash\")});\n\n    strategy = new TwoDoublesStrategy(ctx, \"twodoubles\");\n    ctorArgs.add(new Object[]{new Param(strategy, \"twodoubles\")});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bc1e76fdb8a9952244528f098da956d2f52acec","date":1348348531,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new TwoDoublesStrategy(ctx, \"twodoubles\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e","date":1447833002,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","sourceNew":"  @ParametersFactory(argumentFormatting = \"strategy=%s\")\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","sourceNew":"  @ParametersFactory(argumentFormatting = \"strategy=%s\")\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory(argumentFormatting = \"strategy=%s\")\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#parameters().mjava","sourceNew":"  @ParametersFactory(argumentFormatting = \"strategy=%s\")\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory(argumentFormatting = \"strategy=%s\")\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0415a016b37e58a017fed0a91234f733ab359971":["9c327517edf97b94827c01757fbf21e0ca625eb7"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["6bc1e76fdb8a9952244528f098da956d2f52acec"],"af2638813028b254a88b418ebeafb541afb49653":["7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e","112d77ac8d3e10a362516ad834c9a11d35c94234"],"04e7f30683f53928b2fce016e6430c9795caff22":["0415a016b37e58a017fed0a91234f733ab359971","c613449aafb2c44720a47df4166dc35d11319b76"],"c2165e2bf547d6644ce2088f7789457b9f30c787":["da956410d7a790f567af4e7e94584fb0930212f2"],"0ffe5c8a21a05ba5844462044bfe08ce16b4b0fa":["c2165e2bf547d6644ce2088f7789457b9f30c787"],"c613449aafb2c44720a47df4166dc35d11319b76":["0415a016b37e58a017fed0a91234f733ab359971"],"da956410d7a790f567af4e7e94584fb0930212f2":["c613449aafb2c44720a47df4166dc35d11319b76"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e"],"6bc1e76fdb8a9952244528f098da956d2f52acec":["0ffe5c8a21a05ba5844462044bfe08ce16b4b0fa"],"9c327517edf97b94827c01757fbf21e0ca625eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c613449aafb2c44720a47df4166dc35d11319b76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"0415a016b37e58a017fed0a91234f733ab359971":["04e7f30683f53928b2fce016e6430c9795caff22","c613449aafb2c44720a47df4166dc35d11319b76"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"04e7f30683f53928b2fce016e6430c9795caff22":[],"c2165e2bf547d6644ce2088f7789457b9f30c787":["0ffe5c8a21a05ba5844462044bfe08ce16b4b0fa"],"c613449aafb2c44720a47df4166dc35d11319b76":["04e7f30683f53928b2fce016e6430c9795caff22","da956410d7a790f567af4e7e94584fb0930212f2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"0ffe5c8a21a05ba5844462044bfe08ce16b4b0fa":["6bc1e76fdb8a9952244528f098da956d2f52acec"],"da956410d7a790f567af4e7e94584fb0930212f2":["c2165e2bf547d6644ce2088f7789457b9f30c787"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"6bc1e76fdb8a9952244528f098da956d2f52acec":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"9c327517edf97b94827c01757fbf21e0ca625eb7":["0415a016b37e58a017fed0a91234f733ab359971"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9c327517edf97b94827c01757fbf21e0ca625eb7","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["04e7f30683f53928b2fce016e6430c9795caff22","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}