{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestBitVector#testClearedBitNearEnd().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestBitVector#testClearedBitNearEnd().mjava","pathOld":"lucene/src/test/org/apache/lucene/codecs/lucene40/TestBitVector#testClearedBitNearEnd().mjava","sourceNew":"    public void testClearedBitNearEnd() throws IOException {\n      Directory d = newDirectory();\n      final int numBits = _TestUtil.nextInt(random, 7, 1000);\n      BitVector bv = new BitVector(numBits);\n      bv.invertAll();\n      bv.clear(numBits-_TestUtil.nextInt(random, 1, 7));\n      bv.write(d, \"test\", newIOContext(random));\n      assertEquals(numBits-1, bv.count());\n      d.close();\n    }\n\n","sourceOld":"    public void testClearedBitNearEnd() throws IOException {\n      Directory d = newDirectory();\n      final int numBits = _TestUtil.nextInt(random, 7, 1000);\n      BitVector bv = new BitVector(numBits);\n      bv.invertAll();\n      bv.clear(numBits-_TestUtil.nextInt(random, 1, 7));\n      bv.write(d, \"test\", newIOContext(random));\n      assertEquals(numBits-1, bv.count());\n      d.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestBitVector#testClearedBitNearEnd().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestBitVector#testClearedBitNearEnd().mjava","sourceNew":"    public void testClearedBitNearEnd() throws IOException {\n      Directory d = newDirectory();\n      final int numBits = _TestUtil.nextInt(random(), 7, 1000);\n      BitVector bv = new BitVector(numBits);\n      bv.invertAll();\n      bv.clear(numBits-_TestUtil.nextInt(random(), 1, 7));\n      bv.write(d, \"test\", newIOContext(random()));\n      assertEquals(numBits-1, bv.count());\n      d.close();\n    }\n\n","sourceOld":"    public void testClearedBitNearEnd() throws IOException {\n      Directory d = newDirectory();\n      final int numBits = _TestUtil.nextInt(random, 7, 1000);\n      BitVector bv = new BitVector(numBits);\n      bv.invertAll();\n      bv.clear(numBits-_TestUtil.nextInt(random, 1, 7));\n      bv.write(d, \"test\", newIOContext(random));\n      assertEquals(numBits-1, bv.count());\n      d.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestBitVector#testClearedBitNearEnd().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestBitVector#testClearedBitNearEnd().mjava","sourceNew":"    public void testClearedBitNearEnd() throws IOException {\n      Directory d = newDirectory();\n      final int numBits = TestUtil.nextInt(random(), 7, 1000);\n      BitVector bv = new BitVector(numBits);\n      bv.invertAll();\n      bv.clear(numBits- TestUtil.nextInt(random(), 1, 7));\n      bv.write(d, \"test\", newIOContext(random()));\n      assertEquals(numBits-1, bv.count());\n      d.close();\n    }\n\n","sourceOld":"    public void testClearedBitNearEnd() throws IOException {\n      Directory d = newDirectory();\n      final int numBits = _TestUtil.nextInt(random(), 7, 1000);\n      BitVector bv = new BitVector(numBits);\n      bv.invertAll();\n      bv.clear(numBits-_TestUtil.nextInt(random(), 1, 7));\n      bv.write(d, \"test\", newIOContext(random()));\n      assertEquals(numBits-1, bv.count());\n      d.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/TestBitVector#testClearedBitNearEnd().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestBitVector#testClearedBitNearEnd().mjava","sourceNew":"    public void testClearedBitNearEnd() throws IOException {\n      Directory d = newDirectory();\n      final int numBits = TestUtil.nextInt(random(), 7, 1000);\n      BitVector bv = new BitVector(numBits);\n      bv.invertAll();\n      bv.clear(numBits- TestUtil.nextInt(random(), 1, 7));\n      bv.write(d, \"test\", newIOContext(random()));\n      assertEquals(numBits-1, bv.count());\n      d.close();\n    }\n\n","sourceOld":"    public void testClearedBitNearEnd() throws IOException {\n      Directory d = newDirectory();\n      final int numBits = TestUtil.nextInt(random(), 7, 1000);\n      BitVector bv = new BitVector(numBits);\n      bv.invertAll();\n      bv.clear(numBits- TestUtil.nextInt(random(), 1, 7));\n      bv.write(d, \"test\", newIOContext(random()));\n      assertEquals(numBits-1, bv.count());\n      d.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/TestBitVector#testClearedBitNearEnd().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestBitVector#testClearedBitNearEnd().mjava","sourceNew":"    public void testClearedBitNearEnd() throws IOException {\n      Directory d = newDirectory();\n      final int numBits = TestUtil.nextInt(random(), 7, 1000);\n      BitVector bv = new BitVector(numBits);\n      bv.invertAll();\n      bv.clear(numBits- TestUtil.nextInt(random(), 1, 7));\n      bv.write(d, \"test\", newIOContext(random()));\n      assertEquals(numBits-1, bv.count());\n      d.close();\n    }\n\n","sourceOld":"    public void testClearedBitNearEnd() throws IOException {\n      Directory d = newDirectory();\n      final int numBits = TestUtil.nextInt(random(), 7, 1000);\n      BitVector bv = new BitVector(numBits);\n      bv.invertAll();\n      bv.clear(numBits- TestUtil.nextInt(random(), 1, 7));\n      bv.write(d, \"test\", newIOContext(random()));\n      assertEquals(numBits-1, bv.count());\n      d.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6613659748fe4411a7dcf85266e55db1f95f7315":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["6613659748fe4411a7dcf85266e55db1f95f7315"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["6613659748fe4411a7dcf85266e55db1f95f7315","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"6613659748fe4411a7dcf85266e55db1f95f7315":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}