{"path":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory#createTokenizer(LanguageCode).mjava","commits":[{"id":"88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb","date":1282573440,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory#createTokenizer(LanguageCode).mjava","pathOld":"/dev/null","sourceNew":"\t@Override\n\tprotected ITokenizer createTokenizer(LanguageCode language) {\n\t\tswitch (language) {\n\t\tcase CHINESE_SIMPLIFIED:\n\t\t\treturn ChineseTokenizerFactory.createTokenizer();\n\n\t\t\t/*\n\t\t\t * We use our own analyzer for Arabic. Lucene's version has special\n\t\t\t * support for Nonspacing-Mark characters (see\n\t\t\t * http://www.fileformat.info/info/unicode/category/Mn/index.htm), but we\n\t\t\t * have them included as letters in the parser.\n\t\t\t */\n\t\tcase ARABIC:\n\t\t\t// Intentional fall-through.\n\n\t\tdefault:\n\t\t\treturn new ExtendedWhitespaceTokenizer();\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory#createTokenizer(LanguageCode).mjava","pathOld":"/dev/null","sourceNew":"\t@Override\n\tprotected ITokenizer createTokenizer(LanguageCode language) {\n\t\tswitch (language) {\n\t\tcase CHINESE_SIMPLIFIED:\n\t\t\treturn ChineseTokenizerFactory.createTokenizer();\n\n\t\t\t/*\n\t\t\t * We use our own analyzer for Arabic. Lucene's version has special\n\t\t\t * support for Nonspacing-Mark characters (see\n\t\t\t * http://www.fileformat.info/info/unicode/category/Mn/index.htm), but we\n\t\t\t * have them included as letters in the parser.\n\t\t\t */\n\t\tcase ARABIC:\n\t\t\t// Intentional fall-through.\n\n\t\tdefault:\n\t\t\treturn new ExtendedWhitespaceTokenizer();\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"017c035439201490351b0f5f3d33a393c6c24551","date":1305551986,"type":5,"author":"Stanisław Osiński","isMerge":false,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory#getTokenizer(LanguageCode).mjava","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory#createTokenizer(LanguageCode).mjava","sourceNew":"\t@Override\r\n\tpublic ITokenizer getTokenizer(LanguageCode language) {\r\n\t\tswitch (language) {\r\n\t\tcase CHINESE_SIMPLIFIED:\r\n\t\t\treturn ChineseTokenizerFactory.createTokenizer();\r\n\r\n\t\t\t/*\r\n\t\t\t * We use our own analyzer for Arabic. Lucene's version has special\r\n\t\t\t * support for Nonspacing-Mark characters (see\r\n\t\t\t * http://www.fileformat.info/info/unicode/category/Mn/index.htm), but we\r\n\t\t\t * have them included as letters in the parser.\r\n\t\t\t */\r\n\t\tcase ARABIC:\r\n\t\t\t// Intentional fall-through.\r\n\r\n\t\tdefault:\r\n\t\t\treturn new ExtendedWhitespaceTokenizer();\r\n\t\t}\r\n\t}\r\n\n","sourceOld":"\t@Override\n\tprotected ITokenizer createTokenizer(LanguageCode language) {\n\t\tswitch (language) {\n\t\tcase CHINESE_SIMPLIFIED:\n\t\t\treturn ChineseTokenizerFactory.createTokenizer();\n\n\t\t\t/*\n\t\t\t * We use our own analyzer for Arabic. Lucene's version has special\n\t\t\t * support for Nonspacing-Mark characters (see\n\t\t\t * http://www.fileformat.info/info/unicode/category/Mn/index.htm), but we\n\t\t\t * have them included as letters in the parser.\n\t\t\t */\n\t\tcase ARABIC:\n\t\t\t// Intentional fall-through.\n\n\t\tdefault:\n\t\t\treturn new ExtendedWhitespaceTokenizer();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory#getTokenizer(LanguageCode).mjava","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory#createTokenizer(LanguageCode).mjava","sourceNew":"\t@Override\r\n\tpublic ITokenizer getTokenizer(LanguageCode language) {\r\n\t\tswitch (language) {\r\n\t\tcase CHINESE_SIMPLIFIED:\r\n\t\t\treturn ChineseTokenizerFactory.createTokenizer();\r\n\r\n\t\t\t/*\r\n\t\t\t * We use our own analyzer for Arabic. Lucene's version has special\r\n\t\t\t * support for Nonspacing-Mark characters (see\r\n\t\t\t * http://www.fileformat.info/info/unicode/category/Mn/index.htm), but we\r\n\t\t\t * have them included as letters in the parser.\r\n\t\t\t */\r\n\t\tcase ARABIC:\r\n\t\t\t// Intentional fall-through.\r\n\r\n\t\tdefault:\r\n\t\t\treturn new ExtendedWhitespaceTokenizer();\r\n\t\t}\r\n\t}\r\n\n","sourceOld":"\t@Override\n\tprotected ITokenizer createTokenizer(LanguageCode language) {\n\t\tswitch (language) {\n\t\tcase CHINESE_SIMPLIFIED:\n\t\t\treturn ChineseTokenizerFactory.createTokenizer();\n\n\t\t\t/*\n\t\t\t * We use our own analyzer for Arabic. Lucene's version has special\n\t\t\t * support for Nonspacing-Mark characters (see\n\t\t\t * http://www.fileformat.info/info/unicode/category/Mn/index.htm), but we\n\t\t\t * have them included as letters in the parser.\n\t\t\t */\n\t\tcase ARABIC:\n\t\t\t// Intentional fall-through.\n\n\t\tdefault:\n\t\t\treturn new ExtendedWhitespaceTokenizer();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneLanguageModelFactory#createTokenizer(LanguageCode).mjava","sourceNew":null,"sourceOld":"\t@Override\n\tprotected ITokenizer createTokenizer(LanguageCode language) {\n\t\tswitch (language) {\n\t\tcase CHINESE_SIMPLIFIED:\n\t\t\treturn ChineseTokenizerFactory.createTokenizer();\n\n\t\t\t/*\n\t\t\t * We use our own analyzer for Arabic. Lucene's version has special\n\t\t\t * support for Nonspacing-Mark characters (see\n\t\t\t * http://www.fileformat.info/info/unicode/category/Mn/index.htm), but we\n\t\t\t * have them included as letters in the parser.\n\t\t\t */\n\t\tcase ARABIC:\n\t\t\t// Intentional fall-through.\n\n\t\tdefault:\n\t\t\treturn new ExtendedWhitespaceTokenizer();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"017c035439201490351b0f5f3d33a393c6c24551":["88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb","017c035439201490351b0f5f3d33a393c6c24551"],"a3776dccca01c11e7046323cfad46a3b4a471233":["88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb","017c035439201490351b0f5f3d33a393c6c24551"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb"],"88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["017c035439201490351b0f5f3d33a393c6c24551"]},"commit2Childs":{"017c035439201490351b0f5f3d33a393c6c24551":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"88d9ad003cdcb52d92d2f6cfc5abbd1e2ef9d4fb":["017c035439201490351b0f5f3d33a393c6c24551","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}