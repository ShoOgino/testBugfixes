{"path":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#jj_scan_token(int).mjava","commits":[{"id":"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07","date":1270909388,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#jj_scan_token(int).mjava","pathOld":"lucene/contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#jj_scan_token(int).mjava","sourceNew":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","sourceOld":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a53a291ad9b1cc050d846b68758c061a55d52734","date":1310437344,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#jj_scan_token(int).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#jj_scan_token(int).mjava","sourceNew":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","sourceOld":"  private boolean jj_scan_token(int kind) {\n    if (jj_scanpos == jj_lastpos) {\n      jj_la--;\n      if (jj_scanpos.next == null) {\n        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n      } else {\n        jj_lastpos = jj_scanpos = jj_scanpos.next;\n      }\n    } else {\n      jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n      int i = 0; Token tok = token;\n      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }\n      if (tok != null) jj_add_error_token(kind, i);\n    }\n    if (jj_scanpos.kind != kind) return true;\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a53a291ad9b1cc050d846b68758c061a55d52734":["b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a53a291ad9b1cc050d846b68758c061a55d52734"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07"],"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07":["a53a291ad9b1cc050d846b68758c061a55d52734"],"a53a291ad9b1cc050d846b68758c061a55d52734":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}