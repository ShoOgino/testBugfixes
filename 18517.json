{"path":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAgainstSlowVersion().mjava","commits":[{"id":"ec60431d008a694828dacb4bc3cda775b6c44a9f","date":1458570843,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAgainstSlowVersion().mjava","pathOld":"/dev/null","sourceNew":"  public void testAgainstSlowVersion() {\n    for (int i = 0; i < 100_000; i++) {\n      double lat1 = -90 + 180.0 * random().nextDouble();\n      double lon1 = -180 + 360.0 * random().nextDouble();\n      double lat2 = -90 + 180.0 * random().nextDouble();\n      double lon2 = -180 + 360.0 * random().nextDouble();\n\n      double expected = haversinMeters(lat1, lon1, lat2, lon2);\n      double actual = slowHaversin(lat1, lon1, lat2, lon2);\n      assertEquals(expected, actual, HAVERSIN_DELTA);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daf6e9d7d2b09412f97abae089a44cc03f5d5a14","date":1460042872,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAgainstSlowVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAgainstSlowVersion().mjava","sourceNew":"  public void testAgainstSlowVersion() {\n    for (int i = 0; i < 100_000; i++) {\n      double lat1 = GeoTestUtil.nextLatitude();\n      double lon1 = GeoTestUtil.nextLongitude();\n      double lat2 = GeoTestUtil.nextLatitude();\n      double lon2 = GeoTestUtil.nextLongitude();\n\n      double expected = haversinMeters(lat1, lon1, lat2, lon2);\n      double actual = slowHaversin(lat1, lon1, lat2, lon2);\n      assertEquals(expected, actual, HAVERSIN_DELTA);\n    }\n  }\n\n","sourceOld":"  public void testAgainstSlowVersion() {\n    for (int i = 0; i < 100_000; i++) {\n      double lat1 = -90 + 180.0 * random().nextDouble();\n      double lon1 = -180 + 360.0 * random().nextDouble();\n      double lat2 = -90 + 180.0 * random().nextDouble();\n      double lon2 = -180 + 360.0 * random().nextDouble();\n\n      double expected = haversinMeters(lat1, lon1, lat2, lon2);\n      double actual = slowHaversin(lat1, lon1, lat2, lon2);\n      assertEquals(expected, actual, HAVERSIN_DELTA);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09f15823cf5eb6e807005579e875e117d8598f95","date":1460066385,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAgainstSlowVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAgainstSlowVersion().mjava","sourceNew":"  public void testAgainstSlowVersion() {\n    for (int i = 0; i < 100_000; i++) {\n      double lat1 = GeoTestUtil.nextLatitude();\n      double lon1 = GeoTestUtil.nextLongitude();\n      double lat2 = GeoTestUtil.nextLatitude();\n      double lon2 = GeoTestUtil.nextLongitude();\n\n      double expected = haversinMeters(lat1, lon1, lat2, lon2);\n      double actual = slowHaversin(lat1, lon1, lat2, lon2);\n      assertEquals(expected, actual, HAVERSIN_DELTA);\n    }\n  }\n\n","sourceOld":"  public void testAgainstSlowVersion() {\n    for (int i = 0; i < 100_000; i++) {\n      double lat1 = -90 + 180.0 * random().nextDouble();\n      double lon1 = -180 + 360.0 * random().nextDouble();\n      double lat2 = -90 + 180.0 * random().nextDouble();\n      double lon2 = -180 + 360.0 * random().nextDouble();\n\n      double expected = haversinMeters(lat1, lon1, lat2, lon2);\n      double actual = slowHaversin(lat1, lon1, lat2, lon2);\n      assertEquals(expected, actual, HAVERSIN_DELTA);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"209460cd1f56f4e67116ad368a9e1f98d627db95","date":1461023242,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAgainstSlowVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAgainstSlowVersion().mjava","sourceNew":"  public void testAgainstSlowVersion() {\n    for (int i = 0; i < 100_000; i++) {\n      double lat1 = GeoTestUtil.nextLatitude();\n      double lon1 = GeoTestUtil.nextLongitude();\n      double lat2 = GeoTestUtil.nextLatitude();\n      double lon2 = GeoTestUtil.nextLongitude();\n\n      double expected = slowHaversin(lat1, lon1, lat2, lon2);\n      double actual = haversinMeters(lat1, lon1, lat2, lon2);\n      assertEquals(expected, actual, HAVERSIN_DELTA);\n    }\n  }\n\n","sourceOld":"  public void testAgainstSlowVersion() {\n    for (int i = 0; i < 100_000; i++) {\n      double lat1 = GeoTestUtil.nextLatitude();\n      double lon1 = GeoTestUtil.nextLongitude();\n      double lat2 = GeoTestUtil.nextLatitude();\n      double lon2 = GeoTestUtil.nextLongitude();\n\n      double expected = haversinMeters(lat1, lon1, lat2, lon2);\n      double actual = slowHaversin(lat1, lon1, lat2, lon2);\n      assertEquals(expected, actual, HAVERSIN_DELTA);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e15955b4980562a0c1c81d08654904f3fadb83b","date":1461068916,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAgainstSlowVersion().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestSloppyMath#testAgainstSlowVersion().mjava","sourceNew":"  public void testAgainstSlowVersion() {\n    for (int i = 0; i < 100_000; i++) {\n      double lat1 = GeoTestUtil.nextLatitude();\n      double lon1 = GeoTestUtil.nextLongitude();\n      double lat2 = GeoTestUtil.nextLatitude();\n      double lon2 = GeoTestUtil.nextLongitude();\n\n      double expected = slowHaversin(lat1, lon1, lat2, lon2);\n      double actual = haversinMeters(lat1, lon1, lat2, lon2);\n      assertEquals(expected, actual, HAVERSIN_DELTA);\n    }\n  }\n\n","sourceOld":"  public void testAgainstSlowVersion() {\n    for (int i = 0; i < 100_000; i++) {\n      double lat1 = GeoTestUtil.nextLatitude();\n      double lon1 = GeoTestUtil.nextLongitude();\n      double lat2 = GeoTestUtil.nextLatitude();\n      double lon2 = GeoTestUtil.nextLongitude();\n\n      double expected = haversinMeters(lat1, lon1, lat2, lon2);\n      double actual = slowHaversin(lat1, lon1, lat2, lon2);\n      assertEquals(expected, actual, HAVERSIN_DELTA);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec60431d008a694828dacb4bc3cda775b6c44a9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e15955b4980562a0c1c81d08654904f3fadb83b":["09f15823cf5eb6e807005579e875e117d8598f95","209460cd1f56f4e67116ad368a9e1f98d627db95"],"daf6e9d7d2b09412f97abae089a44cc03f5d5a14":["ec60431d008a694828dacb4bc3cda775b6c44a9f"],"209460cd1f56f4e67116ad368a9e1f98d627db95":["09f15823cf5eb6e807005579e875e117d8598f95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e15955b4980562a0c1c81d08654904f3fadb83b"],"09f15823cf5eb6e807005579e875e117d8598f95":["ec60431d008a694828dacb4bc3cda775b6c44a9f","daf6e9d7d2b09412f97abae089a44cc03f5d5a14"]},"commit2Childs":{"ec60431d008a694828dacb4bc3cda775b6c44a9f":["daf6e9d7d2b09412f97abae089a44cc03f5d5a14","09f15823cf5eb6e807005579e875e117d8598f95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ec60431d008a694828dacb4bc3cda775b6c44a9f"],"0e15955b4980562a0c1c81d08654904f3fadb83b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"209460cd1f56f4e67116ad368a9e1f98d627db95":["0e15955b4980562a0c1c81d08654904f3fadb83b"],"daf6e9d7d2b09412f97abae089a44cc03f5d5a14":["09f15823cf5eb6e807005579e875e117d8598f95"],"09f15823cf5eb6e807005579e875e117d8598f95":["0e15955b4980562a0c1c81d08654904f3fadb83b","209460cd1f56f4e67116ad368a9e1f98d627db95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}