{"path":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","commits":[{"id":"aedcfb5ebceafe4a0285436fa86269ed6c926442","date":1271441603,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random.nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random.nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return randomString();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0403b0519d0821f7b707e9b1c4c1db0cff6f6712","date":1273160375,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","sourceNew":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random.nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random.nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return _TestUtil.randomUnicodeString(random);\n    }\n  }\n\n","sourceOld":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random.nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random.nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return randomString();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","sourceNew":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random().nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random().nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return _TestUtil.randomUnicodeString(random());\n    }\n  }\n\n","sourceOld":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random.nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random.nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return _TestUtil.randomUnicodeString(random);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomTerm().mjava","sourceNew":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random().nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random().nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return _TestUtil.randomUnicodeString(random());\n    }\n  }\n\n","sourceOld":"  /**\n   * half of the time, returns a random term from TEST_TERMS.\n   * the other half of the time, returns a random unicode string.\n   */\n  private String randomTerm() {\n    if (random().nextBoolean()) {\n      // return a random TEST_TERM\n      return TEST_TERMS[random().nextInt(TEST_TERMS.length)];\n    } else {\n      // return a random unicode term\n      return _TestUtil.randomUnicodeString(random());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"aedcfb5ebceafe4a0285436fa86269ed6c926442":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["0403b0519d0821f7b707e9b1c4c1db0cff6f6712"],"0403b0519d0821f7b707e9b1c4c1db0cff6f6712":["aedcfb5ebceafe4a0285436fa86269ed6c926442"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aedcfb5ebceafe4a0285436fa86269ed6c926442":["0403b0519d0821f7b707e9b1c4c1db0cff6f6712"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aedcfb5ebceafe4a0285436fa86269ed6c926442"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0403b0519d0821f7b707e9b1c4c1db0cff6f6712":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}