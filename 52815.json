{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEncodeIsStableFromIntSide().mjava","commits":[{"id":"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9","date":1459984736,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEncodeIsStableFromIntSide().mjava","pathOld":"/dev/null","sourceNew":"  // Takes ~35 seconds on modern-ish 2015 dev box:\n  @Nightly\n  public void testEncodeIsStableFromIntSide() throws Exception {\n    double max = PlanetModel.WGS84.getMaximumMagnitude();\n\n    // We can't test the full space of ints (Integer.MIN_VALUE to Integer.MAX_VALUE) because not all ints are allowed:\n    int start = Geo3DUtil.encodeValue(-max);\n    int end = Geo3DUtil.encodeValue(max);\n    // This prints: 99.99997175764292\n    //System.out.println(\"PCTG INT SPACE USED: \" + 100.*(((long) end)-(long) start)/(1L<<32));\n    for (int i=start;i<=end;i++) {\n      double x = Geo3DUtil.decodeValue(i);\n      assertEquals(i, Geo3DUtil.encodeValue(x));\n      if (i > start+1) {\n        assertEquals(Geo3DUtil.DECODE, x - Geo3DUtil.decodeValue(i-1), 0.0d);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5911e43da0a397d56198dce934a4091dc30a0c97","date":1460069327,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEncodeIsStableFromIntSide().mjava","sourceNew":null,"sourceOld":"  // Takes ~35 seconds on modern-ish 2015 dev box:\n  @Nightly\n  public void testEncodeIsStableFromIntSide() throws Exception {\n    double max = PlanetModel.WGS84.getMaximumMagnitude();\n\n    // We can't test the full space of ints (Integer.MIN_VALUE to Integer.MAX_VALUE) because not all ints are allowed:\n    int start = Geo3DUtil.encodeValue(-max);\n    int end = Geo3DUtil.encodeValue(max);\n    // This prints: 99.99997175764292\n    //System.out.println(\"PCTG INT SPACE USED: \" + 100.*(((long) end)-(long) start)/(1L<<32));\n    for (int i=start;i<=end;i++) {\n      double x = Geo3DUtil.decodeValue(i);\n      assertEquals(i, Geo3DUtil.encodeValue(x));\n      if (i > start+1) {\n        assertEquals(Geo3DUtil.DECODE, x - Geo3DUtil.decodeValue(i-1), 0.0d);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testEncodeIsStableFromIntSide().mjava","sourceNew":null,"sourceOld":"  // Takes ~35 seconds on modern-ish 2015 dev box:\n  @Nightly\n  public void testEncodeIsStableFromIntSide() throws Exception {\n    double max = PlanetModel.WGS84.getMaximumMagnitude();\n\n    // We can't test the full space of ints (Integer.MIN_VALUE to Integer.MAX_VALUE) because not all ints are allowed:\n    int start = Geo3DUtil.encodeValue(-max);\n    int end = Geo3DUtil.encodeValue(max);\n    // This prints: 99.99997175764292\n    //System.out.println(\"PCTG INT SPACE USED: \" + 100.*(((long) end)-(long) start)/(1L<<32));\n    for (int i=start;i<=end;i++) {\n      double x = Geo3DUtil.decodeValue(i);\n      assertEquals(i, Geo3DUtil.encodeValue(x));\n      if (i > start+1) {\n        assertEquals(Geo3DUtil.DECODE, x - Geo3DUtil.decodeValue(i-1), 0.0d);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9","5911e43da0a397d56198dce934a4091dc30a0c97"],"5911e43da0a397d56198dce934a4091dc30a0c97":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"]},"commit2Childs":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","5911e43da0a397d56198dce934a4091dc30a0c97"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5911e43da0a397d56198dce934a4091dc30a0c97":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}