{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null, CodecProvider.getDefault());\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null);\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, CodecProvider.getDefault());\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null, CodecProvider.getDefault());\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, CodecProvider.getDefault());\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null, CodecProvider.getDefault());\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, CodecProvider.getDefault());\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, null, CodecProvider.getDefault());\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"347c6da08ee2df2551ec05ebb1754e685937c1f3","date":1294422164,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, CodecProvider.getDefault());\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, CodecProvider.getDefault());\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexFileDeleter(dir, new KeepOnlyLastCommitDeletionPolicy(), infos, null, CodecProvider.getDefault());\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f","date":1322512504,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      SegmentInfos infos = new SegmentInfos();\n      infos.read(dir);\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":["8b6187898fc4413ccd18229711786550a280383c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#assertNoUnreferencedFiles(Directory,String).mjava","sourceNew":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","sourceOld":"    public static void assertNoUnreferencedFiles(Directory dir, String message) throws IOException {\n      String[] startFiles = dir.listAll();\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))).rollback();\n      String[] endFiles = dir.listAll();\n\n      Arrays.sort(startFiles);\n      Arrays.sort(endFiles);\n\n      if (!Arrays.equals(startFiles, endFiles)) {\n        fail(message + \": before delete:\\n    \" + arrayToString(startFiles) + \"\\n  after delete:\\n    \" + arrayToString(endFiles));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"347c6da08ee2df2551ec05ebb1754e685937c1f3":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"962d04139994fce5193143ef35615499a9a96d78":["868da859b43505d9d2a023bfeae6dd0c795f5295","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["347c6da08ee2df2551ec05ebb1754e685937c1f3"],"a3776dccca01c11e7046323cfad46a3b4a471233":["347c6da08ee2df2551ec05ebb1754e685937c1f3","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","347c6da08ee2df2551ec05ebb1754e685937c1f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","347c6da08ee2df2551ec05ebb1754e685937c1f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"347c6da08ee2df2551ec05ebb1754e685937c1f3":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["347c6da08ee2df2551ec05ebb1754e685937c1f3","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["962d04139994fce5193143ef35615499a9a96d78"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}