{"path":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","commits":[{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#StandardTermsDictWriter(StandardTermsIndexWriter,SegmentWriteState,StandardPostingsWriter,Comparator[BytesRef]).mjava","sourceNew":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n    state.flushedFiles.add(termsFileName);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":"  public StandardTermsDictWriter(\n      StandardTermsIndexWriter termsIndexWriter,\n      SegmentWriteState state,\n      StandardPostingsWriter postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", StandardCodec.TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n    state.flushedFiles.add(termsFileName);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16c697f6ca5cdc82f918f753317a4ac9c70d259f","date":1289840486,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n    state.flushedFiles.add(termsFileName);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n    state.flushedFiles.add(termsFileName);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n    state.flushedFiles.add(termsFileName);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, \"\", TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n    state.flushedFiles.add(termsFileName);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n    state.flushedFiles.add(termsFileName);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe","date":1294227869,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n    state.flushedFiles.add(termsFileName);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n    state.flushedFiles.add(termsFileName);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n    state.flushedFiles.add(termsFileName);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":"  public BlockTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n    segment = state.segmentName;\n\n    //System.out.println(\"BTW.init seg=\" + state.segmentName);\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","sourceOld":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":null,"sourceOld":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#PrefixCodedTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase,Comparator[BytesRef]).mjava","sourceNew":null,"sourceOld":"  public PrefixCodedTermsWriter(\n      TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state,\n      PostingsWriterBase postingsWriter,\n      Comparator<BytesRef> termComp) throws IOException\n  {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.codecId, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    this.termComp = termComp;\n    out = state.directory.createOutput(termsFileName);\n    termsIndexWriter.setTermsOutput(out);\n\n    fieldInfos = state.fieldInfos;\n    writeHeader(out);\n    termWriter = new DeltaBytesWriter(out);\n    currentField = null;\n    this.postingsWriter = postingsWriter;\n\n    postingsWriter.start(out);                          // have consumer write its format/header\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"16c697f6ca5cdc82f918f753317a4ac9c70d259f":["99cf56f3a650b908f7017a72f9d23940418f8a52"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["99cf56f3a650b908f7017a72f9d23940418f8a52","16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["868da859b43505d9d2a023bfeae6dd0c795f5295","b1add9ddc0005b07550d4350720aac22dc9886b3"],"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe":["16c697f6ca5cdc82f918f753317a4ac9c70d259f"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b1add9ddc0005b07550d4350720aac22dc9886b3"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["70ad682703b8585f5d0a637efec044d57ec05efb"],"16c697f6ca5cdc82f918f753317a4ac9c70d259f":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99cf56f3a650b908f7017a72f9d23940418f8a52"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"fdc49cf4bbf2603a647b53ff5cfa6878743a3ffe":["70ad682703b8585f5d0a637efec044d57ec05efb","b1add9ddc0005b07550d4350720aac22dc9886b3","868da859b43505d9d2a023bfeae6dd0c795f5295"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["16c697f6ca5cdc82f918f753317a4ac9c70d259f","9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}