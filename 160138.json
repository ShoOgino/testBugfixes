{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","commits":[{"id":"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","date":1357499264,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct from the given path components. */\n  public CategoryPath(String... components) {\n    this.components = components;\n    length = components.length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct from the given path components. */\n  public CategoryPath(String... components) {\n    this.components = components;\n    length = components.length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ffa18fad2d839bbae5054931722c97d04c10258","date":1358772877,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","sourceNew":"  /** Construct from the given path components. */\n  public CategoryPath(String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    this.components = components;\n    length = components.length;\n  }\n\n","sourceOld":"  /** Construct from the given path components. */\n  public CategoryPath(String... components) {\n    this.components = components;\n    length = components.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","sourceNew":"  /** Construct from the given path components. */\n  public CategoryPath(String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    this.components = components;\n    length = components.length;\n  }\n\n","sourceOld":"  /** Construct from the given path components. */\n  public CategoryPath(String... components) {\n    this.components = components;\n    length = components.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92a7cdc9f75cac72d21026048992b5a768dfa914","date":1358938986,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","sourceNew":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    if (IS_J9_JAVA7) {\n      // On IBM J9 Java 1.7.0, if we do 'this.components = components', then\n      // at some point its length becomes 0 ... quite unexpectedly. If JIT is\n      // disabled, it doesn't happen. This bypasses the bug by copying the \n      // array (note, Arrays.copyOf did not help either!).\n      this.components = new String[components.length];\n      System.arraycopy(components, 0, this.components, 0, components.length);\n    } else {\n      this.components = components;\n    }\n    length = components.length;\n  }\n\n","sourceOld":"  /** Construct from the given path components. */\n  public CategoryPath(String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    this.components = components;\n    length = components.length;\n  }\n\n","bugFix":null,"bugIntro":["96bab49347cfd234e1aef7eeb5a965f2bfe5b934"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b2d5244a676b83c2d551c3746e8181588ba619e1","date":1359031414,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","sourceNew":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    if (IS_J9_JAVA7) {\n      // On IBM J9 Java 1.7.0, if we do 'this.components = components', then\n      // at some point its length becomes 0 ... quite unexpectedly. If JIT is\n      // disabled, it doesn't happen. This bypasses the bug by copying the \n      // array (note, Arrays.copyOf did not help either!).\n      this.components = new String[components.length];\n      System.arraycopy(components, 0, this.components, 0, components.length);\n    } else {\n      this.components = components;\n    }\n    length = components.length;\n  }\n\n","sourceOld":"  /** Construct from the given path components. */\n  public CategoryPath(String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    this.components = components;\n    length = components.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96bab49347cfd234e1aef7eeb5a965f2bfe5b934","date":1359367929,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","sourceNew":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    this.components = components;\n    length = components.length;\n  }\n\n","sourceOld":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    if (IS_J9_JAVA7) {\n      // On IBM J9 Java 1.7.0, if we do 'this.components = components', then\n      // at some point its length becomes 0 ... quite unexpectedly. If JIT is\n      // disabled, it doesn't happen. This bypasses the bug by copying the \n      // array (note, Arrays.copyOf did not help either!).\n      this.components = new String[components.length];\n      System.arraycopy(components, 0, this.components, 0, components.length);\n    } else {\n      this.components = components;\n    }\n    length = components.length;\n  }\n\n","bugFix":["92a7cdc9f75cac72d21026048992b5a768dfa914"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f98959552975d79aafaf0f964262eac98ded407","date":1359372702,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","sourceNew":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    for (String comp : components) {\n      if (comp == null || comp.isEmpty()) {\n        throw new IllegalArgumentException(\"empty or null components not allowed: \" + Arrays.toString(components));\n      }\n    }\n    this.components = components;\n    length = components.length;\n  }\n\n","sourceOld":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    this.components = components;\n    length = components.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de522d9303bd67c8473a269a1319125d1f3700e0","date":1359477856,"type":3,"author":"Adrien Grand","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","sourceNew":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    for (String comp : components) {\n      if (comp == null || comp.isEmpty()) {\n        throw new IllegalArgumentException(\"empty or null components not allowed: \" + Arrays.toString(components));\n      }\n    }\n    this.components = components;\n    length = components.length;\n  }\n\n","sourceOld":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    if (IS_J9_JAVA7) {\n      // On IBM J9 Java 1.7.0, if we do 'this.components = components', then\n      // at some point its length becomes 0 ... quite unexpectedly. If JIT is\n      // disabled, it doesn't happen. This bypasses the bug by copying the \n      // array (note, Arrays.copyOf did not help either!).\n      this.components = new String[components.length];\n      System.arraycopy(components, 0, this.components, 0, components.length);\n    } else {\n      this.components = components;\n    }\n    length = components.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95dac0f45251471041578dd8de89dfc7fbb28f8b","date":1370889677,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","sourceNew":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    long len = 0;\n    for (String comp : components) {\n      if (comp == null || comp.isEmpty()) {\n        throw new IllegalArgumentException(\"empty or null components not allowed: \" + Arrays.toString(components));\n      }\n      len += comp.length();\n    }\n    len += components.length - 1; // add separators\n    if (len > MAX_CATEGORY_PATH_LENGTH) {\n      throw new IllegalArgumentException(\"category path exceeds maximum allowed path length: max=\"\n          + MAX_CATEGORY_PATH_LENGTH + \" len=\" + len\n          + \" path=\" + Arrays.toString(components).substring(0, 30) + \"...\");\n    }\n    this.components = components;\n    length = components.length;\n  }\n\n","sourceOld":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    for (String comp : components) {\n      if (comp == null || comp.isEmpty()) {\n        throw new IllegalArgumentException(\"empty or null components not allowed: \" + Arrays.toString(components));\n      }\n    }\n    this.components = components;\n    length = components.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/FacetLabel#FacetLabel(String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","sourceNew":"  /** Construct from the given path components. */\n  public FacetLabel(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    long len = 0;\n    for (String comp : components) {\n      if (comp == null || comp.isEmpty()) {\n        throw new IllegalArgumentException(\"empty or null components not allowed: \" + Arrays.toString(components));\n      }\n      len += comp.length();\n    }\n    len += components.length - 1; // add separators\n    if (len > MAX_CATEGORY_PATH_LENGTH) {\n      throw new IllegalArgumentException(\"category path exceeds maximum allowed path length: max=\"\n          + MAX_CATEGORY_PATH_LENGTH + \" len=\" + len\n          + \" path=\" + Arrays.toString(components).substring(0, 30) + \"...\");\n    }\n    this.components = components;\n    length = components.length;\n  }\n\n","sourceOld":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    long len = 0;\n    for (String comp : components) {\n      if (comp == null || comp.isEmpty()) {\n        throw new IllegalArgumentException(\"empty or null components not allowed: \" + Arrays.toString(components));\n      }\n      len += comp.length();\n    }\n    len += components.length - 1; // add separators\n    if (len > MAX_CATEGORY_PATH_LENGTH) {\n      throw new IllegalArgumentException(\"category path exceeds maximum allowed path length: max=\"\n          + MAX_CATEGORY_PATH_LENGTH + \" len=\" + len\n          + \" path=\" + Arrays.toString(components).substring(0, 30) + \"...\");\n    }\n    this.components = components;\n    length = components.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#CategoryPath(String...).mjava","sourceNew":null,"sourceOld":"  /** Construct from the given path components. */\n  public CategoryPath(final String... components) {\n    assert components.length > 0 : \"use CategoryPath.EMPTY to create an empty path\";\n    long len = 0;\n    for (String comp : components) {\n      if (comp == null || comp.isEmpty()) {\n        throw new IllegalArgumentException(\"empty or null components not allowed: \" + Arrays.toString(components));\n      }\n      len += comp.length();\n    }\n    len += components.length - 1; // add separators\n    if (len > MAX_CATEGORY_PATH_LENGTH) {\n      throw new IllegalArgumentException(\"category path exceeds maximum allowed path length: max=\"\n          + MAX_CATEGORY_PATH_LENGTH + \" len=\" + len\n          + \" path=\" + Arrays.toString(components).substring(0, 30) + \"...\");\n    }\n    this.components = components;\n    length = components.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"92a7cdc9f75cac72d21026048992b5a768dfa914":["1ffa18fad2d839bbae5054931722c97d04c10258"],"9f98959552975d79aafaf0f964262eac98ded407":["96bab49347cfd234e1aef7eeb5a965f2bfe5b934"],"07155cdd910937cdf6877e48884d5782845c8b8b":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","1ffa18fad2d839bbae5054931722c97d04c10258"],"de522d9303bd67c8473a269a1319125d1f3700e0":["b2d5244a676b83c2d551c3746e8181588ba619e1","9f98959552975d79aafaf0f964262eac98ded407"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["95dac0f45251471041578dd8de89dfc7fbb28f8b"],"b2d5244a676b83c2d551c3746e8181588ba619e1":["07155cdd910937cdf6877e48884d5782845c8b8b","92a7cdc9f75cac72d21026048992b5a768dfa914"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"96bab49347cfd234e1aef7eeb5a965f2bfe5b934":["92a7cdc9f75cac72d21026048992b5a768dfa914"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"95dac0f45251471041578dd8de89dfc7fbb28f8b":["9f98959552975d79aafaf0f964262eac98ded407"],"1ffa18fad2d839bbae5054931722c97d04c10258":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["95dac0f45251471041578dd8de89dfc7fbb28f8b","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["07155cdd910937cdf6877e48884d5782845c8b8b"],"92a7cdc9f75cac72d21026048992b5a768dfa914":["b2d5244a676b83c2d551c3746e8181588ba619e1","96bab49347cfd234e1aef7eeb5a965f2bfe5b934"],"9f98959552975d79aafaf0f964262eac98ded407":["de522d9303bd67c8473a269a1319125d1f3700e0","95dac0f45251471041578dd8de89dfc7fbb28f8b"],"07155cdd910937cdf6877e48884d5782845c8b8b":["b2d5244a676b83c2d551c3746e8181588ba619e1"],"de522d9303bd67c8473a269a1319125d1f3700e0":[],"b2d5244a676b83c2d551c3746e8181588ba619e1":["de522d9303bd67c8473a269a1319125d1f3700e0"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","1ffa18fad2d839bbae5054931722c97d04c10258"],"96bab49347cfd234e1aef7eeb5a965f2bfe5b934":["9f98959552975d79aafaf0f964262eac98ded407"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"95dac0f45251471041578dd8de89dfc7fbb28f8b":["c190847801a50f4dd20fd639bdc29b54ea3b288b","3cc728b07df73b197e6d940d27f9b08b63918f13"],"1ffa18fad2d839bbae5054931722c97d04c10258":["92a7cdc9f75cac72d21026048992b5a768dfa914","07155cdd910937cdf6877e48884d5782845c8b8b"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["de522d9303bd67c8473a269a1319125d1f3700e0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}