{"path":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#assertNRT().mjava","commits":[{"id":"65974810aff303cdaecff3dd789ae9353c1d9134","date":1376496589,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#assertNRT().mjava","pathOld":"/dev/null","sourceNew":"  private void assertNRT() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    try {\n      DirectoryReader ir = searcher.get().getIndexReader();\n      assertEquals(1, ir.maxDoc());\n      assertTrue(\"expected NRT reader, got: \" + ir, ir.toString().contains(\":nrt\"));\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#assertNRT().mjava","pathOld":"/dev/null","sourceNew":"  private void assertNRT() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    try {\n      DirectoryReader ir = searcher.get().getIndexReader();\n      assertEquals(1, ir.maxDoc());\n      assertTrue(\"expected NRT reader, got: \" + ir, ir.toString().contains(\":nrt\"));\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360","date":1378833548,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#assertNRT(int).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#assertNRT().mjava","sourceNew":"  static void assertNRT(int maxDoc) {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    try {\n      DirectoryReader ir = searcher.get().getIndexReader();\n      assertEquals(maxDoc, ir.maxDoc());\n      assertTrue(\"expected NRT reader, got: \" + ir, ir.toString().contains(\":nrt\"));\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","sourceOld":"  private void assertNRT() {\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    try {\n      DirectoryReader ir = searcher.get().getIndexReader();\n      assertEquals(1, ir.maxDoc());\n      assertTrue(\"expected NRT reader, got: \" + ir, ir.toString().contains(\":nrt\"));\n    } finally {\n      searcher.decref();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","65974810aff303cdaecff3dd789ae9353c1d9134"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"65974810aff303cdaecff3dd789ae9353c1d9134":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360":["65974810aff303cdaecff3dd789ae9353c1d9134"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360"]},"commit2Childs":{"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","65974810aff303cdaecff3dd789ae9353c1d9134"],"65974810aff303cdaecff3dd789ae9353c1d9134":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360"],"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}