{"path":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","commits":[{"id":"65974810aff303cdaecff3dd789ae9353c1d9134","date":1376496589,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = dataDir;\n    deleteCore();\n    // boot up again over the same index\n    dataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9799ebcab48102552d92f7807965a91fb6e116f7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = dataDir;\n    deleteCore();\n    // boot up again over the same index\n    dataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360","date":1378833548,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = dataDir;\n    deleteCore();\n    // boot up again over the same index\n    dataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = dataDir;\n    deleteCore();\n    // boot up again over the same index\n    dataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n  }\n\n","bugFix":null,"bugIntro":["9799ebcab48102552d92f7807965a91fb6e116f7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = dataDir;\n    deleteCore();\n    // boot up again over the same index\n    dataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","bugFix":null,"bugIntro":["9799ebcab48102552d92f7807965a91fb6e116f7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = dataDir;\n    deleteCore();\n    // boot up again over the same index\n    dataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d7d215f266ffde522863d265557253945d48c672","date":1456154575,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicy(LogDocMergePolicy.class.getName());\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicy(LogDocMergePolicy.class.getName());\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.mergePolicy\", \"org.apache.lucene.index.LogDocMergePolicy\");\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70d848516a5d0b23d183a2ceb4f4fb8634205956","date":1496408348,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicy(LogDocMergePolicy.class.getName());\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicy(LogDocMergePolicy.class.getName());\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicy(LogDocMergePolicy.class.getName());\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9799ebcab48102552d92f7807965a91fb6e116f7","date":1564676118,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    // reload the core again over the same index\n    h.reload();\n    assertNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","bugFix":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","65974810aff303cdaecff3dd789ae9353c1d9134","c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestNRTOpen#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    // reload the core again over the same index\n    h.reload();\n    assertNRT(1);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // use a filesystem, because we need to create an index, then \"start up solr\"\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    // and dont delete it initially\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    // set these so that merges won't break the test\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // add a doc\n    assertU(adoc(\"foo\", \"bar\"));\n    assertU(commit());\n    File myDir = initCoreDataDir;\n    deleteCore();\n    // boot up again over the same index\n    initCoreDataDir = myDir;\n    initCore(\"solrconfig-basic.xml\", \"schema-minimal.xml\");\n    // startup\n    assertNRT(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360"],"d7d215f266ffde522863d265557253945d48c672":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","65974810aff303cdaecff3dd789ae9353c1d9134"],"419a8f52c6635419beb951255cacbbb281044c57":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d7d215f266ffde522863d265557253945d48c672"],"70d848516a5d0b23d183a2ceb4f4fb8634205956":["419a8f52c6635419beb951255cacbbb281044c57"],"28288370235ed02234a64753cdbf0c6ec096304a":["419a8f52c6635419beb951255cacbbb281044c57","70d848516a5d0b23d183a2ceb4f4fb8634205956"],"f8061ddd97f3352007d927dae445884a6f3d857b":["28288370235ed02234a64753cdbf0c6ec096304a","9799ebcab48102552d92f7807965a91fb6e116f7"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["419a8f52c6635419beb951255cacbbb281044c57","70d848516a5d0b23d183a2ceb4f4fb8634205956"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9799ebcab48102552d92f7807965a91fb6e116f7":["28288370235ed02234a64753cdbf0c6ec096304a"],"65974810aff303cdaecff3dd789ae9353c1d9134":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360":["65974810aff303cdaecff3dd789ae9353c1d9134"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9799ebcab48102552d92f7807965a91fb6e116f7"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d7d215f266ffde522863d265557253945d48c672":["419a8f52c6635419beb951255cacbbb281044c57"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["d7d215f266ffde522863d265557253945d48c672","419a8f52c6635419beb951255cacbbb281044c57"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"419a8f52c6635419beb951255cacbbb281044c57":["70d848516a5d0b23d183a2ceb4f4fb8634205956","28288370235ed02234a64753cdbf0c6ec096304a","e9017cf144952056066919f1ebc7897ff9bd71b1"],"70d848516a5d0b23d183a2ceb4f4fb8634205956":["28288370235ed02234a64753cdbf0c6ec096304a","e9017cf144952056066919f1ebc7897ff9bd71b1"],"28288370235ed02234a64753cdbf0c6ec096304a":["f8061ddd97f3352007d927dae445884a6f3d857b","9799ebcab48102552d92f7807965a91fb6e116f7"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","65974810aff303cdaecff3dd789ae9353c1d9134"],"9799ebcab48102552d92f7807965a91fb6e116f7":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"65974810aff303cdaecff3dd789ae9353c1d9134":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360"],"c9f81a0a8d08cc36757b7be45a8c8dcd66ff0360":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","f8061ddd97f3352007d927dae445884a6f3d857b","e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}