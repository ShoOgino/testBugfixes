{"path":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","commits":[{"id":"aedcfb5ebceafe4a0285436fa86269ed6c926442","date":1271441603,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new SimpleAnalyzer(TEST_VERSION_CURRENT);\n      case 1: return new StopAnalyzer(TEST_VERSION_CURRENT);\n      default: return new StandardAnalyzer(TEST_VERSION_CURRENT);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03276b2744036b1b19a7a2dd4b74ba7bc484f107","date":1274048508,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","sourceNew":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new MockAnalyzer(MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","sourceOld":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new SimpleAnalyzer(TEST_VERSION_CURRENT);\n      case 1: return new StopAnalyzer(TEST_VERSION_CURRENT);\n      default: return new StandardAnalyzer(TEST_VERSION_CURRENT);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","sourceNew":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new MockAnalyzer(random, MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","sourceOld":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new MockAnalyzer(MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","sourceNew":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new MockAnalyzer(random, MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","sourceOld":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new MockAnalyzer(MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","sourceNew":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new MockAnalyzer(random, MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","sourceOld":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new MockAnalyzer(MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","sourceNew":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new MockAnalyzer(random, MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","sourceOld":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new MockAnalyzer(MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","sourceNew":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random().nextInt(3)) {\n      case 0: return new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","sourceOld":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random.nextInt(3)) {\n      case 0: return new MockAnalyzer(random, MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(random, MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","bugFix":null,"bugIntro":["864042e09edf94aeba885c1835408c3f88ca2325"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomAnalyzer().mjava","sourceNew":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random().nextInt(3)) {\n      case 0: return new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","sourceOld":"  /**\n   * Return a random analyzer (Simple, Stop, Standard) to analyze the terms.\n   */\n  private Analyzer randomAnalyzer() {\n    switch(random().nextInt(3)) {\n      case 0: return new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n      case 1: return new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n      default: return new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"03276b2744036b1b19a7a2dd4b74ba7bc484f107":["aedcfb5ebceafe4a0285436fa86269ed6c926442"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["03276b2744036b1b19a7a2dd4b74ba7bc484f107"],"a3776dccca01c11e7046323cfad46a3b4a471233":["03276b2744036b1b19a7a2dd4b74ba7bc484f107","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"aedcfb5ebceafe4a0285436fa86269ed6c926442":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["03276b2744036b1b19a7a2dd4b74ba7bc484f107","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"962d04139994fce5193143ef35615499a9a96d78":["03276b2744036b1b19a7a2dd4b74ba7bc484f107","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"03276b2744036b1b19a7a2dd4b74ba7bc484f107":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"aedcfb5ebceafe4a0285436fa86269ed6c926442":["03276b2744036b1b19a7a2dd4b74ba7bc484f107"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aedcfb5ebceafe4a0285436fa86269ed6c926442"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"962d04139994fce5193143ef35615499a9a96d78":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}