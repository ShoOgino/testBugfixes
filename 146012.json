{"path":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(TreeMap[BytesRef,TermData],boolean).mjava","commits":[{"id":"02f9424edb9eccc558626693e4a4cd43f8ce2622","date":1288987640,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(TreeMap[BytesRef,TermData],boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(long,boolean).mjava","sourceNew":"    public SimpleTextTermsEnum(TreeMap<BytesRef,TermData> allTerms, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.allTerms = allTerms;\n      this.omitTF = omitTF;\n      iter = allTerms.entrySet().iterator();\n    }\n\n","sourceOld":"    public SimpleTextTermsEnum(long offset, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.in.seek(offset);\n      this.omitTF = omitTF;\n      fieldStart = offset;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7d6f751de577f829f8bdc897d050c728075723a","date":1288988093,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(long,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(TreeMap[BytesRef,TermData],boolean).mjava","sourceNew":"    public SimpleTextTermsEnum(long offset, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.in.seek(offset);\n      this.omitTF = omitTF;\n      fieldStart = offset;\n    }\n\n","sourceOld":"    public SimpleTextTermsEnum(TreeMap<BytesRef,TermData> allTerms, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.allTerms = allTerms;\n      this.omitTF = omitTF;\n      iter = allTerms.entrySet().iterator();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b2d719eaefc9684ff00084555da5f61a7f32aef","date":1288993916,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(TreeMap[BytesRef,TermData],boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(long,boolean).mjava","sourceNew":"    public SimpleTextTermsEnum(TreeMap<BytesRef,TermData> allTerms, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.allTerms = allTerms;\n      this.omitTF = omitTF;\n      iter = allTerms.entrySet().iterator();\n    }\n\n","sourceOld":"    public SimpleTextTermsEnum(long offset, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.in.seek(offset);\n      this.omitTF = omitTF;\n      fieldStart = offset;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(TreeMap[BytesRef,TermData],boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(long,boolean).mjava","sourceNew":"    public SimpleTextTermsEnum(TreeMap<BytesRef,TermData> allTerms, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.allTerms = allTerms;\n      this.omitTF = omitTF;\n      iter = allTerms.entrySet().iterator();\n    }\n\n","sourceOld":"    public SimpleTextTermsEnum(long offset, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.in.seek(offset);\n      this.omitTF = omitTF;\n      fieldStart = offset;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4769bdea5a853f1841c485bc1fd9d79cb7022fc","date":1292168168,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(FST[PairOutputs.Pair[Long,Long]],boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(TreeMap[BytesRef,TermData],boolean).mjava","sourceNew":"    public SimpleTextTermsEnum(FST<PairOutputs.Pair<Long,Long>> fst, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.omitTF = omitTF;\n      fstEnum = new BytesRefFSTEnum<PairOutputs.Pair<Long,Long>>(fst);\n    }\n\n","sourceOld":"    public SimpleTextTermsEnum(TreeMap<BytesRef,TermData> allTerms, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.allTerms = allTerms;\n      this.omitTF = omitTF;\n      iter = allTerms.entrySet().iterator();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(FST[PairOutputs.Pair[Long,Long]],boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextTermsEnum#SimpleTextTermsEnum(TreeMap[BytesRef,TermData],boolean).mjava","sourceNew":"    public SimpleTextTermsEnum(FST<PairOutputs.Pair<Long,Long>> fst, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.omitTF = omitTF;\n      fstEnum = new BytesRefFSTEnum<PairOutputs.Pair<Long,Long>>(fst);\n    }\n\n","sourceOld":"    public SimpleTextTermsEnum(TreeMap<BytesRef,TermData> allTerms, boolean omitTF) throws IOException {\n      this.in = (IndexInput) SimpleTextFieldsReader.this.in.clone();\n      this.allTerms = allTerms;\n      this.omitTF = omitTF;\n      iter = allTerms.entrySet().iterator();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b2d719eaefc9684ff00084555da5f61a7f32aef"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["85a883878c0af761245ab048babc63d099f835f3","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"02f9424edb9eccc558626693e4a4cd43f8ce2622":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2b2d719eaefc9684ff00084555da5f61a7f32aef":["f7d6f751de577f829f8bdc897d050c728075723a"],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["2b2d719eaefc9684ff00084555da5f61a7f32aef"],"f7d6f751de577f829f8bdc897d050c728075723a":["02f9424edb9eccc558626693e4a4cd43f8ce2622"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4769bdea5a853f1841c485bc1fd9d79cb7022fc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","02f9424edb9eccc558626693e4a4cd43f8ce2622"],"85a883878c0af761245ab048babc63d099f835f3":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"02f9424edb9eccc558626693e4a4cd43f8ce2622":["f7d6f751de577f829f8bdc897d050c728075723a"],"2b2d719eaefc9684ff00084555da5f61a7f32aef":["85a883878c0af761245ab048babc63d099f835f3","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f7d6f751de577f829f8bdc897d050c728075723a":["2b2d719eaefc9684ff00084555da5f61a7f32aef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}