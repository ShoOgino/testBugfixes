{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/VarSortedBytesImpl.DirectSortedSource#DirectSortedSource(IndexInput,IndexInput,Comparator[BytesRef],ValueType).mjava","commits":[{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/VarSortedBytesImpl.DirectSortedSource#DirectSortedSource(IndexInput,IndexInput,Comparator[BytesRef],ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/VarSortedBytesImpl.DirectSortedSource#DirectSortedSource(IndexInput,IndexInput,Comparator[BytesRef],ValueType).mjava","sourceNew":"    DirectSortedSource(IndexInput datIn, IndexInput idxIn,\n        Comparator<BytesRef> comparator, ValueType type) throws IOException {\n      super(type, comparator);\n      idxIn.readLong();\n      ordToOffsetIndex = PackedInts.getDirectReader(idxIn);\n      valueCount = ordToOffsetIndex.size()-1; // the last value here is just a dummy value to get the length of the last value\n      // advance this iterator to the end and clone the stream once it points to the docToOrdIndex header\n      ordToOffsetIndex.get(valueCount);\n      docToOrdIndex = PackedInts.getDirectReader((IndexInput) idxIn.clone()); // read the ords in to prevent too many random disk seeks\n      basePointer = datIn.getFilePointer();\n      this.datIn = datIn;\n    }\n\n","sourceOld":"    DirectSortedSource(IndexInput datIn, IndexInput idxIn,\n        Comparator<BytesRef> comparator, ValueType type) throws IOException {\n      super(type, comparator);\n      idxIn.readLong();\n      ordToOffsetIndex = PackedInts.getDirectReader(idxIn);\n      valueCount = ordToOffsetIndex.size()-1; // the last value here is just a dummy value to get the length of the last value\n      // advance this iterator to the end and clone the stream once it points to the docToOrdIndex header\n      ordToOffsetIndex.get(valueCount);\n      docToOrdIndex = PackedInts.getDirectReader((IndexInput) idxIn.clone()); // read the ords in to prevent too many random disk seeks\n      basePointer = datIn.getFilePointer();\n      this.datIn = datIn;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/VarSortedBytesImpl.DirectSortedSource#DirectSortedSource(IndexInput,IndexInput,Comparator[BytesRef],Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/VarSortedBytesImpl.DirectSortedSource#DirectSortedSource(IndexInput,IndexInput,Comparator[BytesRef],ValueType).mjava","sourceNew":"    DirectSortedSource(IndexInput datIn, IndexInput idxIn,\n        Comparator<BytesRef> comparator, Type type) throws IOException {\n      super(type, comparator);\n      idxIn.readLong();\n      ordToOffsetIndex = PackedInts.getDirectReader(idxIn);\n      valueCount = ordToOffsetIndex.size()-1; // the last value here is just a dummy value to get the length of the last value\n      // advance this iterator to the end and clone the stream once it points to the docToOrdIndex header\n      ordToOffsetIndex.get(valueCount);\n      docToOrdIndex = PackedInts.getDirectReader((IndexInput) idxIn.clone()); // read the ords in to prevent too many random disk seeks\n      basePointer = datIn.getFilePointer();\n      this.datIn = datIn;\n    }\n\n","sourceOld":"    DirectSortedSource(IndexInput datIn, IndexInput idxIn,\n        Comparator<BytesRef> comparator, ValueType type) throws IOException {\n      super(type, comparator);\n      idxIn.readLong();\n      ordToOffsetIndex = PackedInts.getDirectReader(idxIn);\n      valueCount = ordToOffsetIndex.size()-1; // the last value here is just a dummy value to get the length of the last value\n      // advance this iterator to the end and clone the stream once it points to the docToOrdIndex header\n      ordToOffsetIndex.get(valueCount);\n      docToOrdIndex = PackedInts.getDirectReader((IndexInput) idxIn.clone()); // read the ords in to prevent too many random disk seeks\n      basePointer = datIn.getFilePointer();\n      this.datIn = datIn;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["f9efc72acdea22f5285be0a808f8bba51bb8e367"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f9efc72acdea22f5285be0a808f8bba51bb8e367","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":[],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}