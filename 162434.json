{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/Cell#getSubCell(Point).mjava","commits":[{"id":"8259c159da2de2e8528524fb76b244b46cbded59","date":1364478249,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/Cell#getSubCell(Point).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/Node#getSubCell(Point).mjava","sourceNew":"  /**\n   * Performant implementations are expected to implement this efficiently by\n   * considering the current cell's boundary. Precondition: Never called when\n   * getLevel() == maxLevel.\n   * <p/>\n   * Precondition: this.getShape().relate(p) != DISJOINT.\n   */\n  public abstract Cell getSubCell(Point p);\n\n","sourceOld":"  /**\n   * Performant implementations are expected to implement this efficiently by\n   * considering the current cell's boundary. Precondition: Never called when\n   * getLevel() == maxLevel.\n   * <p/>\n   * Precondition: this.getShape().relate(p) != DISJOINT.\n   */\n  public abstract Node getSubCell(Point p);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6","date":1397789149,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell#getSubCell(Point).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/Cell#getSubCell(Point).mjava","sourceNew":"  /**\n   * Performant implementations are expected to implement this efficiently by\n   * considering the current cell's boundary.\n   * <p/>\n   * Precondition: Never called when getLevel() == maxLevel.\n   * Precondition: this.getShape().relate(p) != DISJOINT.\n   */\n  protected abstract LegacyCell getSubCell(Point p);\n\n","sourceOld":"  /**\n   * Performant implementations are expected to implement this efficiently by\n   * considering the current cell's boundary. Precondition: Never called when\n   * getLevel() == maxLevel.\n   * <p/>\n   * Precondition: this.getShape().relate(p) != DISJOINT.\n   */\n  public abstract Cell getSubCell(Point p);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["8259c159da2de2e8528524fb76b244b46cbded59"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"],"8259c159da2de2e8528524fb76b244b46cbded59":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8259c159da2de2e8528524fb76b244b46cbded59"],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8259c159da2de2e8528524fb76b244b46cbded59":["8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}