{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymGraphFilter#testMatching().mjava","commits":[{"id":"24a98f5fdd23e04f85819dbc63b47a12f7c44311","date":1482439157,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymGraphFilter#testMatching().mjava","pathOld":"/dev/null","sourceNew":"  public void testMatching() throws Exception {\n    SynonymMap.Builder b = new SynonymMap.Builder(true);\n    final boolean keepOrig = false;\n    add(b, \"a b\", \"ab\", keepOrig);\n    add(b, \"a c\", \"ac\", keepOrig);\n    add(b, \"a\", \"aa\", keepOrig);\n    add(b, \"b\", \"bb\", keepOrig);\n    add(b, \"z x c v\", \"zxcv\", keepOrig);\n    add(b, \"x c\", \"xc\", keepOrig);\n\n    Analyzer a = getFlattenAnalyzer(b, true);\n\n    checkOneTerm(a, \"$\", \"$\");\n    checkOneTerm(a, \"a\", \"aa\");\n    checkOneTerm(a, \"b\", \"bb\");\n\n    assertAnalyzesTo(a, \"a $\",\n        new String[]{\"aa\", \"$\"},\n        new int[]{1, 1});\n\n    assertAnalyzesTo(a, \"$ a\",\n        new String[]{\"$\", \"aa\"},\n        new int[]{1, 1});\n\n    assertAnalyzesTo(a, \"a a\",\n        new String[]{\"aa\", \"aa\"},\n        new int[]{1, 1});\n\n    assertAnalyzesTo(a, \"z x c v\",\n        new String[]{\"zxcv\"},\n        new int[]{1});\n\n    assertAnalyzesTo(a, \"z x c $\",\n        new String[]{\"z\", \"xc\", \"$\"},\n        new int[]{1, 1, 1});\n    a.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymGraphFilter#testMatching().mjava","pathOld":"/dev/null","sourceNew":"  public void testMatching() throws Exception {\n    SynonymMap.Builder b = new SynonymMap.Builder(true);\n    final boolean keepOrig = false;\n    add(b, \"a b\", \"ab\", keepOrig);\n    add(b, \"a c\", \"ac\", keepOrig);\n    add(b, \"a\", \"aa\", keepOrig);\n    add(b, \"b\", \"bb\", keepOrig);\n    add(b, \"z x c v\", \"zxcv\", keepOrig);\n    add(b, \"x c\", \"xc\", keepOrig);\n\n    Analyzer a = getFlattenAnalyzer(b, true);\n\n    checkOneTerm(a, \"$\", \"$\");\n    checkOneTerm(a, \"a\", \"aa\");\n    checkOneTerm(a, \"b\", \"bb\");\n\n    assertAnalyzesTo(a, \"a $\",\n        new String[]{\"aa\", \"$\"},\n        new int[]{1, 1});\n\n    assertAnalyzesTo(a, \"$ a\",\n        new String[]{\"$\", \"aa\"},\n        new int[]{1, 1});\n\n    assertAnalyzesTo(a, \"a a\",\n        new String[]{\"aa\", \"aa\"},\n        new int[]{1, 1});\n\n    assertAnalyzesTo(a, \"z x c v\",\n        new String[]{\"zxcv\"},\n        new int[]{1});\n\n    assertAnalyzesTo(a, \"z x c $\",\n        new String[]{\"z\", \"xc\", \"$\"},\n        new int[]{1, 1, 1});\n    a.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"24a98f5fdd23e04f85819dbc63b47a12f7c44311":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24a98f5fdd23e04f85819dbc63b47a12f7c44311"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","24a98f5fdd23e04f85819dbc63b47a12f7c44311"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["24a98f5fdd23e04f85819dbc63b47a12f7c44311","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"24a98f5fdd23e04f85819dbc63b47a12f7c44311":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}