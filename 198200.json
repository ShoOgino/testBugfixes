{"path":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsWriter#initDataOut(byte).mjava","commits":[{"id":"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","date":1309190785,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsWriter#initDataOut(byte).mjava","pathOld":"/dev/null","sourceNew":"    private final void initDataOut(byte typeOrd) throws IOException {\n      if (datOut == null) {\n        boolean success = false;\n        try {\n          datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              DATA_EXTENSION));\n          CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n          datOut.writeByte(typeOrd);\n          success = true;\n\n        } finally {\n          if (!success) {\n            IOUtils.closeSafely(true, datOut);\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsWriter#initDataOut(byte).mjava","pathOld":"/dev/null","sourceNew":"    private final void initDataOut(byte typeOrd) throws IOException {\n      if (datOut == null) {\n        boolean success = false;\n        try {\n          datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              DATA_EXTENSION));\n          CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n          datOut.writeByte(typeOrd);\n          success = true;\n\n        } finally {\n          if (!success) {\n            IOUtils.closeSafely(true, datOut);\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsWriter#initDataOut(byte).mjava","pathOld":"/dev/null","sourceNew":"    private final void initDataOut(byte typeOrd) throws IOException {\n      if (datOut == null) {\n        boolean success = false;\n        try {\n          datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              DATA_EXTENSION), context);\n          CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n          datOut.writeByte(typeOrd);\n          success = true;\n\n        } finally {\n          if (!success) {\n            IOUtils.closeSafely(true, datOut);\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsWriter#initDataOut(byte).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsWriter#initDataOut(byte).mjava","sourceNew":"    private final void initDataOut(byte typeOrd) throws IOException {\n      if (datOut == null) {\n        boolean success = false;\n        try {\n          datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              DATA_EXTENSION), context);\n          CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n          datOut.writeByte(typeOrd);\n          success = true;\n\n        } finally {\n          if (!success) {\n            IOUtils.closeSafely(true, datOut);\n          }\n        }\n      }\n    }\n\n","sourceOld":"    private final void initDataOut(byte typeOrd) throws IOException {\n      if (datOut == null) {\n        boolean success = false;\n        try {\n          datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              DATA_EXTENSION));\n          CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n          datOut.writeByte(typeOrd);\n          success = true;\n\n        } finally {\n          if (!success) {\n            IOUtils.closeSafely(true, datOut);\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsWriter#initDataOut(byte).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsWriter#initDataOut(byte).mjava","sourceNew":"    private final void initDataOut(byte typeOrd) throws IOException {\n      if (datOut == null) {\n        boolean success = false;\n        try {\n          datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              DATA_EXTENSION), context);\n          CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n          datOut.writeByte(typeOrd);\n          success = true;\n\n        } finally {\n          if (!success) {\n            IOUtils.closeSafely(true, datOut);\n          }\n        }\n      }\n    }\n\n","sourceOld":"    private final void initDataOut(byte typeOrd) throws IOException {\n      if (datOut == null) {\n        boolean success = false;\n        try {\n          datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              DATA_EXTENSION));\n          CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n          datOut.writeByte(typeOrd);\n          success = true;\n\n        } finally {\n          if (!success) {\n            IOUtils.closeSafely(true, datOut);\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsWriter#initDataOut(byte).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsWriter#initDataOut(byte).mjava","sourceNew":"    private final void initDataOut(byte typeOrd) throws IOException {\n      if (datOut == null) {\n        boolean success = false;\n        try {\n          datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              DATA_EXTENSION), context);\n          CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n          datOut.writeByte(typeOrd);\n          success = true;\n\n        } finally {\n          if (!success) {\n            IOUtils.closeWhileHandlingException(datOut);\n          }\n        }\n      }\n    }\n\n","sourceOld":"    private final void initDataOut(byte typeOrd) throws IOException {\n      if (datOut == null) {\n        boolean success = false;\n        try {\n          datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              DATA_EXTENSION), context);\n          CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n          datOut.writeByte(typeOrd);\n          success = true;\n\n        } finally {\n          if (!success) {\n            IOUtils.closeSafely(true, datOut);\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#getOrCreateDataOut().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsWriter#initDataOut(byte).mjava","sourceNew":"    protected IndexOutput getOrCreateDataOut() throws IOException {\n      if (datOut == null) {\n        boolean success = false;\n        try {\n          datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              DATA_EXTENSION), context);\n          CodecUtil.writeHeader(datOut, codecName, version);\n          success = true;\n        } finally {\n          if (!success) {\n            IOUtils.closeWhileHandlingException(datOut);\n          }\n        }\n      }\n      return datOut;\n    }\n\n","sourceOld":"    private final void initDataOut(byte typeOrd) throws IOException {\n      if (datOut == null) {\n        boolean success = false;\n        try {\n          datOut = dir.createOutput(IndexFileNames.segmentFileName(id, \"\",\n              DATA_EXTENSION), context);\n          CodecUtil.writeHeader(datOut, CODEC_NAME, VERSION_CURRENT);\n          datOut.writeByte(typeOrd);\n          success = true;\n\n        } finally {\n          if (!success) {\n            IOUtils.closeWhileHandlingException(datOut);\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["24230fe54121f9be9d85f2c2067536296785e421"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["2553b00f699380c64959ccb27991289aae87be2e","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85eb75e0c0203e44dcf686f35876cf6080f3a671"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["ddc4c914be86e34b54f70023f45a60fa7f04e929","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["24230fe54121f9be9d85f2c2067536296785e421","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"2553b00f699380c64959ccb27991289aae87be2e":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}