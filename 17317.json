{"path":"sandbox/contributions/webcrawler-LARM/src/hplb/misc/ByteArray#readAll(InputStream).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/hplb/misc/ByteArray#readAll(InputStream).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Read all input from an InputStream and return as a byte array.\n   * This method will not return before the end of the stream is reached.\n   * @return    contents of the stream\n   */\n  public static byte[] readAll(InputStream in) throws IOException {\n    byte[] buf = new byte[1024];\n    int nread, ntotal = 0;\n\n    while ((nread = in.read(buf, ntotal, buf.length - ntotal)) > -1) {\n      ntotal += nread;\n      if (ntotal == buf.length) {\n        // extend buffer\n        byte[] newbuf = new byte[buf.length * 2];\n        System.arraycopy(buf, 0, newbuf, 0, buf.length);\n        buf = newbuf;\n      }\n    }\n    if (ntotal < buf.length) {\n      // we cannot have excess space\n      byte[] newbuf = new byte[ntotal];\n      System.arraycopy(buf, 0, newbuf, 0, ntotal);\n      buf = newbuf;\n    }\n    return buf;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e","date":1022957716,"type":4,"author":"cmarschner","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/hplb/misc/ByteArray#readAll(InputStream).mjava","sourceNew":null,"sourceOld":"  /**\n   * Read all input from an InputStream and return as a byte array.\n   * This method will not return before the end of the stream is reached.\n   * @return    contents of the stream\n   */\n  public static byte[] readAll(InputStream in) throws IOException {\n    byte[] buf = new byte[1024];\n    int nread, ntotal = 0;\n\n    while ((nread = in.read(buf, ntotal, buf.length - ntotal)) > -1) {\n      ntotal += nread;\n      if (ntotal == buf.length) {\n        // extend buffer\n        byte[] newbuf = new byte[buf.length * 2];\n        System.arraycopy(buf, 0, newbuf, 0, buf.length);\n        buf = newbuf;\n      }\n    }\n    if (ntotal < buf.length) {\n      // we cannot have excess space\n      byte[] newbuf = new byte[ntotal];\n      System.arraycopy(buf, 0, newbuf, 0, ntotal);\n      buf = newbuf;\n    }\n    return buf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"]},"commit2Childs":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}