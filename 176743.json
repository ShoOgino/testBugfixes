{"path":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int,BytesRef).mjava","commits":[{"id":"0935c850ea562932997b72c69d93e345f21d7f45","date":1344711506,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, int startOffset, int endOffset, BytesRef payload) throws IOException {\n    assert positions || offsets;\n    \n    if (positions) {\n      write(POSITION);\n      write(Integer.toString(position));\n      newLine();\n      \n      if (payloads) {\n        write(PAYLOAD);\n        if (payload != null) {\n          assert payload.length > 0;\n          write(payload);\n        }\n        newLine();\n      }\n    }\n    \n    if (offsets) {\n      write(STARTOFFSET);\n      write(Integer.toString(startOffset));\n      newLine();\n      \n      write(ENDOFFSET);\n      write(Integer.toString(endOffset));\n      newLine();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, int startOffset, int endOffset) throws IOException {\n    assert positions || offsets;\n    \n    if (positions) {\n      write(POSITION);\n      write(Integer.toString(position));\n      newLine();\n    }\n    \n    if (offsets) {\n      write(STARTOFFSET);\n      write(Integer.toString(startOffset));\n      newLine();\n      \n      write(ENDOFFSET);\n      write(Integer.toString(endOffset));\n      newLine();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, int startOffset, int endOffset, BytesRef payload) throws IOException {\n    assert positions || offsets;\n    \n    if (positions) {\n      write(POSITION);\n      write(Integer.toString(position));\n      newLine();\n      \n      if (payloads) {\n        write(PAYLOAD);\n        if (payload != null) {\n          assert payload.length > 0;\n          write(payload);\n        }\n        newLine();\n      }\n    }\n    \n    if (offsets) {\n      write(STARTOFFSET);\n      write(Integer.toString(startOffset));\n      newLine();\n      \n      write(ENDOFFSET);\n      write(Integer.toString(endOffset));\n      newLine();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, int startOffset, int endOffset) throws IOException {\n    assert positions || offsets;\n    \n    if (positions) {\n      write(POSITION);\n      write(Integer.toString(position));\n      newLine();\n    }\n    \n    if (offsets) {\n      write(STARTOFFSET);\n      write(Integer.toString(startOffset));\n      newLine();\n      \n      write(ENDOFFSET);\n      write(Integer.toString(endOffset));\n      newLine();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, int startOffset, int endOffset, BytesRef payload) throws IOException {\n    assert positions || offsets;\n    \n    if (positions) {\n      write(POSITION);\n      write(Integer.toString(position));\n      newLine();\n      \n      if (payloads) {\n        write(PAYLOAD);\n        if (payload != null) {\n          assert payload.length > 0;\n          write(payload);\n        }\n        newLine();\n      }\n    }\n    \n    if (offsets) {\n      write(STARTOFFSET);\n      write(Integer.toString(startOffset));\n      newLine();\n      \n      write(ENDOFFSET);\n      write(Integer.toString(endOffset));\n      newLine();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, int startOffset, int endOffset) throws IOException {\n    assert positions || offsets;\n    \n    if (positions) {\n      write(POSITION);\n      write(Integer.toString(position));\n      newLine();\n    }\n    \n    if (offsets) {\n      write(STARTOFFSET);\n      write(Integer.toString(startOffset));\n      newLine();\n      \n      write(ENDOFFSET);\n      write(Integer.toString(endOffset));\n      newLine();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int,BytesRef).mjava","sourceNew":"  @Override\n  public void addPosition(int position, int startOffset, int endOffset, BytesRef payload) throws IOException {\n    assert positions || offsets;\n    \n    if (positions) {\n      write(POSITION);\n      write(Integer.toString(position));\n      newLine();\n      \n      if (payloads) {\n        write(PAYLOAD);\n        if (payload != null) {\n          assert payload.length > 0;\n          write(payload);\n        }\n        newLine();\n      }\n    }\n    \n    if (offsets) {\n      write(STARTOFFSET);\n      write(Integer.toString(startOffset));\n      newLine();\n      \n      write(ENDOFFSET);\n      write(Integer.toString(endOffset));\n      newLine();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, int startOffset, int endOffset, BytesRef payload) throws IOException {\n    assert positions || offsets;\n    \n    if (positions) {\n      write(POSITION);\n      write(Integer.toString(position));\n      newLine();\n      \n      if (payloads) {\n        write(PAYLOAD);\n        if (payload != null) {\n          assert payload.length > 0;\n          write(payload);\n        }\n        newLine();\n      }\n    }\n    \n    if (offsets) {\n      write(STARTOFFSET);\n      write(Integer.toString(startOffset));\n      newLine();\n      \n      write(ENDOFFSET);\n      write(Integer.toString(endOffset));\n      newLine();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0935c850ea562932997b72c69d93e345f21d7f45"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["0935c850ea562932997b72c69d93e345f21d7f45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0935c850ea562932997b72c69d93e345f21d7f45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0935c850ea562932997b72c69d93e345f21d7f45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","0935c850ea562932997b72c69d93e345f21d7f45","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"0935c850ea562932997b72c69d93e345f21d7f45":["c7869f64c874ebf7f317d22c00baf2b6857797a6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}