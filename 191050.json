{"path":"lucene/core/src/java/org/apache/lucene/util/LongsRef#longsEquals(LongsRef).mjava","commits":[{"id":"55110eb60c5105294fc2ae7912d82b750865aa58","date":1341389822,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#longsEquals(LongsRef).mjava","pathOld":"/dev/null","sourceNew":"  public boolean longsEquals(LongsRef other) {\n    if (length == other.length) {\n      int otherUpto = other.offset;\n      final long[] otherInts = other.longs;\n      final long end = offset + length;\n      for(int upto=offset; upto<end; upto++,otherUpto++) {\n        if (longs[upto] != otherInts[otherUpto]) {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#longsEquals(LongsRef).mjava","pathOld":"/dev/null","sourceNew":"  public boolean longsEquals(LongsRef other) {\n    if (length == other.length) {\n      int otherUpto = other.offset;\n      final long[] otherInts = other.longs;\n      final long end = offset + length;\n      for(int upto=offset; upto<end; upto++,otherUpto++) {\n        if (longs[upto] != otherInts[otherUpto]) {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"456d7e7092cb043c740b4674301660ee8abc26fe","date":1517645879,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#longsEquals(LongsRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LongsRef#longsEquals(LongsRef).mjava","sourceNew":"  public boolean longsEquals(LongsRef other) {\n    return FutureArrays.equals(this.longs, this.offset, this.offset + this.length, \n                               other.longs, other.offset, other.offset + other.length);\n  }\n\n","sourceOld":"  public boolean longsEquals(LongsRef other) {\n    if (length == other.length) {\n      int otherUpto = other.offset;\n      final long[] otherInts = other.longs;\n      final long end = offset + length;\n      for(int upto=offset; upto<end; upto++,otherUpto++) {\n        if (longs[upto] != otherInts[otherUpto]) {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LongsRef#longsEquals(LongsRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LongsRef#longsEquals(LongsRef).mjava","sourceNew":"  public boolean longsEquals(LongsRef other) {\n    return Arrays.equals(this.longs, this.offset, this.offset + this.length, \n                               other.longs, other.offset, other.offset + other.length);\n  }\n\n","sourceOld":"  public boolean longsEquals(LongsRef other) {\n    return FutureArrays.equals(this.longs, this.offset, this.offset + this.length, \n                               other.longs, other.offset, other.offset + other.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["456d7e7092cb043c740b4674301660ee8abc26fe"],"456d7e7092cb043c740b4674301660ee8abc26fe":["55110eb60c5105294fc2ae7912d82b750865aa58"],"55110eb60c5105294fc2ae7912d82b750865aa58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","55110eb60c5105294fc2ae7912d82b750865aa58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b88a121b875f9ae2ac50f85cf46dcb680f126357"]},"commit2Childs":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"456d7e7092cb043c740b4674301660ee8abc26fe":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"55110eb60c5105294fc2ae7912d82b750865aa58":["456d7e7092cb043c740b4674301660ee8abc26fe","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55110eb60c5105294fc2ae7912d82b750865aa58","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}