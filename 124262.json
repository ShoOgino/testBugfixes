{"path":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#startTerm(BytesRef,int).mjava","commits":[{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm.bytes, lastTerm.offset, lastTerm.length, \n                                                    term.bytes, term.offset, term.length);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copy(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6e919043fa85ee891123768dd655a98edbbf63c","date":1322225413,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#startTerm(BytesRef,int).mjava","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm.bytes, lastTerm.offset, lastTerm.length, \n                                                    term.bytes, term.offset, term.length);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm.bytes, lastTerm.offset, lastTerm.length, \n                                                    term.bytes, term.offset, term.length);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copy(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61f30939a6ca0891c7b0c0f34aa43800bd4c9a15","date":1322511317,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#startTerm(BytesRef,int).mjava","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm.bytes, lastTerm.offset, lastTerm.length, \n                                                    term.bytes, term.offset, term.length);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cfd7f00f3dbc4c50d336540f063493fc0f7d830f","date":1322850565,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#startTerm(BytesRef,int).mjava","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["61f30939a6ca0891c7b0c0f34aa43800bd4c9a15"],"61f30939a6ca0891c7b0c0f34aa43800bd4c9a15":["e6e919043fa85ee891123768dd655a98edbbf63c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6e919043fa85ee891123768dd655a98edbbf63c":["3cc749c053615f5871f3b95715fe292f34e70a53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"]},"commit2Childs":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"61f30939a6ca0891c7b0c0f34aa43800bd4c9a15":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cc749c053615f5871f3b95715fe292f34e70a53"],"3cc749c053615f5871f3b95715fe292f34e70a53":["e6e919043fa85ee891123768dd655a98edbbf63c"],"e6e919043fa85ee891123768dd655a98edbbf63c":["61f30939a6ca0891c7b0c0f34aa43800bd4c9a15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}