{"path":"src/java/org/apache/solr/response/RawResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"10b17ff7ad534c3b34a34944d80a87d217011d9c","date":1263262796,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/response/RawResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/request/RawResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException \n  {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      IOUtils.copy( content.getReader(), writer );\n    }\n    else {\n      getBaseWriter( request ).write( writer, request, response );\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException \n  {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      IOUtils.copy( content.getReader(), writer );\n    }\n    else {\n      getBaseWriter( request ).write( writer, request, response );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbf8bf15546966c2999be987d32191fc1ef495ef","date":1265300798,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/response/RawResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/response/RawResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException \n  {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      Reader reader = content.getReader();\n      try {\n        IOUtils.copy( reader, writer );\n      } finally {\n        reader.close();\n      }\n    }\n    else {\n      getBaseWriter( request ).write( writer, request, response );\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException \n  {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      IOUtils.copy( content.getReader(), writer );\n    }\n    else {\n      getBaseWriter( request ).write( writer, request, response );\n    }\n  }\n\n","bugFix":["5a2d40b82948a6502dc0ccb21bc4adc2a8a868a8"],"bugIntro":["9272dcea19192a5fb261980a4737677abfcabab3","9272dcea19192a5fb261980a4737677abfcabab3","9272dcea19192a5fb261980a4737677abfcabab3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/RawResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/response/RawResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException \n  {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      Reader reader = content.getReader();\n      try {\n        IOUtils.copy( reader, writer );\n      } finally {\n        reader.close();\n      }\n    }\n    else {\n      getBaseWriter( request ).write( writer, request, response );\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException \n  {\n    Object obj = response.getValues().get( CONTENT );\n    if( obj != null && (obj instanceof ContentStream ) ) {\n      // copy the contents to the writer...\n      ContentStream content = (ContentStream)obj;\n      Reader reader = content.getReader();\n      try {\n        IOUtils.copy( reader, writer );\n      } finally {\n        reader.close();\n      }\n    }\n    else {\n      getBaseWriter( request ).write( writer, request, response );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"10b17ff7ad534c3b34a34944d80a87d217011d9c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["dbf8bf15546966c2999be987d32191fc1ef495ef"],"dbf8bf15546966c2999be987d32191fc1ef495ef":["10b17ff7ad534c3b34a34944d80a87d217011d9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["10b17ff7ad534c3b34a34944d80a87d217011d9c"],"10b17ff7ad534c3b34a34944d80a87d217011d9c":["dbf8bf15546966c2999be987d32191fc1ef495ef"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"dbf8bf15546966c2999be987d32191fc1ef495ef":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}