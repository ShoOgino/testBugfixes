{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(AtomicReaderContext,int[],int[]).mjava","commits":[{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(AtomicReaderContext,int[],int[]).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(ReaderContext,int[],int[]).mjava","sourceNew":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(AtomicReaderContext info, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(info, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(info));\n        }\n        return result;\n    }\n\n","sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(ReaderContext info, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(info, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(info));\n        }\n        return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(AtomicReaderContext,int[],int[]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(AtomicReaderContext info, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(info, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(info));\n        }\n        return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(AtomicReaderContext,int[],int[]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(AtomicReaderContext info, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(info, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(info));\n        }\n        return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e141595402370bee958745de8b1c9de1fa182581","date":1310547892,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(AtomicReaderContext,int[],int[]).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(AtomicReaderContext,int[],int[]).mjava","sourceNew":"  /**\n   * Delegates to each filter in the chain.\n   *\n   * @param context AtomicReaderContext\n   * @param logic Logical operation\n   * @return DocIdSet\n   */\n  private DocIdSet getDocIdSet(AtomicReaderContext context, int[] logic, int[] index)\n      throws IOException {\n    if (logic.length != chain.length) {\n      throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n    }\n\n    OpenBitSetDISI result = initialResult(context, logic[0], index);\n    for (; index[0] < chain.length; index[0]++) {\n      doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(context));\n    }\n    return result;\n  }\n\n","sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(AtomicReaderContext info, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(info, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(info));\n        }\n        return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f9f2355d68aab1348539f7a1603279405e566a4","date":1313634992,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/ChainedFilter#getDocIdSet(AtomicReaderContext,int[],int[]).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(AtomicReaderContext,int[],int[]).mjava","sourceNew":"  /**\n   * Delegates to each filter in the chain.\n   *\n   * @param context AtomicReaderContext\n   * @param logic Logical operation\n   * @return DocIdSet\n   */\n  private DocIdSet getDocIdSet(AtomicReaderContext context, int[] logic, int[] index)\n      throws IOException {\n    if (logic.length != chain.length) {\n      throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n    }\n\n    OpenBitSetDISI result = initialResult(context, logic[0], index);\n    for (; index[0] < chain.length; index[0]++) {\n      doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(context));\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Delegates to each filter in the chain.\n   *\n   * @param context AtomicReaderContext\n   * @param logic Logical operation\n   * @return DocIdSet\n   */\n  private DocIdSet getDocIdSet(AtomicReaderContext context, int[] logic, int[] index)\n      throws IOException {\n    if (logic.length != chain.length) {\n      throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n    }\n\n    OpenBitSetDISI result = initialResult(context, logic[0], index);\n    for (; index[0] < chain.length; index[0]++) {\n      doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(context));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"e141595402370bee958745de8b1c9de1fa182581":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f9f2355d68aab1348539f7a1603279405e566a4"],"1f9f2355d68aab1348539f7a1603279405e566a4":["e141595402370bee958745de8b1c9de1fa182581"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","e141595402370bee958745de8b1c9de1fa182581"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"e141595402370bee958745de8b1c9de1fa182581":["1f9f2355d68aab1348539f7a1603279405e566a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"1f9f2355d68aab1348539f7a1603279405e566a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}