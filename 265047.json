{"path":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddDelete().mjava","commits":[{"id":"b060cdfaa7a8efca66df2f689cb6abdaca1ca06b","date":1183344285,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddDelete().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\" );\n    }\n    String id = (String) doc[0].getFieldValue( \"id\" );\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getFieldValue( \"id\" ), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlUpdateRequest up = new DirectXmlUpdateRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c8f628082d9af75235881d7a98cbf3eda663dd62","c8f628082d9af75235881d7a98cbf3eda663dd62","c8f628082d9af75235881d7a98cbf3eda663dd62"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ebb24ab555aab7c4dd5d2264c06a4f19fb217913","date":1183353562,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddDelete().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddDelete().mjava","sourceNew":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", null );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlUpdateRequest up = new DirectXmlUpdateRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\" );\n    }\n    String id = (String) doc[0].getFieldValue( \"id\" );\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getFieldValue( \"id\" ), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlUpdateRequest up = new DirectXmlUpdateRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":["c8f628082d9af75235881d7a98cbf3eda663dd62","c8f628082d9af75235881d7a98cbf3eda663dd62","c8f628082d9af75235881d7a98cbf3eda663dd62"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9a51897f565610bcb8cd260561430de517d3de46","date":1183391823,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddDelete().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddDelete().mjava","sourceNew":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlUpdateRequest up = new DirectXmlUpdateRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", null );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlUpdateRequest up = new DirectXmlUpdateRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b0f4e27ea5f3ae20d9c37b7f233610c286c5739f","date":1190223065,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddDelete().mjava","sourceNew":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlUpdateRequest up = new DirectXmlUpdateRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlUpdateRequest up = new DirectXmlUpdateRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ebb24ab555aab7c4dd5d2264c06a4f19fb217913":["b060cdfaa7a8efca66df2f689cb6abdaca1ca06b"],"b060cdfaa7a8efca66df2f689cb6abdaca1ca06b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"9a51897f565610bcb8cd260561430de517d3de46":["ebb24ab555aab7c4dd5d2264c06a4f19fb217913"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"b0f4e27ea5f3ae20d9c37b7f233610c286c5739f":["9a51897f565610bcb8cd260561430de517d3de46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ebb24ab555aab7c4dd5d2264c06a4f19fb217913":["9a51897f565610bcb8cd260561430de517d3de46"],"b060cdfaa7a8efca66df2f689cb6abdaca1ca06b":["ebb24ab555aab7c4dd5d2264c06a4f19fb217913"],"9a51897f565610bcb8cd260561430de517d3de46":["b0f4e27ea5f3ae20d9c37b7f233610c286c5739f"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["b060cdfaa7a8efca66df2f689cb6abdaca1ca06b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b0f4e27ea5f3ae20d9c37b7f233610c286c5739f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b0f4e27ea5f3ae20d9c37b7f233610c286c5739f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}