{"path":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","commits":[{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","date":1280297653,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new MockRAMDirectory();\n    // two auxiliary directories\n    Directory aux = new MockRAMDirectory();\n    Directory aux2 = new MockRAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new MockRAMDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new MockRAMDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory(random);\n    // two auxiliary directories\n    Directory aux = newDirectory(random);\n    Directory aux2 = newDirectory(random);\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory(random);\n    writer = newWriter(aux3, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory(random);\n    writer = newWriter(aux4, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new MockRAMDirectory();\n    // two auxiliary directories\n    Directory aux = new MockRAMDirectory();\n    Directory aux2 = new MockRAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new MockRAMDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new MockRAMDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory(random);\n    // two auxiliary directories\n    Directory aux = newDirectory(random);\n    Directory aux2 = newDirectory(random);\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory(random);\n    writer = newWriter(aux3, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory(random);\n    writer = newWriter(aux4, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f","date":1306408552,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 50 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 50 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 50 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 50 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 50 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 50 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now fully merge it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.forceMerge(1);\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 50 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 50 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now fully merge it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.forceMerge(1);\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // two auxiliary directories\n    Directory aux = newDirectory();\n    Directory aux2 = newDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer(random))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(\n        aux,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setOpenMode(OpenMode.CREATE).\n            setMergePolicy(newLogMergePolicy(false))\n    );\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    // add 50 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(aux, aux2);\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = newDirectory();\n    writer = newWriter(aux3, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(aux3);\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now fully merge it.\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    writer.forceMerge(1);\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = newDirectory();\n    writer = newWriter(aux4, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(aux4);\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n    dir.close();\n    aux.close();\n    aux2.close();\n    aux3.close();\n    aux4.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"06584e6e98d592b34e1329b384182f368d2025e8":["32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["06584e6e98d592b34e1329b384182f368d2025e8"],"962d04139994fce5193143ef35615499a9a96d78":["e79a6d080bdd5b2a8f56342cf571b5476de04180","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a3776dccca01c11e7046323cfad46a3b4a471233":["b1add9ddc0005b07550d4350720aac22dc9886b3","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b21422ff1d1d56499dec481f193b402e5e8def5b":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"3bb13258feba31ab676502787ab2e1779f129b7a":["1f653cfcf159baeaafe5d01682a911e95bba4012","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["135621f3a0670a9394eb563224a3b76cc4dddc0f","32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f"]},"commit2Childs":{"32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f":["06584e6e98d592b34e1329b384182f368d2025e8","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"962d04139994fce5193143ef35615499a9a96d78":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["e79a6d080bdd5b2a8f56342cf571b5476de04180","f2c5f0cb44df114db4228c8f77861714b5cabaea","29ef99d61cda9641b6250bf9567329a6e65f901d","a3776dccca01c11e7046323cfad46a3b4a471233"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["962d04139994fce5193143ef35615499a9a96d78"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","b21422ff1d1d56499dec481f193b402e5e8def5b"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["b1add9ddc0005b07550d4350720aac22dc9886b3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["962d04139994fce5193143ef35615499a9a96d78","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}