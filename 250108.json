{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyPointFormat.CrankyPointReader#intersect(String,IntersectVisitor).mjava","commits":[{"id":"9e8968ed299aaa19ebdec27e19d042b61c7c9a0a","date":1454016267,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyPointFormat.CrankyPointReader#intersect(String,IntersectVisitor).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      if (random.nextInt(100) == 0) {\n        throw new IOException(\"Fake IOException\");\n      }\n      delegate.intersect(fieldName, visitor);\n      if (random.nextInt(100) == 0) {\n        throw new IOException(\"Fake IOException\");\n      }  \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d15e34266d75e4e8b95da046cd0afc812367b38","date":1454246129,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyPointFormat.CrankyPointReader#intersect(String,IntersectVisitor).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      if (random.nextInt(100) == 0) {\n        throw new IOException(\"Fake IOException\");\n      }\n      delegate.intersect(fieldName, visitor);\n      if (random.nextInt(100) == 0) {\n        throw new IOException(\"Fake IOException\");\n      }  \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyPointFormat.CrankyPointReader#intersect(String,IntersectVisitor).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      if (random.nextInt(100) == 0) {\n        throw new IOException(\"Fake IOException\");\n      }\n      delegate.intersect(fieldName, visitor);\n      if (random.nextInt(100) == 0) {\n        throw new IOException(\"Fake IOException\");\n      }  \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyPointsFormat.CrankyPointsReader#intersect(String,IntersectVisitor).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/cranky/CrankyPointFormat.CrankyPointReader#intersect(String,IntersectVisitor).mjava","sourceNew":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      if (random.nextInt(100) == 0) {\n        throw new IOException(\"Fake IOException\");\n      }\n      delegate.intersect(fieldName, visitor);\n      if (random.nextInt(100) == 0) {\n        throw new IOException(\"Fake IOException\");\n      }  \n    }\n\n","sourceOld":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      if (random.nextInt(100) == 0) {\n        throw new IOException(\"Fake IOException\");\n      }\n      delegate.intersect(fieldName, visitor);\n      if (random.nextInt(100) == 0) {\n        throw new IOException(\"Fake IOException\");\n      }  \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8d15e34266d75e4e8b95da046cd0afc812367b38"],"9e8968ed299aaa19ebdec27e19d042b61c7c9a0a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e8968ed299aaa19ebdec27e19d042b61c7c9a0a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"]},"commit2Childs":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","9e8968ed299aaa19ebdec27e19d042b61c7c9a0a","8d15e34266d75e4e8b95da046cd0afc812367b38"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"9e8968ed299aaa19ebdec27e19d042b61c7c9a0a":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["4522ffca5a1f420c6a02198c9332d7c596a30ca5","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}