{"path":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","commits":[{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf","date":1323050351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf":["e230a61047bc041516c811baa08a7174d6f8322a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"e230a61047bc041516c811baa08a7174d6f8322a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["e230a61047bc041516c811baa08a7174d6f8322a","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["e230a61047bc041516c811baa08a7174d6f8322a","9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e230a61047bc041516c811baa08a7174d6f8322a":["9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","3615ce4a1f785ae1b779244de52c6a7d99227e60","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}