{"path":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","commits":[{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"/dev/null","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 4;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 30)\n                        kind = 30;\n                     jjCheckNAddTwoStates(1, 2);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(1);\n                  break;\n               case 1:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 30)\n                     kind = 30;\n                  jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 2:\n                  if (curChar == 46)\n                     jjCheckNAdd(3);\n                  break;\n               case 3:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 30)\n                     kind = 30;\n                  jjCheckNAdd(3);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cec3ed25c566726d505d8abdb27e59a3258d49d1","date":1354138182,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 4;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 29)\n                        kind = 29;\n                     jjCheckNAddTwoStates(1, 2);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(1);\n                  break;\n               case 1:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 2:\n                  if (curChar == 46)\n                     jjCheckNAdd(3);\n                  break;\n               case 3:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAdd(3);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 4;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 30)\n                        kind = 30;\n                     jjCheckNAddTwoStates(1, 2);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(1);\n                  break;\n               case 1:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 30)\n                     kind = 30;\n                  jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 2:\n                  if (curChar == 46)\n                     jjCheckNAdd(3);\n                  break;\n               case 3:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 30)\n                     kind = 30;\n                  jjCheckNAdd(3);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"/dev/null","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 4;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 29)\n                        kind = 29;\n                     jjCheckNAddTwoStates(1, 2);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(1);\n                  break;\n               case 1:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 2:\n                  if (curChar == 46)\n                     jjCheckNAdd(3);\n                  break;\n               case 3:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAdd(3);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ef9afbd23e483ed1a80ed787f1640b353275980","date":1426166980,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 29)\n                        kind = 29;\n                     jjCheckNAddTwoStates(2, 3);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(2);\n                  else if (curChar == 61)\n                     jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 1:\n                  if (curChar == 45)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 46)\n                     jjCheckNAdd(4);\n                  break;\n               case 4:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 4;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 29)\n                        kind = 29;\n                     jjCheckNAddTwoStates(1, 2);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(1);\n                  break;\n               case 1:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 2:\n                  if (curChar == 46)\n                     jjCheckNAdd(3);\n                  break;\n               case 3:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAdd(3);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 29)\n                        kind = 29;\n                     jjCheckNAddTwoStates(2, 3);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(2);\n                  else if (curChar == 61)\n                     jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 1:\n                  if (curChar == 45)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 46)\n                     jjCheckNAdd(4);\n                  break;\n               case 4:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 4;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 29)\n                        kind = 29;\n                     jjCheckNAddTwoStates(1, 2);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(1);\n                  break;\n               case 1:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 2:\n                  if (curChar == 46)\n                     jjCheckNAdd(3);\n                  break;\n               case 3:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAdd(3);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57e3101a41ed818f22eb79567303e8523da9f00f","date":1438797043,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 33)\n                        kind = 33;\n                     jjCheckNAddTwoStates(2, 3);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(2);\n                  else if (curChar == 61)\n                     jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 1:\n                  if (curChar == 45)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 33)\n                     kind = 33;\n                  jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 46)\n                     jjCheckNAdd(4);\n                  break;\n               case 4:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 33)\n                     kind = 33;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 29)\n                        kind = 29;\n                     jjCheckNAddTwoStates(2, 3);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(2);\n                  else if (curChar == 61)\n                     jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 1:\n                  if (curChar == 45)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 46)\n                     jjCheckNAdd(4);\n                  break;\n               case 4:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 29)\n                     kind = 29;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c","date":1438964081,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 34)\n                        kind = 34;\n                     jjCheckNAddTwoStates(2, 3);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(2);\n                  else if (curChar == 61)\n                     jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 1:\n                  if (curChar == 45)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 34)\n                     kind = 34;\n                  jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 46)\n                     jjCheckNAdd(4);\n                  break;\n               case 4:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 34)\n                     kind = 34;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 33)\n                        kind = 33;\n                     jjCheckNAddTwoStates(2, 3);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(2);\n                  else if (curChar == 61)\n                     jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 1:\n                  if (curChar == 45)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 33)\n                     kind = 33;\n                  jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 46)\n                     jjCheckNAdd(4);\n                  break;\n               case 4:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 33)\n                     kind = 33;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"246882bcb7625b4ec0d71abb0d4917d6e34e0ac6","date":1580825798,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 34)\n                        kind = 34;\n                     jjCheckNAddTwoStates(2, 3);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(2);\n                  else if (curChar == 61)\n                     jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 1:\n                  if (curChar == 45)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 34)\n                     kind = 34;\n                  jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 46)\n                     jjCheckNAdd(4);\n                  break;\n               case 4:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 34)\n                     kind = 34;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = curChar >> 8;\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 34)\n                        kind = 34;\n                     jjCheckNAddTwoStates(2, 3);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(2);\n                  else if (curChar == 61)\n                     jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 1:\n                  if (curChar == 45)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 34)\n                     kind = 34;\n                  jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 46)\n                     jjCheckNAdd(4);\n                  break;\n               case 4:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 34)\n                     kind = 34;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4bf8c857cdf9b9be903cae84ef15985ad090a05","date":1600342158,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParserTokenManager#jjMoveNfa_0(int,int).mjava","sourceNew":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 34)\n                        kind = 34;\n                     { jjCheckNAddTwoStates(2, 3); }\n                  }\n                  else if (curChar == 45)\n                     { jjCheckNAdd(2); }\n                  else if (curChar == 61)\n                     { jjCheckNAddTwoStates(1, 2); }\n                  break;\n               case 1:\n                  if (curChar == 45)\n                     { jjCheckNAdd(2); }\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 34)\n                     kind = 34;\n                  { jjCheckNAddTwoStates(2, 3); }\n                  break;\n               case 3:\n                  if (curChar == 46)\n                     { jjCheckNAdd(4); }\n                  break;\n               case 4:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 34)\n                     kind = 34;\n                  { jjCheckNAdd(4); }\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_0(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0x3ff000000000000L & l) != 0L)\n                  {\n                     if (kind > 34)\n                        kind = 34;\n                     jjCheckNAddTwoStates(2, 3);\n                  }\n                  else if (curChar == 45)\n                     jjCheckNAdd(2);\n                  else if (curChar == 61)\n                     jjCheckNAddTwoStates(1, 2);\n                  break;\n               case 1:\n                  if (curChar == 45)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 34)\n                     kind = 34;\n                  jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 46)\n                     jjCheckNAdd(4);\n                  break;\n               case 4:\n                  if ((0x3ff000000000000L & l) == 0L)\n                     break;\n                  if (kind > 34)\n                     kind = 34;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = curChar >> 8;\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c":["57e3101a41ed818f22eb79567303e8523da9f00f"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["cec3ed25c566726d505d8abdb27e59a3258d49d1","7ef9afbd23e483ed1a80ed787f1640b353275980"],"3cdb67100dc016748799a77218aa409478372d79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cec3ed25c566726d505d8abdb27e59a3258d49d1":["3cdb67100dc016748799a77218aa409478372d79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cec3ed25c566726d505d8abdb27e59a3258d49d1"],"57e3101a41ed818f22eb79567303e8523da9f00f":["7ef9afbd23e483ed1a80ed787f1640b353275980"],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["246882bcb7625b4ec0d71abb0d4917d6e34e0ac6"],"246882bcb7625b4ec0d71abb0d4917d6e34e0ac6":["b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c"],"7ef9afbd23e483ed1a80ed787f1640b353275980":["cec3ed25c566726d505d8abdb27e59a3258d49d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"]},"commit2Childs":{"b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c":["246882bcb7625b4ec0d71abb0d4917d6e34e0ac6"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"3cdb67100dc016748799a77218aa409478372d79":["cec3ed25c566726d505d8abdb27e59a3258d49d1"],"cec3ed25c566726d505d8abdb27e59a3258d49d1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","407687e67faf6e1f02a211ca078d8e3eed631027","7ef9afbd23e483ed1a80ed787f1640b353275980"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"57e3101a41ed818f22eb79567303e8523da9f00f":["b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c"],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7ef9afbd23e483ed1a80ed787f1640b353275980":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","57e3101a41ed818f22eb79567303e8523da9f00f"],"246882bcb7625b4ec0d71abb0d4917d6e34e0ac6":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}