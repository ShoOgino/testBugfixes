{"path":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","sourceNew":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for(int i = 0; i < scoringQueries.length; i++) {\n      sb.append(\", \").append(scoringQueries[i].toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString() + ToStringUtils.boost(getBoost());\n  }\n\n","sourceOld":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for(int i = 0; i < scoringQueries.length; i++) {\n      sb.append(\", \").append(scoringQueries[i].toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString() + ToStringUtils.boost(getBoost());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed50c8be6f41a006d8f93268765de9ad91908419","date":1340353054,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","sourceNew":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString() + ToStringUtils.boost(getBoost());\n  }\n\n","sourceOld":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for(int i = 0; i < scoringQueries.length; i++) {\n      sb.append(\", \").append(scoringQueries[i].toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString() + ToStringUtils.boost(getBoost());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","sourceNew":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString() + ToStringUtils.boost(getBoost());\n  }\n\n","sourceOld":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for(int i = 0; i < scoringQueries.length; i++) {\n      sb.append(\", \").append(scoringQueries[i].toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString() + ToStringUtils.boost(getBoost());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","sourceNew":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString() + ToStringUtils.boost(getBoost());\n  }\n\n","sourceOld":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString() + ToStringUtils.boost(getBoost());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","sourceNew":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString() + ToStringUtils.boost(getBoost());\n  }\n\n","sourceOld":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString() + ToStringUtils.boost(getBoost());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","sourceNew":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString();\n  }\n\n","sourceOld":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString() + ToStringUtils.boost(getBoost());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","sourceNew":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    return sb.toString();\n  }\n\n","sourceOld":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","sourceNew":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    return sb.toString();\n  }\n\n","sourceOld":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    sb.append(strict?\" STRICT\" : \"\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#toString(String).mjava","sourceNew":null,"sourceOld":"  /* (non-Javadoc) @see org.apache.lucene.search.Query#toString(java.lang.String) */\n  @Override\n  public String toString(String field) {\n    StringBuilder sb = new StringBuilder(name()).append(\"(\");\n    sb.append(subQuery.toString(field));\n    for (Query scoringQuery : scoringQueries) {\n      sb.append(\", \").append(scoringQuery.toString(field));\n    }\n    sb.append(\")\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ed50c8be6f41a006d8f93268765de9ad91908419":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a82662cae660e76ded4de1e9b451633e523d83e1":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ed50c8be6f41a006d8f93268765de9ad91908419"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["ed50c8be6f41a006d8f93268765de9ad91908419"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ed50c8be6f41a006d8f93268765de9ad91908419"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2dfdf766e55e943d942055d7de53c7ad6bc45283","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ed50c8be6f41a006d8f93268765de9ad91908419","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"ed50c8be6f41a006d8f93268765de9ad91908419":["fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["a82662cae660e76ded4de1e9b451633e523d83e1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}