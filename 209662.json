{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerProcessor#checkExclusivity(OverseerMessageHandler,ZkNodeProps,String).mjava","commits":[{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerProcessor#checkExclusivity(OverseerMessageHandler,ZkNodeProps,String).mjava","pathOld":"/dev/null","sourceNew":"  protected boolean checkExclusivity(OverseerMessageHandler messageHandler, ZkNodeProps message, String id)\n      throws KeeperException, InterruptedException {\n    String taskKey = messageHandler.getTaskKey(message);\n\n    if(taskKey == null)\n      return true;\n\n    OverseerMessageHandler.ExclusiveMarking marking = messageHandler.checkExclusiveMarking(taskKey, message);\n    switch (marking) {\n      case NOTDETERMINED:\n        break;\n      case EXCLUSIVE:\n        return true;\n      case NONEXCLUSIVE:\n        return false;\n      default:\n        throw new IllegalArgumentException(\"Undefined marking: \" + marking);\n    }\n\n    if(runningZKTasks.contains(id))\n      return false;\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskProcessor#checkExclusivity(OverseerMessageHandler,ZkNodeProps,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerProcessor#checkExclusivity(OverseerMessageHandler,ZkNodeProps,String).mjava","sourceNew":"  protected boolean checkExclusivity(OverseerMessageHandler messageHandler, ZkNodeProps message, String id)\n      throws KeeperException, InterruptedException {\n    String taskKey = messageHandler.getTaskKey(message);\n\n    if(taskKey == null)\n      return true;\n\n    OverseerMessageHandler.ExclusiveMarking marking = messageHandler.checkExclusiveMarking(taskKey, message);\n    switch (marking) {\n      case NOTDETERMINED:\n        break;\n      case EXCLUSIVE:\n        return true;\n      case NONEXCLUSIVE:\n        return false;\n      default:\n        throw new IllegalArgumentException(\"Undefined marking: \" + marking);\n    }\n\n    if(runningZKTasks.contains(id))\n      return false;\n\n    return true;\n  }\n\n","sourceOld":"  protected boolean checkExclusivity(OverseerMessageHandler messageHandler, ZkNodeProps message, String id)\n      throws KeeperException, InterruptedException {\n    String taskKey = messageHandler.getTaskKey(message);\n\n    if(taskKey == null)\n      return true;\n\n    OverseerMessageHandler.ExclusiveMarking marking = messageHandler.checkExclusiveMarking(taskKey, message);\n    switch (marking) {\n      case NOTDETERMINED:\n        break;\n      case EXCLUSIVE:\n        return true;\n      case NONEXCLUSIVE:\n        return false;\n      default:\n        throw new IllegalArgumentException(\"Undefined marking: \" + marking);\n    }\n\n    if(runningZKTasks.contains(id))\n      return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2209af2c265d2258ec4b29c8cc78622d36994a15"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}