{"path":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/PreFlexRWSegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","commits":[{"id":"e92a321a2612261e1010a4038c8586e30b081552","date":1328456689,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/PreFlexRWSegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWSegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(SegmentInfos.FORMAT_3_1); // write FORMAT\n      // we don't write a codec - this is 3.x\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(SegmentInfos.FORMAT_3_1); // write FORMAT\n      // we don't write a codec - this is 3.x\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWSegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/PreFlexRWSegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(SegmentInfos.FORMAT_3_1); // write FORMAT\n      // we don't write a codec - this is 3.x\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(SegmentInfos.FORMAT_3_1); // write FORMAT\n      // we don't write a codec - this is 3.x\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e92a321a2612261e1010a4038c8586e30b081552"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e92a321a2612261e1010a4038c8586e30b081552":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e92a321a2612261e1010a4038c8586e30b081552"],"e92a321a2612261e1010a4038c8586e30b081552":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}