{"path":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#setupCluster().mjava","commits":[{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    String solrXml = IOUtils.toString(CollectionsAPIDistributedZkTest.class.getResourceAsStream(\"/solr/solr-jmxreporter.xml\"), \"UTF-8\");\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .addConfig(\"conf2\", configset(\"cloud-minimal-jmx\"))\n        .withSolrXml(solrXml)\n        .configure();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    String solrXml = IOUtils.toString(CollectionsAPIDistributedZkTest.class.getResourceAsStream(\"/solr/solr-jmxreporter.xml\"), \"UTF-8\");\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .addConfig(\"conf2\", configset(\"cloud-minimal-jmx\"))\n        .withSolrXml(solrXml)\n        .configure();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    String solrXml = IOUtils.toString(CollectionsAPIDistributedZkTest.class.getResourceAsStream(\"/solr/solr-jmxreporter.xml\"), \"UTF-8\");\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .addConfig(\"conf2\", configset(\"cloud-minimal-jmx\"))\n        .withSolrXml(solrXml)\n        .configure();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    String solrXml = IOUtils.toString(CollectionsAPIDistributedZkTest.class.getResourceAsStream(\"/solr/solr-jmxreporter.xml\"), \"UTF-8\");\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .addConfig(\"conf2\", configset(\"cloud-minimal-jmx\"))\n        .withSolrXml(solrXml)\n        .configure();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    // we don't want this test to have zk timeouts\n    System.setProperty(\"zkClientTimeout\", \"60000\");\n    System.setProperty(\"createCollectionWaitTimeTillActive\", \"5\");\n    TestInjection.randomDelayInCoreCreation = \"true:5\";\n    System.setProperty(\"validateAfterInactivity\", \"200\");\n    \n    String solrXml = IOUtils.toString(CollectionsAPIDistributedZkTest.class.getResourceAsStream(\"/solr/solr-jmxreporter.xml\"), \"UTF-8\");\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .addConfig(\"conf2\", configset(\"cloud-minimal-jmx\"))\n        .withSolrXml(solrXml)\n        .configure();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    String solrXml = IOUtils.toString(CollectionsAPIDistributedZkTest.class.getResourceAsStream(\"/solr/solr-jmxreporter.xml\"), \"UTF-8\");\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .addConfig(\"conf2\", configset(\"cloud-minimal-jmx\"))\n        .withSolrXml(solrXml)\n        .configure();\n  }\n\n","bugFix":["a4efd3fffdd7acd625bb88e455c8097e17f75735"],"bugIntro":["273ff2f5b0b365591fcbe91ea23b5e97027ca60d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"273ff2f5b0b365591fcbe91ea23b5e97027ca60d","date":1551111277,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    // we don't want this test to have zk timeouts\n    System.setProperty(\"zkClientTimeout\", \"60000\");\n    System.setProperty(\"createCollectionWaitTimeTillActive\", \"5\");\n    TestInjection.randomDelayInCoreCreation = \"true:5\";\n    System.setProperty(\"validateAfterInactivity\", \"200\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .addConfig(\"conf2\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    // we don't want this test to have zk timeouts\n    System.setProperty(\"zkClientTimeout\", \"60000\");\n    System.setProperty(\"createCollectionWaitTimeTillActive\", \"5\");\n    TestInjection.randomDelayInCoreCreation = \"true:5\";\n    System.setProperty(\"validateAfterInactivity\", \"200\");\n    \n    String solrXml = IOUtils.toString(CollectionsAPIDistributedZkTest.class.getResourceAsStream(\"/solr/solr-jmxreporter.xml\"), \"UTF-8\");\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .addConfig(\"conf2\", configset(\"cloud-minimal-jmx\"))\n        .withSolrXml(solrXml)\n        .configure();\n  }\n\n","bugFix":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","a4efd3fffdd7acd625bb88e455c8097e17f75735","816521ebaad5add9cb96bb88c577394e2938c40b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91f7dccce9b0ec051304926da532b96944956895","date":1551188806,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    // we don't want this test to have zk timeouts\n    System.setProperty(\"zkClientTimeout\", \"60000\");\n    System.setProperty(\"createCollectionWaitTimeTillActive\", \"5\");\n    TestInjection.randomDelayInCoreCreation = \"true:5\";\n    System.setProperty(\"validateAfterInactivity\", \"200\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .addConfig(\"conf2\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    // we don't want this test to have zk timeouts\n    System.setProperty(\"zkClientTimeout\", \"60000\");\n    System.setProperty(\"createCollectionWaitTimeTillActive\", \"5\");\n    TestInjection.randomDelayInCoreCreation = \"true:5\";\n    System.setProperty(\"validateAfterInactivity\", \"200\");\n    \n    String solrXml = IOUtils.toString(CollectionsAPIDistributedZkTest.class.getResourceAsStream(\"/solr/solr-jmxreporter.xml\"), \"UTF-8\");\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .addConfig(\"conf2\", configset(\"cloud-minimal-jmx\"))\n        .withSolrXml(solrXml)\n        .configure();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373","date":1592489632,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    // we don't want this test to have zk timeouts\n    System.setProperty(\"zkClientTimeout\", \"60000\");\n    System.setProperty(\"createCollectionWaitTimeTillActive\", \"5\");\n    TestInjection.randomDelayInCoreCreation = \"true:5\";\n    System.setProperty(\"validateAfterInactivity\", \"200\");\n    System.setProperty(\"solr.allowPaths\", \"*\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .addConfig(\"conf2\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    // we don't want this test to have zk timeouts\n    System.setProperty(\"zkClientTimeout\", \"60000\");\n    System.setProperty(\"createCollectionWaitTimeTillActive\", \"5\");\n    TestInjection.randomDelayInCoreCreation = \"true:5\";\n    System.setProperty(\"validateAfterInactivity\", \"200\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(getConfigSet()))\n        .addConfig(\"conf2\", configset(getConfigSet()))\n        .withSolrXml(TEST_PATH().resolve(\"solr.xml\"))\n        .configure();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373":["91f7dccce9b0ec051304926da532b96944956895"],"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"91f7dccce9b0ec051304926da532b96944956895":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","273ff2f5b0b365591fcbe91ea23b5e97027ca60d"],"273ff2f5b0b365591fcbe91ea23b5e97027ca60d":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c75c0fad5a9b6633e919ce2e9f96e1f0c496d373"]},"commit2Childs":{"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b94236357aaa22b76c10629851fe4e376e0cea82":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["91f7dccce9b0ec051304926da532b96944956895","273ff2f5b0b365591fcbe91ea23b5e97027ca60d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"91f7dccce9b0ec051304926da532b96944956895":["c75c0fad5a9b6633e919ce2e9f96e1f0c496d373"],"273ff2f5b0b365591fcbe91ea23b5e97027ca60d":["91f7dccce9b0ec051304926da532b96944956895"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}