{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTestCase#tearDown().mjava","commits":[{"id":"fc542884e0501f0801d1bb1680a07323892895da","date":1332517410,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTestCase#tearDown().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTest#tearDown().mjava","sourceNew":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28a3c4e2d35aa13e94434a7c3de075def163b47e","date":1355674116,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTestCase#tearDown().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTestCase#tearDown().mjava","sourceNew":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    System.clearProperty(\"dataDir1\");\n    System.clearProperty(\"dataDir2\");\n    \n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTestCase#tearDown().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTestCase#tearDown().mjava","sourceNew":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    System.clearProperty(\"dataDir1\");\n    System.clearProperty(\"dataDir2\");\n    \n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0383cd09ec14aa4b39144430fd2bf7f866eb5ec","date":1363621241,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTestCase#tearDown().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTestCase#tearDown().mjava","sourceNew":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    System.clearProperty(\"dataDir1\");\n    System.clearProperty(\"dataDir2\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n\n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    System.clearProperty(\"dataDir1\");\n    System.clearProperty(\"dataDir2\");\n    \n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec4f25a2171450fd11fca6ecb7a809922c9ec694","date":1395865816,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTestCase#tearDown().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTestCase#tearDown().mjava","sourceNew":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    System.clearProperty(\"dataDir1\");\n    System.clearProperty(\"dataDir2\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n\n    deleteAdditionalFiles();\n\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    System.clearProperty(\"dataDir1\");\n    System.clearProperty(\"dataDir2\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n\n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["fc542884e0501f0801d1bb1680a07323892895da","28a3c4e2d35aa13e94434a7c3de075def163b47e"],"28a3c4e2d35aa13e94434a7c3de075def163b47e":["fc542884e0501f0801d1bb1680a07323892895da"],"fc542884e0501f0801d1bb1680a07323892895da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ec4f25a2171450fd11fca6ecb7a809922c9ec694":["d0383cd09ec14aa4b39144430fd2bf7f866eb5ec"],"d0383cd09ec14aa4b39144430fd2bf7f866eb5ec":["28a3c4e2d35aa13e94434a7c3de075def163b47e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec4f25a2171450fd11fca6ecb7a809922c9ec694"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"28a3c4e2d35aa13e94434a7c3de075def163b47e":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d0383cd09ec14aa4b39144430fd2bf7f866eb5ec"],"fc542884e0501f0801d1bb1680a07323892895da":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","28a3c4e2d35aa13e94434a7c3de075def163b47e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fc542884e0501f0801d1bb1680a07323892895da"],"ec4f25a2171450fd11fca6ecb7a809922c9ec694":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0383cd09ec14aa4b39144430fd2bf7f866eb5ec":["ec4f25a2171450fd11fca6ecb7a809922c9ec694"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}