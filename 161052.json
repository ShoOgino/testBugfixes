{"path":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#doneWithDirectory(Directory).mjava","commits":[{"id":"4897c5b415f476d84ec970a19c41510645887526","date":1342627582,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#doneWithDirectory(Directory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      if (cacheValue.refCnt == 0) {\n        cacheValue.refCnt++; // this will go back to 0 in close\n        close(directory);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["058801f8673d53a5abac8088204860ec29a40f0d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#doneWithDirectory(Directory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      if (cacheValue.refCnt == 0) {\n        cacheValue.refCnt++; // this will go back to 0 in close\n        close(directory);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#doneWithDirectory(Directory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      if (cacheValue.refCnt == 0) {\n        cacheValue.refCnt++; // this will go back to 0 in close\n        close(directory);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4970a04ee1a5f1a6271f46e29ab0c0740c98f3fc","date":1363935301,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#doneWithDirectory(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#doneWithDirectory(Directory).mjava","sourceNew":"  @Override\n  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      if (cacheValue.refCnt == 0) {\n        closeDirectory(cacheValue);\n        byDirectoryCache.remove(directory);\n        byPathCache.remove(cacheValue.path);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      if (cacheValue.refCnt == 0) {\n        cacheValue.refCnt++; // this will go back to 0 in close\n        close(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["058801f8673d53a5abac8088204860ec29a40f0d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"058801f8673d53a5abac8088204860ec29a40f0d","date":1364178882,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#doneWithDirectory(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#doneWithDirectory(Directory).mjava","sourceNew":"  @Override\n  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      if (cacheValue.refCnt == 0 && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      if (cacheValue.refCnt == 0) {\n        closeDirectory(cacheValue);\n        byDirectoryCache.remove(directory);\n        byPathCache.remove(cacheValue.path);\n      }\n    }\n  }\n\n","bugFix":["4970a04ee1a5f1a6271f46e29ab0c0740c98f3fc","4897c5b415f476d84ec970a19c41510645887526"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25bbd8e76cd29f2d4b262a24d6a42c754706b143","date":1365910543,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#doneWithDirectory(Directory).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory#doneWithDirectory(Directory).mjava","sourceNew":"  @Override\n  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      log.debug(\"Done with dir: {}\", cacheValue);\n      if (cacheValue.refCnt == 0 && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doneWithDirectory(Directory directory) throws IOException {\n    synchronized (this) {\n      CacheValue cacheValue = byDirectoryCache.get(directory);\n      if (cacheValue == null) {\n        throw new IllegalArgumentException(\"Unknown directory: \" + directory\n            + \" \" + byDirectoryCache);\n      }\n      cacheValue.doneWithDir = true;\n      if (cacheValue.refCnt == 0 && !closed) {\n        boolean cl = closeCacheValue(cacheValue);\n        if (cl) {\n          removeFromCache(cacheValue);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"058801f8673d53a5abac8088204860ec29a40f0d":["4970a04ee1a5f1a6271f46e29ab0c0740c98f3fc"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4897c5b415f476d84ec970a19c41510645887526"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4897c5b415f476d84ec970a19c41510645887526"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4897c5b415f476d84ec970a19c41510645887526":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["058801f8673d53a5abac8088204860ec29a40f0d"],"4970a04ee1a5f1a6271f46e29ab0c0740c98f3fc":["4897c5b415f476d84ec970a19c41510645887526"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"]},"commit2Childs":{"058801f8673d53a5abac8088204860ec29a40f0d":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","4897c5b415f476d84ec970a19c41510645887526"],"4897c5b415f476d84ec970a19c41510645887526":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","4970a04ee1a5f1a6271f46e29ab0c0740c98f3fc"],"4970a04ee1a5f1a6271f46e29ab0c0740c98f3fc":["058801f8673d53a5abac8088204860ec29a40f0d"],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}