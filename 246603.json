{"path":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermDocs#seek(SegmentTermEnum).mjava","commits":[{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermDocs#seek(SegmentTermEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermDocs#seek(TermEnum).mjava","sourceNew":"  public void seek(SegmentTermEnum segmentTermEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (segmentTermEnum.fieldInfos == fieldInfos) {        // optimized case\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = segmentTermEnum.term();\n      ti = tis.get(term); \n    }\n    \n    seek(ti, term);\n  }\n\n","sourceOld":"  public void seek(TermEnum termEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (termEnum instanceof SegmentTermEnum && ((SegmentTermEnum) termEnum).fieldInfos == fieldInfos) {        // optimized case\n      SegmentTermEnum segmentTermEnum = ((SegmentTermEnum) termEnum);\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = termEnum.term();\n      ti = tis.get(term); \n    }\n    \n    seek(ti, term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermDocs#seek(SegmentTermEnum).mjava","pathOld":"/dev/null","sourceNew":"  public void seek(SegmentTermEnum segmentTermEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (segmentTermEnum.fieldInfos == fieldInfos) {        // optimized case\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = segmentTermEnum.term();\n      ti = tis.get(term); \n    }\n    \n    seek(ti, term);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/SegmentTermDocs#seek(SegmentTermEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermDocs#seek(SegmentTermEnum).mjava","sourceNew":"  public void seek(SegmentTermEnum segmentTermEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (segmentTermEnum.fieldInfos == fieldInfos) {        // optimized case\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = segmentTermEnum.term();\n      ti = tis.get(term); \n    }\n    \n    seek(ti, term);\n  }\n\n","sourceOld":"  public void seek(SegmentTermEnum segmentTermEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (segmentTermEnum.fieldInfos == fieldInfos) {        // optimized case\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = segmentTermEnum.term();\n      ti = tis.get(term); \n    }\n    \n    seek(ti, term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["28427ef110c4c5bf5b4057731b83110bd1e13724"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","28427ef110c4c5bf5b4057731b83110bd1e13724"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28427ef110c4c5bf5b4057731b83110bd1e13724","5f4e87790277826a2aea119328600dfb07761f32"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["7b91922b55d15444d554721b352861d028eb8278","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}