{"path":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  private Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  private Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  private Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  private Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  private Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  private Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12aef50f649e6f5f9689970748f96e3f1ca6104e","date":1428932135,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  protected Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  private Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"943562acd5eb31fa2fb7384927091158a85ce9fe","date":1428934087,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  protected Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n    boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n    if (reqFieldMatch) {\n      return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n    } else {\n      return new QueryTermScorer(query);\n    }\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  protected Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n     boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n     if (reqFieldMatch) {\n        return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n     }\n     else {\n        return new QueryTermScorer(query);\n     }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getQueryScorer(Query,String,SolrQueryRequest).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   *\n   * @param query     The current query\n   * @param fieldName The name of the field\n   * @param request   The SolrQueryRequest\n   */\n  protected Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n    boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n    if (reqFieldMatch) {\n      return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n    } else {\n      return new QueryTermScorer(query);\n    }\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Scorer} suitable for this Query and field.\n   * @param query The current query\n   * @param fieldName The name of the field\n   * @param request The SolrQueryRequest\n   */\n  protected Scorer getQueryScorer(Query query, String fieldName, SolrQueryRequest request) {\n    boolean reqFieldMatch = request.getParams().getFieldBool(fieldName, HighlightParams.FIELD_MATCH, false);\n    if (reqFieldMatch) {\n      return new QueryTermScorer(query, request.getSearcher().getIndexReader(), fieldName);\n    } else {\n      return new QueryTermScorer(query);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"943562acd5eb31fa2fb7384927091158a85ce9fe":["12aef50f649e6f5f9689970748f96e3f1ca6104e"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["943562acd5eb31fa2fb7384927091158a85ce9fe"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"12aef50f649e6f5f9689970748f96e3f1ca6104e":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"943562acd5eb31fa2fb7384927091158a85ce9fe":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["12aef50f649e6f5f9689970748f96e3f1ca6104e"],"12aef50f649e6f5f9689970748f96e3f1ca6104e":["943562acd5eb31fa2fb7384927091158a85ce9fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}