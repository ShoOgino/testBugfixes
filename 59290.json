{"path":"lucene/facet/src/java/org/apache/lucene/facet/complements/TotalFacetCountsCache#computeAndCache(TFCKey).mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/complements/TotalFacetCountsCache#computeAndCache(TFCKey).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCountsCache#computeAndCache(TFCKey).mjava","sourceNew":"  /**\n   * compute TFC and cache it, after verifying it was not just added - for this\n   * matter this method is synchronized, which is not too bad, because there is\n   * lots of work done in the computations.\n   */\n  private synchronized TotalFacetCounts computeAndCache(TFCKey key) throws IOException {\n    TotalFacetCounts tfc = cache.get(key); \n    if (tfc == null) {\n      tfc = TotalFacetCounts.compute(key.indexReader, key.taxonomy, key.facetIndexingParams);\n      lruKeys.add(key);\n      cache.put(key,tfc);\n      trimCache();\n    }\n    return tfc;\n  }\n\n","sourceOld":"  /**\n   * compute TFC and cache it, after verifying it was not just added - for this\n   * matter this method is synchronized, which is not too bad, because there is\n   * lots of work done in the computations.\n   */\n  private synchronized TotalFacetCounts computeAndCache(TFCKey key) throws IOException {\n    TotalFacetCounts tfc = cache.get(key); \n    if (tfc == null) {\n      tfc = TotalFacetCounts.compute(key.indexReader, key.taxonomy, key.facetIndexingParams);\n      lruKeys.add(key);\n      cache.put(key,tfc);\n      trimCache();\n    }\n    return tfc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/complements/TotalFacetCountsCache#computeAndCache(TFCKey).mjava","sourceNew":null,"sourceOld":"  /**\n   * compute TFC and cache it, after verifying it was not just added - for this\n   * matter this method is synchronized, which is not too bad, because there is\n   * lots of work done in the computations.\n   */\n  private synchronized TotalFacetCounts computeAndCache(TFCKey key) throws IOException {\n    TotalFacetCounts tfc = cache.get(key); \n    if (tfc == null) {\n      tfc = TotalFacetCounts.compute(key.indexReader, key.taxonomy, key.facetIndexingParams);\n      lruKeys.add(key);\n      cache.put(key,tfc);\n      trimCache();\n    }\n    return tfc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/complements/TotalFacetCountsCache#computeAndCache(TFCKey).mjava","sourceNew":null,"sourceOld":"  /**\n   * compute TFC and cache it, after verifying it was not just added - for this\n   * matter this method is synchronized, which is not too bad, because there is\n   * lots of work done in the computations.\n   */\n  private synchronized TotalFacetCounts computeAndCache(TFCKey key) throws IOException {\n    TotalFacetCounts tfc = cache.get(key); \n    if (tfc == null) {\n      tfc = TotalFacetCounts.compute(key.indexReader, key.taxonomy, key.facetIndexingParams);\n      lruKeys.add(key);\n      cache.put(key,tfc);\n      trimCache();\n    }\n    return tfc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["607428da722dcb3e86bbd11c63de8986e6275c36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["607428da722dcb3e86bbd11c63de8986e6275c36","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}