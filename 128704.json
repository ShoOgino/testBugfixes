{"path":"solr/core/src/java/org/apache/solr/handler/CatStream#read().mjava","commits":[{"id":"fa57c615885d274eb8087f89b6a9e1f84e655a74","date":1565267901,"type":1,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CatStream#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/FilesStream#read().mjava","sourceNew":"  @Override\n  public Tuple read() throws IOException {\n    if (maxLines >= 0 && linesReturned >= maxLines) {\n      if (currentFileLines != null) currentFileLines.close();\n      return createEofTuple();\n    } else if (currentFileHasMoreLinesToRead()) {\n      return fetchNextLineFromCurrentFile();\n    } else if (advanceToNextFileWithData()) {\n      return fetchNextLineFromCurrentFile();\n    } else { // No more data\n      return createEofTuple();\n    }\n  }\n\n","sourceOld":"  @Override\n  public Tuple read() throws IOException {\n    if (maxLines >= 0 && linesReturned >= maxLines) {\n      if (currentFileLines != null) currentFileLines.close();\n      return createEofTuple();\n    } else if (currentFileHasMoreLinesToRead()) {\n      return fetchNextLineFromCurrentFile();\n    } else if (advanceToNextFileWithData()) {\n      return fetchNextLineFromCurrentFile();\n    } else { // No more data\n      return createEofTuple();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0a64689513b45b25612694fffa76be8d4a9a3ad","date":1568507952,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CatStream#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CatStream#read().mjava","sourceNew":"  @Override\n  public Tuple read() throws IOException {\n    if (maxLines >= 0 && linesReturned >= maxLines) {\n      closeCurrentFileIfSet();\n      return createEofTuple();\n    } else if (currentFileHasMoreLinesToRead()) {\n      return fetchNextLineFromCurrentFile();\n    } else if (advanceToNextFileWithData()) {\n      return fetchNextLineFromCurrentFile();\n    } else { // No more data\n      closeCurrentFileIfSet();\n      return createEofTuple();\n    }\n  }\n\n","sourceOld":"  @Override\n  public Tuple read() throws IOException {\n    if (maxLines >= 0 && linesReturned >= maxLines) {\n      if (currentFileLines != null) currentFileLines.close();\n      return createEofTuple();\n    } else if (currentFileHasMoreLinesToRead()) {\n      return fetchNextLineFromCurrentFile();\n    } else if (advanceToNextFileWithData()) {\n      return fetchNextLineFromCurrentFile();\n    } else { // No more data\n      return createEofTuple();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804a8d5358fe7b7563b85ee7838714d720b89272","date":1591624987,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CatStream#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CatStream#read().mjava","sourceNew":"  @Override\n  public Tuple read() throws IOException {\n    if (maxLines >= 0 && linesReturned >= maxLines) {\n      closeCurrentFileIfSet();\n      return Tuple.EOF();\n    } else if (currentFileHasMoreLinesToRead()) {\n      return fetchNextLineFromCurrentFile();\n    } else if (advanceToNextFileWithData()) {\n      return fetchNextLineFromCurrentFile();\n    } else { // No more data\n      closeCurrentFileIfSet();\n      return Tuple.EOF();\n    }\n  }\n\n","sourceOld":"  @Override\n  public Tuple read() throws IOException {\n    if (maxLines >= 0 && linesReturned >= maxLines) {\n      closeCurrentFileIfSet();\n      return createEofTuple();\n    } else if (currentFileHasMoreLinesToRead()) {\n      return fetchNextLineFromCurrentFile();\n    } else if (advanceToNextFileWithData()) {\n      return fetchNextLineFromCurrentFile();\n    } else { // No more data\n      closeCurrentFileIfSet();\n      return createEofTuple();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa57c615885d274eb8087f89b6a9e1f84e655a74":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"804a8d5358fe7b7563b85ee7838714d720b89272":["a0a64689513b45b25612694fffa76be8d4a9a3ad"],"a0a64689513b45b25612694fffa76be8d4a9a3ad":["fa57c615885d274eb8087f89b6a9e1f84e655a74"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["804a8d5358fe7b7563b85ee7838714d720b89272"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa57c615885d274eb8087f89b6a9e1f84e655a74"],"fa57c615885d274eb8087f89b6a9e1f84e655a74":["a0a64689513b45b25612694fffa76be8d4a9a3ad"],"804a8d5358fe7b7563b85ee7838714d720b89272":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0a64689513b45b25612694fffa76be8d4a9a3ad":["804a8d5358fe7b7563b85ee7838714d720b89272"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}