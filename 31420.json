{"path":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","commits":[{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efcf27cd5ca23def8376b4c321970c14dd71623","date":1400662679,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,Bits,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, Bits liveDocs, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n\n    FixedBitSet liveOrdsExpected = new FixedBitSet((int) expected.getValueCount());\n    FixedBitSet liveOrdsActual = new FixedBitSet((int) actual.getValueCount());\n\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n\n    // compare values for all live docs:\n    for (int i = 0; i < maxDoc; i++) {\n      if (liveDocs != null && liveDocs.get(i) == false) {\n        // Don't check deleted docs\n        continue;\n      }\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        expected.lookupOrd(expectedOrd, expectedBytes);\n        long actualOrd = actual.nextOrd();\n        assertTrue(actualOrd != NO_MORE_ORDS);\n        actual.lookupOrd(actualOrd, actualBytes);\n        assertEquals(expectedBytes, actualBytes);\n        liveOrdsExpected.set((int) expectedOrd);\n        liveOrdsActual.set((int) actualOrd);\n      }\n\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n\n    // Make sure both have same number of non-deleted values:\n    assertEquals(liveOrdsExpected.cardinality(), liveOrdsActual.cardinality());\n    \n    // compare ord dictionary\n    int expectedOrd = 0;\n    int actualOrd = 0;\n    while (expectedOrd < expected.getValueCount()) {\n      expectedOrd = liveOrdsExpected.nextSetBit(expectedOrd);\n      if (expectedOrd == -1) {\n        break;\n      }\n      actualOrd = liveOrdsActual.nextSetBit(actualOrd);\n      expected.lookupOrd(expectedOrd, expectedBytes);\n      actual.lookupOrd(actualOrd, actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n      expectedOrd++;\n      actualOrd++;\n    }\n    assertTrue(actualOrd == actual.getValueCount() || liveOrdsActual.nextSetBit(actualOrd) == -1);\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), liveOrdsExpected, actual.termsEnum(), liveOrdsActual);\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45a621dd071a902e1fd30367200d7bbbea037706","date":1400686915,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,Bits,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, Bits liveDocs, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n\n    FixedBitSet liveOrdsExpected = new FixedBitSet((int) expected.getValueCount());\n    FixedBitSet liveOrdsActual = new FixedBitSet((int) actual.getValueCount());\n\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n\n    // compare values for all live docs:\n    for (int i = 0; i < maxDoc; i++) {\n      if (liveDocs != null && liveDocs.get(i) == false) {\n        // Don't check deleted docs\n        continue;\n      }\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        expected.lookupOrd(expectedOrd, expectedBytes);\n        long actualOrd = actual.nextOrd();\n        assertTrue(actualOrd != NO_MORE_ORDS);\n        actual.lookupOrd(actualOrd, actualBytes);\n        assertEquals(expectedBytes, actualBytes);\n        liveOrdsExpected.set((int) expectedOrd);\n        liveOrdsActual.set((int) actualOrd);\n      }\n\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n\n    // Make sure both have same number of non-deleted values:\n    assertEquals(liveOrdsExpected.cardinality(), liveOrdsActual.cardinality());\n    \n    // compare ord dictionary\n    int expectedOrd = 0;\n    int actualOrd = 0;\n    while (expectedOrd < expected.getValueCount()) {\n      expectedOrd = liveOrdsExpected.nextSetBit(expectedOrd);\n      if (expectedOrd == -1) {\n        break;\n      }\n      actualOrd = liveOrdsActual.nextSetBit(actualOrd);\n      expected.lookupOrd(expectedOrd, expectedBytes);\n      actual.lookupOrd(actualOrd, actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n      expectedOrd++;\n      actualOrd++;\n    }\n    assertTrue(actualOrd == actual.getValueCount() || liveOrdsActual.nextSetBit(actualOrd) == -1);\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), liveOrdsExpected, actual.termsEnum(), liveOrdsActual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b51b7b59dc59dcb5a528a10848cad304090d2a4d","date":1400691257,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupOrd(i, expectedBytes);\n      actual.lookupOrd(i, actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupOrd(i, expectedBytes);\n      actual.lookupOrd(i, actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupOrd(i, expectedBytes);\n      actual.lookupOrd(i, actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":null,"sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"45a621dd071a902e1fd30367200d7bbbea037706":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"0efcf27cd5ca23def8376b4c321970c14dd71623":["56572ec06f1407c066d6b7399413178b33176cd8"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"83870855d82aba6819217abeff5a40779dbb28b4":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","0e121d43b5a10f2df530f406f935102656e9c4e8"],"b51b7b59dc59dcb5a528a10848cad304090d2a4d":["45a621dd071a902e1fd30367200d7bbbea037706"],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93dd449115a9247533e44bab47e8429e5dccbc6d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","0e121d43b5a10f2df530f406f935102656e9c4e8"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["93dd449115a9247533e44bab47e8429e5dccbc6d","b51b7b59dc59dcb5a528a10848cad304090d2a4d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e121d43b5a10f2df530f406f935102656e9c4e8"]},"commit2Childs":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"45a621dd071a902e1fd30367200d7bbbea037706":["b51b7b59dc59dcb5a528a10848cad304090d2a4d"],"0efcf27cd5ca23def8376b4c321970c14dd71623":["45a621dd071a902e1fd30367200d7bbbea037706"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"56572ec06f1407c066d6b7399413178b33176cd8":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"b51b7b59dc59dcb5a528a10848cad304090d2a4d":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"4d637064d608752565d4f9f41b2497dfdfdde50e":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","4d637064d608752565d4f9f41b2497dfdfdde50e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}