{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#assertFailedSchemaResponse(ThrowingRunnable,String).mjava","commits":[{"id":"dc375e2ab3b7cc0344f8cd85189e42b87fce01a3","date":1515516930,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#assertFailedSchemaResponse(ThrowingRunnable,String).mjava","pathOld":"/dev/null","sourceNew":"  private static void assertFailedSchemaResponse(ThrowingRunnable runnable, String expectedErrorMessage) {\n    HttpSolrClient.RemoteExecutionException e = expectThrows(HttpSolrClient.RemoteExecutionException.class, runnable);\n    SimpleOrderedMap errorMap = (SimpleOrderedMap)e.getMetaData().get(\"error\");\n    assertEquals(\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\",\n        ((NamedList)errorMap.get(\"metadata\")).get(\"error-class\"));\n    List details = (List)errorMap.get(\"details\");\n    assertTrue(((List)((Map)details.get(0)).get(\"errorMessages\")).get(0).toString().contains(expectedErrorMessage));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#assertFailedSchemaResponse(ThrowingRunnable,String).mjava","pathOld":"/dev/null","sourceNew":"  private static void assertFailedSchemaResponse(ThrowingRunnable runnable, String expectedErrorMessage) {\n    HttpSolrClient.RemoteExecutionException e = expectThrows(HttpSolrClient.RemoteExecutionException.class, runnable);\n    SimpleOrderedMap errorMap = (SimpleOrderedMap)e.getMetaData().get(\"error\");\n    assertEquals(\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\",\n        ((NamedList)errorMap.get(\"metadata\")).get(\"error-class\"));\n    List details = (List)errorMap.get(\"details\");\n    assertTrue(((List)((Map)details.get(0)).get(\"errorMessages\")).get(0).toString().contains(expectedErrorMessage));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db96734b79e26d948b59f68bd4564c4836a71acf","date":1585375566,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#assertFailedSchemaResponse(ThrowingRunnable,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#assertFailedSchemaResponse(ThrowingRunnable,String).mjava","sourceNew":"  private static void assertFailedSchemaResponse(ThrowingRunnable runnable, String expectedErrorMessage) {\n    BaseHttpSolrClient.RemoteExecutionException e = expectThrows(BaseHttpSolrClient.RemoteExecutionException.class, runnable);\n    SimpleOrderedMap errorMap = (SimpleOrderedMap)e.getMetaData().get(\"error\");\n    assertEquals(\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\",\n        ((NamedList)errorMap.get(\"metadata\")).get(\"error-class\"));\n    List details = (List)errorMap.get(\"details\");\n    assertTrue(((List)((Map)details.get(0)).get(\"errorMessages\")).get(0).toString().contains(expectedErrorMessage));\n  }\n\n","sourceOld":"  private static void assertFailedSchemaResponse(ThrowingRunnable runnable, String expectedErrorMessage) {\n    HttpSolrClient.RemoteExecutionException e = expectThrows(HttpSolrClient.RemoteExecutionException.class, runnable);\n    SimpleOrderedMap errorMap = (SimpleOrderedMap)e.getMetaData().get(\"error\");\n    assertEquals(\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\",\n        ((NamedList)errorMap.get(\"metadata\")).get(\"error-class\"));\n    List details = (List)errorMap.get(\"details\");\n    assertTrue(((List)((Map)details.get(0)).get(\"errorMessages\")).get(0).toString().contains(expectedErrorMessage));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#assertFailedSchemaResponse(ThrowingRunnable,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest#assertFailedSchemaResponse(ThrowingRunnable,String).mjava","sourceNew":"  private static void assertFailedSchemaResponse(ThrowingRunnable runnable, String expectedErrorMessage) {\n    BaseHttpSolrClient.RemoteExecutionException e = expectThrows(BaseHttpSolrClient.RemoteExecutionException.class, runnable);\n    @SuppressWarnings({\"rawtypes\"})\n    SimpleOrderedMap errorMap = (SimpleOrderedMap)e.getMetaData().get(\"error\");\n    assertEquals(\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\",\n        ((NamedList)errorMap.get(\"metadata\")).get(\"error-class\"));\n    @SuppressWarnings({\"rawtypes\"})\n    List details = (List)errorMap.get(\"details\");\n    assertTrue(((List)((Map)details.get(0)).get(\"errorMessages\")).get(0).toString().contains(expectedErrorMessage));\n  }\n\n","sourceOld":"  private static void assertFailedSchemaResponse(ThrowingRunnable runnable, String expectedErrorMessage) {\n    BaseHttpSolrClient.RemoteExecutionException e = expectThrows(BaseHttpSolrClient.RemoteExecutionException.class, runnable);\n    SimpleOrderedMap errorMap = (SimpleOrderedMap)e.getMetaData().get(\"error\");\n    assertEquals(\"org.apache.solr.api.ApiBag$ExceptionWithErrObject\",\n        ((NamedList)errorMap.get(\"metadata\")).get(\"error-class\"));\n    List details = (List)errorMap.get(\"details\");\n    assertTrue(((List)((Map)details.get(0)).get(\"errorMessages\")).get(0).toString().contains(expectedErrorMessage));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["db96734b79e26d948b59f68bd4564c4836a71acf"],"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dc375e2ab3b7cc0344f8cd85189e42b87fce01a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db96734b79e26d948b59f68bd4564c4836a71acf":["b94236357aaa22b76c10629851fe4e376e0cea82"],"dc375e2ab3b7cc0344f8cd85189e42b87fce01a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b94236357aaa22b76c10629851fe4e376e0cea82":["db96734b79e26d948b59f68bd4564c4836a71acf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","dc375e2ab3b7cc0344f8cd85189e42b87fce01a3"],"db96734b79e26d948b59f68bd4564c4836a71acf":["9ba1b632c041956c93c41aa1143d16a567014891"],"dc375e2ab3b7cc0344f8cd85189e42b87fce01a3":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}