{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues).mjava","commits":[{"id":"79759974460bc59933cd169acc94f5c6b16368d5","date":1471318443,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collect(int,int,LongValues).mjava","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","sourceOld":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collect(int,int,LongValues).mjava","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","sourceOld":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collect(int,int,LongValues).mjava","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","sourceOld":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collect(int,int,LongValues).mjava","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","sourceOld":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c705a0d590cf911e7c942df49563ca2ea176e22","date":1526916174,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues).mjava","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx, slotContext);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx, slotContext);\n      }\n    }\n  }\n\n","sourceOld":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c49311db43a2eabd1a5a300f34614a7577987da","date":1581467574,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues).mjava","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    // This code handles faceting prefixes, which narrows the range of ords we want to collect.\n    // It’s not an error for an ord to fall outside this range… we simply want to skip it.\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx, slotContext);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx, slotContext);\n      }\n    }\n  }\n\n","sourceOld":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx, slotContext);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx, slotContext);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f9e4bd10604489b5817ee29e35ac96a3148cbec","date":1594345357,"type":5,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues,SegCountGlobal,int,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArrayDV#collect(int,int,LongValues).mjava","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal, SegCountGlobal segCounter, int maxIdx, boolean collectBase) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    // This code handles faceting prefixes, which narrows the range of ords we want to collect.\n    // It’s not an error for an ord to fall outside this range… we simply want to skip it.\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      segCounter.incrementCount(arrIdx, 1, maxIdx);\n      if (collectBase) {\n        if (collectAcc != null) {\n          collectAcc.collect(doc, arrIdx, slotContext);\n        }\n        if (allBucketsAcc != null) {\n          allBucketsAcc.collect(doc, arrIdx, slotContext);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    // This code handles faceting prefixes, which narrows the range of ords we want to collect.\n    // It’s not an error for an ord to fall outside this range… we simply want to skip it.\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx, slotContext);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx, slotContext);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c705a0d590cf911e7c942df49563ca2ea176e22":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["8c49311db43a2eabd1a5a300f34614a7577987da"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8c49311db43a2eabd1a5a300f34614a7577987da":["2c705a0d590cf911e7c942df49563ca2ea176e22"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","79759974460bc59933cd169acc94f5c6b16368d5"],"79759974460bc59933cd169acc94f5c6b16368d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"]},"commit2Childs":{"2c705a0d590cf911e7c942df49563ca2ea176e22":["8c49311db43a2eabd1a5a300f34614a7577987da"],"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["2c705a0d590cf911e7c942df49563ca2ea176e22","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","79759974460bc59933cd169acc94f5c6b16368d5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"8c49311db43a2eabd1a5a300f34614a7577987da":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"79759974460bc59933cd169acc94f5c6b16368d5":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}