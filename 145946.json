{"path":"src/java/org/apache/lucene/queryParser/QueryParser#getBooleanQuery(Vector).mjava","commits":[{"id":"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef","date":1063245093,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#getBooleanQuery(Vector).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Factory method for generating query, given a set of clauses.\n   * By default creates a boolean query composed of clauses passed in.\n   *\n   * Can be overridden by extending classes, to modify query being\n   * returned.\n   *\n   * @param clauses Vector that contains {@link BooleanClause} instances\n   *    to join.\n   *\n   * @return Resulting {@link Query} object.\n   */\n  protected Query getBooleanQuery(Vector clauses)\n  {\n    BooleanQuery query = new BooleanQuery();\n    for (int i = 0; i < clauses.size(); i++) {\n        query.add((BooleanClause)clauses.elementAt(i));\n    }\n    return query;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199fcfef6092b06089a588bf55391b8ce5aea8f5","date":1064896716,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#getBooleanQuery(Vector).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#getBooleanQuery(Vector).mjava","sourceNew":"  /**\n   * Factory method for generating query, given a set of clauses.\n   * By default creates a boolean query composed of clauses passed in.\n   *\n   * Can be overridden by extending classes, to modify query being\n   * returned.\n   *\n   * @param clauses Vector that contains {@link BooleanClause} instances\n   *    to join.\n   *\n   * @return Resulting {@link Query} object.\n   * @exception ParseException throw in overridden method to disallow\n   */\n  protected Query getBooleanQuery(Vector clauses) throws ParseException\n  {\n    BooleanQuery query = new BooleanQuery();\n    for (int i = 0; i < clauses.size(); i++) {\n        query.add((BooleanClause)clauses.elementAt(i));\n    }\n    return query;\n  }\n\n","sourceOld":"  /**\n   * Factory method for generating query, given a set of clauses.\n   * By default creates a boolean query composed of clauses passed in.\n   *\n   * Can be overridden by extending classes, to modify query being\n   * returned.\n   *\n   * @param clauses Vector that contains {@link BooleanClause} instances\n   *    to join.\n   *\n   * @return Resulting {@link Query} object.\n   */\n  protected Query getBooleanQuery(Vector clauses)\n  {\n    BooleanQuery query = new BooleanQuery();\n    for (int i = 0; i < clauses.size(); i++) {\n        query.add((BooleanClause)clauses.elementAt(i));\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c","date":1078315633,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#getBooleanQuery(Vector).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#getBooleanQuery(Vector).mjava","sourceNew":"  /**\n   * Factory method for generating query, given a set of clauses.\n   * By default creates a boolean query composed of clauses passed in.\n   *\n   * Can be overridden by extending classes, to modify query being\n   * returned.\n   *\n   * @param clauses Vector that contains {@link BooleanClause} instances\n   *    to join.\n   *\n   * @return Resulting {@link Query} object.\n   * @exception ParseException throw in overridden method to disallow\n   */\n  protected Query getBooleanQuery(Vector clauses) throws ParseException\n  {\n    BooleanQuery query = new BooleanQuery();\n    for (int i = 0; i < clauses.size(); i++) {\n  query.add((BooleanClause)clauses.elementAt(i));\n    }\n    return query;\n  }\n\n","sourceOld":"  /**\n   * Factory method for generating query, given a set of clauses.\n   * By default creates a boolean query composed of clauses passed in.\n   *\n   * Can be overridden by extending classes, to modify query being\n   * returned.\n   *\n   * @param clauses Vector that contains {@link BooleanClause} instances\n   *    to join.\n   *\n   * @return Resulting {@link Query} object.\n   * @exception ParseException throw in overridden method to disallow\n   */\n  protected Query getBooleanQuery(Vector clauses) throws ParseException\n  {\n    BooleanQuery query = new BooleanQuery();\n    for (int i = 0; i < clauses.size(); i++) {\n        query.add((BooleanClause)clauses.elementAt(i));\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcbc8ed27f45a5a299f8414d7a886340ce7bb3db","date":1110223587,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#getBooleanQuery(Vector).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#getBooleanQuery(Vector).mjava","sourceNew":"  /**\n   * Factory method for generating query, given a set of clauses.\n   * By default creates a boolean query composed of clauses passed in.\n   *\n   * Can be overridden by extending classes, to modify query being\n   * returned.\n   *\n   * @param clauses Vector that contains {@link BooleanClause} instances\n   *    to join.\n   *\n   * @return Resulting {@link Query} object.\n   * @exception ParseException throw in overridden method to disallow\n   */\n  protected Query getBooleanQuery(Vector clauses) throws ParseException {\n    return getBooleanQuery(clauses, false);\n  }\n\n","sourceOld":"  /**\n   * Factory method for generating query, given a set of clauses.\n   * By default creates a boolean query composed of clauses passed in.\n   *\n   * Can be overridden by extending classes, to modify query being\n   * returned.\n   *\n   * @param clauses Vector that contains {@link BooleanClause} instances\n   *    to join.\n   *\n   * @return Resulting {@link Query} object.\n   * @exception ParseException throw in overridden method to disallow\n   */\n  protected Query getBooleanQuery(Vector clauses) throws ParseException\n  {\n    BooleanQuery query = new BooleanQuery();\n    for (int i = 0; i < clauses.size(); i++) {\n  query.add((BooleanClause)clauses.elementAt(i));\n    }\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7b6cdc70e097da94da79a655ed8f94477ff69f5","date":1220815360,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#getBooleanQuery(Vector).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#getBooleanQuery(Vector).mjava","sourceNew":"  /**\n   * Factory method for generating query, given a set of clauses.\n   * By default creates a boolean query composed of clauses passed in.\n   *\n   * Can be overridden by extending classes, to modify query being\n   * returned.\n   *\n   * @param clauses List that contains {@link BooleanClause} instances\n   *    to join.\n   *\n   * @return Resulting {@link Query} object.\n   * @exception ParseException throw in overridden method to disallow\n   * @deprecated use {@link #getBooleanQuery(List)} instead\n   */\n  protected Query getBooleanQuery(Vector clauses) throws ParseException {\n    return getBooleanQuery((List) clauses, false);\n  }\n\n","sourceOld":"  /**\n   * Factory method for generating query, given a set of clauses.\n   * By default creates a boolean query composed of clauses passed in.\n   *\n   * Can be overridden by extending classes, to modify query being\n   * returned.\n   *\n   * @param clauses Vector that contains {@link BooleanClause} instances\n   *    to join.\n   *\n   * @return Resulting {@link Query} object.\n   * @exception ParseException throw in overridden method to disallow\n   */\n  protected Query getBooleanQuery(Vector clauses) throws ParseException {\n    return getBooleanQuery(clauses, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84dc138e05008664b5e01dc83f6ad95bd73b91c5","date":1256054789,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#getBooleanQuery(Vector).mjava","sourceNew":null,"sourceOld":"  /**\n   * Factory method for generating query, given a set of clauses.\n   * By default creates a boolean query composed of clauses passed in.\n   *\n   * Can be overridden by extending classes, to modify query being\n   * returned.\n   *\n   * @param clauses List that contains {@link BooleanClause} instances\n   *    to join.\n   *\n   * @return Resulting {@link Query} object.\n   * @exception ParseException throw in overridden method to disallow\n   * @deprecated use {@link #getBooleanQuery(List)} instead\n   */\n  protected Query getBooleanQuery(Vector clauses) throws ParseException {\n    return getBooleanQuery((List) clauses, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"199fcfef6092b06089a588bf55391b8ce5aea8f5":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c":["199fcfef6092b06089a588bf55391b8ce5aea8f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7b6cdc70e097da94da79a655ed8f94477ff69f5":["bcbc8ed27f45a5a299f8414d7a886340ce7bb3db"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["84dc138e05008664b5e01dc83f6ad95bd73b91c5"],"84dc138e05008664b5e01dc83f6ad95bd73b91c5":["c7b6cdc70e097da94da79a655ed8f94477ff69f5"],"bcbc8ed27f45a5a299f8414d7a886340ce7bb3db":["f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c"]},"commit2Childs":{"199fcfef6092b06089a588bf55391b8ce5aea8f5":["f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c"],"f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c":["bcbc8ed27f45a5a299f8414d7a886340ce7bb3db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"c7b6cdc70e097da94da79a655ed8f94477ff69f5":["84dc138e05008664b5e01dc83f6ad95bd73b91c5"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["199fcfef6092b06089a588bf55391b8ce5aea8f5"],"bcbc8ed27f45a5a299f8414d7a886340ce7bb3db":["c7b6cdc70e097da94da79a655ed8f94477ff69f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"84dc138e05008664b5e01dc83f6ad95bd73b91c5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}