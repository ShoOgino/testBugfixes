{"path":"solr/core/src/java/org/apache/solr/update/SolrCoreState#newIndexWriter(SolrCore,boolean,boolean).mjava","commits":[{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCoreState#newIndexWriter(SolrCore,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCoreState#newIndexWriter(SolrCore,boolean).mjava","sourceNew":"  /**\n   * Force the creation of a new IndexWriter using the settings from the given\n   * SolrCore.\n   * \n   * @param rollback close IndexWriter if false, else rollback\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void newIndexWriter(SolrCore core, boolean rollback, boolean forceNewDir) throws IOException;\n\n","sourceOld":"  /**\n   * Force the creation of a new IndexWriter using the settings from the given\n   * SolrCore.\n   * \n   * @param rollback close IndexWriter if false, else rollback\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void newIndexWriter(SolrCore core, boolean rollback) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCoreState#newIndexWriter(SolrCore,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCoreState#newIndexWriter(SolrCore,boolean).mjava","sourceNew":"  /**\n   * Force the creation of a new IndexWriter using the settings from the given\n   * SolrCore.\n   * \n   * @param rollback close IndexWriter if false, else rollback\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void newIndexWriter(SolrCore core, boolean rollback, boolean forceNewDir) throws IOException;\n\n","sourceOld":"  /**\n   * Force the creation of a new IndexWriter using the settings from the given\n   * SolrCore.\n   * \n   * @param rollback close IndexWriter if false, else rollback\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void newIndexWriter(SolrCore core, boolean rollback) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11fa6b3c54740236744aa64f1a29954b1cf172a5","date":1363907001,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCoreState#newIndexWriter(SolrCore,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCoreState#newIndexWriter(SolrCore,boolean,boolean).mjava","sourceNew":"  /**\n   * Force the creation of a new IndexWriter using the settings from the given\n   * SolrCore.\n   * \n   * @param rollback close IndexWriter if false, else rollback\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void newIndexWriter(SolrCore core, boolean rollback) throws IOException;\n\n","sourceOld":"  /**\n   * Force the creation of a new IndexWriter using the settings from the given\n   * SolrCore.\n   * \n   * @param rollback close IndexWriter if false, else rollback\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void newIndexWriter(SolrCore core, boolean rollback, boolean forceNewDir) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11fa6b3c54740236744aa64f1a29954b1cf172a5":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2126b84bd093fa3d921582a109a0ee578c28126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11fa6b3c54740236744aa64f1a29954b1cf172a5"]},"commit2Childs":{"11fa6b3c54740236744aa64f1a29954b1cf172a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["11fa6b3c54740236744aa64f1a29954b1cf172a5","f2126b84bd093fa3d921582a109a0ee578c28126"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}