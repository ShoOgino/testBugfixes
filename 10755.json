{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2#testSingleEntity_CaseInsensitive().mjava","commits":[{"id":"78ba4a4cc84cf69e69a7a156d7180ff65606ca93","date":1227165581,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2#testSingleEntity_CaseInsensitive().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testSingleEntity_CaseInsensitive() throws Exception {\n    List rows = new ArrayList();\n    rows.add(createMap(\"id\", \"1\", \"desC\", \"one\"));\n    MockDataSource.setIterator(\"select * from x\", rows.iterator());\n\n    super.runFullImport(dataConfigWithCaseInsensitiveFields);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66fbc600d2a14957d20cd4b21074414a3cc4dde9","date":1231419136,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2#testSingleEntity_CaseInsensitive().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2#testSingleEntity_CaseInsensitive().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testSingleEntity_CaseInsensitive() throws Exception {\n    List rows = new ArrayList();\n    rows.add(createMap(\"id\", \"1\", \"desC\", \"one\"));\n    MockDataSource.setIterator(\"select * from x\", rows.iterator());\n\n    super.runFullImport(dataConfigWithCaseInsensitiveFields);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertTrue(\"Start event listener was not called\", StartEventListener.executed);\n    assertTrue(\"End event listener was not called\", EndEventListener.executed);\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testSingleEntity_CaseInsensitive() throws Exception {\n    List rows = new ArrayList();\n    rows.add(createMap(\"id\", \"1\", \"desC\", \"one\"));\n    MockDataSource.setIterator(\"select * from x\", rows.iterator());\n\n    super.runFullImport(dataConfigWithCaseInsensitiveFields);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2#testSingleEntity_CaseInsensitive().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder2#testSingleEntity_CaseInsensitive().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testSingleEntity_CaseInsensitive() throws Exception {\n    List rows = new ArrayList();\n    rows.add(createMap(\"id\", \"1\", \"desC\", \"one\"));\n    MockDataSource.setIterator(\"select * from x\", rows.iterator());\n\n    super.runFullImport(dataConfigWithCaseInsensitiveFields);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertTrue(\"Start event listener was not called\", StartEventListener.executed);\n    assertTrue(\"End event listener was not called\", EndEventListener.executed);\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testSingleEntity_CaseInsensitive() throws Exception {\n    List rows = new ArrayList();\n    rows.add(createMap(\"id\", \"1\", \"desC\", \"one\"));\n    MockDataSource.setIterator(\"select * from x\", rows.iterator());\n\n    super.runFullImport(dataConfigWithCaseInsensitiveFields);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertTrue(\"Start event listener was not called\", StartEventListener.executed);\n    assertTrue(\"End event listener was not called\", EndEventListener.executed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66fbc600d2a14957d20cd4b21074414a3cc4dde9":["78ba4a4cc84cf69e69a7a156d7180ff65606ca93"],"78ba4a4cc84cf69e69a7a156d7180ff65606ca93":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["66fbc600d2a14957d20cd4b21074414a3cc4dde9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"66fbc600d2a14957d20cd4b21074414a3cc4dde9":["ad94625fb8d088209f46650c8097196fec67f00c"],"78ba4a4cc84cf69e69a7a156d7180ff65606ca93":["66fbc600d2a14957d20cd4b21074414a3cc4dde9"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["78ba4a4cc84cf69e69a7a156d7180ff65606ca93"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}