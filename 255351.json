{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    add(new GroupQueryNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    add(new GroupQueryNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae81ef60a860c551619f7702a13ba15f7dc024f5","date":1341796635,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    // TODO: queryConfig is null here!\n    add(new LowercaseExpandedTermsQueryNodeProcessor(Locale.getDefault()));\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    add(new GroupQueryNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    add(new GroupQueryNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d4aecc52bf2b698eb5eaebb2174c377a466561","date":1341839791,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    add(new GroupQueryNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    // TODO: queryConfig is null here!\n    add(new LowercaseExpandedTermsQueryNodeProcessor(Locale.getDefault()));\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    add(new GroupQueryNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee76d213d935c68932ca13b55fa0a8a32bf6af1a","date":1343572717,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    add(new GroupQueryNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":["90bebc0585625959c8f1752410aea0884dc253f0"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    add(new GroupQueryNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    add(new GroupQueryNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"683242c67a3f6086bae8b1354748fcaa38edfbd5","date":1457575601,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new LegacyNumericQueryNodeProcessor());\n    add(new LegacyNumericRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new NumericQueryNodeProcessor());\n    add(new NumericRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":["a7e86426ca0513cfc495c3a2c0bb0c7abe03988d"],"bugIntro":["50b8410419cbbe9d8e1a96c918a951976bffe680"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ea4107f60b9f95623c16025c9c247412ff809092","date":1468333987,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());   \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new RegexpQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new LegacyNumericQueryNodeProcessor());\n    add(new LegacyNumericRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new LegacyNumericQueryNodeProcessor());\n    add(new LegacyNumericRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"50b8410419cbbe9d8e1a96c918a951976bffe680","date":1471869553,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());   \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new RegexpQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());   \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new RegexpQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new LegacyNumericQueryNodeProcessor());\n    add(new LegacyNumericRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c82557b0a8c9d4012f208e5de912ae7500ea351","date":1471888093,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());   \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new RegexpQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());   \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new RegexpQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new LegacyNumericQueryNodeProcessor());\n    add(new LegacyNumericRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","date":1472163016,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());   \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new RegexpQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());   \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new RegexpQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new LegacyNumericQueryNodeProcessor());\n    add(new LegacyNumericRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline#StandardQueryNodeProcessorPipeline(QueryConfigHandler).mjava","sourceNew":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());   \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new RegexpQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","sourceOld":"  public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {\n    super(queryConfig);\n\n    add(new WildcardQueryNodeProcessor());    \n    add(new MultiFieldQueryNodeProcessor());\n    add(new FuzzyQueryNodeProcessor());\n    add(new MatchAllDocsQueryNodeProcessor());\n    add(new OpenRangeQueryNodeProcessor());\n    add(new LegacyNumericQueryNodeProcessor());\n    add(new LegacyNumericRangeQueryNodeProcessor());\n    add(new PointQueryNodeProcessor());\n    add(new PointRangeQueryNodeProcessor());\n    add(new LowercaseExpandedTermsQueryNodeProcessor());\n    add(new TermRangeQueryNodeProcessor());\n    add(new AllowLeadingWildcardProcessor());    \n    add(new AnalyzerQueryNodeProcessor());\n    add(new PhraseSlopQueryNodeProcessor());\n    //add(new GroupQueryNodeProcessor());\n    add(new BooleanQuery2ModifierNodeProcessor());\n    add(new NoChildOptimizationQueryNodeProcessor());\n    add(new RemoveDeletedQueryNodesProcessor());\n    add(new RemoveEmptyNonLeafQueryNodeProcessor());\n    add(new BooleanSingleChildOptimizationQueryNodeProcessor());\n    add(new DefaultPhraseSlopQueryNodeProcessor());\n    add(new BoostQueryNodeProcessor());    \n    add(new MultiTermRewriteMethodProcessor());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae81ef60a860c551619f7702a13ba15f7dc024f5":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["ea4107f60b9f95623c16025c9c247412ff809092","50b8410419cbbe9d8e1a96c918a951976bffe680"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["ea4107f60b9f95623c16025c9c247412ff809092"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["683242c67a3f6086bae8b1354748fcaa38edfbd5","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"683242c67a3f6086bae8b1354748fcaa38edfbd5":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"ea4107f60b9f95623c16025c9c247412ff809092":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"d4d4aecc52bf2b698eb5eaebb2174c377a466561":["ae81ef60a860c551619f7702a13ba15f7dc024f5"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["ea4107f60b9f95623c16025c9c247412ff809092","0c82557b0a8c9d4012f208e5de912ae7500ea351"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"]},"commit2Childs":{"ae81ef60a860c551619f7702a13ba15f7dc024f5":["d4d4aecc52bf2b698eb5eaebb2174c377a466561"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["0c82557b0a8c9d4012f208e5de912ae7500ea351"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["683242c67a3f6086bae8b1354748fcaa38edfbd5","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"683242c67a3f6086bae8b1354748fcaa38edfbd5":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","ea4107f60b9f95623c16025c9c247412ff809092"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ae81ef60a860c551619f7702a13ba15f7dc024f5","ee76d213d935c68932ca13b55fa0a8a32bf6af1a","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"ea4107f60b9f95623c16025c9c247412ff809092":["0c82557b0a8c9d4012f208e5de912ae7500ea351","50b8410419cbbe9d8e1a96c918a951976bffe680","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"d4d4aecc52bf2b698eb5eaebb2174c377a466561":[],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","d4d4aecc52bf2b698eb5eaebb2174c377a466561","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}