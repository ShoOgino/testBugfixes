{"path":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() throws IOException {\n    if(cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    if(cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() {\n    if(cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    if(cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","bugFix":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","sourceNew":"  @Override\n  public void reset() {\n    if(cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() throws IOException {\n    if(cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab7fd1d4809a90174ff5d19b386cef0c423b406a","date":1346099778,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","sourceNew":"  /**\n   * Rewinds the iterator to the beginning of the cached list.\n   * <p>\n   * Note that this does not call reset() on the wrapped tokenstream ever, even\n   * the first time. You should reset() the inner tokenstream before wrapping\n   * it with CachingTokenFilter.\n   */\n  @Override\n  public void reset() {\n    if(cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() {\n    if(cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","sourceNew":"  /**\n   * Rewinds the iterator to the beginning of the cached list.\n   * <p>\n   * Note that this does not call reset() on the wrapped tokenstream ever, even\n   * the first time. You should reset() the inner tokenstream before wrapping\n   * it with CachingTokenFilter.\n   */\n  @Override\n  public void reset() {\n    if(cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void reset() {\n    if(cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7460ad29a56a343e168018965b35d6dac8d64f4b","date":1415800689,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","sourceNew":"  /**\n   * Rewinds the iterator to the beginning of the cached list.\n   * <p>\n   * Note that this does not call reset() on the wrapped tokenstream ever, even\n   * the first time. You should reset() the inner tokenstream before wrapping\n   * it with CachingTokenFilter.\n   */\n  @Override\n  public void reset() {\n    if (cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","sourceOld":"  /**\n   * Rewinds the iterator to the beginning of the cached list.\n   * <p>\n   * Note that this does not call reset() on the wrapped tokenstream ever, even\n   * the first time. You should reset() the inner tokenstream before wrapping\n   * it with CachingTokenFilter.\n   */\n  @Override\n  public void reset() {\n    if(cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55244759f906151d96839f8451dee793acb06e75","date":1418999882,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/CachingTokenFilter#reset().mjava","sourceNew":"  /**\n   * Propagates reset if incrementToken has not yet been called. Otherwise\n   * it rewinds the iterator to the beginning of the cached list.\n   */\n  @Override\n  public void reset() throws IOException {\n    if (cache == null) {//first time\n      input.reset();\n    } else {\n      iterator = cache.iterator();\n    }\n  }\n\n","sourceOld":"  /**\n   * Rewinds the iterator to the beginning of the cached list.\n   * <p>\n   * Note that this does not call reset() on the wrapped tokenstream ever, even\n   * the first time. You should reset() the inner tokenstream before wrapping\n   * it with CachingTokenFilter.\n   */\n  @Override\n  public void reset() {\n    if (cache != null) {\n      iterator = cache.iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"7460ad29a56a343e168018965b35d6dac8d64f4b":["ab7fd1d4809a90174ff5d19b386cef0c423b406a"],"ab7fd1d4809a90174ff5d19b386cef0c423b406a":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","ab7fd1d4809a90174ff5d19b386cef0c423b406a"],"55244759f906151d96839f8451dee793acb06e75":["7460ad29a56a343e168018965b35d6dac8d64f4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["55244759f906151d96839f8451dee793acb06e75"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7460ad29a56a343e168018965b35d6dac8d64f4b":["55244759f906151d96839f8451dee793acb06e75"],"ab7fd1d4809a90174ff5d19b386cef0c423b406a":["7460ad29a56a343e168018965b35d6dac8d64f4b","05a14b2611ead08655a2b2bdc61632eb31316e57"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","ab7fd1d4809a90174ff5d19b386cef0c423b406a","05a14b2611ead08655a2b2bdc61632eb31316e57"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"55244759f906151d96839f8451dee793acb06e75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}