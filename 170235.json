{"path":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#getColorVal(int,int,float).mjava","commits":[{"id":"d5a0b529d2a1f873f1f11db833a891b53909a7bc","date":1104492147,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#getColorVal(int,int,float).mjava","pathOld":"/dev/null","sourceNew":"    private int getColorVal(int colorMin, int colorMax, float score)\n    {\n        if (colorMin == colorMax)\n        {\n            return colorMin;\n        }\n        float scale = Math.abs(colorMin - colorMax);\n        float relScorePercent = Math.min(maxScore, score) / maxScore;\n        float colScore = scale * relScorePercent;\n        return Math.min(colorMin, colorMax) + (int) colScore;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#getColorVal(int,int,float).mjava","pathOld":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#getColorVal(int,int,float).mjava","sourceNew":"    private int getColorVal(int colorMin, int colorMax, float score)\n    {\n        if (colorMin == colorMax)\n        {\n            return colorMin;\n        }\n        float scale = Math.abs(colorMin - colorMax);\n        float relScorePercent = Math.min(maxScore, score) / maxScore;\n        float colScore = scale * relScorePercent;\n        return Math.min(colorMin, colorMax) + (int) colScore;\n    }\n\n","sourceOld":"    private int getColorVal(int colorMin, int colorMax, float score)\n    {\n        if (colorMin == colorMax)\n        {\n            return colorMin;\n        }\n        float scale = Math.abs(colorMin - colorMax);\n        float relScorePercent = Math.min(maxScore, score) / maxScore;\n        float colScore = scale * relScorePercent;\n        return Math.min(colorMin, colorMax) + (int) colScore;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["d5a0b529d2a1f873f1f11db833a891b53909a7bc"],"d5a0b529d2a1f873f1f11db833a891b53909a7bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d5a0b529d2a1f873f1f11db833a891b53909a7bc":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d5a0b529d2a1f873f1f11db833a891b53909a7bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}