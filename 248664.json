{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet[WeightedTerm],boolean,String).mjava","commits":[{"id":"ffdf794cee8d43eb612df752c592cef2dc3e75ae","date":1256465578,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet[WeightedTerm],boolean,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean,String).mjava","sourceNew":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet<WeightedTerm> terms,boolean prohibited, String fieldName) \n\t{\n       \ttry\n       \t{\n    \t\tif (query instanceof BooleanQuery)\n    \t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited, fieldName);\n    \t\telse\n    \t\t\tif(query instanceof FilteredQuery)\n    \t\t\t\tgetTermsFromFilteredQuery((FilteredQuery)query, terms,prohibited, fieldName);\n    \t\t\telse\n    \t\t{\n\t       \t\tHashSet<Term> nonWeightedTerms=new HashSet<Term>();\n\t       \t\tquery.extractTerms(nonWeightedTerms);\n\t       \t\tfor (Iterator<Term> iter = nonWeightedTerms.iterator(); iter.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tTerm term = iter.next();\n\t\t\t\t    if((fieldName==null)||(term.field()==fieldName))\n\t\t\t\t\t{\n\t\t\t\t\t\tterms.add(new WeightedTerm(query.getBoost(),term.text()));\n\t\t\t\t\t}\n\t\t\t\t}\n    \t\t}\n\t      }\n\t      catch(UnsupportedOperationException ignore)\n\t      {\n\t    \t  //this is non-fatal for our purposes\n       \t  }\t\t        \t\t\t        \t\n\t}\n\n","sourceOld":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited, String fieldName) \n\t{\n       \ttry\n       \t{\n    \t\tif (query instanceof BooleanQuery)\n    \t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited, fieldName);\n    \t\telse\n    \t\t\tif(query instanceof FilteredQuery)\n    \t\t\t\tgetTermsFromFilteredQuery((FilteredQuery)query, terms,prohibited, fieldName);\n    \t\t\telse\n    \t\t{\n\t       \t\tHashSet nonWeightedTerms=new HashSet();\n\t       \t\tquery.extractTerms(nonWeightedTerms);\n\t       \t\tfor (Iterator iter = nonWeightedTerms.iterator(); iter.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tTerm term = (Term) iter.next();\n\t\t\t\t    if((fieldName==null)||(term.field()==fieldName))\n\t\t\t\t\t{\n\t\t\t\t\t\tterms.add(new WeightedTerm(query.getBoost(),term.text()));\n\t\t\t\t\t}\n\t\t\t\t}\n    \t\t}\n\t      }\n\t      catch(UnsupportedOperationException ignore)\n\t      {\n\t    \t  //this is non-fatal for our purposes\n       \t  }\t\t        \t\t\t        \t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet[WeightedTerm],boolean,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet[WeightedTerm],boolean,String).mjava","sourceNew":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet<WeightedTerm> terms,boolean prohibited, String fieldName) \n\t{\n       \ttry\n       \t{\n    \t\tif (query instanceof BooleanQuery)\n    \t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited, fieldName);\n    \t\telse\n    \t\t\tif(query instanceof FilteredQuery)\n    \t\t\t\tgetTermsFromFilteredQuery((FilteredQuery)query, terms,prohibited, fieldName);\n    \t\t\telse\n    \t\t{\n\t       \t\tHashSet<Term> nonWeightedTerms=new HashSet<Term>();\n\t       \t\tquery.extractTerms(nonWeightedTerms);\n\t       \t\tfor (Iterator<Term> iter = nonWeightedTerms.iterator(); iter.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tTerm term = iter.next();\n\t\t\t\t    if((fieldName==null)||(term.field()==fieldName))\n\t\t\t\t\t{\n\t\t\t\t\t\tterms.add(new WeightedTerm(query.getBoost(),term.text()));\n\t\t\t\t\t}\n\t\t\t\t}\n    \t\t}\n\t      }\n\t      catch(UnsupportedOperationException ignore)\n\t      {\n\t    \t  //this is non-fatal for our purposes\n       \t  }\t\t        \t\t\t        \t\n\t}\n\n","sourceOld":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet<WeightedTerm> terms,boolean prohibited, String fieldName) \n\t{\n       \ttry\n       \t{\n    \t\tif (query instanceof BooleanQuery)\n    \t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited, fieldName);\n    \t\telse\n    \t\t\tif(query instanceof FilteredQuery)\n    \t\t\t\tgetTermsFromFilteredQuery((FilteredQuery)query, terms,prohibited, fieldName);\n    \t\t\telse\n    \t\t{\n\t       \t\tHashSet<Term> nonWeightedTerms=new HashSet<Term>();\n\t       \t\tquery.extractTerms(nonWeightedTerms);\n\t       \t\tfor (Iterator<Term> iter = nonWeightedTerms.iterator(); iter.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tTerm term = iter.next();\n\t\t\t\t    if((fieldName==null)||(term.field()==fieldName))\n\t\t\t\t\t{\n\t\t\t\t\t\tterms.add(new WeightedTerm(query.getBoost(),term.text()));\n\t\t\t\t\t}\n\t\t\t\t}\n    \t\t}\n\t      }\n\t      catch(UnsupportedOperationException ignore)\n\t      {\n\t    \t  //this is non-fatal for our purposes\n       \t  }\t\t        \t\t\t        \t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"]},"commit2Childs":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}