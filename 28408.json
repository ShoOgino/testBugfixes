{"path":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    daos = FastOutputStream.wrap(os);\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    daos = FastOutputStream.wrap(os);\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    daos = FastOutputStream.wrap(os);\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    daos = FastOutputStream.wrap(os);\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    daos = FastOutputStream.wrap(os);\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    daos = FastOutputStream.wrap(os);\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd0ef6574805f3cb9880e0983b7548a6aa933508","date":1315345052,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    init(FastOutputStream.wrap(os));\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    daos = FastOutputStream.wrap(os);\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","bugFix":null,"bugIntro":["87bed47fd547f864e7fe055b2a3df19fa4b151dc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    init(FastOutputStream.wrap(os));\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    init(FastOutputStream.wrap(os));\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    init(FastOutputStream.wrap(os));\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    init(FastOutputStream.wrap(os));\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a3257d56e8638a76ea557a46d6ef5c70dcaaaa7","date":1457008564,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    assert !alreadyMarshalled;\n    init(FastOutputStream.wrap(os));\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n      alreadyMarshalled = true;\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    init(FastOutputStream.wrap(os));\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","bugFix":null,"bugIntro":["87bed47fd547f864e7fe055b2a3df19fa4b151dc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    assert !alreadyMarshalled;\n    init(FastOutputStream.wrap(os));\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n      alreadyMarshalled = true;\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    init(FastOutputStream.wrap(os));\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"87bed47fd547f864e7fe055b2a3df19fa4b151dc","date":1478615788,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    initWrite(os);\n    try {\n      writeVal(nl);\n    } finally {\n      finish();\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    assert !alreadyMarshalled;\n    init(FastOutputStream.wrap(os));\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n      alreadyMarshalled = true;\n    }\n  }\n\n","bugFix":["3a3257d56e8638a76ea557a46d6ef5c70dcaaaa7","18a1b51b47d1035bf90ecfc7d16c739fe983647a","2307281f021c98102266052f57b7938614dbb30d","bd0ef6574805f3cb9880e0983b7548a6aa933508"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    initWrite(os);\n    try {\n      writeVal(nl);\n    } finally {\n      finish();\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    assert !alreadyMarshalled;\n    init(FastOutputStream.wrap(os));\n    try {\n      daos.writeByte(VERSION);\n      writeVal(nl);\n    } finally {\n      daos.flushBuffer();\n      alreadyMarshalled = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2","date":1497850557,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    try {\n      initWrite(os);\n      writeVal(nl);\n    } finally {\n      alreadyMarshalled = true;\n      daos.flushBuffer();\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    initWrite(os);\n    try {\n      writeVal(nl);\n    } finally {\n      finish();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    try {\n      initWrite(os);\n      writeVal(nl);\n    } finally {\n      alreadyMarshalled = true;\n      daos.flushBuffer();\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    initWrite(os);\n    try {\n      writeVal(nl);\n    } finally {\n      finish();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#marshal(Object,OutputStream).mjava","sourceNew":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    try {\n      initWrite(os);\n      writeVal(nl);\n    } finally {\n      alreadyMarshalled = true;\n      daos.flushBuffer();\n    }\n  }\n\n","sourceOld":"  public void marshal(Object nl, OutputStream os) throws IOException {\n    initWrite(os);\n    try {\n      writeVal(nl);\n    } finally {\n      finish();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["bd0ef6574805f3cb9880e0983b7548a6aa933508","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","87bed47fd547f864e7fe055b2a3df19fa4b151dc"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["bd0ef6574805f3cb9880e0983b7548a6aa933508"],"87bed47fd547f864e7fe055b2a3df19fa4b151dc":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"28288370235ed02234a64753cdbf0c6ec096304a":["87bed47fd547f864e7fe055b2a3df19fa4b151dc","97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2"],"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2":["87bed47fd547f864e7fe055b2a3df19fa4b151dc"],"bd0ef6574805f3cb9880e0983b7548a6aa933508":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["19275ba31e621f6da1b83bf13af75233876fd3d4","3a3257d56e8638a76ea557a46d6ef5c70dcaaaa7"],"3a3257d56e8638a76ea557a46d6ef5c70dcaaaa7":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["87bed47fd547f864e7fe055b2a3df19fa4b151dc","97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c26f00b574427b55127e869b935845554afde1fa":["bd0ef6574805f3cb9880e0983b7548a6aa933508"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cf1a614098b46c9c22afebd7b898ae4d1d2fc273","3a3257d56e8638a76ea557a46d6ef5c70dcaaaa7"],"87bed47fd547f864e7fe055b2a3df19fa4b151dc":["199dfa410f1fdbfd3294106b04096cce5ed34b21","28288370235ed02234a64753cdbf0c6ec096304a","97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"bd0ef6574805f3cb9880e0983b7548a6aa933508":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["199dfa410f1fdbfd3294106b04096cce5ed34b21","87bed47fd547f864e7fe055b2a3df19fa4b151dc"],"3a3257d56e8638a76ea557a46d6ef5c70dcaaaa7":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","199dfa410f1fdbfd3294106b04096cce5ed34b21","a258fbb26824fd104ed795e5d9033d2d040049ee","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}