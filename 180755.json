{"path":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#colStatsFromString(String).mjava","commits":[{"id":"a94e45463a0089149b0d148ae5369140e7f54b8c","date":1419231934,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#colStatsFromString(String).mjava","pathOld":"/dev/null","sourceNew":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      LOG.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      LOG.warn(\"Invalid collection stats string, num fields \" + vals.length\n          + \" != 5, '\" + data + \"'\");\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      LOG.warn(\"Invalid collection stats string '\" + data + \"': \"\n          + e.toString());\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#colStatsFromString(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#colStatsFromString(String).mjava","sourceNew":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      log.warn(\"Invalid collection stats string, num fields \" + vals.length\n          + \" != 5, '\" + data + \"'\");\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid collection stats string '\" + data + \"': \"\n          + e.toString());\n      return null;\n    }\n  }\n\n","sourceOld":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      LOG.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      LOG.warn(\"Invalid collection stats string, num fields \" + vals.length\n          + \" != 5, '\" + data + \"'\");\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      LOG.warn(\"Invalid collection stats string '\" + data + \"': \"\n          + e.toString());\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54faedfb0e03479a38f5ee82f2dfaeea536e9404","date":1587251295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#colStatsFromString(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil#colStatsFromString(String).mjava","sourceNew":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      log.warn(\"Invalid collection stats string, num fields {} != 5 '{}'\", vals.length, data);\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid collection stats string '{}', \", data, e);\n      return null;\n    }\n  }\n\n","sourceOld":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      log.warn(\"Invalid collection stats string, num fields \" + vals.length\n          + \" != 5, '\" + data + \"'\");\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid collection stats string '\" + data + \"': \"\n          + e.toString());\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a94e45463a0089149b0d148ae5369140e7f54b8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["a94e45463a0089149b0d148ae5369140e7f54b8c"]},"commit2Childs":{"a94e45463a0089149b0d148ae5369140e7f54b8c":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a94e45463a0089149b0d148ae5369140e7f54b8c"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}