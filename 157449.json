{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","sourceNew":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random);\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random);\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","sourceNew":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random);\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","date":1379858263,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","sourceNew":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesTo(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesTo(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesToReuse(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesToReuse(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testWhitespace().mjava","sourceNew":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesTo(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesTo(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like WhitespaceAnalyzer */\n  public void testWhitespace() throws Exception {\n    Analyzer a = new MockAnalyzer(random());\n    assertAnalyzesTo(a, \"A bc defg hiJklmn opqrstuv wxy z \",\n        new String[] { \"a\", \"bc\", \"defg\", \"hijklmn\", \"opqrstuv\", \"wxy\", \"z\" });\n    assertAnalyzesTo(a, \"aba cadaba shazam\",\n        new String[] { \"aba\", \"cadaba\", \"shazam\" });\n    assertAnalyzesTo(a, \"break on whitespace\",\n        new String[] { \"break\", \"on\", \"whitespace\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}