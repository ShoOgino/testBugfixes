{"path":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance1().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance1().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance1().mjava","sourceNew":"  public void testGetDistance1() {\n    StringDistance nsd = new NGramDistance(1);\n    float d = nsd.getDistance(\"al\", \"al\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"a\", \"a\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"b\", \"a\");\n    assertEquals(d,0.0f,0.001);\n    d = nsd.getDistance(\"martha\", \"marhta\");\n    assertEquals(d,0.6666,0.001);\n    d = nsd.getDistance(\"jones\", \"johnson\");\n    assertEquals(d,0.4285,0.001);\n    d = nsd.getDistance(\"natural\", \"contrary\");\n    assertEquals(d,0.25,0.001);\n    d = nsd.getDistance(\"abcvwxyz\", \"cabvwxyz\");\n    assertEquals(d,0.75,0.001);    \n    d = nsd.getDistance(\"dwayne\", \"duane\");\n    assertEquals(d,0.666,0.001);\n    d = nsd.getDistance(\"dixon\", \"dicksonx\");\n    assertEquals(d,0.5,0.001);\n    d = nsd.getDistance(\"six\", \"ten\");\n    assertEquals(d,0,0.001);\n    float d1 = nsd.getDistance(\"zac ephron\", \"zac efron\");\n    float d2 = nsd.getDistance(\"zac ephron\", \"kai ephron\");\n    assertEquals(d1,d2,0.001);\n    d1 = nsd.getDistance(\"brittney spears\", \"britney spears\");\n    d2 = nsd.getDistance(\"brittney spears\", \"brittney startzman\");\n    assertTrue(d1 > d2);\n    d1 = nsd.getDistance(\"12345678\", \"12890678\");\n    d2 = nsd.getDistance(\"12345678\", \"72385698\");\n    assertEquals(d1,d2,001);\n  }\n\n","sourceOld":"  public void testGetDistance1() {\n    StringDistance nsd = new NGramDistance(1);\n    float d = nsd.getDistance(\"al\", \"al\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"a\", \"a\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"b\", \"a\");\n    assertEquals(d,0.0f,0.001);\n    d = nsd.getDistance(\"martha\", \"marhta\");\n    assertEquals(d,0.6666,0.001);\n    d = nsd.getDistance(\"jones\", \"johnson\");\n    assertEquals(d,0.4285,0.001);\n    d = nsd.getDistance(\"natural\", \"contrary\");\n    assertEquals(d,0.25,0.001);\n    d = nsd.getDistance(\"abcvwxyz\", \"cabvwxyz\");\n    assertEquals(d,0.75,0.001);    \n    d = nsd.getDistance(\"dwayne\", \"duane\");\n    assertEquals(d,0.666,0.001);\n    d = nsd.getDistance(\"dixon\", \"dicksonx\");\n    assertEquals(d,0.5,0.001);\n    d = nsd.getDistance(\"six\", \"ten\");\n    assertEquals(d,0,0.001);\n    float d1 = nsd.getDistance(\"zac ephron\", \"zac efron\");\n    float d2 = nsd.getDistance(\"zac ephron\", \"kai ephron\");\n    assertEquals(d1,d2,0.001);\n    d1 = nsd.getDistance(\"brittney spears\", \"britney spears\");\n    d2 = nsd.getDistance(\"brittney spears\", \"brittney startzman\");\n    assertTrue(d1 > d2);\n    d1 = nsd.getDistance(\"12345678\", \"12890678\");\n    d2 = nsd.getDistance(\"12345678\", \"72385698\");\n    assertEquals(d1,d2,001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance1().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance1().mjava","sourceNew":"  public void testGetDistance1() {\n    StringDistance nsd = new NGramDistance(1);\n    float d = nsd.getDistance(\"al\", \"al\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"a\", \"a\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"b\", \"a\");\n    assertEquals(d,0.0f,0.001);\n    d = nsd.getDistance(\"martha\", \"marhta\");\n    assertEquals(d,0.6666,0.001);\n    d = nsd.getDistance(\"jones\", \"johnson\");\n    assertEquals(d,0.4285,0.001);\n    d = nsd.getDistance(\"natural\", \"contrary\");\n    assertEquals(d,0.25,0.001);\n    d = nsd.getDistance(\"abcvwxyz\", \"cabvwxyz\");\n    assertEquals(d,0.75,0.001);    \n    d = nsd.getDistance(\"dwayne\", \"duane\");\n    assertEquals(d,0.666,0.001);\n    d = nsd.getDistance(\"dixon\", \"dicksonx\");\n    assertEquals(d,0.5,0.001);\n    d = nsd.getDistance(\"six\", \"ten\");\n    assertEquals(d,0,0.001);\n    float d1 = nsd.getDistance(\"zac ephron\", \"zac efron\");\n    float d2 = nsd.getDistance(\"zac ephron\", \"kai ephron\");\n    assertEquals(d1,d2,0.001);\n    d1 = nsd.getDistance(\"brittney spears\", \"britney spears\");\n    d2 = nsd.getDistance(\"brittney spears\", \"brittney startzman\");\n    assertTrue(d1 > d2);\n    d1 = nsd.getDistance(\"12345678\", \"12890678\");\n    d2 = nsd.getDistance(\"12345678\", \"72385698\");\n    assertEquals(d1,d2,001);\n  }\n\n","sourceOld":"  public void testGetDistance1() {\n    StringDistance nsd = new NGramDistance(1);\n    float d = nsd.getDistance(\"al\", \"al\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"a\", \"a\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"b\", \"a\");\n    assertEquals(d,0.0f,0.001);\n    d = nsd.getDistance(\"martha\", \"marhta\");\n    assertEquals(d,0.6666,0.001);\n    d = nsd.getDistance(\"jones\", \"johnson\");\n    assertEquals(d,0.4285,0.001);\n    d = nsd.getDistance(\"natural\", \"contrary\");\n    assertEquals(d,0.25,0.001);\n    d = nsd.getDistance(\"abcvwxyz\", \"cabvwxyz\");\n    assertEquals(d,0.75,0.001);    \n    d = nsd.getDistance(\"dwayne\", \"duane\");\n    assertEquals(d,0.666,0.001);\n    d = nsd.getDistance(\"dixon\", \"dicksonx\");\n    assertEquals(d,0.5,0.001);\n    d = nsd.getDistance(\"six\", \"ten\");\n    assertEquals(d,0,0.001);\n    float d1 = nsd.getDistance(\"zac ephron\", \"zac efron\");\n    float d2 = nsd.getDistance(\"zac ephron\", \"kai ephron\");\n    assertEquals(d1,d2,0.001);\n    d1 = nsd.getDistance(\"brittney spears\", \"britney spears\");\n    d2 = nsd.getDistance(\"brittney spears\", \"brittney startzman\");\n    assertTrue(d1 > d2);\n    d1 = nsd.getDistance(\"12345678\", \"12890678\");\n    d2 = nsd.getDistance(\"12345678\", \"72385698\");\n    assertEquals(d1,d2,001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance1().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance1().mjava","sourceNew":"  public void testGetDistance1() {\n    StringDistance nsd = new NGramDistance(1);\n    float d = nsd.getDistance(\"al\", \"al\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"a\", \"a\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"b\", \"a\");\n    assertEquals(d,0.0f,0.001);\n    d = nsd.getDistance(\"martha\", \"marhta\");\n    assertEquals(d,0.6666,0.001);\n    d = nsd.getDistance(\"jones\", \"johnson\");\n    assertEquals(d,0.4285,0.001);\n    d = nsd.getDistance(\"natural\", \"contrary\");\n    assertEquals(d,0.25,0.001);\n    d = nsd.getDistance(\"abcvwxyz\", \"cabvwxyz\");\n    assertEquals(d,0.75,0.001);    \n    d = nsd.getDistance(\"dwayne\", \"duane\");\n    assertEquals(d,0.666,0.001);\n    d = nsd.getDistance(\"dixon\", \"dicksonx\");\n    assertEquals(d,0.5,0.001);\n    d = nsd.getDistance(\"six\", \"ten\");\n    assertEquals(d,0,0.001);\n    float d1 = nsd.getDistance(\"zac ephron\", \"zac efron\");\n    float d2 = nsd.getDistance(\"zac ephron\", \"kai ephron\");\n    assertEquals(d1,d2,0.001);\n    d1 = nsd.getDistance(\"brittney spears\", \"britney spears\");\n    d2 = nsd.getDistance(\"brittney spears\", \"brittney startzman\");\n    assertTrue(d1 > d2);\n    d1 = nsd.getDistance(\"12345678\", \"12890678\");\n    d2 = nsd.getDistance(\"12345678\", \"72385698\");\n    assertEquals(d1,d2,001);\n  }\n\n","sourceOld":"  public void testGetDistance1() {\n    StringDistance nsd = new NGramDistance(1);\n    float d = nsd.getDistance(\"al\", \"al\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"a\", \"a\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"b\", \"a\");\n    assertEquals(d,0.0f,0.001);\n    d = nsd.getDistance(\"martha\", \"marhta\");\n    assertEquals(d,0.6666,0.001);\n    d = nsd.getDistance(\"jones\", \"johnson\");\n    assertEquals(d,0.4285,0.001);\n    d = nsd.getDistance(\"natural\", \"contrary\");\n    assertEquals(d,0.25,0.001);\n    d = nsd.getDistance(\"abcvwxyz\", \"cabvwxyz\");\n    assertEquals(d,0.75,0.001);    \n    d = nsd.getDistance(\"dwayne\", \"duane\");\n    assertEquals(d,0.666,0.001);\n    d = nsd.getDistance(\"dixon\", \"dicksonx\");\n    assertEquals(d,0.5,0.001);\n    d = nsd.getDistance(\"six\", \"ten\");\n    assertEquals(d,0,0.001);\n    float d1 = nsd.getDistance(\"zac ephron\", \"zac efron\");\n    float d2 = nsd.getDistance(\"zac ephron\", \"kai ephron\");\n    assertEquals(d1,d2,0.001);\n    d1 = nsd.getDistance(\"brittney spears\", \"britney spears\");\n    d2 = nsd.getDistance(\"brittney spears\", \"brittney startzman\");\n    assertTrue(d1 > d2);\n    d1 = nsd.getDistance(\"12345678\", \"12890678\");\n    d2 = nsd.getDistance(\"12345678\", \"72385698\");\n    assertEquals(d1,d2,001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance1().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance1().mjava","sourceNew":"  public void testGetDistance1() {\n    StringDistance nsd = new NGramDistance(1);\n    float d = nsd.getDistance(\"al\", \"al\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"a\", \"a\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"b\", \"a\");\n    assertEquals(d,0.0f,0.001);\n    d = nsd.getDistance(\"martha\", \"marhta\");\n    assertEquals(d,0.6666,0.001);\n    d = nsd.getDistance(\"jones\", \"johnson\");\n    assertEquals(d,0.4285,0.001);\n    d = nsd.getDistance(\"natural\", \"contrary\");\n    assertEquals(d,0.25,0.001);\n    d = nsd.getDistance(\"abcvwxyz\", \"cabvwxyz\");\n    assertEquals(d,0.75,0.001);    \n    d = nsd.getDistance(\"dwayne\", \"duane\");\n    assertEquals(d,0.666,0.001);\n    d = nsd.getDistance(\"dixon\", \"dicksonx\");\n    assertEquals(d,0.5,0.001);\n    d = nsd.getDistance(\"six\", \"ten\");\n    assertEquals(d,0,0.001);\n    float d1 = nsd.getDistance(\"zac ephron\", \"zac efron\");\n    float d2 = nsd.getDistance(\"zac ephron\", \"kai ephron\");\n    assertEquals(d1,d2,0.001);\n    d1 = nsd.getDistance(\"brittney spears\", \"britney spears\");\n    d2 = nsd.getDistance(\"brittney spears\", \"brittney startzman\");\n    assertTrue(d1 > d2);\n    d1 = nsd.getDistance(\"12345678\", \"12890678\");\n    d2 = nsd.getDistance(\"12345678\", \"72385698\");\n    assertEquals(d1,d2,001);\n  }\n\n","sourceOld":"  public void testGetDistance1() {\n    StringDistance nsd = new NGramDistance(1);\n    float d = nsd.getDistance(\"al\", \"al\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"a\", \"a\");\n    assertEquals(d,1.0f,0.001);\n    d = nsd.getDistance(\"b\", \"a\");\n    assertEquals(d,0.0f,0.001);\n    d = nsd.getDistance(\"martha\", \"marhta\");\n    assertEquals(d,0.6666,0.001);\n    d = nsd.getDistance(\"jones\", \"johnson\");\n    assertEquals(d,0.4285,0.001);\n    d = nsd.getDistance(\"natural\", \"contrary\");\n    assertEquals(d,0.25,0.001);\n    d = nsd.getDistance(\"abcvwxyz\", \"cabvwxyz\");\n    assertEquals(d,0.75,0.001);    \n    d = nsd.getDistance(\"dwayne\", \"duane\");\n    assertEquals(d,0.666,0.001);\n    d = nsd.getDistance(\"dixon\", \"dicksonx\");\n    assertEquals(d,0.5,0.001);\n    d = nsd.getDistance(\"six\", \"ten\");\n    assertEquals(d,0,0.001);\n    float d1 = nsd.getDistance(\"zac ephron\", \"zac efron\");\n    float d2 = nsd.getDistance(\"zac ephron\", \"kai ephron\");\n    assertEquals(d1,d2,0.001);\n    d1 = nsd.getDistance(\"brittney spears\", \"britney spears\");\n    d2 = nsd.getDistance(\"brittney spears\", \"brittney startzman\");\n    assertTrue(d1 > d2);\n    d1 = nsd.getDistance(\"12345678\", \"12890678\");\n    d2 = nsd.getDistance(\"12345678\", \"72385698\");\n    assertEquals(d1,d2,001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e230a61047bc041516c811baa08a7174d6f8322a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["9454a6510e2db155fb01faa5c049b06ece95fab9","e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["9454a6510e2db155fb01faa5c049b06ece95fab9","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}