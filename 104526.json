{"path":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,int,SolrClient,String).mjava","commits":[{"id":"e7da9d8536c11576df10e348efa79d2739170936","date":1509475399,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,int,SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,int,SolrClient,String).mjava","sourceNew":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   int maxShardsPerNode, SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr,\n            MAX_SHARDS_PER_NODE, maxShardsPerNode),\n        client, \"conf1\");\n  }\n\n","sourceOld":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   int maxShardsPerNode, SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr,\n            MAX_SHARDS_PER_NODE, maxShardsPerNode),\n        client, \"conf1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d","date":1509475828,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,int,SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,int,SolrClient,String).mjava","sourceNew":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   int maxShardsPerNode, SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr,\n            MAX_SHARDS_PER_NODE, maxShardsPerNode),\n        client, \"conf1\");\n  }\n\n","sourceOld":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   int maxShardsPerNode, SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr,\n            MAX_SHARDS_PER_NODE, maxShardsPerNode),\n        client, \"conf1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde","date":1509748659,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,int,SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,int,SolrClient,String).mjava","sourceNew":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   int maxShardsPerNode, SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr,\n            MAX_SHARDS_PER_NODE, maxShardsPerNode),\n        client, \"conf1\");\n  }\n\n","sourceOld":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   int maxShardsPerNode, SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr,\n            MAX_SHARDS_PER_NODE, maxShardsPerNode),\n        client, \"conf1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,int,SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,int,SolrClient,String).mjava","sourceNew":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   int maxShardsPerNode, SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr,\n            MAX_SHARDS_PER_NODE, maxShardsPerNode),\n        client, \"conf1\");\n  }\n\n","sourceOld":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   int maxShardsPerNode, SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr,\n            MAX_SHARDS_PER_NODE, maxShardsPerNode),\n        client, \"conf1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,SolrClient,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/cdcr/BaseCdcrDistributedZkTest#createCollection(Map[String,List[Integer]],String,int,int,int,SolrClient,String).mjava","sourceNew":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr),\n        client, \"conf1\");\n  }\n\n","sourceOld":"  private CollectionAdminResponse createCollection(Map<String, List<Integer>> collectionInfos,\n                                                   String collectionName, int numShards, int replicationFactor,\n                                                   int maxShardsPerNode, SolrClient client, String createNodeSetStr)\n      throws SolrServerException, IOException {\n    return createCollection(collectionInfos, collectionName,\n        Utils.makeMap(\n            NUM_SLICES, numShards,\n            REPLICATION_FACTOR, replicationFactor,\n            CREATE_NODE_SET, createNodeSetStr,\n            MAX_SHARDS_PER_NODE, maxShardsPerNode),\n        client, \"conf1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d"],"e7da9d8536c11576df10e348efa79d2739170936":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d","fba58147c9753bb58bbfbd2ebbbf02aecc1eafde"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d":["e7da9d8536c11576df10e348efa79d2739170936"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"]},"commit2Childs":{"fba58147c9753bb58bbfbd2ebbbf02aecc1eafde":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"e7da9d8536c11576df10e348efa79d2739170936":["1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e7da9d8536c11576df10e348efa79d2739170936"],"1a885a9bb91342e3cf8bfcf53610ab8d6307ef3d":["fba58147c9753bb58bbfbd2ebbbf02aecc1eafde","d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}