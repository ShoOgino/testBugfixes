{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene80/TestIndexedDISI#assertAdvanceExactRandomized(IndexedDISI,BitSetIterator,int,int).mjava","commits":[{"id":"03e17b020972a0d6e8d6823f545571a66646a167","date":1547847724,"type":0,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene80/TestIndexedDISI#assertAdvanceExactRandomized(IndexedDISI,BitSetIterator,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void assertAdvanceExactRandomized(IndexedDISI disi, BitSetIterator disi2, int disi2length, int step)\n      throws IOException {\n    int index = -1;\n    for (int target = 0; target < disi2length; ) {\n      target += TestUtil.nextInt(random(), 0, step);\n      int doc = disi2.docID();\n      while (doc < target) {\n        doc = disi2.nextDoc();\n        index++;\n      }\n\n      boolean exists = disi.advanceExact(target);\n      assertEquals(doc == target, exists);\n      if (exists) {\n        assertEquals(index, disi.index());\n      } else if (random().nextBoolean()) {\n        assertEquals(doc, disi.nextDoc());\n        // This is a bit strange when doc == NO_MORE_DOCS as the index overcounts in the disi2 while-loop\n        assertEquals(index, disi.index());\n        target = doc;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene80/TestIndexedDISI#assertAdvanceExactRandomized(IndexedDISI,BitSetIterator,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void assertAdvanceExactRandomized(IndexedDISI disi, BitSetIterator disi2, int disi2length, int step)\n      throws IOException {\n    int index = -1;\n    for (int target = 0; target < disi2length; ) {\n      target += TestUtil.nextInt(random(), 0, step);\n      int doc = disi2.docID();\n      while (doc < target) {\n        doc = disi2.nextDoc();\n        index++;\n      }\n\n      boolean exists = disi.advanceExact(target);\n      assertEquals(doc == target, exists);\n      if (exists) {\n        assertEquals(index, disi.index());\n      } else if (random().nextBoolean()) {\n        assertEquals(doc, disi.nextDoc());\n        // This is a bit strange when doc == NO_MORE_DOCS as the index overcounts in the disi2 while-loop\n        assertEquals(index, disi.index());\n        target = doc;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"617d6d4150e0fb2acef8980ce51e3b8e628fb200","date":1580326292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene80/TestIndexedDISI#assertAdvanceExactRandomized(IndexedDISI,BitSetIterator,int,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene80/TestIndexedDISI#assertAdvanceExactRandomized(IndexedDISI,BitSetIterator,int,int).mjava","sourceNew":"  private void assertAdvanceExactRandomized(IndexedDISI disi, BitSetIterator disi2, int disi2length, int step)\n      throws IOException {\n    int index = -1;\n    Random random = random();\n    for (int target = 0; target < disi2length; ) {\n      target += TestUtil.nextInt(random, 0, step);\n      int doc = disi2.docID();\n      while (doc < target) {\n        doc = disi2.nextDoc();\n        index++;\n      }\n\n      boolean exists = disi.advanceExact(target);\n      assertEquals(doc == target, exists);\n      if (exists) {\n        assertEquals(index, disi.index());\n      } else if (random.nextBoolean()) {\n        assertEquals(doc, disi.nextDoc());\n        // This is a bit strange when doc == NO_MORE_DOCS as the index overcounts in the disi2 while-loop\n        assertEquals(index, disi.index());\n        target = doc;\n      }\n    }\n  }\n\n","sourceOld":"  private void assertAdvanceExactRandomized(IndexedDISI disi, BitSetIterator disi2, int disi2length, int step)\n      throws IOException {\n    int index = -1;\n    for (int target = 0; target < disi2length; ) {\n      target += TestUtil.nextInt(random(), 0, step);\n      int doc = disi2.docID();\n      while (doc < target) {\n        doc = disi2.nextDoc();\n        index++;\n      }\n\n      boolean exists = disi.advanceExact(target);\n      assertEquals(doc == target, exists);\n      if (exists) {\n        assertEquals(index, disi.index());\n      } else if (random().nextBoolean()) {\n        assertEquals(doc, disi.nextDoc());\n        // This is a bit strange when doc == NO_MORE_DOCS as the index overcounts in the disi2 while-loop\n        assertEquals(index, disi.index());\n        target = doc;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e17b020972a0d6e8d6823f545571a66646a167":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","03e17b020972a0d6e8d6823f545571a66646a167"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"617d6d4150e0fb2acef8980ce51e3b8e628fb200":["03e17b020972a0d6e8d6823f545571a66646a167"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["617d6d4150e0fb2acef8980ce51e3b8e628fb200"]},"commit2Childs":{"03e17b020972a0d6e8d6823f545571a66646a167":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","617d6d4150e0fb2acef8980ce51e3b8e628fb200"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03e17b020972a0d6e8d6823f545571a66646a167","c89f1ef80a9432f4eabaeda9a1e135cd72e60836"],"617d6d4150e0fb2acef8980ce51e3b8e628fb200":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}