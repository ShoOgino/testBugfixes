{"path":"lucene/core/src/java/org/apache/lucene/index/IndexingChain.PerField#finish(int).mjava","commits":[{"id":"7a6f8af01d9b3067b143bbdc0a492720e2af97cf","date":1600157724,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexingChain.PerField#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.PerField#finish(int).mjava","sourceNew":"    public void finish(int docID) throws IOException {\n      if (fieldInfo.omitsNorms() == false) {\n        long normValue;\n        if (invertState.length == 0) {\n          // the field exists in this document, but it did not have\n          // any indexed tokens, so we assign a default value of zero\n          // to the norm\n          normValue = 0;\n        } else {\n          normValue = similarity.computeNorm(invertState);\n          if (normValue == 0) {\n            throw new IllegalStateException(\"Similarity \" + similarity + \" return 0 for non-empty field\");\n          }\n        }\n        norms.addValue(docID, normValue);\n      }\n\n      termsHashPerField.finish();\n    }\n\n","sourceOld":"    public void finish(int docID) throws IOException {\n      if (fieldInfo.omitsNorms() == false) {\n        long normValue;\n        if (invertState.length == 0) {\n          // the field exists in this document, but it did not have\n          // any indexed tokens, so we assign a default value of zero\n          // to the norm\n          normValue = 0;\n        } else {\n          normValue = similarity.computeNorm(invertState);\n          if (normValue == 0) {\n            throw new IllegalStateException(\"Similarity \" + similarity + \" return 0 for non-empty field\");\n          }\n        }\n        norms.addValue(docID, normValue);\n      }\n\n      termsHashPerField.finish();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"680b6449f09827f58fe987aff279e014c311d966","date":1600247985,"type":1,"author":"noblepaul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexingChain.PerField#finish(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.PerField#finish(int).mjava","sourceNew":"    public void finish(int docID) throws IOException {\n      if (fieldInfo.omitsNorms() == false) {\n        long normValue;\n        if (invertState.length == 0) {\n          // the field exists in this document, but it did not have\n          // any indexed tokens, so we assign a default value of zero\n          // to the norm\n          normValue = 0;\n        } else {\n          normValue = similarity.computeNorm(invertState);\n          if (normValue == 0) {\n            throw new IllegalStateException(\"Similarity \" + similarity + \" return 0 for non-empty field\");\n          }\n        }\n        norms.addValue(docID, normValue);\n      }\n\n      termsHashPerField.finish();\n    }\n\n","sourceOld":"    public void finish(int docID) throws IOException {\n      if (fieldInfo.omitsNorms() == false) {\n        long normValue;\n        if (invertState.length == 0) {\n          // the field exists in this document, but it did not have\n          // any indexed tokens, so we assign a default value of zero\n          // to the norm\n          normValue = 0;\n        } else {\n          normValue = similarity.computeNorm(invertState);\n          if (normValue == 0) {\n            throw new IllegalStateException(\"Similarity \" + similarity + \" return 0 for non-empty field\");\n          }\n        }\n        norms.addValue(docID, normValue);\n      }\n\n      termsHashPerField.finish();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"680b6449f09827f58fe987aff279e014c311d966":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a6f8af01d9b3067b143bbdc0a492720e2af97cf"],"7a6f8af01d9b3067b143bbdc0a492720e2af97cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["680b6449f09827f58fe987aff279e014c311d966"]},"commit2Childs":{"680b6449f09827f58fe987aff279e014c311d966":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7a6f8af01d9b3067b143bbdc0a492720e2af97cf":["680b6449f09827f58fe987aff279e014c311d966"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["680b6449f09827f58fe987aff279e014c311d966","7a6f8af01d9b3067b143bbdc0a492720e2af97cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}