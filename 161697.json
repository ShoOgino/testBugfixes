{"path":"modules/spatial-TEMP/src/java/org/apache/lucene/spatial/base/query/SpatialArgs#getDistPrecision().mjava","commits":[{"id":"33ee89d976c91275e5be5da438ca0977b1c5b90f","date":1329808149,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial-TEMP/src/java/org/apache/lucene/spatial/base/query/SpatialArgs#getDistPrecision().mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/base/query/SpatialArgs#getDistPrecision().mjava","sourceNew":"  /**\r\n   * The fraction of the distance from the center of the query shape to its nearest edge that is considered acceptable\r\n   * error. The algorithm for computing the distance to the nearest edge is actually a little different. It normalizes\r\n   * the shape to a square given it's bounding box area:\r\n   * <pre>sqrt(shape.bbox.area)/2</pre>\r\n   * And the error distance is beyond the shape such that the shape is a minimum shape.\r\n   */\r\n  public Double getDistPrecision() {\r\n    return distPrecision;\r\n  }\r\n\n","sourceOld":"  /**\r\n   * The fraction of the distance from the center of the query shape to its nearest edge that is considered acceptable\r\n   * error. The algorithm for computing the distance to the nearest edge is actually a little different. It normalizes\r\n   * the shape to a square given it's bounding box area:\r\n   * <pre>sqrt(shape.bbox.area)/2</pre>\r\n   * And the error distance is beyond the shape such that the shape is a minimum shape.\r\n   */\r\n  public Double getDistPrecision() {\r\n    return distPrecision;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2047ba81272a0c4edeb11b1c7810ee23ba73502","date":1329808655,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/strategy/src/java/org/apache/lucene/spatial/base/query/SpatialArgs#getDistPrecision().mjava","pathOld":"modules/spatial-TEMP/src/java/org/apache/lucene/spatial/base/query/SpatialArgs#getDistPrecision().mjava","sourceNew":"  /**\r\n   * The fraction of the distance from the center of the query shape to its nearest edge that is considered acceptable\r\n   * error. The algorithm for computing the distance to the nearest edge is actually a little different. It normalizes\r\n   * the shape to a square given it's bounding box area:\r\n   * <pre>sqrt(shape.bbox.area)/2</pre>\r\n   * And the error distance is beyond the shape such that the shape is a minimum shape.\r\n   */\r\n  public Double getDistPrecision() {\r\n    return distPrecision;\r\n  }\r\n\n","sourceOld":"  /**\r\n   * The fraction of the distance from the center of the query shape to its nearest edge that is considered acceptable\r\n   * error. The algorithm for computing the distance to the nearest edge is actually a little different. It normalizes\r\n   * the shape to a square given it's bounding box area:\r\n   * <pre>sqrt(shape.bbox.area)/2</pre>\r\n   * And the error distance is beyond the shape such that the shape is a minimum shape.\r\n   */\r\n  public Double getDistPrecision() {\r\n    return distPrecision;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":["33ee89d976c91275e5be5da438ca0977b1c5b90f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33ee89d976c91275e5be5da438ca0977b1c5b90f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c2047ba81272a0c4edeb11b1c7810ee23ba73502":[],"33ee89d976c91275e5be5da438ca0977b1c5b90f":["c2047ba81272a0c4edeb11b1c7810ee23ba73502"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33ee89d976c91275e5be5da438ca0977b1c5b90f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c2047ba81272a0c4edeb11b1c7810ee23ba73502","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}