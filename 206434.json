{"path":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/regex/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(new Field(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(new Field(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(new Field(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(new Field(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(new Field(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(new Field(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(new Field(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(new Field(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(new Field(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(new Field(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(new Field(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(new Field(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(new Field(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(new Field(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(new Field(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(new Field(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(new Field(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(new Field(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(new Field(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(new Field(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b","date":1313816278,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/regex/TestSpanRegexQuery#createRAMDirectories().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/regex/TestSpanRegexQuery#createRAMDirectories().mjava","sourceNew":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","sourceOld":"  private void createRAMDirectories() throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    // creating a document to store\n    Document lDoc = new Document();\n    lDoc.add(newField(\"field\", \"a1 b1\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating a document to store\n    Document lDoc2 = new Document();\n    lDoc2.add(newField(\"field\", \"a2 b2\", Field.Store.NO,\n        Field.Index.ANALYZED_NO_NORMS));\n\n    // creating first index writer\n    IndexWriter writerA = new IndexWriter(indexStoreA, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerA.addDocument(lDoc);\n    writerA.optimize();\n    writerA.close();\n\n    // creating second index writer\n    IndexWriter writerB = new IndexWriter(indexStoreB, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    writerB.addDocument(lDoc2);\n    writerB.optimize();\n    writerB.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["d572389229127c297dd1fa5ce4758e1cec41e799"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["132903c28af3aa6f67284b78de91c0f0a99488c2","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","132903c28af3aa6f67284b78de91c0f0a99488c2"],"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["132903c28af3aa6f67284b78de91c0f0a99488c2","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["d572389229127c297dd1fa5ce4758e1cec41e799"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","f9fdc0777b84633cc8cfa8995ff5b0d411e4515b","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}