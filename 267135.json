{"path":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = (IndexInput) one.clone();\n    IndexInput three = (IndexInput) two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedExveption\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = (IndexInput) one.clone();\n    IndexInput three = (IndexInput) two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedExveption\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = (IndexInput) one.clone();\n    IndexInput three = (IndexInput) two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedExveption\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = (IndexInput) one.clone();\n    IndexInput three = (IndexInput) two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedExveption\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7460755aa94143153400f49c8ac2746f5d092e1a","date":1345536974,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedExveption\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = (IndexInput) one.clone();\n    IndexInput three = (IndexInput) two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedExveption\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedExveption\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = (IndexInput) one.clone();\n    IndexInput three = (IndexInput) two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedExveption\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff981809447a8d1a2638507b11c6e6a944bf0f2b","date":1347105584,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedExveption\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    mmapDir.close();\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedExveption\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"16352a5354766214a2b62fe2ead0551e68aad9cc","date":1347106607,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    mmapDir.close();\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedExveption\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    mmapDir.close();\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"682ad99732dde07d803679569727049becfbc16a","date":1347107736,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    // test double close of master:\n    one.close();\n    mmapDir.close();\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    mmapDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    // test double close of master:\n    one.close();\n    mmapDir.close();\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(_TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    // test double close of master:\n    one.close();\n    mmapDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(TestUtil.createTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    // test double close of master:\n    one.close();\n    mmapDir.close();\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    // test double close of master:\n    one.close();\n    mmapDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    // test double close of master:\n    one.close();\n    mmapDir.close();\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(TestUtil.createTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    // test double close of master:\n    one.close();\n    mmapDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    // test double close of master:\n    one.close();\n    mmapDir.close();\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(TestUtil.getTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    // test double close of master:\n    one.close();\n    mmapDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMultiMMap#testCloneSafety().mjava","sourceNew":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    expectThrows(AlreadyClosedException.class, () -> {\n      one.readVInt();\n    });\n    expectThrows(AlreadyClosedException.class, () -> {\n      two.readVInt();\n    });\n    expectThrows(AlreadyClosedException.class, () -> {\n      three.readVInt();\n    });\n\n    two.close();\n    three.close();\n    // test double close of master:\n    one.close();\n    mmapDir.close();\n  }\n\n","sourceOld":"  public void testCloneSafety() throws Exception {\n    MMapDirectory mmapDir = new MMapDirectory(createTempDir(\"testCloneSafety\"));\n    IndexOutput io = mmapDir.createOutput(\"bytes\", newIOContext(random()));\n    io.writeVInt(5);\n    io.close();\n    IndexInput one = mmapDir.openInput(\"bytes\", IOContext.DEFAULT);\n    IndexInput two = one.clone();\n    IndexInput three = two.clone(); // clone of clone\n    one.close();\n    try {\n      one.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      two.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    try {\n      three.readVInt();\n      fail(\"Must throw AlreadyClosedException\");\n    } catch (AlreadyClosedException ignore) {\n      // pass\n    }\n    two.close();\n    three.close();\n    // test double close of master:\n    one.close();\n    mmapDir.close();\n  }\n\n","bugFix":["16352a5354766214a2b62fe2ead0551e68aad9cc","0c0b917a986a3f3db7d1038c139eb39a43e984cb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"16352a5354766214a2b62fe2ead0551e68aad9cc":["ff981809447a8d1a2638507b11c6e6a944bf0f2b"],"001b25b42373b22a52f399dbf072f1224632e8e6":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","7460755aa94143153400f49c8ac2746f5d092e1a"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["682ad99732dde07d803679569727049becfbc16a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"05fe562aa248790944d43cdd478f512572835ba0":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"ff981809447a8d1a2638507b11c6e6a944bf0f2b":["7460755aa94143153400f49c8ac2746f5d092e1a"],"7460755aa94143153400f49c8ac2746f5d092e1a":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["d0d579490a72f2e6297eaa648940611234c57cf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"682ad99732dde07d803679569727049becfbc16a":["16352a5354766214a2b62fe2ead0551e68aad9cc"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"16352a5354766214a2b62fe2ead0551e68aad9cc":["682ad99732dde07d803679569727049becfbc16a"],"001b25b42373b22a52f399dbf072f1224632e8e6":[],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["05fe562aa248790944d43cdd478f512572835ba0"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0d579490a72f2e6297eaa648940611234c57cf1":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"ff981809447a8d1a2638507b11c6e6a944bf0f2b":["16352a5354766214a2b62fe2ead0551e68aad9cc"],"7460755aa94143153400f49c8ac2746f5d092e1a":["001b25b42373b22a52f399dbf072f1224632e8e6","ff981809447a8d1a2638507b11c6e6a944bf0f2b"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["001b25b42373b22a52f399dbf072f1224632e8e6","7460755aa94143153400f49c8ac2746f5d092e1a"],"682ad99732dde07d803679569727049becfbc16a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}