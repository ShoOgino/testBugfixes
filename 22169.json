{"path":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#concatFields(SolrInputDocument).mjava","commits":[{"id":"3ff1a276d1c94e9393032df34ad607eda09ee3a6","date":1417803750,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#concatFields(SolrInputDocument).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LanguageIdentifierUpdateProcessor#concatFields(SolrInputDocument,String[]).mjava","sourceNew":"  /**\n   * Concatenates content from multiple fields\n   */\n  protected String concatFields(SolrInputDocument doc) {\n    StringBuilder sb = new StringBuilder(getExpectedSize(doc, inputFields));\n    for (String fieldName : inputFields) {\n      log.debug(\"Appending field \" + fieldName);\n      if (doc.containsKey(fieldName)) {\n        Collection<Object> fieldValues = doc.getFieldValues(fieldName);\n        if (fieldValues != null) {\n          for (Object content : fieldValues) {\n            if (content instanceof String) {\n              String stringContent = (String) content;\n              if (stringContent.length() > maxFieldValueChars) {\n                sb.append(stringContent.substring(0, maxFieldValueChars));\n              } else {\n                sb.append(stringContent);\n}\n              sb.append(\" \");\n              if (sb.length() > maxTotalChars) {\n                sb.setLength(maxTotalChars);\n                break;\n              }\n            } else {\n              log.warn(\"Field \" + fieldName + \" not a String value, not including in detection\");\n            }\n          }\n        }\n      }\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /*\n   * Concatenates content from multiple fields\n   */\n  protected String concatFields(SolrInputDocument doc, String[] fields) {\n    StringBuilder sb = new StringBuilder();\n    for (String fieldName : inputFields) {\n      log.debug(\"Appending field \"+fieldName);\n      if (doc.containsKey(fieldName)) {\n        Collection<Object> fieldValues = doc.getFieldValues(fieldName);\n        if (fieldValues != null) {\n          for (Object content : fieldValues) {\n            if (content instanceof String) {\n              sb.append((String) content);\n              sb.append(\" \");\n            } else {\n              log.warn(\"Field \" + fieldName + \" not a String value, not including in detection\");\n            }\n          }\n        }\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bac376b231e863caf32616640dab691c011a72a3","date":1516206557,"type":5,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/LanguageIdentifierUpdateProcessor#concatFields(SolrInputDocument).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#concatFields(SolrInputDocument).mjava","sourceNew":"  /**\n   * Concatenates content from multiple fields\n   */\n  protected String concatFields(SolrInputDocument doc) {\n    StringBuilder sb = new StringBuilder(getExpectedSize(doc, inputFields));\n    for (String fieldName : inputFields) {\n      log.debug(\"Appending field \" + fieldName);\n      if (doc.containsKey(fieldName)) {\n        Collection<Object> fieldValues = doc.getFieldValues(fieldName);\n        if (fieldValues != null) {\n          for (Object content : fieldValues) {\n            if (content instanceof String) {\n              String stringContent = (String) content;\n              if (stringContent.length() > maxFieldValueChars) {\n                sb.append(stringContent.substring(0, maxFieldValueChars));\n              } else {\n                sb.append(stringContent);\n              }\n              sb.append(\" \");\n              if (sb.length() > maxTotalChars) {\n                sb.setLength(maxTotalChars);\n                break;\n              }\n            } else {\n              log.warn(\"Field \" + fieldName + \" not a String value, not including in detection\");\n            }\n          }\n        }\n      }\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /**\n   * Concatenates content from multiple fields\n   */\n  protected String concatFields(SolrInputDocument doc) {\n    StringBuilder sb = new StringBuilder(getExpectedSize(doc, inputFields));\n    for (String fieldName : inputFields) {\n      log.debug(\"Appending field \" + fieldName);\n      if (doc.containsKey(fieldName)) {\n        Collection<Object> fieldValues = doc.getFieldValues(fieldName);\n        if (fieldValues != null) {\n          for (Object content : fieldValues) {\n            if (content instanceof String) {\n              String stringContent = (String) content;\n              if (stringContent.length() > maxFieldValueChars) {\n                sb.append(stringContent.substring(0, maxFieldValueChars));\n              } else {\n                sb.append(stringContent);\n}\n              sb.append(\" \");\n              if (sb.length() > maxTotalChars) {\n                sb.setLength(maxTotalChars);\n                break;\n              }\n            } else {\n              log.warn(\"Field \" + fieldName + \" not a String value, not including in detection\");\n            }\n          }\n        }\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#concatFields(SolrInputDocument).mjava","sourceNew":null,"sourceOld":"  /**\n   * Concatenates content from multiple fields\n   */\n  protected String concatFields(SolrInputDocument doc) {\n    StringBuilder sb = new StringBuilder(getExpectedSize(doc, inputFields));\n    for (String fieldName : inputFields) {\n      log.debug(\"Appending field \" + fieldName);\n      if (doc.containsKey(fieldName)) {\n        Collection<Object> fieldValues = doc.getFieldValues(fieldName);\n        if (fieldValues != null) {\n          for (Object content : fieldValues) {\n            if (content instanceof String) {\n              String stringContent = (String) content;\n              if (stringContent.length() > maxFieldValueChars) {\n                sb.append(stringContent.substring(0, maxFieldValueChars));\n              } else {\n                sb.append(stringContent);\n}\n              sb.append(\" \");\n              if (sb.length() > maxTotalChars) {\n                sb.setLength(maxTotalChars);\n                break;\n              }\n            } else {\n              log.warn(\"Field \" + fieldName + \" not a String value, not including in detection\");\n            }\n          }\n        }\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["3ff1a276d1c94e9393032df34ad607eda09ee3a6","bac376b231e863caf32616640dab691c011a72a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bac376b231e863caf32616640dab691c011a72a3":["3ff1a276d1c94e9393032df34ad607eda09ee3a6"],"3ff1a276d1c94e9393032df34ad607eda09ee3a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bac376b231e863caf32616640dab691c011a72a3":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ff1a276d1c94e9393032df34ad607eda09ee3a6"],"3ff1a276d1c94e9393032df34ad607eda09ee3a6":["b94236357aaa22b76c10629851fe4e376e0cea82","bac376b231e863caf32616640dab691c011a72a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}