{"path":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","commits":[{"id":"a95277e520db8c8310634a988fcf328396a64844","date":1341621148,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test index analysis: at indextime MockCharFilter will\n   * double the 'a', so ab -> aab, and aba -> aabaa\n   * \n   * We run the test twice to make sure reuse is working\n   */\n  public void testIndexAnalysis() {\n    assertQ(\"Index analysis: \",\n       req(\"fl\", \"id\", \"q\", \"content2:aab\", \"sort\", \"id asc\"),\n                \"//*[@numFound='1']\",\n                \"//result/doc[1]/int[@name='id'][.=3]\"\n    );\n    assertQ(\"Index analysis: \",\n        req(\"fl\", \"id\", \"q\", \"content2:aabaa\", \"sort\", \"id asc\"),\n                 \"//*[@numFound='1']\",\n                 \"//result/doc[1]/int[@name='id'][.=4]\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04e7f30683f53928b2fce016e6430c9795caff22","date":1341839598,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test index analysis: at indextime MockCharFilter will\n   * double the 'a', so ab -> aab, and aba -> aabaa\n   * \n   * We run the test twice to make sure reuse is working\n   */\n  public void testIndexAnalysis() {\n    assertQ(\"Index analysis: \",\n       req(\"fl\", \"id\", \"q\", \"content2:aab\", \"sort\", \"id asc\"),\n                \"//*[@numFound='1']\",\n                \"//result/doc[1]/int[@name='id'][.=3]\"\n    );\n    assertQ(\"Index analysis: \",\n        req(\"fl\", \"id\", \"q\", \"content2:aabaa\", \"sort\", \"id asc\"),\n                 \"//*[@numFound='1']\",\n                 \"//result/doc[1]/int[@name='id'][.=4]\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test index analysis: at indextime MockCharFilter will\n   * double the 'a', so ab -> aab, and aba -> aabaa\n   * \n   * We run the test twice to make sure reuse is working\n   */\n  public void testIndexAnalysis() {\n    assertQ(\"Index analysis: \",\n       req(\"fl\", \"id\", \"q\", \"content2:aab\", \"sort\", \"id asc\"),\n                \"//*[@numFound='1']\",\n                \"//result/doc[1]/int[@name='id'][.=3]\"\n    );\n    assertQ(\"Index analysis: \",\n        req(\"fl\", \"id\", \"q\", \"content2:aabaa\", \"sort\", \"id asc\"),\n                 \"//*[@numFound='1']\",\n                 \"//result/doc[1]/int[@name='id'][.=4]\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","date":1423508552,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","sourceNew":"  /**\n   * Test index analysis: at indextime MockCharFilter will\n   * double the 'a', so ab -&gt; aab, and aba -&gt; aabaa\n   * \n   * We run the test twice to make sure reuse is working\n   */\n  public void testIndexAnalysis() {\n    assertQ(\"Index analysis: \",\n       req(\"fl\", \"id\", \"q\", \"content2:aab\", \"sort\", \"id asc\"),\n                \"//*[@numFound='1']\",\n                \"//result/doc[1]/int[@name='id'][.=3]\"\n    );\n    assertQ(\"Index analysis: \",\n        req(\"fl\", \"id\", \"q\", \"content2:aabaa\", \"sort\", \"id asc\"),\n                 \"//*[@numFound='1']\",\n                 \"//result/doc[1]/int[@name='id'][.=4]\"\n    );\n  }\n\n","sourceOld":"  /**\n   * Test index analysis: at indextime MockCharFilter will\n   * double the 'a', so ab -> aab, and aba -> aabaa\n   * \n   * We run the test twice to make sure reuse is working\n   */\n  public void testIndexAnalysis() {\n    assertQ(\"Index analysis: \",\n       req(\"fl\", \"id\", \"q\", \"content2:aab\", \"sort\", \"id asc\"),\n                \"//*[@numFound='1']\",\n                \"//result/doc[1]/int[@name='id'][.=3]\"\n    );\n    assertQ(\"Index analysis: \",\n        req(\"fl\", \"id\", \"q\", \"content2:aabaa\", \"sort\", \"id asc\"),\n                 \"//*[@numFound='1']\",\n                 \"//result/doc[1]/int[@name='id'][.=4]\"\n    );\n  }\n\n","bugFix":["a95277e520db8c8310634a988fcf328396a64844"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","sourceNew":"  /**\n   * Test index analysis: at indextime MockCharFilter will\n   * double the 'a', so ab -&gt; aab, and aba -&gt; aabaa\n   * \n   * We run the test twice to make sure reuse is working\n   */\n  public void testIndexAnalysis() {\n    assertQ(\"Index analysis: \",\n       req(\"fl\", \"id\", \"q\", \"content2:aab\", \"sort\", \"id asc\"),\n                \"//*[@numFound='1']\",\n                \"//result/doc[1]/str[@name='id'][.=3]\"\n    );\n    assertQ(\"Index analysis: \",\n        req(\"fl\", \"id\", \"q\", \"content2:aabaa\", \"sort\", \"id asc\"),\n                 \"//*[@numFound='1']\",\n                 \"//result/doc[1]/str[@name='id'][.=4]\"\n    );\n  }\n\n","sourceOld":"  /**\n   * Test index analysis: at indextime MockCharFilter will\n   * double the 'a', so ab -&gt; aab, and aba -&gt; aabaa\n   * \n   * We run the test twice to make sure reuse is working\n   */\n  public void testIndexAnalysis() {\n    assertQ(\"Index analysis: \",\n       req(\"fl\", \"id\", \"q\", \"content2:aab\", \"sort\", \"id asc\"),\n                \"//*[@numFound='1']\",\n                \"//result/doc[1]/int[@name='id'][.=3]\"\n    );\n    assertQ(\"Index analysis: \",\n        req(\"fl\", \"id\", \"q\", \"content2:aabaa\", \"sort\", \"id asc\"),\n                 \"//*[@numFound='1']\",\n                 \"//result/doc[1]/int[@name='id'][.=4]\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","sourceNew":"  /**\n   * Test index analysis: at indextime MockCharFilter will\n   * double the 'a', so ab -&gt; aab, and aba -&gt; aabaa\n   * \n   * We run the test twice to make sure reuse is working\n   */\n  public void testIndexAnalysis() {\n    assertQ(\"Index analysis: \",\n       req(\"fl\", \"id\", \"q\", \"content2:aab\", \"sort\", \"id asc\"),\n                \"//*[@numFound='1']\",\n                \"//result/doc[1]/str[@name='id'][.=3]\"\n    );\n    assertQ(\"Index analysis: \",\n        req(\"fl\", \"id\", \"q\", \"content2:aabaa\", \"sort\", \"id asc\"),\n                 \"//*[@numFound='1']\",\n                 \"//result/doc[1]/str[@name='id'][.=4]\"\n    );\n  }\n\n","sourceOld":"  /**\n   * Test index analysis: at indextime MockCharFilter will\n   * double the 'a', so ab -&gt; aab, and aba -&gt; aabaa\n   * \n   * We run the test twice to make sure reuse is working\n   */\n  public void testIndexAnalysis() {\n    assertQ(\"Index analysis: \",\n       req(\"fl\", \"id\", \"q\", \"content2:aab\", \"sort\", \"id asc\"),\n                \"//*[@numFound='1']\",\n                \"//result/doc[1]/int[@name='id'][.=3]\"\n    );\n    assertQ(\"Index analysis: \",\n        req(\"fl\", \"id\", \"q\", \"content2:aabaa\", \"sort\", \"id asc\"),\n                 \"//*[@numFound='1']\",\n                 \"//result/doc[1]/int[@name='id'][.=4]\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestCharFilters#testIndexAnalysis().mjava","sourceNew":"  /**\n   * Test index analysis: at indextime MockCharFilter will\n   * double the 'a', so ab -&gt; aab, and aba -&gt; aabaa\n   * \n   * We run the test twice to make sure reuse is working\n   */\n  public void testIndexAnalysis() {\n    assertQ(\"Index analysis: \",\n       req(\"fl\", \"id\", \"q\", \"content2:aab\", \"sort\", \"id asc\"),\n                \"//*[@numFound='1']\",\n                \"//result/doc[1]/str[@name='id'][.=3]\"\n    );\n    assertQ(\"Index analysis: \",\n        req(\"fl\", \"id\", \"q\", \"content2:aabaa\", \"sort\", \"id asc\"),\n                 \"//*[@numFound='1']\",\n                 \"//result/doc[1]/str[@name='id'][.=4]\"\n    );\n  }\n\n","sourceOld":"  /**\n   * Test index analysis: at indextime MockCharFilter will\n   * double the 'a', so ab -&gt; aab, and aba -&gt; aabaa\n   * \n   * We run the test twice to make sure reuse is working\n   */\n  public void testIndexAnalysis() {\n    assertQ(\"Index analysis: \",\n       req(\"fl\", \"id\", \"q\", \"content2:aab\", \"sort\", \"id asc\"),\n                \"//*[@numFound='1']\",\n                \"//result/doc[1]/int[@name='id'][.=3]\"\n    );\n    assertQ(\"Index analysis: \",\n        req(\"fl\", \"id\", \"q\", \"content2:aabaa\", \"sort\", \"id asc\"),\n                 \"//*[@numFound='1']\",\n                 \"//result/doc[1]/int[@name='id'][.=4]\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04e7f30683f53928b2fce016e6430c9795caff22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a95277e520db8c8310634a988fcf328396a64844"],"a95277e520db8c8310634a988fcf328396a64844":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a95277e520db8c8310634a988fcf328396a64844"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["a95277e520db8c8310634a988fcf328396a64844"],"28288370235ed02234a64753cdbf0c6ec096304a":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"04e7f30683f53928b2fce016e6430c9795caff22":[],"a95277e520db8c8310634a988fcf328396a64844":["04e7f30683f53928b2fce016e6430c9795caff22","fe33227f6805edab2036cbb80645cc4e2d1fa424","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04e7f30683f53928b2fce016e6430c9795caff22","a95277e520db8c8310634a988fcf328396a64844","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["04e7f30683f53928b2fce016e6430c9795caff22","fe33227f6805edab2036cbb80645cc4e2d1fa424","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}