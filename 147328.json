{"path":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","commits":[{"id":"2070bf73ffa1039a505000f99ea245884ff19e11","date":1177653367,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Try to run a getter function.  This is usefull because java 1.6 has a few extra\n   * usefull functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 functon, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c434d8dc05a601d515d04f6ee7feb90acb1c645","date":1182706508,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","pathOld":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","sourceNew":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","sourceOld":"  /**\n   * Try to run a getter function.  This is usefull because java 1.6 has a few extra\n   * usefull functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 functon, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","pathOld":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#addGetterIfAvaliable(Object,String,NamedList[Object]).mjava","sourceNew":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","sourceOld":"  /**\n   * Try to run a getter function.  This is useful because java 1.6 has a few extra\n   * useful functions on the <code>OperatingSystemMXBean</code>\n   * \n   * If you are running a sun jvm, there are nice functions in:\n   * UnixOperatingSystemMXBean and com.sun.management.OperatingSystemMXBean\n   * \n   * it is package protected so it can be tested...\n   */\n  static void addGetterIfAvaliable( Object obj, String getter, NamedList<Object> info )\n  {\n    // This is a 1.6 function, so lets do a little magic to *try* to make it work\n    try {\n      String n = Character.toUpperCase( getter.charAt(0) ) + getter.substring( 1 );\n      Method m = obj.getClass().getMethod( \"get\" + n );\n      Object v = m.invoke( obj, (Object[])null );\n      if( v != null ) {\n        info.add( getter, v );\n      }\n    }\n    catch( Exception ex ) {} // don't worry, this only works for 1.6\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5c434d8dc05a601d515d04f6ee7feb90acb1c645":["2070bf73ffa1039a505000f99ea245884ff19e11"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"2070bf73ffa1039a505000f99ea245884ff19e11":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["5c434d8dc05a601d515d04f6ee7feb90acb1c645"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5c434d8dc05a601d515d04f6ee7feb90acb1c645":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["2070bf73ffa1039a505000f99ea245884ff19e11"],"2070bf73ffa1039a505000f99ea245884ff19e11":["5c434d8dc05a601d515d04f6ee7feb90acb1c645"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}