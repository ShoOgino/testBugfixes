{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ede45a461a2dcb573505ed9b6a5182dfebd3688f","date":1353338494,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.dir, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":["6e5adcbe5a27941451fdb6194bcbff96c8630e14"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix,\n                                                    state.termsIndexDivisor);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","date":1377268487,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(state, docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(state, docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbaae1c00d39df2c872bbe043af26d02d3818313","date":1409657064,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n    PostingsReaderBase docsReader = null;\n    PostingsReaderBase pulsingReader = null;\n\n    boolean success = false;\n    try {\n      docsReader = wrappedPostingsBaseFormat.postingsReaderBase(state);\n      pulsingReader = new PulsingPostingsReader(state, docsReader);\n      FieldsProducer ret = new BlockTreeTermsReader(\n                                                    state.directory, state.fieldInfos, state.segmentInfo,\n                                                    pulsingReader,\n                                                    state.context,\n                                                    state.segmentSuffix);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(docsReader, pulsingReader);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"fbaae1c00d39df2c872bbe043af26d02d3818313":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","ede45a461a2dcb573505ed9b6a5182dfebd3688f"],"a45bec74b98f6fc05f52770cfb425739e6563960":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["a45bec74b98f6fc05f52770cfb425739e6563960","1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fbaae1c00d39df2c872bbe043af26d02d3818313"]},"commit2Childs":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"fbaae1c00d39df2c872bbe043af26d02d3818313":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["ede45a461a2dcb573505ed9b6a5182dfebd3688f","d4d69c535930b5cce125cff868d40f6373dc27d4"],"a45bec74b98f6fc05f52770cfb425739e6563960":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["fbaae1c00d39df2c872bbe043af26d02d3818313"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}