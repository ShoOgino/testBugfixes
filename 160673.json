{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(appAnalyzer);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(appAnalyzer);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(Version.LUCENE_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(Version.LUCENE_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(Version.LUCENE_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85722042902595d9b0fbf38b7b57b139bdc12e4b","date":1264953677,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(Version.LUCENE_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(Version.LUCENE_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(Version.LUCENE_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(Version.LUCENE_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(Version.LUCENE_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, appAnalyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    dir = new RAMDirectory();\n    appAnalyzer = new WhitespaceAnalyzer(TEST_VERSION_CURRENT);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, appAnalyzer));\n    int numDocs = 200;\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      String variedFieldValue = variedFieldValues[i % variedFieldValues.length];\n      String repetitiveFieldValue = repetitiveFieldValues[i % repetitiveFieldValues.length];\n      doc.add(new Field(\"variedField\", variedFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"repetitiveField\", repetitiveFieldValue, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(dir, true);\n    protectedAnalyzer = new QueryAutoStopWordAnalyzer(TEST_VERSION_CURRENT, appAnalyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["ba1116b3450a9c1642c89445d131b37344055245"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"4256bc1b3c94786287ccdfc751230374521843cf":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["85722042902595d9b0fbf38b7b57b139bdc12e4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"85722042902595d9b0fbf38b7b57b139bdc12e4b":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"ba1116b3450a9c1642c89445d131b37344055245":["4256bc1b3c94786287ccdfc751230374521843cf"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["4256bc1b3c94786287ccdfc751230374521843cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["85722042902595d9b0fbf38b7b57b139bdc12e4b"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"4256bc1b3c94786287ccdfc751230374521843cf":["ba1116b3450a9c1642c89445d131b37344055245"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"ba1116b3450a9c1642c89445d131b37344055245":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"85722042902595d9b0fbf38b7b57b139bdc12e4b":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}