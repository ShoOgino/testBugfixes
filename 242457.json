{"path":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#setupCluster().mjava","commits":[{"id":"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94","date":1520143025,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      LOG.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9339df295b9162e4c81adbb4da44b5939d27c1ef","date":1520594349,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      LOG.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      LOG.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      LOG.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","bugFix":["8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      if (log.isInfoEnabled()) {\n        log.info(\"Adding proxy for URL: {}. Proxy: {}\", jetty.getBaseUrl(), proxy.getUrl());\n      }\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    System.setProperty(\"solr.directoryFactory\", \"solr.StandardDirectoryFactory\");\n    System.setProperty(\"solr.ulog.numRecordsToKeep\", \"1000\");\n    System.setProperty(\"leaderVoteWait\", \"60000\");\n\n    configureCluster(4)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    // Add proxies\n    proxies = new HashMap<>(cluster.getJettySolrRunners().size());\n    jettys = new HashMap<>();\n    for (JettySolrRunner jetty:cluster.getJettySolrRunners()) {\n      SocketProxy proxy = new SocketProxy();\n      jetty.setProxyPort(proxy.getListenPort());\n      cluster.stopJettySolrRunner(jetty);//TODO: Can we avoid this restart\n      cluster.startJettySolrRunner(jetty);\n      proxy.open(jetty.getBaseUrl().toURI());\n      log.info(\"Adding proxy for URL: \" + jetty.getBaseUrl() + \". Proxy: \" + proxy.getUrl());\n      proxies.put(jetty, proxy);\n      jettys.put(proxy.getUrl(), jetty);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"9339df295b9162e4c81adbb4da44b5939d27c1ef":["8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["9339df295b9162e4c81adbb4da44b5939d27c1ef"]},"commit2Childs":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"9339df295b9162e4c81adbb4da44b5939d27c1ef":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94"],"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94":["9339df295b9162e4c81adbb4da44b5939d27c1ef"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}