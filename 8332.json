{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70Codec#getDocValuesFormatForField(String).mjava","commits":[{"id":"084884d4602f4d1c7411eab29e897e349ce62675","date":1475571034,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70Codec#getDocValuesFormatForField(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene70\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1967bed916cc89da82a1c2085f27976da6d08cbd","date":1475588750,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70Codec#getDocValuesFormatForField(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene70\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70Codec#getDocValuesFormatForField(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene70\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6930fc653c2b86e857fce0af7ec99993593d0d89","date":1535014305,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80Codec#getDocValuesFormatForField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70Codec#getDocValuesFormatForField(String).mjava","sourceNew":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene70\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","sourceOld":"  /** Returns the docvalues format that should be used for writing \n   *  new segments of <code>field</code>.\n   *  \n   *  The default implementation always returns \"Lucene70\".\n   *  <p>\n   *  <b>WARNING:</b> if you subclass, you are responsible for index \n   *  backwards compatibility: future version of Lucene are only \n   *  guaranteed to be able to read the default implementation. \n   */\n  public DocValuesFormat getDocValuesFormatForField(String field) {\n    return defaultDVFormat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1967bed916cc89da82a1c2085f27976da6d08cbd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","084884d4602f4d1c7411eab29e897e349ce62675"],"6930fc653c2b86e857fce0af7ec99993593d0d89":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1967bed916cc89da82a1c2085f27976da6d08cbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6930fc653c2b86e857fce0af7ec99993593d0d89"],"084884d4602f4d1c7411eab29e897e349ce62675":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1967bed916cc89da82a1c2085f27976da6d08cbd":["6930fc653c2b86e857fce0af7ec99993593d0d89","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6930fc653c2b86e857fce0af7ec99993593d0d89":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1967bed916cc89da82a1c2085f27976da6d08cbd","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","084884d4602f4d1c7411eab29e897e349ce62675"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"084884d4602f4d1c7411eab29e897e349ce62675":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}