{"path":"lucene/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new TextField(SimpleUtils.TITLE, docTitles[docNum], Field.Store.YES));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum], Field.Store.NO));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4","7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // FacetFields adds the categories to the document in addFields()\n      FacetFields facetFields = new FacetFields(taxo, iParams);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new TextField(SimpleUtils.TITLE, docTitles[docNum], Field.Store.YES));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum], Field.Store.NO));\n\n      // finally add the document to the index\n      facetFields.addFields(doc, facetList);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new TextField(SimpleUtils.TITLE, docTitles[docNum], Field.Store.YES));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum], Field.Store.NO));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // FacetFields adds the categories to the document in addFields()\n      FacetFields facetFields = new FacetFields(taxo, iParams);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new TextField(SimpleUtils.TITLE, docTitles[docNum], Field.Store.YES));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum], Field.Store.NO));\n\n      // finally add the document to the index\n      facetFields.addFields(doc, facetList);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new TextField(SimpleUtils.TITLE, docTitles[docNum], Field.Store.YES));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum], Field.Store.NO));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc","date":1359570667,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // FacetFields adds the categories to the document in addFields()\n      FacetFields facetFields = new FacetFields(taxo, iParams);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new TextField(SimpleUtils.TITLE, docTitles[docNum], Field.Store.YES));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum], Field.Store.NO));\n\n      // finally add the document to the index\n      facetFields.addFields(doc, facetList);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // FacetFields adds the categories to the document in addFields()\n      FacetFields facetFields = new FacetFields(taxo, iParams);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new TextField(SimpleUtils.TITLE, docTitles[docNum], Field.Store.YES));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum], Field.Store.NO));\n\n      // finally add the document to the index\n      facetFields.addFields(doc, facetList);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61d5f95d14e5b9b046998c51e16709a398c15226","date":1359603451,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"lucene/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // FacetFields adds the categories to the document in addFields()\n      FacetFields facetFields = new FacetFields(taxo, iParams);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new TextField(SimpleUtils.TITLE, docTitles[docNum], Field.Store.YES));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum], Field.Store.NO));\n\n      // finally add the document to the index\n      facetFields.addFields(doc, facetList);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // FacetFields adds the categories to the document in addFields()\n      FacetFields facetFields = new FacetFields(taxo, iParams);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new TextField(SimpleUtils.TITLE, docTitles[docNum], Field.Store.YES));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum], Field.Store.NO));\n\n      // finally add the document to the index\n      facetFields.addFields(doc, facetList);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["04f07771a2a7dd3a395700665ed839c3dae2def2","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"61d5f95d14e5b9b046998c51e16709a398c15226":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["61d5f95d14e5b9b046998c51e16709a398c15226"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc"],"61d5f95d14e5b9b046998c51e16709a398c15226":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"1289047c4a6e31121c9d3a8f4c7a3fb30179f0fc":["61d5f95d14e5b9b046998c51e16709a398c15226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["61d5f95d14e5b9b046998c51e16709a398c15226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}