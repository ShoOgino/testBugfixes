{"path":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","pathOld":"solr/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","sourceNew":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   *\n   * @throws Exception\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n    assertTrue(\"termInfoIndexDivisor not set to 12\", readerFactory.getTermInfosIndexDivisor() == 12);\n\n\n  }\n\n","sourceOld":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   *\n   * @throws Exception\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n    assertTrue(\"termInfoIndexDivisor not set to 12\", readerFactory.getTermInfosIndexDivisor() == 12);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","pathOld":"solr/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","sourceNew":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   *\n   * @throws Exception\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n    assertTrue(\"termInfoIndexDivisor not set to 12\", readerFactory.getTermInfosIndexDivisor() == 12);\n\n\n  }\n\n","sourceOld":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   *\n   * @throws Exception\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n    assertTrue(\"termInfoIndexDivisor not set to 12\", readerFactory.getTermInfosIndexDivisor() == 12);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","pathOld":"solr/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","sourceNew":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   *\n   * @throws Exception\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n    assertTrue(\"termInfoIndexDivisor not set to 12\", readerFactory.getTermInfosIndexDivisor() == 12);\n\n\n  }\n\n","sourceOld":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   *\n   * @throws Exception\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n    assertTrue(\"termInfoIndexDivisor not set to 12\", readerFactory.getTermInfosIndexDivisor() == 12);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","sourceNew":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n    assertTrue(\"termInfoIndexDivisor not set to 12\", readerFactory.getTermInfosIndexDivisor() == 12);\n\n\n  }\n\n","sourceOld":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   *\n   * @throws Exception\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n    assertTrue(\"termInfoIndexDivisor not set to 12\", readerFactory.getTermInfosIndexDivisor() == 12);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","sourceNew":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n  }\n\n","sourceOld":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n    assertTrue(\"termInfoIndexDivisor not set to 12\", readerFactory.getTermInfosIndexDivisor() == 12);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"993f5f4ed8f84237dd6ada8a315881ecb070867b","date":1375829528,"type":5,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/AlternateDirectoryTest#testAltReaderUsed().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","sourceNew":"  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertEquals(\"readerFactory is wrong class\",\n                 AlternateDirectoryTest.TestIndexReaderFactory.class.getName(), \n                 readerFactory.getClass().getName());\n  }\n\n","sourceOld":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":5,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/AlternateDirectoryTest#testAltReaderUsed().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/IndexReaderFactoryTest#testAltReaderUsed().mjava","sourceNew":"  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertEquals(\"readerFactory is wrong class\",\n                 AlternateDirectoryTest.TestIndexReaderFactory.class.getName(), \n                 readerFactory.getClass().getName());\n  }\n\n","sourceOld":"  /**\n   * Simple test to ensure that alternate IndexReaderFactory is being used.\n   */\n  public void testAltReaderUsed() throws Exception {\n    IndexReaderFactory readerFactory = h.getCore().getIndexReaderFactory();\n    assertNotNull(\"Factory is null\", readerFactory);\n    assertTrue(\"readerFactory is not an instanceof \" + AlternateDirectoryTest.TestIndexReaderFactory.class, readerFactory instanceof StandardIndexReaderFactory);\n    assertTrue(\"termInfoIndexDivisor not set to 12\", readerFactory.getTermInfosIndexDivisor() == 12);\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c26f00b574427b55127e869b935845554afde1fa"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","993f5f4ed8f84237dd6ada8a315881ecb070867b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a45bec74b98f6fc05f52770cfb425739e6563960":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"993f5f4ed8f84237dd6ada8a315881ecb070867b":["a45bec74b98f6fc05f52770cfb425739e6563960"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["993f5f4ed8f84237dd6ada8a315881ecb070867b"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a45bec74b98f6fc05f52770cfb425739e6563960"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a45bec74b98f6fc05f52770cfb425739e6563960":["993f5f4ed8f84237dd6ada8a315881ecb070867b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"993f5f4ed8f84237dd6ada8a315881ecb070867b":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}