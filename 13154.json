{"path":"lucene/core/src/java/org/apache/lucene/search/Weight#scorer(LeafReaderContext).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Weight#scorer(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Weight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"  /**\n   * Returns a {@link Scorer} which scores documents in/out-of order according\n   * to <code>scoreDocsInOrder</code>.\n   * <p>\n   * <b>NOTE:</b> null can be returned if no documents will be scored by this\n   * query.\n   * \n   * @param context\n   *          the {@link org.apache.lucene.index.LeafReaderContext} for which to return the {@link Scorer}.\n   *          \n   * @return a {@link Scorer} which scores documents in/out-of order.\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract Scorer scorer(LeafReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Returns a {@link Scorer} which scores documents in/out-of order according\n   * to <code>scoreDocsInOrder</code>.\n   * <p>\n   * <b>NOTE:</b> null can be returned if no documents will be scored by this\n   * query.\n   * \n   * @param context\n   *          the {@link org.apache.lucene.index.LeafReaderContext} for which to return the {@link Scorer}.\n   * @param acceptDocs\n   *          Bits that represent the allowable docs to match (typically deleted docs\n   *          but possibly filtering other documents)\n   *          \n   * @return a {@link Scorer} which scores documents in/out-of order.\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d1e533362cd36128d22acb24d099d7ce7ce3250","date":1435252868,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Weight#scorer(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Weight#scorer(LeafReaderContext).mjava","sourceNew":"  /**\n   * Returns a {@link Scorer} which can iterate in order over all matching\n   * documents and assign them a score.\n   * <p>\n   * <b>NOTE:</b> null can be returned if no documents will be scored by this\n   * query.\n   * <p>\n   * <b>NOTE</b>: The returned {@link Scorer} does not have\n   * {@link LeafReader#getLiveDocs()} applied, they need to be checked on top.\n   * \n   * @param context\n   *          the {@link org.apache.lucene.index.LeafReaderContext} for which to return the {@link Scorer}.\n   *          \n   * @return a {@link Scorer} which scores documents in/out-of order.\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract Scorer scorer(LeafReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Returns a {@link Scorer} which scores documents in/out-of order according\n   * to <code>scoreDocsInOrder</code>.\n   * <p>\n   * <b>NOTE:</b> null can be returned if no documents will be scored by this\n   * query.\n   * \n   * @param context\n   *          the {@link org.apache.lucene.index.LeafReaderContext} for which to return the {@link Scorer}.\n   *          \n   * @return a {@link Scorer} which scores documents in/out-of order.\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract Scorer scorer(LeafReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9d1e533362cd36128d22acb24d099d7ce7ce3250":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d1e533362cd36128d22acb24d099d7ce7ce3250"]},"commit2Childs":{"9d1e533362cd36128d22acb24d099d7ce7ce3250":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["9d1e533362cd36128d22acb24d099d7ce7ce3250"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}