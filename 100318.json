{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitImmediatelyAfterNRTReopen().mjava","commits":[{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitImmediatelyAfterNRTReopen().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitImmediaatelyAfterNRTReopen().mjava","sourceNew":"  // LUCENE-6523\n  public void testCommitImmediatelyAfterNRTReopen() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.commit();\n\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w);\n    w.commit();\n\n    assertFalse(r.isCurrent());\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    // segments_N should have changed:\n    assertFalse(r2.getIndexCommit().getSegmentsFileName().equals(r.getIndexCommit().getSegmentsFileName()));\n    IOUtils.close(r, r2, w, dir);\n  }\n\n","sourceOld":"  // LUCENE-6523\n  public void testCommitImmediaatelyAfterNRTReopen() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.commit();\n\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w);\n    w.commit();\n\n    assertFalse(r.isCurrent());\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    // segments_N should have changed:\n    assertFalse(r2.getIndexCommit().getSegmentsFileName().equals(r.getIndexCommit().getSegmentsFileName()));\n    IOUtils.close(r, r2, w, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitImmediatelyAfterNRTReopen().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitImmediaatelyAfterNRTReopen().mjava","sourceNew":"  // LUCENE-6523\n  public void testCommitImmediatelyAfterNRTReopen() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.commit();\n\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w);\n    w.commit();\n\n    assertFalse(r.isCurrent());\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    // segments_N should have changed:\n    assertFalse(r2.getIndexCommit().getSegmentsFileName().equals(r.getIndexCommit().getSegmentsFileName()));\n    IOUtils.close(r, r2, w, dir);\n  }\n\n","sourceOld":"  // LUCENE-6523\n  public void testCommitImmediaatelyAfterNRTReopen() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.commit();\n\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w);\n    w.commit();\n\n    assertFalse(r.isCurrent());\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    // segments_N should have changed:\n    assertFalse(r2.getIndexCommit().getSegmentsFileName().equals(r.getIndexCommit().getSegmentsFileName()));\n    IOUtils.close(r, r2, w, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitImmediatelyAfterNRTReopen().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitImmediaatelyAfterNRTReopen().mjava","sourceNew":"  // LUCENE-6523\n  public void testCommitImmediatelyAfterNRTReopen() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.commit();\n\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w);\n    w.commit();\n\n    assertFalse(r.isCurrent());\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    // segments_N should have changed:\n    assertFalse(r2.getIndexCommit().getSegmentsFileName().equals(r.getIndexCommit().getSegmentsFileName()));\n    IOUtils.close(r, r2, w, dir);\n  }\n\n","sourceOld":"  // LUCENE-6523\n  public void testCommitImmediaatelyAfterNRTReopen() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.commit();\n\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w);\n    w.commit();\n\n    assertFalse(r.isCurrent());\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    // segments_N should have changed:\n    assertFalse(r2.getIndexCommit().getSegmentsFileName().equals(r.getIndexCommit().getSegmentsFileName()));\n    IOUtils.close(r, r2, w, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":1,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitImmediatelyAfterNRTReopen().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCommitImmediaatelyAfterNRTReopen().mjava","sourceNew":"  // LUCENE-6523\n  public void testCommitImmediatelyAfterNRTReopen() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.commit();\n\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w);\n    w.commit();\n\n    assertFalse(r.isCurrent());\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    // segments_N should have changed:\n    assertFalse(r2.getIndexCommit().getSegmentsFileName().equals(r.getIndexCommit().getSegmentsFileName()));\n    IOUtils.close(r, r2, w, dir);\n  }\n\n","sourceOld":"  // LUCENE-6523\n  public void testCommitImmediaatelyAfterNRTReopen() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.commit();\n\n    w.addDocument(new Document());\n\n    DirectoryReader r = DirectoryReader.open(w);\n    w.commit();\n\n    assertFalse(r.isCurrent());\n\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    assertNotNull(r2);\n    // segments_N should have changed:\n    assertFalse(r2.getIndexCommit().getSegmentsFileName().equals(r.getIndexCommit().getSegmentsFileName()));\n    IOUtils.close(r, r2, w, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a207d19eac354d649c3f0e2cce070017c78125e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b470f36a9372c97283360b1304eacbde22df6c0d"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a207d19eac354d649c3f0e2cce070017c78125e"]},"commit2Childs":{"5a207d19eac354d649c3f0e2cce070017c78125e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}