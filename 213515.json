{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","commits":[{"id":"1ba10bcc2b7d89f38b6f4629475638edca1a2994","date":1359052288,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<BytesRef>();\n    for (BytesRef v : values) {\n      dictionary.add(BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<BytesRef,Long>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v));\n    }\n    w.finish();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<BytesRef>();\n    for (BytesRef v : values) {\n      dictionary.add(BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<BytesRef,Long>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v));\n    }\n    w.finish();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9faa42f41b6adb98daf009cf99a4ee239189e469","date":1376648738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","sourceNew":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<BytesRef>();\n    for (BytesRef v : values) {\n      dictionary.add(v == null ? new BytesRef() : BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<BytesRef,Long>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v == null ? new BytesRef() : v));\n    }\n    w.finish();\n  }\n\n","sourceOld":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<BytesRef>();\n    for (BytesRef v : values) {\n      dictionary.add(BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<BytesRef,Long>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v));\n    }\n    w.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","sourceNew":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<BytesRef>();\n    for (BytesRef v : values) {\n      dictionary.add(v == null ? new BytesRef() : BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<BytesRef,Long>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v == null ? new BytesRef() : v));\n    }\n    w.finish();\n  }\n\n","sourceOld":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<BytesRef>();\n    for (BytesRef v : values) {\n      dictionary.add(BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<BytesRef,Long>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v));\n    }\n    w.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","sourceNew":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<BytesRef>();\n    for (BytesRef v : values) {\n      dictionary.add(v == null ? new BytesRef() : BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<BytesRef,Long>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v == null ? new BytesRef() : v));\n    }\n    w.finish();\n  }\n\n","sourceOld":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<BytesRef>();\n    for (BytesRef v : values) {\n      dictionary.add(BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<BytesRef,Long>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v));\n    }\n    w.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","sourceNew":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<>();\n    for (BytesRef v : values) {\n      dictionary.add(v == null ? new BytesRef() : BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v == null ? new BytesRef() : v));\n    }\n    w.finish();\n  }\n\n","sourceOld":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<BytesRef>();\n    for (BytesRef v : values) {\n      dictionary.add(v == null ? new BytesRef() : BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<BytesRef,Long>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v == null ? new BytesRef() : v));\n    }\n    w.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","sourceNew":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<>();\n    for (BytesRef v : values) {\n      dictionary.add(v == null ? new BytesRef() : BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v == null ? new BytesRef() : v));\n    }\n    w.finish();\n  }\n\n","sourceOld":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<>();\n    for (BytesRef v : values) {\n      dictionary.add(v == null ? new BytesRef() : BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v == null ? new BytesRef() : v));\n    }\n    w.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addVarDerefBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef]).mjava","sourceNew":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<>();\n    for (BytesRef v : values) {\n      dictionary.add(v == null ? new BytesRef() : BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v == null ? new BytesRef() : v));\n    }\n    w.finish();\n  }\n\n","sourceOld":"  private void addVarDerefBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_DEREF.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_VAR_DEREF_VERSION_CURRENT);\n    \n    // deduplicate\n    TreeSet<BytesRef> dictionary = new TreeSet<>();\n    for (BytesRef v : values) {\n      dictionary.add(v == null ? new BytesRef() : BytesRef.deepCopyOf(v));\n    }\n    \n    /* values */\n    long startPosition = data.getFilePointer();\n    long currentAddress = 0;\n    HashMap<BytesRef,Long> valueToAddress = new HashMap<>();\n    for (BytesRef v : dictionary) {\n      currentAddress = data.getFilePointer() - startPosition;\n      valueToAddress.put(v, currentAddress);\n      writeVShort(data, v.length);\n      data.writeBytes(v.bytes, v.offset, v.length);\n    }\n    \n    /* ordinals */\n    long totalBytes = data.getFilePointer() - startPosition;\n    index.writeLong(totalBytes);\n    final int maxDoc = state.segmentInfo.getDocCount();\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(currentAddress), PackedInts.DEFAULT);\n\n    for (BytesRef v : values) {\n      w.add(valueToAddress.get(v == null ? new BytesRef() : v));\n    }\n    w.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1ba10bcc2b7d89f38b6f4629475638edca1a2994"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["d4d69c535930b5cce125cff868d40f6373dc27d4","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"1ba10bcc2b7d89f38b6f4629475638edca1a2994":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["d4d69c535930b5cce125cff868d40f6373dc27d4","9faa42f41b6adb98daf009cf99a4ee239189e469"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["9faa42f41b6adb98daf009cf99a4ee239189e469","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","1ba10bcc2b7d89f38b6f4629475638edca1a2994"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"1ba10bcc2b7d89f38b6f4629475638edca1a2994":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}