{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getSingleEntry(GDataRequest,GDataResponse).mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getSingleEntry(GDataRequest,GDataResponse).mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * @see org.apache.lucene.gdata.server.Service#getSingleEntry(org.apache.lucene.gdata.server.GDataRequest, \n     *      org.apache.lucene.gdata.server.GDataResponse) \n     */ \n    @Override \n    public BaseEntry getSingleEntry(GDataRequest request, GDataResponse response) \n            throws ServiceException { \n        checkFeedIsRegisterd(request); \n \n        try { \n            BaseEntry entry = this.storage.getEntry(request.getEntryId(), \n                    request.getFeedId()); \n            if(entry == null) \n                return null; \n            addcontextPath(entry, request.getContextPath()); \n            return entry; \n        } catch (StorageException e) { \n            ServiceException ex = new ServiceException(\"Could not get feed\", e); \n            ex.setStackTrace(e.getStackTrace()); \n            throw ex; \n        } \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getSingleEntry(GDataRequest,GDataResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getSingleEntry(GDataRequest,GDataResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getSingleEntry(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n\n    public BaseEntry getSingleEntry(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        try {\n            ServerBaseEntry entry = new ServerBaseEntry();\n            entry.setServiceConfig(request.getConfigurator());\n            entry.setFeedId(request.getFeedId());\n            entry.setId(request.getEntryId());\n            if(entry.getId() == null){\n                response.setError(HttpServletResponse.SC_BAD_REQUEST);\n                throw new ServiceException(\"entry is null can't get entry\");\n            }\n                \n            BaseEntry retVal = null;\n            retVal = this.storage.getEntry(entry);\n            dynamicElementEntryStragey(retVal, request);\n            return retVal;\n        } catch (ResourceNotFoundException e) {\n            response.setError(HttpServletResponse.SC_BAD_REQUEST);\n            ServiceException ex = new ServiceException(\n                    \"Could not get entry\", e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        } catch (StorageException e) {\n            ServiceException ex = new ServiceException(\"Could not get feed\", e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n    }\n\n","sourceOld":"    /** \n     * @see org.apache.lucene.gdata.server.Service#getSingleEntry(org.apache.lucene.gdata.server.GDataRequest, \n     *      org.apache.lucene.gdata.server.GDataResponse) \n     */ \n    @Override \n    public BaseEntry getSingleEntry(GDataRequest request, GDataResponse response) \n            throws ServiceException { \n        checkFeedIsRegisterd(request); \n \n        try { \n            BaseEntry entry = this.storage.getEntry(request.getEntryId(), \n                    request.getFeedId()); \n            if(entry == null) \n                return null; \n            addcontextPath(entry, request.getContextPath()); \n            return entry; \n        } catch (StorageException e) { \n            ServiceException ex = new ServiceException(\"Could not get feed\", e); \n            ex.setStackTrace(e.getStackTrace()); \n            throw ex; \n        } \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"303ca293666286b4ae2b0b4dbf10d3bf60ed727c","date":1153866181,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getSingleEntry(GDataRequest,GDataResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getSingleEntry(GDataRequest,GDataResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getSingleEntry(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n\n    public BaseEntry getSingleEntry(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        try {\n            ServerBaseEntry entry = new ServerBaseEntry();\n            entry.setServiceConfig(request.getConfigurator());\n            entry.setFeedId(request.getFeedId());\n            entry.setId(request.getEntryId());\n\n            \n            if(entry.getId() == null){\n                response.setError(HttpServletResponse.SC_BAD_REQUEST);\n                throw new ServiceException(\"entry is null can't get entry\");\n            }\n                \n            BaseEntry retVal = null;\n            retVal = this.storage.getEntry(entry);\n            dynamicElementEntryStragey(retVal, request);\n            return retVal;\n        } catch (ResourceNotFoundException e) {\n            response.setError(HttpServletResponse.SC_BAD_REQUEST);\n            ServiceException ex = new ServiceException(\n                    \"Could not get entry\", e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        } catch (StorageException e) {\n            ServiceException ex = new ServiceException(\"Could not get feed\", e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getSingleEntry(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n\n    public BaseEntry getSingleEntry(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        try {\n            ServerBaseEntry entry = new ServerBaseEntry();\n            entry.setServiceConfig(request.getConfigurator());\n            entry.setFeedId(request.getFeedId());\n            entry.setId(request.getEntryId());\n            if(entry.getId() == null){\n                response.setError(HttpServletResponse.SC_BAD_REQUEST);\n                throw new ServiceException(\"entry is null can't get entry\");\n            }\n                \n            BaseEntry retVal = null;\n            retVal = this.storage.getEntry(entry);\n            dynamicElementEntryStragey(retVal, request);\n            return retVal;\n        } catch (ResourceNotFoundException e) {\n            response.setError(HttpServletResponse.SC_BAD_REQUEST);\n            ServiceException ex = new ServiceException(\n                    \"Could not get entry\", e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        } catch (StorageException e) {\n            ServiceException ex = new ServiceException(\"Could not get feed\", e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getSingleEntry(GDataRequest,GDataResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getSingleEntry(GDataRequest,GDataResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getSingleEntry(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n\n    public BaseEntry getSingleEntry(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        try {\n            ServerBaseEntry entry = new ServerBaseEntry();\n            entry.setServiceConfig(request.getConfigurator());\n            entry.setFeedId(request.getFeedId());\n            entry.setId(request.getEntryId());\n\n            \n            if(entry.getId() == null){\n                throw new ServiceException(\"entry is null can't get entry\", GDataResponse.BAD_REQUEST);\n            }\n                \n            BaseEntry retVal = null;\n            retVal = this.storage.getEntry(entry);\n            dynamicElementEntryStragey(retVal, request);\n            return retVal;\n        } catch (ResourceNotFoundException e) {\n            ServiceException ex = new ServiceException(\n                    \"Could not get entry\", e, GDataResponse.BAD_REQUEST);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        } catch (StorageException e) {\n            ServiceException ex = new ServiceException(\"Could not get entry\", e, GDataResponse.SERVER_ERROR);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getSingleEntry(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n\n    public BaseEntry getSingleEntry(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        try {\n            ServerBaseEntry entry = new ServerBaseEntry();\n            entry.setServiceConfig(request.getConfigurator());\n            entry.setFeedId(request.getFeedId());\n            entry.setId(request.getEntryId());\n\n            \n            if(entry.getId() == null){\n                response.setError(HttpServletResponse.SC_BAD_REQUEST);\n                throw new ServiceException(\"entry is null can't get entry\");\n            }\n                \n            BaseEntry retVal = null;\n            retVal = this.storage.getEntry(entry);\n            dynamicElementEntryStragey(retVal, request);\n            return retVal;\n        } catch (ResourceNotFoundException e) {\n            response.setError(HttpServletResponse.SC_BAD_REQUEST);\n            ServiceException ex = new ServiceException(\n                    \"Could not get entry\", e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        } catch (StorageException e) {\n            ServiceException ex = new ServiceException(\"Could not get feed\", e);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataService#getSingleEntry(GDataRequest,GDataResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataService#getSingleEntry(GDataRequest,GDataResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getSingleEntry(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n\n    public BaseEntry getSingleEntry(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        try {\n            ServerBaseEntry entry = new ServerBaseEntry();\n            entry.setServiceConfig(request.getConfigurator());\n            entry.setFeedId(request.getFeedId());\n            entry.setId(request.getEntryId());\n\n            \n            if(entry.getId() == null){\n                throw new ServiceException(\"entry is null can't get entry\", GDataResponse.BAD_REQUEST);\n            }\n                \n            BaseEntry retVal = null;\n            retVal = this.storage.getEntry(entry);\n            dynamicElementEntryStragey(retVal, request);\n            return retVal;\n        } catch (ResourceNotFoundException e) {\n            ServiceException ex = new ServiceException(\n                    \"Could not get entry\", e, GDataResponse.BAD_REQUEST);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        } catch (StorageException e) {\n            ServiceException ex = new ServiceException(\"Could not get entry\", e, GDataResponse.SERVER_ERROR);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.server.Service#getSingleEntry(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.server.GDataResponse)\n     */\n\n    public BaseEntry getSingleEntry(GDataRequest request, GDataResponse response)\n            throws ServiceException {\n\n        try {\n            ServerBaseEntry entry = new ServerBaseEntry();\n            entry.setServiceConfig(request.getConfigurator());\n            entry.setFeedId(request.getFeedId());\n            entry.setId(request.getEntryId());\n\n            \n            if(entry.getId() == null){\n                throw new ServiceException(\"entry is null can't get entry\", GDataResponse.BAD_REQUEST);\n            }\n                \n            BaseEntry retVal = null;\n            retVal = this.storage.getEntry(entry);\n            dynamicElementEntryStragey(retVal, request);\n            return retVal;\n        } catch (ResourceNotFoundException e) {\n            ServiceException ex = new ServiceException(\n                    \"Could not get entry\", e, GDataResponse.BAD_REQUEST);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        } catch (StorageException e) {\n            ServiceException ex = new ServiceException(\"Could not get entry\", e, GDataResponse.SERVER_ERROR);\n            ex.setStackTrace(e.getStackTrace());\n            throw ex;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["52754a40a1550056d5637c8992b4076b5ed77328"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}