{"path":"solr/core/src/java/org/apache/solr/handler/export/ExportWriter#writeDoc(SortDoc,List[LeafReaderContext],EntryWriter).mjava","commits":[{"id":"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80","date":1532111887,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/export/ExportWriter#writeDoc(SortDoc,List[LeafReaderContext],EntryWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ExportWriter#writeDoc(SortDoc,List[LeafReaderContext],EntryWriter).mjava","sourceNew":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          EntryWriter ew) throws IOException {\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for (FieldWriter fieldWriter : fieldWriters) {\n      if (fieldWriter.write(sortDoc.docId, context.reader(), ew, fieldIndex)) {\n        ++fieldIndex;\n      }\n    }\n  }\n\n","sourceOld":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          EntryWriter ew) throws IOException {\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for (FieldWriter fieldWriter : fieldWriters) {\n      if (fieldWriter.write(sortDoc.docId, context.reader(), ew, fieldIndex)) {\n        ++fieldIndex;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7eb5b8b79759ebbe90a0605a50c666ba0b83789","date":1535046490,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/export/ExportWriter#writeDoc(SortDoc,List[LeafReaderContext],EntryWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/export/ExportWriter#writeDoc(SortDoc,List[LeafReaderContext],EntryWriter).mjava","sourceNew":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          EntryWriter ew) throws IOException {\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for (FieldWriter fieldWriter : fieldWriters) {\n      if (fieldWriter.write(sortDoc, context.reader(), ew, fieldIndex)) {\n        ++fieldIndex;\n      }\n    }\n  }\n\n","sourceOld":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          EntryWriter ew) throws IOException {\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for (FieldWriter fieldWriter : fieldWriters) {\n      if (fieldWriter.write(sortDoc.docId, context.reader(), ew, fieldIndex)) {\n        ++fieldIndex;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804a8d5358fe7b7563b85ee7838714d720b89272","date":1591624987,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/export/ExportWriter#writeDoc(SortDoc,List[LeafReaderContext],EntryWriter).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/export/ExportWriter#writeDoc(SortDoc,List[LeafReaderContext],EntryWriter).mjava","sourceNew":"  void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          EntryWriter ew) throws IOException {\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for (FieldWriter fieldWriter : fieldWriters) {\n      if (fieldWriter.write(sortDoc, context.reader(), ew, fieldIndex)) {\n        ++fieldIndex;\n      }\n    }\n  }\n\n","sourceOld":"  protected void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          EntryWriter ew) throws IOException {\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for (FieldWriter fieldWriter : fieldWriters) {\n      if (fieldWriter.write(sortDoc, context.reader(), ew, fieldIndex)) {\n        ++fieldIndex;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee","date":1593704090,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/export/ExportWriter#writeDoc(SortDoc,List[LeafReaderContext],EntryWriter,FieldWriter[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/export/ExportWriter#writeDoc(SortDoc,List[LeafReaderContext],EntryWriter).mjava","sourceNew":"  void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          EntryWriter ew, FieldWriter[] writers) throws IOException {\n    int ord = sortDoc.ord;\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for (FieldWriter fieldWriter : writers) {\n      if (fieldWriter.write(sortDoc, context.reader(), ew, fieldIndex)) {\n        ++fieldIndex;\n      }\n    }\n  }\n\n","sourceOld":"  void writeDoc(SortDoc sortDoc,\n                          List<LeafReaderContext> leaves,\n                          EntryWriter ew) throws IOException {\n\n    int ord = sortDoc.ord;\n    FixedBitSet set = sets[ord];\n    set.clear(sortDoc.docId);\n    LeafReaderContext context = leaves.get(ord);\n    int fieldIndex = 0;\n    for (FieldWriter fieldWriter : fieldWriters) {\n      if (fieldWriter.write(sortDoc, context.reader(), ew, fieldIndex)) {\n        ++fieldIndex;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee":["804a8d5358fe7b7563b85ee7838714d720b89272"],"a7eb5b8b79759ebbe90a0605a50c666ba0b83789":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"804a8d5358fe7b7563b85ee7838714d720b89272":["a7eb5b8b79759ebbe90a0605a50c666ba0b83789"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee"]},"commit2Childs":{"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a7eb5b8b79759ebbe90a0605a50c666ba0b83789":["804a8d5358fe7b7563b85ee7838714d720b89272"],"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["a7eb5b8b79759ebbe90a0605a50c666ba0b83789"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"804a8d5358fe7b7563b85ee7838714d720b89272":["1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}