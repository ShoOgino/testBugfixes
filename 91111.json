{"path":"src/java/org/apache/solr/request/VelocityResponseWriter.RawResponseHelper#getResultIterator().mjava","commits":[{"id":"2e97a7d6ce275d5deea94b74ce25d8551202f9ba","date":1223943844,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/VelocityResponseWriter.RawResponseHelper#getResultIterator().mjava","pathOld":"/dev/null","sourceNew":"\t\tpublic Iterator<SolrDocument> getResultIterator() {\n\t\t\tfinal Iterator<Integer> iterator = ((DocSlice) response.getValues()\n\t\t\t\t\t.get(\"response\")).iterator();\n\t\t\treturn new Iterator<SolrDocument>() {\n\n\t\t\t\tpublic boolean hasNext() {\n\t\t\t\t\treturn iterator.hasNext();\n\t\t\t\t}\n\n\t\t\t\tpublic SolrDocument next() {\n\t\t\t\t\tDocument document = null;\n\t\t\t\t\tSolrDocument solrDocument = new SolrDocument();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdocument = searcher.doc(iterator.next());\n\t\t\t\t\t\tnew DocumentBuilder(request.getSchema()).loadStoredFields(solrDocument, document);\n\t\t\t\t\t} catch (CorruptIndexException e) {\n\t\t\t\t\t\tthrow new RuntimeException(\"Error converting lucene document into solr document!\");\n\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\tthrow new RuntimeException(\"Error converting lucene document into solr document!\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn solrDocument;\n\t\t\t\t}\n\n\t\t\t\tpublic void remove() {\n\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfb338f6d98c611a3fa3ecc26f27ca98d5cedd75","date":1223990351,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/request/VelocityResponseWriter.RawResponseHelper#getResultIterator().mjava","sourceNew":null,"sourceOld":"\t\tpublic Iterator<SolrDocument> getResultIterator() {\n\t\t\tfinal Iterator<Integer> iterator = ((DocSlice) response.getValues()\n\t\t\t\t\t.get(\"response\")).iterator();\n\t\t\treturn new Iterator<SolrDocument>() {\n\n\t\t\t\tpublic boolean hasNext() {\n\t\t\t\t\treturn iterator.hasNext();\n\t\t\t\t}\n\n\t\t\t\tpublic SolrDocument next() {\n\t\t\t\t\tDocument document = null;\n\t\t\t\t\tSolrDocument solrDocument = new SolrDocument();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdocument = searcher.doc(iterator.next());\n\t\t\t\t\t\tnew DocumentBuilder(request.getSchema()).loadStoredFields(solrDocument, document);\n\t\t\t\t\t} catch (CorruptIndexException e) {\n\t\t\t\t\t\tthrow new RuntimeException(\"Error converting lucene document into solr document!\");\n\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\tthrow new RuntimeException(\"Error converting lucene document into solr document!\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn solrDocument;\n\t\t\t\t}\n\n\t\t\t\tpublic void remove() {\n\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cfb338f6d98c611a3fa3ecc26f27ca98d5cedd75":["2e97a7d6ce275d5deea94b74ce25d8551202f9ba"],"2e97a7d6ce275d5deea94b74ce25d8551202f9ba":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"cfb338f6d98c611a3fa3ecc26f27ca98d5cedd75":[],"2e97a7d6ce275d5deea94b74ce25d8551202f9ba":["cfb338f6d98c611a3fa3ecc26f27ca98d5cedd75"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["2e97a7d6ce275d5deea94b74ce25d8551202f9ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cfb338f6d98c611a3fa3ecc26f27ca98d5cedd75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}