{"path":"lucene/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8.UTF8Sequence#set(int).mjava","commits":[{"id":"5acb0ee59cc50caf85402e92d148fdb2af61bc19","date":1272929037,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8.UTF8Sequence#set(int).mjava","pathOld":"/dev/null","sourceNew":"    private void set(int code) {\n      if (code < 128) {\n        // 0xxxxxxx\n        bytes[0].value = code;\n        bytes[0].bits = 7;\n        len = 1;\n      } else if (code < 2048) {\n        // 110yyyxx 10xxxxxx\n        bytes[0].value = (6 << 5) | (code >> 6);\n        bytes[0].bits = 5;\n        setRest(code, 1);\n        len = 2;\n      } else if (code < 65536) {\n        // 1110yyyy 10yyyyxx 10xxxxxx\n        bytes[0].value = (14 << 4) | (code >> 12);\n        bytes[0].bits = 4;\n        setRest(code, 2);\n        len = 3;\n      } else {\n        // 11110zzz 10zzyyyy 10yyyyxx 10xxxxxx\n        bytes[0].value = (30 << 3) | (code >> 18);\n        bytes[0].bits = 3;\n        setRest(code, 3);\n        len = 4;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8.UTF8Sequence#set(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8.UTF8Sequence#set(int).mjava","sourceNew":"    private void set(int code) {\n      if (code < 128) {\n        // 0xxxxxxx\n        bytes[0].value = code;\n        bytes[0].bits = 7;\n        len = 1;\n      } else if (code < 2048) {\n        // 110yyyxx 10xxxxxx\n        bytes[0].value = (6 << 5) | (code >> 6);\n        bytes[0].bits = 5;\n        setRest(code, 1);\n        len = 2;\n      } else if (code < 65536) {\n        // 1110yyyy 10yyyyxx 10xxxxxx\n        bytes[0].value = (14 << 4) | (code >> 12);\n        bytes[0].bits = 4;\n        setRest(code, 2);\n        len = 3;\n      } else {\n        // 11110zzz 10zzyyyy 10yyyyxx 10xxxxxx\n        bytes[0].value = (30 << 3) | (code >> 18);\n        bytes[0].bits = 3;\n        setRest(code, 3);\n        len = 4;\n      }\n    }\n\n","sourceOld":"    private void set(int code) {\n      if (code < 128) {\n        // 0xxxxxxx\n        bytes[0].value = code;\n        bytes[0].bits = 7;\n        len = 1;\n      } else if (code < 2048) {\n        // 110yyyxx 10xxxxxx\n        bytes[0].value = (6 << 5) | (code >> 6);\n        bytes[0].bits = 5;\n        setRest(code, 1);\n        len = 2;\n      } else if (code < 65536) {\n        // 1110yyyy 10yyyyxx 10xxxxxx\n        bytes[0].value = (14 << 4) | (code >> 12);\n        bytes[0].bits = 4;\n        setRest(code, 2);\n        len = 3;\n      } else {\n        // 11110zzz 10zzyyyy 10yyyyxx 10xxxxxx\n        bytes[0].value = (30 << 3) | (code >> 18);\n        bytes[0].bits = 3;\n        setRest(code, 3);\n        len = 4;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}