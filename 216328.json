{"path":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/BinaryDictionary#readString(int,int,boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/BinaryDictionary#readString(int,int,boolean).mjava","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/BinaryDictionary#readString(int,int,boolean).mjava","sourceNew":"  private String readString(int offset, int length, boolean kana) {\n    char text[] = new char[length];\n    if (kana) {\n      for (int i = 0; i < length; i++) {\n        text[i] = (char) (0x30A0 + (buffer.get(offset + i) & 0xff));\n      }\n    } else {\n      for (int i = 0; i < length; i++) {\n        text[i] = buffer.getChar(offset + (i << 1));\n      }\n    }\n    return new String(text);\n  }\n\n","sourceOld":"  private String readString(int offset, int length, boolean kana) {\n    char text[] = new char[length];\n    if (kana) {\n      for (int i = 0; i < length; i++) {\n        text[i] = (char) (0x30A0 + (buffer.get(offset + i) & 0xff));\n      }\n    } else {\n      for (int i = 0; i < length; i++) {\n        text[i] = buffer.getChar(offset + (i << 1));\n      }\n    }\n    return new String(text);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}