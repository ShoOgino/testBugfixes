{"path":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","commits":[{"id":"e33c0669d9baf6940d536327a8743a5a1dd2db94","date":1373163949,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#before().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = new File(TEMP_DIR, \"solrHome/\" + CoreAdminCreateDiscoverTest.getClassName());\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void before() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = new File(TEMP_DIR, \"solrHome/\" + CoreAdminCreateDiscoverTest.getClassName());\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = new File(TEMP_DIR, \"solrHome/\" + CoreAdminCreateDiscoverTest.getClassName());\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = TestUtil.createTempDir(CoreAdminCreateDiscoverTest.getClassName());\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = new File(TEMP_DIR, \"solrHome/\" + CoreAdminCreateDiscoverTest.getClassName());\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = new File(dataDir, \"solrHome/\" + CoreAdminCreateDiscoverTest.getClassName());\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = new File(TEMP_DIR, \"solrHome/\" + CoreAdminCreateDiscoverTest.getClassName());\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = createTempDir();\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = TestUtil.createTempDir(CoreAdminCreateDiscoverTest.getClassName());\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = createTempDir();\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = createTempDir();\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","bugFix":["90164923c8d1612badfdbea3fadc987a4e5bc7e6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = createTempDir();\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = new File(dataDir, \"solrHome/\" + CoreAdminCreateDiscoverTest.getClassName());\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = createTempDir().toFile();\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = createTempDir();\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/CoreAdminCreateDiscoverTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = createTempDir().toFile();\n\n    setupNoCoreTest(solrHomeDirectory.toPath(), null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    useFactory(null); // I require FS-based indexes for this test.\n\n    solrHomeDirectory = createTempDir().toFile();\n\n    setupNoCoreTest(solrHomeDirectory, null);\n\n    admin = new CoreAdminHandler(h.getCoreContainer());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["f4abec28b874149a7223e32cc7a01704c27790de"],"e33c0669d9baf6940d536327a8743a5a1dd2db94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e33c0669d9baf6940d536327a8743a5a1dd2db94"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["e33c0669d9baf6940d536327a8743a5a1dd2db94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"d0d579490a72f2e6297eaa648940611234c57cf1":["e33c0669d9baf6940d536327a8743a5a1dd2db94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a626ec4d1c92e59fe390724d6220081047b03ce7"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e33c0669d9baf6940d536327a8743a5a1dd2db94":["37a0f60745e53927c4c876cfe5b5a58170f0646c","1416f9d09d016a6894cd17e1caac137dad2bba59","d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e33c0669d9baf6940d536327a8743a5a1dd2db94","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"f4abec28b874149a7223e32cc7a01704c27790de":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}