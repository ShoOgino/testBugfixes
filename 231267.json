{"path":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","commits":[{"id":"71946974c05b5dc4d3201f8abf4ecd2609bba400","date":1319655558,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","sourceNew":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n\n    String template_name = request.getParams().get(\"v.template\");\n    String qt = request.getParams().get(\"qt\");\n    String path = (String) request.getContext().get(\"path\");\n    if (template_name == null && path != null) {\n      template_name = path;\n    }  // TODO: path is never null, so qt won't get picked up  maybe special case for '/select' to use qt, otherwise use path?\n    if (template_name == null && qt != null) {\n      template_name = qt;\n    }\n    if (template_name == null) template_name = \"index\";\n    try {\n      template = engine.getTemplate(template_name + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","sourceOld":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n\n    String template_name = request.getParams().get(\"v.template\");\n    String qt = request.getParams().get(\"qt\");\n    String path = (String) request.getContext().get(\"path\");\n    if (template_name == null && path != null) {\n      template_name = path;\n    }  // TODO: path is never null, so qt won't get picked up  maybe special case for '/select' to use qt, otherwise use path?\n    if (template_name == null && qt != null) {\n      template_name = qt;\n    }\n    if (template_name == null) template_name = \"index\";\n    try {\n      template = engine.getTemplate(template_name + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1936b95f78af7bc57e67df5b0de3f21a54df10af","date":1420842770,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","sourceNew":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n\n    String templateName = request.getParams().get(TEMPLATE);\n\n    String qt = request.getParams().get(CommonParams.QT);\n    String path = (String) request.getContext().get(\"path\");\n    if (templateName == null && path != null) {\n      templateName = path;\n    }  // TODO: path is never null, so qt won't get picked up  maybe special case for '/select' to use qt, otherwise use path?\n    if (templateName == null && qt != null) {\n      templateName = qt;\n    }\n    if (templateName == null) templateName = \"index\";\n    try {\n      template = engine.getTemplate(templateName + TEMPLATE_EXTENSION);\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","sourceOld":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n\n    String template_name = request.getParams().get(\"v.template\");\n    String qt = request.getParams().get(\"qt\");\n    String path = (String) request.getContext().get(\"path\");\n    if (template_name == null && path != null) {\n      template_name = path;\n    }  // TODO: path is never null, so qt won't get picked up  maybe special case for '/select' to use qt, otherwise use path?\n    if (template_name == null && qt != null) {\n      template_name = qt;\n    }\n    if (template_name == null) template_name = \"index\";\n    try {\n      template = engine.getTemplate(template_name + \".vm\");\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b659435fdb2401d91fa87bb3df798ae41a8046cd","date":1600346713,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/velocity/src/java/org/apache/solr/response/VelocityResponseWriter#getTemplate(VelocityEngine,SolrQueryRequest).mjava","sourceNew":null,"sourceOld":"  private Template getTemplate(VelocityEngine engine, SolrQueryRequest request) throws IOException {\n    Template template;\n\n    String templateName = request.getParams().get(TEMPLATE);\n\n    String qt = request.getParams().get(CommonParams.QT);\n    String path = (String) request.getContext().get(\"path\");\n    if (templateName == null && path != null) {\n      templateName = path;\n    }  // TODO: path is never null, so qt won't get picked up  maybe special case for '/select' to use qt, otherwise use path?\n    if (templateName == null && qt != null) {\n      templateName = qt;\n    }\n    if (templateName == null) templateName = \"index\";\n    try {\n      template = engine.getTemplate(templateName + TEMPLATE_EXTENSION);\n    } catch (Exception e) {\n      throw new IOException(e.getMessage());\n    }\n\n    return template;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1936b95f78af7bc57e67df5b0de3f21a54df10af":["71946974c05b5dc4d3201f8abf4ecd2609bba400"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b659435fdb2401d91fa87bb3df798ae41a8046cd":["1936b95f78af7bc57e67df5b0de3f21a54df10af"],"71946974c05b5dc4d3201f8abf4ecd2609bba400":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b659435fdb2401d91fa87bb3df798ae41a8046cd"]},"commit2Childs":{"1936b95f78af7bc57e67df5b0de3f21a54df10af":["b659435fdb2401d91fa87bb3df798ae41a8046cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["71946974c05b5dc4d3201f8abf4ecd2609bba400"],"b659435fdb2401d91fa87bb3df798ae41a8046cd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"71946974c05b5dc4d3201f8abf4ecd2609bba400":["1936b95f78af7bc57e67df5b0de3f21a54df10af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}