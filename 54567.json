{"path":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testErrorCases().mjava","commits":[{"id":"97473b7232d88686879e8d72210e5e2ad71bfcd1","date":1566274445,"type":0,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testErrorCases().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testErrorCases() {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"text_t\", \"bleh bleh\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\", \"YYYY\", \"text_t\", \"bleh bleh\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc1));\n\n    ignoreException(\"missing expand field\");\n    ignoreException(\"Expected identifier at pos 2\");\n    ignoreException(\"Can't determine a Sort Order\");\n    ignoreException(\"Expand not supported for fieldType:'text'\");\n\n    // no expand field\n    SolrException e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"missing expand field\", e.getMessage());\n\n    // query and filter syntax errors\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.fq\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.fq\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.sort\", \"bleh\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Can't determine a Sort Order (asc or desc) in sort spec 'bleh'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"text_t\", \"expand.q\", \"*:*\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"Expand not supported for fieldType:'text'\", e.getMessage());\n\n    resetExceptionIgnores();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6457ab2a0e58432fae0f4816844575d9fdf4fc00","date":1576126280,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testErrorCases().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testErrorCases().mjava","sourceNew":"  @Test\n  public void testErrorCases() {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"text_t\", \"bleh bleh\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\", \"YYYY\", \"text_t\", \"bleh bleh\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc1));\n\n    ignoreException(\"missing expand field\");\n    ignoreException(\"Expected identifier at pos 2\");\n    ignoreException(\"Can't determine a Sort Order\");\n    ignoreException(\"Expand not supported for fieldType:'text'\");\n\n    // expand with grouping\n    SolrException e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"expand\", \"true\", \"expand.field\", \"id\", \"group\", \"true\", \"group.field\", \"id\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"Can not use expand with Grouping enabled\", e.getMessage());\n\n    // no expand field\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"missing expand field\", e.getMessage());\n\n    // query and filter syntax errors\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.fq\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.fq\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.sort\", \"bleh\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Can't determine a Sort Order (asc or desc) in sort spec 'bleh'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"text_t\", \"expand.q\", \"*:*\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"Expand not supported for fieldType:'text'\", e.getMessage());\n\n    resetExceptionIgnores();\n  }\n\n","sourceOld":"  @Test\n  public void testErrorCases() {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"text_t\", \"bleh bleh\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\", \"YYYY\", \"text_t\", \"bleh bleh\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc1));\n\n    ignoreException(\"missing expand field\");\n    ignoreException(\"Expected identifier at pos 2\");\n    ignoreException(\"Can't determine a Sort Order\");\n    ignoreException(\"Expand not supported for fieldType:'text'\");\n\n    // no expand field\n    SolrException e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"missing expand field\", e.getMessage());\n\n    // query and filter syntax errors\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.fq\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.fq\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.sort\", \"bleh\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Can't determine a Sort Order (asc or desc) in sort spec 'bleh'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"text_t\", \"expand.q\", \"*:*\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"Expand not supported for fieldType:'text'\", e.getMessage());\n\n    resetExceptionIgnores();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testErrorCases().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testErrorCases().mjava","sourceNew":"  @Test\n  public void testErrorCases() {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"text_t\", \"bleh bleh\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\", \"YYYY\", \"text_t\", \"bleh bleh\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc1));\n\n    ignoreException(\"missing expand field\");\n    ignoreException(\"Expected identifier at pos 2\");\n    ignoreException(\"Can't determine a Sort Order\");\n    ignoreException(\"Expand not supported for fieldType:'text'\");\n\n    // expand with grouping\n    SolrException e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"expand\", \"true\", \"expand.field\", \"id\", \"group\", \"true\", \"group.field\", \"id\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"Can not use expand with Grouping enabled\", e.getMessage());\n\n    // no expand field\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"missing expand field\", e.getMessage());\n\n    // query and filter syntax errors\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.fq\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.fq\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.sort\", \"bleh\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Can't determine a Sort Order (asc or desc) in sort spec 'bleh'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"text_t\", \"expand.q\", \"*:*\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"Expand not supported for fieldType:'text'\", e.getMessage());\n\n    resetExceptionIgnores();\n  }\n\n","sourceOld":"  @Test\n  public void testErrorCases() {\n    String[] doc = {\"id\",\"1\", \"term_s\", \"YYYY\", \"text_t\", \"bleh bleh\", \"test_i\", \"5000\", \"test_l\", \"100\", \"test_f\", \"200\"};\n    assertU(adoc(doc));\n    assertU(commit());\n    String[] doc1 = {\"id\",\"2\", \"term_s\", \"YYYY\", \"text_t\", \"bleh bleh\", \"test_i\", \"500\", \"test_l\", \"1000\", \"test_f\", \"2000\"};\n    assertU(adoc(doc1));\n\n    ignoreException(\"missing expand field\");\n    ignoreException(\"Expected identifier at pos 2\");\n    ignoreException(\"Can't determine a Sort Order\");\n    ignoreException(\"Expand not supported for fieldType:'text'\");\n\n    // no expand field\n    SolrException e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"missing expand field\", e.getMessage());\n\n    // query and filter syntax errors\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.fq\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.fq\", \"{!\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Expected identifier at pos 2 str='{!'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"term_s\", \"expand.q\", \"*:*\", \"expand.sort\", \"bleh\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertTrue(e.getMessage().contains(\"Can't determine a Sort Order (asc or desc) in sort spec 'bleh'\"));\n\n    e = expectThrows(SolrException.class,  () -> h.query(req(\"q\", \"*:*\", \"expand\", \"true\",\n        \"expand.field\", \"text_t\", \"expand.q\", \"*:*\")));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertEquals(\"Expand not supported for fieldType:'text'\", e.getMessage());\n\n    resetExceptionIgnores();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["97473b7232d88686879e8d72210e5e2ad71bfcd1","6457ab2a0e58432fae0f4816844575d9fdf4fc00"],"97473b7232d88686879e8d72210e5e2ad71bfcd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6457ab2a0e58432fae0f4816844575d9fdf4fc00":["97473b7232d88686879e8d72210e5e2ad71bfcd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6457ab2a0e58432fae0f4816844575d9fdf4fc00"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"97473b7232d88686879e8d72210e5e2ad71bfcd1":["df724d84dab24a0cc54bec95a8680867adc7f171","6457ab2a0e58432fae0f4816844575d9fdf4fc00"],"6457ab2a0e58432fae0f4816844575d9fdf4fc00":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97473b7232d88686879e8d72210e5e2ad71bfcd1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}