{"path":"contrib/gdata-server/src/gom/test/org/apache/lucene/gdata/gom/core/GOMFeedImplTest#testWriteRssOutput().mjava","commits":[{"id":"ebe0cf7fd7142a4f158b89ac046e386f7cf8a212","date":1166013594,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/gom/test/org/apache/lucene/gdata/gom/core/GOMFeedImplTest#testWriteRssOutput().mjava","pathOld":"/dev/null","sourceNew":"\t/*\n\t * Test method for\n\t * 'org.apache.lucene.gdata.gom.core.GOMFeedImpl.writeRssOutput(GOMWriter)'\n\t */\n\tpublic void testWriteRssOutput() throws XMLStreamException,\n\t\t\tFactoryConfigurationError {\n\t\t// write a whole feed and check if all elements are written\n\t\tthis.impl.addAuthor(new GOMAuthorImpl());\n\t\tthis.impl.addCategory(new GOMCategoryImpl());\n\t\tthis.impl.addContributor(new GOMContributorImpl());\n\t\tGOMLinkImpl impl2 = new GOMLinkImpl();\n\t\timpl2.setHref(\"test\");\n\t\timpl2.setRel(\"alternate\");\n\t\tthis.impl.addLink(impl2);\n\t\tthis.impl.addNamespace(GOMNamespace.OPENSEARCH_NAMESPACE);\n\t\tthis.impl.setGenerator(new GOMGeneratorImpl());\n\t\tthis.impl.setIcon(new GOMIconImpl());\n\t\tthis.impl.setId(new GOMIdImpl());\n\t\tthis.impl.setLogo(new GOMLogoImpl());\n\t\tthis.impl.setRights(new GOMRightsImpl());\n\t\tthis.impl.setSubtitle(new GOMSubtitleImpl());\n\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\t\tthis.impl.addNamespace(GOMNamespace.ATOM_NAMESPACE);\n\t\tthis.impl.addNamespace(GOMNamespace.OPENSEARCH_NAMESPACE);\n\t\tthis.impl.extensions.add(new TestExtension());\n\t\tStringWriter stW = new StringWriter();\n\t\tGOMOutputWriter writer = new GOMStaxWriter(stW);\n\t\tthis.impl.writeRssOutput(writer);\n\n\t\tString string = stW.toString();\n\t\tassertTrue(string.contains(\"xmlns:openSearch\"));\n\t\tassertTrue(string.contains(\"xmlns:atom\"));\n\t\t// TODO\n\t\t// assertTrue(string.contains(\"<language\"));\n\t\tassertTrue(string.contains(\"<\" + GOMCategory.LOCALNAME));\n\t\t// author\n\t\tassertTrue(string.contains(\"<managingEditor\"));\n\t\tassertTrue(string.contains(\"<\" + GOMLink.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMGenerator.LOCALNAME));\n\t\tassertTrue(string.contains(\"<image><url\"));\n\t\tassertTrue(string.contains(\"<atom:\" + GOMId.LOCALNAME));\n\n\t\tassertTrue(string.contains(\"<copyright\"));\n\t\tassertTrue(string.contains(\"<\" + GOMTitle.LOCALNAME));\n\t\tassertTrue(string.contains(\"<lastBuildDate\"));\n\t\tassertTrue(string.contains(\"<openSearch:itemsPerPage>\"));\n\t\tassertTrue(string.contains(\"<openSearch:startIndex>\"));\n\t\tassertTrue(string.contains(\"<atom:test\"));\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/gom/src/test/org/apache/lucene/gdata/gom/core/GOMFeedImplTest#testWriteRssOutput().mjava","pathOld":"contrib/gdata-server/src/gom/test/org/apache/lucene/gdata/gom/core/GOMFeedImplTest#testWriteRssOutput().mjava","sourceNew":"\t/*\n\t * Test method for\n\t * 'org.apache.lucene.gdata.gom.core.GOMFeedImpl.writeRssOutput(GOMWriter)'\n\t */\n\tpublic void testWriteRssOutput() throws XMLStreamException,\n\t\t\tFactoryConfigurationError {\n\t\t// write a whole feed and check if all elements are written\n\t\tthis.impl.addAuthor(new GOMAuthorImpl());\n\t\tthis.impl.addCategory(new GOMCategoryImpl());\n\t\tthis.impl.addContributor(new GOMContributorImpl());\n\t\tGOMLinkImpl impl2 = new GOMLinkImpl();\n\t\timpl2.setHref(\"test\");\n\t\timpl2.setRel(\"alternate\");\n\t\tthis.impl.addLink(impl2);\n\t\tthis.impl.addNamespace(GOMNamespace.OPENSEARCH_NAMESPACE);\n\t\tthis.impl.setGenerator(new GOMGeneratorImpl());\n\t\tthis.impl.setIcon(new GOMIconImpl());\n\t\tthis.impl.setId(new GOMIdImpl());\n\t\tthis.impl.setLogo(new GOMLogoImpl());\n\t\tthis.impl.setRights(new GOMRightsImpl());\n\t\tthis.impl.setSubtitle(new GOMSubtitleImpl());\n\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\t\tthis.impl.addNamespace(GOMNamespace.ATOM_NAMESPACE);\n\t\tthis.impl.addNamespace(GOMNamespace.OPENSEARCH_NAMESPACE);\n\t\tthis.impl.extensions.add(new TestExtension());\n\t\tStringWriter stW = new StringWriter();\n\t\tGOMOutputWriter writer = new GOMStaxWriter(stW);\n\t\tthis.impl.writeRssOutput(writer);\n\n\t\tString string = stW.toString();\n\t\tassertTrue(string.contains(\"xmlns:openSearch\"));\n\t\tassertTrue(string.contains(\"xmlns:atom\"));\n\t\t// TODO\n\t\t// assertTrue(string.contains(\"<language\"));\n\t\tassertTrue(string.contains(\"<\" + GOMCategory.LOCALNAME));\n\t\t// author\n\t\tassertTrue(string.contains(\"<managingEditor\"));\n\t\tassertTrue(string.contains(\"<\" + GOMLink.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMGenerator.LOCALNAME));\n\t\tassertTrue(string.contains(\"<image><url\"));\n\t\tassertTrue(string.contains(\"<atom:\" + GOMId.LOCALNAME));\n\n\t\tassertTrue(string.contains(\"<copyright\"));\n\t\tassertTrue(string.contains(\"<\" + GOMTitle.LOCALNAME));\n\t\tassertTrue(string.contains(\"<lastBuildDate\"));\n\t\tassertTrue(string.contains(\"<openSearch:itemsPerPage>\"));\n\t\tassertTrue(string.contains(\"<openSearch:startIndex>\"));\n\t\tassertTrue(string.contains(\"<atom:test\"));\n\t}\n\n","sourceOld":"\t/*\n\t * Test method for\n\t * 'org.apache.lucene.gdata.gom.core.GOMFeedImpl.writeRssOutput(GOMWriter)'\n\t */\n\tpublic void testWriteRssOutput() throws XMLStreamException,\n\t\t\tFactoryConfigurationError {\n\t\t// write a whole feed and check if all elements are written\n\t\tthis.impl.addAuthor(new GOMAuthorImpl());\n\t\tthis.impl.addCategory(new GOMCategoryImpl());\n\t\tthis.impl.addContributor(new GOMContributorImpl());\n\t\tGOMLinkImpl impl2 = new GOMLinkImpl();\n\t\timpl2.setHref(\"test\");\n\t\timpl2.setRel(\"alternate\");\n\t\tthis.impl.addLink(impl2);\n\t\tthis.impl.addNamespace(GOMNamespace.OPENSEARCH_NAMESPACE);\n\t\tthis.impl.setGenerator(new GOMGeneratorImpl());\n\t\tthis.impl.setIcon(new GOMIconImpl());\n\t\tthis.impl.setId(new GOMIdImpl());\n\t\tthis.impl.setLogo(new GOMLogoImpl());\n\t\tthis.impl.setRights(new GOMRightsImpl());\n\t\tthis.impl.setSubtitle(new GOMSubtitleImpl());\n\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\t\tthis.impl.addNamespace(GOMNamespace.ATOM_NAMESPACE);\n\t\tthis.impl.addNamespace(GOMNamespace.OPENSEARCH_NAMESPACE);\n\t\tthis.impl.extensions.add(new TestExtension());\n\t\tStringWriter stW = new StringWriter();\n\t\tGOMOutputWriter writer = new GOMStaxWriter(stW);\n\t\tthis.impl.writeRssOutput(writer);\n\n\t\tString string = stW.toString();\n\t\tassertTrue(string.contains(\"xmlns:openSearch\"));\n\t\tassertTrue(string.contains(\"xmlns:atom\"));\n\t\t// TODO\n\t\t// assertTrue(string.contains(\"<language\"));\n\t\tassertTrue(string.contains(\"<\" + GOMCategory.LOCALNAME));\n\t\t// author\n\t\tassertTrue(string.contains(\"<managingEditor\"));\n\t\tassertTrue(string.contains(\"<\" + GOMLink.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMGenerator.LOCALNAME));\n\t\tassertTrue(string.contains(\"<image><url\"));\n\t\tassertTrue(string.contains(\"<atom:\" + GOMId.LOCALNAME));\n\n\t\tassertTrue(string.contains(\"<copyright\"));\n\t\tassertTrue(string.contains(\"<\" + GOMTitle.LOCALNAME));\n\t\tassertTrue(string.contains(\"<lastBuildDate\"));\n\t\tassertTrue(string.contains(\"<openSearch:itemsPerPage>\"));\n\t\tassertTrue(string.contains(\"<openSearch:startIndex>\"));\n\t\tassertTrue(string.contains(\"<atom:test\"));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["ebe0cf7fd7142a4f158b89ac046e386f7cf8a212"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ebe0cf7fd7142a4f158b89ac046e386f7cf8a212":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ebe0cf7fd7142a4f158b89ac046e386f7cf8a212"],"ebe0cf7fd7142a4f158b89ac046e386f7cf8a212":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}