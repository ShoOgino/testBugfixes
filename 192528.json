{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","commits":[{"id":"8521d944f9dfb45692ec28235dbf116d47ef69ba","date":1417535150,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int docCount,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = dir;\n    this.version = version;\n    this.name = name;\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = diagnostics;\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int docCount,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = dir;\n    this.version = version;\n    this.name = name;\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = diagnostics;\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79700663e164dece87bed4adfd3e28bab6cb1385","date":1425241849,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int docCount,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int docCount,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = dir;\n    this.version = version;\n    this.name = name;\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = diagnostics;\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"299a2348fa24151d150182211b6208a38e5e3450","date":1425304608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int docCount,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int docCount,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = dir;\n    this.version = version;\n    this.name = name;\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = diagnostics;\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0267c69e2456a3477a1ad785723f2135da3117e","date":1425317087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int docCount,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int docCount,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int docCount,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = dir;\n    this.version = version;\n    this.name = name;\n    this.docCount = docCount;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = diagnostics;\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String],Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes, Sort indexSort) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n    this.indexSort = indexSort;\n  }\n\n","sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#SegmentInfo(Directory,Version,String,int,boolean,Codec,Map[String,String],byte[],Map[String,String]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Construct a new complete SegmentInfo instance from input.\n   * <p>Note: this is public only to allow access from\n   * the codecs package.</p>\n   */\n  public SegmentInfo(Directory dir, Version version, String name, int maxDoc,\n                     boolean isCompoundFile, Codec codec, Map<String,String> diagnostics,\n                     byte[] id, Map<String,String> attributes) {\n    assert !(dir instanceof TrackingDirectoryWrapper);\n    this.dir = Objects.requireNonNull(dir);\n    this.version = Objects.requireNonNull(version);\n    this.name = Objects.requireNonNull(name);\n    this.maxDoc = maxDoc;\n    this.isCompoundFile = isCompoundFile;\n    this.codec = codec;\n    this.diagnostics = Objects.requireNonNull(diagnostics);\n    this.id = id;\n    if (id.length != StringHelper.ID_LENGTH) {\n      throw new IllegalArgumentException(\"invalid id: \" + Arrays.toString(id));\n    }\n    this.attributes = Objects.requireNonNull(attributes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b0267c69e2456a3477a1ad785723f2135da3117e":["79700663e164dece87bed4adfd3e28bab6cb1385"],"0ad30c6a479e764150a3316e57263319775f1df2":["b0267c69e2456a3477a1ad785723f2135da3117e","3d33e731a93d4b57e662ff094f64f94a745422d4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b0267c69e2456a3477a1ad785723f2135da3117e","d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["b0267c69e2456a3477a1ad785723f2135da3117e","0ad30c6a479e764150a3316e57263319775f1df2"],"8521d944f9dfb45692ec28235dbf116d47ef69ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["8521d944f9dfb45692ec28235dbf116d47ef69ba","b0267c69e2456a3477a1ad785723f2135da3117e"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["b0267c69e2456a3477a1ad785723f2135da3117e"],"b06445ae1731e049327712db0454e5643ca9b7fe":["299a2348fa24151d150182211b6208a38e5e3450","b0267c69e2456a3477a1ad785723f2135da3117e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"79700663e164dece87bed4adfd3e28bab6cb1385":["8521d944f9dfb45692ec28235dbf116d47ef69ba"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["b0267c69e2456a3477a1ad785723f2135da3117e","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"299a2348fa24151d150182211b6208a38e5e3450":["8521d944f9dfb45692ec28235dbf116d47ef69ba","79700663e164dece87bed4adfd3e28bab6cb1385"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"]},"commit2Childs":{"b0267c69e2456a3477a1ad785723f2135da3117e":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ceaef6cfc68c8ab22a684192e469a8280f9e6e70","b06445ae1731e049327712db0454e5643ca9b7fe","3d33e731a93d4b57e662ff094f64f94a745422d4"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8521d944f9dfb45692ec28235dbf116d47ef69ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","79700663e164dece87bed4adfd3e28bab6cb1385","299a2348fa24151d150182211b6208a38e5e3450"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8521d944f9dfb45692ec28235dbf116d47ef69ba"],"79700663e164dece87bed4adfd3e28bab6cb1385":["b0267c69e2456a3477a1ad785723f2135da3117e","299a2348fa24151d150182211b6208a38e5e3450"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"299a2348fa24151d150182211b6208a38e5e3450":["b06445ae1731e049327712db0454e5643ca9b7fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}