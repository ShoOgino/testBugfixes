{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#stem(String).mjava","commits":[{"id":"7c9cc1cf78edc774cdf339bab3ae62f077929607","date":1072205195,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#stem(String).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Stemms the given term to an unique <tt>discriminator</tt>.\n\t *\n\t * @param word  The term that should be stemmed.\n\t * @return      Discriminator for <tt>term</tt>\n\t */\n\tprotected String stem( String term ) {\n    boolean altered = false ; // altered the term\n\n    // creates CT\n    createCT(term) ;\n    \n\t\tif ( !isIndexable( CT ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( !isStemmable( CT ) ) {\n\t\t\treturn CT ;\n\t\t}\n\n    R1 = getR1(CT) ;\n    R2 = getR1(R1) ;\n    RV = getRV(CT) ;\n    TERM = term + \";\" +CT ;\n\n    altered = step1() ;\n    if (!altered) {\n      altered = step2() ;\n    }\n\n    if (altered) {\n      step3();\n    } else {\n      step4();\n    }\n\n    step5() ;\n\n    return CT ;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"747512c37185cf79a1d812f5dd2c324fce4fc155","date":1074547356,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#stem(String).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#stem(String).mjava","sourceNew":"\t/**\n\t * Stemms the given term to an unique <tt>discriminator</tt>.\n\t *\n\t * @param term  The term that should be stemmed.\n\t * @return      Discriminator for <tt>term</tt>\n\t */\n\tprotected String stem( String term ) {\n    boolean altered = false ; // altered the term\n\n    // creates CT\n    createCT(term) ;\n\n\t\tif ( !isIndexable( CT ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( !isStemmable( CT ) ) {\n\t\t\treturn CT ;\n\t\t}\n\n    R1 = getR1(CT) ;\n    R2 = getR1(R1) ;\n    RV = getRV(CT) ;\n    TERM = term + \";\" +CT ;\n\n    altered = step1() ;\n    if (!altered) {\n      altered = step2() ;\n    }\n\n    if (altered) {\n      step3();\n    } else {\n      step4();\n    }\n\n    step5() ;\n\n    return CT ;\n\t}\n\n","sourceOld":"\t/**\n\t * Stemms the given term to an unique <tt>discriminator</tt>.\n\t *\n\t * @param word  The term that should be stemmed.\n\t * @return      Discriminator for <tt>term</tt>\n\t */\n\tprotected String stem( String term ) {\n    boolean altered = false ; // altered the term\n\n    // creates CT\n    createCT(term) ;\n    \n\t\tif ( !isIndexable( CT ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( !isStemmable( CT ) ) {\n\t\t\treturn CT ;\n\t\t}\n\n    R1 = getR1(CT) ;\n    R2 = getR1(R1) ;\n    RV = getRV(CT) ;\n    TERM = term + \";\" +CT ;\n\n    altered = step1() ;\n    if (!altered) {\n      altered = step2() ;\n    }\n\n    if (altered) {\n      step3();\n    } else {\n      step4();\n    }\n\n    step5() ;\n\n    return CT ;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#stem(String).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#stem(String).mjava","sourceNew":"\t/**\n\t * Stemms the given term to an unique <tt>discriminator</tt>.\n\t *\n\t * @param term  The term that should be stemmed.\n\t * @return      Discriminator for <tt>term</tt>\n\t */\n\tprotected String stem( String term ) {\n    boolean altered = false ; // altered the term\n\n    // creates CT\n    createCT(term) ;\n\n\t\tif ( !isIndexable( CT ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( !isStemmable( CT ) ) {\n\t\t\treturn CT ;\n\t\t}\n\n    R1 = getR1(CT) ;\n    R2 = getR1(R1) ;\n    RV = getRV(CT) ;\n    TERM = term + \";\" +CT ;\n\n    altered = step1() ;\n    if (!altered) {\n      altered = step2() ;\n    }\n\n    if (altered) {\n      step3();\n    } else {\n      step4();\n    }\n\n    step5() ;\n\n    return CT ;\n\t}\n\n","sourceOld":"\t/**\n\t * Stemms the given term to an unique <tt>discriminator</tt>.\n\t *\n\t * @param term  The term that should be stemmed.\n\t * @return      Discriminator for <tt>term</tt>\n\t */\n\tprotected String stem( String term ) {\n    boolean altered = false ; // altered the term\n\n    // creates CT\n    createCT(term) ;\n\n\t\tif ( !isIndexable( CT ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( !isStemmable( CT ) ) {\n\t\t\treturn CT ;\n\t\t}\n\n    R1 = getR1(CT) ;\n    R2 = getR1(R1) ;\n    RV = getRV(CT) ;\n    TERM = term + \";\" +CT ;\n\n    altered = step1() ;\n    if (!altered) {\n      altered = step2() ;\n    }\n\n    if (altered) {\n      step3();\n    } else {\n      step4();\n    }\n\n    step5() ;\n\n    return CT ;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"747512c37185cf79a1d812f5dd2c324fce4fc155":["7c9cc1cf78edc774cdf339bab3ae62f077929607"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["747512c37185cf79a1d812f5dd2c324fce4fc155"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c9cc1cf78edc774cdf339bab3ae62f077929607":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"747512c37185cf79a1d812f5dd2c324fce4fc155":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c9cc1cf78edc774cdf339bab3ae62f077929607"],"7c9cc1cf78edc774cdf339bab3ae62f077929607":["747512c37185cf79a1d812f5dd2c324fce4fc155"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}