{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity#encodeNormValue(float).mjava","commits":[{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity#encodeNormValue(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#encodeNormValue(float).mjava","sourceNew":"  /**\n   * Encodes a normalization factor for storage in an index.\n   * <p>\n   * The encoding uses a three-bit mantissa, a five-bit exponent, and the\n   * zero-exponent point at 15, thus representing values from around 7x10^9 to\n   * 2x10^-9 with about one significant decimal digit of accuracy. Zero is also\n   * represented. Negative numbers are rounded up to zero. Values too large to\n   * represent are rounded down to the largest representable value. Positive\n   * values too small to represent are rounded up to the smallest positive\n   * representable value.\n   * \n   * @see org.apache.lucene.document.Field#setBoost(float)\n   * @see org.apache.lucene.util.SmallFloat\n   */\n  @Override\n  public final long encodeNormValue(float f) {\n    return SmallFloat.floatToByte315(f);\n  }\n\n","sourceOld":"  /**\n   * Encodes a normalization factor for storage in an index.\n   * <p>\n   * The encoding uses a three-bit mantissa, a five-bit exponent, and the\n   * zero-exponent point at 15, thus representing values from around 7x10^9 to\n   * 2x10^-9 with about one significant decimal digit of accuracy. Zero is also\n   * represented. Negative numbers are rounded up to zero. Values too large to\n   * represent are rounded down to the largest representable value. Positive\n   * values too small to represent are rounded up to the smallest positive\n   * representable value.\n   * \n   * @see org.apache.lucene.document.Field#setBoost(float)\n   * @see org.apache.lucene.util.SmallFloat\n   */\n  @Override\n  public final long encodeNormValue(float f) {\n    return SmallFloat.floatToByte315(f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity#encodeNormValue(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity#encodeNormValue(float).mjava","sourceNew":"  /**\n   * Encodes a normalization factor for storage in an index.\n   * <p>\n   * The encoding uses a three-bit mantissa, a five-bit exponent, and the\n   * zero-exponent point at 15, thus representing values from around 7x10^9 to\n   * 2x10^-9 with about one significant decimal digit of accuracy. Zero is also\n   * represented. Negative numbers are rounded up to zero. Values too large to\n   * represent are rounded down to the largest representable value. Positive\n   * values too small to represent are rounded up to the smallest positive\n   * representable value.\n   *\n   * @see org.apache.lucene.util.SmallFloat\n   */\n  @Override\n  public final long encodeNormValue(float f) {\n    return SmallFloat.floatToByte315(f);\n  }\n\n","sourceOld":"  /**\n   * Encodes a normalization factor for storage in an index.\n   * <p>\n   * The encoding uses a three-bit mantissa, a five-bit exponent, and the\n   * zero-exponent point at 15, thus representing values from around 7x10^9 to\n   * 2x10^-9 with about one significant decimal digit of accuracy. Zero is also\n   * represented. Negative numbers are rounded up to zero. Values too large to\n   * represent are rounded down to the largest representable value. Positive\n   * values too small to represent are rounded up to the smallest positive\n   * representable value.\n   * \n   * @see org.apache.lucene.document.Field#setBoost(float)\n   * @see org.apache.lucene.util.SmallFloat\n   */\n  @Override\n  public final long encodeNormValue(float f) {\n    return SmallFloat.floatToByte315(f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity#encodeNormValue(float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Encodes a normalization factor for storage in an index.\n   * <p>\n   * The encoding uses a three-bit mantissa, a five-bit exponent, and the\n   * zero-exponent point at 15, thus representing values from around 7x10^9 to\n   * 2x10^-9 with about one significant decimal digit of accuracy. Zero is also\n   * represented. Negative numbers are rounded up to zero. Values too large to\n   * represent are rounded down to the largest representable value. Positive\n   * values too small to represent are rounded up to the smallest positive\n   * representable value.\n   *\n   * @see org.apache.lucene.util.SmallFloat\n   */\n  @Override\n  public final long encodeNormValue(float f) {\n    return SmallFloat.floatToByte315(f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity#encodeNormValue(float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Encodes a normalization factor for storage in an index.\n   * <p>\n   * The encoding uses a three-bit mantissa, a five-bit exponent, and the\n   * zero-exponent point at 15, thus representing values from around 7x10^9 to\n   * 2x10^-9 with about one significant decimal digit of accuracy. Zero is also\n   * represented. Negative numbers are rounded up to zero. Values too large to\n   * represent are rounded down to the largest representable value. Positive\n   * values too small to represent are rounded up to the smallest positive\n   * representable value.\n   *\n   * @see org.apache.lucene.util.SmallFloat\n   */\n  @Override\n  public final long encodeNormValue(float f) {\n    return SmallFloat.floatToByte315(f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["acd9883560fd89e6448b2b447302fe543040cd4f","615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["acd9883560fd89e6448b2b447302fe543040cd4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615370d2b876c3435773b5174df2e2242ad7981a"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"acd9883560fd89e6448b2b447302fe543040cd4f":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["acd9883560fd89e6448b2b447302fe543040cd4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}