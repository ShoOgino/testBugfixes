{"path":"lucene/core/src/java/org/apache/lucene/util/fst/BitTableUtil#nextBitSet(int,int,FST.BytesReader).mjava","commits":[{"id":"06086b5bd0f0d57858f0675becc58edf1f6b7c11","date":1586421397,"type":0,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/BitTableUtil#nextBitSet(int,int,FST.BytesReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the index of the next bit set following the given bit zero-based index.\n   * <br>For example with bits 100011:\n   * the next bit set after index=-1 is at index=0;\n   * the next bit set after index=0 is at index=1;\n   * the next bit set after index=1 is at index=5;\n   * there is no next bit set after index=5.\n   *\n   * @param bitIndex      The bit zero-based index. It must be greater than or equal to -1, and strictly less than\n   *                      {@code number of bit-table bytes * Byte.SIZE}.\n   * @param bitTableBytes The number of bytes in the bit-table.\n   * @param reader        The {@link FST.BytesReader} to read. It must be positioned at the beginning of the bit-table.\n   * @return The zero-based index of the next bit set after the provided {@code bitIndex}; or -1 if none.\n   */\n  static int nextBitSet(int bitIndex, int bitTableBytes, FST.BytesReader reader) throws IOException {\n    assert bitIndex >= -1 && bitIndex < bitTableBytes * Byte.SIZE : \"bitIndex=\" + bitIndex + \" bitTableBytes=\" + bitTableBytes;\n    int byteIndex = bitIndex / Byte.SIZE;\n    int mask = -1 << ((bitIndex + 1) & (Byte.SIZE - 1));\n    int i;\n    if (mask == -1 && bitIndex != -1) {\n      reader.skipBytes(byteIndex + 1);\n      i = 0;\n    } else {\n      reader.skipBytes(byteIndex);\n      i = (reader.readByte() & 0xFF) & mask;\n    }\n    while (i == 0) {\n      if (++byteIndex == bitTableBytes) {\n        return -1;\n      }\n      i = reader.readByte() & 0xFF;\n    }\n    return Integer.numberOfTrailingZeros(i) + (byteIndex << 3);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"06086b5bd0f0d57858f0675becc58edf1f6b7c11":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06086b5bd0f0d57858f0675becc58edf1f6b7c11"]},"commit2Childs":{"06086b5bd0f0d57858f0675becc58edf1f6b7c11":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06086b5bd0f0d57858f0675becc58edf1f6b7c11"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}