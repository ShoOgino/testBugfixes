{"path":"lucene/core/src/java/org/apache/lucene/codecs/SimpleDVProducer#getSorted(FieldInfo).mjava","commits":[{"id":"9386547f1b0d3d3a4166475321533d220a3edfe3","date":1353095292,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SimpleDVProducer#getSorted(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  /** Loads all values into RAM. */\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    SortedDocValues source = getDirectSorted(field);\n    final int valueCount = source.getValueCount();\n    final byte[][] values = new byte[valueCount][];\n    BytesRef scratch = new BytesRef();\n    for(int ord=0;ord<valueCount;ord++) {\n      source.lookupOrd(ord, scratch);\n      values[ord] = new byte[scratch.length];\n      System.arraycopy(scratch.bytes, scratch.offset, values[ord], 0, scratch.length);\n    }\n\n    final int[] ords = new int[maxDoc];\n    for(int docID=0;docID<maxDoc;docID++) {\n      ords[docID] = source.getOrd(docID);\n    }\n\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return ords[docID];\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        result.bytes = values[ord];\n        result.offset = 0;\n        result.length = result.bytes.length;\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4d374b2bebd0d52acaa61038fbf23068620fba7","date":1353240004,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SimpleDVProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/SimpleDVProducer#getSorted(FieldInfo).mjava","sourceNew":"  public abstract SortedDocValues getSorted(FieldInfo field) throws IOException;\n\n","sourceOld":"  /** Loads all values into RAM. */\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    SortedDocValues source = getDirectSorted(field);\n    final int valueCount = source.getValueCount();\n    final byte[][] values = new byte[valueCount][];\n    BytesRef scratch = new BytesRef();\n    for(int ord=0;ord<valueCount;ord++) {\n      source.lookupOrd(ord, scratch);\n      values[ord] = new byte[scratch.length];\n      System.arraycopy(scratch.bytes, scratch.offset, values[ord], 0, scratch.length);\n    }\n\n    final int[] ords = new int[maxDoc];\n    for(int docID=0;docID<maxDoc;docID++) {\n      ords[docID] = source.getOrd(docID);\n    }\n\n    return new SortedDocValues() {\n      @Override\n      public int getOrd(int docID) {\n        return ords[docID];\n      }\n\n      @Override\n      public void lookupOrd(int ord, BytesRef result) {\n        result.bytes = values[ord];\n        result.offset = 0;\n        result.length = result.bytes.length;\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","date":1358521790,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/SimpleDVProducer#getSorted(FieldInfo).mjava","sourceNew":"  public abstract SortedDocValues getSorted(FieldInfo field) throws IOException;\n\n","sourceOld":"  public abstract SortedDocValues getSorted(FieldInfo field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["a4d374b2bebd0d52acaa61038fbf23068620fba7"],"9386547f1b0d3d3a4166475321533d220a3edfe3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a4d374b2bebd0d52acaa61038fbf23068620fba7":["9386547f1b0d3d3a4166475321533d220a3edfe3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":[],"9386547f1b0d3d3a4166475321533d220a3edfe3":["a4d374b2bebd0d52acaa61038fbf23068620fba7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9386547f1b0d3d3a4166475321533d220a3edfe3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a4d374b2bebd0d52acaa61038fbf23068620fba7":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}