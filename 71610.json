{"path":"src/test/org/apache/solr/search/TestDocSet#getRandomSets(int,int,int,int).mjava","commits":[{"id":"30391436869a41b74d4ba7098c40d955b686a10c","date":1242835871,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/search/TestDocSet#getRandomSets(int,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  public DocSet[] getRandomSets(int nSets, int minSetSize, int maxSetSize, int maxDoc) {\n    DocSet[] sets = new DocSet[nSets];\n\n    for (int i=0; i<nSets; i++) {\n      int sz;\n      sz = rand.nextInt(maxSetSize-minSetSize+1)+minSetSize;\n      // different distribution\n      // sz = (maxSetSize+1)/(rand.nextInt(maxSetSize)+1) + minSetSize;\n      sets[i] = getRandomDocSet(sz,maxDoc);\n    }\n\n    return sets;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/TestDocSet#getRandomSets(int,int,int,int).mjava","pathOld":"src/test/org/apache/solr/search/TestDocSet#getRandomSets(int,int,int,int).mjava","sourceNew":"  public DocSet[] getRandomSets(int nSets, int minSetSize, int maxSetSize, int maxDoc) {\n    DocSet[] sets = new DocSet[nSets];\n\n    for (int i=0; i<nSets; i++) {\n      int sz;\n      sz = rand.nextInt(maxSetSize-minSetSize+1)+minSetSize;\n      // different distribution\n      // sz = (maxSetSize+1)/(rand.nextInt(maxSetSize)+1) + minSetSize;\n      sets[i] = getRandomDocSet(sz,maxDoc);\n    }\n\n    return sets;\n  }\n\n","sourceOld":"  public DocSet[] getRandomSets(int nSets, int minSetSize, int maxSetSize, int maxDoc) {\n    DocSet[] sets = new DocSet[nSets];\n\n    for (int i=0; i<nSets; i++) {\n      int sz;\n      sz = rand.nextInt(maxSetSize-minSetSize+1)+minSetSize;\n      // different distribution\n      // sz = (maxSetSize+1)/(rand.nextInt(maxSetSize)+1) + minSetSize;\n      sets[i] = getRandomDocSet(sz,maxDoc);\n    }\n\n    return sets;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"30391436869a41b74d4ba7098c40d955b686a10c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["30391436869a41b74d4ba7098c40d955b686a10c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["30391436869a41b74d4ba7098c40d955b686a10c"],"30391436869a41b74d4ba7098c40d955b686a10c":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}