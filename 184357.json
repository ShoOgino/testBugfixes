{"path":"src/test/org/apache/lucene/search/TestBooleanOr#testParenthesisShould().mjava","commits":[{"id":"13a64ee9666ae2ae79810af2cf0c6608e4a7371f","date":1112671265,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestBooleanOr#testParenthesisShould().mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * <code>(T:files T:deleting) (C:production C:optimize)</code>\n\t * not working. results NO HIT.\n\t *\n\t * @throws IOException\n\t */\n\tpublic void testParenthesisShould() throws IOException {\n\t\tBooleanQuery q3 = new BooleanQuery();\n\t\tq3.add(new BooleanClause(t1, BooleanClause.Occur.SHOULD));\n\t\tq3.add(new BooleanClause(t2, BooleanClause.Occur.SHOULD));\n\t\tBooleanQuery q4 = new BooleanQuery();\n\t\tq4.add(new BooleanClause(c1, BooleanClause.Occur.SHOULD));\n\t\tq4.add(new BooleanClause(c2, BooleanClause.Occur.SHOULD));\n\t\tBooleanQuery q2 = new BooleanQuery();\n\t\tq2.add(q3, BooleanClause.Occur.SHOULD);\n\t\tq2.add(q4, BooleanClause.Occur.SHOULD);\n\t\tassertEquals(1, search(q2));\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestBooleanOr#testParenthesisShould().mjava","pathOld":"src/test/org/apache/lucene/search/TestBooleanOr#testParenthesisShould().mjava","sourceNew":"  /**\n   * <code>(T:files T:deleting) (C:production C:optimize)</code>\n   * not working. results NO HIT.\n   *\n   * @throws IOException\n   */\n  public void testParenthesisShould() throws IOException {\n    BooleanQuery q3 = new BooleanQuery();\n    q3.add(new BooleanClause(t1, BooleanClause.Occur.SHOULD));\n    q3.add(new BooleanClause(t2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q4 = new BooleanQuery();\n    q4.add(new BooleanClause(c1, BooleanClause.Occur.SHOULD));\n    q4.add(new BooleanClause(c2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q2 = new BooleanQuery();\n    q2.add(q3, BooleanClause.Occur.SHOULD);\n    q2.add(q4, BooleanClause.Occur.SHOULD);\n    assertEquals(1, search(q2));\n  }\n\n","sourceOld":"\t/**\n\t * <code>(T:files T:deleting) (C:production C:optimize)</code>\n\t * not working. results NO HIT.\n\t *\n\t * @throws IOException\n\t */\n\tpublic void testParenthesisShould() throws IOException {\n\t\tBooleanQuery q3 = new BooleanQuery();\n\t\tq3.add(new BooleanClause(t1, BooleanClause.Occur.SHOULD));\n\t\tq3.add(new BooleanClause(t2, BooleanClause.Occur.SHOULD));\n\t\tBooleanQuery q4 = new BooleanQuery();\n\t\tq4.add(new BooleanClause(c1, BooleanClause.Occur.SHOULD));\n\t\tq4.add(new BooleanClause(c2, BooleanClause.Occur.SHOULD));\n\t\tBooleanQuery q2 = new BooleanQuery();\n\t\tq2.add(q3, BooleanClause.Occur.SHOULD);\n\t\tq2.add(q4, BooleanClause.Occur.SHOULD);\n\t\tassertEquals(1, search(q2));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBooleanOr#testParenthesisShould().mjava","pathOld":"src/test/org/apache/lucene/search/TestBooleanOr#testParenthesisShould().mjava","sourceNew":"  /**\n   * <code>(T:files T:deleting) (C:production C:optimize)</code>\n   * not working. results NO HIT.\n   *\n   * @throws IOException\n   */\n  public void testParenthesisShould() throws IOException {\n    BooleanQuery q3 = new BooleanQuery();\n    q3.add(new BooleanClause(t1, BooleanClause.Occur.SHOULD));\n    q3.add(new BooleanClause(t2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q4 = new BooleanQuery();\n    q4.add(new BooleanClause(c1, BooleanClause.Occur.SHOULD));\n    q4.add(new BooleanClause(c2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q2 = new BooleanQuery();\n    q2.add(q3, BooleanClause.Occur.SHOULD);\n    q2.add(q4, BooleanClause.Occur.SHOULD);\n    assertEquals(1, search(q2));\n  }\n\n","sourceOld":"  /**\n   * <code>(T:files T:deleting) (C:production C:optimize)</code>\n   * not working. results NO HIT.\n   *\n   * @throws IOException\n   */\n  public void testParenthesisShould() throws IOException {\n    BooleanQuery q3 = new BooleanQuery();\n    q3.add(new BooleanClause(t1, BooleanClause.Occur.SHOULD));\n    q3.add(new BooleanClause(t2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q4 = new BooleanQuery();\n    q4.add(new BooleanClause(c1, BooleanClause.Occur.SHOULD));\n    q4.add(new BooleanClause(c2, BooleanClause.Occur.SHOULD));\n    BooleanQuery q2 = new BooleanQuery();\n    q2.add(q3, BooleanClause.Occur.SHOULD);\n    q2.add(q4, BooleanClause.Occur.SHOULD);\n    assertEquals(1, search(q2));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["13a64ee9666ae2ae79810af2cf0c6608e4a7371f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"13a64ee9666ae2ae79810af2cf0c6608e4a7371f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["13a64ee9666ae2ae79810af2cf0c6608e4a7371f"],"13a64ee9666ae2ae79810af2cf0c6608e4a7371f":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}