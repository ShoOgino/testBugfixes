{"path":"solr/solrj/src/test/org/apache/solr/common/cloud/TestDocCollectionWatcher#testWatchesWorkForStateFormat1().mjava","commits":[{"id":"7b366e7dd3172289251a86be96031af4002cd19c","date":1560790783,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/TestDocCollectionWatcher#testWatchesWorkForStateFormat1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testWatchesWorkForStateFormat1() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    Future<Boolean> future = waitInBackground(\"stateformat1\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS,\n                                              (c) -> (null != c) );\n\n    CollectionAdminRequest.createCollection(\"stateformat1\", \"config\", 1, 1).setStateFormat(1)\n      .processAndWait(client, MAX_WAIT_TIMEOUT);\n    client.waitForState(\"stateformat1\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS,\n                         (n, c) -> DocCollection.isFullyActive(n, c, 1, 1));\n    \n    assertTrue(\"DocCollectionWatcher not notified of stateformat=1 collection creation\",\n               future.get());\n\n    Future<Boolean> migrated = waitInBackground(\"stateformat1\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS,\n                                                (c) -> c != null && c.getStateFormat() == 2);\n\n    CollectionAdminRequest.migrateCollectionFormat(\"stateformat1\")\n      .processAndWait(client, MAX_WAIT_TIMEOUT);\n    assertTrue(\"DocCollectionWatcher did not persist over state format migration\", migrated.get());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ad9c35f926b4bf8da0336d1300efc709c8d5a56","date":1591729157,"type":4,"author":"murblanc","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/common/cloud/TestDocCollectionWatcher#testWatchesWorkForStateFormat1().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testWatchesWorkForStateFormat1() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    Future<Boolean> future = waitInBackground(\"stateformat1\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS,\n                                              (c) -> (null != c) );\n\n    CollectionAdminRequest.createCollection(\"stateformat1\", \"config\", 1, 1).setStateFormat(1)\n      .processAndWait(client, MAX_WAIT_TIMEOUT);\n    client.waitForState(\"stateformat1\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS,\n                         (n, c) -> DocCollection.isFullyActive(n, c, 1, 1));\n    \n    assertTrue(\"DocCollectionWatcher not notified of stateformat=1 collection creation\",\n               future.get());\n\n    Future<Boolean> migrated = waitInBackground(\"stateformat1\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS,\n                                                (c) -> c != null && c.getStateFormat() == 2);\n\n    CollectionAdminRequest.migrateCollectionFormat(\"stateformat1\")\n      .processAndWait(client, MAX_WAIT_TIMEOUT);\n    assertTrue(\"DocCollectionWatcher did not persist over state format migration\", migrated.get());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["7b366e7dd3172289251a86be96031af4002cd19c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b366e7dd3172289251a86be96031af4002cd19c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"]},"commit2Childs":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b366e7dd3172289251a86be96031af4002cd19c"],"7b366e7dd3172289251a86be96031af4002cd19c":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}