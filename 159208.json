{"path":"src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","commits":[{"id":"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76","date":1204055227,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"src/java/org/apache/solr/handler/component/HighlightComponent#process(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrHighlighter highlighter = req.getCore().getHighlighter();\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      if(rb.getHighlightQuery()==null) {\n        if (rb.getQparser() != null) {\n          try {\n            rb.setHighlightQuery( rb.getQparser().getHighlightQuery() );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          rb.setHighlightQuery( rb.getQuery() );\n        }\n      }\n      \n      NamedList sumData = highlighter.doHighlighting(\n              rb.getResults().docList,\n              rb.getHighlightQuery().rewrite(req.getSearcher().getReader()),\n              req, defaultHighlightFields );\n      \n      if(sumData != null) {\n        // TODO ???? add this directly to the response?\n        rb.rsp.add(\"highlighting\", sumData);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    SolrHighlighter highlighter = req.getCore().getHighlighter();\n    if (highlighter.isHighlightingEnabled(req.getParams())) {\n      ResponseBuilder builder = SearchHandler.getResponseBuilder( req );\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (builder.getQparser() != null) {\n        defaultHighlightFields = builder.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      if(builder.getHighlightQuery()==null) {\n        if (builder.getQparser() != null) {\n          try {\n            builder.setHighlightQuery( builder.getQparser().getHighlightQuery() );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          builder.setHighlightQuery( builder.getQuery() );\n        }\n      }\n      \n      NamedList sumData = highlighter.doHighlighting(\n              builder.getResults().docList,\n              builder.getHighlightQuery().rewrite(req.getSearcher().getReader()),\n              req, defaultHighlightFields );\n      \n      if(sumData != null) {\n        // TODO ???? add this directly to the response?\n        rsp.add(\"highlighting\", sumData);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00c1dfea0d109d6f6e8a3568cc8109305362edc7","date":1216922821,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrHighlighter highlighter = req.getCore().getHighlighter();\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery.rewrite(req.getSearcher().getReader()),\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrHighlighter highlighter = req.getCore().getHighlighter();\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      if(rb.getHighlightQuery()==null) {\n        if (rb.getQparser() != null) {\n          try {\n            rb.setHighlightQuery( rb.getQparser().getHighlightQuery() );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          rb.setHighlightQuery( rb.getQuery() );\n        }\n      }\n      \n      NamedList sumData = highlighter.doHighlighting(\n              rb.getResults().docList,\n              rb.getHighlightQuery().rewrite(req.getSearcher().getReader()),\n              req, defaultHighlightFields );\n      \n      if(sumData != null) {\n        // TODO ???? add this directly to the response?\n        rb.rsp.add(\"highlighting\", sumData);\n      }\n    }\n  }\n\n","bugFix":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"bugIntro":["fbdd7b4f937ad415349159b57272901047d49af4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fbdd7b4f937ad415349159b57272901047d49af4","date":1242391451,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrHighlighter highlighter = req.getCore().getHighlighter();\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER)) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM)));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrHighlighter highlighter = req.getCore().getHighlighter();\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery.rewrite(req.getSearcher().getReader()),\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":["00c1dfea0d109d6f6e8a3568cc8109305362edc7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b87aae76ff9968dd754e0682d8bc2edfea6b706","date":1254673566,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrHighlighter highlighter = req.getCore().getHighlighter();\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrHighlighter highlighter = req.getCore().getHighlighter();\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER)) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM)));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bad78684057afb0e5b908d6cebf7fb606a8b3b03","date":1263548630,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrHighlighter highlighter = req.getCore().getHighlighter();\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","pathOld":"src/java/org/apache/solr/handler/component/HighlightComponent#process(ResponseBuilder).mjava","sourceNew":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void process(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    if (rb.doHighlights) {\n      SolrParams params = req.getParams();\n\n      String[] defaultHighlightFields;  //TODO: get from builder by default?\n\n      if (rb.getQparser() != null) {\n        defaultHighlightFields = rb.getQparser().getDefaultHighlightFields();\n      } else {\n        defaultHighlightFields = params.getParams(CommonParams.DF);\n      }\n      \n      Query highlightQuery = rb.getHighlightQuery();\n      if(highlightQuery==null) {\n        if (rb.getQparser() != null) {\n          try {\n            highlightQuery = rb.getQparser().getHighlightQuery();\n            rb.setHighlightQuery( highlightQuery );\n          } catch (Exception e) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n          }\n        } else {\n          highlightQuery = rb.getQuery();\n          rb.setHighlightQuery( highlightQuery );\n        }\n      }\n      \n      if(highlightQuery != null) {\n        boolean rewrite = !(Boolean.valueOf(req.getParams().get(HighlightParams.USE_PHRASE_HIGHLIGHTER, \"true\")) && Boolean.valueOf(req.getParams().get(HighlightParams.HIGHLIGHT_MULTI_TERM, \"true\")));\n        highlightQuery = rewrite ?  highlightQuery.rewrite(req.getSearcher().getReader()) : highlightQuery;\n      }\n      \n      // No highlighting if there is no query -- consider q.alt=\"*:*\n      if( highlightQuery != null ) {\n        NamedList sumData = highlighter.doHighlighting(\n                rb.getResults().docList,\n                highlightQuery,\n                req, defaultHighlightFields );\n        \n        if(sumData != null) {\n          // TODO ???? add this directly to the response?\n          rb.rsp.add(\"highlighting\", sumData);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6b87aae76ff9968dd754e0682d8bc2edfea6b706":["fbdd7b4f937ad415349159b57272901047d49af4"],"fbdd7b4f937ad415349159b57272901047d49af4":["00c1dfea0d109d6f6e8a3568cc8109305362edc7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bad78684057afb0e5b908d6cebf7fb606a8b3b03":["6b87aae76ff9968dd754e0682d8bc2edfea6b706"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"00c1dfea0d109d6f6e8a3568cc8109305362edc7":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"ad94625fb8d088209f46650c8097196fec67f00c":["bad78684057afb0e5b908d6cebf7fb606a8b3b03"],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6b87aae76ff9968dd754e0682d8bc2edfea6b706":["bad78684057afb0e5b908d6cebf7fb606a8b3b03"],"fbdd7b4f937ad415349159b57272901047d49af4":["6b87aae76ff9968dd754e0682d8bc2edfea6b706"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bad78684057afb0e5b908d6cebf7fb606a8b3b03":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76"],"00c1dfea0d109d6f6e8a3568cc8109305362edc7":["fbdd7b4f937ad415349159b57272901047d49af4"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"5bb29c260c4bbaf4ce8a95d362844ebf77ec1f76":["00c1dfea0d109d6f6e8a3568cc8109305362edc7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}