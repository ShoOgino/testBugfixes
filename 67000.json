{"path":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","commits":[{"id":"ec58fb7921964848d01bea54f8ec4a2ac813eaeb","date":1295476876,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      final BytesRef bytes = new BytesRef();\n      toBytesRef(bytes);\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", bytes);\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", rawValue);\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n      reflector.reflect(NumericTermAttribute.class, \"precisionStep\", precisionStep);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d9a853e135ec01c877bafe511e7ce1da0e57fea1","d37d9627738304db0500dec1c44453fcbb3f5f91"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d37d9627738304db0500dec1c44453fcbb3f5f91","date":1295479243,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","sourceNew":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      final BytesRef bytes = new BytesRef();\n      toBytesRef(bytes);\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", bytes);\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","sourceOld":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      final BytesRef bytes = new BytesRef();\n      toBytesRef(bytes);\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", bytes);\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", rawValue);\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n      reflector.reflect(NumericTermAttribute.class, \"precisionStep\", precisionStep);\n    }\n\n","bugFix":["ec58fb7921964848d01bea54f8ec4a2ac813eaeb"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      final BytesRef bytes = new BytesRef();\n      toBytesRef(bytes);\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", bytes);\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      final BytesRef bytes = new BytesRef();\n      toBytesRef(bytes);\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", bytes);\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3d07f1ae3b58102f36f3393c397d78ba4e547a4","date":1300715535,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","sourceNew":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      fillBytesRef();\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", bytes);\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","sourceOld":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      final BytesRef bytes = new BytesRef();\n      toBytesRef(bytes);\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", bytes);\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d9a853e135ec01c877bafe511e7ce1da0e57fea1","date":1300716202,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","sourceNew":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      fillBytesRef();\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", new BytesRef(bytes));\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","sourceOld":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      fillBytesRef();\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", bytes);\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","bugFix":["ec58fb7921964848d01bea54f8ec4a2ac813eaeb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","sourceNew":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      fillBytesRef();\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", new BytesRef(bytes));\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","sourceOld":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      final BytesRef bytes = new BytesRef();\n      toBytesRef(bytes);\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", bytes);\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","sourceNew":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      fillBytesRef();\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", new BytesRef(bytes));\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","sourceOld":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      final BytesRef bytes = new BytesRef();\n      toBytesRef(bytes);\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", bytes);\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6e919043fa85ee891123768dd655a98edbbf63c","date":1322225413,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","sourceNew":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      fillBytesRef();\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", BytesRef.deepCopyOf(bytes));\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","sourceOld":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      fillBytesRef();\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", new BytesRef(bytes));\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream.NumericTermAttributeImpl#reflectWith(AttributeReflector).mjava","sourceNew":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      fillBytesRef();\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", BytesRef.deepCopyOf(bytes));\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","sourceOld":"    @Override\n    public void reflectWith(AttributeReflector reflector) {\n      fillBytesRef();\n      reflector.reflect(TermToBytesRefAttribute.class, \"bytes\", BytesRef.deepCopyOf(bytes));\n      reflector.reflect(NumericTermAttribute.class, \"shift\", shift);\n      reflector.reflect(NumericTermAttribute.class, \"rawValue\", getRawValue());\n      reflector.reflect(NumericTermAttribute.class, \"valueSize\", valueSize);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d9a853e135ec01c877bafe511e7ce1da0e57fea1":["b3d07f1ae3b58102f36f3393c397d78ba4e547a4"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["e79a6d080bdd5b2a8f56342cf571b5476de04180","d9a853e135ec01c877bafe511e7ce1da0e57fea1"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","d9a853e135ec01c877bafe511e7ce1da0e57fea1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e6e919043fa85ee891123768dd655a98edbbf63c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d37d9627738304db0500dec1c44453fcbb3f5f91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3d07f1ae3b58102f36f3393c397d78ba4e547a4":["d37d9627738304db0500dec1c44453fcbb3f5f91"],"ec58fb7921964848d01bea54f8ec4a2ac813eaeb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d37d9627738304db0500dec1c44453fcbb3f5f91"],"e6e919043fa85ee891123768dd655a98edbbf63c":["d9a853e135ec01c877bafe511e7ce1da0e57fea1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d37d9627738304db0500dec1c44453fcbb3f5f91":["ec58fb7921964848d01bea54f8ec4a2ac813eaeb"]},"commit2Childs":{"d9a853e135ec01c877bafe511e7ce1da0e57fea1":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","e6e919043fa85ee891123768dd655a98edbbf63c"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","ec58fb7921964848d01bea54f8ec4a2ac813eaeb","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"b3d07f1ae3b58102f36f3393c397d78ba4e547a4":["d9a853e135ec01c877bafe511e7ce1da0e57fea1"],"ec58fb7921964848d01bea54f8ec4a2ac813eaeb":["d37d9627738304db0500dec1c44453fcbb3f5f91"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"e6e919043fa85ee891123768dd655a98edbbf63c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d37d9627738304db0500dec1c44453fcbb3f5f91":["29ef99d61cda9641b6250bf9567329a6e65f901d","b3d07f1ae3b58102f36f3393c397d78ba4e547a4","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}