{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","commits":[{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","sourceNew":"  /** Compute the desired magnitude of a unit vector projected to a given\n   * planet model.\n   * @param planetModel is the planet model.\n   * @param x is the unit vector x value.\n   * @param y is the unit vector y value.\n   * @param z is the unit vector z value.\n   * @return a magnitude value for that (x,y,z) that projects the vector onto the specified ellipsoid.\n   */\n  protected static double computeDesiredEllipsoidMagnitude(final PlanetModel planetModel, final double x, final double y, final double z) {\n    return 1.0 / Math.sqrt(x*x*planetModel.inverseAbSquared + y*y*planetModel.inverseAbSquared + z*z*planetModel.inverseCSquared);\n  }\n\n","sourceOld":"  /** Compute the desired magnitude of a unit vector projected to a given\n   * planet model.\n   * @param planetModel is the planet model.\n   * @param x is the unit vector x value.\n   * @param y is the unit vector y value.\n   * @param z is the unit vector z value.\n   * @return a magnitude value for that (x,y,z) that projects the vector onto the specified ellipsoid.\n   */\n  protected static double computeDesiredEllipsoidMagnitude(final PlanetModel planetModel, final double x, final double y, final double z) {\n    return 1.0 / Math.sqrt(x*x*planetModel.inverseAbSquared + y*y*planetModel.inverseAbSquared + z*z*planetModel.inverseCSquared);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d85423d45b4f1c56d97b657faad35d1a3100d50","date":1460895224,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","sourceNew":"  /** Compute the desired magnitude of a unit vector projected to a given\n   * planet model.\n   * @param planetModel is the planet model.\n   * @param x is the unit vector x value.\n   * @param y is the unit vector y value.\n   * @param z is the unit vector z value.\n   * @return a magnitude value for that (x,y,z) that projects the vector onto the specified ellipsoid.\n   */\n  static double computeDesiredEllipsoidMagnitude(final PlanetModel planetModel, final double x, final double y, final double z) {\n    return 1.0 / Math.sqrt(x*x*planetModel.inverseAbSquared + y*y*planetModel.inverseAbSquared + z*z*planetModel.inverseCSquared);\n  }\n\n","sourceOld":"  /** Compute the desired magnitude of a unit vector projected to a given\n   * planet model.\n   * @param planetModel is the planet model.\n   * @param x is the unit vector x value.\n   * @param y is the unit vector y value.\n   * @param z is the unit vector z value.\n   * @return a magnitude value for that (x,y,z) that projects the vector onto the specified ellipsoid.\n   */\n  protected static double computeDesiredEllipsoidMagnitude(final PlanetModel planetModel, final double x, final double y, final double z) {\n    return 1.0 / Math.sqrt(x*x*planetModel.inverseAbSquared + y*y*planetModel.inverseAbSquared + z*z*planetModel.inverseCSquared);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","sourceNew":"  /** Compute the desired magnitude of a unit vector projected to a given\n   * planet model.\n   * @param planetModel is the planet model.\n   * @param x is the unit vector x value.\n   * @param y is the unit vector y value.\n   * @param z is the unit vector z value.\n   * @return a magnitude value for that (x,y,z) that projects the vector onto the specified ellipsoid.\n   */\n  static double computeDesiredEllipsoidMagnitude(final PlanetModel planetModel, final double x, final double y, final double z) {\n    return 1.0 / Math.sqrt(x*x*planetModel.inverseXYScalingSquared + y*y*planetModel.inverseXYScalingSquared + z*z*planetModel.inverseZScalingSquared);\n  }\n\n","sourceOld":"  /** Compute the desired magnitude of a unit vector projected to a given\n   * planet model.\n   * @param planetModel is the planet model.\n   * @param x is the unit vector x value.\n   * @param y is the unit vector y value.\n   * @param z is the unit vector z value.\n   * @return a magnitude value for that (x,y,z) that projects the vector onto the specified ellipsoid.\n   */\n  static double computeDesiredEllipsoidMagnitude(final PlanetModel planetModel, final double x, final double y, final double z) {\n    return 1.0 / Math.sqrt(x*x*planetModel.inverseAbSquared + y*y*planetModel.inverseAbSquared + z*z*planetModel.inverseCSquared);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d85423d45b4f1c56d97b657faad35d1a3100d50":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["4d85423d45b4f1c56d97b657faad35d1a3100d50"],"b4e444678504caf66a8060b1d514383aa4feac0c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"4d85423d45b4f1c56d97b657faad35d1a3100d50":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e444678504caf66a8060b1d514383aa4feac0c"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b4e444678504caf66a8060b1d514383aa4feac0c":["4d85423d45b4f1c56d97b657faad35d1a3100d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}