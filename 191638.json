{"path":"solr/core/src/java/org/apache/solr/response/transform/MarkTransformer[EditorialMarkerFactory]#transform(SolrDocument,int).mjava","commits":[{"id":"b68df8b95f3ea758a8dc21cb20a50a01db973e8e","date":1321650433,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/MarkTransformer[EditorialMarkerFactory]#transform(SolrDocument,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    Set<?> ids = (Set<?>)context.req.getContext().get(\"BOOSTED\");\n    if(ids!=null) {\n      String key;\n      Object field = doc.get(idFieldName);\n      if (field instanceof Field){\n        key = ((Field)field).stringValue();\n      } else {\n        key = field.toString();\n      }\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't boosting, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9e5be1ddf2a174c0c306a089b858c872d7e1f50","date":1323978951,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/MarkTransformer[EditorialMarkerFactory]#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/MarkTransformer[EditorialMarkerFactory]#transform(SolrDocument,int).mjava","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    Set<?> ids = (Set<?>)context.req.getContext().get(\"BOOSTED\");\n    if(ids!=null) {\n      String key;\n      Object field = doc.get(idFieldName);\n      if (field instanceof NumericField){\n        key = ((Field)field).stringValue();\n        key = ft.readableToIndexed(key);\n      } else if (field instanceof Field){\n        key = ((Field)field).stringValue();\n      } else {\n        key = field.toString();\n      }\n\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't boosting, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    Set<?> ids = (Set<?>)context.req.getContext().get(\"BOOSTED\");\n    if(ids!=null) {\n      String key;\n      Object field = doc.get(idFieldName);\n      if (field instanceof Field){\n        key = ((Field)field).stringValue();\n      } else {\n        key = field.toString();\n      }\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't boosting, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1905b98850d35e230d57c77f3a9b292136159f20","date":1323993698,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/MarkTransformer[EditorialMarkerFactory]#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/MarkTransformer[EditorialMarkerFactory]#transform(SolrDocument,int).mjava","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    Set<?> ids = (Set<?>)context.req.getContext().get(\"BOOSTED\");\n    if(ids!=null) {\n      String key;\n      Object field = doc.get(idFieldName);\n      if (field instanceof Field){\n        key = ((Field)field).stringValue();\n      } else {\n        key = field.toString();\n      }\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't boosting, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    Set<?> ids = (Set<?>)context.req.getContext().get(\"BOOSTED\");\n    if(ids!=null) {\n      String key;\n      Object field = doc.get(idFieldName);\n      if (field instanceof NumericField){\n        key = ((Field)field).stringValue();\n        key = ft.readableToIndexed(key);\n      } else if (field instanceof Field){\n        key = ((Field)field).stringValue();\n      } else {\n        key = field.toString();\n      }\n\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't boosting, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","bugFix":null,"bugIntro":["cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63","date":1324079472,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/MarkTransformer[EditorialMarkerFactory]#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/MarkTransformer[EditorialMarkerFactory]#transform(SolrDocument,int).mjava","sourceNew":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    Set<?> ids = (Set<?>)context.req.getContext().get(\"BOOSTED\");\n    if(ids!=null) {\n      String key;\n      Object field = doc.get(idFieldName);\n      if (field instanceof NumericField){\n        key = ((Field)field).stringValue();\n        key = ft.readableToIndexed(key);\n      } else if (field instanceof Field){\n        key = ((Field)field).stringValue();\n      } else {\n        key = field.toString();\n      }\n\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't boosting, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    Set<?> ids = (Set<?>)context.req.getContext().get(\"BOOSTED\");\n    if(ids!=null) {\n      String key;\n      Object field = doc.get(idFieldName);\n      if (field instanceof Field){\n        key = ((Field)field).stringValue();\n      } else {\n        key = field.toString();\n      }\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't boosting, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","bugFix":["1905b98850d35e230d57c77f3a9b292136159f20"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fb0c241e2a5e80dcaf41e354c7003520fcb777d","date":1324562351,"type":4,"author":"Grant Ingersoll","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/transform/MarkTransformer[EditorialMarkerFactory]#transform(SolrDocument,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void transform(SolrDocument doc, int docid) {\n    Set<?> ids = (Set<?>)context.req.getContext().get(\"BOOSTED\");\n    if(ids!=null) {\n      String key;\n      Object field = doc.get(idFieldName);\n      if (field instanceof NumericField){\n        key = ((Field)field).stringValue();\n        key = ft.readableToIndexed(key);\n      } else if (field instanceof Field){\n        key = ((Field)field).stringValue();\n      } else {\n        key = field.toString();\n      }\n\n      doc.setField(name, ids.contains(key));\n    } else {\n      //if we have no ids, that means we weren't boosting, but the user still asked for the field to be added, so just mark everything as false\n      doc.setField(name, Boolean.FALSE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1905b98850d35e230d57c77f3a9b292136159f20":["b9e5be1ddf2a174c0c306a089b858c872d7e1f50"],"b68df8b95f3ea758a8dc21cb20a50a01db973e8e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b9e5be1ddf2a174c0c306a089b858c872d7e1f50":["b68df8b95f3ea758a8dc21cb20a50a01db973e8e"],"cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63":["1905b98850d35e230d57c77f3a9b292136159f20"],"3fb0c241e2a5e80dcaf41e354c7003520fcb777d":["cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3fb0c241e2a5e80dcaf41e354c7003520fcb777d"]},"commit2Childs":{"1905b98850d35e230d57c77f3a9b292136159f20":["cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63"],"b68df8b95f3ea758a8dc21cb20a50a01db973e8e":["b9e5be1ddf2a174c0c306a089b858c872d7e1f50"],"b9e5be1ddf2a174c0c306a089b858c872d7e1f50":["1905b98850d35e230d57c77f3a9b292136159f20"],"cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63":["3fb0c241e2a5e80dcaf41e354c7003520fcb777d"],"3fb0c241e2a5e80dcaf41e354c7003520fcb777d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b68df8b95f3ea758a8dc21cb20a50a01db973e8e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}