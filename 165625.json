{"path":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpans#NearSpans(SpanNearQuery,List[Spans]).mjava","commits":[{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpans#NearSpans(SpanNearQuery,List[Spans]).mjava","pathOld":"/dev/null","sourceNew":"  NearSpans(SpanNearQuery query, List<Spans> subSpans)\n  throws IOException {\n    this.query = Objects.requireNonNull(query);\n    this.allowedSlop = query.getSlop();\n    if (subSpans.size() < 2) {\n      throw new IllegalArgumentException(\"Less than 2 subSpans: \" + query);\n    }\n    this.subSpans = Objects.requireNonNull(subSpans); // in query order\n    this.conjunction = ConjunctionDISI.intersect(subSpans);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpans#NearSpans(SpanNearQuery,List[Spans]).mjava","pathOld":"/dev/null","sourceNew":"  NearSpans(SpanNearQuery query, List<Spans> subSpans)\n  throws IOException {\n    this.query = Objects.requireNonNull(query);\n    this.allowedSlop = query.getSlop();\n    if (subSpans.size() < 2) {\n      throw new IllegalArgumentException(\"Less than 2 subSpans: \" + query);\n    }\n    this.subSpans = Objects.requireNonNull(subSpans); // in query order\n    this.conjunction = ConjunctionDISI.intersect(subSpans);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d1a832d7282403b4783b9435f19a5ba2e9dbdf7","date":1428071973,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpans#NearSpans(SpanNearQuery,List[Spans]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpans#NearSpans(SpanNearQuery,List[Spans]).mjava","sourceNew":"  NearSpans(SpanNearQuery query, List<Spans> subSpans)\n  throws IOException {\n    this.query = Objects.requireNonNull(query);\n    this.allowedSlop = query.getSlop();\n    if (subSpans.size() < 2) {\n      throw new IllegalArgumentException(\"Less than 2 subSpans: \" + query);\n    }\n    this.subSpans = subSpans.toArray(new Spans[subSpans.size()]); // in query order\n    this.conjunction = ConjunctionDISI.intersect(subSpans);\n  }\n\n","sourceOld":"  NearSpans(SpanNearQuery query, List<Spans> subSpans)\n  throws IOException {\n    this.query = Objects.requireNonNull(query);\n    this.allowedSlop = query.getSlop();\n    if (subSpans.size() < 2) {\n      throw new IllegalArgumentException(\"Less than 2 subSpans: \" + query);\n    }\n    this.subSpans = Objects.requireNonNull(subSpans); // in query order\n    this.conjunction = ConjunctionDISI.intersect(subSpans);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpans#NearSpans(SpanNearQuery,List[Spans]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpans#NearSpans(SpanNearQuery,List[Spans]).mjava","sourceNew":"  NearSpans(SpanNearQuery query, List<Spans> subSpans)\n  throws IOException {\n    this.query = Objects.requireNonNull(query);\n    this.allowedSlop = query.getSlop();\n    if (subSpans.size() < 2) {\n      throw new IllegalArgumentException(\"Less than 2 subSpans: \" + query);\n    }\n    this.subSpans = subSpans.toArray(new Spans[subSpans.size()]); // in query order\n    this.conjunction = ConjunctionDISI.intersect(subSpans);\n  }\n\n","sourceOld":"  NearSpans(SpanNearQuery query, List<Spans> subSpans)\n  throws IOException {\n    this.query = Objects.requireNonNull(query);\n    this.allowedSlop = query.getSlop();\n    if (subSpans.size() < 2) {\n      throw new IllegalArgumentException(\"Less than 2 subSpans: \" + query);\n    }\n    this.subSpans = Objects.requireNonNull(subSpans); // in query order\n    this.conjunction = ConjunctionDISI.intersect(subSpans);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80ff50a565777c812ef7871453d715713fb6fb9c","date":1430307731,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpans#NearSpans(SpanNearQuery,List[Spans]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpans#NearSpans(SpanNearQuery,List[Spans]).mjava","sourceNew":"  NearSpans(SpanNearQuery query, List<Spans> subSpans) {\n    super(subSpans);\n    this.query = query;\n    this.allowedSlop = query.getSlop();\n  }\n\n","sourceOld":"  NearSpans(SpanNearQuery query, List<Spans> subSpans)\n  throws IOException {\n    this.query = Objects.requireNonNull(query);\n    this.allowedSlop = query.getSlop();\n    if (subSpans.size() < 2) {\n      throw new IllegalArgumentException(\"Less than 2 subSpans: \" + query);\n    }\n    this.subSpans = subSpans.toArray(new Spans[subSpans.size()]); // in query order\n    this.conjunction = ConjunctionDISI.intersect(subSpans);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"557b118fdfb9d28b6cfe38fac273af58c4d51135","date":1445505363,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpans#NearSpans(SpanNearQuery,List[Spans]).mjava","sourceNew":null,"sourceOld":"  NearSpans(SpanNearQuery query, List<Spans> subSpans) {\n    super(subSpans);\n    this.query = query;\n    this.allowedSlop = query.getSlop();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"80ff50a565777c812ef7871453d715713fb6fb9c":["3d1a832d7282403b4783b9435f19a5ba2e9dbdf7"],"3d1a832d7282403b4783b9435f19a5ba2e9dbdf7":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["80ff50a565777c812ef7871453d715713fb6fb9c"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["fab172655716b96f7e42376116235017a922de3a","3d1a832d7282403b4783b9435f19a5ba2e9dbdf7"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fab172655716b96f7e42376116235017a922de3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["557b118fdfb9d28b6cfe38fac273af58c4d51135"]},"commit2Childs":{"80ff50a565777c812ef7871453d715713fb6fb9c":["557b118fdfb9d28b6cfe38fac273af58c4d51135"],"3d1a832d7282403b4783b9435f19a5ba2e9dbdf7":["80ff50a565777c812ef7871453d715713fb6fb9c","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["3d1a832d7282403b4783b9435f19a5ba2e9dbdf7","fab172655716b96f7e42376116235017a922de3a"],"fab172655716b96f7e42376116235017a922de3a":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}