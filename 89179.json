{"path":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","sourceNew":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.release();\n      }\n    }\n\n","sourceOld":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.release();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","sourceNew":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.release();\n      }\n    }\n\n","sourceOld":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.release();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","sourceNew":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.release();\n      }\n    }\n\n","sourceOld":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.release();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0fcdcf196523675146a4df3193e91413533857ab","date":1390686560,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","sourceNew":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.close();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.close();\n      }\n    }\n\n","sourceOld":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.release();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.release();\n      }\n    }\n\n","bugFix":["60e34c62b11034ddc6f3799b5c9a38cbe6de4042"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","sourceNew":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n      NativeFSLockFactory f = new NativeFSLockFactory(TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()));\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.close();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.close();\n      }\n    }\n\n","sourceOld":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.close();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.close();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","sourceNew":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n      NativeFSLockFactory f = new NativeFSLockFactory(createTempDir(LuceneTestCase.getTestClass().getSimpleName()));\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.close();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.close();\n      }\n    }\n\n","sourceOld":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n      NativeFSLockFactory f = new NativeFSLockFactory(TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()));\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.close();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.close();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","sourceNew":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n      NativeFSLockFactory f = new NativeFSLockFactory(createTempDir(LuceneTestCase.getTestClass().getSimpleName()));\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.close();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.close();\n      }\n    }\n\n","sourceOld":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n\n      NativeFSLockFactory f = new NativeFSLockFactory(TEMP_DIR);\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.close();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.close();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac6772b4ba3c5fe1e4aae992238c5f7cdce74f0b","date":1398175632,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","sourceNew":null,"sourceOld":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n      NativeFSLockFactory f = new NativeFSLockFactory(createTempDir(LuceneTestCase.getTestClass().getSimpleName()));\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.close();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.close();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testNativeFSLockReleaseByOtherLock().mjava","sourceNew":null,"sourceOld":"    public void testNativeFSLockReleaseByOtherLock() throws IOException {\n      NativeFSLockFactory f = new NativeFSLockFactory(createTempDir(LuceneTestCase.getTestClass().getSimpleName()));\n\n      f.setLockPrefix(\"test\");\n      Lock l = f.makeLock(\"commit\");\n      Lock l2 = f.makeLock(\"commit\");\n\n      assertTrue(\"failed to obtain lock\", l.obtain());\n      try {\n        assertTrue(l2.isLocked());\n        l2.close();\n        fail(\"should not have reached here. LockReleaseFailedException should have been thrown\");\n      } catch (LockReleaseFailedException e) {\n        // expected\n      } finally {\n        l.close();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ac6772b4ba3c5fe1e4aae992238c5f7cdce74f0b":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","ac6772b4ba3c5fe1e4aae992238c5f7cdce74f0b"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["0fcdcf196523675146a4df3193e91413533857ab","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["d0d579490a72f2e6297eaa648940611234c57cf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0fcdcf196523675146a4df3193e91413533857ab":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0d579490a72f2e6297eaa648940611234c57cf1":["0fcdcf196523675146a4df3193e91413533857ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac6772b4ba3c5fe1e4aae992238c5f7cdce74f0b"]},"commit2Childs":{"ac6772b4ba3c5fe1e4aae992238c5f7cdce74f0b":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["ac6772b4ba3c5fe1e4aae992238c5f7cdce74f0b","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"0fcdcf196523675146a4df3193e91413533857ab":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["0fcdcf196523675146a4df3193e91413533857ab"],"d0d579490a72f2e6297eaa648940611234c57cf1":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}