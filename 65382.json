{"path":"solr/core/src/java/org/apache/solr/highlight/UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter#parseBreakIterator(String,Locale).mjava","commits":[{"id":"8868b7c4fbf215c41e7b4ea2cfc40d1970672910","date":1480034167,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter#parseBreakIterator(String,Locale).mjava","pathOld":"/dev/null","sourceNew":"        /**\n         * parse a break iterator type for the specified locale\n         */\n        protected BreakIterator parseBreakIterator(String type, Locale locale) {\n            if (type == null || \"SENTENCE\".equals(type)) {\n                return BreakIterator.getSentenceInstance(locale);\n            } else if (\"LINE\".equals(type)) {\n                return BreakIterator.getLineInstance(locale);\n            } else if (\"WORD\".equals(type)) {\n                return BreakIterator.getWordInstance(locale);\n            } else if (\"CHARACTER\".equals(type)) {\n                return BreakIterator.getCharacterInstance(locale);\n            } else if (\"WHOLE\".equals(type)) {\n                return new WholeBreakIterator();\n            } else {\n                throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n            }\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75babd1dfc2521603bfeb0968042e921d8c6c652","date":1480042089,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter#parseBreakIterator(String,Locale).mjava","pathOld":"/dev/null","sourceNew":"        /**\n         * parse a break iterator type for the specified locale\n         */\n        protected BreakIterator parseBreakIterator(String type, Locale locale) {\n            if (type == null || \"SENTENCE\".equals(type)) {\n                return BreakIterator.getSentenceInstance(locale);\n            } else if (\"LINE\".equals(type)) {\n                return BreakIterator.getLineInstance(locale);\n            } else if (\"WORD\".equals(type)) {\n                return BreakIterator.getWordInstance(locale);\n            } else if (\"CHARACTER\".equals(type)) {\n                return BreakIterator.getCharacterInstance(locale);\n            } else if (\"WHOLE\".equals(type)) {\n                return new WholeBreakIterator();\n            } else {\n                throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n            }\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter#parseBreakIterator(String,Locale).mjava","pathOld":"/dev/null","sourceNew":"        /**\n         * parse a break iterator type for the specified locale\n         */\n        protected BreakIterator parseBreakIterator(String type, Locale locale) {\n            if (type == null || \"SENTENCE\".equals(type)) {\n                return BreakIterator.getSentenceInstance(locale);\n            } else if (\"LINE\".equals(type)) {\n                return BreakIterator.getLineInstance(locale);\n            } else if (\"WORD\".equals(type)) {\n                return BreakIterator.getWordInstance(locale);\n            } else if (\"CHARACTER\".equals(type)) {\n                return BreakIterator.getCharacterInstance(locale);\n            } else if (\"WHOLE\".equals(type)) {\n                return new WholeBreakIterator();\n            } else {\n                throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n            }\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fee424905e7d55c01f551853e7da496662f8722f","date":1482870873,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter#parseBreakIterator(String,Locale).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter#parseBreakIterator(String,Locale).mjava","sourceNew":"    /**\n     * parse a break iterator type for the specified locale\n     */\n    protected BreakIterator parseBreakIterator(String type, Locale locale) {\n      if (type == null || \"SENTENCE\".equals(type)) {\n        return BreakIterator.getSentenceInstance(locale);\n      } else if (\"LINE\".equals(type)) {\n        return BreakIterator.getLineInstance(locale);\n      } else if (\"WORD\".equals(type)) {\n        return BreakIterator.getWordInstance(locale);\n      } else if (\"CHARACTER\".equals(type)) {\n        return BreakIterator.getCharacterInstance(locale);\n      } else if (\"WHOLE\".equals(type)) {\n        return new WholeBreakIterator();\n      } else {\n        throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n      }\n    }\n\n","sourceOld":"        /**\n         * parse a break iterator type for the specified locale\n         */\n        protected BreakIterator parseBreakIterator(String type, Locale locale) {\n            if (type == null || \"SENTENCE\".equals(type)) {\n                return BreakIterator.getSentenceInstance(locale);\n            } else if (\"LINE\".equals(type)) {\n                return BreakIterator.getLineInstance(locale);\n            } else if (\"WORD\".equals(type)) {\n                return BreakIterator.getWordInstance(locale);\n            } else if (\"CHARACTER\".equals(type)) {\n                return BreakIterator.getCharacterInstance(locale);\n            } else if (\"WHOLE\".equals(type)) {\n                return new WholeBreakIterator();\n            } else {\n                throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter#parseBreakIterator(String,Locale).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter#parseBreakIterator(String,Locale).mjava","sourceNew":"    /**\n     * parse a break iterator type for the specified locale\n     */\n    protected BreakIterator parseBreakIterator(String type, Locale locale) {\n      if (type == null || \"SENTENCE\".equals(type)) {\n        return BreakIterator.getSentenceInstance(locale);\n      } else if (\"LINE\".equals(type)) {\n        return BreakIterator.getLineInstance(locale);\n      } else if (\"WORD\".equals(type)) {\n        return BreakIterator.getWordInstance(locale);\n      } else if (\"CHARACTER\".equals(type)) {\n        return BreakIterator.getCharacterInstance(locale);\n      } else if (\"WHOLE\".equals(type)) {\n        return new WholeBreakIterator();\n      } else {\n        throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n      }\n    }\n\n","sourceOld":"        /**\n         * parse a break iterator type for the specified locale\n         */\n        protected BreakIterator parseBreakIterator(String type, Locale locale) {\n            if (type == null || \"SENTENCE\".equals(type)) {\n                return BreakIterator.getSentenceInstance(locale);\n            } else if (\"LINE\".equals(type)) {\n                return BreakIterator.getLineInstance(locale);\n            } else if (\"WORD\".equals(type)) {\n                return BreakIterator.getWordInstance(locale);\n            } else if (\"CHARACTER\".equals(type)) {\n                return BreakIterator.getCharacterInstance(locale);\n            } else if (\"WHOLE\".equals(type)) {\n                return new WholeBreakIterator();\n            } else {\n                throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79b3c136afb2422d938f87bce41900b92d0b27c1","date":1488420247,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter#parseBreakIterator(String,Locale).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter#parseBreakIterator(String,Locale).mjava","sourceNew":"    /**\n     * parse a break iterator type for the specified locale\n     */\n    protected BreakIterator parseBreakIterator(String type, Locale locale) {\n      if (type == null || \"SENTENCE\".equals(type)) {\n        return BreakIterator.getSentenceInstance(locale);\n      } else if (\"LINE\".equals(type)) {\n        return BreakIterator.getLineInstance(locale);\n      } else if (\"WORD\".equals(type)) {\n        return BreakIterator.getWordInstance(locale);\n      } else if (\"CHARACTER\".equals(type)) {\n        return BreakIterator.getCharacterInstance(locale);\n      } else {\n        throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n      }\n    }\n\n","sourceOld":"    /**\n     * parse a break iterator type for the specified locale\n     */\n    protected BreakIterator parseBreakIterator(String type, Locale locale) {\n      if (type == null || \"SENTENCE\".equals(type)) {\n        return BreakIterator.getSentenceInstance(locale);\n      } else if (\"LINE\".equals(type)) {\n        return BreakIterator.getLineInstance(locale);\n      } else if (\"WORD\".equals(type)) {\n        return BreakIterator.getWordInstance(locale);\n      } else if (\"CHARACTER\".equals(type)) {\n        return BreakIterator.getCharacterInstance(locale);\n      } else if (\"WHOLE\".equals(type)) {\n        return new WholeBreakIterator();\n      } else {\n        throw new IllegalArgumentException(\"Unknown \" + HighlightParams.BS_TYPE + \": \" + type);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fee424905e7d55c01f551853e7da496662f8722f":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"727bb765ff2542275f6d31f67be18d7104bae148":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","75babd1dfc2521603bfeb0968042e921d8c6c652"],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8868b7c4fbf215c41e7b4ea2cfc40d1970672910"],"79b3c136afb2422d938f87bce41900b92d0b27c1":["fee424905e7d55c01f551853e7da496662f8722f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["79b3c136afb2422d938f87bce41900b92d0b27c1"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["727bb765ff2542275f6d31f67be18d7104bae148","fee424905e7d55c01f551853e7da496662f8722f"]},"commit2Childs":{"fee424905e7d55c01f551853e7da496662f8722f":["79b3c136afb2422d938f87bce41900b92d0b27c1","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"727bb765ff2542275f6d31f67be18d7104bae148":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["fee424905e7d55c01f551853e7da496662f8722f","727bb765ff2542275f6d31f67be18d7104bae148"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["727bb765ff2542275f6d31f67be18d7104bae148","8868b7c4fbf215c41e7b4ea2cfc40d1970672910","75babd1dfc2521603bfeb0968042e921d8c6c652"],"79b3c136afb2422d938f87bce41900b92d0b27c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}