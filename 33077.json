{"path":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#block(String).mjava","commits":[{"id":"637a392e2e05d4e1179ac3c532cfeef0cde977ba","date":1376347977,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#block(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * on the given abcD it generates one parent doc, taking D from the tail and\n   * two subdocs relaitons ab and c uniq ids are supplied also\n   * \n   * <pre>\n   * {@code\n   * <add>\n   *  <doc>\n   *    <field name=\"parent_s\">D</field> \n   *    <doc> \n   *        <field name=\"child_s\">a</field>\n   *        <field name=\"type_s\">1</field>\n   *    </doc> \n   *    <doc> \n   *        <field name=\"child_s\">b</field> \n   *        <field name=\"type_s\">1</field>\n   *    </doc> \n   *    <doc> \n   *        <field name=\"child_s\">c</field>\n   *        <field name=\"type_s\">2</field> \n   *    </doc> \n   *  </doc> \n   * </add>\n   * }\n   * </pre>\n   * */\n  private Document block(String string) {\n    Document document = DocumentHelper.createDocument();\n    Element root = document.addElement(\"add\");\n    Element doc = root.addElement(\"doc\");\n    \n    if (string.length() > 0) {\n      // last character is a top parent\n      attachField(doc, parent,\n          String.valueOf(string.charAt(string.length() - 1)));\n      attachField(doc, \"id\", id());\n      \n      // add subdocs\n      int type = 1;\n      for (int i = 0; i < string.length() - 1; i += 2) {\n        String relation = string.substring(i,\n            Math.min(i + 2, string.length() - 1));\n        attachSubDocs(doc, relation, type);\n        type++;\n      }\n    }\n    \n    return document;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#block(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * on the given abcD it generates one parent doc, taking D from the tail and\n   * two subdocs relaitons ab and c uniq ids are supplied also\n   * \n   * <pre>\n   * {@code\n   * <add>\n   *  <doc>\n   *    <field name=\"parent_s\">D</field> \n   *    <doc> \n   *        <field name=\"child_s\">a</field>\n   *        <field name=\"type_s\">1</field>\n   *    </doc> \n   *    <doc> \n   *        <field name=\"child_s\">b</field> \n   *        <field name=\"type_s\">1</field>\n   *    </doc> \n   *    <doc> \n   *        <field name=\"child_s\">c</field>\n   *        <field name=\"type_s\">2</field> \n   *    </doc> \n   *  </doc> \n   * </add>\n   * }\n   * </pre>\n   * */\n  private Document block(String string) {\n    Document document = DocumentHelper.createDocument();\n    Element root = document.addElement(\"add\");\n    Element doc = root.addElement(\"doc\");\n    \n    if (string.length() > 0) {\n      // last character is a top parent\n      attachField(doc, parent,\n          String.valueOf(string.charAt(string.length() - 1)));\n      attachField(doc, \"id\", id());\n      \n      // add subdocs\n      int type = 1;\n      for (int i = 0; i < string.length() - 1; i += 2) {\n        String relation = string.substring(i,\n            Math.min(i + 2, string.length() - 1));\n        attachSubDocs(doc, relation, type);\n        type++;\n      }\n    }\n    \n    return document;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1a5eff758fefcac883606f32579ae501a14119","date":1553516101,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#block(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#block(String).mjava","sourceNew":"  /**\n   * on the given abcD it generates one parent doc, taking D from the tail and\n   * two subdocs relaitons ab and c uniq ids are supplied also\n   *\n   * <pre>\n   * {@code\n   * <add>\n   *  <doc>\n   *    <field name=\"parent_s\">D</field>\n   *    <doc>\n   *        <field name=\"child_s\">a</field>\n   *        <field name=\"type_s\">1</field>\n   *    </doc>\n   *    <doc>\n   *        <field name=\"child_s\">b</field>\n   *        <field name=\"type_s\">1</field>\n   *    </doc>\n   *    <doc>\n   *        <field name=\"child_s\">c</field>\n   *        <field name=\"type_s\">2</field>\n   *    </doc>\n   *  </doc>\n   * </add>\n   * }\n   * </pre>\n   * */\n  private Document block(String string) throws ParserConfigurationException {\n    Document document = getDocument();\n    Element root = document.createElement(\"add\");\n    document.appendChild(root);\n    Element doc = document.createElement(\"doc\");\n    root.appendChild(doc);\n\n    if (string.length() > 0) {\n      // last character is a top parent\n      attachField(document, doc, parent,\n          String.valueOf(string.charAt(string.length() - 1)));\n      attachField(document, doc, \"id\", id());\n\n      // add subdocs\n      int type = 1;\n      for (int i = 0; i < string.length() - 1; i += 2) {\n        String relation = string.substring(i,\n            Math.min(i + 2, string.length() - 1));\n        attachSubDocs(document, doc, relation, type);\n        type++;\n      }\n    }\n\n    return document;\n  }\n\n","sourceOld":"  /**\n   * on the given abcD it generates one parent doc, taking D from the tail and\n   * two subdocs relaitons ab and c uniq ids are supplied also\n   * \n   * <pre>\n   * {@code\n   * <add>\n   *  <doc>\n   *    <field name=\"parent_s\">D</field> \n   *    <doc> \n   *        <field name=\"child_s\">a</field>\n   *        <field name=\"type_s\">1</field>\n   *    </doc> \n   *    <doc> \n   *        <field name=\"child_s\">b</field> \n   *        <field name=\"type_s\">1</field>\n   *    </doc> \n   *    <doc> \n   *        <field name=\"child_s\">c</field>\n   *        <field name=\"type_s\">2</field> \n   *    </doc> \n   *  </doc> \n   * </add>\n   * }\n   * </pre>\n   * */\n  private Document block(String string) {\n    Document document = DocumentHelper.createDocument();\n    Element root = document.addElement(\"add\");\n    Element doc = root.addElement(\"doc\");\n    \n    if (string.length() > 0) {\n      // last character is a top parent\n      attachField(doc, parent,\n          String.valueOf(string.charAt(string.length() - 1)));\n      attachField(doc, \"id\", id());\n      \n      // add subdocs\n      int type = 1;\n      for (int i = 0; i < string.length() - 1; i += 2) {\n        String relation = string.substring(i,\n            Math.min(i + 2, string.length() - 1));\n        attachSubDocs(doc, relation, type);\n        type++;\n      }\n    }\n    \n    return document;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb1a5eff758fefcac883606f32579ae501a14119":["637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb1a5eff758fefcac883606f32579ae501a14119"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","bb1a5eff758fefcac883606f32579ae501a14119"],"bb1a5eff758fefcac883606f32579ae501a14119":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}