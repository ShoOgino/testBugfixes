{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new ThreeLongs(staticSeed, seed, LuceneTestCaseRunner.runnerSeed)\n        + reproduceWithExtraParams());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new ThreeLongs(staticSeed, seed, LuceneTestCaseRunner.runnerSeed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ed97703eb37066163749ca2f635433a2f2184a5","date":1332623674,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    StringBuilder b = new StringBuilder();\n    b.append(\"NOTE: reproduce with: ant test -Dtestcase=\")\n     .append(getClass().getSimpleName());\n    if (getName() != null) {\n      b.append(\" -Dtestmethod=\").append(getName());\n    }\n    b.append(\" -Dtests.seed=\")\n     .append(new ThreeLongs(staticSeed, seed, LuceneTestCaseRunner.runnerSeed))\n     .append(reproduceWithExtraParams());\n    System.err.println(b.toString());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    System.err.println(\"NOTE: reproduce with: ant test -Dtestcase=\" + getClass().getSimpleName()\n        + \" -Dtestmethod=\" + getName() + \" -Dtests.seed=\" + new ThreeLongs(staticSeed, seed, LuceneTestCaseRunner.runnerSeed)\n        + reproduceWithExtraParams());\n  }\n\n","bugFix":["b88f145033cba453c8f65cc86eb444c625ee86c0","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","0c839e28bbf8e26233e9cb58aa45188ae669f2be"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    StringBuilder b = new StringBuilder();\n    b.append(\"NOTE: reproduce with: ant test \")\n     .append(\"-Dtests.class=*.\").append(getTestClass().getSimpleName());\n    if (getName() != null) {\n      b.append(\" -Dtests.method=\").append(getName());\n    }\n    b.append(\" -Dtests.seed=\")\n     .append(RandomizedContext.current().getRunnerSeedAsString())\n     .append(reproduceWithExtraParams());\n    System.err.println(b.toString());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    StringBuilder b = new StringBuilder();\n    b.append(\"NOTE: reproduce with: ant test -Dtestcase=\")\n     .append(getClass().getSimpleName());\n    if (getName() != null) {\n      b.append(\" -Dtestmethod=\").append(getName());\n    }\n    b.append(\" -Dtests.seed=\")\n     .append(new ThreeLongs(staticSeed, seed, LuceneTestCaseRunner.runnerSeed))\n     .append(reproduceWithExtraParams());\n    System.err.println(b.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16478708056c52c45f59f61e3ed993cb1b9ed785","date":1336127374,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    StringBuilder b = new StringBuilder();\n    b.append(\"NOTE: reproduce with: ant test \")\n     .append(\"-Dtestcase\").append(getTestClass().getSimpleName());\n    if (getName() != null) {\n      b.append(\" -Dtests.method=\").append(getName());\n    }\n    b.append(\" -Dtests.seed=\")\n     .append(RandomizedContext.current().getRunnerSeedAsString())\n     .append(reproduceWithExtraParams());\n    System.err.println(b.toString());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    StringBuilder b = new StringBuilder();\n    b.append(\"NOTE: reproduce with: ant test \")\n     .append(\"-Dtests.class=*.\").append(getTestClass().getSimpleName());\n    if (getName() != null) {\n      b.append(\" -Dtests.method=\").append(getName());\n    }\n    b.append(\" -Dtests.seed=\")\n     .append(RandomizedContext.current().getRunnerSeedAsString())\n     .append(reproduceWithExtraParams());\n    System.err.println(b.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51da591db3faa47c1dae437f267423f06a2f170f","date":1336127561,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    StringBuilder b = new StringBuilder();\n    b.append(\"NOTE: reproduce with: ant test \")\n     .append(\"-Dtestcase=\").append(getTestClass().getSimpleName());\n    if (getName() != null) {\n      b.append(\" -Dtests.method=\").append(getName());\n    }\n    b.append(\" -Dtests.seed=\")\n     .append(RandomizedContext.current().getRunnerSeedAsString())\n     .append(reproduceWithExtraParams());\n    System.err.println(b.toString());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    StringBuilder b = new StringBuilder();\n    b.append(\"NOTE: reproduce with: ant test \")\n     .append(\"-Dtestcase\").append(getTestClass().getSimpleName());\n    if (getName() != null) {\n      b.append(\" -Dtests.method=\").append(getName());\n    }\n    b.append(\" -Dtests.seed=\")\n     .append(RandomizedContext.current().getRunnerSeedAsString())\n     .append(reproduceWithExtraParams());\n    System.err.println(b.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b539d5d697f78908c44d7ee4f6976b8dc0bde3c","date":1336644841,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    StringBuilder b = new StringBuilder();\n    b.append(\"NOTE: reproduce with: ant test \")\n     .append(\"-Dtestcase=\").append(getTestClass().getSimpleName());\n    if (getName() != null) {\n      b.append(\" -Dtests.method=\").append(getName());\n    }\n    b.append(\" -Dtests.seed=\")\n     .append(RandomizedContext.current().getRunnerSeedAsString())\n     .append(reproduceWithExtraParams());\n    System.err.println(b.toString());\n    if (TEST_LINE_DOCS_FILE.endsWith(JENKINS_LARGE_LINE_DOCS_FILE)) {\n      System.err.println(\"NOTE: download the large Jenkins line-docs file by running 'ant get-jenkins-line-docs' in the lucene directory\");\n    }\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    StringBuilder b = new StringBuilder();\n    b.append(\"NOTE: reproduce with: ant test \")\n     .append(\"-Dtestcase=\").append(getTestClass().getSimpleName());\n    if (getName() != null) {\n      b.append(\" -Dtests.method=\").append(getName());\n    }\n    b.append(\" -Dtests.seed=\")\n     .append(RandomizedContext.current().getRunnerSeedAsString())\n     .append(reproduceWithExtraParams());\n    System.err.println(b.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RunListenerPrintReproduceInfo#reportAdditionalFailureInfo(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#reportAdditionalFailureInfo().mjava","sourceNew":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo(final String testName) {\n    if (TEST_LINE_DOCS_FILE.endsWith(JENKINS_LARGE_LINE_DOCS_FILE)) {\n      System.err.println(\"NOTE: download the large Jenkins line-docs file by running 'ant get-jenkins-line-docs' in the lucene directory.\");\n    }\n\n    StringBuilder b = new StringBuilder();\n    b.append(\"NOTE: reproduce with: ant test \")\n     .append(\"-Dtestcase=\").append(RandomizedContext.current().getTargetClass().getSimpleName());\n    if (testName != null) {\n      b.append(\" -Dtests.method=\").append(testName);\n    }\n    b.append(\" -Dtests.seed=\")\n     .append(RandomizedContext.current().getRunnerSeedAsString())\n     .append(reproduceWithExtraParams());\n    System.err.println(b.toString());\n  }\n\n","sourceOld":"  // We get here from InterceptTestCaseEvents on the 'failed' event....\n  public void reportAdditionalFailureInfo() {\n    StringBuilder b = new StringBuilder();\n    b.append(\"NOTE: reproduce with: ant test \")\n     .append(\"-Dtestcase=\").append(getTestClass().getSimpleName());\n    if (getName() != null) {\n      b.append(\" -Dtests.method=\").append(getName());\n    }\n    b.append(\" -Dtests.seed=\")\n     .append(RandomizedContext.current().getRunnerSeedAsString())\n     .append(reproduceWithExtraParams());\n    System.err.println(b.toString());\n    if (TEST_LINE_DOCS_FILE.endsWith(JENKINS_LARGE_LINE_DOCS_FILE)) {\n      System.err.println(\"NOTE: download the large Jenkins line-docs file by running 'ant get-jenkins-line-docs' in the lucene directory\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"51da591db3faa47c1dae437f267423f06a2f170f":["16478708056c52c45f59f61e3ed993cb1b9ed785"],"0ed97703eb37066163749ca2f635433a2f2184a5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["3b539d5d697f78908c44d7ee4f6976b8dc0bde3c"],"3b539d5d697f78908c44d7ee4f6976b8dc0bde3c":["51da591db3faa47c1dae437f267423f06a2f170f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["0ed97703eb37066163749ca2f635433a2f2184a5"],"16478708056c52c45f59f61e3ed993cb1b9ed785":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5da0b42730b6b99b31389ef94cb97384e83b9ede"]},"commit2Childs":{"51da591db3faa47c1dae437f267423f06a2f170f":["3b539d5d697f78908c44d7ee4f6976b8dc0bde3c"],"0ed97703eb37066163749ca2f635433a2f2184a5":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3b539d5d697f78908c44d7ee4f6976b8dc0bde3c":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0ed97703eb37066163749ca2f635433a2f2184a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["16478708056c52c45f59f61e3ed993cb1b9ed785"],"16478708056c52c45f59f61e3ed993cb1b9ed785":["51da591db3faa47c1dae437f267423f06a2f170f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}