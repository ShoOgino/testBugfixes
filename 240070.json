{"path":"lucene/core/src/test/org/apache/lucene/search/TestQueryVisitor#testLeafQueryTypeCounts().mjava","commits":[{"id":"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7","date":1552575873,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestQueryVisitor#testLeafQueryTypeCounts().mjava","pathOld":"/dev/null","sourceNew":"  public void testLeafQueryTypeCounts() {\n    Map<Class<? extends Query>, Integer> queryCounts = new HashMap<>();\n    query.visit(new QueryVisitor() {\n\n      private void countQuery(Query q) {\n        queryCounts.compute(q.getClass(), (query, i) -> {\n          if (i == null) {\n            return 1;\n          }\n          return i + 1;\n        });\n      }\n\n      @Override\n      public void consumeTerms(Query query, Term... terms) {\n        countQuery(query);\n      }\n\n      @Override\n      public void visitLeaf(Query query) {\n        countQuery(query);\n      }\n\n    });\n    assertEquals(4, queryCounts.get(TermQuery.class).intValue());\n    assertEquals(1, queryCounts.get(PhraseQuery.class).intValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}