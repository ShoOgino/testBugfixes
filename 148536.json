{"path":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,boolean).mjava","commits":[{"id":"047007f30fa7e5c9273d6dc8d292deca18da4c2c","date":1251016462,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void init(Reader input, boolean replaceInvalidAcronym) {\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n    setInput(input);    \n    termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n    offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    posIncrAtt = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n    typeAtt = (TypeAttribute) addAttribute(TypeAttribute.class);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a82fda1447250ff156ff3b862d94a99bf0a3c23c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a82fda1447250ff156ff3b862d94a99bf0a3c23c","date":1252649533,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,boolean).mjava","sourceNew":"  private void init(Reader input, boolean replaceInvalidAcronym) {\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n    this.input = input;    \n    termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n    offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    posIncrAtt = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n    typeAtt = (TypeAttribute) addAttribute(TypeAttribute.class);\n  }\n\n","sourceOld":"  private void init(Reader input, boolean replaceInvalidAcronym) {\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n    setInput(input);    \n    termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n    offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    posIncrAtt = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n    typeAtt = (TypeAttribute) addAttribute(TypeAttribute.class);\n  }\n\n","bugFix":["047007f30fa7e5c9273d6dc8d292deca18da4c2c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,boolean).mjava","sourceNew":"  private void init(Reader input, boolean replaceInvalidAcronym) {\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n    this.input = input;    \n    termAtt = addAttribute(TermAttribute.class);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n    typeAtt = addAttribute(TypeAttribute.class);\n  }\n\n","sourceOld":"  private void init(Reader input, boolean replaceInvalidAcronym) {\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n    this.input = input;    \n    termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n    offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n    posIncrAtt = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n    typeAtt = (TypeAttribute) addAttribute(TypeAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,Version).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,boolean).mjava","sourceNew":"  private void init(Reader input, Version matchVersion) {\n    if (matchVersion.onOrAfter(Version.LUCENE_24)) {\n      replaceInvalidAcronym = true;\n    } else {\n      replaceInvalidAcronym = false;\n    }\n    this.input = input;    \n    termAtt = addAttribute(TermAttribute.class);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n    typeAtt = addAttribute(TypeAttribute.class);\n  }\n\n","sourceOld":"  private void init(Reader input, boolean replaceInvalidAcronym) {\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n    this.input = input;    \n    termAtt = addAttribute(TermAttribute.class);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n    typeAtt = addAttribute(TypeAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":["77814958b841b2c57a45005379f41e9a5775da81"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a82fda1447250ff156ff3b862d94a99bf0a3c23c":["047007f30fa7e5c9273d6dc8d292deca18da4c2c"],"047007f30fa7e5c9273d6dc8d292deca18da4c2c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d78f014fded44fbde905f4f84cdc21907b371e8":["a82fda1447250ff156ff3b862d94a99bf0a3c23c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba1116b3450a9c1642c89445d131b37344055245"],"ba1116b3450a9c1642c89445d131b37344055245":["8d78f014fded44fbde905f4f84cdc21907b371e8"]},"commit2Childs":{"a82fda1447250ff156ff3b862d94a99bf0a3c23c":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"047007f30fa7e5c9273d6dc8d292deca18da4c2c":["a82fda1447250ff156ff3b862d94a99bf0a3c23c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["047007f30fa7e5c9273d6dc8d292deca18da4c2c"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["ba1116b3450a9c1642c89445d131b37344055245"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ba1116b3450a9c1642c89445d131b37344055245":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}