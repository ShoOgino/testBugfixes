{"path":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(this);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (!success) {\n            try {\n              file.close();\n            } catch (Throwable t) {\n              // Suppress so we don't mask original exception\n            }\n          } else {\n            file.close();\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(this);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (!success) {\n            try {\n              file.close();\n            } catch (Throwable t) {\n              // Suppress so we don't mask original exception\n            }\n          } else {\n            file.close();\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7be25195304fffb0961b22414915e675ac3c9f6","date":1363889959,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(name);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (!success) {\n            try {\n              file.close();\n            } catch (Throwable t) {\n              // Suppress so we don't mask original exception\n            }\n          } else {\n            file.close();\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(this);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (!success) {\n            try {\n              file.close();\n            } catch (Throwable t) {\n              // Suppress so we don't mask original exception\n            }\n          } else {\n            file.close();\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0dcf83b1542b01ad5cddb41b01dc51f751215919","date":1376231222,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(name);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        IOException priorE = null;\n        try {\n          super.close();\n        } catch (IOException ioe) {\n          priorE = ioe;\n        } finally {\n          isOpen = false;\n          IOUtils.closeWhileHandlingException(priorE, file);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(name);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (!success) {\n            try {\n              file.close();\n            } catch (Throwable t) {\n              // Suppress so we don't mask original exception\n            }\n          } else {\n            file.close();\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(name);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        IOException priorE = null;\n        try {\n          super.close();\n        } catch (IOException ioe) {\n          priorE = ioe;\n        } finally {\n          isOpen = false;\n          IOUtils.closeWhileHandlingException(priorE, file);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(name);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (!success) {\n            try {\n              file.close();\n            } catch (Throwable t) {\n              // Suppress so we don't mask original exception\n            }\n          } else {\n            file.close();\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43e3527ed736c46c0f0ab28181937b9de5ef7c63","date":1399502658,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(name);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (success) {\n            IOUtils.close(file);\n          } else {\n            IOUtils.closeWhileHandlingException(file);\n          }\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(name);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        IOException priorE = null;\n        try {\n          super.close();\n        } catch (IOException ioe) {\n          priorE = ioe;\n        } finally {\n          isOpen = false;\n          IOUtils.closeWhileHandlingException(priorE, file);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bce1e2aee8b16573bc0d091471e4660d140b5823","date":1400533696,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      try {\n        onIndexOutputClosed(name);\n      } finally {\n        super.close();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(name);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (success) {\n            IOUtils.close(file);\n          } else {\n            IOUtils.closeWhileHandlingException(file);\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      try {\n        onIndexOutputClosed(name);\n      } finally {\n        super.close();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      parent.onIndexOutputClosed(name);\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (success) {\n            IOUtils.close(file);\n          } else {\n            IOUtils.closeWhileHandlingException(file);\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0716e003f90db334b4898cc2149fcc71e9a4fe4e","date":1420109009,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory.FSIndexOutput#close().mjava","sourceNew":null,"sourceOld":"    @Override\n    public void close() throws IOException {\n      try {\n        onIndexOutputClosed(name);\n      } finally {\n        super.close();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bce1e2aee8b16573bc0d091471e4660d140b5823":["43e3527ed736c46c0f0ab28181937b9de5ef7c63"],"43e3527ed736c46c0f0ab28181937b9de5ef7c63":["0dcf83b1542b01ad5cddb41b01dc51f751215919"],"c7be25195304fffb0961b22414915e675ac3c9f6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0716e003f90db334b4898cc2149fcc71e9a4fe4e":["bce1e2aee8b16573bc0d091471e4660d140b5823"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["c7be25195304fffb0961b22414915e675ac3c9f6"],"0dcf83b1542b01ad5cddb41b01dc51f751215919":["c7be25195304fffb0961b22414915e675ac3c9f6"],"b7605579001505896d48b07160075a5c8b8e128e":["43e3527ed736c46c0f0ab28181937b9de5ef7c63","bce1e2aee8b16573bc0d091471e4660d140b5823"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0716e003f90db334b4898cc2149fcc71e9a4fe4e"]},"commit2Childs":{"bce1e2aee8b16573bc0d091471e4660d140b5823":["0716e003f90db334b4898cc2149fcc71e9a4fe4e","b7605579001505896d48b07160075a5c8b8e128e"],"43e3527ed736c46c0f0ab28181937b9de5ef7c63":["bce1e2aee8b16573bc0d091471e4660d140b5823","b7605579001505896d48b07160075a5c8b8e128e"],"c7be25195304fffb0961b22414915e675ac3c9f6":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","0dcf83b1542b01ad5cddb41b01dc51f751215919"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7be25195304fffb0961b22414915e675ac3c9f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0716e003f90db334b4898cc2149fcc71e9a4fe4e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"0dcf83b1542b01ad5cddb41b01dc51f751215919":["43e3527ed736c46c0f0ab28181937b9de5ef7c63"],"b7605579001505896d48b07160075a5c8b8e128e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}