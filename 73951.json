{"path":"lucene/core/src/java/org/apache/lucene/index/NumericFieldUpdates.PackedNumericFieldUpdates#getUpdates().mjava","commits":[{"id":"1bae040fd1d5e03e0d8d695a9c25cf4f402e7ffe","date":1381909398,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericFieldUpdates.PackedNumericFieldUpdates#getUpdates().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public UpdatesIterator getUpdates() {\n      final PagedMutable docs = this.docs;\n      final PagedGrowableWriter values = this.values;\n      final FixedBitSet docsWithField = this.docsWithField;\n      new InPlaceMergeSorter() {\n        @Override\n        protected void swap(int i, int j) {\n          long tmpDoc = docs.get(j);\n          docs.set(j, docs.get(i));\n          docs.set(i, tmpDoc);\n          \n          long tmpVal = values.get(j);\n          values.set(j, values.get(i));\n          values.set(i, tmpVal);\n          \n          boolean tmpBool = docsWithField.get(j);\n          if (docsWithField.get(i)) {\n            docsWithField.set(j);\n          } else {\n            docsWithField.clear(j);\n          }\n          if (tmpBool) {\n            docsWithField.set(i);\n          } else {\n            docsWithField.clear(i);\n          }\n        }\n        \n        @Override\n        protected int compare(int i, int j) {\n          int x = (int) docs.get(i);\n          int y = (int) docs.get(j);\n          return (x < y) ? -1 : ((x == y) ? 0 : 1);\n        }\n      }.sort(0, size);\n\n      final int size = this.size;\n      return new UpdatesIterator() {\n        private long idx = 0; // long so we don't overflow if size == Integer.MAX_VALUE\n        private int doc = -1;\n        private Long value = null;\n        \n        @Override\n        Long value() {\n          return value;\n        }\n        \n        @Override\n        int nextDoc() {\n          if (idx >= size) {\n            value = null;\n            return doc = DocIdSetIterator.NO_MORE_DOCS;\n          }\n          doc = (int) docs.get(idx);\n          ++idx;\n          while (idx < size && docs.get(idx) == doc) {\n            ++idx;\n          }\n          if (!docsWithField.get((int) (idx - 1))) {\n            value = null;\n          } else {\n            // idx points to the \"next\" element\n            value = Long.valueOf(values.get(idx - 1));\n          }\n          return doc;\n        }\n        \n        @Override\n        int doc() {\n          return doc;\n        }\n        \n        @Override\n        void reset() {\n          doc = -1;\n          value = null;\n          idx = 0;\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06805da26538ed636bd89b10c2699cc3834032ae","date":1395132972,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericFieldUpdates.PackedNumericFieldUpdates#getUpdates().mjava","sourceNew":null,"sourceOld":"    @Override\n    public UpdatesIterator getUpdates() {\n      final PagedMutable docs = this.docs;\n      final PagedGrowableWriter values = this.values;\n      final FixedBitSet docsWithField = this.docsWithField;\n      new InPlaceMergeSorter() {\n        @Override\n        protected void swap(int i, int j) {\n          long tmpDoc = docs.get(j);\n          docs.set(j, docs.get(i));\n          docs.set(i, tmpDoc);\n          \n          long tmpVal = values.get(j);\n          values.set(j, values.get(i));\n          values.set(i, tmpVal);\n          \n          boolean tmpBool = docsWithField.get(j);\n          if (docsWithField.get(i)) {\n            docsWithField.set(j);\n          } else {\n            docsWithField.clear(j);\n          }\n          if (tmpBool) {\n            docsWithField.set(i);\n          } else {\n            docsWithField.clear(i);\n          }\n        }\n        \n        @Override\n        protected int compare(int i, int j) {\n          int x = (int) docs.get(i);\n          int y = (int) docs.get(j);\n          return (x < y) ? -1 : ((x == y) ? 0 : 1);\n        }\n      }.sort(0, size);\n\n      final int size = this.size;\n      return new UpdatesIterator() {\n        private long idx = 0; // long so we don't overflow if size == Integer.MAX_VALUE\n        private int doc = -1;\n        private Long value = null;\n        \n        @Override\n        Long value() {\n          return value;\n        }\n        \n        @Override\n        int nextDoc() {\n          if (idx >= size) {\n            value = null;\n            return doc = DocIdSetIterator.NO_MORE_DOCS;\n          }\n          doc = (int) docs.get(idx);\n          ++idx;\n          while (idx < size && docs.get(idx) == doc) {\n            ++idx;\n          }\n          if (!docsWithField.get((int) (idx - 1))) {\n            value = null;\n          } else {\n            // idx points to the \"next\" element\n            value = Long.valueOf(values.get(idx - 1));\n          }\n          return doc;\n        }\n        \n        @Override\n        int doc() {\n          return doc;\n        }\n        \n        @Override\n        void reset() {\n          doc = -1;\n          value = null;\n          idx = 0;\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1bae040fd1d5e03e0d8d695a9c25cf4f402e7ffe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06805da26538ed636bd89b10c2699cc3834032ae":["1bae040fd1d5e03e0d8d695a9c25cf4f402e7ffe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06805da26538ed636bd89b10c2699cc3834032ae"]},"commit2Childs":{"1bae040fd1d5e03e0d8d695a9c25cf4f402e7ffe":["06805da26538ed636bd89b10c2699cc3834032ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1bae040fd1d5e03e0d8d695a9c25cf4f402e7ffe"],"06805da26538ed636bd89b10c2699cc3834032ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}