{"path":"contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(SegmentInfos,IndexWriter,int,Set[SegmentInfo]).mjava","commits":[{"id":"f11899016a0460a7ea2e4b008d002e1e75c7d867","date":1256772085,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(SegmentInfos,IndexWriter,int,Set[SegmentInfo]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(SegmentInfos,IndexWriter,int,Set).mjava","sourceNew":"  private boolean isOptimized(SegmentInfos infos, IndexWriter writer, int maxNumSegments, Set<SegmentInfo> segmentsToOptimize) throws IOException {\n    final int numSegments = infos.size();\n    int numToOptimize = 0;\n    SegmentInfo optimizeInfo = null;\n    for(int i=0;i<numSegments && numToOptimize <= maxNumSegments;i++) {\n      final SegmentInfo info = infos.info(i);\n      if (segmentsToOptimize.contains(info)) {\n        numToOptimize++;\n        optimizeInfo = info;\n      }\n    }\n\n    return numToOptimize <= maxNumSegments &&\n      (numToOptimize != 1 || isOptimized(writer, optimizeInfo));\n  }\n\n","sourceOld":"  private boolean isOptimized(SegmentInfos infos, IndexWriter writer, int maxNumSegments, Set segmentsToOptimize) throws IOException {\n    final int numSegments = infos.size();\n    int numToOptimize = 0;\n    SegmentInfo optimizeInfo = null;\n    for(int i=0;i<numSegments && numToOptimize <= maxNumSegments;i++) {\n      final SegmentInfo info = infos.info(i);\n      if (segmentsToOptimize.contains(info)) {\n        numToOptimize++;\n        optimizeInfo = info;\n      }\n    }\n\n    return numToOptimize <= maxNumSegments &&\n      (numToOptimize != 1 || isOptimized(writer, optimizeInfo));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(SegmentInfos,IndexWriter,int,Set[SegmentInfo]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#isOptimized(SegmentInfos,IndexWriter,int,Set[SegmentInfo]).mjava","sourceNew":"  private boolean isOptimized(SegmentInfos infos, IndexWriter writer, int maxNumSegments, Set<SegmentInfo> segmentsToOptimize) throws IOException {\n    final int numSegments = infos.size();\n    int numToOptimize = 0;\n    SegmentInfo optimizeInfo = null;\n    for(int i=0;i<numSegments && numToOptimize <= maxNumSegments;i++) {\n      final SegmentInfo info = infos.info(i);\n      if (segmentsToOptimize.contains(info)) {\n        numToOptimize++;\n        optimizeInfo = info;\n      }\n    }\n\n    return numToOptimize <= maxNumSegments &&\n      (numToOptimize != 1 || isOptimized(writer, optimizeInfo));\n  }\n\n","sourceOld":"  private boolean isOptimized(SegmentInfos infos, IndexWriter writer, int maxNumSegments, Set<SegmentInfo> segmentsToOptimize) throws IOException {\n    final int numSegments = infos.size();\n    int numToOptimize = 0;\n    SegmentInfo optimizeInfo = null;\n    for(int i=0;i<numSegments && numToOptimize <= maxNumSegments;i++) {\n      final SegmentInfo info = infos.info(i);\n      if (segmentsToOptimize.contains(info)) {\n        numToOptimize++;\n        optimizeInfo = info;\n      }\n    }\n\n    return numToOptimize <= maxNumSegments &&\n      (numToOptimize != 1 || isOptimized(writer, optimizeInfo));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["f11899016a0460a7ea2e4b008d002e1e75c7d867"],"f11899016a0460a7ea2e4b008d002e1e75c7d867":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f11899016a0460a7ea2e4b008d002e1e75c7d867"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f11899016a0460a7ea2e4b008d002e1e75c7d867":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}