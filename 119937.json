{"path":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","commits":[{"id":"20065f48f840771dec27aa4ef3931a927025cbfb","date":1269013387,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9799ebcab48102552d92f7807965a91fb6e116f7","9799ebcab48102552d92f7807965a91fb6e116f7","9799ebcab48102552d92f7807965a91fb6e116f7","9799ebcab48102552d92f7807965a91fb6e116f7","9799ebcab48102552d92f7807965a91fb6e116f7","9799ebcab48102552d92f7807965a91fb6e116f7","9799ebcab48102552d92f7807965a91fb6e116f7","9799ebcab48102552d92f7807965a91fb6e116f7","9799ebcab48102552d92f7807965a91fb6e116f7","9799ebcab48102552d92f7807965a91fb6e116f7","9799ebcab48102552d92f7807965a91fb6e116f7","9799ebcab48102552d92f7807965a91fb6e116f7","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fc576a65618d07aff0c124c04ff277a6b9f0f41d","date":1269558595,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;    \n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b365e1bb255226e730a37a0bb229582adb1bc16f","date":1287326812,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;    \n  }\n\n","bugFix":null,"bugIntro":["47203e13ac23625771dbc8c30dfdefd6064ebf10","47203e13ac23625771dbc8c30dfdefd6064ebf10","47203e13ac23625771dbc8c30dfdefd6064ebf10","47203e13ac23625771dbc8c30dfdefd6064ebf10"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"057119d0666f2a2674ad4bba71baca71cb200801","date":1287510147,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    RefCounted<SolrIndexSearcher> holder = null;\n\n    if (h != null) {\n      holder = h.getCore().getSearcher();\n      log.info(\"END SEARCHER REFCOUNT=\" + (holder.getRefcount()-1) + \" instance=\"+holder.get());\n      h.close();\n    }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n\n    if (holder != null) {\n      log.info(\"FINAL SEARCHER REFCOUNT=\" + (holder.getRefcount()-1) + \" instance=\"+holder.get());\n      holder.decref();\n    }\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9077e792550279352dfaab22b394064dc6c62fc","date":1287510928,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    RefCounted<SolrIndexSearcher> holder = null;\n\n    if (h != null) {\n      holder = h.getCore().getSearcher();\n      log.info(\"END SEARCHER REFCOUNT=\" + (holder.getRefcount()-1) + \" instance=\"+holder.get());\n      h.close();\n    }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n\n    if (holder != null) {\n      log.info(\"FINAL SEARCHER REFCOUNT=\" + (holder.getRefcount()-1) + \" instance=\"+holder.get());\n      holder.decref();\n    }\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b09c7419b92e982a901698cb401ce22ac35e4b04","date":1301668869,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"20065f48f840771dec27aa4ef3931a927025cbfb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","b09c7419b92e982a901698cb401ce22ac35e4b04"],"d20d5e40789b1c42f4f926e3174b271256c43657":["a9077e792550279352dfaab22b394064dc6c62fc"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["fc576a65618d07aff0c124c04ff277a6b9f0f41d","a9077e792550279352dfaab22b394064dc6c62fc"],"a9077e792550279352dfaab22b394064dc6c62fc":["057119d0666f2a2674ad4bba71baca71cb200801"],"b365e1bb255226e730a37a0bb229582adb1bc16f":["fc576a65618d07aff0c124c04ff277a6b9f0f41d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b09c7419b92e982a901698cb401ce22ac35e4b04":["a9077e792550279352dfaab22b394064dc6c62fc"],"057119d0666f2a2674ad4bba71baca71cb200801":["b365e1bb255226e730a37a0bb229582adb1bc16f"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["fc576a65618d07aff0c124c04ff277a6b9f0f41d","a9077e792550279352dfaab22b394064dc6c62fc"],"fc576a65618d07aff0c124c04ff277a6b9f0f41d":["20065f48f840771dec27aa4ef3931a927025cbfb"],"45669a651c970812a680841b97a77cce06af559f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b09c7419b92e982a901698cb401ce22ac35e4b04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b09c7419b92e982a901698cb401ce22ac35e4b04"]},"commit2Childs":{"20065f48f840771dec27aa4ef3931a927025cbfb":["fc576a65618d07aff0c124c04ff277a6b9f0f41d"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d20d5e40789b1c42f4f926e3174b271256c43657":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["45669a651c970812a680841b97a77cce06af559f"],"a9077e792550279352dfaab22b394064dc6c62fc":["d20d5e40789b1c42f4f926e3174b271256c43657","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b09c7419b92e982a901698cb401ce22ac35e4b04","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"b365e1bb255226e730a37a0bb229582adb1bc16f":["057119d0666f2a2674ad4bba71baca71cb200801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20065f48f840771dec27aa4ef3931a927025cbfb"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"057119d0666f2a2674ad4bba71baca71cb200801":["a9077e792550279352dfaab22b394064dc6c62fc"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"fc576a65618d07aff0c124c04ff277a6b9f0f41d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b365e1bb255226e730a37a0bb229582adb1bc16f","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d20d5e40789b1c42f4f926e3174b271256c43657","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}