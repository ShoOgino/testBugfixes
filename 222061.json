{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient#hasInfoToFindLeaders(UpdateRequest,String).mjava","commits":[{"id":"291857aeee5ec20518ddce131ac4362c0075ebe1","date":1467882201,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient#hasInfoToFindLeaders(UpdateRequest,String).mjava","pathOld":"/dev/null","sourceNew":"  private static boolean hasInfoToFindLeaders(UpdateRequest updateRequest, String idField) {\n    final Map<SolrInputDocument,Map<String,Object>> documents = updateRequest.getDocumentsMap();\n    final Map<String,Map<String,Object>> deleteById = updateRequest.getDeleteByIdMap();\n\n    final boolean hasNoDocuments = (documents == null || documents.isEmpty());\n    final boolean hasNoDeleteById = (deleteById == null || deleteById.isEmpty());\n    if (hasNoDocuments && hasNoDeleteById) {\n      // no documents and no delete-by-id, so no info to find leader(s)\n      return false;\n    }\n\n    if (documents != null) {\n      for (final Map.Entry<SolrInputDocument,Map<String,Object>> entry : documents.entrySet()) {\n        final SolrInputDocument doc = entry.getKey();\n        final Object fieldValue = doc.getFieldValue(idField);\n        if (fieldValue == null) {\n          // a document with no id field value, so can't find leader for it\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient#hasInfoToFindLeaders(UpdateRequest,String).mjava","pathOld":"/dev/null","sourceNew":"  private static boolean hasInfoToFindLeaders(UpdateRequest updateRequest, String idField) {\n    final Map<SolrInputDocument,Map<String,Object>> documents = updateRequest.getDocumentsMap();\n    final Map<String,Map<String,Object>> deleteById = updateRequest.getDeleteByIdMap();\n\n    final boolean hasNoDocuments = (documents == null || documents.isEmpty());\n    final boolean hasNoDeleteById = (deleteById == null || deleteById.isEmpty());\n    if (hasNoDocuments && hasNoDeleteById) {\n      // no documents and no delete-by-id, so no info to find leader(s)\n      return false;\n    }\n\n    if (documents != null) {\n      for (final Map.Entry<SolrInputDocument,Map<String,Object>> entry : documents.entrySet()) {\n        final SolrInputDocument doc = entry.getKey();\n        final Object fieldValue = doc.getFieldValue(idField);\n        if (fieldValue == null) {\n          // a document with no id field value, so can't find leader for it\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0544142c22eb88b6d8b3817f2e1190156aa4f9af","date":1551692505,"type":5,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseCloudSolrClient#hasInfoToFindLeaders(UpdateRequest,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient#hasInfoToFindLeaders(UpdateRequest,String).mjava","sourceNew":"  private static boolean hasInfoToFindLeaders(UpdateRequest updateRequest, String idField) {\n    final Map<SolrInputDocument,Map<String,Object>> documents = updateRequest.getDocumentsMap();\n    final Map<String,Map<String,Object>> deleteById = updateRequest.getDeleteByIdMap();\n\n    final boolean hasNoDocuments = (documents == null || documents.isEmpty());\n    final boolean hasNoDeleteById = (deleteById == null || deleteById.isEmpty());\n    if (hasNoDocuments && hasNoDeleteById) {\n      // no documents and no delete-by-id, so no info to find leader(s)\n      return false;\n    }\n\n    if (documents != null) {\n      for (final Map.Entry<SolrInputDocument,Map<String,Object>> entry : documents.entrySet()) {\n        final SolrInputDocument doc = entry.getKey();\n        final Object fieldValue = doc.getFieldValue(idField);\n        if (fieldValue == null) {\n          // a document with no id field value, so can't find leader for it\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":"  private static boolean hasInfoToFindLeaders(UpdateRequest updateRequest, String idField) {\n    final Map<SolrInputDocument,Map<String,Object>> documents = updateRequest.getDocumentsMap();\n    final Map<String,Map<String,Object>> deleteById = updateRequest.getDeleteByIdMap();\n\n    final boolean hasNoDocuments = (documents == null || documents.isEmpty());\n    final boolean hasNoDeleteById = (deleteById == null || deleteById.isEmpty());\n    if (hasNoDocuments && hasNoDeleteById) {\n      // no documents and no delete-by-id, so no info to find leader(s)\n      return false;\n    }\n\n    if (documents != null) {\n      for (final Map.Entry<SolrInputDocument,Map<String,Object>> entry : documents.entrySet()) {\n        final SolrInputDocument doc = entry.getKey();\n        final Object fieldValue = doc.getFieldValue(idField);\n        if (fieldValue == null) {\n          // a document with no id field value, so can't find leader for it\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["291857aeee5ec20518ddce131ac4362c0075ebe1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"291857aeee5ec20518ddce131ac4362c0075ebe1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","291857aeee5ec20518ddce131ac4362c0075ebe1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"]},"commit2Childs":{"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["291857aeee5ec20518ddce131ac4362c0075ebe1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"291857aeee5ec20518ddce131ac4362c0075ebe1":["0544142c22eb88b6d8b3817f2e1190156aa4f9af","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}