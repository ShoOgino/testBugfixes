{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    RewriteQuery other = (RewriteQuery)obj;\n    return fieldName.equals(other.fieldName)\n\t&& qf.equals(other.qf)\n\t&& srndQuery.equals(other.srndQuery);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    RewriteQuery other = (RewriteQuery)obj;\n    return fieldName.equals(other.fieldName)\n\t&& qf.equals(other.qf)\n\t&& srndQuery.equals(other.srndQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    RewriteQuery other = (RewriteQuery)obj;\n    return fieldName.equals(other.fieldName)\n  && qf.equals(other.qf)\n  && srndQuery.equals(other.srndQuery);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    RewriteQuery other = (RewriteQuery)obj;\n    return fieldName.equals(other.fieldName)\n\t&& qf.equals(other.qf)\n\t&& srndQuery.equals(other.srndQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fdd0e99daabe8cd52cd4d7755679337bede8abe0","date":1425571318,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    RewriteQuery other = (RewriteQuery)obj;\n    return super.equals(obj)\n      && fieldName.equals(other.fieldName)\n      && qf.equals(other.qf)\n      && srndQuery.equals(other.srndQuery);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    RewriteQuery other = (RewriteQuery)obj;\n    return fieldName.equals(other.fieldName)\n  && qf.equals(other.qf)\n  && srndQuery.equals(other.srndQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    RewriteQuery other = (RewriteQuery)obj;\n    return super.equals(obj)\n      && fieldName.equals(other.fieldName)\n      && qf.equals(other.qf)\n      && srndQuery.equals(other.srndQuery);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    RewriteQuery other = (RewriteQuery)obj;\n    return fieldName.equals(other.fieldName)\n  && qf.equals(other.qf)\n  && srndQuery.equals(other.srndQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d286a9c5b9ffccdecbe00839ea800c6dc95ecb","date":1439661864,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    @SuppressWarnings(\"unchecked\") RewriteQuery<SQ> other = (RewriteQuery<SQ>)obj;\n    return super.equals(obj)\n      && fieldName.equals(other.fieldName)\n      && qf.equals(other.qf)\n      && srndQuery.equals(other.srndQuery);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    RewriteQuery other = (RewriteQuery)obj;\n    return super.equals(obj)\n      && fieldName.equals(other.fieldName)\n      && qf.equals(other.qf)\n      && srndQuery.equals(other.srndQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    @SuppressWarnings(\"unchecked\") RewriteQuery<SQ> other = (RewriteQuery<SQ>)obj;\n    return super.equals(obj)\n      && fieldName.equals(other.fieldName)\n      && qf.equals(other.qf)\n      && srndQuery.equals(other.srndQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == null)\n      return false;\n    if (! getClass().equals(obj.getClass()))\n      return false;\n    @SuppressWarnings(\"unchecked\") RewriteQuery<SQ> other = (RewriteQuery<SQ>)obj;\n    return super.equals(obj)\n      && fieldName.equals(other.fieldName)\n      && qf.equals(other.qf)\n      && srndQuery.equals(other.srndQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"81d286a9c5b9ffccdecbe00839ea800c6dc95ecb":["fdd0e99daabe8cd52cd4d7755679337bede8abe0"],"fdd0e99daabe8cd52cd4d7755679337bede8abe0":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376","fdd0e99daabe8cd52cd4d7755679337bede8abe0"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["81d286a9c5b9ffccdecbe00839ea800c6dc95ecb"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["81d286a9c5b9ffccdecbe00839ea800c6dc95ecb","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"81d286a9c5b9ffccdecbe00839ea800c6dc95ecb":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"fdd0e99daabe8cd52cd4d7755679337bede8abe0":["81d286a9c5b9ffccdecbe00839ea800c6dc95ecb","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["fdd0e99daabe8cd52cd4d7755679337bede8abe0","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}