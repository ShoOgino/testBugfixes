{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#assertDateRangeQueryEquals(PrecedenceQueryParser,String,String,String,Date,DateTools.Resolution).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#assertDateRangeQueryEquals(PrecedenceQueryParser,String,String,String,Date,DateTools.Resolution).mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/precedence/TestPrecedenceQueryParser#assertDateRangeQueryEquals(PrecedenceQueryParser,String,String,String,Date,DateTools.Resolution).mjava","sourceNew":"  public void assertDateRangeQueryEquals(PrecedenceQueryParser qp, String field,\n      String startDate, String endDate, Date endDateInclusive,\n      DateTools.Resolution resolution) throws Exception {\n    assertQueryEquals(qp, field, field + \":[\" + escapeDateString(startDate)\n        + \" TO \" + escapeDateString(endDate) + \"]\", \"[\"\n        + getDate(startDate, resolution) + \" TO \"\n        + getDate(endDateInclusive, resolution) + \"]\");\n    assertQueryEquals(qp, field, field + \":{\" + escapeDateString(startDate)\n        + \" TO \" + escapeDateString(endDate) + \"}\", \"{\"\n        + getDate(startDate, resolution) + \" TO \"\n        + getDate(endDate, resolution) + \"}\");\n  }\n\n","sourceOld":"  public void assertDateRangeQueryEquals(PrecedenceQueryParser qp, String field,\n      String startDate, String endDate, Date endDateInclusive,\n      DateTools.Resolution resolution) throws Exception {\n    assertQueryEquals(qp, field, field + \":[\" + escapeDateString(startDate)\n        + \" TO \" + escapeDateString(endDate) + \"]\", \"[\"\n        + getDate(startDate, resolution) + \" TO \"\n        + getDate(endDateInclusive, resolution) + \"]\");\n    assertQueryEquals(qp, field, field + \":{\" + escapeDateString(startDate)\n        + \" TO \" + escapeDateString(endDate) + \"}\", \"{\"\n        + getDate(startDate, resolution) + \" TO \"\n        + getDate(endDate, resolution) + \"}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}