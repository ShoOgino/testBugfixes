{"path":"src/java/org/apache/lucene/index/IndexFileDeleter#incRef(SegmentInfos,boolean).mjava","commits":[{"id":"8b6187898fc4413ccd18229711786550a280383c","date":1173776782,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter#incRef(SegmentInfos,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void incRef(SegmentInfos segmentInfos, boolean isCommit) throws IOException {\n    int size = segmentInfos.size();\n    for(int i=0;i<size;i++) {\n      SegmentInfo segmentInfo = segmentInfos.info(i);\n      if (segmentInfo.dir == directory) {\n        incRef(segmentInfo.files());\n      }\n    }\n\n    if (isCommit) {\n      // Since this is a commit point, also incref its\n      // segments_N file:\n      getRefCount(segmentInfos.getCurrentSegmentFileName()).IncRef();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0f44610301174bfb430443d89a88dc1c502feea1","6456e4ba6cdce20f5615173eb208f063c8cb74b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6456e4ba6cdce20f5615173eb208f063c8cb74b7","date":1174828735,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter#incRef(SegmentInfos,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter#incRef(SegmentInfos,boolean).mjava","sourceNew":"  void incRef(SegmentInfos segmentInfos, boolean isCommit) throws IOException {\n    int size = segmentInfos.size();\n    for(int i=0;i<size;i++) {\n      SegmentInfo segmentInfo = segmentInfos.info(i);\n      if (segmentInfo.dir == directory) {\n        incRef(segmentInfo.files());\n      }\n    }\n\n    if (isCommit) {\n      // Since this is a commit point, also incref its\n      // segments_N file:\n      getRefCount(segmentInfos.getCurrentSegmentFileName()).IncRef();\n    }\n  }\n\n","sourceOld":"  private void incRef(SegmentInfos segmentInfos, boolean isCommit) throws IOException {\n    int size = segmentInfos.size();\n    for(int i=0;i<size;i++) {\n      SegmentInfo segmentInfo = segmentInfos.info(i);\n      if (segmentInfo.dir == directory) {\n        incRef(segmentInfo.files());\n      }\n    }\n\n    if (isCommit) {\n      // Since this is a commit point, also incref its\n      // segments_N file:\n      getRefCount(segmentInfos.getCurrentSegmentFileName()).IncRef();\n    }\n  }\n\n","bugFix":["8b6187898fc4413ccd18229711786550a280383c"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0f44610301174bfb430443d89a88dc1c502feea1","date":1231194664,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter#incRef(SegmentInfos,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter#incRef(SegmentInfos,boolean).mjava","sourceNew":"  void incRef(SegmentInfos segmentInfos, boolean isCommit) throws IOException {\n     // If this is a commit point, also incRef the\n     // segments_N file:\n    Iterator it = segmentInfos.files(directory, isCommit).iterator();\n    while(it.hasNext()) {\n      incRef((String) it.next());\n    }\n  }\n\n","sourceOld":"  void incRef(SegmentInfos segmentInfos, boolean isCommit) throws IOException {\n    int size = segmentInfos.size();\n    for(int i=0;i<size;i++) {\n      SegmentInfo segmentInfo = segmentInfos.info(i);\n      if (segmentInfo.dir == directory) {\n        incRef(segmentInfo.files());\n      }\n    }\n\n    if (isCommit) {\n      // Since this is a commit point, also incref its\n      // segments_N file:\n      getRefCount(segmentInfos.getCurrentSegmentFileName()).IncRef();\n    }\n  }\n\n","bugFix":["8b6187898fc4413ccd18229711786550a280383c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter#incRef(SegmentInfos,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter#incRef(SegmentInfos,boolean).mjava","sourceNew":"  void incRef(SegmentInfos segmentInfos, boolean isCommit) throws IOException {\n     // If this is a commit point, also incRef the\n     // segments_N file:\n    for( final String fileName: segmentInfos.files(directory, isCommit) ) {\n      incRef(fileName);\n    }\n  }\n\n","sourceOld":"  void incRef(SegmentInfos segmentInfos, boolean isCommit) throws IOException {\n     // If this is a commit point, also incRef the\n     // segments_N file:\n    Iterator it = segmentInfos.files(directory, isCommit).iterator();\n    while(it.hasNext()) {\n      incRef((String) it.next());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter#incRef(SegmentInfos,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter#incRef(SegmentInfos,boolean).mjava","sourceNew":"  void incRef(SegmentInfos segmentInfos, boolean isCommit) throws IOException {\n     // If this is a commit point, also incRef the\n     // segments_N file:\n    for( final String fileName: segmentInfos.files(directory, isCommit) ) {\n      incRef(fileName);\n    }\n  }\n\n","sourceOld":"  void incRef(SegmentInfos segmentInfos, boolean isCommit) throws IOException {\n     // If this is a commit point, also incRef the\n     // segments_N file:\n    for( final String fileName: segmentInfos.files(directory, isCommit) ) {\n      incRef(fileName);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f44610301174bfb430443d89a88dc1c502feea1":["6456e4ba6cdce20f5615173eb208f063c8cb74b7"],"6456e4ba6cdce20f5615173eb208f063c8cb74b7":["8b6187898fc4413ccd18229711786550a280383c"],"ef82ff03e4016c705811b2658e81471a645c0e49":["0f44610301174bfb430443d89a88dc1c502feea1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b6187898fc4413ccd18229711786550a280383c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ef82ff03e4016c705811b2658e81471a645c0e49"]},"commit2Childs":{"0f44610301174bfb430443d89a88dc1c502feea1":["ef82ff03e4016c705811b2658e81471a645c0e49"],"6456e4ba6cdce20f5615173eb208f063c8cb74b7":["0f44610301174bfb430443d89a88dc1c502feea1"],"ef82ff03e4016c705811b2658e81471a645c0e49":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b6187898fc4413ccd18229711786550a280383c"],"8b6187898fc4413ccd18229711786550a280383c":["6456e4ba6cdce20f5615173eb208f063c8cb74b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}