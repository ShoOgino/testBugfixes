{"path":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","commits":[{"id":"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","date":1286023472,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Clears the {@link BytesRef} and returns an {@link Entry} which maps to the\n   * given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool)\n      pool.reset();\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b50bea3a34f005728e10c71d596cbf10b31d0e59","date":1286112171,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","sourceNew":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool)\n      pool.reset();\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","sourceOld":"  /**\n   * Clears the {@link BytesRef} and returns an {@link Entry} which maps to the\n   * given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool)\n      pool.reset();\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","date":1291128345,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","sourceNew":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool) {\n      pool.reset();\n    }\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","sourceOld":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool)\n      pool.reset();\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool)\n      pool.reset();\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"763d13ecba7c2e244aa7c7690a878daae26227f6","date":1305814974,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","sourceNew":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool) {\n      pool.dropBuffersAndReset();\n    }\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","sourceOld":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool) {\n      pool.reset();\n    }\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","sourceNew":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool) {\n      pool.dropBuffersAndReset();\n    }\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","sourceOld":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool)\n      pool.reset();\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","sourceNew":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool) {\n      pool.dropBuffersAndReset();\n    }\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","sourceOld":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool)\n      pool.reset();\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRefHash#clear(boolean).mjava","sourceNew":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool) {\n      pool.dropBuffersAndReset();\n    }\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","sourceOld":"  /**\n   * Clears the {@link BytesRef} which maps to the given {@link BytesRef}\n   */\n  public void clear(boolean resetPool) {\n    lastCount = count;\n    count = 0;\n    if (resetPool) {\n      pool.dropBuffersAndReset();\n    }\n    bytesStart = bytesStartArray.clear();\n    if (lastCount != -1 && shrink(lastCount)) {\n      // shrink clears the hash entries\n      return;\n    }\n    Arrays.fill(ords, -1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["b50bea3a34f005728e10c71d596cbf10b31d0e59"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["b50bea3a34f005728e10c71d596cbf10b31d0e59","2e8d7ba2175f47e280231533f7d3016249cea88b"],"763d13ecba7c2e244aa7c7690a878daae26227f6":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["b50bea3a34f005728e10c71d596cbf10b31d0e59","763d13ecba7c2e244aa7c7690a878daae26227f6"],"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b50bea3a34f005728e10c71d596cbf10b31d0e59":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b50bea3a34f005728e10c71d596cbf10b31d0e59"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["763d13ecba7c2e244aa7c7690a878daae26227f6"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"763d13ecba7c2e244aa7c7690a878daae26227f6":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["b50bea3a34f005728e10c71d596cbf10b31d0e59"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b50bea3a34f005728e10c71d596cbf10b31d0e59":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}