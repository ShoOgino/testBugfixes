{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestAdapterModel#setup().mjava","commits":[{"id":"a28c9d9ba74d60642c0d8f0468659a78b9a4bdad","date":1568337084,"type":1,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestAdapterModel#setup().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/model/TestAdapterModel#setupBeforeClass().mjava","sourceNew":"  @Before\n  public void setup() throws Exception {\n\n    setuptest(false);\n\n    numDocs = random().nextInt(10);\n    for (int ii=1; ii <= numDocs; ++ii) {\n      String id = Integer.toString(ii);\n      assertU(adoc(\"id\", id, \"popularity\", ii+\"00\"));\n    }\n    assertU(commit());\n\n    loadFeature(\"popularity\", FieldValueFeature.class.getName(), \"test\", \"{\\\"field\\\":\\\"popularity\\\"}\");\n\n    scoreValue = random().nextFloat();\n    final File scoreValueFile = new File(tmpConfDir, \"scoreValue.txt\");\n    try (BufferedWriter writer = new BufferedWriter(\n        new OutputStreamWriter(new FileOutputStream(scoreValueFile), StandardCharsets.UTF_8))) {\n      writer.write(Float.toString(scoreValue));\n    }\n    scoreValueFile.deleteOnExit();\n\n    final String modelJson = getModelInJson(\n        \"answerModel\",\n        CustomModel.class.getName(),\n        new String[] { \"popularity\" },\n        \"test\",\n        \"{\\\"answerFileName\\\":\\\"\" + scoreValueFile.getName() + \"\\\"}\");\n    assertJPut(ManagedModelStore.REST_END_POINT, modelJson, \"/responseHeader/status==0\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupBeforeClass() throws Exception {\n\n    setuptest(false);\n\n    for (int ii=1; ii<=random().nextInt(10); ++ii) {\n      String id = Integer.toString(ii);\n      assertU(adoc(\"id\", id, \"popularity\", ii+\"00\"));\n      ++numDocs;\n    }\n    assertU(commit());\n\n    loadFeature(\"popularity\", FieldValueFeature.class.getName(), \"test\", \"{\\\"field\\\":\\\"popularity\\\"}\");\n\n    scoreValue = random().nextFloat();\n    final File scoreValueFile = new File(tmpConfDir, \"scoreValue.txt\");\n    try (BufferedWriter writer = new BufferedWriter(\n        new OutputStreamWriter(new FileOutputStream(scoreValueFile), StandardCharsets.UTF_8))) {\n      writer.write(Float.toString(scoreValue));\n    }\n    scoreValueFile.deleteOnExit();\n\n    final String modelJson = getModelInJson(\n        \"answerModel\",\n        CustomModel.class.getName(),\n        new String[] { \"popularity\" },\n        \"test\",\n        \"{\\\"answerFileName\\\":\\\"\" + scoreValueFile.getName() + \"\\\"}\");\n    assertJPut(ManagedModelStore.REST_END_POINT, modelJson, \"/responseHeader/status==0\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a28c9d9ba74d60642c0d8f0468659a78b9a4bdad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a28c9d9ba74d60642c0d8f0468659a78b9a4bdad"]},"commit2Childs":{"a28c9d9ba74d60642c0d8f0468659a78b9a4bdad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a28c9d9ba74d60642c0d8f0468659a78b9a4bdad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}