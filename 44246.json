{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest.TokenEater#incrementToken().mjava","commits":[{"id":"6ce825e9276493231308229152c48f755ce1a0a5","date":1348871483,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggesterTest.TokenEater#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public final boolean incrementToken() throws IOException {\n      int skippedPositions = 0;\n      while (input.incrementToken()) {\n        if (termAtt.length() != 1 || !isStopChar(termAtt.charAt(0), numStopChars)) {\n          int posInc = posIncrAtt.getPositionIncrement() + skippedPositions;\n          if (first) {\n            if (posInc == 0) {\n              // first token having posinc=0 is illegal.\n              posInc = 1;\n            }\n            first = false;\n          }\n          posIncrAtt.setPositionIncrement(posInc);\n          //System.out.println(\"RETURN term=\" + termAtt + \" numStopChars=\" + numStopChars);\n          return true;\n        }\n        if (preserveHoles) {\n          skippedPositions += posIncrAtt.getPositionIncrement();\n        }\n      }\n\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ce825e9276493231308229152c48f755ce1a0a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6ce825e9276493231308229152c48f755ce1a0a5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ce825e9276493231308229152c48f755ce1a0a5"],"6ce825e9276493231308229152c48f755ce1a0a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}