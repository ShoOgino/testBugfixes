{"path":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.SchemaSimilarity#get(String).mjava","commits":[{"id":"69dab3bc0b0a7594aee1afc0a3d21285b9555620","date":1476962740,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.SchemaSimilarity#get(String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Similarity get(String name) {\n      FieldType fieldType = core.getLatestSchema().getFieldTypeNoEx(name);\n      if (fieldType == null) {\n        return defaultSimilarity;\n      } else {\n        Similarity similarity = fieldType.getSimilarity();\n        return similarity == null ? defaultSimilarity : similarity;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.SchemaSimilarity#get(String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Similarity get(String name) {\n      FieldType fieldType = core.getLatestSchema().getFieldTypeNoEx(name);\n      if (fieldType == null) {\n        return defaultSimilarity;\n      } else {\n        Similarity similarity = fieldType.getSimilarity();\n        return similarity == null ? defaultSimilarity : similarity;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03d1c7f08294f7d7e9ecf082aa1459f38d77f277","date":1493688929,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.SchemaSimilarity#get(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.SchemaSimilarity#get(String).mjava","sourceNew":"    @Override\n    public Similarity get(String name) {\n      FieldType fieldType = core.getLatestSchema().getFieldTypeNoEx(name);\n      if (fieldType == null) {\n        return defaultSimilarity;\n      } else {\n        Similarity similarity = fieldType.getSimilarity();\n        similarity = similarity == null ? defaultSimilarity : similarity;\n\n        // Payload score handling: if field type has index-time payload encoding, wrap and computePayloadFactor accordingly\n        if (decoders == null) decoders = new HashMap<>();\n        PayloadDecoder decoder;\n        if (!decoders.containsKey(fieldType)) {\n          decoders.put(fieldType, PayloadUtils.getPayloadDecoder(fieldType));\n        }\n        decoder = decoders.get(fieldType);\n\n        if (decoder != null) similarity = new PayloadScoringSimilarityWrapper(similarity, decoder);\n\n        return similarity;\n      }\n    }\n\n","sourceOld":"    @Override\n    public Similarity get(String name) {\n      FieldType fieldType = core.getLatestSchema().getFieldTypeNoEx(name);\n      if (fieldType == null) {\n        return defaultSimilarity;\n      } else {\n        Similarity similarity = fieldType.getSimilarity();\n        return similarity == null ? defaultSimilarity : similarity;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.SchemaSimilarity#get(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.SchemaSimilarity#get(String).mjava","sourceNew":"    @Override\n    public Similarity get(String name) {\n      FieldType fieldType = core.getLatestSchema().getFieldTypeNoEx(name);\n      if (fieldType == null) {\n        return defaultSimilarity;\n      } else {\n        Similarity similarity = fieldType.getSimilarity();\n        similarity = similarity == null ? defaultSimilarity : similarity;\n\n        // Payload score handling: if field type has index-time payload encoding, wrap and computePayloadFactor accordingly\n        if (decoders == null) decoders = new HashMap<>();\n        PayloadDecoder decoder;\n        if (!decoders.containsKey(fieldType)) {\n          decoders.put(fieldType, PayloadUtils.getPayloadDecoder(fieldType));\n        }\n        decoder = decoders.get(fieldType);\n\n        if (decoder != null) similarity = new PayloadScoringSimilarityWrapper(similarity, decoder);\n\n        return similarity;\n      }\n    }\n\n","sourceOld":"    @Override\n    public Similarity get(String name) {\n      FieldType fieldType = core.getLatestSchema().getFieldTypeNoEx(name);\n      if (fieldType == null) {\n        return defaultSimilarity;\n      } else {\n        Similarity similarity = fieldType.getSimilarity();\n        return similarity == null ? defaultSimilarity : similarity;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"340d2a56d051f2e4d6d9c707e2d5614d3d81adf8","date":1510236334,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.SchemaSimilarity#get(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/similarities/SchemaSimilarityFactory.SchemaSimilarity#get(String).mjava","sourceNew":"    @Override\n    public Similarity get(String name) {\n      FieldType fieldType = core.getLatestSchema().getFieldTypeNoEx(name);\n      if (fieldType == null) {\n        return defaultSimilarity;\n      } else {\n        Similarity similarity = fieldType.getSimilarity();\n        return similarity == null ? defaultSimilarity : similarity;\n      }\n    }\n\n","sourceOld":"    @Override\n    public Similarity get(String name) {\n      FieldType fieldType = core.getLatestSchema().getFieldTypeNoEx(name);\n      if (fieldType == null) {\n        return defaultSimilarity;\n      } else {\n        Similarity similarity = fieldType.getSimilarity();\n        similarity = similarity == null ? defaultSimilarity : similarity;\n\n        // Payload score handling: if field type has index-time payload encoding, wrap and computePayloadFactor accordingly\n        if (decoders == null) decoders = new HashMap<>();\n        PayloadDecoder decoder;\n        if (!decoders.containsKey(fieldType)) {\n          decoders.put(fieldType, PayloadUtils.getPayloadDecoder(fieldType));\n        }\n        decoder = decoders.get(fieldType);\n\n        if (decoder != null) similarity = new PayloadScoringSimilarityWrapper(similarity, decoder);\n\n        return similarity;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["69dab3bc0b0a7594aee1afc0a3d21285b9555620","03d1c7f08294f7d7e9ecf082aa1459f38d77f277"],"69dab3bc0b0a7594aee1afc0a3d21285b9555620":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"340d2a56d051f2e4d6d9c707e2d5614d3d81adf8":["03d1c7f08294f7d7e9ecf082aa1459f38d77f277"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","69dab3bc0b0a7594aee1afc0a3d21285b9555620"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["340d2a56d051f2e4d6d9c707e2d5614d3d81adf8"],"03d1c7f08294f7d7e9ecf082aa1459f38d77f277":["69dab3bc0b0a7594aee1afc0a3d21285b9555620"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"69dab3bc0b0a7594aee1afc0a3d21285b9555620":["e9017cf144952056066919f1ebc7897ff9bd71b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","03d1c7f08294f7d7e9ecf082aa1459f38d77f277"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["69dab3bc0b0a7594aee1afc0a3d21285b9555620","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"340d2a56d051f2e4d6d9c707e2d5614d3d81adf8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"03d1c7f08294f7d7e9ecf082aa1459f38d77f277":["e9017cf144952056066919f1ebc7897ff9bd71b1","340d2a56d051f2e4d6d9c707e2d5614d3d81adf8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}