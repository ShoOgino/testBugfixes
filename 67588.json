{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/AbstractGdataServlet#service(HttpServletRequest,HttpServletResponse).mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/AbstractGdataServlet#service(HttpServletRequest,HttpServletResponse).mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * This overwrites the protected <code>service</code> method to dispatch \n     * the request to the correponding <code>do</code> method. There is \n     * ususaly no need for overwriting this method. The GData protool and the \n     * Google GData API uses the <code>x-http-method-override</code> header to \n     * get through firewalls. The http method will be overritten by the \n     * <code>x-http-method-override</code> and dispatched to the \n     * <code>do</code><i>Xxx</i> methods defined in this class. This method \n     * is an GDATA-specific version of the {@link javax.servlet.Servlet#service} \n     * method. \n     *  \n     * @see HttpServlet#service(javax.servlet.http.HttpServletRequest, \n     *      javax.servlet.http.HttpServletResponse) \n     */ \n    @Override \n    protected void service(HttpServletRequest arg0, HttpServletResponse arg1) \n            throws ServletException, IOException { \n        if (arg0.getHeader(METHOD_HEADER_NAME) == null) { \n            super.service(arg0, arg1); \n            return; \n        } \n        overrideMethod(arg0, arg1); \n \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/AbstractGdataServlet#service(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/AbstractGdataServlet#service(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /** \n     * This overwrites the protected <code>service</code> method to dispatch \n     * the request to the correponding <code>do</code> method. There is \n     * ususaly no need for overwriting this method. The GData protool and the \n     * Google GData API uses the <code>x-http-method-override</code> header to \n     * get through firewalls. The http method will be overritten by the \n     * <code>x-http-method-override</code> and dispatched to the \n     * <code>do</code><i>Xxx</i> methods defined in this class. This method \n     * is an GDATA-specific version of the {@link javax.servlet.Servlet#service} \n     * method. \n     *  \n     * @see HttpServlet#service(javax.servlet.http.HttpServletRequest, \n     *      javax.servlet.http.HttpServletResponse) \n     */ \n    @Override \n    protected void service(HttpServletRequest arg0, HttpServletResponse arg1) \n            throws ServletException, IOException { \n        if (arg0.getHeader(METHOD_HEADER_NAME) == null) { \n            super.service(arg0, arg1); \n            return; \n        } \n        overrideMethod(arg0, arg1); \n \n    } \n\n","sourceOld":"    /** \n     * This overwrites the protected <code>service</code> method to dispatch \n     * the request to the correponding <code>do</code> method. There is \n     * ususaly no need for overwriting this method. The GData protool and the \n     * Google GData API uses the <code>x-http-method-override</code> header to \n     * get through firewalls. The http method will be overritten by the \n     * <code>x-http-method-override</code> and dispatched to the \n     * <code>do</code><i>Xxx</i> methods defined in this class. This method \n     * is an GDATA-specific version of the {@link javax.servlet.Servlet#service} \n     * method. \n     *  \n     * @see HttpServlet#service(javax.servlet.http.HttpServletRequest, \n     *      javax.servlet.http.HttpServletResponse) \n     */ \n    @Override \n    protected void service(HttpServletRequest arg0, HttpServletResponse arg1) \n            throws ServletException, IOException { \n        if (arg0.getHeader(METHOD_HEADER_NAME) == null) { \n            super.service(arg0, arg1); \n            return; \n        } \n        overrideMethod(arg0, arg1); \n \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}