{"path":"src/java/org/apache/lucene/index/DirectoryIndexReader#open(Directory,boolean,IndexDeletionPolicy).mjava","commits":[{"id":"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8","date":1195335263,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader#open(Directory,boolean,IndexDeletionPolicy).mjava","pathOld":"/dev/null","sourceNew":"  static DirectoryIndexReader open(final Directory directory, final boolean closeDirectory, final IndexDeletionPolicy deletionPolicy) throws CorruptIndexException, IOException {\n\n    return (DirectoryIndexReader) new SegmentInfos.FindSegmentsFile(directory) {\n\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n\n        SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n\n        DirectoryIndexReader reader;\n\n        if (infos.size() == 1) {          // index is optimized\n          reader = SegmentReader.get(infos, infos.info(0), closeDirectory);\n        } else {\n          reader = new MultiSegmentReader(directory, infos, closeDirectory);\n        }\n        reader.setDeletionPolicy(deletionPolicy);\n        return reader;\n      }\n    }.run();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac785906c92e4048ffc28f7c23a45541d3cca9bf","date":1214322066,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader#open(Directory,boolean,IndexDeletionPolicy).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader#open(Directory,boolean,IndexDeletionPolicy).mjava","sourceNew":"  static DirectoryIndexReader open(final Directory directory, final boolean closeDirectory, final IndexDeletionPolicy deletionPolicy) throws CorruptIndexException, IOException {\n    return open(directory, closeDirectory, deletionPolicy, null);\n  }\n\n","sourceOld":"  static DirectoryIndexReader open(final Directory directory, final boolean closeDirectory, final IndexDeletionPolicy deletionPolicy) throws CorruptIndexException, IOException {\n\n    return (DirectoryIndexReader) new SegmentInfos.FindSegmentsFile(directory) {\n\n      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {\n\n        SegmentInfos infos = new SegmentInfos();\n        infos.read(directory, segmentFileName);\n\n        DirectoryIndexReader reader;\n\n        if (infos.size() == 1) {          // index is optimized\n          reader = SegmentReader.get(infos, infos.info(0), closeDirectory);\n        } else {\n          reader = new MultiSegmentReader(directory, infos, closeDirectory);\n        }\n        reader.setDeletionPolicy(deletionPolicy);\n        return reader;\n      }\n    }.run();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5712975970a595c28f1988efd007e1b8a617a92f","date":1219499238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader#open(Directory,boolean,IndexDeletionPolicy).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader#open(Directory,boolean,IndexDeletionPolicy).mjava","sourceNew":"  static DirectoryIndexReader open(final Directory directory, final boolean closeDirectory, final IndexDeletionPolicy deletionPolicy) throws CorruptIndexException, IOException {\n    return open(directory, closeDirectory, deletionPolicy, null, false);\n  }\n\n","sourceOld":"  static DirectoryIndexReader open(final Directory directory, final boolean closeDirectory, final IndexDeletionPolicy deletionPolicy) throws CorruptIndexException, IOException {\n    return open(directory, closeDirectory, deletionPolicy, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader#open(Directory,boolean,IndexDeletionPolicy).mjava","sourceNew":null,"sourceOld":"  static DirectoryIndexReader open(final Directory directory, final boolean closeDirectory, final IndexDeletionPolicy deletionPolicy) throws CorruptIndexException, IOException {\n    return open(directory, closeDirectory, deletionPolicy, null, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["5712975970a595c28f1988efd007e1b8a617a92f"],"5712975970a595c28f1988efd007e1b8a617a92f":["ac785906c92e4048ffc28f7c23a45541d3cca9bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac785906c92e4048ffc28f7c23a45541d3cca9bf":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"]},"commit2Childs":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5712975970a595c28f1988efd007e1b8a617a92f":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"],"ac785906c92e4048ffc28f7c23a45541d3cca9bf":["5712975970a595c28f1988efd007e1b8a617a92f"],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["ac785906c92e4048ffc28f7c23a45541d3cca9bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}