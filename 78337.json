{"path":"lucene/backwards/src/test/org/apache/lucene/queryParser/TestMultiAnalyzer#testMultiAnalyzerWithSubclassOfQueryParser().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/queryParser/TestMultiAnalyzer#testMultiAnalyzerWithSubclassOfQueryParser().mjava","pathOld":"backwards/src/test/org/apache/lucene/queryParser/TestMultiAnalyzer#testMultiAnalyzerWithSubclassOfQueryParser().mjava","sourceNew":"  public void testMultiAnalyzerWithSubclassOfQueryParser() throws ParseException {\n\n    DumbQueryParser qp = new DumbQueryParser(\"\", new MultiAnalyzer());\n    qp.setPhraseSlop(99); // modified default slop\n\n    // direct call to (super's) getFieldQuery to demonstrate differnce\n    // between phrase and multiphrase with modified default slop\n    assertEquals(\"\\\"foo bar\\\"~99\",\n                 qp.getSuperFieldQuery(\"\",\"foo bar\").toString());\n    assertEquals(\"\\\"(multi multi2) bar\\\"~99\",\n                 qp.getSuperFieldQuery(\"\",\"multi bar\").toString());\n\n    \n    // ask sublcass to parse phrase with modified default slop\n    assertEquals(\"\\\"(multi multi2) foo\\\"~99 bar\",\n                 qp.parse(\"\\\"multi foo\\\" bar\").toString());\n    \n  }\n\n","sourceOld":"  public void testMultiAnalyzerWithSubclassOfQueryParser() throws ParseException {\n\n    DumbQueryParser qp = new DumbQueryParser(\"\", new MultiAnalyzer());\n    qp.setPhraseSlop(99); // modified default slop\n\n    // direct call to (super's) getFieldQuery to demonstrate differnce\n    // between phrase and multiphrase with modified default slop\n    assertEquals(\"\\\"foo bar\\\"~99\",\n                 qp.getSuperFieldQuery(\"\",\"foo bar\").toString());\n    assertEquals(\"\\\"(multi multi2) bar\\\"~99\",\n                 qp.getSuperFieldQuery(\"\",\"multi bar\").toString());\n\n    \n    // ask sublcass to parse phrase with modified default slop\n    assertEquals(\"\\\"(multi multi2) foo\\\"~99 bar\",\n                 qp.parse(\"\\\"multi foo\\\" bar\").toString());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/queryParser/TestMultiAnalyzer#testMultiAnalyzerWithSubclassOfQueryParser().mjava","sourceNew":null,"sourceOld":"  public void testMultiAnalyzerWithSubclassOfQueryParser() throws ParseException {\n\n    DumbQueryParser qp = new DumbQueryParser(\"\", new MultiAnalyzer());\n    qp.setPhraseSlop(99); // modified default slop\n\n    // direct call to (super's) getFieldQuery to demonstrate differnce\n    // between phrase and multiphrase with modified default slop\n    assertEquals(\"\\\"foo bar\\\"~99\",\n                 qp.getSuperFieldQuery(\"\",\"foo bar\").toString());\n    assertEquals(\"\\\"(multi multi2) bar\\\"~99\",\n                 qp.getSuperFieldQuery(\"\",\"multi bar\").toString());\n\n    \n    // ask sublcass to parse phrase with modified default slop\n    assertEquals(\"\\\"(multi multi2) foo\\\"~99 bar\",\n                 qp.parse(\"\\\"multi foo\\\" bar\").toString());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}