{"path":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","commits":[{"id":"b3be20ca1091c0b7cdb2308b9023606a5e451cec","date":1327877325,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"edcefacba254a0e3d6235c4b9c0a44dceaa626c5","date":1327944256,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" hasFinalOutput\");\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" hasFinalOutput\");\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" hasFinalOutput\");\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f04dea8ce9675dc75eb2483feb840a86f765fb82","date":1328049049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" hasOutput\");\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" hasFinalOutput\");\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST.Arc#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"node=\" + node);\n      b.append(\" target=\" + target);\n      b.append(\" label=\" + label);\n      if (flag(BIT_LAST_ARC)) {\n        b.append(\" last\");\n      }\n      if (flag(BIT_FINAL_ARC)) {\n        b.append(\" final\");\n      }\n      if (flag(BIT_TARGET_NEXT)) {\n        b.append(\" targetNext\");\n      }\n      if (flag(BIT_ARC_HAS_OUTPUT)) {\n        b.append(\" output=\" + output);\n      }\n      if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {\n        b.append(\" nextFinalOutput=\" + nextFinalOutput);\n      }\n      if (bytesPerArc != 0) {\n        b.append(\" arcArray(idx=\" + arcIdx + \" of \" + numArcs + \")\");\n      }\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"edcefacba254a0e3d6235c4b9c0a44dceaa626c5":["b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"410e066f093e407222d9681429d209084e783149":["817882884229bace7dc5d1b75f6b0e4aa1e47122","edcefacba254a0e3d6235c4b9c0a44dceaa626c5"],"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f04dea8ce9675dc75eb2483feb840a86f765fb82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","edcefacba254a0e3d6235c4b9c0a44dceaa626c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f04dea8ce9675dc75eb2483feb840a86f765fb82":["edcefacba254a0e3d6235c4b9c0a44dceaa626c5"]},"commit2Childs":{"edcefacba254a0e3d6235c4b9c0a44dceaa626c5":["410e066f093e407222d9681429d209084e783149","5b6fdfce35d0adb18836cf8711abe487a934df33","f04dea8ce9675dc75eb2483feb840a86f765fb82"],"410e066f093e407222d9681429d209084e783149":[],"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["edcefacba254a0e3d6235c4b9c0a44dceaa626c5","817882884229bace7dc5d1b75f6b0e4aa1e47122"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["410e066f093e407222d9681429d209084e783149"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3be20ca1091c0b7cdb2308b9023606a5e451cec","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"f04dea8ce9675dc75eb2483feb840a86f765fb82":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}