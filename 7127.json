{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","sourceNew":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return reqHandlers.get(handlerName);\n  }\n\n","sourceOld":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return reqHandlers.get(handlerName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","sourceNew":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return reqHandlers.get(handlerName);\n  }\n\n","sourceOld":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return reqHandlers.get(handlerName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","sourceNew":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return reqHandlers.get(handlerName);\n  }\n\n","sourceOld":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return reqHandlers.get(handlerName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7947ef57ebadfb891b1c694f0772d616987e57c8","date":1412445663,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","sourceNew":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return RequestHandlerBase.getRequestHandler(RequestHandlers.normalize(handlerName), reqHandlers.getRequestHandlers());\n  }\n\n","sourceOld":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return reqHandlers.get(handlerName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ba0abe4039f82ecf2e5f879913f512e941dde81","date":1412520276,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","sourceNew":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return RequestHandlerBase.getRequestHandler(RequestHandlers.normalize(handlerName), reqHandlers.getRequestHandlers());\n  }\n\n","sourceOld":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return reqHandlers.get(handlerName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","sourceNew":"  /**\n   * Get the request handler registered to a given name.\n   *\n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return RequestHandlerBase.getRequestHandler(RequestHandlers.normalize(handlerName), reqHandlers.handlers);\n  }\n\n","sourceOld":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return RequestHandlerBase.getRequestHandler(RequestHandlers.normalize(handlerName), reqHandlers.getRequestHandlers());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","sourceNew":"  /**\n   * Get the request handler registered to a given name.\n   *\n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return RequestHandlerBase.getRequestHandler(RequestHandlers.normalize(handlerName), reqHandlers.handlers);\n  }\n\n","sourceOld":"  /**\n   * Get the request handler registered to a given name.  \n   * \n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return RequestHandlerBase.getRequestHandler(RequestHandlers.normalize(handlerName), reqHandlers.getRequestHandlers());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getRequestHandler(String).mjava","sourceNew":"  /**\n   * Get the request handler registered to a given name.\n   * <p>\n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return RequestHandlerBase.getRequestHandler(RequestHandlers.normalize(handlerName), reqHandlers.handlers);\n  }\n\n","sourceOld":"  /**\n   * Get the request handler registered to a given name.\n   *\n   * This function is thread safe.\n   */\n  public SolrRequestHandler getRequestHandler(String handlerName) {\n    return RequestHandlerBase.getRequestHandler(RequestHandlers.normalize(handlerName), reqHandlers.handlers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["7947ef57ebadfb891b1c694f0772d616987e57c8","9aea0485ecacb6734c17da2d02569816c23a69c1"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["9aea0485ecacb6734c17da2d02569816c23a69c1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["7947ef57ebadfb891b1c694f0772d616987e57c8"],"5ba0abe4039f82ecf2e5f879913f512e941dde81":["c26f00b574427b55127e869b935845554afde1fa","7947ef57ebadfb891b1c694f0772d616987e57c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2668c99990e4c94a78bac005aa682b7c5986d23a"],"7947ef57ebadfb891b1c694f0772d616987e57c8":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2668c99990e4c94a78bac005aa682b7c5986d23a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["5ba0abe4039f82ecf2e5f879913f512e941dde81","7947ef57ebadfb891b1c694f0772d616987e57c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2668c99990e4c94a78bac005aa682b7c5986d23a"],"5ba0abe4039f82ecf2e5f879913f512e941dde81":[],"7947ef57ebadfb891b1c694f0772d616987e57c8":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1","5ba0abe4039f82ecf2e5f879913f512e941dde81"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","5ba0abe4039f82ecf2e5f879913f512e941dde81","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}