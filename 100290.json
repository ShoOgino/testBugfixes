{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#testRestManagerEndpoints().mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#testRestManagerEndpoints().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRestManagerEndpoints() throws Exception {\n    // relies on these ManagedResources being activated in the\n    // schema-rest.xml used by this test\n    assertJQ(\"/schema/managed\", \"/responseHeader/status==0\");\n\n    final String valueFeatureClassName = ValueFeature.class.getCanonicalName();\n\n    // Add features\n    String feature = \"{\\\"name\\\": \\\"test1\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test2\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test3\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test33\\\", \\\"store\\\": \\\"TEST\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    final String multipleFeatures = \"[{\\\"name\\\": \\\"test4\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\"\n        + \",{\\\"name\\\": \\\"test5\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} } ]\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, multipleFeatures,\n        \"/responseHeader/status==0\");\n\n    final String fieldValueFeatureClassName = FieldValueFeature.class.getCanonicalName();\n\n    // Add bad feature (wrong params)_\n    final String badfeature = \"{\\\"name\\\": \\\"fvalue\\\", \\\"class\\\": \\\"\"+fieldValueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, badfeature,\n        \"/error/msg/=='No setter corrresponding to \\\\'value\\\\' in \"+fieldValueFeatureClassName+\"'\");\n\n    final String linearModelClassName = LinearModel.class.getCanonicalName();\n\n    // Add models\n    String model = \"{ \\\"name\\\":\\\"testmodel1\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[] }\";\n    // fails since it does not have features\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // fails since it does not have weights\n    model = \"{ \\\"name\\\":\\\"testmodel2\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}] }\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // success\n    model = \"{ \\\"name\\\":\\\"testmodel3\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}}}\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==0\");\n    // success\n    final String multipleModels = \"[{ \\\"name\\\":\\\"testmodel4\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} }\\n\"\n        + \",{ \\\"name\\\":\\\"testmodel5\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} } ]\";\n    assertJPut(ManagedModelStore.REST_END_POINT, multipleModels,\n        \"/responseHeader/status==0\");\n    final String qryResult = JQ(ManagedModelStore.REST_END_POINT);\n\n    assert (qryResult.contains(\"\\\"name\\\":\\\"testmodel3\\\"\")\n        && qryResult.contains(\"\\\"name\\\":\\\"testmodel4\\\"\") && qryResult\n          .contains(\"\\\"name\\\":\\\"testmodel5\\\"\"));\n    /*\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[0]/name=='testmodel3'\");\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[1]/name=='testmodel4'\");\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[2]/name=='testmodel5'\");\n     */\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==['TEST','_DEFAULT_']\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/_DEFAULT_\",\n        \"/features/[0]/name=='test1'\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/TEST\",\n        \"/features/[0]/name=='test33'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bf344c7efad3160a74c52ef1fd53f535978fc5b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#testRestManagerEndpoints().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRestManagerEndpoints() throws Exception {\n    // relies on these ManagedResources being activated in the\n    // schema-rest.xml used by this test\n    assertJQ(\"/schema/managed\", \"/responseHeader/status==0\");\n\n    final String valueFeatureClassName = ValueFeature.class.getCanonicalName();\n\n    // Add features\n    String feature = \"{\\\"name\\\": \\\"test1\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test2\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test3\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test33\\\", \\\"store\\\": \\\"TEST\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    final String multipleFeatures = \"[{\\\"name\\\": \\\"test4\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\"\n        + \",{\\\"name\\\": \\\"test5\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} } ]\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, multipleFeatures,\n        \"/responseHeader/status==0\");\n\n    final String fieldValueFeatureClassName = FieldValueFeature.class.getCanonicalName();\n\n    // Add bad feature (wrong params)_\n    final String badfeature = \"{\\\"name\\\": \\\"fvalue\\\", \\\"class\\\": \\\"\"+fieldValueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, badfeature,\n        \"/error/msg/=='No setter corrresponding to \\\\'value\\\\' in \"+fieldValueFeatureClassName+\"'\");\n\n    final String linearModelClassName = LinearModel.class.getCanonicalName();\n\n    // Add models\n    String model = \"{ \\\"name\\\":\\\"testmodel1\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[] }\";\n    // fails since it does not have features\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // fails since it does not have weights\n    model = \"{ \\\"name\\\":\\\"testmodel2\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}] }\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // success\n    model = \"{ \\\"name\\\":\\\"testmodel3\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}}}\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==0\");\n    // success\n    final String multipleModels = \"[{ \\\"name\\\":\\\"testmodel4\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} }\\n\"\n        + \",{ \\\"name\\\":\\\"testmodel5\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} } ]\";\n    assertJPut(ManagedModelStore.REST_END_POINT, multipleModels,\n        \"/responseHeader/status==0\");\n    final String qryResult = JQ(ManagedModelStore.REST_END_POINT);\n\n    assert (qryResult.contains(\"\\\"name\\\":\\\"testmodel3\\\"\")\n        && qryResult.contains(\"\\\"name\\\":\\\"testmodel4\\\"\") && qryResult\n          .contains(\"\\\"name\\\":\\\"testmodel5\\\"\"));\n    /*\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[0]/name=='testmodel3'\");\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[1]/name=='testmodel4'\");\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[2]/name=='testmodel5'\");\n     */\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==['TEST','_DEFAULT_']\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/_DEFAULT_\",\n        \"/features/[0]/name=='test1'\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/TEST\",\n        \"/features/[0]/name=='test33'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24c1c003d41edcd662a111a7fa869fe9c97ea18c","date":1483549958,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#testRestManagerEndpoints().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#testRestManagerEndpoints().mjava","sourceNew":"  @Test\n  public void testRestManagerEndpoints() throws Exception {\n    final String TEST_FEATURE_STORE_NAME = \"TEST\";\n    // relies on these ManagedResources being activated in the\n    // schema-rest.xml used by this test\n    assertJQ(\"/schema/managed\", \"/responseHeader/status==0\");\n\n    final String valueFeatureClassName = ValueFeature.class.getCanonicalName();\n\n    // Add features\n    String feature = \"{\\\"name\\\": \\\"test1\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test2\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test3\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test33\\\", \\\"store\\\": \\\"\"+TEST_FEATURE_STORE_NAME+\"\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    final String multipleFeatures = \"[{\\\"name\\\": \\\"test4\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\"\n        + \",{\\\"name\\\": \\\"test5\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} } ]\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, multipleFeatures,\n        \"/responseHeader/status==0\");\n\n    final String fieldValueFeatureClassName = FieldValueFeature.class.getCanonicalName();\n\n    // Add bad feature (wrong params)_\n    final String badfeature = \"{\\\"name\\\": \\\"fvalue\\\", \\\"class\\\": \\\"\"+fieldValueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, badfeature,\n        \"/error/msg/=='No setter corrresponding to \\\\'value\\\\' in \"+fieldValueFeatureClassName+\"'\");\n\n    final String linearModelClassName = LinearModel.class.getCanonicalName();\n\n    // Add models\n    String model = \"{ \\\"name\\\":\\\"testmodel1\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[] }\";\n    // fails since it does not have features\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // fails since it does not have weights\n    model = \"{ \\\"name\\\":\\\"testmodel2\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}] }\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // success\n    model = \"{ \\\"name\\\":\\\"testmodel3\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}}}\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==0\");\n    // success\n    final String multipleModels = \"[{ \\\"name\\\":\\\"testmodel4\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} }\\n\"\n        + \",{ \\\"name\\\":\\\"testmodel5\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} } ]\";\n    assertJPut(ManagedModelStore.REST_END_POINT, multipleModels,\n        \"/responseHeader/status==0\");\n    final String qryResult = JQ(ManagedModelStore.REST_END_POINT);\n\n    assert (qryResult.contains(\"\\\"name\\\":\\\"testmodel3\\\"\")\n        && qryResult.contains(\"\\\"name\\\":\\\"testmodel4\\\"\") && qryResult\n          .contains(\"\\\"name\\\":\\\"testmodel5\\\"\"));\n\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[0]/name=='testmodel3'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[1]/name=='testmodel4'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[2]/name=='testmodel5'\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel3\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel4\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel5\");\n    assertJQ(ManagedModelStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/models==[]'\");\n\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==['\"+TEST_FEATURE_STORE_NAME+\"','\"+FeatureStore.DEFAULT_FEATURE_STORE_NAME+\"']\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test1'\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test33'\");\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME);\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME);\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==[]\");\n  }\n\n","sourceOld":"  @Test\n  public void testRestManagerEndpoints() throws Exception {\n    // relies on these ManagedResources being activated in the\n    // schema-rest.xml used by this test\n    assertJQ(\"/schema/managed\", \"/responseHeader/status==0\");\n\n    final String valueFeatureClassName = ValueFeature.class.getCanonicalName();\n\n    // Add features\n    String feature = \"{\\\"name\\\": \\\"test1\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test2\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test3\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test33\\\", \\\"store\\\": \\\"TEST\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    final String multipleFeatures = \"[{\\\"name\\\": \\\"test4\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\"\n        + \",{\\\"name\\\": \\\"test5\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} } ]\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, multipleFeatures,\n        \"/responseHeader/status==0\");\n\n    final String fieldValueFeatureClassName = FieldValueFeature.class.getCanonicalName();\n\n    // Add bad feature (wrong params)_\n    final String badfeature = \"{\\\"name\\\": \\\"fvalue\\\", \\\"class\\\": \\\"\"+fieldValueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, badfeature,\n        \"/error/msg/=='No setter corrresponding to \\\\'value\\\\' in \"+fieldValueFeatureClassName+\"'\");\n\n    final String linearModelClassName = LinearModel.class.getCanonicalName();\n\n    // Add models\n    String model = \"{ \\\"name\\\":\\\"testmodel1\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[] }\";\n    // fails since it does not have features\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // fails since it does not have weights\n    model = \"{ \\\"name\\\":\\\"testmodel2\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}] }\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // success\n    model = \"{ \\\"name\\\":\\\"testmodel3\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}}}\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==0\");\n    // success\n    final String multipleModels = \"[{ \\\"name\\\":\\\"testmodel4\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} }\\n\"\n        + \",{ \\\"name\\\":\\\"testmodel5\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} } ]\";\n    assertJPut(ManagedModelStore.REST_END_POINT, multipleModels,\n        \"/responseHeader/status==0\");\n    final String qryResult = JQ(ManagedModelStore.REST_END_POINT);\n\n    assert (qryResult.contains(\"\\\"name\\\":\\\"testmodel3\\\"\")\n        && qryResult.contains(\"\\\"name\\\":\\\"testmodel4\\\"\") && qryResult\n          .contains(\"\\\"name\\\":\\\"testmodel5\\\"\"));\n    /*\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[0]/name=='testmodel3'\");\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[1]/name=='testmodel4'\");\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[2]/name=='testmodel5'\");\n     */\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==['TEST','_DEFAULT_']\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/_DEFAULT_\",\n        \"/features/[0]/name=='test1'\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/TEST\",\n        \"/features/[0]/name=='test33'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#testRestManagerEndpoints().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#testRestManagerEndpoints().mjava","sourceNew":"  @Test\n  public void testRestManagerEndpoints() throws Exception {\n    final String TEST_FEATURE_STORE_NAME = \"TEST\";\n    // relies on these ManagedResources being activated in the\n    // schema-rest.xml used by this test\n    assertJQ(\"/schema/managed\", \"/responseHeader/status==0\");\n\n    final String valueFeatureClassName = ValueFeature.class.getCanonicalName();\n\n    // Add features\n    String feature = \"{\\\"name\\\": \\\"test1\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test2\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test3\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test33\\\", \\\"store\\\": \\\"\"+TEST_FEATURE_STORE_NAME+\"\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    final String multipleFeatures = \"[{\\\"name\\\": \\\"test4\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\"\n        + \",{\\\"name\\\": \\\"test5\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} } ]\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, multipleFeatures,\n        \"/responseHeader/status==0\");\n\n    final String fieldValueFeatureClassName = FieldValueFeature.class.getCanonicalName();\n\n    // Add bad feature (wrong params)_\n    final String badfeature = \"{\\\"name\\\": \\\"fvalue\\\", \\\"class\\\": \\\"\"+fieldValueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, badfeature,\n        \"/error/msg/=='No setter corrresponding to \\\\'value\\\\' in \"+fieldValueFeatureClassName+\"'\");\n\n    final String linearModelClassName = LinearModel.class.getCanonicalName();\n\n    // Add models\n    String model = \"{ \\\"name\\\":\\\"testmodel1\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[] }\";\n    // fails since it does not have features\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // fails since it does not have weights\n    model = \"{ \\\"name\\\":\\\"testmodel2\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}] }\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // success\n    model = \"{ \\\"name\\\":\\\"testmodel3\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}}}\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==0\");\n    // success\n    final String multipleModels = \"[{ \\\"name\\\":\\\"testmodel4\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} }\\n\"\n        + \",{ \\\"name\\\":\\\"testmodel5\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} } ]\";\n    assertJPut(ManagedModelStore.REST_END_POINT, multipleModels,\n        \"/responseHeader/status==0\");\n    final String qryResult = JQ(ManagedModelStore.REST_END_POINT);\n\n    assert (qryResult.contains(\"\\\"name\\\":\\\"testmodel3\\\"\")\n        && qryResult.contains(\"\\\"name\\\":\\\"testmodel4\\\"\") && qryResult\n          .contains(\"\\\"name\\\":\\\"testmodel5\\\"\"));\n\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[0]/name=='testmodel3'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[1]/name=='testmodel4'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[2]/name=='testmodel5'\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel3\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel4\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel5\");\n    assertJQ(ManagedModelStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/models==[]'\");\n\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==['\"+TEST_FEATURE_STORE_NAME+\"','\"+FeatureStore.DEFAULT_FEATURE_STORE_NAME+\"']\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test1'\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test33'\");\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME);\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME);\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==[]\");\n  }\n\n","sourceOld":"  @Test\n  public void testRestManagerEndpoints() throws Exception {\n    // relies on these ManagedResources being activated in the\n    // schema-rest.xml used by this test\n    assertJQ(\"/schema/managed\", \"/responseHeader/status==0\");\n\n    final String valueFeatureClassName = ValueFeature.class.getCanonicalName();\n\n    // Add features\n    String feature = \"{\\\"name\\\": \\\"test1\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test2\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test3\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test33\\\", \\\"store\\\": \\\"TEST\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    final String multipleFeatures = \"[{\\\"name\\\": \\\"test4\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\"\n        + \",{\\\"name\\\": \\\"test5\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} } ]\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, multipleFeatures,\n        \"/responseHeader/status==0\");\n\n    final String fieldValueFeatureClassName = FieldValueFeature.class.getCanonicalName();\n\n    // Add bad feature (wrong params)_\n    final String badfeature = \"{\\\"name\\\": \\\"fvalue\\\", \\\"class\\\": \\\"\"+fieldValueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, badfeature,\n        \"/error/msg/=='No setter corrresponding to \\\\'value\\\\' in \"+fieldValueFeatureClassName+\"'\");\n\n    final String linearModelClassName = LinearModel.class.getCanonicalName();\n\n    // Add models\n    String model = \"{ \\\"name\\\":\\\"testmodel1\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[] }\";\n    // fails since it does not have features\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // fails since it does not have weights\n    model = \"{ \\\"name\\\":\\\"testmodel2\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}] }\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // success\n    model = \"{ \\\"name\\\":\\\"testmodel3\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}}}\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==0\");\n    // success\n    final String multipleModels = \"[{ \\\"name\\\":\\\"testmodel4\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} }\\n\"\n        + \",{ \\\"name\\\":\\\"testmodel5\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} } ]\";\n    assertJPut(ManagedModelStore.REST_END_POINT, multipleModels,\n        \"/responseHeader/status==0\");\n    final String qryResult = JQ(ManagedModelStore.REST_END_POINT);\n\n    assert (qryResult.contains(\"\\\"name\\\":\\\"testmodel3\\\"\")\n        && qryResult.contains(\"\\\"name\\\":\\\"testmodel4\\\"\") && qryResult\n          .contains(\"\\\"name\\\":\\\"testmodel5\\\"\"));\n    /*\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[0]/name=='testmodel3'\");\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[1]/name=='testmodel4'\");\n     * assertJQ(LTRParams.MSTORE_END_POINT, \"/models/[2]/name=='testmodel5'\");\n     */\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==['TEST','_DEFAULT_']\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/_DEFAULT_\",\n        \"/features/[0]/name=='test1'\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/TEST\",\n        \"/features/[0]/name=='test33'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf344c7efad3160a74c52ef1fd53f535978fc5b7","date":1518199939,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#testRestManagerEndpoints().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#testRestManagerEndpoints().mjava","sourceNew":"  @Test\n  public void testRestManagerEndpoints() throws Exception {\n    final String TEST_FEATURE_STORE_NAME = \"TEST\";\n    // relies on these ManagedResources being activated in the\n    // schema-rest.xml used by this test\n    assertJQ(\"/schema/managed\", \"/responseHeader/status==0\");\n\n    final String valueFeatureClassName = ValueFeature.class.getName();\n\n    // Add features\n    String feature = \"{\\\"name\\\": \\\"test1\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test2\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test3\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test33\\\", \\\"store\\\": \\\"\"+TEST_FEATURE_STORE_NAME+\"\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    final String multipleFeatures = \"[{\\\"name\\\": \\\"test4\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\"\n        + \",{\\\"name\\\": \\\"test5\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} } ]\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, multipleFeatures,\n        \"/responseHeader/status==0\");\n\n    final String fieldValueFeatureClassName = FieldValueFeature.class.getName();\n\n    // Add bad feature (wrong params)_\n    final String badfeature = \"{\\\"name\\\": \\\"fvalue\\\", \\\"class\\\": \\\"\"+fieldValueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, badfeature,\n        \"/error/msg/=='No setter corrresponding to \\\\'value\\\\' in \"+fieldValueFeatureClassName+\"'\");\n\n    final String linearModelClassName = LinearModel.class.getName();\n\n    // Add models\n    String model = \"{ \\\"name\\\":\\\"testmodel1\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[] }\";\n    // fails since it does not have features\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // fails since it does not have weights\n    model = \"{ \\\"name\\\":\\\"testmodel2\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}] }\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // success\n    model = \"{ \\\"name\\\":\\\"testmodel3\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}}}\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==0\");\n    // success\n    final String multipleModels = \"[{ \\\"name\\\":\\\"testmodel4\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} }\\n\"\n        + \",{ \\\"name\\\":\\\"testmodel5\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} } ]\";\n    assertJPut(ManagedModelStore.REST_END_POINT, multipleModels,\n        \"/responseHeader/status==0\");\n    final String qryResult = JQ(ManagedModelStore.REST_END_POINT);\n\n    assert (qryResult.contains(\"\\\"name\\\":\\\"testmodel3\\\"\")\n        && qryResult.contains(\"\\\"name\\\":\\\"testmodel4\\\"\") && qryResult\n          .contains(\"\\\"name\\\":\\\"testmodel5\\\"\"));\n\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[0]/name=='testmodel3'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[1]/name=='testmodel4'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[2]/name=='testmodel5'\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel3\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel4\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel5\");\n    assertJQ(ManagedModelStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/models==[]'\");\n\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==['\"+TEST_FEATURE_STORE_NAME+\"','\"+FeatureStore.DEFAULT_FEATURE_STORE_NAME+\"']\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test1'\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test33'\");\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME);\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME);\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==[]\");\n  }\n\n","sourceOld":"  @Test\n  public void testRestManagerEndpoints() throws Exception {\n    final String TEST_FEATURE_STORE_NAME = \"TEST\";\n    // relies on these ManagedResources being activated in the\n    // schema-rest.xml used by this test\n    assertJQ(\"/schema/managed\", \"/responseHeader/status==0\");\n\n    final String valueFeatureClassName = ValueFeature.class.getCanonicalName();\n\n    // Add features\n    String feature = \"{\\\"name\\\": \\\"test1\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test2\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test3\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test33\\\", \\\"store\\\": \\\"\"+TEST_FEATURE_STORE_NAME+\"\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    final String multipleFeatures = \"[{\\\"name\\\": \\\"test4\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\"\n        + \",{\\\"name\\\": \\\"test5\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} } ]\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, multipleFeatures,\n        \"/responseHeader/status==0\");\n\n    final String fieldValueFeatureClassName = FieldValueFeature.class.getCanonicalName();\n\n    // Add bad feature (wrong params)_\n    final String badfeature = \"{\\\"name\\\": \\\"fvalue\\\", \\\"class\\\": \\\"\"+fieldValueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, badfeature,\n        \"/error/msg/=='No setter corrresponding to \\\\'value\\\\' in \"+fieldValueFeatureClassName+\"'\");\n\n    final String linearModelClassName = LinearModel.class.getCanonicalName();\n\n    // Add models\n    String model = \"{ \\\"name\\\":\\\"testmodel1\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[] }\";\n    // fails since it does not have features\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // fails since it does not have weights\n    model = \"{ \\\"name\\\":\\\"testmodel2\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}] }\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // success\n    model = \"{ \\\"name\\\":\\\"testmodel3\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}}}\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==0\");\n    // success\n    final String multipleModels = \"[{ \\\"name\\\":\\\"testmodel4\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} }\\n\"\n        + \",{ \\\"name\\\":\\\"testmodel5\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} } ]\";\n    assertJPut(ManagedModelStore.REST_END_POINT, multipleModels,\n        \"/responseHeader/status==0\");\n    final String qryResult = JQ(ManagedModelStore.REST_END_POINT);\n\n    assert (qryResult.contains(\"\\\"name\\\":\\\"testmodel3\\\"\")\n        && qryResult.contains(\"\\\"name\\\":\\\"testmodel4\\\"\") && qryResult\n          .contains(\"\\\"name\\\":\\\"testmodel5\\\"\"));\n\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[0]/name=='testmodel3'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[1]/name=='testmodel4'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[2]/name=='testmodel5'\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel3\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel4\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel5\");\n    assertJQ(ManagedModelStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/models==[]'\");\n\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==['\"+TEST_FEATURE_STORE_NAME+\"','\"+FeatureStore.DEFAULT_FEATURE_STORE_NAME+\"']\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test1'\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test33'\");\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME);\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME);\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==[]\");\n  }\n\n","bugFix":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f906c3206e7eb174774f938416460e39170d819","date":1518202619,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#testRestManagerEndpoints().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManager#testRestManagerEndpoints().mjava","sourceNew":"  @Test\n  public void testRestManagerEndpoints() throws Exception {\n    final String TEST_FEATURE_STORE_NAME = \"TEST\";\n    // relies on these ManagedResources being activated in the\n    // schema-rest.xml used by this test\n    assertJQ(\"/schema/managed\", \"/responseHeader/status==0\");\n\n    final String valueFeatureClassName = ValueFeature.class.getName();\n\n    // Add features\n    String feature = \"{\\\"name\\\": \\\"test1\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test2\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test3\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test33\\\", \\\"store\\\": \\\"\"+TEST_FEATURE_STORE_NAME+\"\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    final String multipleFeatures = \"[{\\\"name\\\": \\\"test4\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\"\n        + \",{\\\"name\\\": \\\"test5\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} } ]\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, multipleFeatures,\n        \"/responseHeader/status==0\");\n\n    final String fieldValueFeatureClassName = FieldValueFeature.class.getName();\n\n    // Add bad feature (wrong params)_\n    final String badfeature = \"{\\\"name\\\": \\\"fvalue\\\", \\\"class\\\": \\\"\"+fieldValueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, badfeature,\n        \"/error/msg/=='No setter corrresponding to \\\\'value\\\\' in \"+fieldValueFeatureClassName+\"'\");\n\n    final String linearModelClassName = LinearModel.class.getName();\n\n    // Add models\n    String model = \"{ \\\"name\\\":\\\"testmodel1\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[] }\";\n    // fails since it does not have features\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // fails since it does not have weights\n    model = \"{ \\\"name\\\":\\\"testmodel2\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}] }\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // success\n    model = \"{ \\\"name\\\":\\\"testmodel3\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}}}\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==0\");\n    // success\n    final String multipleModels = \"[{ \\\"name\\\":\\\"testmodel4\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} }\\n\"\n        + \",{ \\\"name\\\":\\\"testmodel5\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} } ]\";\n    assertJPut(ManagedModelStore.REST_END_POINT, multipleModels,\n        \"/responseHeader/status==0\");\n    final String qryResult = JQ(ManagedModelStore.REST_END_POINT);\n\n    assert (qryResult.contains(\"\\\"name\\\":\\\"testmodel3\\\"\")\n        && qryResult.contains(\"\\\"name\\\":\\\"testmodel4\\\"\") && qryResult\n          .contains(\"\\\"name\\\":\\\"testmodel5\\\"\"));\n\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[0]/name=='testmodel3'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[1]/name=='testmodel4'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[2]/name=='testmodel5'\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel3\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel4\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel5\");\n    assertJQ(ManagedModelStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/models==[]'\");\n\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==['\"+TEST_FEATURE_STORE_NAME+\"','\"+FeatureStore.DEFAULT_FEATURE_STORE_NAME+\"']\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test1'\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test33'\");\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME);\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME);\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==[]\");\n  }\n\n","sourceOld":"  @Test\n  public void testRestManagerEndpoints() throws Exception {\n    final String TEST_FEATURE_STORE_NAME = \"TEST\";\n    // relies on these ManagedResources being activated in the\n    // schema-rest.xml used by this test\n    assertJQ(\"/schema/managed\", \"/responseHeader/status==0\");\n\n    final String valueFeatureClassName = ValueFeature.class.getCanonicalName();\n\n    // Add features\n    String feature = \"{\\\"name\\\": \\\"test1\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test2\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test3\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    feature = \"{\\\"name\\\": \\\"test33\\\", \\\"store\\\": \\\"\"+TEST_FEATURE_STORE_NAME+\"\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,\n        \"/responseHeader/status==0\");\n\n    final String multipleFeatures = \"[{\\\"name\\\": \\\"test4\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\"\n        + \",{\\\"name\\\": \\\"test5\\\", \\\"class\\\": \\\"\"+valueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} } ]\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, multipleFeatures,\n        \"/responseHeader/status==0\");\n\n    final String fieldValueFeatureClassName = FieldValueFeature.class.getCanonicalName();\n\n    // Add bad feature (wrong params)_\n    final String badfeature = \"{\\\"name\\\": \\\"fvalue\\\", \\\"class\\\": \\\"\"+fieldValueFeatureClassName+\"\\\", \\\"params\\\": {\\\"value\\\": 1} }\";\n    assertJPut(ManagedFeatureStore.REST_END_POINT, badfeature,\n        \"/error/msg/=='No setter corrresponding to \\\\'value\\\\' in \"+fieldValueFeatureClassName+\"'\");\n\n    final String linearModelClassName = LinearModel.class.getCanonicalName();\n\n    // Add models\n    String model = \"{ \\\"name\\\":\\\"testmodel1\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[] }\";\n    // fails since it does not have features\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // fails since it does not have weights\n    model = \"{ \\\"name\\\":\\\"testmodel2\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}] }\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==400\");\n    // success\n    model = \"{ \\\"name\\\":\\\"testmodel3\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}}}\";\n    assertJPut(ManagedModelStore.REST_END_POINT, model,\n        \"/responseHeader/status==0\");\n    // success\n    final String multipleModels = \"[{ \\\"name\\\":\\\"testmodel4\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} }\\n\"\n        + \",{ \\\"name\\\":\\\"testmodel5\\\", \\\"class\\\":\\\"\"+linearModelClassName+\"\\\", \\\"features\\\":[{\\\"name\\\":\\\"test1\\\"}, {\\\"name\\\":\\\"test2\\\"}],\\\"params\\\":{\\\"weights\\\":{\\\"test1\\\":1.5,\\\"test2\\\":2.0}} } ]\";\n    assertJPut(ManagedModelStore.REST_END_POINT, multipleModels,\n        \"/responseHeader/status==0\");\n    final String qryResult = JQ(ManagedModelStore.REST_END_POINT);\n\n    assert (qryResult.contains(\"\\\"name\\\":\\\"testmodel3\\\"\")\n        && qryResult.contains(\"\\\"name\\\":\\\"testmodel4\\\"\") && qryResult\n          .contains(\"\\\"name\\\":\\\"testmodel5\\\"\"));\n\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[0]/name=='testmodel3'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[1]/name=='testmodel4'\");\n    assertJQ(ManagedModelStore.REST_END_POINT, \"/models/[2]/name=='testmodel5'\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel3\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel4\");\n    restTestHarness.delete(ManagedModelStore.REST_END_POINT + \"/testmodel5\");\n    assertJQ(ManagedModelStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/models==[]'\");\n\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==['\"+TEST_FEATURE_STORE_NAME+\"','\"+FeatureStore.DEFAULT_FEATURE_STORE_NAME+\"']\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test1'\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME,\n        \"/features/[0]/name=='test33'\");\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\" + FeatureStore.DEFAULT_FEATURE_STORE_NAME);\n    restTestHarness.delete(ManagedFeatureStore.REST_END_POINT + \"/\"+TEST_FEATURE_STORE_NAME);\n    assertJQ(ManagedFeatureStore.REST_END_POINT,\n        \"/featureStores==[]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bf344c7efad3160a74c52ef1fd53f535978fc5b7":["24c1c003d41edcd662a111a7fa869fe9c97ea18c"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"24c1c003d41edcd662a111a7fa869fe9c97ea18c":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f906c3206e7eb174774f938416460e39170d819"],"3f906c3206e7eb174774f938416460e39170d819":["24c1c003d41edcd662a111a7fa869fe9c97ea18c","bf344c7efad3160a74c52ef1fd53f535978fc5b7"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["9720b151fde2073f4e401450f4574e5f31c2d0ff","24c1c003d41edcd662a111a7fa869fe9c97ea18c"]},"commit2Childs":{"bf344c7efad3160a74c52ef1fd53f535978fc5b7":["3f906c3206e7eb174774f938416460e39170d819"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["9720b151fde2073f4e401450f4574e5f31c2d0ff","24c1c003d41edcd662a111a7fa869fe9c97ea18c"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["491c9672ec42582fe43960452dbd37f1c80fe0f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"24c1c003d41edcd662a111a7fa869fe9c97ea18c":["bf344c7efad3160a74c52ef1fd53f535978fc5b7","3f906c3206e7eb174774f938416460e39170d819","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3f906c3206e7eb174774f938416460e39170d819":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}