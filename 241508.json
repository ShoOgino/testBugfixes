{"path":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      String dirName = \"src/test/org/apache/lucene/index/index.\" + oldNames[i];\n      unzip(dirName, oldNames[i]);\n      changeIndexWithAdds(oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      String dirName = \"src/test/org/apache/lucene/index/index.\" + oldNames[i];\n      unzip(dirName, oldNames[i]);\n      changeIndexWithAdds(oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5040424df1d01c5daf6a4e0afbebb2da1f1c168","date":1269714861,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      String dirName = \"src/test/org/apache/lucene/index/index.\" + oldNames[i];\n      unzip(dirName, oldNames[i]);\n      changeIndexWithAdds(oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    Random random = newRandom();\n    for(int i=0;i<oldNames.length;i++) {\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(random, oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(random, oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    Random random = newRandom();\n    for(int i=0;i<oldNames.length;i++) {\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(random, oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5","date":1292711882,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + oldNames[i]);\n      }\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(random, oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(random, oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + oldNames[i]);\n      }\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(random, oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(random, oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + oldNames[i]);\n      }\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(random, oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdad2c6b6234338031bcc1f24c001a5ad66f714","date":1296866109,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + oldNames[i]);\n      }\n      File oldIndxeDir = _TestUtil.getTempDir(oldNames[i]);\n      _TestUtil.unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldIndxeDir);\n      changeIndexWithAdds(random, oldIndxeDir, oldNames[i]);\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + oldNames[i]);\n      }\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(random, oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + oldNames[i]);\n      }\n      File oldIndxeDir = _TestUtil.getTempDir(oldNames[i]);\n      _TestUtil.unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldIndxeDir);\n      changeIndexWithAdds(random, oldIndxeDir, oldNames[i]);\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + oldNames[i]);\n      }\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(random, oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + oldNames[i]);\n      }\n      File oldIndxeDir = _TestUtil.getTempDir(oldNames[i]);\n      _TestUtil.unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldIndxeDir);\n      changeIndexWithAdds(random, oldIndxeDir, oldNames[i]);\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + oldNames[i]);\n      }\n      unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldNames[i]);\n      changeIndexWithAdds(random, oldNames[i]);\n      rmDir(oldNames[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be580b58bcc650d428f3f22de81cadcf51d650a","date":1325279655,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random, dir, name);\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for(int i=0;i<oldNames.length;i++) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + oldNames[i]);\n      }\n      File oldIndxeDir = _TestUtil.getTempDir(oldNames[i]);\n      _TestUtil.unzip(getDataFile(\"index.\" + oldNames[i] + \".zip\"), oldIndxeDir);\n      changeIndexWithAdds(random, oldIndxeDir, oldNames[i]);\n      _TestUtil.rmDir(oldIndxeDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random, dir, name);\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random, dir, name);\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"3cdad2c6b6234338031bcc1f24c001a5ad66f714":["94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["1f653cfcf159baeaafe5d01682a911e95bba4012","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e5040424df1d01c5daf6a4e0afbebb2da1f1c168","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"e5040424df1d01c5daf6a4e0afbebb2da1f1c168":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["e5040424df1d01c5daf6a4e0afbebb2da1f1c168"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdad2c6b6234338031bcc1f24c001a5ad66f714":["8be580b58bcc650d428f3f22de81cadcf51d650a","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"e5040424df1d01c5daf6a4e0afbebb2da1f1c168":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5":["3cdad2c6b6234338031bcc1f24c001a5ad66f714","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e5040424df1d01c5daf6a4e0afbebb2da1f1c168"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}