{"path":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","sourceNew":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","sourceNew":"  private void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(newField(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(newField(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","sourceNew":null,"sourceOld":"  private void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(newField(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(newField(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","sourceNew":null,"sourceOld":"  private void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(newField(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(newField(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","sourceNew":null,"sourceOld":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"132903c28af3aa6f67284b78de91c0f0a99488c2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["132903c28af3aa6f67284b78de91c0f0a99488c2","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["132903c28af3aa6f67284b78de91c0f0a99488c2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}