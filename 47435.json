{"path":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanScorer#getPayloadExplanation().mjava","commits":[{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanScorer#getPayloadExplanation().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadScoreQuery.PayloadSpanScorer#getPayloadExplanation().mjava","sourceNew":"    protected Explanation getPayloadExplanation() {\n      return function.explain(docID(), getField(), payloadsSeen, payloadScore);\n    }\n\n","sourceOld":"    protected Explanation getPayloadExplanation() {\n      return function.explain(docID(), getField(), payloadsSeen, payloadScore);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"557b118fdfb9d28b6cfe38fac273af58c4d51135","date":1445505363,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpans#getPayloadExplanation().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanScorer#getPayloadExplanation().mjava","sourceNew":"    protected Explanation getPayloadExplanation() {\n      return function.explain(docID(), getField(), payloadsSeen, payloadScore);\n    }\n\n","sourceOld":"    protected Explanation getPayloadExplanation() {\n      return function.explain(docID(), getField(), payloadsSeen, payloadScore);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanScorer#getPayloadExplanation().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpans#getPayloadExplanation().mjava","sourceNew":"    protected Explanation getPayloadExplanation() {\n      return function.explain(docID(), getField(), spans.payloadsSeen, spans.payloadScore);\n    }\n\n","sourceOld":"    protected Explanation getPayloadExplanation() {\n      return function.explain(docID(), getField(), payloadsSeen, payloadScore);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1565a895965c425e1b03b6a32aee8f6771555857","date":1512584113,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanScorer#getPayloadExplanation().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanScorer#getPayloadExplanation().mjava","sourceNew":"    protected Explanation getPayloadExplanation() {\n      Explanation expl = function.explain(docID(), getField(), spans.payloadsSeen, spans.payloadScore);\n      if (expl.getValue() < 0) {\n        expl = Explanation.match(0, \"truncated score, max of:\", Explanation.match(0f, \"minimum score\"), expl);\n      } else if (Float.isNaN(expl.getValue())) {\n        expl = Explanation.match(0, \"payload score, computed as (score == NaN ? 0 : score) since NaN is an illegal score from:\", expl);\n      }\n      return expl;\n    }\n\n","sourceOld":"    protected Explanation getPayloadExplanation() {\n      return function.explain(docID(), getField(), spans.payloadsSeen, spans.payloadScore);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf","date":1514891219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanScorer#getPayloadExplanation().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanScorer#getPayloadExplanation().mjava","sourceNew":"    protected Explanation getPayloadExplanation() {\n      Explanation expl = function.explain(docID(), getField(), spans.payloadsSeen, spans.payloadScore);\n      if (expl.getValue().floatValue() < 0) {\n        expl = Explanation.match(0, \"truncated score, max of:\", Explanation.match(0f, \"minimum score\"), expl);\n      } else if (Float.isNaN(expl.getValue().floatValue())) {\n        expl = Explanation.match(0, \"payload score, computed as (score == NaN ? 0 : score) since NaN is an illegal score from:\", expl);\n      }\n      return expl;\n    }\n\n","sourceOld":"    protected Explanation getPayloadExplanation() {\n      Explanation expl = function.explain(docID(), getField(), spans.payloadsSeen, spans.payloadScore);\n      if (expl.getValue() < 0) {\n        expl = Explanation.match(0, \"truncated score, max of:\", Explanation.match(0f, \"minimum score\"), expl);\n      } else if (Float.isNaN(expl.getValue())) {\n        expl = Explanation.match(0, \"payload score, computed as (score == NaN ? 0 : score) since NaN is an illegal score from:\", expl);\n      }\n      return expl;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1565a895965c425e1b03b6a32aee8f6771555857":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["1565a895965c425e1b03b6a32aee8f6771555857"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["557b118fdfb9d28b6cfe38fac273af58c4d51135"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"]},"commit2Childs":{"1565a895965c425e1b03b6a32aee8f6771555857":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"],"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["557b118fdfb9d28b6cfe38fac273af58c4d51135"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["1565a895965c425e1b03b6a32aee8f6771555857"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}