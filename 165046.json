{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.number);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.number);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<>(data, PositiveIntOutputs.getSingleton());\n        ramBytesUsed.addAndGet(instance.ramBytesUsed());\n        fstInstances.put(field.number, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<>();\n    final Arc<Long> scratchArc = new Arc<>();\n    final IntsRefBuilder scratchInts = new IntsRefBuilder();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<>(fst);\n    \n    return new SortedDocValues() {\n\n      final BytesRefBuilder term = new BytesRefBuilder();\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          IntsRef output = Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts);\n          term.grow(output.length);\n          term.clear();\n          return Util.toBytesRef(output, term);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return (int)entry.numOrds;\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        return new FSTTermsEnum(fst);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.number);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.number);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<>(data, PositiveIntOutputs.getSingleton());\n        ramBytesUsed.addAndGet(instance.ramBytesUsed());\n        fstInstances.put(field.number, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<>();\n    final Arc<Long> scratchArc = new Arc<>();\n    final IntsRefBuilder scratchInts = new IntsRefBuilder();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<>(fst);\n    \n    return new SortedDocValues() {\n\n      final BytesRefBuilder term = new BytesRefBuilder();\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          IntsRef output = Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts);\n          term.grow(output.length);\n          term.clear();\n          return Util.toBytesRef(output, term);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return (int)entry.numOrds;\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        return new FSTTermsEnum(fst);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.number);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.number);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<>(data, PositiveIntOutputs.getSingleton());\n        ramBytesUsed.addAndGet(instance.ramBytesUsed());\n        fstInstances.put(field.number, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<>();\n    final Arc<Long> scratchArc = new Arc<>();\n    final IntsRefBuilder scratchInts = new IntsRefBuilder();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<>(fst);\n    \n    return new SortedDocValues() {\n\n      final BytesRefBuilder term = new BytesRefBuilder();\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          IntsRef output = Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts);\n          term.grow(output.length);\n          term.clear();\n          return Util.toBytesRef(output, term);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return (int)entry.numOrds;\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        return new FSTTermsEnum(fst);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.number);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.number);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<>(data, PositiveIntOutputs.getSingleton());\n        ramBytesUsed.addAndGet(instance.ramBytesUsed());\n        fstInstances.put(field.number, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<>();\n    final Arc<Long> scratchArc = new Arc<>();\n    final IntsRefBuilder scratchInts = new IntsRefBuilder();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<>(fst);\n    \n    return new SortedDocValues() {\n\n      final BytesRefBuilder term = new BytesRefBuilder();\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          IntsRef output = Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts);\n          term.grow(output.length);\n          term.clear();\n          return Util.toBytesRef(output, term);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return (int)entry.numOrds;\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        return new FSTTermsEnum(fst);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0936055c0eed56be3e4ae5c9db5b0e355390736a","date":1410874015,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.name);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.name);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<>(data, PositiveIntOutputs.getSingleton());\n        ramBytesUsed.addAndGet(instance.ramBytesUsed());\n        fstInstances.put(field.name, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<>();\n    final Arc<Long> scratchArc = new Arc<>();\n    final IntsRefBuilder scratchInts = new IntsRefBuilder();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<>(fst);\n    \n    return new SortedDocValues() {\n\n      final BytesRefBuilder term = new BytesRefBuilder();\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          IntsRef output = Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts);\n          term.grow(output.length);\n          term.clear();\n          return Util.toBytesRef(output, term);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return (int)entry.numOrds;\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        return new FSTTermsEnum(fst);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.number);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.number);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<>(data, PositiveIntOutputs.getSingleton());\n        ramBytesUsed.addAndGet(instance.ramBytesUsed());\n        fstInstances.put(field.number, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<>();\n    final Arc<Long> scratchArc = new Arc<>();\n    final IntsRefBuilder scratchInts = new IntsRefBuilder();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<>(fst);\n    \n    return new SortedDocValues() {\n\n      final BytesRefBuilder term = new BytesRefBuilder();\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          IntsRef output = Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts);\n          term.grow(output.length);\n          term.clear();\n          return Util.toBytesRef(output, term);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return (int)entry.numOrds;\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        return new FSTTermsEnum(fst);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc8f80fee115148a0e4a0574560be06b494de821","date":1412069872,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.name);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.name);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<>(data, PositiveIntOutputs.getSingleton());\n        if (!merging) {\n          ramBytesUsed.addAndGet(instance.ramBytesUsed());\n          fstInstances.put(field.name, instance);\n        }\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<>();\n    final Arc<Long> scratchArc = new Arc<>();\n    final IntsRefBuilder scratchInts = new IntsRefBuilder();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<>(fst);\n    \n    return new SortedDocValues() {\n\n      final BytesRefBuilder term = new BytesRefBuilder();\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          IntsRef output = Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts);\n          term.grow(output.length);\n          term.clear();\n          return Util.toBytesRef(output, term);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return (int)entry.numOrds;\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        return new FSTTermsEnum(fst);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.name);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.name);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<>(data, PositiveIntOutputs.getSingleton());\n        ramBytesUsed.addAndGet(instance.ramBytesUsed());\n        fstInstances.put(field.name, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<>();\n    final Arc<Long> scratchArc = new Arc<>();\n    final IntsRefBuilder scratchInts = new IntsRefBuilder();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<>(fst);\n    \n    return new SortedDocValues() {\n\n      final BytesRefBuilder term = new BytesRefBuilder();\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          IntsRef output = Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts);\n          term.grow(output.length);\n          term.clear();\n          return Util.toBytesRef(output, term);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return (int)entry.numOrds;\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        return new FSTTermsEnum(fst);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.name);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.name);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<>(data, PositiveIntOutputs.getSingleton());\n        if (!merging) {\n          ramBytesUsed.addAndGet(instance.ramBytesUsed());\n          fstInstances.put(field.name, instance);\n        }\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<>();\n    final Arc<Long> scratchArc = new Arc<>();\n    final IntsRefBuilder scratchInts = new IntsRefBuilder();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<>(fst);\n    \n    return new SortedDocValues() {\n\n      final BytesRefBuilder term = new BytesRefBuilder();\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          IntsRef output = Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts);\n          term.grow(output.length);\n          term.clear();\n          return Util.toBytesRef(output, term);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return (int)entry.numOrds;\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        return new FSTTermsEnum(fst);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.name);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.name);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<>(data, PositiveIntOutputs.getSingleton());\n        ramBytesUsed.addAndGet(instance.ramBytesUsed());\n        fstInstances.put(field.name, instance);\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<>();\n    final Arc<Long> scratchArc = new Arc<>();\n    final IntsRefBuilder scratchInts = new IntsRefBuilder();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<>(fst);\n    \n    return new SortedDocValues() {\n\n      final BytesRefBuilder term = new BytesRefBuilder();\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          IntsRef output = Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts);\n          term.grow(output.length);\n          term.clear();\n          return Util.toBytesRef(output, term);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return (int)entry.numOrds;\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        return new FSTTermsEnum(fst);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final FSTEntry entry = fsts.get(field.name);\n    FST<Long> instance;\n    synchronized(this) {\n      instance = fstInstances.get(field.name);\n      if (instance == null) {\n        data.seek(entry.offset);\n        instance = new FST<>(data, PositiveIntOutputs.getSingleton());\n        if (!merging) {\n          ramBytesUsed.addAndGet(instance.ramBytesUsed());\n          fstInstances.put(field.name, instance);\n        }\n      }\n    }\n    final NumericDocValues docToOrd = getNumeric(field);\n    final FST<Long> fst = instance;\n    \n    // per-thread resources\n    final BytesReader in = fst.getBytesReader();\n    final Arc<Long> firstArc = new Arc<>();\n    final Arc<Long> scratchArc = new Arc<>();\n    final IntsRefBuilder scratchInts = new IntsRefBuilder();\n    final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<>(fst);\n    \n    return new SortedDocValues() {\n\n      final BytesRefBuilder term = new BytesRefBuilder();\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) docToOrd.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        try {\n          in.setPosition(0);\n          fst.getFirstArc(firstArc);\n          IntsRef output = Util.getByOutput(fst, ord, in, firstArc, scratchArc, scratchInts);\n          term.grow(output.length);\n          term.clear();\n          return Util.toBytesRef(output, term);\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        try {\n          InputOutput<Long> o = fstEnum.seekCeil(key);\n          if (o == null) {\n            return -getValueCount()-1;\n          } else if (o.input.equals(key)) {\n            return o.output.intValue();\n          } else {\n            return (int) -o.output-1;\n          }\n        } catch (IOException bogus) {\n          throw new RuntimeException(bogus);\n        }\n      }\n\n      @Override\n      public int getValueCount() {\n        return (int)entry.numOrds;\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        return new FSTTermsEnum(fst);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc8f80fee115148a0e4a0574560be06b494de821":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["0936055c0eed56be3e4ae5c9db5b0e355390736a","bc8f80fee115148a0e4a0574560be06b494de821"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"bc8f80fee115148a0e4a0574560be06b494de821":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["bc8f80fee115148a0e4a0574560be06b494de821","9bb9a29a5e71a90295f175df8919802993142c9a"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}