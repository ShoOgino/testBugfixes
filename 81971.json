{"path":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#ramUsedInBytes().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#ramUsedInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocTermOrds#ramUsedInBytes().mjava","sourceNew":"  public long ramUsedInBytes() {\n    // can cache the mem size since it shouldn't change\n    if (memsz!=0) return memsz;\n    long sz = 8*8 + 32; // local fields\n    if (index != null) sz += index.length * 4;\n    if (tnums!=null) {\n      for (byte[] arr : tnums)\n        if (arr != null) sz += arr.length;\n    }\n    memsz = sz;\n    return sz;\n  }\n\n","sourceOld":"  public long ramUsedInBytes() {\n    // can cache the mem size since it shouldn't change\n    if (memsz!=0) return memsz;\n    long sz = 8*8 + 32; // local fields\n    if (index != null) sz += index.length * 4;\n    if (tnums!=null) {\n      for (byte[] arr : tnums)\n        if (arr != null) sz += arr.length;\n    }\n    memsz = sz;\n    return sz;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c14aed69f37b57db63b1fccc0740b17060a08f2b","date":1348227091,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#ramUsedInBytes().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#ramUsedInBytes().mjava","sourceNew":"  /** Returns total bytes used. */\n  public long ramUsedInBytes() {\n    // can cache the mem size since it shouldn't change\n    if (memsz!=0) return memsz;\n    long sz = 8*8 + 32; // local fields\n    if (index != null) sz += index.length * 4;\n    if (tnums!=null) {\n      for (byte[] arr : tnums)\n        if (arr != null) sz += arr.length;\n    }\n    memsz = sz;\n    return sz;\n  }\n\n","sourceOld":"  public long ramUsedInBytes() {\n    // can cache the mem size since it shouldn't change\n    if (memsz!=0) return memsz;\n    long sz = 8*8 + 32; // local fields\n    if (index != null) sz += index.length * 4;\n    if (tnums!=null) {\n      for (byte[] arr : tnums)\n        if (arr != null) sz += arr.length;\n    }\n    memsz = sz;\n    return sz;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28dbdccfa460fb41c33b6d23411572298d589b99","date":1399839432,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/DocTermOrds#ramUsedInBytes().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#ramUsedInBytes().mjava","sourceNew":"  /** Returns total bytes used. */\n  public long ramUsedInBytes() {\n    // can cache the mem size since it shouldn't change\n    if (memsz!=0) return memsz;\n    long sz = 8*8 + 32; // local fields\n    if (index != null) sz += index.length * 4;\n    if (tnums!=null) {\n      for (byte[] arr : tnums)\n        if (arr != null) sz += arr.length;\n    }\n    memsz = sz;\n    return sz;\n  }\n\n","sourceOld":"  /** Returns total bytes used. */\n  public long ramUsedInBytes() {\n    // can cache the mem size since it shouldn't change\n    if (memsz!=0) return memsz;\n    long sz = 8*8 + 32; // local fields\n    if (index != null) sz += index.length * 4;\n    if (tnums!=null) {\n      for (byte[] arr : tnums)\n        if (arr != null) sz += arr.length;\n    }\n    memsz = sz;\n    return sz;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/DocTermOrds#ramUsedInBytes().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#ramUsedInBytes().mjava","sourceNew":"  /** Returns total bytes used. */\n  public long ramUsedInBytes() {\n    // can cache the mem size since it shouldn't change\n    if (memsz!=0) return memsz;\n    long sz = 8*8 + 32; // local fields\n    if (index != null) sz += index.length * 4;\n    if (tnums!=null) {\n      for (byte[] arr : tnums)\n        if (arr != null) sz += arr.length;\n    }\n    memsz = sz;\n    return sz;\n  }\n\n","sourceOld":"  /** Returns total bytes used. */\n  public long ramUsedInBytes() {\n    // can cache the mem size since it shouldn't change\n    if (memsz!=0) return memsz;\n    long sz = 8*8 + 32; // local fields\n    if (index != null) sz += index.length * 4;\n    if (tnums!=null) {\n      for (byte[] arr : tnums)\n        if (arr != null) sz += arr.length;\n    }\n    memsz = sz;\n    return sz;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/DocTermOrds#ramUsedInBytes().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds#ramUsedInBytes().mjava","sourceNew":"  /** Returns total bytes used. */\n  public long ramUsedInBytes() {\n    // can cache the mem size since it shouldn't change\n    if (memsz!=0) return memsz;\n    long sz = 8*8 + 32; // local fields\n    if (index != null) sz += index.length * 4;\n    if (tnums!=null) {\n      for (byte[] arr : tnums)\n        if (arr != null) sz += arr.length;\n    }\n    memsz = sz;\n    return sz;\n  }\n\n","sourceOld":"  /** Returns total bytes used. */\n  public long ramUsedInBytes() {\n    // can cache the mem size since it shouldn't change\n    if (memsz!=0) return memsz;\n    long sz = 8*8 + 32; // local fields\n    if (index != null) sz += index.length * 4;\n    if (tnums!=null) {\n      for (byte[] arr : tnums)\n        if (arr != null) sz += arr.length;\n    }\n    memsz = sz;\n    return sz;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"28dbdccfa460fb41c33b6d23411572298d589b99":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["c14aed69f37b57db63b1fccc0740b17060a08f2b","28dbdccfa460fb41c33b6d23411572298d589b99"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["c14aed69f37b57db63b1fccc0740b17060a08f2b","93dd449115a9247533e44bab47e8429e5dccbc6d"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"28dbdccfa460fb41c33b6d23411572298d589b99":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["28dbdccfa460fb41c33b6d23411572298d589b99","93dd449115a9247533e44bab47e8429e5dccbc6d","56572ec06f1407c066d6b7399413178b33176cd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}