{"path":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#files(Directory,FieldInfos,String,Set[String],String).mjava","commits":[{"id":"de5bbadeb3abac0f650298bff584bd4317bd75aa","date":1331116004,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#files(Directory,FieldInfos,String,Set[String],String).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  private static void files(Directory dir, FieldInfos fieldInfos,\n      String segmentName, Set<String> files, String segmentSuffix) {\n    for (FieldInfo fieldInfo : fieldInfos) {\n      if (fieldInfo.hasDocValues()) {\n        String filename = docValuesId(segmentName, fieldInfo.number);\n        files.add(IndexFileNames.segmentFileName(filename, \"\",\n            segmentSuffix));\n        try {\n          assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n              segmentSuffix));\n        } catch (IOException e) {\n          // don't throw checked exception - dir is only used in assert\n          throw new RuntimeException(e);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#files(Directory,FieldInfos,String,Set[String],String).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  private static void files(Directory dir, FieldInfos fieldInfos,\n      String segmentName, Set<String> files, String segmentSuffix) {\n    for (FieldInfo fieldInfo : fieldInfos) {\n      if (fieldInfo.hasDocValues()) {\n        String filename = docValuesId(segmentName, fieldInfo.number);\n        files.add(IndexFileNames.segmentFileName(filename, \"\",\n            segmentSuffix));\n        try {\n          assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n              segmentSuffix));\n        } catch (IOException e) {\n          // don't throw checked exception - dir is only used in assert\n          throw new RuntimeException(e);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2dee33619431ada2a7a07f5fe2dbd94bac6a460","date":1337274029,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#files(Directory,FieldInfos,String,Set[String],String).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  private static void files(Directory dir, FieldInfos fieldInfos,\n      String segmentName, Set<String> files, String segmentSuffix) {\n    for (FieldInfo fieldInfo : fieldInfos) {\n      if (fieldInfo.hasDocValues()) {\n        String filename = docValuesId(segmentName, fieldInfo.number);\n        files.add(IndexFileNames.segmentFileName(filename, \"\",\n            segmentSuffix));\n        try {\n          assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n              segmentSuffix));\n        } catch (IOException e) {\n          // don't throw checked exception - dir is only used in assert\n          throw new RuntimeException(e);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#files(Directory,FieldInfos,String,Set[String],String).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  private static void files(Directory dir, FieldInfos fieldInfos,\n      String segmentName, Set<String> files, String segmentSuffix) {\n    for (FieldInfo fieldInfo : fieldInfos) {\n      if (fieldInfo.hasDocValues()) {\n        String filename = docValuesId(segmentName, fieldInfo.number);\n        files.add(IndexFileNames.segmentFileName(filename, \"\",\n            segmentSuffix));\n        try {\n          assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n              segmentSuffix));\n        } catch (IOException e) {\n          // don't throw checked exception - dir is only used in assert\n          throw new RuntimeException(e);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["de5bbadeb3abac0f650298bff584bd4317bd75aa"],"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["de5bbadeb3abac0f650298bff584bd4317bd75aa","d2dee33619431ada2a7a07f5fe2dbd94bac6a460"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["d2dee33619431ada2a7a07f5fe2dbd94bac6a460","38e3b736c7ca086d61b7dbb841c905ee115490da","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}