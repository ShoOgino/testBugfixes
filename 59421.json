{"path":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestUserSpecifiedMaxFieldLength().mjava","commits":[{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestUserSpecifiedMaxFieldLength().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":"  // LUCENE-1084: test user-specified field length\n  public void xxxtestUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), new IndexWriter.MaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuffer b = new StringBuffer();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), new IndexWriter.MaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuffer b = new StringBuffer();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestUserSpecifiedMaxFieldLength().mjava","sourceNew":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), new IndexWriter.MaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuffer b = new StringBuffer();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void xxxtestUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), new IndexWriter.MaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuffer b = new StringBuffer();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3215ae1377fc1ca1790921d75dd39cb764743b85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c482d1e63332617181729a225b215c452d8a79"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"09c482d1e63332617181729a225b215c452d8a79":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}