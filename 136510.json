{"path":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","commits":[{"id":"1f1f31880696765d6aec499d3b01fa501129af45","date":1474287317,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap().mjava","sourceNew":"  public Map<String, Object> toMap(Map<String, Object> map) {\n    map.putAll(attributes);\n    Map m = map;\n    if(initArgs!=null ) m.putAll(initArgs.asMap(3));\n    if(children != null){\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if(old == null){\n          m.put(child.name, child.toMap(new LinkedHashMap<>()));\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap(new LinkedHashMap<>()));\n        }  else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap(new LinkedHashMap<>()));\n          m.put(child.name,l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","sourceOld":" public Map<String,Object> toMap(){\n    LinkedHashMap m = new LinkedHashMap(attributes);\n    if(initArgs!=null ) m.putAll(initArgs.asMap(3));\n    if(children != null){\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if(old == null){\n          m.put(child.name, child.toMap());\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap());\n        }  else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap());\n          m.put(child.name,l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  public Map<String, Object> toMap(Map<String, Object> map) {\n    map.putAll(attributes);\n    Map m = map;\n    if(initArgs!=null ) m.putAll(initArgs.asMap(3));\n    if(children != null){\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if(old == null){\n          m.put(child.name, child.toMap(new LinkedHashMap<>()));\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap(new LinkedHashMap<>()));\n        }  else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap(new LinkedHashMap<>()));\n          m.put(child.name,l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  public Map<String, Object> toMap(Map<String, Object> map) {\n    map.putAll(attributes);\n    Map m = map;\n    if(initArgs!=null ) m.putAll(initArgs.asMap(3));\n    if(children != null){\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if(old == null){\n          m.put(child.name, child.toMap(new LinkedHashMap<>()));\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap(new LinkedHashMap<>()));\n        }  else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap(new LinkedHashMap<>()));\n          m.put(child.name,l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39dabfd19b49b248d63cedbb01ea144ee5ad071c","date":1566241238,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","sourceNew":"  public Map<String, Object> toMap(Map<String, Object> map) {\n    map.putAll(attributes);\n    Map m = map;\n    if (initArgs != null) m.putAll(initArgs.asMap(3));\n    if (children != null) {\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if (old == null) {\n          m.put(child.name, child.toMap(new LinkedHashMap<>()));\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap(new LinkedHashMap<>()));\n        } else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap(new LinkedHashMap<>()));\n          m.put(child.name, l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","sourceOld":"  public Map<String, Object> toMap(Map<String, Object> map) {\n    map.putAll(attributes);\n    Map m = map;\n    if(initArgs!=null ) m.putAll(initArgs.asMap(3));\n    if(children != null){\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if(old == null){\n          m.put(child.name, child.toMap(new LinkedHashMap<>()));\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap(new LinkedHashMap<>()));\n        }  else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap(new LinkedHashMap<>()));\n          m.put(child.name,l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","sourceNew":"  public Map<String, Object> toMap(Map<String, Object> map) {\n    map.putAll(attributes);\n    Map m = map;\n    if(initArgs!=null ) m.putAll(initArgs.asMap(3));\n    if(children != null){\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if(old == null){\n          m.put(child.name, child.toMap(new LinkedHashMap<>()));\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap(new LinkedHashMap<>()));\n        }  else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap(new LinkedHashMap<>()));\n          m.put(child.name,l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","sourceOld":"  public Map<String, Object> toMap(Map<String, Object> map) {\n    map.putAll(attributes);\n    Map m = map;\n    if (initArgs != null) m.putAll(initArgs.asMap(3));\n    if (children != null) {\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if (old == null) {\n          m.put(child.name, child.toMap(new LinkedHashMap<>()));\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap(new LinkedHashMap<>()));\n        } else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap(new LinkedHashMap<>()));\n          m.put(child.name, l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","sourceNew":"  public Map<String, Object> toMap(Map<String, Object> map) {\n    map.putAll(attributes);\n    Map m = map;\n    if(initArgs!=null ) m.putAll(initArgs.asMap(3));\n    if(children != null){\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if(old == null){\n          m.put(child.name, child.toMap(new LinkedHashMap<>()));\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap(new LinkedHashMap<>()));\n        }  else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap(new LinkedHashMap<>()));\n          m.put(child.name,l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","sourceOld":"  public Map<String, Object> toMap(Map<String, Object> map) {\n    map.putAll(attributes);\n    Map m = map;\n    if (initArgs != null) m.putAll(initArgs.asMap(3));\n    if (children != null) {\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if (old == null) {\n          m.put(child.name, child.toMap(new LinkedHashMap<>()));\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap(new LinkedHashMap<>()));\n        } else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap(new LinkedHashMap<>()));\n          m.put(child.name, l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75237075d8425856bf4bbf52a6be4f9162b8187d","date":1591103291,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginInfo#toMap(Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public Map<String, Object> toMap(Map<String, Object> map) {\n    map.putAll(attributes);\n    Map m = map;\n    if(initArgs!=null ) m.putAll(initArgs.asMap(3));\n    if(children != null){\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if(old == null){\n          m.put(child.name, child.toMap(new LinkedHashMap<>()));\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap(new LinkedHashMap<>()));\n        }  else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap(new LinkedHashMap<>()));\n          m.put(child.name,l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","sourceOld":"  public Map<String, Object> toMap(Map<String, Object> map) {\n    map.putAll(attributes);\n    Map m = map;\n    if(initArgs!=null ) m.putAll(initArgs.asMap(3));\n    if(children != null){\n      for (PluginInfo child : children) {\n        Object old = m.get(child.name);\n        if(old == null){\n          m.put(child.name, child.toMap(new LinkedHashMap<>()));\n        } else if (old instanceof List) {\n          List list = (List) old;\n          list.add(child.toMap(new LinkedHashMap<>()));\n        }  else {\n          ArrayList l = new ArrayList();\n          l.add(old);\n          l.add(child.toMap(new LinkedHashMap<>()));\n          m.put(child.name,l);\n        }\n      }\n\n    }\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"75237075d8425856bf4bbf52a6be4f9162b8187d":["c44cc06c26e456fe9c215072b79fce30babe3975"],"39dabfd19b49b248d63cedbb01ea144ee5ad071c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f1f31880696765d6aec499d3b01fa501129af45"],"1f1f31880696765d6aec499d3b01fa501129af45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c44cc06c26e456fe9c215072b79fce30babe3975":["39dabfd19b49b248d63cedbb01ea144ee5ad071c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75237075d8425856bf4bbf52a6be4f9162b8187d"],"b0b597c65628ca9e73913a07e81691f8229bae35":["39dabfd19b49b248d63cedbb01ea144ee5ad071c","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"75237075d8425856bf4bbf52a6be4f9162b8187d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"39dabfd19b49b248d63cedbb01ea144ee5ad071c":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["39dabfd19b49b248d63cedbb01ea144ee5ad071c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","1f1f31880696765d6aec499d3b01fa501129af45","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1f1f31880696765d6aec499d3b01fa501129af45":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c44cc06c26e456fe9c215072b79fce30babe3975":["75237075d8425856bf4bbf52a6be4f9162b8187d","b0b597c65628ca9e73913a07e81691f8229bae35"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}