{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene84/TestLucene84PostingsFormat#testFinalBlock().mjava","commits":[{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":2,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene84/TestLucene84PostingsFormat#testFinalBlock().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene50/TestBlockPostingsFormat#testFinalBlock().mjava","sourceNew":"  /** Make sure the final sub-block(s) are not skipped. */\n  public void testFinalBlock() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    for(int i=0;i<25;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"field\", Character.toString((char) (97+i)), Field.Store.NO));\n      doc.add(newStringField(\"field\", \"z\" + Character.toString((char) (97+i)), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    w.forceMerge(1);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.leaves().size());\n    FieldReader field = (FieldReader) r.leaves().get(0).reader().terms(\"field\");\n    // We should see exactly two blocks: one root block (prefix empty string) and one block for z* terms (prefix z):\n    Stats stats = field.getStats();\n    assertEquals(0, stats.floorBlockCount);\n    assertEquals(2, stats.nonFloorBlockCount);\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  /** Make sure the final sub-block(s) are not skipped. */\n  public void testFinalBlock() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    for(int i=0;i<25;i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"field\", Character.toString((char) (97+i)), Field.Store.NO));\n      doc.add(newStringField(\"field\", \"z\" + Character.toString((char) (97+i)), Field.Store.NO));\n      w.addDocument(doc);\n    }\n    w.forceMerge(1);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    assertEquals(1, r.leaves().size());\n    FieldReader field = (FieldReader) r.leaves().get(0).reader().terms(\"field\");\n    // We should see exactly two blocks: one root block (prefix empty string) and one block for z* terms (prefix z):\n    Stats stats = field.getStats();\n    assertEquals(0, stats.floorBlockCount);\n    assertEquals(2, stats.nonFloorBlockCount);\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"]},"commit2Childs":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}