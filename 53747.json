{"path":"src/test/org/apache/lucene/search/payloads/TestBoostingNearQuery#setUp().mjava","commits":[{"id":"94a3c9097762cec00567aff9ceae83842107c895","date":1249571658,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestBoostingNearQuery#setUp().mjava","pathOld":"/dev/null","sourceNew":"\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\tRAMDirectory directory = new RAMDirectory();\n\t\tPayloadAnalyzer analyzer = new PayloadAnalyzer();\n\t\tIndexWriter writer\n\t\t= new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n\t\twriter.setSimilarity(similarity);\n\t\t//writer.infoStream = System.out;\n\t\tfor (int i = 0; i < 1000; i++) {\n\t\t\tDocument doc = new Document();\n\t\t\tdoc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n\t\t\twriter.addDocument(doc);\n\t\t}\n\t\twriter.optimize();\n\t\twriter.close();\n\n\t\tsearcher = new IndexSearcher(directory, true);\n\t\tsearcher.setSimilarity(similarity);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e9a421afb32184cc61e8326108325225d58dfde0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fa4f1b5e611afe6cb170951e0a9202ff95dc9156","date":1250976267,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestBoostingNearQuery#setUp().mjava","sourceNew":"\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\tRAMDirectory directory = new RAMDirectory();\n\t\tPayloadAnalyzer analyzer = new PayloadAnalyzer();\n\t\tIndexWriter writer\n\t\t= new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n\t\twriter.setSimilarity(similarity);\n\t\t//writer.infoStream = System.out;\n\t\tfor (int i = 0; i < 1000; i++) {\n\t\t\tDocument doc = new Document();\n\t\t\tdoc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n\t\t\twriter.addDocument(doc);\n\t\t}\n\t\twriter.optimize();\n\t\twriter.close();\n\n\t\tsearcher = new IndexSearcher(directory, true);\n\t\tsearcher.setSimilarity(similarity);\n\t}\n\n","sourceOld":"\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\tRAMDirectory directory = new RAMDirectory();\n\t\tPayloadAnalyzer analyzer = new PayloadAnalyzer();\n\t\tIndexWriter writer\n\t\t= new IndexWriter(directory, analyzer, true, IndexWriter.MaxFieldLength.LIMITED);\n\t\twriter.setSimilarity(similarity);\n\t\t//writer.infoStream = System.out;\n\t\tfor (int i = 0; i < 1000; i++) {\n\t\t\tDocument doc = new Document();\n\t\t\tdoc.add(new Field(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n\t\t\twriter.addDocument(doc);\n\t\t}\n\t\twriter.optimize();\n\t\twriter.close();\n\n\t\tsearcher = new IndexSearcher(directory, true);\n\t\tsearcher.setSimilarity(similarity);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"94a3c9097762cec00567aff9ceae83842107c895":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["94a3c9097762cec00567aff9ceae83842107c895"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"]},"commit2Childs":{"94a3c9097762cec00567aff9ceae83842107c895":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94a3c9097762cec00567aff9ceae83842107c895"],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}