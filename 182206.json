{"path":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","commits":[{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Searcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createWeight(query), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createWeight(query), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Searcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createWeight(query), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createWeight(query), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Searcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createWeight(query), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createWeight(query), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f7fee42303a18cc146043c96f66491311b345d9","date":1308246904,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createWeight(query), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","date":1308291005,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createWeight(query), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7","6f7fee42303a18cc146043c96f66491311b345d9"],"6f7fee42303a18cc146043c96f66491311b345d9":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6f7fee42303a18cc146043c96f66491311b345d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":[],"6f7fee42303a18cc146043c96f66491311b345d9":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"70ad682703b8585f5d0a637efec044d57ec05efb":[],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","6f7fee42303a18cc146043c96f66491311b345d9","70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}