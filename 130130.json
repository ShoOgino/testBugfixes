{"path":"backwards/src/java/org/apache/lucene/analysis/StopFilter#setEnablePositionIncrements(boolean).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/analysis/StopFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/analysis/StopFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/StopFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":6,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/StopFilter#setEnablePositionIncrements(boolean).mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/StopFilter#setEnablePositionIncrements(boolean).mjava","sourceNew":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","sourceOld":"  /**\n   * If <code>true</code>, this StopFilter will preserve\n   * positions of the incoming tokens (ie, accumulate and\n   * set position increments of the removed stop tokens).\n   * Generally, <code>true</code> is best as it does not\n   * lose information (positions of the original tokens)\n   * during indexing.\n   * \n   * <p> When set, when a token is stopped\n   * (omitted), the position increment of the following\n   * token is incremented.\n   *\n   * <p> <b>NOTE</b>: be sure to also\n   * set {@link QueryParser#setEnablePositionIncrements} if\n   * you use QueryParser to create queries.\n   */\n  public void setEnablePositionIncrements(boolean enable) {\n    this.enablePositionIncrements = enable;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}