{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#refillMetadata().mjava","commits":[{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#refillMetadata().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#refillMetadata().mjava","sourceNew":"      /** Load current metadata shard */\n      final void refillMetadata() throws IOException {\n        final int offset = metaBlockOrd * numSkipInfo;\n        final int metaLongsFP = (int)skipInfo[offset + 1];\n        final int metaBytesFP = (int)skipInfo[offset + 2];\n        metaLongsReader.setPosition(metaLongsFP);\n        for (int j = 0; j < longsSize; j++) {\n          longs[0][j] = skipInfo[offset + 3 + j] + metaLongsReader.readVLong();\n        }\n        bytesStart[0] = metaBytesFP; \n        bytesLength[0] = (int)metaLongsReader.readVLong();\n        for (int i = 1; i < INTERVAL && !metaLongsReader.eof(); i++) {\n          for (int j = 0; j < longsSize; j++) {\n            longs[i][j] = longs[i-1][j] + metaLongsReader.readVLong();\n          }\n          bytesStart[i] = bytesStart[i-1] + bytesLength[i-1];\n          bytesLength[i] = (int)metaLongsReader.readVLong();\n        }\n      }\n\n","sourceOld":"      /** Load current metadata shard */\n      final void refillMetadata() throws IOException {\n        final int offset = metaBlockOrd * numSkipInfo;\n        final int metaLongsFP = (int)skipInfo[offset + 1];\n        final int metaBytesFP = (int)skipInfo[offset + 2];\n        metaLongsReader.setPosition(metaLongsFP);\n        for (int j = 0; j < longsSize; j++) {\n          longs[0][j] = skipInfo[offset + 3 + j] + metaLongsReader.readVLong();\n        }\n        bytesStart[0] = metaBytesFP; \n        bytesLength[0] = (int)metaLongsReader.readVLong();\n        for (int i = 1; i < INTERVAL && !metaLongsReader.eof(); i++) {\n          for (int j = 0; j < longsSize; j++) {\n            longs[i][j] = longs[i-1][j] + metaLongsReader.readVLong();\n          }\n          bytesStart[i] = bytesStart[i-1] + bytesLength[i-1];\n          bytesLength[i] = (int)metaLongsReader.readVLong();\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56df73d43b6fc340f5332322862382c7e30f4368","date":1378304988,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/FSTOrdTermsReader.TermsReader.BaseTermsEnum#refillMetadata().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.BaseTermsEnum#refillMetadata().mjava","sourceNew":"      /** Load current metadata shard */\n      final void refillMetadata() throws IOException {\n        final int offset = metaBlockOrd * numSkipInfo;\n        final int metaLongsFP = (int)skipInfo[offset + 1];\n        final int metaBytesFP = (int)skipInfo[offset + 2];\n        metaLongsReader.setPosition(metaLongsFP);\n        for (int j = 0; j < longsSize; j++) {\n          longs[0][j] = skipInfo[offset + 3 + j] + metaLongsReader.readVLong();\n        }\n        bytesStart[0] = metaBytesFP; \n        bytesLength[0] = (int)metaLongsReader.readVLong();\n        for (int i = 1; i < INTERVAL && !metaLongsReader.eof(); i++) {\n          for (int j = 0; j < longsSize; j++) {\n            longs[i][j] = longs[i-1][j] + metaLongsReader.readVLong();\n          }\n          bytesStart[i] = bytesStart[i-1] + bytesLength[i-1];\n          bytesLength[i] = (int)metaLongsReader.readVLong();\n        }\n      }\n\n","sourceOld":"      /** Load current metadata shard */\n      final void refillMetadata() throws IOException {\n        final int offset = metaBlockOrd * numSkipInfo;\n        final int metaLongsFP = (int)skipInfo[offset + 1];\n        final int metaBytesFP = (int)skipInfo[offset + 2];\n        metaLongsReader.setPosition(metaLongsFP);\n        for (int j = 0; j < longsSize; j++) {\n          longs[0][j] = skipInfo[offset + 3 + j] + metaLongsReader.readVLong();\n        }\n        bytesStart[0] = metaBytesFP; \n        bytesLength[0] = (int)metaLongsReader.readVLong();\n        for (int i = 1; i < INTERVAL && !metaLongsReader.eof(); i++) {\n          for (int j = 0; j < longsSize; j++) {\n            longs[i][j] = longs[i-1][j] + metaLongsReader.readVLong();\n          }\n          bytesStart[i] = bytesStart[i-1] + bytesLength[i-1];\n          bytesLength[i] = (int)metaLongsReader.readVLong();\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56df73d43b6fc340f5332322862382c7e30f4368":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"56df73d43b6fc340f5332322862382c7e30f4368":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["56df73d43b6fc340f5332322862382c7e30f4368"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56df73d43b6fc340f5332322862382c7e30f4368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}