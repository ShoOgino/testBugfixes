{"path":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#splitLongRange(LongRangeBuilder,int,long,long).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#splitLongRange(LongRangeBuilder,int,long,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/NumericUtils#splitLongRange(LongRangeBuilder,int,long,long).mjava","sourceNew":"  /**\n   * Splits a long range recursively.\n   * You may implement a builder that adds clauses to a\n   * {@link org.apache.lucene.search.BooleanQuery} for each call to its\n   * {@link LongRangeBuilder#addRange(BytesRef,BytesRef)}\n   * method.\n   * <p>This method is used by {@link NumericRangeQuery}.\n   */\n  public static void splitLongRange(final LongRangeBuilder builder,\n    final int precisionStep,  final long minBound, final long maxBound\n  ) {\n    splitRange(builder, 64, precisionStep, minBound, maxBound);\n  }\n\n","sourceOld":"  /**\n   * Splits a long range recursively.\n   * You may implement a builder that adds clauses to a\n   * {@link org.apache.lucene.search.BooleanQuery} for each call to its\n   * {@link LongRangeBuilder#addRange(BytesRef,BytesRef)}\n   * method.\n   * <p>This method is used by {@link NumericRangeQuery}.\n   */\n  public static void splitLongRange(final LongRangeBuilder builder,\n    final int precisionStep,  final long minBound, final long maxBound\n  ) {\n    splitRange(builder, 64, precisionStep, minBound, maxBound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LegacyNumericUtils#splitLongRange(LongRangeBuilder,int,long,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/NumericUtils#splitLongRange(LongRangeBuilder,int,long,long).mjava","sourceNew":"  /**\n   * Splits a long range recursively.\n   * You may implement a builder that adds clauses to a\n   * {@link org.apache.lucene.search.BooleanQuery} for each call to its\n   * {@link LongRangeBuilder#addRange(BytesRef,BytesRef)}\n   * method.\n   * <p>This method is used by {@link org.apache.lucene.search.LegacyNumericRangeQuery}.\n   */\n  public static void splitLongRange(final LongRangeBuilder builder,\n    final int precisionStep,  final long minBound, final long maxBound\n  ) {\n    splitRange(builder, 64, precisionStep, minBound, maxBound);\n  }\n\n","sourceOld":"  /**\n   * Splits a long range recursively.\n   * You may implement a builder that adds clauses to a\n   * {@link org.apache.lucene.search.BooleanQuery} for each call to its\n   * {@link LongRangeBuilder#addRange(BytesRef,BytesRef)}\n   * method.\n   * <p>This method is used by {@link NumericRangeQuery}.\n   */\n  public static void splitLongRange(final LongRangeBuilder builder,\n    final int precisionStep,  final long minBound, final long maxBound\n  ) {\n    splitRange(builder, 64, precisionStep, minBound, maxBound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"770342641f7b505eaa8dccdc666158bff2419109":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["770342641f7b505eaa8dccdc666158bff2419109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"770342641f7b505eaa8dccdc666158bff2419109":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}