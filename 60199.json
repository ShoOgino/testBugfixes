{"path":"solr/core/src/java/org/apache/solr/update/SolrCoreState#decref(IndexWriterCloser).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Decrement the number of references to this state. When then number of\n   * references hits 0, the state will close.  If an optional closer is\n   * passed, that will be used to close the writer.\n   * \n   * @throws IOException\n   */\n  public abstract void decref(IndexWriterCloser closer) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Decrement the number of references to this state. When then number of\n   * references hits 0, the state will close.  If an optional closer is\n   * passed, that will be used to close the writer.\n   * \n   * @throws IOException\n   */\n  public abstract void decref(IndexWriterCloser closer) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Decrement the number of references to this state. When then number of\n   * references hits 0, the state will close.  If an optional closer is\n   * passed, that will be used to close the writer.\n   * \n   * @throws IOException\n   */\n  public abstract void decref(IndexWriterCloser closer) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCoreState#decref(IndexWriterCloser).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":"  /**\n   * Decrement the number of references to this state. When then number of\n   * references hits 0, the state will close.  If an optional closer is\n   * passed, that will be used to close the writer.\n   * \n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void decref(IndexWriterCloser closer) throws IOException;\n\n","sourceOld":"  /**\n   * Decrement the number of references to this state. When then number of\n   * references hits 0, the state will close.  If an optional closer is\n   * passed, that will be used to close the writer.\n   * \n   * @throws IOException\n   */\n  public abstract void decref(IndexWriterCloser closer) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c8475e39c56b28600d2b496f3e78f7421190f62","date":1349102564,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCoreState#decref(IndexWriterCloser).mjava","sourceNew":null,"sourceOld":"  /**\n   * Decrement the number of references to this state. When then number of\n   * references hits 0, the state will close.  If an optional closer is\n   * passed, that will be used to close the writer.\n   * \n   * @throws IOException If there is a low-level I/O error.\n   */\n  public abstract void decref(IndexWriterCloser closer) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"3c8475e39c56b28600d2b496f3e78f7421190f62":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3c8475e39c56b28600d2b496f3e78f7421190f62"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3c8475e39c56b28600d2b496f3e78f7421190f62"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"3c8475e39c56b28600d2b496f3e78f7421190f62":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}