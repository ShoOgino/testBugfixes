{"path":"backwards/src/java/org/apache/lucene/util/AttributeSource#cloneAttributes().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/util/AttributeSource#cloneAttributes().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Performs a clone of all {@link AttributeImpl} instances returned in a new\n   * AttributeSource instance. This method can be used to e.g. create another TokenStream\n   * with exactly the same attributes (using {@link #AttributeSource(AttributeSource)})\n   */\n  public AttributeSource cloneAttributes() {\n    AttributeSource clone = new AttributeSource(this.factory);\n    \n    // first clone the impls\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      for (State state = currentState; state != null; state = state.next) {\n        clone.attributeImpls.put(state.attribute.getClass(), (AttributeImpl) state.attribute.clone());\n      }\n    }\n    \n    // now the interfaces\n    for (Entry<Class<? extends Attribute>, AttributeImpl> entry : this.attributes.entrySet()) {\n      clone.attributes.put(entry.getKey(), clone.attributeImpls.get(entry.getValue().getClass()));\n    }\n    \n    return clone;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/util/AttributeSource#cloneAttributes().mjava","pathOld":"backwards/src/java/org/apache/lucene/util/AttributeSource#cloneAttributes().mjava","sourceNew":"  /**\n   * Performs a clone of all {@link AttributeImpl} instances returned in a new\n   * AttributeSource instance. This method can be used to e.g. create another TokenStream\n   * with exactly the same attributes (using {@link #AttributeSource(AttributeSource)})\n   */\n  public AttributeSource cloneAttributes() {\n    AttributeSource clone = new AttributeSource(this.factory);\n    \n    // first clone the impls\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      for (State state = currentState; state != null; state = state.next) {\n        clone.attributeImpls.put(state.attribute.getClass(), (AttributeImpl) state.attribute.clone());\n      }\n    }\n    \n    // now the interfaces\n    for (Entry<Class<? extends Attribute>, AttributeImpl> entry : this.attributes.entrySet()) {\n      clone.attributes.put(entry.getKey(), clone.attributeImpls.get(entry.getValue().getClass()));\n    }\n    \n    return clone;\n  }\n\n","sourceOld":"  /**\n   * Performs a clone of all {@link AttributeImpl} instances returned in a new\n   * AttributeSource instance. This method can be used to e.g. create another TokenStream\n   * with exactly the same attributes (using {@link #AttributeSource(AttributeSource)})\n   */\n  public AttributeSource cloneAttributes() {\n    AttributeSource clone = new AttributeSource(this.factory);\n    \n    // first clone the impls\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      for (State state = currentState; state != null; state = state.next) {\n        clone.attributeImpls.put(state.attribute.getClass(), (AttributeImpl) state.attribute.clone());\n      }\n    }\n    \n    // now the interfaces\n    for (Entry<Class<? extends Attribute>, AttributeImpl> entry : this.attributes.entrySet()) {\n      clone.attributes.put(entry.getKey(), clone.attributeImpls.get(entry.getValue().getClass()));\n    }\n    \n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}