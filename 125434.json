{"path":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(DataOutput).mjava","commits":[{"id":"4f8633b56150a205774ee3e2adf1452a81b0d904","date":1376926002,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(IndexOutput).mjava","sourceNew":"  /** Copy the current contents of this buffer to the named output. */\n  public void writeTo(DataOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","sourceOld":"  /** Copy the current contents of this buffer to the named output. */\n  public void writeTo(IndexOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":1,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(IndexOutput).mjava","sourceNew":"  /** Copy the current contents of this buffer to the named output. */\n  public void writeTo(DataOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","sourceOld":"  /** Copy the current contents of this buffer to the named output. */\n  public void writeTo(IndexOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62ad8b8adb87da9e297f35a6ef432258c8076c96","date":1454429256,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(DataOutput).mjava","sourceNew":"  /** Copy the current contents of this buffer to the provided {@link DataOutput}. */\n  public void writeTo(DataOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","sourceOld":"  /** Copy the current contents of this buffer to the named output. */\n  public void writeTo(DataOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(DataOutput).mjava","sourceNew":"  /** Copy the current contents of this buffer to the provided {@link DataOutput}. */\n  public void writeTo(DataOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","sourceOld":"  /** Copy the current contents of this buffer to the named output. */\n  public void writeTo(DataOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeTo(DataOutput).mjava","sourceNew":null,"sourceOld":"  /** Copy the current contents of this buffer to the provided {@link DataOutput}. */\n  public void writeTo(DataOutput out) throws IOException {\n    flush();\n    final long end = file.length;\n    long pos = 0;\n    int buffer = 0;\n    while (pos < end) {\n      int length = BUFFER_SIZE;\n      long nextPos = pos + length;\n      if (nextPos > end) {                        // at the last buffer\n        length = (int)(end - pos);\n      }\n      out.writeBytes(file.getBuffer(buffer++), length);\n      pos = nextPos;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"62ad8b8adb87da9e297f35a6ef432258c8076c96":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["2f948dd442d23baa6cbb28daf77c8db78b351329","62ad8b8adb87da9e297f35a6ef432258c8076c96"],"d77dafd89756a5161d244985903e3487ca109182":["62ad8b8adb87da9e297f35a6ef432258c8076c96"],"4f8633b56150a205774ee3e2adf1452a81b0d904":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4f8633b56150a205774ee3e2adf1452a81b0d904"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"62ad8b8adb87da9e297f35a6ef432258c8076c96":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","d77dafd89756a5161d244985903e3487ca109182"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4f8633b56150a205774ee3e2adf1452a81b0d904","2f948dd442d23baa6cbb28daf77c8db78b351329"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4f8633b56150a205774ee3e2adf1452a81b0d904":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["62ad8b8adb87da9e297f35a6ef432258c8076c96","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}