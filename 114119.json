{"path":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","sourceNew":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n  }\n\n","sourceOld":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","sourceNew":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n  }\n\n","sourceOld":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","sourceNew":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n  }\n\n","sourceOld":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","sourceNew":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","sourceNew":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","sourceNew":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","sourceNew":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    //nocommit pass IOContext in via ctor!\n    out = dir.createOutput(fileName, IOContext.DEFAULT);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6f9be74ca7baaef11857ad002cad40419979516","date":1309449808,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String,IOContext).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","sourceNew":"  public MockSingleIntIndexOutput(Directory dir, String fileName, IOContext context) throws IOException {\n    out = dir.createOutput(fileName, context);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    //nocommit pass IOContext in via ctor!\n    out = dir.createOutput(fileName, IOContext.DEFAULT);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String,IOContext).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","sourceNew":"  public MockSingleIntIndexOutput(Directory dir, String fileName, IOContext context) throws IOException {\n    out = dir.createOutput(fileName, context);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String,IOContext).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/mocksep/MockSingleIntIndexOutput#MockSingleIntIndexOutput(Directory,String).mjava","sourceNew":"  public MockSingleIntIndexOutput(Directory dir, String fileName, IOContext context) throws IOException {\n    out = dir.createOutput(fileName, context);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  public MockSingleIntIndexOutput(Directory dir, String fileName) throws IOException {\n    out = dir.createOutput(fileName);\n    boolean success = false;\n    try {\n      CodecUtil.writeHeader(out, CODEC, VERSION_CURRENT);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","efb7a19703a037c29e30440260d393500febc1f4"],"efb7a19703a037c29e30440260d393500febc1f4":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6f9be74ca7baaef11857ad002cad40419979516":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["efb7a19703a037c29e30440260d393500febc1f4"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["efb7a19703a037c29e30440260d393500febc1f4","b6f9be74ca7baaef11857ad002cad40419979516"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["29ef99d61cda9641b6250bf9567329a6e65f901d","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"efb7a19703a037c29e30440260d393500febc1f4":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","ddc4c914be86e34b54f70023f45a60fa7f04e929","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"b6f9be74ca7baaef11857ad002cad40419979516":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["b6f9be74ca7baaef11857ad002cad40419979516"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","efb7a19703a037c29e30440260d393500febc1f4","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}