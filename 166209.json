{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestFlattenGraphFilter#testHoleUnderSyn().mjava","commits":[{"id":"24a98f5fdd23e04f85819dbc63b47a12f7c44311","date":1482439157,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestFlattenGraphFilter#testHoleUnderSyn().mjava","pathOld":"/dev/null","sourceNew":"  public void testHoleUnderSyn() throws Exception {\n    // Tests a StopFilter after SynFilter where a stopword in a syn is removed\n    //\n    //   wizard of oz -> woz syn, but then \"of\" becomes a hole\n\n    TokenStream in = new CannedTokenStream(0, 12, new Token[] {\n        token(\"wizard\", 1, 1, 0, 6),\n        token(\"woz\", 0, 3, 0, 12),\n        token(\"oz\", 2, 1, 10, 12),\n      });\n\n\n    TokenStream out = new FlattenGraphFilter(in);\n\n    assertTokenStreamContents(out,\n                              new String[] {\"wizard\", \"woz\", \"oz\"},\n                              new int[] {0, 0, 10},\n                              new int[] {6, 12, 12},\n                              new int[] {1, 0, 2},\n                              new int[] {1, 3, 1},\n                              12);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestFlattenGraphFilter#testHoleUnderSyn().mjava","pathOld":"/dev/null","sourceNew":"  public void testHoleUnderSyn() throws Exception {\n    // Tests a StopFilter after SynFilter where a stopword in a syn is removed\n    //\n    //   wizard of oz -> woz syn, but then \"of\" becomes a hole\n\n    TokenStream in = new CannedTokenStream(0, 12, new Token[] {\n        token(\"wizard\", 1, 1, 0, 6),\n        token(\"woz\", 0, 3, 0, 12),\n        token(\"oz\", 2, 1, 10, 12),\n      });\n\n\n    TokenStream out = new FlattenGraphFilter(in);\n\n    assertTokenStreamContents(out,\n                              new String[] {\"wizard\", \"woz\", \"oz\"},\n                              new int[] {0, 0, 10},\n                              new int[] {6, 12, 12},\n                              new int[] {1, 0, 2},\n                              new int[] {1, 3, 1},\n                              12);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"098528909bb70948871fd7ed865fafb87ed73964","date":1484667487,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter#testHoleUnderSyn().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestFlattenGraphFilter#testHoleUnderSyn().mjava","sourceNew":"  public void testHoleUnderSyn() throws Exception {\n    // Tests a StopFilter after SynFilter where a stopword in a syn is removed\n    //\n    //   wizard of oz -> woz syn, but then \"of\" becomes a hole\n\n    TokenStream in = new CannedTokenStream(0, 12, new Token[] {\n        token(\"wizard\", 1, 1, 0, 6),\n        token(\"woz\", 0, 3, 0, 12),\n        token(\"oz\", 2, 1, 10, 12),\n      });\n\n\n    TokenStream out = new FlattenGraphFilter(in);\n\n    assertTokenStreamContents(out,\n                              new String[] {\"wizard\", \"woz\", \"oz\"},\n                              new int[] {0, 0, 10},\n                              new int[] {6, 12, 12},\n                              new int[] {1, 0, 2},\n                              new int[] {1, 3, 1},\n                              12);\n  }\n\n","sourceOld":"  public void testHoleUnderSyn() throws Exception {\n    // Tests a StopFilter after SynFilter where a stopword in a syn is removed\n    //\n    //   wizard of oz -> woz syn, but then \"of\" becomes a hole\n\n    TokenStream in = new CannedTokenStream(0, 12, new Token[] {\n        token(\"wizard\", 1, 1, 0, 6),\n        token(\"woz\", 0, 3, 0, 12),\n        token(\"oz\", 2, 1, 10, 12),\n      });\n\n\n    TokenStream out = new FlattenGraphFilter(in);\n\n    assertTokenStreamContents(out,\n                              new String[] {\"wizard\", \"woz\", \"oz\"},\n                              new int[] {0, 0, 10},\n                              new int[] {6, 12, 12},\n                              new int[] {1, 0, 2},\n                              new int[] {1, 3, 1},\n                              12);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter#testHoleUnderSyn().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestFlattenGraphFilter#testHoleUnderSyn().mjava","sourceNew":"  public void testHoleUnderSyn() throws Exception {\n    // Tests a StopFilter after SynFilter where a stopword in a syn is removed\n    //\n    //   wizard of oz -> woz syn, but then \"of\" becomes a hole\n\n    TokenStream in = new CannedTokenStream(0, 12, new Token[] {\n        token(\"wizard\", 1, 1, 0, 6),\n        token(\"woz\", 0, 3, 0, 12),\n        token(\"oz\", 2, 1, 10, 12),\n      });\n\n\n    TokenStream out = new FlattenGraphFilter(in);\n\n    assertTokenStreamContents(out,\n                              new String[] {\"wizard\", \"woz\", \"oz\"},\n                              new int[] {0, 0, 10},\n                              new int[] {6, 12, 12},\n                              new int[] {1, 0, 2},\n                              new int[] {1, 3, 1},\n                              12);\n  }\n\n","sourceOld":"  public void testHoleUnderSyn() throws Exception {\n    // Tests a StopFilter after SynFilter where a stopword in a syn is removed\n    //\n    //   wizard of oz -> woz syn, but then \"of\" becomes a hole\n\n    TokenStream in = new CannedTokenStream(0, 12, new Token[] {\n        token(\"wizard\", 1, 1, 0, 6),\n        token(\"woz\", 0, 3, 0, 12),\n        token(\"oz\", 2, 1, 10, 12),\n      });\n\n\n    TokenStream out = new FlattenGraphFilter(in);\n\n    assertTokenStreamContents(out,\n                              new String[] {\"wizard\", \"woz\", \"oz\"},\n                              new int[] {0, 0, 10},\n                              new int[] {6, 12, 12},\n                              new int[] {1, 0, 2},\n                              new int[] {1, 3, 1},\n                              12);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"098528909bb70948871fd7ed865fafb87ed73964":["24a98f5fdd23e04f85819dbc63b47a12f7c44311"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"24a98f5fdd23e04f85819dbc63b47a12f7c44311":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["098528909bb70948871fd7ed865fafb87ed73964"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","24a98f5fdd23e04f85819dbc63b47a12f7c44311"],"302d34f2c66e8d489ee13078305c330cbf67b226":["f03e4bed5023ec3ef93a771b8888cae991cf448d","098528909bb70948871fd7ed865fafb87ed73964"]},"commit2Childs":{"098528909bb70948871fd7ed865fafb87ed73964":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["24a98f5fdd23e04f85819dbc63b47a12f7c44311","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"24a98f5fdd23e04f85819dbc63b47a12f7c44311":["098528909bb70948871fd7ed865fafb87ed73964","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["302d34f2c66e8d489ee13078305c330cbf67b226"],"302d34f2c66e8d489ee13078305c330cbf67b226":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}