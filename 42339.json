{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#createDirectory(boolean,String,String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#createDirectory(boolean,String,String).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#createDirectory(boolean,String,String).mjava","sourceNew":"  private Directory createDirectory(boolean eraseIndex, String dirName,\n      String dirParam) throws IOException {\n    if (\"FSDirectory\".equals(config.get(dirParam,\"RAMDirectory\"))) {\n      File workDir = new File(config.get(\"work.dir\",\"work\"));\n      File indexDir = new File(workDir,dirName);\n      if (eraseIndex && indexDir.exists()) {\n        FileUtils.fullyDelete(indexDir);\n      }\n      indexDir.mkdirs();\n      return FSDirectory.open(indexDir);\n    } \n\n    return new RAMDirectory();\n  }\n\n","sourceOld":"  private Directory createDirectory(boolean eraseIndex, String dirName,\n      String dirParam) throws IOException {\n    if (\"FSDirectory\".equals(config.get(dirParam,\"RAMDirectory\"))) {\n      File workDir = new File(config.get(\"work.dir\",\"work\"));\n      File indexDir = new File(workDir,dirName);\n      if (eraseIndex && indexDir.exists()) {\n        FileUtils.fullyDelete(indexDir);\n      }\n      indexDir.mkdirs();\n      return FSDirectory.open(indexDir);\n    } \n\n    return new RAMDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#createDirectory(boolean,String,String).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#createDirectory(boolean,String,String).mjava","sourceNew":"  private Directory createDirectory(boolean eraseIndex, String dirName,\n      String dirParam) throws IOException {\n    if (\"FSDirectory\".equals(config.get(dirParam,\"RAMDirectory\"))) {\n      File workDir = new File(config.get(\"work.dir\",\"work\"));\n      File indexDir = new File(workDir,dirName);\n      if (eraseIndex && indexDir.exists()) {\n        IOUtils.rm(indexDir);\n      }\n      indexDir.mkdirs();\n      return FSDirectory.open(indexDir);\n    } \n\n    return new RAMDirectory();\n  }\n\n","sourceOld":"  private Directory createDirectory(boolean eraseIndex, String dirName,\n      String dirParam) throws IOException {\n    if (\"FSDirectory\".equals(config.get(dirParam,\"RAMDirectory\"))) {\n      File workDir = new File(config.get(\"work.dir\",\"work\"));\n      File indexDir = new File(workDir,dirName);\n      if (eraseIndex && indexDir.exists()) {\n        FileUtils.fullyDelete(indexDir);\n      }\n      indexDir.mkdirs();\n      return FSDirectory.open(indexDir);\n    } \n\n    return new RAMDirectory();\n  }\n\n","bugFix":["b5b25dd09e9e2bbeca84aceaf74e1df8ad1bff80"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#createDirectory(boolean,String,String).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#createDirectory(boolean,String,String).mjava","sourceNew":"  private Directory createDirectory(boolean eraseIndex, String dirName,\n      String dirParam) throws IOException {\n    if (\"FSDirectory\".equals(config.get(dirParam,\"RAMDirectory\"))) {\n      Path workDir = Paths.get(config.get(\"work.dir\",\"work\"));\n      Path indexDir = workDir.resolve(dirName);\n      if (eraseIndex && Files.exists(indexDir)) {\n        IOUtils.rm(indexDir);\n      }\n      Files.createDirectories(indexDir);\n      return FSDirectory.open(indexDir);\n    } \n\n    return new RAMDirectory();\n  }\n\n","sourceOld":"  private Directory createDirectory(boolean eraseIndex, String dirName,\n      String dirParam) throws IOException {\n    if (\"FSDirectory\".equals(config.get(dirParam,\"RAMDirectory\"))) {\n      File workDir = new File(config.get(\"work.dir\",\"work\"));\n      File indexDir = new File(workDir,dirName);\n      if (eraseIndex && indexDir.exists()) {\n        IOUtils.rm(indexDir);\n      }\n      indexDir.mkdirs();\n      return FSDirectory.open(indexDir);\n    } \n\n    return new RAMDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#createDirectory(boolean,String,String).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData#createDirectory(boolean,String,String).mjava","sourceNew":"  private Directory createDirectory(boolean eraseIndex, String dirName,\n      String dirParam) throws IOException {\n    String dirImpl = config.get(dirParam, DEFAULT_DIRECTORY);\n    if (\"FSDirectory\".equals(dirImpl)) {\n      Path workDir = Paths.get(config.get(\"work.dir\", \"work\"));\n      Path indexDir = workDir.resolve(dirName);\n      if (eraseIndex && Files.exists(indexDir)) {\n        IOUtils.rm(indexDir);\n      }\n      Files.createDirectories(indexDir);\n      return FSDirectory.open(indexDir);\n    }\n\n    if (\"RAMDirectory\".equals(dirImpl)) {\n      throw new IOException(\"RAMDirectory has been removed, use ByteBuffersDirectory.\");\n    }\n\n    if (\"ByteBuffersDirectory\".equals(dirImpl)) {\n      return new ByteBuffersDirectory();\n    }\n\n    throw new IOException(\"Directory type not supported: \" + dirImpl);\n  }\n\n","sourceOld":"  private Directory createDirectory(boolean eraseIndex, String dirName,\n      String dirParam) throws IOException {\n    if (\"FSDirectory\".equals(config.get(dirParam,\"RAMDirectory\"))) {\n      Path workDir = Paths.get(config.get(\"work.dir\",\"work\"));\n      Path indexDir = workDir.resolve(dirName);\n      if (eraseIndex && Files.exists(indexDir)) {\n        IOUtils.rm(indexDir);\n      }\n      Files.createDirectories(indexDir);\n      return FSDirectory.open(indexDir);\n    } \n\n    return new RAMDirectory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d77dafd89756a5161d244985903e3487ca109182":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4abec28b874149a7223e32cc7a01704c27790de":["d77dafd89756a5161d244985903e3487ca109182"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}