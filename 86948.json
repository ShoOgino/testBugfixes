{"path":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/File#delete(Db,Db,DbTxn,int).mjava","commits":[{"id":"b7093bce16e678ecaf87612e82980c6a5959d84d","date":1086082023,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/File#delete(Db,Db,DbTxn,int).mjava","pathOld":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/File#delete(Db,Db,DbTxn).mjava","sourceNew":"    protected void delete(Db files, Db blocks, DbTxn txn, int flags)\n        throws IOException\n    {\n        if (!exists(files, txn, flags))\n            throw new IOException(\"File does not exist: \" + getName());\n\n        Dbc cursor = null;\n\n        try {\n            try {\n                byte[] bytes = getKey();\n                int ulen = bytes.length + 8;\n                byte[] cursorBytes = new byte[ulen];\n                Dbt cursorKey = new Dbt(cursorBytes);\n                Dbt cursorData = new Dbt(null);\n\n                System.arraycopy(bytes, 0, cursorBytes, 0, bytes.length);\n                cursorKey.setUserBufferLength(ulen);\n                cursorKey.setFlags(Db.DB_DBT_USERMEM);\n                cursorData.setPartialLength(0);\n                cursorData.setFlags(Db.DB_DBT_PARTIAL);\n\n                cursor = blocks.cursor(txn, flags);\n\n                if (cursor.get(cursorKey, cursorData,\n                               Db.DB_SET_RANGE | flags) != Db.DB_NOTFOUND)\n                {\n                    cursor.delete(0);\n\n                    while (cursor.get(cursorKey, cursorData,\n                                      Db.DB_NEXT | flags) != Db.DB_NOTFOUND) {\n                        for (int i = 0; i < bytes.length; i++)\n                            if (bytes[i] != cursorBytes[i])\n                                return;\n\n                        cursor.delete(0);\n                    }\n                }\n\n                files.delete(txn, key, 0);\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DbException e) {\n            throw new IOException(e.getMessage());\n        }\n    }\n\n","sourceOld":"    protected void delete(Db files, Db blocks, DbTxn txn)\n        throws IOException\n    {\n        if (!exists(files, txn))\n            throw new IOException(\"File does not exist: \" + getName());\n\n        Dbc cursor = null;\n\n        try {\n            try {\n                byte[] bytes = getKey();\n                int ulen = bytes.length + 8;\n                byte[] cursorBytes = new byte[ulen];\n                Dbt cursorKey = new Dbt(cursorBytes);\n                Dbt cursorData = new Dbt(null);\n\n                System.arraycopy(bytes, 0, cursorBytes, 0, bytes.length);\n                cursorKey.setUserBufferLength(ulen);\n                cursorKey.setFlags(Db.DB_DBT_USERMEM);\n                cursorData.setPartialLength(0);\n                cursorData.setFlags(Db.DB_DBT_PARTIAL);\n\n                cursor = blocks.cursor(txn, 0);\n\n                if (cursor.get(cursorKey, cursorData,\n                               Db.DB_SET_RANGE) != Db.DB_NOTFOUND)\n                {\n                    cursor.delete(0);\n\n                    while (cursor.get(cursorKey, cursorData, Db.DB_NEXT) !=\n                           Db.DB_NOTFOUND) {\n                        for (int i = 0; i < bytes.length; i++)\n                            if (bytes[i] != cursorBytes[i])\n                                return;\n\n                        cursor.delete(0);\n                    }\n                }\n\n                files.delete(txn, key, 0);\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DbException e) {\n            throw new IOException(e.getMessage());\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c8489412ba906cba51f75c43ba70964deeab6fb","date":1106057469,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/File#delete(Db,Db,DbTxn,int).mjava","pathOld":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/File#delete(Db,Db,DbTxn,int).mjava","sourceNew":"    protected void delete(Db files, Db blocks, DbTxn txn, int flags)\n        throws IOException\n    {\n        if (!exists(files, txn, flags))\n            throw new IOException(\"File does not exist: \" + getName());\n\n        Dbc cursor = null;\n\n        try {\n            try {\n                byte[] bytes = getKey();\n                int ulen = bytes.length + 8;\n                byte[] cursorBytes = new byte[ulen];\n                DatabaseEntry cursorKey = new DatabaseEntry(cursorBytes);\n                DatabaseEntry cursorData = new DatabaseEntry(null);\n\n                System.arraycopy(bytes, 0, cursorBytes, 0, bytes.length);\n                cursorKey.setUserBuffer(ulen, true);\n                cursorData.setPartial(true);\n\n                cursor = blocks.cursor(txn, flags);\n\n                if (cursor.get(cursorKey, cursorData,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    cursor.del(0);\n\n                    while (cursor.get(cursorKey, cursorData,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND) {\n                        for (int i = 0; i < bytes.length; i++)\n                            if (bytes[i] != cursorBytes[i])\n                                return;\n\n                        cursor.del(0);\n                    }\n                }\n\n                files.del(txn, key, 0);\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n    }\n\n","sourceOld":"    protected void delete(Db files, Db blocks, DbTxn txn, int flags)\n        throws IOException\n    {\n        if (!exists(files, txn, flags))\n            throw new IOException(\"File does not exist: \" + getName());\n\n        Dbc cursor = null;\n\n        try {\n            try {\n                byte[] bytes = getKey();\n                int ulen = bytes.length + 8;\n                byte[] cursorBytes = new byte[ulen];\n                Dbt cursorKey = new Dbt(cursorBytes);\n                Dbt cursorData = new Dbt(null);\n\n                System.arraycopy(bytes, 0, cursorBytes, 0, bytes.length);\n                cursorKey.setUserBufferLength(ulen);\n                cursorKey.setFlags(Db.DB_DBT_USERMEM);\n                cursorData.setPartialLength(0);\n                cursorData.setFlags(Db.DB_DBT_PARTIAL);\n\n                cursor = blocks.cursor(txn, flags);\n\n                if (cursor.get(cursorKey, cursorData,\n                               Db.DB_SET_RANGE | flags) != Db.DB_NOTFOUND)\n                {\n                    cursor.delete(0);\n\n                    while (cursor.get(cursorKey, cursorData,\n                                      Db.DB_NEXT | flags) != Db.DB_NOTFOUND) {\n                        for (int i = 0; i < bytes.length; i++)\n                            if (bytes[i] != cursorBytes[i])\n                                return;\n\n                        cursor.delete(0);\n                    }\n                }\n\n                files.delete(txn, key, 0);\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DbException e) {\n            throw new IOException(e.getMessage());\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/db/src/java/org/apache/lucene/store/db/File#delete(Db,Db,DbTxn,int).mjava","pathOld":"sandbox/contributions/db/src/java/org/apache/lucene/store/db/File#delete(Db,Db,DbTxn,int).mjava","sourceNew":"    protected void delete(Db files, Db blocks, DbTxn txn, int flags)\n        throws IOException\n    {\n        if (!exists(files, txn, flags))\n            throw new IOException(\"File does not exist: \" + getName());\n\n        Dbc cursor = null;\n\n        try {\n            try {\n                byte[] bytes = getKey();\n                int ulen = bytes.length + 8;\n                byte[] cursorBytes = new byte[ulen];\n                DatabaseEntry cursorKey = new DatabaseEntry(cursorBytes);\n                DatabaseEntry cursorData = new DatabaseEntry(null);\n\n                System.arraycopy(bytes, 0, cursorBytes, 0, bytes.length);\n                cursorKey.setUserBuffer(ulen, true);\n                cursorData.setPartial(true);\n\n                cursor = blocks.cursor(txn, flags);\n\n                if (cursor.get(cursorKey, cursorData,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    cursor.del(0);\n\n                    while (cursor.get(cursorKey, cursorData,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND) {\n                        for (int i = 0; i < bytes.length; i++)\n                            if (bytes[i] != cursorBytes[i])\n                                return;\n\n                        cursor.del(0);\n                    }\n                }\n\n                files.del(txn, key, 0);\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n    }\n\n","sourceOld":"    protected void delete(Db files, Db blocks, DbTxn txn, int flags)\n        throws IOException\n    {\n        if (!exists(files, txn, flags))\n            throw new IOException(\"File does not exist: \" + getName());\n\n        Dbc cursor = null;\n\n        try {\n            try {\n                byte[] bytes = getKey();\n                int ulen = bytes.length + 8;\n                byte[] cursorBytes = new byte[ulen];\n                DatabaseEntry cursorKey = new DatabaseEntry(cursorBytes);\n                DatabaseEntry cursorData = new DatabaseEntry(null);\n\n                System.arraycopy(bytes, 0, cursorBytes, 0, bytes.length);\n                cursorKey.setUserBuffer(ulen, true);\n                cursorData.setPartial(true);\n\n                cursor = blocks.cursor(txn, flags);\n\n                if (cursor.get(cursorKey, cursorData,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    cursor.del(0);\n\n                    while (cursor.get(cursorKey, cursorData,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND) {\n                        for (int i = 0; i < bytes.length; i++)\n                            if (bytes[i] != cursorBytes[i])\n                                return;\n\n                        cursor.del(0);\n                    }\n                }\n\n                files.del(txn, key, 0);\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["7c8489412ba906cba51f75c43ba70964deeab6fb"],"7c8489412ba906cba51f75c43ba70964deeab6fb":["b7093bce16e678ecaf87612e82980c6a5959d84d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7093bce16e678ecaf87612e82980c6a5959d84d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c8489412ba906cba51f75c43ba70964deeab6fb":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7093bce16e678ecaf87612e82980c6a5959d84d"],"b7093bce16e678ecaf87612e82980c6a5959d84d":["7c8489412ba906cba51f75c43ba70964deeab6fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}