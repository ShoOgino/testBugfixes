{"path":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","commits":[{"id":"a7883ce738c487c30e4f2583a3edac9ff1e0d6b5","date":1270762689,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      // the reason to expect i + 2 commits is because when IndexWriter is\n      // created it creates a first commit. If this ever changes, then the\n      // expected should be i + 1 (and this comment removed).\n      assertEquals(\"wrong number of commits !\", i + 2, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9","date":1270985469,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      // the reason to expect i + 2 commits is because when IndexWriter is\n      // created it creates a first commit. If this ever changes, then the\n      // expected should be i + 1 (and this comment removed).\n      assertEquals(\"wrong number of commits !\", i + 2, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10","date":1270996866,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      // the reason to expect i + 2 commits is because when IndexWriter is\n      // created it creates a first commit. If this ever changes, then the\n      // expected should be i + 1 (and this comment removed).\n      assertEquals(\"wrong number of commits !\", i + 2, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4","date":1271167458,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      // the reason to expect i + 2 commits is because when IndexWriter is\n      // created it creates a first commit. If this ever changes, then the\n      // expected should be i + 1 (and this comment removed).\n      assertEquals(\"wrong number of commits !\", i + 2, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","bugFix":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(newRandom(),\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(newRandom(),\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(newRandom(),\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(newRandom(),\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, Store.YES, Index.ANALYZED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f9172d6bebb12f0bba2ebb1756779c2f8948ab7e","date":1327848882,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, DirectoryReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, DirectoryReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, IndexReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNoDeletionPolicy#testAllCommitsRemain().mjava","sourceNew":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, DirectoryReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testAllCommitsRemain() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE));\n    for (int i = 0; i < 10; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"c\", \"a\" + i, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n      writer.commit();\n      assertEquals(\"wrong number of commits !\", i + 1, DirectoryReader.listCommits(dir).size());\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["a7883ce738c487c30e4f2583a3edac9ff1e0d6b5"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"f9172d6bebb12f0bba2ebb1756779c2f8948ab7e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["132903c28af3aa6f67284b78de91c0f0a99488c2","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","132903c28af3aa6f67284b78de91c0f0a99488c2"],"a7883ce738c487c30e4f2583a3edac9ff1e0d6b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["1509f151d7692d84fae414b2b799ac06ba60fcb4","f9172d6bebb12f0bba2ebb1756779c2f8948ab7e"],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["132903c28af3aa6f67284b78de91c0f0a99488c2","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f9172d6bebb12f0bba2ebb1756779c2f8948ab7e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"a7883ce738c487c30e4f2583a3edac9ff1e0d6b5":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["d572389229127c297dd1fa5ce4758e1cec41e799"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7883ce738c487c30e4f2583a3edac9ff1e0d6b5"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f9172d6bebb12f0bba2ebb1756779c2f8948ab7e","5cab9a86bd67202d20b6adc463008c8e982b070a"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}