{"path":"solr/core/src/java/org/apache/solr/util/StartupLoggingUtils#shutdown().mjava","commits":[{"id":"5832050525b97d61021a45dac2330a707639600d","date":1550867222,"type":0,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/StartupLoggingUtils#shutdown().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Perhaps odd to put in startup utils, but this is where the logging-init code is so it seems logical to put the\n   * shutdown here too.\n   *\n   * Tests are particularly sensitive to this call or the object release tracker will report \"lmax.disruptor\" not\n   * terminating when asynch logging (new default as of 8.1) is enabled.\n   *\n   *\n   */\n  @SuppressForbidden(reason = \"Legitimate log4j2 access\")\n  public static void shutdown() {\n    if (!isLog4jActive()) {\n      logNotSupported(\"Not running log4j2, could not call shutdown for async logging.\");\n      return;\n    }\n    LogManager.shutdown(true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ccc9edc658dd2fd7ce27c370d93e9f4fe19004bd","date":1551030604,"type":3,"author":"erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/StartupLoggingUtils#shutdown().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/StartupLoggingUtils#shutdown().mjava","sourceNew":"  /**\n   * Perhaps odd to put in startup utils, but this is where the logging-init code is so it seems logical to put the\n   * shutdown here too.\n   *\n   * Tests are particularly sensitive to this call or the object release tracker will report \"lmax.disruptor\" not\n   * terminating when asynch logging (new default as of 8.1) is enabled.\n   *\n   *\n   */\n  @SuppressForbidden(reason = \"Legitimate log4j2 access\")\n  public static void shutdown() {\n\n//    if (!isLog4jActive()) {\n//      logNotSupported(\"Not running log4j2, could not call shutdown for async logging.\");\n//      return;\n//    }\n//    LogManager.shutdown(true);\n  }\n\n","sourceOld":"  /**\n   * Perhaps odd to put in startup utils, but this is where the logging-init code is so it seems logical to put the\n   * shutdown here too.\n   *\n   * Tests are particularly sensitive to this call or the object release tracker will report \"lmax.disruptor\" not\n   * terminating when asynch logging (new default as of 8.1) is enabled.\n   *\n   *\n   */\n  @SuppressForbidden(reason = \"Legitimate log4j2 access\")\n  public static void shutdown() {\n    if (!isLog4jActive()) {\n      logNotSupported(\"Not running log4j2, could not call shutdown for async logging.\");\n      return;\n    }\n    LogManager.shutdown(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d2d6c361b65277d72b2f3dd0f83b9721875e6b4","date":1551083645,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/StartupLoggingUtils#shutdown().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Perhaps odd to put in startup utils, but this is where the logging-init code is so it seems logical to put the\n   * shutdown here too.\n   *\n   * Tests are particularly sensitive to this call or the object release tracker will report \"lmax.disruptor\" not\n   * terminating when asynch logging (new default as of 8.1) is enabled.\n   *\n   *\n   */\n  @SuppressForbidden(reason = \"Legitimate log4j2 access\")\n  public static void shutdown() {\n\n//    if (!isLog4jActive()) {\n//      logNotSupported(\"Not running log4j2, could not call shutdown for async logging.\");\n//      return;\n//    }\n//    LogManager.shutdown(true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e830a58e90e13d5e4830bb37fcf4a6c065293df","date":1551823836,"type":3,"author":"erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/StartupLoggingUtils#shutdown().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/StartupLoggingUtils#shutdown().mjava","sourceNew":"  /**\n   * Perhaps odd to put in startup utils, but this is where the logging-init code is so it seems logical to put the\n   * shutdown here too.\n   *\n   * Tests are particularly sensitive to this call or the object release tracker will report \"lmax.disruptor\" not\n   * terminating when asynch logging (new default as of 8.1) is enabled.\n   *\n   *\n   */\n  @SuppressForbidden(reason = \"Legitimate log4j2 access\")\n  public static void shutdown() {\n    if (!isLog4jActive()) {\n      logNotSupported(\"Not running log4j2, could not call shutdown for async logging.\");\n      return;\n    }\n    LogManager.shutdown(true);\n  }\n\n","sourceOld":"  /**\n   * Perhaps odd to put in startup utils, but this is where the logging-init code is so it seems logical to put the\n   * shutdown here too.\n   *\n   * Tests are particularly sensitive to this call or the object release tracker will report \"lmax.disruptor\" not\n   * terminating when asynch logging (new default as of 8.1) is enabled.\n   *\n   *\n   */\n  @SuppressForbidden(reason = \"Legitimate log4j2 access\")\n  public static void shutdown() {\n\n//    if (!isLog4jActive()) {\n//      logNotSupported(\"Not running log4j2, could not call shutdown for async logging.\");\n//      return;\n//    }\n//    LogManager.shutdown(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"692408ae18c2ef033137a2452cfd345006469088","date":1552935159,"type":3,"author":"erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/StartupLoggingUtils#shutdown().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/StartupLoggingUtils#shutdown().mjava","sourceNew":"  /**\n   * Perhaps odd to put in startup utils, but this is where the logging-init code is so it seems logical to put the\n   * shutdown here too.\n   *\n   * Tests are particularly sensitive to this call or the object release tracker will report \"lmax.disruptor\" not\n   * terminating when asynch logging (new default as of 8.1) is enabled.\n   *\n   * Expert, there are rarely good reasons for this to be called outside of the test framework. If you are tempted to\n   * call this for running Solr, you should probably be using synchronous logging.\n   */\n  @SuppressForbidden(reason = \"Legitimate log4j2 access\")\n  public static void shutdown() {\n    if (!isLog4jActive()) {\n      logNotSupported(\"Not running log4j2, could not call shutdown for async logging.\");\n      return;\n    }\n    flushAllLoggers();\n    LogManager.shutdown(true);\n  }\n\n","sourceOld":"  /**\n   * Perhaps odd to put in startup utils, but this is where the logging-init code is so it seems logical to put the\n   * shutdown here too.\n   *\n   * Tests are particularly sensitive to this call or the object release tracker will report \"lmax.disruptor\" not\n   * terminating when asynch logging (new default as of 8.1) is enabled.\n   *\n   *\n   */\n  @SuppressForbidden(reason = \"Legitimate log4j2 access\")\n  public static void shutdown() {\n    if (!isLog4jActive()) {\n      logNotSupported(\"Not running log4j2, could not call shutdown for async logging.\");\n      return;\n    }\n    LogManager.shutdown(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"692408ae18c2ef033137a2452cfd345006469088":["2e830a58e90e13d5e4830bb37fcf4a6c065293df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ccc9edc658dd2fd7ce27c370d93e9f4fe19004bd":["5832050525b97d61021a45dac2330a707639600d"],"2e830a58e90e13d5e4830bb37fcf4a6c065293df":["0d2d6c361b65277d72b2f3dd0f83b9721875e6b4"],"0d2d6c361b65277d72b2f3dd0f83b9721875e6b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ccc9edc658dd2fd7ce27c370d93e9f4fe19004bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["692408ae18c2ef033137a2452cfd345006469088"],"5832050525b97d61021a45dac2330a707639600d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"692408ae18c2ef033137a2452cfd345006469088":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d2d6c361b65277d72b2f3dd0f83b9721875e6b4","5832050525b97d61021a45dac2330a707639600d"],"ccc9edc658dd2fd7ce27c370d93e9f4fe19004bd":["0d2d6c361b65277d72b2f3dd0f83b9721875e6b4"],"2e830a58e90e13d5e4830bb37fcf4a6c065293df":["692408ae18c2ef033137a2452cfd345006469088"],"0d2d6c361b65277d72b2f3dd0f83b9721875e6b4":["2e830a58e90e13d5e4830bb37fcf4a6c065293df"],"5832050525b97d61021a45dac2330a707639600d":["ccc9edc658dd2fd7ce27c370d93e9f4fe19004bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}