{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsAndPositionsEnum#nextPosition().mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsAndPositionsEnum#nextPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsAndPositionsEnum#nextPosition().mjava","sourceNew":"    @Override\n    public int nextPosition() {\n      //System.out.println(\"    nextPos storePayloads=\" + storePayloads + \" this=\" + this);\n      assert posPending > 0;\n      posPending--;\n      if (!storePayloads) {\n        pos += in.readVInt();\n      } else {\n        final int code = in.readVInt();\n        pos += code >>> 1;\n        if ((code & 1) != 0) {\n          payloadLength = in.readVInt();\n          //System.out.println(\"      new payloadLen=\" + payloadLength);\n          //} else {\n          //System.out.println(\"      same payloadLen=\" + payloadLength);\n        }\n      }\n      \n      if (storeOffsets) {\n        int offsetCode = in.readVInt();\n        if ((offsetCode & 1) != 0) {\n          // new offset length\n          offsetLength = in.readVInt();\n        }\n        startOffset += offsetCode >>> 1;\n      }\n      \n      if (storePayloads) {\n        payload.offset = in.getPosition();\n        in.skipBytes(payloadLength);\n        payload.length = payloadLength;\n      }\n\n      //System.out.println(\"      pos=\" + pos + \" payload=\" + payload + \" fp=\" + in.getPosition());\n      return pos;\n    }\n\n","sourceOld":"    @Override\n    public int nextPosition() {\n      //System.out.println(\"    nextPos storePayloads=\" + storePayloads + \" this=\" + this);\n      assert posPending > 0;\n      posPending--;\n      if (!storePayloads) {\n        pos += in.readVInt();\n      } else {\n        final int code = in.readVInt();\n        pos += code >>> 1;\n        if ((code & 1) != 0) {\n          payloadLength = in.readVInt();\n          //System.out.println(\"      new payloadLen=\" + payloadLength);\n          //} else {\n          //System.out.println(\"      same payloadLen=\" + payloadLength);\n        }\n      }\n      \n      if (storeOffsets) {\n        int offsetCode = in.readVInt();\n        if ((offsetCode & 1) != 0) {\n          // new offset length\n          offsetLength = in.readVInt();\n        }\n        startOffset += offsetCode >>> 1;\n      }\n      \n      if (storePayloads) {\n        payload.offset = in.getPosition();\n        in.skipBytes(payloadLength);\n        payload.length = payloadLength;\n      }\n\n      //System.out.println(\"      pos=\" + pos + \" payload=\" + payload + \" fp=\" + in.getPosition());\n      return pos;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTPostingsEnum#nextPosition().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTDocsAndPositionsEnum#nextPosition().mjava","sourceNew":"    @Override\n    public int nextPosition() {\n      //System.out.println(\"    nextPos storePayloads=\" + storePayloads + \" this=\" + this);\n      assert posPending > 0;\n      posPending--;\n      if (!storePayloads) {\n        pos += in.readVInt();\n      } else {\n        final int code = in.readVInt();\n        pos += code >>> 1;\n        if ((code & 1) != 0) {\n          payloadLength = in.readVInt();\n          //System.out.println(\"      new payloadLen=\" + payloadLength);\n          //} else {\n          //System.out.println(\"      same payloadLen=\" + payloadLength);\n        }\n      }\n      \n      if (storeOffsets) {\n        int offsetCode = in.readVInt();\n        if ((offsetCode & 1) != 0) {\n          // new offset length\n          offsetLength = in.readVInt();\n        }\n        startOffset += offsetCode >>> 1;\n      }\n      \n      if (storePayloads) {\n        payload.offset = in.getPosition();\n        in.skipBytes(payloadLength);\n        payload.length = payloadLength;\n      }\n\n      //System.out.println(\"      pos=\" + pos + \" payload=\" + payload + \" fp=\" + in.getPosition());\n      return pos;\n    }\n\n","sourceOld":"    @Override\n    public int nextPosition() {\n      //System.out.println(\"    nextPos storePayloads=\" + storePayloads + \" this=\" + this);\n      assert posPending > 0;\n      posPending--;\n      if (!storePayloads) {\n        pos += in.readVInt();\n      } else {\n        final int code = in.readVInt();\n        pos += code >>> 1;\n        if ((code & 1) != 0) {\n          payloadLength = in.readVInt();\n          //System.out.println(\"      new payloadLen=\" + payloadLength);\n          //} else {\n          //System.out.println(\"      same payloadLen=\" + payloadLength);\n        }\n      }\n      \n      if (storeOffsets) {\n        int offsetCode = in.readVInt();\n        if ((offsetCode & 1) != 0) {\n          // new offset length\n          offsetLength = in.readVInt();\n        }\n        startOffset += offsetCode >>> 1;\n      }\n      \n      if (storePayloads) {\n        payload.offset = in.getPosition();\n        in.skipBytes(payloadLength);\n        payload.length = payloadLength;\n      }\n\n      //System.out.println(\"      pos=\" + pos + \" payload=\" + payload + \" fp=\" + in.getPosition());\n      return pos;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51f5280f31484820499077f41fcdfe92d527d9dc"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["51f5280f31484820499077f41fcdfe92d527d9dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"51f5280f31484820499077f41fcdfe92d527d9dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}