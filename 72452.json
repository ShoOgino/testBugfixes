{"path":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#createLockFactory(String).mjava","commits":[{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#createLockFactory(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#createLockFactory(String,String).mjava","sourceNew":"  @Override\n  protected LockFactory createLockFactory(String rawLockType) throws IOException {\n    if (!(rawLockType == null || \"single\".equalsIgnoreCase(rawLockType.trim()))) {\n      throw new SolrException(ErrorCode.FORBIDDEN,\n          \"RAMDirectory can only be used with the 'single' lock factory type.\");\n    }\n    return new SingleInstanceLockFactory();\n  }\n\n","sourceOld":"  @Override\n  protected LockFactory createLockFactory(String lockPath, String rawLockType) throws IOException {\n    if (!(rawLockType == null || \"single\".equalsIgnoreCase(rawLockType.trim()))) {\n      throw new SolrException(ErrorCode.FORBIDDEN,\n          \"RAMDirectory can only be used with the 'single' lock factory type.\");\n    }\n    return new SingleInstanceLockFactory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b3091e174423680e7d6cce5f858d48cd5410bcf","date":1452177279,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#createLockFactory(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#createLockFactory(String).mjava","sourceNew":"  @Override\n  protected LockFactory createLockFactory(String rawLockType) throws IOException {\n    if (!(rawLockType == null || DirectoryFactory.LOCK_TYPE_SINGLE.equalsIgnoreCase(rawLockType.trim()))) {\n      throw new SolrException(ErrorCode.FORBIDDEN,\n          \"RAMDirectory can only be used with the '\"+DirectoryFactory.LOCK_TYPE_SINGLE+\"' lock factory type.\");\n    }\n    return new SingleInstanceLockFactory();\n  }\n\n","sourceOld":"  @Override\n  protected LockFactory createLockFactory(String rawLockType) throws IOException {\n    if (!(rawLockType == null || \"single\".equalsIgnoreCase(rawLockType.trim()))) {\n      throw new SolrException(ErrorCode.FORBIDDEN,\n          \"RAMDirectory can only be used with the 'single' lock factory type.\");\n    }\n    return new SingleInstanceLockFactory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#createLockFactory(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#createLockFactory(String).mjava","sourceNew":"  @Override\n  protected LockFactory createLockFactory(String rawLockType) throws IOException {\n    if (!(rawLockType == null || DirectoryFactory.LOCK_TYPE_SINGLE.equalsIgnoreCase(rawLockType.trim()))) {\n      throw new SolrException(ErrorCode.FORBIDDEN,\n          \"RAMDirectory can only be used with the '\" +\n              DirectoryFactory.LOCK_TYPE_SINGLE+\"' lock factory type.\");\n    }\n    return new SingleInstanceLockFactory();\n  }\n\n","sourceOld":"  @Override\n  protected LockFactory createLockFactory(String rawLockType) throws IOException {\n    if (!(rawLockType == null || DirectoryFactory.LOCK_TYPE_SINGLE.equalsIgnoreCase(rawLockType.trim()))) {\n      throw new SolrException(ErrorCode.FORBIDDEN,\n          \"RAMDirectory can only be used with the '\"+DirectoryFactory.LOCK_TYPE_SINGLE+\"' lock factory type.\");\n    }\n    return new SingleInstanceLockFactory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"285cdc737de75b7cc7c284a156b20214deb67bca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d77dafd89756a5161d244985903e3487ca109182":["2b3091e174423680e7d6cce5f858d48cd5410bcf"],"2b3091e174423680e7d6cce5f858d48cd5410bcf":["285cdc737de75b7cc7c284a156b20214deb67bca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"285cdc737de75b7cc7c284a156b20214deb67bca":["2b3091e174423680e7d6cce5f858d48cd5410bcf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["285cdc737de75b7cc7c284a156b20214deb67bca"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2b3091e174423680e7d6cce5f858d48cd5410bcf":["d77dafd89756a5161d244985903e3487ca109182"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}