{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","sourceNew":"  public void testNotInitialized() throws Exception {\n    final NumericTokenStream stream=new NumericTokenStream();\n    \n    try {\n      stream.reset();\n      fail(\"reset() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n\n    try {\n      stream.incrementToken();\n      fail(\"incrementToken() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n  }\n\n","sourceOld":"  public void testNotInitialized() throws Exception {\n    final NumericTokenStream stream=new NumericTokenStream();\n    \n    try {\n      stream.reset();\n      fail(\"reset() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n\n    try {\n      stream.incrementToken();\n      fail(\"incrementToken() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824040d7a4884dc1ce62a8c60d0c34571701d35","date":1420895330,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","sourceNew":"  public void testNotInitialized() throws Exception {\n    final NumericTokenStream stream=new NumericTokenStream();\n    \n    try {\n      stream.reset();\n      fail(\"reset() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n\n    try {\n      stream.incrementToken();\n      fail(\"incrementToken() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n    \n    stream.close();\n  }\n\n","sourceOld":"  public void testNotInitialized() throws Exception {\n    final NumericTokenStream stream=new NumericTokenStream();\n    \n    try {\n      stream.reset();\n      fail(\"reset() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n\n    try {\n      stream.incrementToken();\n      fail(\"incrementToken() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","sourceNew":"  public void testNotInitialized() throws Exception {\n    final LegacyNumericTokenStream stream=new LegacyNumericTokenStream();\n    \n    try {\n      stream.reset();\n      fail(\"reset() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n\n    try {\n      stream.incrementToken();\n      fail(\"incrementToken() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n    \n    stream.close();\n  }\n\n","sourceOld":"  public void testNotInitialized() throws Exception {\n    final NumericTokenStream stream=new NumericTokenStream();\n    \n    try {\n      stream.reset();\n      fail(\"reset() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n\n    try {\n      stream.incrementToken();\n      fail(\"incrementToken() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n    \n    stream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","sourceNew":"  public void testNotInitialized() throws Exception {\n    final LegacyNumericTokenStream stream=new LegacyNumericTokenStream();\n    \n    expectThrows(IllegalStateException.class, () -> {\n      stream.reset();\n    });\n\n    expectThrows(IllegalStateException.class, () -> {\n      stream.incrementToken();\n    });\n    \n    stream.close();\n  }\n\n","sourceOld":"  public void testNotInitialized() throws Exception {\n    final LegacyNumericTokenStream stream=new LegacyNumericTokenStream();\n    \n    try {\n      stream.reset();\n      fail(\"reset() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n\n    try {\n      stream.incrementToken();\n      fail(\"incrementToken() should not succeed.\");\n    } catch (IllegalStateException e) {\n      // pass\n    }\n    \n    stream.close();\n  }\n\n","bugFix":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af5ba0166322092193d4c29880b0f7670fc7ca0","date":1471440525,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/legacy/TestNumericTokenStream#testNotInitialized().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","sourceNew":"  public void testNotInitialized() throws Exception {\n    final LegacyNumericTokenStream stream=new LegacyNumericTokenStream();\n    \n    expectThrows(IllegalStateException.class, () -> {\n      stream.reset();\n    });\n\n    expectThrows(IllegalStateException.class, () -> {\n      stream.incrementToken();\n    });\n    \n    stream.close();\n  }\n\n","sourceOld":"  public void testNotInitialized() throws Exception {\n    final LegacyNumericTokenStream stream=new LegacyNumericTokenStream();\n    \n    expectThrows(IllegalStateException.class, () -> {\n      stream.reset();\n    });\n\n    expectThrows(IllegalStateException.class, () -> {\n      stream.incrementToken();\n    });\n    \n    stream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/legacy/TestNumericTokenStream#testNotInitialized().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","sourceNew":"  public void testNotInitialized() throws Exception {\n    final LegacyNumericTokenStream stream=new LegacyNumericTokenStream();\n    \n    expectThrows(IllegalStateException.class, () -> {\n      stream.reset();\n    });\n\n    expectThrows(IllegalStateException.class, () -> {\n      stream.incrementToken();\n    });\n    \n    stream.close();\n  }\n\n","sourceOld":"  public void testNotInitialized() throws Exception {\n    final LegacyNumericTokenStream stream=new LegacyNumericTokenStream();\n    \n    expectThrows(IllegalStateException.class, () -> {\n      stream.reset();\n    });\n\n    expectThrows(IllegalStateException.class, () -> {\n      stream.incrementToken();\n    });\n    \n    stream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/legacy/TestNumericTokenStream#testNotInitialized().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","sourceNew":"  public void testNotInitialized() throws Exception {\n    final LegacyNumericTokenStream stream=new LegacyNumericTokenStream();\n    \n    expectThrows(IllegalStateException.class, () -> {\n      stream.reset();\n    });\n\n    expectThrows(IllegalStateException.class, () -> {\n      stream.incrementToken();\n    });\n    \n    stream.close();\n  }\n\n","sourceOld":"  public void testNotInitialized() throws Exception {\n    final LegacyNumericTokenStream stream=new LegacyNumericTokenStream();\n    \n    expectThrows(IllegalStateException.class, () -> {\n      stream.reset();\n    });\n\n    expectThrows(IllegalStateException.class, () -> {\n      stream.incrementToken();\n    });\n    \n    stream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/legacy/TestNumericTokenStream#testNotInitialized().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestNumericTokenStream#testNotInitialized().mjava","sourceNew":"  public void testNotInitialized() throws Exception {\n    final LegacyNumericTokenStream stream=new LegacyNumericTokenStream();\n    \n    expectThrows(IllegalStateException.class, () -> {\n      stream.reset();\n    });\n\n    expectThrows(IllegalStateException.class, () -> {\n      stream.incrementToken();\n    });\n    \n    stream.close();\n  }\n\n","sourceOld":"  public void testNotInitialized() throws Exception {\n    final LegacyNumericTokenStream stream=new LegacyNumericTokenStream();\n    \n    expectThrows(IllegalStateException.class, () -> {\n      stream.reset();\n    });\n\n    expectThrows(IllegalStateException.class, () -> {\n      stream.incrementToken();\n    });\n    \n    stream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["05fe562aa248790944d43cdd478f512572835ba0","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"5824040d7a4884dc1ce62a8c60d0c34571701d35":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["770342641f7b505eaa8dccdc666158bff2419109"],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["05fe562aa248790944d43cdd478f512572835ba0"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["05fe562aa248790944d43cdd478f512572835ba0","5af5ba0166322092193d4c29880b0f7670fc7ca0"],"770342641f7b505eaa8dccdc666158bff2419109":["5824040d7a4884dc1ce62a8c60d0c34571701d35"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["05fe562aa248790944d43cdd478f512572835ba0","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403d05f7f8d69b65659157eff1bc1d2717f04c66"]},"commit2Childs":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5824040d7a4884dc1ce62a8c60d0c34571701d35":["770342641f7b505eaa8dccdc666158bff2419109"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5824040d7a4884dc1ce62a8c60d0c34571701d35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05fe562aa248790944d43cdd478f512572835ba0":["403d05f7f8d69b65659157eff1bc1d2717f04c66","5af5ba0166322092193d4c29880b0f7670fc7ca0","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"770342641f7b505eaa8dccdc666158bff2419109":["05fe562aa248790944d43cdd478f512572835ba0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}