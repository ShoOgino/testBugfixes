{"path":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","commits":[{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                   0, 0, true,\n                                   true, Integer.MAX_VALUE,\n                                   noOutputs,\n                                   new FindBlocks(), false,\n                                   PackedInts.COMPACT,\n                                   true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                   0, 0, true,\n                                   true, Integer.MAX_VALUE,\n                                   noOutputs,\n                                   new FindBlocks(), false,\n                                   PackedInts.COMPACT,\n                                   true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":2,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                   0, 0, true,\n                                   true, Integer.MAX_VALUE,\n                                   noOutputs,\n                                   new FindBlocks(), false,\n                                   PackedInts.COMPACT,\n                                   true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                         0, 0, true,\n                                         true, Integer.MAX_VALUE,\n                                         noOutputs,\n                                         new FindBlocks(), false,\n                                         PackedInts.COMPACT,\n                                         true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f838187609fee3a1afa5f162f93c796046242c84","date":1406216791,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n      this.longs = new long[longsSize];\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      noOutputs = NoOutputs.getSingleton();\n\n      // This Builder is just used transiently to fragment\n      // terms into \"good\" blocks; we don't save the\n      // resulting FST:\n      blockBuilder = new Builder<>(FST.INPUT_TYPE.BYTE1,\n                                   0, 0, true,\n                                   true, Integer.MAX_VALUE,\n                                   noOutputs,\n                                   new FindBlocks(), false,\n                                   PackedInts.COMPACT,\n                                   true, 15);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb77022ef17ff655c519a3f6ecd393747ac88bcf","date":1578579386,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n      this.longs = new long[longsSize];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06ab276a5660cb79daae8c5ede063531c700a03a","date":1578587874,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n      this.longs = new long[longsSize];\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08a5168e06e037794c0aba7f94f76ff3c09704d2","date":1579264785,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.TermsWriter#TermsWriter(FieldInfo).mjava","sourceNew":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      postingsWriter.setField(fieldInfo);\n    }\n\n","sourceOld":"    TermsWriter(FieldInfo fieldInfo) {\n      this.fieldInfo = fieldInfo;\n      docsSeen = new FixedBitSet(maxDoc);\n\n      this.longsSize = postingsWriter.setField(fieldInfo);\n      this.longs = new long[longsSize];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb77022ef17ff655c519a3f6ecd393747ac88bcf":["f838187609fee3a1afa5f162f93c796046242c84"],"08a5168e06e037794c0aba7f94f76ff3c09704d2":["06ab276a5660cb79daae8c5ede063531c700a03a"],"f838187609fee3a1afa5f162f93c796046242c84":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["08a5168e06e037794c0aba7f94f76ff3c09704d2"],"06ab276a5660cb79daae8c5ede063531c700a03a":["cb77022ef17ff655c519a3f6ecd393747ac88bcf"]},"commit2Childs":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["f838187609fee3a1afa5f162f93c796046242c84"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","4d637064d608752565d4f9f41b2497dfdfdde50e"],"cb77022ef17ff655c519a3f6ecd393747ac88bcf":["06ab276a5660cb79daae8c5ede063531c700a03a"],"08a5168e06e037794c0aba7f94f76ff3c09704d2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f838187609fee3a1afa5f162f93c796046242c84":["cb77022ef17ff655c519a3f6ecd393747ac88bcf"],"06ab276a5660cb79daae8c5ede063531c700a03a":["08a5168e06e037794c0aba7f94f76ff3c09704d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}