{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT);\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","date":1399205975,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT, newAttributeFactory());\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT);\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(newAttributeFactory());\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT, newAttributeFactory());\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT, newAttributeFactory());\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(newAttributeFactory());\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(newAttributeFactory());\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(TEST_VERSION_CURRENT, newAttributeFactory());\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91a5e37a1dee5ad8d3fe6d55228839d5d0412999","date":1412798723,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(newAttributeFactory());\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(newAttributeFactory());\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer#testHugeDoc().mjava","sourceNew":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(newAttributeFactory());\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","sourceOld":"  public void testHugeDoc() throws IOException {\n    StringBuilder sb = new StringBuilder();\n    char whitespace[] = new char[4094];\n    Arrays.fill(whitespace, ' ');\n    sb.append(whitespace);\n    sb.append(\"testing 1234\");\n    String input = sb.toString();\n    UAX29URLEmailTokenizer tokenizer = new UAX29URLEmailTokenizer(newAttributeFactory());\n    tokenizer.setReader(new StringReader(input));\n    BaseTokenStreamTestCase.assertTokenStreamContents(tokenizer, new String[] { \"testing\", \"1234\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55980207f1977bd1463465de1659b821347e2fa8":["379db3ad24c4f0214f30a122265a6d6be003a99d","91a5e37a1dee5ad8d3fe6d55228839d5d0412999"],"91a5e37a1dee5ad8d3fe6d55228839d5d0412999":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91a5e37a1dee5ad8d3fe6d55228839d5d0412999"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"55980207f1977bd1463465de1659b821347e2fa8":[],"91a5e37a1dee5ad8d3fe6d55228839d5d0412999":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["55980207f1977bd1463465de1659b821347e2fa8","91a5e37a1dee5ad8d3fe6d55228839d5d0412999"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}