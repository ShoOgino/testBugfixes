{"path":"lucene/misc/src/java/org/apache/lucene/search/DiversifiedTopDocsCollector#getLeafCollector(LeafReaderContext).mjava","commits":[{"id":"45ccb604e99f21f1c05722c0e28bcfa64b94a861","date":1423735816,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/search/DiversifiedTopDocsCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context)\n      throws IOException {\n    final int base = context.docBase;\n    final NumericDocValues keySource = getKeys(context);\n\n    return new LeafCollector() {\n      Scorer scorer;\n\n      @Override\n      public void setScorer(Scorer scorer) throws IOException {\n        this.scorer = scorer;\n      }\n\n      @Override\n      public void collect(int doc) throws IOException {\n        float score = scorer.score();\n\n        // This collector cannot handle NaN\n        assert !Float.isNaN(score);\n\n        totalHits++;\n\n        doc += base;\n\n        if (spare == null) {\n          spare = new ScoreDocKey(doc, score);\n        } else {\n          spare.doc = doc;\n          spare.score = score;\n        }\n        spare = insert(spare, base, keySource);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/search/DiversifiedTopDocsCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/search/DiversifiedTopDocsCollector#getLeafCollector(LeafReaderContext).mjava","sourceNew":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context)\n      throws IOException {\n    final int base = context.docBase;\n    final NumericDocValues keySource = getKeys(context);\n\n    return new LeafCollector() {\n      Scorable scorer;\n\n      @Override\n      public void setScorer(Scorable scorer) throws IOException {\n        this.scorer = scorer;\n      }\n\n      @Override\n      public void collect(int doc) throws IOException {\n        float score = scorer.score();\n\n        // This collector cannot handle NaN\n        assert !Float.isNaN(score);\n\n        totalHits++;\n\n        doc += base;\n\n        if (spare == null) {\n          spare = new ScoreDocKey(doc, score);\n        } else {\n          spare.doc = doc;\n          spare.score = score;\n        }\n        spare = insert(spare, base, keySource);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public LeafCollector getLeafCollector(LeafReaderContext context)\n      throws IOException {\n    final int base = context.docBase;\n    final NumericDocValues keySource = getKeys(context);\n\n    return new LeafCollector() {\n      Scorer scorer;\n\n      @Override\n      public void setScorer(Scorer scorer) throws IOException {\n        this.scorer = scorer;\n      }\n\n      @Override\n      public void collect(int doc) throws IOException {\n        float score = scorer.score();\n\n        // This collector cannot handle NaN\n        assert !Float.isNaN(score);\n\n        totalHits++;\n\n        doc += base;\n\n        if (spare == null) {\n          spare = new ScoreDocKey(doc, score);\n        } else {\n          spare.doc = doc;\n          spare.score = score;\n        }\n        spare = insert(spare, base, keySource);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"45ccb604e99f21f1c05722c0e28bcfa64b94a861":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"285244982ce6aa163d1e60a707f0e6e121736ce5":["45ccb604e99f21f1c05722c0e28bcfa64b94a861"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285244982ce6aa163d1e60a707f0e6e121736ce5"]},"commit2Childs":{"45ccb604e99f21f1c05722c0e28bcfa64b94a861":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"285244982ce6aa163d1e60a707f0e6e121736ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["45ccb604e99f21f1c05722c0e28bcfa64b94a861"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}