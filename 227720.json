{"path":"lucene/core/src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,PostingsEnum,Similarity.SimScorer,float).mjava","commits":[{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,PostingsEnum,Similarity.SimScorer,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,PostingsEnum,Similarity.SimScorer).mjava","sourceNew":"  /**\n   * Construct a <code>TermScorer</code>.\n   *\n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param docScorer\n   *          The <code>Similarity.SimScorer</code> implementation\n   *          to be used for score computations.\n   * @param maxFreq\n   *          An upper bound of the term frequency of the searched term in any document.\n   */\n  TermScorer(Weight weight, PostingsEnum td, Similarity.SimScorer docScorer, float maxFreq) {\n    super(weight);\n    this.docScorer = docScorer;\n    this.postingsEnum = td;\n    this.maxFreq = maxFreq;\n  }\n\n","sourceOld":"  /**\n   * Construct a <code>TermScorer</code>.\n   *\n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param docScorer\n   *          The <code>Similarity.SimScorer</code> implementation\n   *          to be used for score computations.\n   */\n  TermScorer(Weight weight, PostingsEnum td, Similarity.SimScorer docScorer) {\n    super(weight);\n    this.docScorer = docScorer;\n    this.postingsEnum = td;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,PostingsEnum,Similarity.SimScorer,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,PostingsEnum,Similarity.SimScorer).mjava","sourceNew":"  /**\n   * Construct a <code>TermScorer</code>.\n   *\n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param docScorer\n   *          The <code>Similarity.SimScorer</code> implementation\n   *          to be used for score computations.\n   * @param maxFreq\n   *          An upper bound of the term frequency of the searched term in any document.\n   */\n  TermScorer(Weight weight, PostingsEnum td, Similarity.SimScorer docScorer, float maxFreq) {\n    super(weight);\n    this.docScorer = docScorer;\n    this.postingsEnum = td;\n    this.maxFreq = maxFreq;\n  }\n\n","sourceOld":"  /**\n   * Construct a <code>TermScorer</code>.\n   *\n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param docScorer\n   *          The <code>Similarity.SimScorer</code> implementation\n   *          to be used for score computations.\n   */\n  TermScorer(Weight weight, PostingsEnum td, Similarity.SimScorer docScorer) {\n    super(weight);\n    this.docScorer = docScorer;\n    this.postingsEnum = td;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,PostingsEnum,LeafSimScorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,PostingsEnum,Similarity.SimScorer,float).mjava","sourceNew":"  /**\n   * Construct a <code>TermScorer</code>.\n   *\n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param docScorer\n   *          The <code>Similarity.SimScorer</code> implementation\n   *          to be used for score computations.\n   */\n  TermScorer(Weight weight, PostingsEnum td, LeafSimScorer docScorer) {\n    super(weight);\n    this.docScorer = docScorer;\n    this.postingsEnum = td;\n  }\n\n","sourceOld":"  /**\n   * Construct a <code>TermScorer</code>.\n   *\n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param docScorer\n   *          The <code>Similarity.SimScorer</code> implementation\n   *          to be used for score computations.\n   * @param maxFreq\n   *          An upper bound of the term frequency of the searched term in any document.\n   */\n  TermScorer(Weight weight, PostingsEnum td, Similarity.SimScorer docScorer, float maxFreq) {\n    super(weight);\n    this.docScorer = docScorer;\n    this.postingsEnum = td;\n    this.maxFreq = maxFreq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermScorer#TermScorer(Weight,PostingsEnum,Similarity.SimScorer,float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Construct a <code>TermScorer</code>.\n   *\n   * @param weight\n   *          The weight of the <code>Term</code> in the query.\n   * @param td\n   *          An iterator over the documents matching the <code>Term</code>.\n   * @param docScorer\n   *          The <code>Similarity.SimScorer</code> implementation\n   *          to be used for score computations.\n   * @param maxFreq\n   *          An upper bound of the term frequency of the searched term in any document.\n   */\n  TermScorer(Weight weight, PostingsEnum td, Similarity.SimScorer docScorer, float maxFreq) {\n    super(weight);\n    this.docScorer = docScorer;\n    this.postingsEnum = td;\n    this.maxFreq = maxFreq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["417142ff08fda9cf0b72d5133e63097a166c6458","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["417142ff08fda9cf0b72d5133e63097a166c6458"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"],"417142ff08fda9cf0b72d5133e63097a166c6458":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}