{"path":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","commits":[{"id":"5acb0ee59cc50caf85402e92d148fdb2af61bc19","date":1272929037,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","pathOld":"/dev/null","sourceNew":"  private static String randomRegexpString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(11);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) _TestUtil.nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) _TestUtil.nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0xe000, 0xffff);\n      else if (5 == t) buffer[i] = '.';\n      else if (6 == t) buffer[i] = '?';\n      else if (7 == t) buffer[i] = '*';\n      else if (8 == t) buffer[i] = '+';\n      else if (9 == t) buffer[i] = '(';\n      else if (10 == t) buffer[i] = ')';\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc611ec61ae6d6721ab38609ccdc9538a5f6fd71","date":1285865162,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","sourceNew":"  private static String randomRegexpString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(15);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) _TestUtil.nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) _TestUtil.nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0xe000, 0xffff);\n      else if (5 == t) buffer[i] = '.';\n      else if (6 == t) buffer[i] = '?';\n      else if (7 == t) buffer[i] = '*';\n      else if (8 == t) buffer[i] = '+';\n      else if (9 == t) buffer[i] = '(';\n      else if (10 == t) buffer[i] = ')';\n      else if (11 == t) buffer[i] = '-';\n      else if (12 == t) buffer[i] = '[';\n      else if (13 == t) buffer[i] = ']';\n      else if (14 == t) buffer[i] = '|';\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String randomRegexpString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(11);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) _TestUtil.nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) _TestUtil.nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0xe000, 0xffff);\n      else if (5 == t) buffer[i] = '.';\n      else if (6 == t) buffer[i] = '?';\n      else if (7 == t) buffer[i] = '*';\n      else if (8 == t) buffer[i] = '+';\n      else if (9 == t) buffer[i] = '(';\n      else if (10 == t) buffer[i] = ')';\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","sourceNew":"  private static String randomRegexpString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(15);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) _TestUtil.nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) _TestUtil.nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0xe000, 0xffff);\n      else if (5 == t) buffer[i] = '.';\n      else if (6 == t) buffer[i] = '?';\n      else if (7 == t) buffer[i] = '*';\n      else if (8 == t) buffer[i] = '+';\n      else if (9 == t) buffer[i] = '(';\n      else if (10 == t) buffer[i] = ')';\n      else if (11 == t) buffer[i] = '-';\n      else if (12 == t) buffer[i] = '[';\n      else if (13 == t) buffer[i] = ']';\n      else if (14 == t) buffer[i] = '|';\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String randomRegexpString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(11);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) _TestUtil.nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) _TestUtil.nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0xe000, 0xffff);\n      else if (5 == t) buffer[i] = '.';\n      else if (6 == t) buffer[i] = '?';\n      else if (7 == t) buffer[i] = '*';\n      else if (8 == t) buffer[i] = '+';\n      else if (9 == t) buffer[i] = '(';\n      else if (10 == t) buffer[i] = ')';\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","sourceNew":"  private static String randomRegexpString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(15);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) _TestUtil.nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) _TestUtil.nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0xe000, 0xffff);\n      else if (5 == t) buffer[i] = '.';\n      else if (6 == t) buffer[i] = '?';\n      else if (7 == t) buffer[i] = '*';\n      else if (8 == t) buffer[i] = '+';\n      else if (9 == t) buffer[i] = '(';\n      else if (10 == t) buffer[i] = ')';\n      else if (11 == t) buffer[i] = '-';\n      else if (12 == t) buffer[i] = '[';\n      else if (13 == t) buffer[i] = ']';\n      else if (14 == t) buffer[i] = '|';\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String randomRegexpString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(15);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) _TestUtil.nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) _TestUtil.nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0xe000, 0xffff);\n      else if (5 == t) buffer[i] = '.';\n      else if (6 == t) buffer[i] = '?';\n      else if (7 == t) buffer[i] = '*';\n      else if (8 == t) buffer[i] = '+';\n      else if (9 == t) buffer[i] = '(';\n      else if (10 == t) buffer[i] = ')';\n      else if (11 == t) buffer[i] = '-';\n      else if (12 == t) buffer[i] = '[';\n      else if (13 == t) buffer[i] = ']';\n      else if (14 == t) buffer[i] = '|';\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","sourceNew":"  private static String randomRegexpString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(15);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) _TestUtil.nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) _TestUtil.nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0xe000, 0xffff);\n      else if (5 == t) buffer[i] = '.';\n      else if (6 == t) buffer[i] = '?';\n      else if (7 == t) buffer[i] = '*';\n      else if (8 == t) buffer[i] = '+';\n      else if (9 == t) buffer[i] = '(';\n      else if (10 == t) buffer[i] = ')';\n      else if (11 == t) buffer[i] = '-';\n      else if (12 == t) buffer[i] = '[';\n      else if (13 == t) buffer[i] = ']';\n      else if (14 == t) buffer[i] = '|';\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String randomRegexpString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(15);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) _TestUtil.nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) _TestUtil.nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0xe000, 0xffff);\n      else if (5 == t) buffer[i] = '.';\n      else if (6 == t) buffer[i] = '?';\n      else if (7 == t) buffer[i] = '*';\n      else if (8 == t) buffer[i] = '+';\n      else if (9 == t) buffer[i] = '(';\n      else if (10 == t) buffer[i] = ')';\n      else if (11 == t) buffer[i] = '-';\n      else if (12 == t) buffer[i] = '[';\n      else if (13 == t) buffer[i] = ']';\n      else if (14 == t) buffer[i] = '|';\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/automaton/AutomatonTestUtil#randomRegexpString(Random).mjava","sourceNew":"  private static String randomRegexpString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(15);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) _TestUtil.nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) _TestUtil.nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0xe000, 0xffff);\n      else if (5 == t) buffer[i] = '.';\n      else if (6 == t) buffer[i] = '?';\n      else if (7 == t) buffer[i] = '*';\n      else if (8 == t) buffer[i] = '+';\n      else if (9 == t) buffer[i] = '(';\n      else if (10 == t) buffer[i] = ')';\n      else if (11 == t) buffer[i] = '-';\n      else if (12 == t) buffer[i] = '[';\n      else if (13 == t) buffer[i] = ']';\n      else if (14 == t) buffer[i] = '|';\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  private static String randomRegexpString(Random r) {\n    final int end = r.nextInt(20);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(15);\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) _TestUtil.nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) _TestUtil.nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) _TestUtil.nextInt(r, 0xe000, 0xffff);\n      else if (5 == t) buffer[i] = '.';\n      else if (6 == t) buffer[i] = '?';\n      else if (7 == t) buffer[i] = '*';\n      else if (8 == t) buffer[i] = '+';\n      else if (9 == t) buffer[i] = '(';\n      else if (10 == t) buffer[i] = ')';\n      else if (11 == t) buffer[i] = '-';\n      else if (12 == t) buffer[i] = '[';\n      else if (13 == t) buffer[i] = ']';\n      else if (14 == t) buffer[i] = '|';\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["dc611ec61ae6d6721ab38609ccdc9538a5f6fd71","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dc611ec61ae6d6721ab38609ccdc9538a5f6fd71":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5acb0ee59cc50caf85402e92d148fdb2af61bc19","dc611ec61ae6d6721ab38609ccdc9538a5f6fd71"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["dc611ec61ae6d6721ab38609ccdc9538a5f6fd71"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["dc611ec61ae6d6721ab38609ccdc9538a5f6fd71","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"dc611ec61ae6d6721ab38609ccdc9538a5f6fd71":["29ef99d61cda9641b6250bf9567329a6e65f901d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}