{"path":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int).mjava","commits":[{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void addPosition(int position, int startOffset, int endOffset) throws IOException {\n    assert positions || offsets;\n    \n    if (positions) {\n      write(POSITION);\n      write(Integer.toString(position));\n      newLine();\n    }\n    \n    if (offsets) {\n      write(STARTOFFSET);\n      write(Integer.toString(startOffset));\n      newLine();\n      \n      write(ENDOFFSET);\n      write(Integer.toString(endOffset));\n      newLine();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextTermVectorsWriter#addPosition(int,int,int).mjava","sourceNew":"  @Override\n  public void addPosition(int position, int startOffset, int endOffset) throws IOException {\n    assert positions || offsets;\n    \n    if (positions) {\n      write(POSITION);\n      write(Integer.toString(position));\n      newLine();\n    }\n    \n    if (offsets) {\n      write(STARTOFFSET);\n      write(Integer.toString(startOffset));\n      newLine();\n      \n      write(ENDOFFSET);\n      write(Integer.toString(endOffset));\n      newLine();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void addPosition(int position, int startOffset, int endOffset) throws IOException {\n    assert positions || offsets;\n    \n    if (positions) {\n      write(POSITION);\n      write(Integer.toString(position));\n      newLine();\n    }\n    \n    if (offsets) {\n      write(STARTOFFSET);\n      write(Integer.toString(startOffset));\n      newLine();\n      \n      write(ENDOFFSET);\n      write(Integer.toString(endOffset));\n      newLine();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3cc749c053615f5871f3b95715fe292f34e70a53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cc749c053615f5871f3b95715fe292f34e70a53"],"3cc749c053615f5871f3b95715fe292f34e70a53":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}