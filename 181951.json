{"path":"src/common/org/apache/solr/common/util/NamedListCodec#writeStr(String).mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/NamedListCodec#writeStr(String).mjava","pathOld":"src/java/org/apache/solr/common/util/NamedListCodec#writeStr(String).mjava","sourceNew":"  /** write the string as tag+length, with length being the number of UTF-16 characters,\n   * followed by the string encoded in modified-UTF8 \n   */\n  public void writeStr(String s) throws IOException {\n    if (s==null) {\n      writeTag(NULL);\n      return;\n    }\n    // Can't use string serialization or toUTF()... it's limited to 64K\n    // plus it's bigger than it needs to be for small strings anyway\n    int len = s.length();\n    writeTag(STR, len);\n    writeChars(daos, s, 0, len);\n  }\n\n","sourceOld":"  /** write the string as tag+length, with length being the number of UTF-16 characters,\n   * followed by the string encoded in modified-UTF8 \n   */\n  public void writeStr(String s) throws IOException {\n    if (s==null) {\n      writeTag(NULL);\n      return;\n    }\n    // Can't use string serialization or toUTF()... it's limited to 64K\n    // plus it's bigger than it needs to be for small strings anyway\n    int len = s.length();\n    writeTag(STR, len);\n    writeChars(daos, s, 0, len);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18a1b51b47d1035bf90ecfc7d16c739fe983647a","date":1229928361,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/JavaBinCodec#writeStr(String).mjava","pathOld":"src/common/org/apache/solr/common/util/NamedListCodec#writeStr(String).mjava","sourceNew":"  /**\n   * write the string as tag+length, with length being the number of UTF-16 characters, followed by the string encoded\n   * in modified-UTF8\n   */\n  public void writeStr(String s) throws IOException {\n    if (s == null) {\n      writeTag(NULL);\n      return;\n    }\n    // Can't use string serialization or toUTF()... it's limited to 64K\n    // plus it's bigger than it needs to be for small strings anyway\n    int len = s.length();\n    writeTag(STR, len);\n    writeChars(daos, s, 0, len);\n  }\n\n","sourceOld":"  /** write the string as tag+length, with length being the number of UTF-16 characters,\n   * followed by the string encoded in modified-UTF8 \n   */\n  public void writeStr(String s) throws IOException {\n    if (s==null) {\n      writeTag(NULL);\n      return;\n    }\n    // Can't use string serialization or toUTF()... it's limited to 64K\n    // plus it's bigger than it needs to be for small strings anyway\n    int len = s.length();\n    writeTag(STR, len);\n    writeChars(daos, s, 0, len);\n  }\n\n","bugFix":null,"bugIntro":["75db8ef3eec8aa3c49d42c476471ae9935bbdc6c"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"18a1b51b47d1035bf90ecfc7d16c739fe983647a":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["18a1b51b47d1035bf90ecfc7d16c739fe983647a"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"18a1b51b47d1035bf90ecfc7d16c739fe983647a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["18a1b51b47d1035bf90ecfc7d16c739fe983647a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}