{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.getDocIdSet(readerContext, readerContext.reader().getLiveDocs()).iterator();\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      comparators[i] = comparators[i].setNextReader(readerContext);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.getDocIdSet(readerContext, readerContext.reader().getLiveDocs()).iterator();\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      comparators[i] = comparators[i].setNextReader(readerContext);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  protected void doSetNextReader(AtomicReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.getDocIdSet(readerContext, readerContext.reader().getLiveDocs()).iterator();\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      comparators[i] = comparators[i].setNextReader(readerContext);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.getDocIdSet(readerContext, readerContext.reader().getLiveDocs()).iterator();\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      comparators[i] = comparators[i].setNextReader(readerContext);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/BlockGroupingCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  protected void doSetNextReader(AtomicReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.getDocIdSet(readerContext, readerContext.reader().getLiveDocs()).iterator();\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      comparators[i] = comparators[i].setNextReader(readerContext);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setNextReader(AtomicReaderContext readerContext) throws IOException {\n    if (subDocUpto != 0) {\n      processGroup();\n    }\n    subDocUpto = 0;\n    docBase = readerContext.docBase;\n    //System.out.println(\"setNextReader base=\" + docBase + \" r=\" + readerContext.reader);\n    lastDocPerGroupBits = lastDocPerGroup.getDocIdSet(readerContext, readerContext.reader().getLiveDocs()).iterator();\n    groupEndDocID = -1;\n\n    currentReaderContext = readerContext;\n    for (int i=0; i<comparators.length; i++) {\n      comparators[i] = comparators[i].setNextReader(readerContext);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae73da626f97850c922c42736f808d0378e165f0"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}