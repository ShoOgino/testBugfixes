{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","commits":[{"id":"f18d4e1cdc7330101ca433af5e8564dfd894f2bf","date":1379041877,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","pathOld":"/dev/null","sourceNew":"    // $ANTLR start \"DECIMAL\"\n    public final void mDECIMAL() throws RecognitionException {\n        try {\n            int _type = DECIMAL;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n            int alt8=3;\n            alt8 = dfa8.predict(input);\n            switch (alt8) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n\n                    mAT_DOT(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:29: ( DECIMALDIGIT )*\n                    loop3:\n                    do {\n                        int alt3=2;\n                        int LA3_0 = input.LA(1);\n\n                        if ( ((LA3_0 >= '0' && LA3_0 <= '9')) ) {\n                            alt3=1;\n                        }\n\n\n                        switch (alt3) {\n                    \tcase 1 :\n                    \t    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    \t    {\n                    \t    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                    \t        input.consume();\n                    \t    }\n                    \t    else {\n                    \t        MismatchedSetException mse = new MismatchedSetException(null,input);\n                    \t        recover(mse);\n                    \t        throw mse;\n                    \t    }\n\n\n                    \t    }\n                    \t    break;\n\n                    \tdefault :\n                    \t    break loop3;\n                        }\n                    } while (true);\n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: ( EXPONENT )?\n                    int alt4=2;\n                    int LA4_0 = input.LA(1);\n\n                    if ( (LA4_0=='E'||LA4_0=='e') ) {\n                        alt4=1;\n                    }\n                    switch (alt4) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n                    {\n                    mAT_DOT(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:14: ( DECIMALDIGIT )+\n                    int cnt5=0;\n                    loop5:\n                    do {\n                        int alt5=2;\n                        int LA5_0 = input.LA(1);\n\n                        if ( ((LA5_0 >= '0' && LA5_0 <= '9')) ) {\n                            alt5=1;\n                        }\n\n\n                        switch (alt5) {\n                    \tcase 1 :\n                    \t    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    \t    {\n                    \t    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                    \t        input.consume();\n                    \t    }\n                    \t    else {\n                    \t        MismatchedSetException mse = new MismatchedSetException(null,input);\n                    \t        recover(mse);\n                    \t        throw mse;\n                    \t    }\n\n\n                    \t    }\n                    \t    break;\n\n                    \tdefault :\n                    \t    if ( cnt5 >= 1 ) break loop5;\n                                EarlyExitException eee =\n                                    new EarlyExitException(5, input);\n                                throw eee;\n                        }\n                        cnt5++;\n                    } while (true);\n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: ( EXPONENT )?\n                    int alt6=2;\n                    int LA6_0 = input.LA(1);\n\n                    if ( (LA6_0=='E'||LA6_0=='e') ) {\n                        alt6=1;\n                    }\n                    switch (alt6) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:7: DECIMALINTEGER ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: ( EXPONENT )?\n                    int alt7=2;\n                    int LA7_0 = input.LA(1);\n\n                    if ( (LA7_0=='E'||LA7_0=='e') ) {\n                        alt7=1;\n                    }\n                    switch (alt7) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n\n            }\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n        \t// do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMAL\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3623d67605fbbdfce2fadea678e2f4bbe2ab2310","date":1379042933,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","sourceNew":"    // $ANTLR start \"DECIMAL\"\n    public final void mDECIMAL() throws RecognitionException {\n        try {\n            int _type = DECIMAL;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n            int alt8=3;\n            alt8 = dfa8.predict(input);\n            switch (alt8) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n\n                    mAT_DOT(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:29: ( DECIMALDIGIT )*\n                    loop3:\n                    do {\n                        int alt3=2;\n                        int LA3_0 = input.LA(1);\n\n                        if ( ((LA3_0 >= '0' && LA3_0 <= '9')) ) {\n                            alt3=1;\n                        }\n\n\n                        switch (alt3) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n\n\n                            }\n                            break;\n\n                        default :\n                            break loop3;\n                        }\n                    } while (true);\n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: ( EXPONENT )?\n                    int alt4=2;\n                    int LA4_0 = input.LA(1);\n\n                    if ( (LA4_0=='E'||LA4_0=='e') ) {\n                        alt4=1;\n                    }\n                    switch (alt4) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n                    {\n                    mAT_DOT(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:14: ( DECIMALDIGIT )+\n                    int cnt5=0;\n                    loop5:\n                    do {\n                        int alt5=2;\n                        int LA5_0 = input.LA(1);\n\n                        if ( ((LA5_0 >= '0' && LA5_0 <= '9')) ) {\n                            alt5=1;\n                        }\n\n\n                        switch (alt5) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n\n\n                            }\n                            break;\n\n                        default :\n                            if ( cnt5 >= 1 ) break loop5;\n                                EarlyExitException eee =\n                                    new EarlyExitException(5, input);\n                                throw eee;\n                        }\n                        cnt5++;\n                    } while (true);\n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: ( EXPONENT )?\n                    int alt6=2;\n                    int LA6_0 = input.LA(1);\n\n                    if ( (LA6_0=='E'||LA6_0=='e') ) {\n                        alt6=1;\n                    }\n                    switch (alt6) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:7: DECIMALINTEGER ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: ( EXPONENT )?\n                    int alt7=2;\n                    int LA7_0 = input.LA(1);\n\n                    if ( (LA7_0=='E'||LA7_0=='e') ) {\n                        alt7=1;\n                    }\n                    switch (alt7) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n\n            }\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMAL\"\n\n","sourceOld":"    // $ANTLR start \"DECIMAL\"\n    public final void mDECIMAL() throws RecognitionException {\n        try {\n            int _type = DECIMAL;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n            int alt8=3;\n            alt8 = dfa8.predict(input);\n            switch (alt8) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n\n                    mAT_DOT(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:29: ( DECIMALDIGIT )*\n                    loop3:\n                    do {\n                        int alt3=2;\n                        int LA3_0 = input.LA(1);\n\n                        if ( ((LA3_0 >= '0' && LA3_0 <= '9')) ) {\n                            alt3=1;\n                        }\n\n\n                        switch (alt3) {\n                    \tcase 1 :\n                    \t    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    \t    {\n                    \t    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                    \t        input.consume();\n                    \t    }\n                    \t    else {\n                    \t        MismatchedSetException mse = new MismatchedSetException(null,input);\n                    \t        recover(mse);\n                    \t        throw mse;\n                    \t    }\n\n\n                    \t    }\n                    \t    break;\n\n                    \tdefault :\n                    \t    break loop3;\n                        }\n                    } while (true);\n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: ( EXPONENT )?\n                    int alt4=2;\n                    int LA4_0 = input.LA(1);\n\n                    if ( (LA4_0=='E'||LA4_0=='e') ) {\n                        alt4=1;\n                    }\n                    switch (alt4) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n                    {\n                    mAT_DOT(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:14: ( DECIMALDIGIT )+\n                    int cnt5=0;\n                    loop5:\n                    do {\n                        int alt5=2;\n                        int LA5_0 = input.LA(1);\n\n                        if ( ((LA5_0 >= '0' && LA5_0 <= '9')) ) {\n                            alt5=1;\n                        }\n\n\n                        switch (alt5) {\n                    \tcase 1 :\n                    \t    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    \t    {\n                    \t    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                    \t        input.consume();\n                    \t    }\n                    \t    else {\n                    \t        MismatchedSetException mse = new MismatchedSetException(null,input);\n                    \t        recover(mse);\n                    \t        throw mse;\n                    \t    }\n\n\n                    \t    }\n                    \t    break;\n\n                    \tdefault :\n                    \t    if ( cnt5 >= 1 ) break loop5;\n                                EarlyExitException eee =\n                                    new EarlyExitException(5, input);\n                                throw eee;\n                        }\n                        cnt5++;\n                    } while (true);\n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: ( EXPONENT )?\n                    int alt6=2;\n                    int LA6_0 = input.LA(1);\n\n                    if ( (LA6_0=='E'||LA6_0=='e') ) {\n                        alt6=1;\n                    }\n                    switch (alt6) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:7: DECIMALINTEGER ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: ( EXPONENT )?\n                    int alt7=2;\n                    int LA7_0 = input.LA(1);\n\n                    if ( (LA7_0=='E'||LA7_0=='e') ) {\n                        alt7=1;\n                    }\n                    switch (alt7) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n\n            }\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n        \t// do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMAL\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2","date":1379096281,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","sourceNew":"    // $ANTLR start \"DECIMAL\"\n    public final void mDECIMAL() throws RecognitionException {\n        try {\n            int _type = DECIMAL;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n            int alt8=3;\n            alt8 = dfa8.predict(input);\n            switch (alt8) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n                    mAT_DOT(); \n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:29: ( DECIMALDIGIT )*\n                    loop3:\n                    while (true) {\n                        int alt3=2;\n                        int LA3_0 = input.LA(1);\n                        if ( ((LA3_0 >= '0' && LA3_0 <= '9')) ) {\n                            alt3=1;\n                        }\n\n                        switch (alt3) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n                            }\n                            break;\n\n                        default :\n                            break loop3;\n                        }\n                    }\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: ( EXPONENT )?\n                    int alt4=2;\n                    int LA4_0 = input.LA(1);\n                    if ( (LA4_0=='E'||LA4_0=='e') ) {\n                        alt4=1;\n                    }\n                    switch (alt4) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: EXPONENT\n                            {\n                            mEXPONENT(); \n\n                            }\n                            break;\n\n                    }\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n                    {\n                    mAT_DOT(); \n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:14: ( DECIMALDIGIT )+\n                    int cnt5=0;\n                    loop5:\n                    while (true) {\n                        int alt5=2;\n                        int LA5_0 = input.LA(1);\n                        if ( ((LA5_0 >= '0' && LA5_0 <= '9')) ) {\n                            alt5=1;\n                        }\n\n                        switch (alt5) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n                            }\n                            break;\n\n                        default :\n                            if ( cnt5 >= 1 ) break loop5;\n                            EarlyExitException eee = new EarlyExitException(5, input);\n                            throw eee;\n                        }\n                        cnt5++;\n                    }\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: ( EXPONENT )?\n                    int alt6=2;\n                    int LA6_0 = input.LA(1);\n                    if ( (LA6_0=='E'||LA6_0=='e') ) {\n                        alt6=1;\n                    }\n                    switch (alt6) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: EXPONENT\n                            {\n                            mEXPONENT(); \n\n                            }\n                            break;\n\n                    }\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:7: DECIMALINTEGER ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: ( EXPONENT )?\n                    int alt7=2;\n                    int LA7_0 = input.LA(1);\n                    if ( (LA7_0=='E'||LA7_0=='e') ) {\n                        alt7=1;\n                    }\n                    switch (alt7) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: EXPONENT\n                            {\n                            mEXPONENT(); \n\n                            }\n                            break;\n\n                    }\n\n                    }\n                    break;\n\n            }\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMAL\"\n\n","sourceOld":"    // $ANTLR start \"DECIMAL\"\n    public final void mDECIMAL() throws RecognitionException {\n        try {\n            int _type = DECIMAL;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n            int alt8=3;\n            alt8 = dfa8.predict(input);\n            switch (alt8) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n\n                    mAT_DOT(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:29: ( DECIMALDIGIT )*\n                    loop3:\n                    do {\n                        int alt3=2;\n                        int LA3_0 = input.LA(1);\n\n                        if ( ((LA3_0 >= '0' && LA3_0 <= '9')) ) {\n                            alt3=1;\n                        }\n\n\n                        switch (alt3) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n\n\n                            }\n                            break;\n\n                        default :\n                            break loop3;\n                        }\n                    } while (true);\n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: ( EXPONENT )?\n                    int alt4=2;\n                    int LA4_0 = input.LA(1);\n\n                    if ( (LA4_0=='E'||LA4_0=='e') ) {\n                        alt4=1;\n                    }\n                    switch (alt4) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n                    {\n                    mAT_DOT(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:14: ( DECIMALDIGIT )+\n                    int cnt5=0;\n                    loop5:\n                    do {\n                        int alt5=2;\n                        int LA5_0 = input.LA(1);\n\n                        if ( ((LA5_0 >= '0' && LA5_0 <= '9')) ) {\n                            alt5=1;\n                        }\n\n\n                        switch (alt5) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n\n\n                            }\n                            break;\n\n                        default :\n                            if ( cnt5 >= 1 ) break loop5;\n                                EarlyExitException eee =\n                                    new EarlyExitException(5, input);\n                                throw eee;\n                        }\n                        cnt5++;\n                    } while (true);\n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: ( EXPONENT )?\n                    int alt6=2;\n                    int LA6_0 = input.LA(1);\n\n                    if ( (LA6_0=='E'||LA6_0=='e') ) {\n                        alt6=1;\n                    }\n                    switch (alt6) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:7: DECIMALINTEGER ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: ( EXPONENT )?\n                    int alt7=2;\n                    int LA7_0 = input.LA(1);\n\n                    if ( (LA7_0=='E'||LA7_0=='e') ) {\n                        alt7=1;\n                    }\n                    switch (alt7) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: EXPONENT\n                            {\n                            mEXPONENT(); \n\n\n                            }\n                            break;\n\n                    }\n\n\n                    }\n                    break;\n\n            }\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMAL\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1441eba4282a646ef88d12acb797483db37554e","date":1379096538,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","sourceNew":"  // $ANTLR start \"DECIMAL\"\n  public final void mDECIMAL() throws RecognitionException {\n    try {\n      int _type = DECIMAL;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:342:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n      int alt8=3;\n      alt8 = dfa8.predict(input);\n      switch (alt8) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:342:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:342:29: ( DECIMALDIGIT )*\n          loop3:\n          while (true) {\n            int alt3=2;\n            int LA3_0 = input.LA(1);\n            if ( ((LA3_0 >= '0' && LA3_0 <= '9')) ) {\n              alt3=1;\n            }\n\n            switch (alt3) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop3;\n            }\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: ( EXPONENT )?\n          int alt4=2;\n          int LA4_0 = input.LA(1);\n          if ( (LA4_0=='E'||LA4_0=='e') ) {\n            alt4=1;\n          }\n          switch (alt4) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n          {\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:343:14: ( DECIMALDIGIT )+\n          int cnt5=0;\n          loop5:\n          while (true) {\n            int alt5=2;\n            int LA5_0 = input.LA(1);\n            if ( ((LA5_0 >= '0' && LA5_0 <= '9')) ) {\n              alt5=1;\n            }\n\n            switch (alt5) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              if ( cnt5 >= 1 ) break loop5;\n              EarlyExitException eee = new EarlyExitException(5, input);\n              throw eee;\n            }\n            cnt5++;\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: ( EXPONENT )?\n          int alt6=2;\n          int LA6_0 = input.LA(1);\n          if ( (LA6_0=='E'||LA6_0=='e') ) {\n            alt6=1;\n          }\n          switch (alt6) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:344:7: DECIMALINTEGER ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: ( EXPONENT )?\n          int alt7=2;\n          int LA7_0 = input.LA(1);\n          if ( (LA7_0=='E'||LA7_0=='e') ) {\n            alt7=1;\n          }\n          switch (alt7) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n\n      }\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMAL\"\n\n","sourceOld":"    // $ANTLR start \"DECIMAL\"\n    public final void mDECIMAL() throws RecognitionException {\n        try {\n            int _type = DECIMAL;\n            int _channel = DEFAULT_TOKEN_CHANNEL;\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n            int alt8=3;\n            alt8 = dfa8.predict(input);\n            switch (alt8) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n                    mAT_DOT(); \n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:29: ( DECIMALDIGIT )*\n                    loop3:\n                    while (true) {\n                        int alt3=2;\n                        int LA3_0 = input.LA(1);\n                        if ( ((LA3_0 >= '0' && LA3_0 <= '9')) ) {\n                            alt3=1;\n                        }\n\n                        switch (alt3) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n                            }\n                            break;\n\n                        default :\n                            break loop3;\n                        }\n                    }\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: ( EXPONENT )?\n                    int alt4=2;\n                    int LA4_0 = input.LA(1);\n                    if ( (LA4_0=='E'||LA4_0=='e') ) {\n                        alt4=1;\n                    }\n                    switch (alt4) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: EXPONENT\n                            {\n                            mEXPONENT(); \n\n                            }\n                            break;\n\n                    }\n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n                    {\n                    mAT_DOT(); \n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:14: ( DECIMALDIGIT )+\n                    int cnt5=0;\n                    loop5:\n                    while (true) {\n                        int alt5=2;\n                        int LA5_0 = input.LA(1);\n                        if ( ((LA5_0 >= '0' && LA5_0 <= '9')) ) {\n                            alt5=1;\n                        }\n\n                        switch (alt5) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n                            }\n                            break;\n\n                        default :\n                            if ( cnt5 >= 1 ) break loop5;\n                            EarlyExitException eee = new EarlyExitException(5, input);\n                            throw eee;\n                        }\n                        cnt5++;\n                    }\n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: ( EXPONENT )?\n                    int alt6=2;\n                    int LA6_0 = input.LA(1);\n                    if ( (LA6_0=='E'||LA6_0=='e') ) {\n                        alt6=1;\n                    }\n                    switch (alt6) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: EXPONENT\n                            {\n                            mEXPONENT(); \n\n                            }\n                            break;\n\n                    }\n\n                    }\n                    break;\n                case 3 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:7: DECIMALINTEGER ( EXPONENT )?\n                    {\n                    mDECIMALINTEGER(); \n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: ( EXPONENT )?\n                    int alt7=2;\n                    int LA7_0 = input.LA(1);\n                    if ( (LA7_0=='E'||LA7_0=='e') ) {\n                        alt7=1;\n                    }\n                    switch (alt7) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: EXPONENT\n                            {\n                            mEXPONENT(); \n\n                            }\n                            break;\n\n                    }\n\n                    }\n                    break;\n\n            }\n            state.type = _type;\n            state.channel = _channel;\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMAL\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","pathOld":"/dev/null","sourceNew":"  // $ANTLR start \"DECIMAL\"\n  public final void mDECIMAL() throws RecognitionException {\n    try {\n      int _type = DECIMAL;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:342:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n      int alt8=3;\n      alt8 = dfa8.predict(input);\n      switch (alt8) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:342:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:342:29: ( DECIMALDIGIT )*\n          loop3:\n          while (true) {\n            int alt3=2;\n            int LA3_0 = input.LA(1);\n            if ( ((LA3_0 >= '0' && LA3_0 <= '9')) ) {\n              alt3=1;\n            }\n\n            switch (alt3) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop3;\n            }\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: ( EXPONENT )?\n          int alt4=2;\n          int LA4_0 = input.LA(1);\n          if ( (LA4_0=='E'||LA4_0=='e') ) {\n            alt4=1;\n          }\n          switch (alt4) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n          {\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:343:14: ( DECIMALDIGIT )+\n          int cnt5=0;\n          loop5:\n          while (true) {\n            int alt5=2;\n            int LA5_0 = input.LA(1);\n            if ( ((LA5_0 >= '0' && LA5_0 <= '9')) ) {\n              alt5=1;\n            }\n\n            switch (alt5) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              if ( cnt5 >= 1 ) break loop5;\n              EarlyExitException eee = new EarlyExitException(5, input);\n              throw eee;\n            }\n            cnt5++;\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: ( EXPONENT )?\n          int alt6=2;\n          int LA6_0 = input.LA(1);\n          if ( (LA6_0=='E'||LA6_0=='e') ) {\n            alt6=1;\n          }\n          switch (alt6) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:344:7: DECIMALINTEGER ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: ( EXPONENT )?\n          int alt7=2;\n          int LA7_0 = input.LA(1);\n          if ( (LA7_0=='E'||LA7_0=='e') ) {\n            alt7=1;\n          }\n          switch (alt7) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n\n      }\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMAL\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d639dc27b5b3eae561ef321b06f3cad9280c529","date":1383945027,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","sourceNew":"  // $ANTLR start \"DECIMAL\"\n  public final void mDECIMAL() throws RecognitionException {\n    try {\n      int _type = DECIMAL;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:347:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n      int alt9=3;\n      alt9 = dfa9.predict(input);\n      switch (alt9) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:347:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:347:29: ( DECIMALDIGIT )*\n          loop4:\n          while (true) {\n            int alt4=2;\n            int LA4_0 = input.LA(1);\n            if ( ((LA4_0 >= '0' && LA4_0 <= '9')) ) {\n              alt4=1;\n            }\n\n            switch (alt4) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop4;\n            }\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:347:43: ( EXPONENT )?\n          int alt5=2;\n          int LA5_0 = input.LA(1);\n          if ( (LA5_0=='E'||LA5_0=='e') ) {\n            alt5=1;\n          }\n          switch (alt5) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:347:43: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:348:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n          {\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:348:14: ( DECIMALDIGIT )+\n          int cnt6=0;\n          loop6:\n          while (true) {\n            int alt6=2;\n            int LA6_0 = input.LA(1);\n            if ( ((LA6_0 >= '0' && LA6_0 <= '9')) ) {\n              alt6=1;\n            }\n\n            switch (alt6) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              if ( cnt6 >= 1 ) break loop6;\n              EarlyExitException eee = new EarlyExitException(6, input);\n              throw eee;\n            }\n            cnt6++;\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:348:28: ( EXPONENT )?\n          int alt7=2;\n          int LA7_0 = input.LA(1);\n          if ( (LA7_0=='E'||LA7_0=='e') ) {\n            alt7=1;\n          }\n          switch (alt7) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:348:28: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:349:7: DECIMALINTEGER ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:349:22: ( EXPONENT )?\n          int alt8=2;\n          int LA8_0 = input.LA(1);\n          if ( (LA8_0=='E'||LA8_0=='e') ) {\n            alt8=1;\n          }\n          switch (alt8) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:349:22: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n\n      }\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMAL\"\n\n","sourceOld":"  // $ANTLR start \"DECIMAL\"\n  public final void mDECIMAL() throws RecognitionException {\n    try {\n      int _type = DECIMAL;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:342:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n      int alt8=3;\n      alt8 = dfa8.predict(input);\n      switch (alt8) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:342:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:342:29: ( DECIMALDIGIT )*\n          loop3:\n          while (true) {\n            int alt3=2;\n            int LA3_0 = input.LA(1);\n            if ( ((LA3_0 >= '0' && LA3_0 <= '9')) ) {\n              alt3=1;\n            }\n\n            switch (alt3) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop3;\n            }\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: ( EXPONENT )?\n          int alt4=2;\n          int LA4_0 = input.LA(1);\n          if ( (LA4_0=='E'||LA4_0=='e') ) {\n            alt4=1;\n          }\n          switch (alt4) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:342:43: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:343:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n          {\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:343:14: ( DECIMALDIGIT )+\n          int cnt5=0;\n          loop5:\n          while (true) {\n            int alt5=2;\n            int LA5_0 = input.LA(1);\n            if ( ((LA5_0 >= '0' && LA5_0 <= '9')) ) {\n              alt5=1;\n            }\n\n            switch (alt5) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              if ( cnt5 >= 1 ) break loop5;\n              EarlyExitException eee = new EarlyExitException(5, input);\n              throw eee;\n            }\n            cnt5++;\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: ( EXPONENT )?\n          int alt6=2;\n          int LA6_0 = input.LA(1);\n          if ( (LA6_0=='E'||LA6_0=='e') ) {\n            alt6=1;\n          }\n          switch (alt6) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:343:28: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:344:7: DECIMALINTEGER ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: ( EXPONENT )?\n          int alt7=2;\n          int LA7_0 = input.LA(1);\n          if ( (LA7_0=='E'||LA7_0=='e') ) {\n            alt7=1;\n          }\n          switch (alt7) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:344:22: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n\n      }\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMAL\"\n\n","bugFix":null,"bugIntro":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c","date":1404947938,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","sourceNew":"  // $ANTLR start \"DECIMAL\"\n  public final void mDECIMAL() throws RecognitionException {\n    try {\n      int _type = DECIMAL;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:378:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n      int alt16=3;\n      alt16 = dfa16.predict(input);\n      switch (alt16) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:378:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:378:29: ( DECIMALDIGIT )*\n          loop11:\n          while (true) {\n            int alt11=2;\n            int LA11_0 = input.LA(1);\n            if ( ((LA11_0 >= '0' && LA11_0 <= '9')) ) {\n              alt11=1;\n            }\n\n            switch (alt11) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop11;\n            }\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:378:43: ( EXPONENT )?\n          int alt12=2;\n          int LA12_0 = input.LA(1);\n          if ( (LA12_0=='E'||LA12_0=='e') ) {\n            alt12=1;\n          }\n          switch (alt12) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:378:43: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:379:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n          {\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:379:14: ( DECIMALDIGIT )+\n          int cnt13=0;\n          loop13:\n          while (true) {\n            int alt13=2;\n            int LA13_0 = input.LA(1);\n            if ( ((LA13_0 >= '0' && LA13_0 <= '9')) ) {\n              alt13=1;\n            }\n\n            switch (alt13) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              if ( cnt13 >= 1 ) break loop13;\n              EarlyExitException eee = new EarlyExitException(13, input);\n              throw eee;\n            }\n            cnt13++;\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:379:28: ( EXPONENT )?\n          int alt14=2;\n          int LA14_0 = input.LA(1);\n          if ( (LA14_0=='E'||LA14_0=='e') ) {\n            alt14=1;\n          }\n          switch (alt14) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:379:28: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:380:7: DECIMALINTEGER ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:380:22: ( EXPONENT )?\n          int alt15=2;\n          int LA15_0 = input.LA(1);\n          if ( (LA15_0=='E'||LA15_0=='e') ) {\n            alt15=1;\n          }\n          switch (alt15) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:380:22: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n\n      }\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMAL\"\n\n","sourceOld":"  // $ANTLR start \"DECIMAL\"\n  public final void mDECIMAL() throws RecognitionException {\n    try {\n      int _type = DECIMAL;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:347:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n      int alt9=3;\n      alt9 = dfa9.predict(input);\n      switch (alt9) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:347:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:347:29: ( DECIMALDIGIT )*\n          loop4:\n          while (true) {\n            int alt4=2;\n            int LA4_0 = input.LA(1);\n            if ( ((LA4_0 >= '0' && LA4_0 <= '9')) ) {\n              alt4=1;\n            }\n\n            switch (alt4) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop4;\n            }\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:347:43: ( EXPONENT )?\n          int alt5=2;\n          int LA5_0 = input.LA(1);\n          if ( (LA5_0=='E'||LA5_0=='e') ) {\n            alt5=1;\n          }\n          switch (alt5) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:347:43: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:348:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n          {\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:348:14: ( DECIMALDIGIT )+\n          int cnt6=0;\n          loop6:\n          while (true) {\n            int alt6=2;\n            int LA6_0 = input.LA(1);\n            if ( ((LA6_0 >= '0' && LA6_0 <= '9')) ) {\n              alt6=1;\n            }\n\n            switch (alt6) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              if ( cnt6 >= 1 ) break loop6;\n              EarlyExitException eee = new EarlyExitException(6, input);\n              throw eee;\n            }\n            cnt6++;\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:348:28: ( EXPONENT )?\n          int alt7=2;\n          int LA7_0 = input.LA(1);\n          if ( (LA7_0=='E'||LA7_0=='e') ) {\n            alt7=1;\n          }\n          switch (alt7) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:348:28: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:349:7: DECIMALINTEGER ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:349:22: ( EXPONENT )?\n          int alt8=2;\n          int LA8_0 = input.LA(1);\n          if ( (LA8_0=='E'||LA8_0=='e') ) {\n            alt8=1;\n          }\n          switch (alt8) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:349:22: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n\n      }\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMAL\"\n\n","bugFix":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d23d4828afa583ebf35b4a541763af6206133458","date":1438931440,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMAL().mjava","sourceNew":null,"sourceOld":"  // $ANTLR start \"DECIMAL\"\n  public final void mDECIMAL() throws RecognitionException {\n    try {\n      int _type = DECIMAL;\n      int _channel = DEFAULT_TOKEN_CHANNEL;\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:378:5: ( DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )? | AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )? | DECIMALINTEGER ( EXPONENT )? )\n      int alt16=3;\n      alt16 = dfa16.predict(input);\n      switch (alt16) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:378:7: DECIMALINTEGER AT_DOT ( DECIMALDIGIT )* ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:378:29: ( DECIMALDIGIT )*\n          loop11:\n          while (true) {\n            int alt11=2;\n            int LA11_0 = input.LA(1);\n            if ( ((LA11_0 >= '0' && LA11_0 <= '9')) ) {\n              alt11=1;\n            }\n\n            switch (alt11) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop11;\n            }\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:378:43: ( EXPONENT )?\n          int alt12=2;\n          int LA12_0 = input.LA(1);\n          if ( (LA12_0=='E'||LA12_0=='e') ) {\n            alt12=1;\n          }\n          switch (alt12) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:378:43: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:379:7: AT_DOT ( DECIMALDIGIT )+ ( EXPONENT )?\n          {\n          mAT_DOT(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:379:14: ( DECIMALDIGIT )+\n          int cnt13=0;\n          loop13:\n          while (true) {\n            int alt13=2;\n            int LA13_0 = input.LA(1);\n            if ( ((LA13_0 >= '0' && LA13_0 <= '9')) ) {\n              alt13=1;\n            }\n\n            switch (alt13) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              if ( cnt13 >= 1 ) break loop13;\n              EarlyExitException eee = new EarlyExitException(13, input);\n              throw eee;\n            }\n            cnt13++;\n          }\n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:379:28: ( EXPONENT )?\n          int alt14=2;\n          int LA14_0 = input.LA(1);\n          if ( (LA14_0=='E'||LA14_0=='e') ) {\n            alt14=1;\n          }\n          switch (alt14) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:379:28: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n        case 3 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:380:7: DECIMALINTEGER ( EXPONENT )?\n          {\n          mDECIMALINTEGER(); \n\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:380:22: ( EXPONENT )?\n          int alt15=2;\n          int LA15_0 = input.LA(1);\n          if ( (LA15_0=='E'||LA15_0=='e') ) {\n            alt15=1;\n          }\n          switch (alt15) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:380:22: EXPONENT\n              {\n              mEXPONENT(); \n\n              }\n              break;\n\n          }\n\n          }\n          break;\n\n      }\n      state.type = _type;\n      state.channel = _channel;\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMAL\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d23d4828afa583ebf35b4a541763af6206133458":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1441eba4282a646ef88d12acb797483db37554e":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"8d639dc27b5b3eae561ef321b06f3cad9280c529":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d23d4828afa583ebf35b4a541763af6206133458"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d1441eba4282a646ef88d12acb797483db37554e"]},"commit2Childs":{"d23d4828afa583ebf35b4a541763af6206133458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["d1441eba4282a646ef88d12acb797483db37554e"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"d1441eba4282a646ef88d12acb797483db37554e":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"8d639dc27b5b3eae561ef321b06f3cad9280c529":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["d23d4828afa583ebf35b4a541763af6206133458"],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}