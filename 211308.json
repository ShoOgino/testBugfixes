{"path":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","commits":[{"id":"54bb8da55080e4569804e0661b83a3c72cbd8d4d","date":1429691126,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","pathOld":"/dev/null","sourceNew":"  private void unregisterConfListener(String confDir, Runnable listener) {\n    synchronized (confDirectoryListeners) {\n      final Set<Runnable> listeners = confDirectoryListeners.get(confDir);\n      assert listeners != null : confDir + \" has no more registered listeners, but a live one attempts to unregister!\";\n      if (listeners.remove(listener)) {\n        log.info(\"removed listener for config directory [{}]\", confDir);\n      }\n      if (listeners.isEmpty()) {\n        // no more listeners for this confDir, remove it from the map\n        log.info(\"No more listeners for config directory [{}]\", confDir);\n        confDirectoryListeners.remove(confDir);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"536b47681314488eb94706248be6047a3f142841","date":1450372090,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","sourceNew":"  private void unregisterConfListener(String confDir, Runnable listener) {\n    synchronized (confDirectoryListeners) {\n      final Set<Runnable> listeners = confDirectoryListeners.get(confDir);\n      if (listeners == null) {\n        log.warn(confDir + \" has no more registered listeners, but a live one attempted to unregister!\");\n        return;\n      }\n      if (listeners.remove(listener)) {\n        log.info(\"removed listener for config directory [{}]\", confDir);\n      }\n      if (listeners.isEmpty()) {\n        // no more listeners for this confDir, remove it from the map\n        log.info(\"No more listeners for config directory [{}]\", confDir);\n        confDirectoryListeners.remove(confDir);\n      }\n    }\n  }\n\n","sourceOld":"  private void unregisterConfListener(String confDir, Runnable listener) {\n    synchronized (confDirectoryListeners) {\n      final Set<Runnable> listeners = confDirectoryListeners.get(confDir);\n      assert listeners != null : confDir + \" has no more registered listeners, but a live one attempts to unregister!\";\n      if (listeners.remove(listener)) {\n        log.info(\"removed listener for config directory [{}]\", confDir);\n      }\n      if (listeners.isEmpty()) {\n        // no more listeners for this confDir, remove it from the map\n        log.info(\"No more listeners for config directory [{}]\", confDir);\n        confDirectoryListeners.remove(confDir);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962cd4f5e313777f35da8f521265323e84184929","date":1474533758,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","sourceNew":"  private void unregisterConfListener(String confDir, Runnable listener) {\n    synchronized (confDirectoryListeners) {\n      final Set<Runnable> listeners = confDirectoryListeners.get(confDir);\n      if (listeners == null) {\n        log.warn(confDir + \" has no more registered listeners, but a live one attempted to unregister!\");\n        return;\n      }\n      if (listeners.remove(listener)) {\n        log.debug(\"removed listener for config directory [{}]\", confDir);\n      }\n      if (listeners.isEmpty()) {\n        // no more listeners for this confDir, remove it from the map\n        log.debug(\"No more listeners for config directory [{}]\", confDir);\n        confDirectoryListeners.remove(confDir);\n      }\n    }\n  }\n\n","sourceOld":"  private void unregisterConfListener(String confDir, Runnable listener) {\n    synchronized (confDirectoryListeners) {\n      final Set<Runnable> listeners = confDirectoryListeners.get(confDir);\n      if (listeners == null) {\n        log.warn(confDir + \" has no more registered listeners, but a live one attempted to unregister!\");\n        return;\n      }\n      if (listeners.remove(listener)) {\n        log.info(\"removed listener for config directory [{}]\", confDir);\n      }\n      if (listeners.isEmpty()) {\n        // no more listeners for this confDir, remove it from the map\n        log.info(\"No more listeners for config directory [{}]\", confDir);\n        confDirectoryListeners.remove(confDir);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","sourceNew":"  private void unregisterConfListener(String confDir, Runnable listener) {\n    synchronized (confDirectoryListeners) {\n      final Set<Runnable> listeners = confDirectoryListeners.get(confDir);\n      if (listeners == null) {\n        log.warn(confDir + \" has no more registered listeners, but a live one attempted to unregister!\");\n        return;\n      }\n      if (listeners.remove(listener)) {\n        log.debug(\"removed listener for config directory [{}]\", confDir);\n      }\n      if (listeners.isEmpty()) {\n        // no more listeners for this confDir, remove it from the map\n        log.debug(\"No more listeners for config directory [{}]\", confDir);\n        confDirectoryListeners.remove(confDir);\n      }\n    }\n  }\n\n","sourceOld":"  private void unregisterConfListener(String confDir, Runnable listener) {\n    synchronized (confDirectoryListeners) {\n      final Set<Runnable> listeners = confDirectoryListeners.get(confDir);\n      if (listeners == null) {\n        log.warn(confDir + \" has no more registered listeners, but a live one attempted to unregister!\");\n        return;\n      }\n      if (listeners.remove(listener)) {\n        log.info(\"removed listener for config directory [{}]\", confDir);\n      }\n      if (listeners.isEmpty()) {\n        // no more listeners for this confDir, remove it from the map\n        log.info(\"No more listeners for config directory [{}]\", confDir);\n        confDirectoryListeners.remove(confDir);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","sourceNew":"  private void unregisterConfListener(String confDir, Runnable listener) {\n    synchronized (confDirectoryListeners) {\n      final Set<Runnable> listeners = confDirectoryListeners.get(confDir);\n      if (listeners == null) {\n        log.warn(confDir + \" has no more registered listeners, but a live one attempted to unregister!\");\n        return;\n      }\n      if (listeners.remove(listener)) {\n        log.debug(\"removed listener for config directory [{}]\", confDir);\n      }\n      if (listeners.isEmpty()) {\n        // no more listeners for this confDir, remove it from the map\n        log.debug(\"No more listeners for config directory [{}]\", confDir);\n        confDirectoryListeners.remove(confDir);\n      }\n    }\n  }\n\n","sourceOld":"  private void unregisterConfListener(String confDir, Runnable listener) {\n    synchronized (confDirectoryListeners) {\n      final Set<Runnable> listeners = confDirectoryListeners.get(confDir);\n      if (listeners == null) {\n        log.warn(confDir + \" has no more registered listeners, but a live one attempted to unregister!\");\n        return;\n      }\n      if (listeners.remove(listener)) {\n        log.info(\"removed listener for config directory [{}]\", confDir);\n      }\n      if (listeners.isEmpty()) {\n        // no more listeners for this confDir, remove it from the map\n        log.info(\"No more listeners for config directory [{}]\", confDir);\n        confDirectoryListeners.remove(confDir);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad4957cde742defe6db19689abdc267c5d948066","date":1587990850,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#unregisterConfListener(String,Runnable).mjava","sourceNew":"  private void unregisterConfListener(String confDir, Runnable listener) {\n    synchronized (confDirectoryListeners) {\n      final Set<Runnable> listeners = confDirectoryListeners.get(confDir);\n      if (listeners == null) {\n        log.warn(\"{} has no more registered listeners, but a live one attempted to unregister!\", confDir);\n        return;\n      }\n      if (listeners.remove(listener)) {\n        log.debug(\"removed listener for config directory [{}]\", confDir);\n      }\n      if (listeners.isEmpty()) {\n        // no more listeners for this confDir, remove it from the map\n        log.debug(\"No more listeners for config directory [{}]\", confDir);\n        confDirectoryListeners.remove(confDir);\n      }\n    }\n  }\n\n","sourceOld":"  private void unregisterConfListener(String confDir, Runnable listener) {\n    synchronized (confDirectoryListeners) {\n      final Set<Runnable> listeners = confDirectoryListeners.get(confDir);\n      if (listeners == null) {\n        log.warn(confDir + \" has no more registered listeners, but a live one attempted to unregister!\");\n        return;\n      }\n      if (listeners.remove(listener)) {\n        log.debug(\"removed listener for config directory [{}]\", confDir);\n      }\n      if (listeners.isEmpty()) {\n        // no more listeners for this confDir, remove it from the map\n        log.debug(\"No more listeners for config directory [{}]\", confDir);\n        confDirectoryListeners.remove(confDir);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"962cd4f5e313777f35da8f521265323e84184929":["536b47681314488eb94706248be6047a3f142841"],"536b47681314488eb94706248be6047a3f142841":["54bb8da55080e4569804e0661b83a3c72cbd8d4d"],"54bb8da55080e4569804e0661b83a3c72cbd8d4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["536b47681314488eb94706248be6047a3f142841","962cd4f5e313777f35da8f521265323e84184929"],"ad4957cde742defe6db19689abdc267c5d948066":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["536b47681314488eb94706248be6047a3f142841","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad4957cde742defe6db19689abdc267c5d948066"]},"commit2Childs":{"962cd4f5e313777f35da8f521265323e84184929":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"536b47681314488eb94706248be6047a3f142841":["962cd4f5e313777f35da8f521265323e84184929","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"54bb8da55080e4569804e0661b83a3c72cbd8d4d":["536b47681314488eb94706248be6047a3f142841"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54bb8da55080e4569804e0661b83a3c72cbd8d4d"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["ad4957cde742defe6db19689abdc267c5d948066","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"ad4957cde742defe6db19689abdc267c5d948066":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}