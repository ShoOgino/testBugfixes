{"path":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector#create(String,Sort,DocValues.Type,boolean).mjava","commits":[{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector#create(String,Sort,DocValues.Type,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector#create(String,Sort,ValueType,boolean).mjava","sourceNew":"  /**\n   * Creates an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments.\n   * This factory method decides with implementation is best suited.\n   *\n   * @param groupField      The field to group by\n   * @param sortWithinGroup The sort within each group\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Whether the values to group by should be disk resident\n   * @return an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments\n   * @throws IOException If I/O related errors occur\n   */\n  public static AbstractAllGroupHeadsCollector create(String groupField, Sort sortWithinGroup, DocValues.Type type, boolean diskResident) throws IOException {\n    switch (type) {\n      case VAR_INTS:\n      case FIXED_INTS_8:\n      case FIXED_INTS_16:\n      case FIXED_INTS_32:\n      case FIXED_INTS_64:\n        return new GeneralAllGroupHeadsCollector.Lng(groupField, type, sortWithinGroup, diskResident);\n      case FLOAT_32:\n      case FLOAT_64:\n        return new GeneralAllGroupHeadsCollector.Dbl(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_FIXED_DEREF:\n      case BYTES_VAR_STRAIGHT:\n      case BYTES_VAR_DEREF:\n        return new GeneralAllGroupHeadsCollector.BR(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_VAR_SORTED:\n      case BYTES_FIXED_SORTED:\n        return new GeneralAllGroupHeadsCollector.SortedBR(groupField, type, sortWithinGroup, diskResident);\n      default:\n        throw new IllegalArgumentException(String.format(\"ValueType %s not supported\", type));\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments.\n   * This factory method decides with implementation is best suited.\n   *\n   * @param groupField      The field to group by\n   * @param sortWithinGroup The sort within each group\n   * @param type The {@link ValueType} which is used to select a concrete implementation.\n   * @param diskResident Whether the values to group by should be disk resident\n   * @return an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments\n   * @throws IOException If I/O related errors occur\n   */\n  public static AbstractAllGroupHeadsCollector create(String groupField, Sort sortWithinGroup, ValueType type, boolean diskResident) throws IOException {\n    switch (type) {\n      case VAR_INTS:\n      case FIXED_INTS_8:\n      case FIXED_INTS_16:\n      case FIXED_INTS_32:\n      case FIXED_INTS_64:\n        return new GeneralAllGroupHeadsCollector.Lng(groupField, type, sortWithinGroup, diskResident);\n      case FLOAT_32:\n      case FLOAT_64:\n        return new GeneralAllGroupHeadsCollector.Dbl(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_FIXED_DEREF:\n      case BYTES_VAR_STRAIGHT:\n      case BYTES_VAR_DEREF:\n        return new GeneralAllGroupHeadsCollector.BR(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_VAR_SORTED:\n      case BYTES_FIXED_SORTED:\n        return new GeneralAllGroupHeadsCollector.SortedBR(groupField, type, sortWithinGroup, diskResident);\n      default:\n        throw new IllegalArgumentException(String.format(\"ValueType %s not supported\", type));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector#create(String,Sort,DocValues.Type,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector#create(String,Sort,ValueType,boolean).mjava","sourceNew":"  /**\n   * Creates an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments.\n   * This factory method decides with implementation is best suited.\n   *\n   * @param groupField      The field to group by\n   * @param sortWithinGroup The sort within each group\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Whether the values to group by should be disk resident\n   * @return an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments\n   * @throws IOException If I/O related errors occur\n   */\n  public static AbstractAllGroupHeadsCollector create(String groupField, Sort sortWithinGroup, DocValues.Type type, boolean diskResident) throws IOException {\n    switch (type) {\n      case VAR_INTS:\n      case FIXED_INTS_8:\n      case FIXED_INTS_16:\n      case FIXED_INTS_32:\n      case FIXED_INTS_64:\n        return new GeneralAllGroupHeadsCollector.Lng(groupField, type, sortWithinGroup, diskResident);\n      case FLOAT_32:\n      case FLOAT_64:\n        return new GeneralAllGroupHeadsCollector.Dbl(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_FIXED_DEREF:\n      case BYTES_VAR_STRAIGHT:\n      case BYTES_VAR_DEREF:\n        return new GeneralAllGroupHeadsCollector.BR(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_VAR_SORTED:\n      case BYTES_FIXED_SORTED:\n        return new GeneralAllGroupHeadsCollector.SortedBR(groupField, type, sortWithinGroup, diskResident);\n      default:\n        throw new IllegalArgumentException(String.format(\"ValueType %s not supported\", type));\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments.\n   * This factory method decides with implementation is best suited.\n   *\n   * @param groupField      The field to group by\n   * @param sortWithinGroup The sort within each group\n   * @param type The {@link ValueType} which is used to select a concrete implementation.\n   * @param diskResident Whether the values to group by should be disk resident\n   * @return an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments\n   * @throws IOException If I/O related errors occur\n   */\n  public static AbstractAllGroupHeadsCollector create(String groupField, Sort sortWithinGroup, ValueType type, boolean diskResident) throws IOException {\n    switch (type) {\n      case VAR_INTS:\n      case FIXED_INTS_8:\n      case FIXED_INTS_16:\n      case FIXED_INTS_32:\n      case FIXED_INTS_64:\n        return new GeneralAllGroupHeadsCollector.Lng(groupField, type, sortWithinGroup, diskResident);\n      case FLOAT_32:\n      case FLOAT_64:\n        return new GeneralAllGroupHeadsCollector.Dbl(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_FIXED_DEREF:\n      case BYTES_VAR_STRAIGHT:\n      case BYTES_VAR_DEREF:\n        return new GeneralAllGroupHeadsCollector.BR(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_VAR_SORTED:\n      case BYTES_FIXED_SORTED:\n        return new GeneralAllGroupHeadsCollector.SortedBR(groupField, type, sortWithinGroup, diskResident);\n      default:\n        throw new IllegalArgumentException(String.format(\"ValueType %s not supported\", type));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10ecbc03c2fc578015d597a26fe35271fe9504d2","date":1331200601,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector#create(String,Sort,DocValues.Type,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector#create(String,Sort,DocValues.Type,boolean).mjava","sourceNew":"  /**\n   * Creates an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments.\n   * This factory method decides with implementation is best suited.\n   *\n   * @param groupField      The field to group by\n   * @param sortWithinGroup The sort within each group\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Whether the values to group by should be disk resident\n   * @return an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments\n   * @throws IOException If I/O related errors occur\n   */\n  public static AbstractAllGroupHeadsCollector<?> create(String groupField, Sort sortWithinGroup, DocValues.Type type, boolean diskResident) throws IOException {\n    switch (type) {\n      case VAR_INTS:\n      case FIXED_INTS_8:\n      case FIXED_INTS_16:\n      case FIXED_INTS_32:\n      case FIXED_INTS_64:\n        return new GeneralAllGroupHeadsCollector.Lng(groupField, type, sortWithinGroup, diskResident);\n      case FLOAT_32:\n      case FLOAT_64:\n        return new GeneralAllGroupHeadsCollector.Dbl(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_FIXED_DEREF:\n      case BYTES_VAR_STRAIGHT:\n      case BYTES_VAR_DEREF:\n        return new GeneralAllGroupHeadsCollector.BR(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_VAR_SORTED:\n      case BYTES_FIXED_SORTED:\n        return new GeneralAllGroupHeadsCollector.SortedBR(groupField, type, sortWithinGroup, diskResident);\n      default:\n        throw new IllegalArgumentException(String.format(\"ValueType %s not supported\", type));\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments.\n   * This factory method decides with implementation is best suited.\n   *\n   * @param groupField      The field to group by\n   * @param sortWithinGroup The sort within each group\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Whether the values to group by should be disk resident\n   * @return an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments\n   * @throws IOException If I/O related errors occur\n   */\n  public static AbstractAllGroupHeadsCollector create(String groupField, Sort sortWithinGroup, DocValues.Type type, boolean diskResident) throws IOException {\n    switch (type) {\n      case VAR_INTS:\n      case FIXED_INTS_8:\n      case FIXED_INTS_16:\n      case FIXED_INTS_32:\n      case FIXED_INTS_64:\n        return new GeneralAllGroupHeadsCollector.Lng(groupField, type, sortWithinGroup, diskResident);\n      case FLOAT_32:\n      case FLOAT_64:\n        return new GeneralAllGroupHeadsCollector.Dbl(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_FIXED_DEREF:\n      case BYTES_VAR_STRAIGHT:\n      case BYTES_VAR_DEREF:\n        return new GeneralAllGroupHeadsCollector.BR(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_VAR_SORTED:\n      case BYTES_FIXED_SORTED:\n        return new GeneralAllGroupHeadsCollector.SortedBR(groupField, type, sortWithinGroup, diskResident);\n      default:\n        throw new IllegalArgumentException(String.format(\"ValueType %s not supported\", type));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fde7d38af1a90c9b08d016021745c83fa7648e28","date":1331215173,"type":5,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector#[T-extends-AbstractAllGroupHeadsCollector.GroupHead[#]]_create(String,Sort,DocValues.Type,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector#create(String,Sort,DocValues.Type,boolean).mjava","sourceNew":"  /**\n   * Creates an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments.\n   * This factory method decides with implementation is best suited.\n   *\n   * @param groupField      The field to group by\n   * @param sortWithinGroup The sort within each group\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Whether the values to group by should be disk resident\n   * @return an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments\n   * @throws IOException If I/O related errors occur\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static <T extends AbstractAllGroupHeadsCollector.GroupHead<?>> DVAllGroupHeadsCollector<T> create(String groupField, Sort sortWithinGroup, DocValues.Type type, boolean diskResident) throws IOException {\n    switch (type) {\n      case VAR_INTS:\n      case FIXED_INTS_8:\n      case FIXED_INTS_16:\n      case FIXED_INTS_32:\n      case FIXED_INTS_64:\n        // Type erasure b/c otherwise we have inconvertible types...\n        return (DVAllGroupHeadsCollector) new GeneralAllGroupHeadsCollector.Lng(groupField, type, sortWithinGroup, diskResident);\n      case FLOAT_32:\n      case FLOAT_64:\n        return (DVAllGroupHeadsCollector) new GeneralAllGroupHeadsCollector.Dbl(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_FIXED_DEREF:\n      case BYTES_VAR_STRAIGHT:\n      case BYTES_VAR_DEREF:\n        return (DVAllGroupHeadsCollector) new GeneralAllGroupHeadsCollector.BR(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_VAR_SORTED:\n      case BYTES_FIXED_SORTED:\n        return (DVAllGroupHeadsCollector) new GeneralAllGroupHeadsCollector.SortedBR(groupField, type, sortWithinGroup, diskResident);\n      default:\n        throw new IllegalArgumentException(String.format(\"ValueType %s not supported\", type));\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments.\n   * This factory method decides with implementation is best suited.\n   *\n   * @param groupField      The field to group by\n   * @param sortWithinGroup The sort within each group\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Whether the values to group by should be disk resident\n   * @return an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments\n   * @throws IOException If I/O related errors occur\n   */\n  public static AbstractAllGroupHeadsCollector<?> create(String groupField, Sort sortWithinGroup, DocValues.Type type, boolean diskResident) throws IOException {\n    switch (type) {\n      case VAR_INTS:\n      case FIXED_INTS_8:\n      case FIXED_INTS_16:\n      case FIXED_INTS_32:\n      case FIXED_INTS_64:\n        return new GeneralAllGroupHeadsCollector.Lng(groupField, type, sortWithinGroup, diskResident);\n      case FLOAT_32:\n      case FLOAT_64:\n        return new GeneralAllGroupHeadsCollector.Dbl(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_FIXED_DEREF:\n      case BYTES_VAR_STRAIGHT:\n      case BYTES_VAR_DEREF:\n        return new GeneralAllGroupHeadsCollector.BR(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_VAR_SORTED:\n      case BYTES_FIXED_SORTED:\n        return new GeneralAllGroupHeadsCollector.SortedBR(groupField, type, sortWithinGroup, diskResident);\n      default:\n        throw new IllegalArgumentException(String.format(\"ValueType %s not supported\", type));\n    }\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":5,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector#[T-extends-AbstractAllGroupHeadsCollector.GroupHead[#]]_create(String,Sort,DocValues.Type,boolean).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/dv/DVAllGroupHeadsCollector#create(String,Sort,DocValues.Type,boolean).mjava","sourceNew":"  /**\n   * Creates an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments.\n   * This factory method decides with implementation is best suited.\n   *\n   * @param groupField      The field to group by\n   * @param sortWithinGroup The sort within each group\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Whether the values to group by should be disk resident\n   * @return an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments\n   * @throws IOException If I/O related errors occur\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static <T extends AbstractAllGroupHeadsCollector.GroupHead<?>> DVAllGroupHeadsCollector<T> create(String groupField, Sort sortWithinGroup, DocValues.Type type, boolean diskResident) throws IOException {\n    switch (type) {\n      case VAR_INTS:\n      case FIXED_INTS_8:\n      case FIXED_INTS_16:\n      case FIXED_INTS_32:\n      case FIXED_INTS_64:\n        // Type erasure b/c otherwise we have inconvertible types...\n        return (DVAllGroupHeadsCollector) new GeneralAllGroupHeadsCollector.Lng(groupField, type, sortWithinGroup, diskResident);\n      case FLOAT_32:\n      case FLOAT_64:\n        return (DVAllGroupHeadsCollector) new GeneralAllGroupHeadsCollector.Dbl(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_FIXED_DEREF:\n      case BYTES_VAR_STRAIGHT:\n      case BYTES_VAR_DEREF:\n        return (DVAllGroupHeadsCollector) new GeneralAllGroupHeadsCollector.BR(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_VAR_SORTED:\n      case BYTES_FIXED_SORTED:\n        return (DVAllGroupHeadsCollector) new GeneralAllGroupHeadsCollector.SortedBR(groupField, type, sortWithinGroup, diskResident);\n      default:\n        throw new IllegalArgumentException(String.format(\"ValueType %s not supported\", type));\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments.\n   * This factory method decides with implementation is best suited.\n   *\n   * @param groupField      The field to group by\n   * @param sortWithinGroup The sort within each group\n   * @param type The {@link Type} which is used to select a concrete implementation.\n   * @param diskResident Whether the values to group by should be disk resident\n   * @return an <code>AbstractAllGroupHeadsCollector</code> instance based on the supplied arguments\n   * @throws IOException If I/O related errors occur\n   */\n  public static AbstractAllGroupHeadsCollector create(String groupField, Sort sortWithinGroup, DocValues.Type type, boolean diskResident) throws IOException {\n    switch (type) {\n      case VAR_INTS:\n      case FIXED_INTS_8:\n      case FIXED_INTS_16:\n      case FIXED_INTS_32:\n      case FIXED_INTS_64:\n        return new GeneralAllGroupHeadsCollector.Lng(groupField, type, sortWithinGroup, diskResident);\n      case FLOAT_32:\n      case FLOAT_64:\n        return new GeneralAllGroupHeadsCollector.Dbl(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_FIXED_STRAIGHT:\n      case BYTES_FIXED_DEREF:\n      case BYTES_VAR_STRAIGHT:\n      case BYTES_VAR_DEREF:\n        return new GeneralAllGroupHeadsCollector.BR(groupField, type, sortWithinGroup, diskResident);\n      case BYTES_VAR_SORTED:\n      case BYTES_FIXED_SORTED:\n        return new GeneralAllGroupHeadsCollector.SortedBR(groupField, type, sortWithinGroup, diskResident);\n      default:\n        throw new IllegalArgumentException(String.format(\"ValueType %s not supported\", type));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["d638301ad1cfcae567b681b893bc8781f0ee48a5","fde7d38af1a90c9b08d016021745c83fa7648e28"],"10ecbc03c2fc578015d597a26fe35271fe9504d2":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fde7d38af1a90c9b08d016021745c83fa7648e28":["10ecbc03c2fc578015d597a26fe35271fe9504d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fde7d38af1a90c9b08d016021745c83fa7648e28"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"10ecbc03c2fc578015d597a26fe35271fe9504d2":["fde7d38af1a90c9b08d016021745c83fa7648e28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"fde7d38af1a90c9b08d016021745c83fa7648e28":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["38e3b736c7ca086d61b7dbb841c905ee115490da","10ecbc03c2fc578015d597a26fe35271fe9504d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}