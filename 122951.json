{"path":"src/test/org/apache/lucene/search/CheckHits#checkHits(Query,String,Searcher,int[],TestCase).mjava","commits":[{"id":"b9c6ad49171d39d4831b1593ee88741b7b38b042","date":1085506498,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#checkHits(Query,String,Searcher,int[],TestCase).mjava","pathOld":"src/test/org/apache/lucene/search/TestBasics#checkHits(Query,int[]).mjava","sourceNew":"  public static void checkHits(\n        Query query,\n        String defaultFieldName,\n        Searcher searcher,\n        int[] results,\n        TestCase testCase)\n          throws IOException {\n    Hits hits = searcher.search(query);\n\n    Set correct = new TreeSet();\n    for (int i = 0; i < results.length; i++) {\n      correct.add(new Integer(results[i]));\n    }\n\n    Set actual = new TreeSet();\n    for (int i = 0; i < hits.length(); i++) {\n      actual.add(new Integer(hits.id(i)));\n    }\n\n    testCase.assertEquals(query.toString(defaultFieldName), correct, actual);\n  }\n\n","sourceOld":"  private void checkHits(Query query, int[] results) throws IOException {\n    Hits hits = searcher.search(query);\n\n    Set correct = new TreeSet();\n    for (int i = 0; i < results.length; i++) {\n      correct.add(new Integer(results[i]));\n    }\n\n    Set actual = new TreeSet();\n    for (int i = 0; i < hits.length(); i++) {\n      actual.add(new Integer(hits.id(i)));\n    }\n\n    assertEquals(query.toString(\"field\"), correct, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"621a64a6bd69383fde480b224dbbd56feac33c70","date":1097423049,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#checkHits(Query,String,Searcher,int[],TestCase).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#checkHits(Query,String,Searcher,int[],TestCase).mjava","sourceNew":"  public static void checkHits(\n        Query query,\n        String defaultFieldName,\n        Searcher searcher,\n        int[] results,\n        TestCase testCase)\n          throws IOException {\n    Hits hits = searcher.search(query);\n\n    Set correct = new TreeSet();\n    for (int i = 0; i < results.length; i++) {\n      correct.add(new Integer(results[i]));\n    }\n\n    Set actual = new TreeSet();\n    for (int i = 0; i < hits.length(); i++) {\n      actual.add(new Integer(hits.id(i)));\n    }\n\n    TestCase.assertEquals(query.toString(defaultFieldName), correct, actual);\n  }\n\n","sourceOld":"  public static void checkHits(\n        Query query,\n        String defaultFieldName,\n        Searcher searcher,\n        int[] results,\n        TestCase testCase)\n          throws IOException {\n    Hits hits = searcher.search(query);\n\n    Set correct = new TreeSet();\n    for (int i = 0; i < results.length; i++) {\n      correct.add(new Integer(results[i]));\n    }\n\n    Set actual = new TreeSet();\n    for (int i = 0; i < hits.length(); i++) {\n      actual.add(new Integer(hits.id(i)));\n    }\n\n    testCase.assertEquals(query.toString(defaultFieldName), correct, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29d6eadc26bef1d3f5d3804b90cb7ba77162d007","date":1106594461,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#checkHits(Query,String,Searcher,int[],TestCase).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#checkHits(Query,String,Searcher,int[],TestCase).mjava","sourceNew":"  /** Tests that a query has expected document number results.\n   */\n  public static void checkHits(\n        Query query,\n        String defaultFieldName,\n        Searcher searcher,\n        int[] results,\n        TestCase testCase)\n          throws IOException {\n    Hits hits = searcher.search(query);\n\n    Set correct = new TreeSet();\n    for (int i = 0; i < results.length; i++) {\n      correct.add(new Integer(results[i]));\n    }\n\n    Set actual = new TreeSet();\n    for (int i = 0; i < hits.length(); i++) {\n      actual.add(new Integer(hits.id(i)));\n    }\n\n    testCase.assertEquals(query.toString(defaultFieldName), correct, actual);\n  }\n\n","sourceOld":"  public static void checkHits(\n        Query query,\n        String defaultFieldName,\n        Searcher searcher,\n        int[] results,\n        TestCase testCase)\n          throws IOException {\n    Hits hits = searcher.search(query);\n\n    Set correct = new TreeSet();\n    for (int i = 0; i < results.length; i++) {\n      correct.add(new Integer(results[i]));\n    }\n\n    Set actual = new TreeSet();\n    for (int i = 0; i < hits.length(); i++) {\n      actual.add(new Integer(hits.id(i)));\n    }\n\n    TestCase.assertEquals(query.toString(defaultFieldName), correct, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57324580db0f0db467fb175ac76b537522210b68","date":1115333169,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#checkHits(Query,String,Searcher,int[],TestCase).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#checkHits(Query,String,Searcher,int[],TestCase).mjava","sourceNew":"  /** Tests that a query has expected document number results.\n   */\n  public static void checkHits(\n        Query query,\n        String defaultFieldName,\n        Searcher searcher,\n        int[] results,\n        TestCase testCase)\n          throws IOException {\n    Hits hits = searcher.search(query);\n\n    Set correct = new TreeSet();\n    for (int i = 0; i < results.length; i++) {\n      correct.add(new Integer(results[i]));\n    }\n\n    Set actual = new TreeSet();\n    for (int i = 0; i < hits.length(); i++) {\n      actual.add(new Integer(hits.id(i)));\n    }\n\n    TestCase.assertEquals(query.toString(defaultFieldName), correct, actual);\n  }\n\n","sourceOld":"  /** Tests that a query has expected document number results.\n   */\n  public static void checkHits(\n        Query query,\n        String defaultFieldName,\n        Searcher searcher,\n        int[] results,\n        TestCase testCase)\n          throws IOException {\n    Hits hits = searcher.search(query);\n\n    Set correct = new TreeSet();\n    for (int i = 0; i < results.length; i++) {\n      correct.add(new Integer(results[i]));\n    }\n\n    Set actual = new TreeSet();\n    for (int i = 0; i < hits.length(); i++) {\n      actual.add(new Integer(hits.id(i)));\n    }\n\n    testCase.assertEquals(query.toString(defaultFieldName), correct, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56b47d7ef702892600c875ce48ffbdd5701bb3f3","date":1115407780,"type":5,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#checkHits(Query,String,Searcher,int[]).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#checkHits(Query,String,Searcher,int[],TestCase).mjava","sourceNew":"  /** Tests that a query has expected document number results.\n   */\n  public static void checkHits(\n        Query query,\n        String defaultFieldName,\n        Searcher searcher,\n        int[] results)\n          throws IOException {\n    Hits hits = searcher.search(query);\n\n    Set correct = new TreeSet();\n    for (int i = 0; i < results.length; i++) {\n      correct.add(new Integer(results[i]));\n    }\n\n    Set actual = new TreeSet();\n    for (int i = 0; i < hits.length(); i++) {\n      actual.add(new Integer(hits.id(i)));\n    }\n\n    TestCase.assertEquals(query.toString(defaultFieldName), correct, actual);\n  }\n\n","sourceOld":"  /** Tests that a query has expected document number results.\n   */\n  public static void checkHits(\n        Query query,\n        String defaultFieldName,\n        Searcher searcher,\n        int[] results,\n        TestCase testCase)\n          throws IOException {\n    Hits hits = searcher.search(query);\n\n    Set correct = new TreeSet();\n    for (int i = 0; i < results.length; i++) {\n      correct.add(new Integer(results[i]));\n    }\n\n    Set actual = new TreeSet();\n    for (int i = 0; i < hits.length(); i++) {\n      actual.add(new Integer(hits.id(i)));\n    }\n\n    TestCase.assertEquals(query.toString(defaultFieldName), correct, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56b47d7ef702892600c875ce48ffbdd5701bb3f3":["57324580db0f0db467fb175ac76b537522210b68"],"57324580db0f0db467fb175ac76b537522210b68":["29d6eadc26bef1d3f5d3804b90cb7ba77162d007"],"b9c6ad49171d39d4831b1593ee88741b7b38b042":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"621a64a6bd69383fde480b224dbbd56feac33c70":["b9c6ad49171d39d4831b1593ee88741b7b38b042"],"29d6eadc26bef1d3f5d3804b90cb7ba77162d007":["621a64a6bd69383fde480b224dbbd56feac33c70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56b47d7ef702892600c875ce48ffbdd5701bb3f3"]},"commit2Childs":{"56b47d7ef702892600c875ce48ffbdd5701bb3f3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"57324580db0f0db467fb175ac76b537522210b68":["56b47d7ef702892600c875ce48ffbdd5701bb3f3"],"b9c6ad49171d39d4831b1593ee88741b7b38b042":["621a64a6bd69383fde480b224dbbd56feac33c70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b9c6ad49171d39d4831b1593ee88741b7b38b042"],"621a64a6bd69383fde480b224dbbd56feac33c70":["29d6eadc26bef1d3f5d3804b90cb7ba77162d007"],"29d6eadc26bef1d3f5d3804b90cb7ba77162d007":["57324580db0f0db467fb175ac76b537522210b68"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}