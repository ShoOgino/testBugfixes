{"path":"lucene/core/src/test/org/apache/lucene/search/TestLongRangeFieldQueries#nextLongInternal().mjava","commits":[{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLongRangeFieldQueries#nextLongInternal().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries#nextLongInternal().mjava","sourceNew":"  private long nextLongInternal() {\n    if (rarely()) {\n      return random().nextBoolean() ? Long.MAX_VALUE : Long.MIN_VALUE;\n    }\n    long max = Long.MAX_VALUE / 2;\n    return (max + max) * random().nextLong() - max;\n  }\n\n","sourceOld":"  private long nextLongInternal() {\n    if (rarely()) {\n      return random().nextBoolean() ? Long.MAX_VALUE : Long.MIN_VALUE;\n    }\n    long max = Long.MAX_VALUE / 2;\n    return (max + max) * random().nextLong() - max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91e78d339fc63f8487cc36dbc676582553f5e622","date":1495558010,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLongRangeFieldQueries#nextLongInternal().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLongRangeFieldQueries#nextLongInternal().mjava","sourceNew":"  private long nextLongInternal() {\n    switch (random().nextInt(5)) {\n      case 0:\n        return Long.MIN_VALUE;\n      case 1:\n        return Long.MAX_VALUE;\n      default:\n        int bpv = random().nextInt(64);\n        switch (bpv) {\n          case 64:\n            return random().nextLong();\n          default:\n            long v = TestUtil.nextLong(random(), 0, (1L << bpv) - 1);\n            if (bpv > 0) {\n              // negative values sometimes\n              v -= 1L << (bpv - 1);\n            }\n            return v;\n        }\n    }\n  }\n\n","sourceOld":"  private long nextLongInternal() {\n    if (rarely()) {\n      return random().nextBoolean() ? Long.MAX_VALUE : Long.MIN_VALUE;\n    }\n    long max = Long.MAX_VALUE / 2;\n    return (max + max) * random().nextLong() - max;\n  }\n\n","bugFix":["7825da0fed0bd08a466fec72f7c6a18a2abb303d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLongRangeFieldQueries#nextLongInternal().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLongRangeFieldQueries#nextLongInternal().mjava","sourceNew":"  private long nextLongInternal() {\n    switch (random().nextInt(5)) {\n      case 0:\n        return Long.MIN_VALUE;\n      case 1:\n        return Long.MAX_VALUE;\n      default:\n        int bpv = random().nextInt(64);\n        switch (bpv) {\n          case 64:\n            return random().nextLong();\n          default:\n            long v = TestUtil.nextLong(random(), 0, (1L << bpv) - 1);\n            if (bpv > 0) {\n              // negative values sometimes\n              v -= 1L << (bpv - 1);\n            }\n            return v;\n        }\n    }\n  }\n\n","sourceOld":"  private long nextLongInternal() {\n    if (rarely()) {\n      return random().nextBoolean() ? Long.MAX_VALUE : Long.MIN_VALUE;\n    }\n    long max = Long.MAX_VALUE / 2;\n    return (max + max) * random().nextLong() - max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["4a52b01a73cacbd2d360240e72d64c0ba353618f","91e78d339fc63f8487cc36dbc676582553f5e622"],"4a52b01a73cacbd2d360240e72d64c0ba353618f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"91e78d339fc63f8487cc36dbc676582553f5e622":["4a52b01a73cacbd2d360240e72d64c0ba353618f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91e78d339fc63f8487cc36dbc676582553f5e622"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"4a52b01a73cacbd2d360240e72d64c0ba353618f":["e9017cf144952056066919f1ebc7897ff9bd71b1","91e78d339fc63f8487cc36dbc676582553f5e622"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a52b01a73cacbd2d360240e72d64c0ba353618f"],"91e78d339fc63f8487cc36dbc676582553f5e622":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}