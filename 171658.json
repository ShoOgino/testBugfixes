{"path":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","commits":[{"id":"2e38054de362483189e0fdd850b779ed766aa7aa","date":1578059239,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","pathOld":"/dev/null","sourceNew":"    private SolrInputDocument parseQueryRecord(String line) {\n\n      String[] parts = line.split(\"\\\\s+\");\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"date_dt\", parts[0]+\"T\"+parts[1]);\n      doc.addField(\"qtime_i\", parseQTime(line));\n      doc.addField(\"status_s\", parseStatus(line));\n\n      if(line.contains(\"hits=\")) {\n        doc.addField(\"hits_l\", parseHits(line));\n      }\n\n      String params = parseParams(line);\n      doc.addField(\"params_t\", params);\n      addParams(doc, params);\n\n      String ll = parts[2];\n      doc.addField(\"log_level_s\", ll);\n\n      doc.addField(\"collection_s\", parseCollection(line));\n      doc.addField(\"core_s\", parseCore(line));\n      doc.addField(\"node_s\", parseNode(line));\n      doc.addField(\"shard_s\", parseShard(line));\n      doc.addField(\"replica_s\", parseReplica(line));\n\n      String path = parsePath(line);\n      doc.addField(\"path_s\", path);\n      if(path != null && path.contains(\"/admin\")) {\n        doc.addField(\"type_s\", \"admin\");\n      } else {\n        doc.addField(\"type_s\", \"query\");\n      }\n\n      return doc;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d42d9137df31cd94969bed5087634c6751d97eed","date":1578059239,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","sourceNew":"    private SolrInputDocument parseQueryRecord(String line) {\n\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"date_dt\", parseDate(line));\n      doc.addField(\"qtime_i\", parseQTime(line));\n      doc.addField(\"status_s\", parseStatus(line));\n\n      if(line.contains(\"hits=\")) {\n        doc.addField(\"hits_l\", parseHits(line));\n      }\n\n      String params = parseParams(line);\n      doc.addField(\"params_t\", params);\n      addParams(doc, params);\n\n      doc.addField(\"collection_s\", parseCollection(line));\n      doc.addField(\"core_s\", parseCore(line));\n      doc.addField(\"node_s\", parseNode(line));\n      doc.addField(\"shard_s\", parseShard(line));\n      doc.addField(\"replica_s\", parseReplica(line));\n\n      String path = parsePath(line);\n      doc.addField(\"path_s\", path);\n      if(path != null && path.contains(\"/admin\")) {\n        doc.addField(\"type_s\", \"admin\");\n      } else {\n        doc.addField(\"type_s\", \"query\");\n      }\n\n      return doc;\n    }\n\n","sourceOld":"    private SolrInputDocument parseQueryRecord(String line) {\n\n      String[] parts = line.split(\"\\\\s+\");\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"date_dt\", parts[0]+\"T\"+parts[1]);\n      doc.addField(\"qtime_i\", parseQTime(line));\n      doc.addField(\"status_s\", parseStatus(line));\n\n      if(line.contains(\"hits=\")) {\n        doc.addField(\"hits_l\", parseHits(line));\n      }\n\n      String params = parseParams(line);\n      doc.addField(\"params_t\", params);\n      addParams(doc, params);\n\n      String ll = parts[2];\n      doc.addField(\"log_level_s\", ll);\n\n      doc.addField(\"collection_s\", parseCollection(line));\n      doc.addField(\"core_s\", parseCore(line));\n      doc.addField(\"node_s\", parseNode(line));\n      doc.addField(\"shard_s\", parseShard(line));\n      doc.addField(\"replica_s\", parseReplica(line));\n\n      String path = parsePath(line);\n      doc.addField(\"path_s\", path);\n      if(path != null && path.contains(\"/admin\")) {\n        doc.addField(\"type_s\", \"admin\");\n      } else {\n        doc.addField(\"type_s\", \"query\");\n      }\n\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca62564055241632cd20d65b5ecb8c8e93bd60c4","date":1578383112,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","pathOld":"/dev/null","sourceNew":"    private SolrInputDocument parseQueryRecord(String line) {\n\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"date_dt\", parseDate(line));\n      doc.addField(\"qtime_i\", parseQTime(line));\n      doc.addField(\"status_s\", parseStatus(line));\n\n      if(line.contains(\"hits=\")) {\n        doc.addField(\"hits_l\", parseHits(line));\n      }\n\n      String params = parseParams(line);\n      doc.addField(\"params_t\", params);\n      addParams(doc, params);\n\n      doc.addField(\"collection_s\", parseCollection(line));\n      doc.addField(\"core_s\", parseCore(line));\n      doc.addField(\"node_s\", parseNode(line));\n      doc.addField(\"shard_s\", parseShard(line));\n      doc.addField(\"replica_s\", parseReplica(line));\n\n      String path = parsePath(line);\n      doc.addField(\"path_s\", path);\n      if(path != null && path.contains(\"/admin\")) {\n        doc.addField(\"type_s\", \"admin\");\n      } else {\n        doc.addField(\"type_s\", \"query\");\n      }\n\n      return doc;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a36d7415fd302a874e548c5e8b2f15930464d095","date":1579118488,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","sourceNew":"    private SolrInputDocument parseQueryRecord(String line) {\n\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"date_dt\", parseDate(line));\n      doc.addField(\"qtime_i\", parseQTime(line));\n      doc.addField(\"status_s\", parseStatus(line));\n\n      if(line.contains(\"hits=\")) {\n        doc.addField(\"hits_l\", parseHits(line));\n      }\n\n      String params = parseParams(line);\n      doc.addField(\"params_t\", params);\n      addParams(doc, params);\n\n      doc.addField(\"collection_s\", parseCollection(line));\n      doc.addField(\"core_s\", parseCore(line));\n      doc.addField(\"node_s\", parseNode(line));\n      doc.addField(\"shard_s\", parseShard(line));\n      doc.addField(\"replica_s\", parseReplica(line));\n\n      String path = parsePath(line);\n      doc.addField(\"path_s\", path);\n      if(path != null && path.contains(\"/admin\")) {\n        doc.addField(\"type_s\", \"admin\");\n      } else if(path != null && params.contains(\"/replication\")) {\n        doc.addField(\"type_s\", \"replication\");\n      } else {\n        doc.addField(\"type_s\", \"query\");\n      }\n\n      return doc;\n    }\n\n","sourceOld":"    private SolrInputDocument parseQueryRecord(String line) {\n\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"date_dt\", parseDate(line));\n      doc.addField(\"qtime_i\", parseQTime(line));\n      doc.addField(\"status_s\", parseStatus(line));\n\n      if(line.contains(\"hits=\")) {\n        doc.addField(\"hits_l\", parseHits(line));\n      }\n\n      String params = parseParams(line);\n      doc.addField(\"params_t\", params);\n      addParams(doc, params);\n\n      doc.addField(\"collection_s\", parseCollection(line));\n      doc.addField(\"core_s\", parseCore(line));\n      doc.addField(\"node_s\", parseNode(line));\n      doc.addField(\"shard_s\", parseShard(line));\n      doc.addField(\"replica_s\", parseReplica(line));\n\n      String path = parsePath(line);\n      doc.addField(\"path_s\", path);\n      if(path != null && path.contains(\"/admin\")) {\n        doc.addField(\"type_s\", \"admin\");\n      } else {\n        doc.addField(\"type_s\", \"query\");\n      }\n\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f44d533b1ca980d07e26a1f9ec24e6bf20bca2ca","date":1585744908,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","sourceNew":"    private SolrInputDocument parseQueryRecord(String line) {\n\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"date_dt\", parseDate(line));\n      doc.addField(\"qtime_i\", parseQTime(line));\n      doc.addField(\"status_s\", parseStatus(line));\n\n      String path = parsePath(line);\n      doc.addField(\"path_s\", path);\n\n      if(line.contains(\"hits=\")) {\n        doc.addField(\"hits_l\", parseHits(line));\n      }\n\n      String params = parseParams(line);\n      doc.addField(\"params_t\", params);\n      addParams(doc, params);\n\n      doc.addField(\"collection_s\", parseCollection(line));\n      doc.addField(\"core_s\", parseCore(line));\n      doc.addField(\"node_s\", parseNode(line));\n      doc.addField(\"shard_s\", parseShard(line));\n      doc.addField(\"replica_s\", parseReplica(line));\n\n\n      if(path != null && path.contains(\"/admin\")) {\n        doc.addField(\"type_s\", \"admin\");\n      } else if(path != null && params.contains(\"/replication\")) {\n        doc.addField(\"type_s\", \"replication\");\n      } else if (path != null && path.contains(\"/get\")) {\n        doc.addField(\"type_s\", \"get\");\n      } else {\n        doc.addField(\"type_s\", \"query\");\n      }\n\n      return doc;\n    }\n\n","sourceOld":"    private SolrInputDocument parseQueryRecord(String line) {\n\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"date_dt\", parseDate(line));\n      doc.addField(\"qtime_i\", parseQTime(line));\n      doc.addField(\"status_s\", parseStatus(line));\n\n      if(line.contains(\"hits=\")) {\n        doc.addField(\"hits_l\", parseHits(line));\n      }\n\n      String params = parseParams(line);\n      doc.addField(\"params_t\", params);\n      addParams(doc, params);\n\n      doc.addField(\"collection_s\", parseCollection(line));\n      doc.addField(\"core_s\", parseCore(line));\n      doc.addField(\"node_s\", parseNode(line));\n      doc.addField(\"shard_s\", parseShard(line));\n      doc.addField(\"replica_s\", parseReplica(line));\n\n      String path = parsePath(line);\n      doc.addField(\"path_s\", path);\n      if(path != null && path.contains(\"/admin\")) {\n        doc.addField(\"type_s\", \"admin\");\n      } else if(path != null && params.contains(\"/replication\")) {\n        doc.addField(\"type_s\", \"replication\");\n      } else {\n        doc.addField(\"type_s\", \"query\");\n      }\n\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88c63c47c168cb7f36e9b541fe0a3d3464c021b9","date":1590156506,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","sourceNew":"    private SolrInputDocument parseQueryRecord(String line) {\n\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField(\"date_dt\", parseDate(line));\n      doc.setField(\"qtime_i\", parseQTime(line));\n      doc.setField(\"status_s\", parseStatus(line));\n\n      String path = parsePath(line);\n      doc.setField(\"path_s\", path);\n\n      if(line.contains(\"hits=\")) {\n        doc.setField(\"hits_l\", parseHits(line));\n      }\n\n      String params = parseParams(line);\n      doc.setField(\"params_t\", params);\n      addParams(doc, params);\n\n      doc.setField(\"collection_s\", parseCollection(line));\n      doc.setField(\"core_s\", parseCore(line));\n      doc.setField(\"node_s\", parseNode(line));\n      doc.setField(\"shard_s\", parseShard(line));\n      doc.setField(\"replica_s\", parseReplica(line));\n\n\n      if(path != null && path.contains(\"/admin\")) {\n        doc.setField(\"type_s\", \"admin\");\n      } else if(path != null && params.contains(\"/replication\")) {\n        doc.setField(\"type_s\", \"replication\");\n      } else if (path != null && path.contains(\"/get\")) {\n        doc.setField(\"type_s\", \"get\");\n      } else {\n        doc.setField(\"type_s\", \"query\");\n      }\n\n      return doc;\n    }\n\n","sourceOld":"    private SolrInputDocument parseQueryRecord(String line) {\n\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.addField(\"date_dt\", parseDate(line));\n      doc.addField(\"qtime_i\", parseQTime(line));\n      doc.addField(\"status_s\", parseStatus(line));\n\n      String path = parsePath(line);\n      doc.addField(\"path_s\", path);\n\n      if(line.contains(\"hits=\")) {\n        doc.addField(\"hits_l\", parseHits(line));\n      }\n\n      String params = parseParams(line);\n      doc.addField(\"params_t\", params);\n      addParams(doc, params);\n\n      doc.addField(\"collection_s\", parseCollection(line));\n      doc.addField(\"core_s\", parseCore(line));\n      doc.addField(\"node_s\", parseNode(line));\n      doc.addField(\"shard_s\", parseShard(line));\n      doc.addField(\"replica_s\", parseReplica(line));\n\n\n      if(path != null && path.contains(\"/admin\")) {\n        doc.addField(\"type_s\", \"admin\");\n      } else if(path != null && params.contains(\"/replication\")) {\n        doc.addField(\"type_s\", \"replication\");\n      } else if (path != null && path.contains(\"/get\")) {\n        doc.addField(\"type_s\", \"get\");\n      } else {\n        doc.addField(\"type_s\", \"query\");\n      }\n\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f07b50374365285458b916c56586bd62bf3905d","date":1592310084,"type":4,"author":"Jason Gerlowski","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrLogPostTool.LogRecordReader#parseQueryRecord(String).mjava","sourceNew":null,"sourceOld":"    private SolrInputDocument parseQueryRecord(String line) {\n\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField(\"date_dt\", parseDate(line));\n      doc.setField(\"qtime_i\", parseQTime(line));\n      doc.setField(\"status_s\", parseStatus(line));\n\n      String path = parsePath(line);\n      doc.setField(\"path_s\", path);\n\n      if(line.contains(\"hits=\")) {\n        doc.setField(\"hits_l\", parseHits(line));\n      }\n\n      String params = parseParams(line);\n      doc.setField(\"params_t\", params);\n      addParams(doc, params);\n\n      doc.setField(\"collection_s\", parseCollection(line));\n      doc.setField(\"core_s\", parseCore(line));\n      doc.setField(\"node_s\", parseNode(line));\n      doc.setField(\"shard_s\", parseShard(line));\n      doc.setField(\"replica_s\", parseReplica(line));\n\n\n      if(path != null && path.contains(\"/admin\")) {\n        doc.setField(\"type_s\", \"admin\");\n      } else if(path != null && params.contains(\"/replication\")) {\n        doc.setField(\"type_s\", \"replication\");\n      } else if (path != null && path.contains(\"/get\")) {\n        doc.setField(\"type_s\", \"get\");\n      } else {\n        doc.setField(\"type_s\", \"query\");\n      }\n\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1f07b50374365285458b916c56586bd62bf3905d":["88c63c47c168cb7f36e9b541fe0a3d3464c021b9"],"f44d533b1ca980d07e26a1f9ec24e6bf20bca2ca":["a36d7415fd302a874e548c5e8b2f15930464d095"],"d42d9137df31cd94969bed5087634c6751d97eed":["2e38054de362483189e0fdd850b779ed766aa7aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2e38054de362483189e0fdd850b779ed766aa7aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d42d9137df31cd94969bed5087634c6751d97eed"],"a36d7415fd302a874e548c5e8b2f15930464d095":["d42d9137df31cd94969bed5087634c6751d97eed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f07b50374365285458b916c56586bd62bf3905d"],"88c63c47c168cb7f36e9b541fe0a3d3464c021b9":["f44d533b1ca980d07e26a1f9ec24e6bf20bca2ca"]},"commit2Childs":{"1f07b50374365285458b916c56586bd62bf3905d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f44d533b1ca980d07e26a1f9ec24e6bf20bca2ca":["88c63c47c168cb7f36e9b541fe0a3d3464c021b9"],"d42d9137df31cd94969bed5087634c6751d97eed":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","a36d7415fd302a874e548c5e8b2f15930464d095"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2e38054de362483189e0fdd850b779ed766aa7aa","ca62564055241632cd20d65b5ecb8c8e93bd60c4"],"2e38054de362483189e0fdd850b779ed766aa7aa":["d42d9137df31cd94969bed5087634c6751d97eed"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":[],"a36d7415fd302a874e548c5e8b2f15930464d095":["f44d533b1ca980d07e26a1f9ec24e6bf20bca2ca"],"88c63c47c168cb7f36e9b541fe0a3d3464c021b9":["1f07b50374365285458b916c56586bd62bf3905d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}