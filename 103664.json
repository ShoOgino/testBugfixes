{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#assertExpectedDocs(List[Doc],SolrEntityProcessor).mjava","commits":[{"id":"cdb62ae894642b07cf3f21eb09dc5d85f4a0a4b8","date":1324129595,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#assertExpectedDocs(List[Doc],SolrEntityProcessor).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#assertExpectedDocs(String[][][],SolrEntityProcessor).mjava","sourceNew":"  private static void assertExpectedDocs(List<Doc> expectedDocs, SolrEntityProcessor processor) {\n    for (Doc expectedDoc : expectedDocs) {\n      Map<String, Object> next = processor.nextRow();\n      assertNotNull(next);\n      assertEquals(expectedDoc.id, next.get(\"id\"));\n      assertEquals(expectedDoc.getValues(\"description\"), next.get(\"description\"));\n    }\n    assertNull(processor.nextRow());\n  }\n\n","sourceOld":"  private static void assertExpectedDocs(String[][][] expectedDocs, SolrEntityProcessor processor) {\n    for (String[][] expectedDoc : expectedDocs) {\n      Map<String, Object> next = processor.nextRow();\n      assertNotNull(next);\n      assertEquals(expectedDoc[0][1], next.get(expectedDoc[0][0]));\n      assertEquals(expectedDoc[1][1], next.get(expectedDoc[1][0]));\n    }\n    assertNull(processor.nextRow());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSolrEntityProcessorUnit#assertExpectedDocs(List[Doc],SolrEntityProcessor).mjava","sourceNew":null,"sourceOld":"  private static void assertExpectedDocs(List<Doc> expectedDocs, SolrEntityProcessor processor) {\n    for (Doc expectedDoc : expectedDocs) {\n      Map<String, Object> next = processor.nextRow();\n      assertNotNull(next);\n      assertEquals(expectedDoc.id, next.get(\"id\"));\n      assertEquals(expectedDoc.getValues(\"description\"), next.get(\"description\"));\n    }\n    assertNull(processor.nextRow());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cdb62ae894642b07cf3f21eb09dc5d85f4a0a4b8"],"cdb62ae894642b07cf3f21eb09dc5d85f4a0a4b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cdb62ae894642b07cf3f21eb09dc5d85f4a0a4b8":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cdb62ae894642b07cf3f21eb09dc5d85f4a0a4b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}