{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenFilter.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenFilter.DEFAULT_MAX_GRAM_SIZE);\n\n    String sideArg = args.remove(\"side\");\n    if (sideArg == null) {\n      side = EdgeNGramTokenFilter.Side.FRONT.getLabel();\n    } else {\n      side = sideArg;\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcae30df9fe9300569835aef42ec65802c7c0afb","date":1364859933,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenFilter.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenFilter.DEFAULT_MAX_GRAM_SIZE);\n    side = get(args, \"side\", EdgeNGramTokenFilter.Side.FRONT.getLabel());\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenFilter.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenFilter.DEFAULT_MAX_GRAM_SIZE);\n\n    String sideArg = args.remove(\"side\");\n    if (sideArg == null) {\n      side = EdgeNGramTokenFilter.Side.FRONT.getLabel();\n    } else {\n      side = sideArg;\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7567347acd9579d742a2ffd4feb1a32062fb1bc3","date":1367935406,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenFilter.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenFilter.DEFAULT_MAX_GRAM_SIZE);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenFilter.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenFilter.DEFAULT_MAX_GRAM_SIZE);\n    side = get(args, \"side\", EdgeNGramTokenFilter.Side.FRONT.getLabel());\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a255765a5625ff80fba75863de5a16ea392015e","date":1528161860,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenFilter.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenFilter.DEFAULT_MAX_GRAM_SIZE);\n    preserveOriginal = getBoolean(args, \"preserveOriginal\", EdgeNGramTokenFilter.DEFAULT_PRESERVE_ORIGINAL);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenFilter.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenFilter.DEFAULT_MAX_GRAM_SIZE);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f9d9185dd79758c4a333e1856adfe1388f008e3","date":1528166448,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = requireInt(args, \"minGramSize\");\n    maxGramSize = requireInt(args, \"maxGramSize\");\n    preserveOriginal = getBoolean(args, \"preserveOriginal\", EdgeNGramTokenFilter.DEFAULT_PRESERVE_ORIGINAL);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenFilter.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenFilter.DEFAULT_MAX_GRAM_SIZE);\n    preserveOriginal = getBoolean(args, \"preserveOriginal\", EdgeNGramTokenFilter.DEFAULT_PRESERVE_ORIGINAL);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = requireInt(args, \"minGramSize\");\n    maxGramSize = requireInt(args, \"maxGramSize\");\n    preserveOriginal = getBoolean(args, \"preserveOriginal\", EdgeNGramTokenFilter.DEFAULT_PRESERVE_ORIGINAL);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenFilter.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenFilter.DEFAULT_MAX_GRAM_SIZE);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramFilterFactory#EdgeNGramFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = requireInt(args, \"minGramSize\");\n    maxGramSize = requireInt(args, \"maxGramSize\");\n    preserveOriginal = getBoolean(args, \"preserveOriginal\", EdgeNGramTokenFilter.DEFAULT_PRESERVE_ORIGINAL);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new EdgeNGramFilterFactory */\n  public EdgeNGramFilterFactory(Map<String, String> args) {\n    super(args);\n    minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenFilter.DEFAULT_MIN_GRAM_SIZE);\n    maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenFilter.DEFAULT_MAX_GRAM_SIZE);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f9d9185dd79758c4a333e1856adfe1388f008e3":["8a255765a5625ff80fba75863de5a16ea392015e"],"8a255765a5625ff80fba75863de5a16ea392015e":["7567347acd9579d742a2ffd4feb1a32062fb1bc3"],"dcae30df9fe9300569835aef42ec65802c7c0afb":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["7567347acd9579d742a2ffd4feb1a32062fb1bc3","7f9d9185dd79758c4a333e1856adfe1388f008e3"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f592209545c71895260367152601e9200399776d":["7567347acd9579d742a2ffd4feb1a32062fb1bc3","7f9d9185dd79758c4a333e1856adfe1388f008e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f9d9185dd79758c4a333e1856adfe1388f008e3"],"7567347acd9579d742a2ffd4feb1a32062fb1bc3":["dcae30df9fe9300569835aef42ec65802c7c0afb"]},"commit2Childs":{"7f9d9185dd79758c4a333e1856adfe1388f008e3":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8a255765a5625ff80fba75863de5a16ea392015e":["7f9d9185dd79758c4a333e1856adfe1388f008e3"],"dcae30df9fe9300569835aef42ec65802c7c0afb":["7567347acd9579d742a2ffd4feb1a32062fb1bc3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"f592209545c71895260367152601e9200399776d":[],"7567347acd9579d742a2ffd4feb1a32062fb1bc3":["8a255765a5625ff80fba75863de5a16ea392015e","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}