{"path":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(AtomicReaderContext).mjava","commits":[{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(ReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    DocIdSet docIdSet = cache.get(reader, coreKey, delCoreKey);\n    if (docIdSet != null) {\n      hitCount++;\n      return docIdSet;\n    }\n\n    missCount++;\n\n    // cache miss\n    docIdSet = docIdSetToCache(filter.getDocIdSet(context), reader);\n\n    if (docIdSet != null) {\n      cache.put(coreKey, delCoreKey, docIdSet);\n    }\n    \n    return docIdSet;\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(ReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    DocIdSet docIdSet = cache.get(reader, coreKey, delCoreKey);\n    if (docIdSet != null) {\n      hitCount++;\n      return docIdSet;\n    }\n\n    missCount++;\n\n    // cache miss\n    docIdSet = docIdSetToCache(filter.getDocIdSet(context), reader);\n\n    if (docIdSet != null) {\n      cache.put(coreKey, delCoreKey, docIdSet);\n    }\n    \n    return docIdSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    DocIdSet docIdSet = cache.get(reader, coreKey, delCoreKey);\n    if (docIdSet != null) {\n      hitCount++;\n      return docIdSet;\n    }\n\n    missCount++;\n\n    // cache miss\n    docIdSet = docIdSetToCache(filter.getDocIdSet(context), reader);\n\n    if (docIdSet != null) {\n      cache.put(coreKey, delCoreKey, docIdSet);\n    }\n    \n    return docIdSet;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    DocIdSet docIdSet = cache.get(reader, coreKey, delCoreKey);\n    if (docIdSet != null) {\n      hitCount++;\n      return docIdSet;\n    }\n\n    missCount++;\n\n    // cache miss\n    docIdSet = docIdSetToCache(filter.getDocIdSet(context), reader);\n\n    if (docIdSet != null) {\n      cache.put(coreKey, delCoreKey, docIdSet);\n    }\n    \n    return docIdSet;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getLiveDocs() : coreKey;\n\n    DocIdSet docIdSet = cache.get(reader, coreKey, delCoreKey);\n    if (docIdSet != null) {\n      hitCount++;\n      return docIdSet;\n    }\n\n    missCount++;\n\n    // cache miss\n    docIdSet = docIdSetToCache(filter.getDocIdSet(context), reader);\n\n    if (docIdSet != null) {\n      cache.put(coreKey, delCoreKey, docIdSet);\n    }\n    \n    return docIdSet;\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    DocIdSet docIdSet = cache.get(reader, coreKey, delCoreKey);\n    if (docIdSet != null) {\n      hitCount++;\n      return docIdSet;\n    }\n\n    missCount++;\n\n    // cache miss\n    docIdSet = docIdSetToCache(filter.getDocIdSet(context), reader);\n\n    if (docIdSet != null) {\n      cache.put(coreKey, delCoreKey, docIdSet);\n    }\n    \n    return docIdSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getLiveDocs() : coreKey;\n\n    DocIdSet docIdSet = cache.get(reader, coreKey, delCoreKey);\n    if (docIdSet != null) {\n      hitCount++;\n      return docIdSet;\n    }\n\n    missCount++;\n\n    // cache miss\n    docIdSet = docIdSetToCache(filter.getDocIdSet(context), reader);\n\n    if (docIdSet != null) {\n      cache.put(coreKey, delCoreKey, docIdSet);\n    }\n    \n    return docIdSet;\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    DocIdSet docIdSet = cache.get(reader, coreKey, delCoreKey);\n    if (docIdSet != null) {\n      hitCount++;\n      return docIdSet;\n    }\n\n    missCount++;\n\n    // cache miss\n    docIdSet = docIdSetToCache(filter.getDocIdSet(context), reader);\n\n    if (docIdSet != null) {\n      cache.put(coreKey, delCoreKey, docIdSet);\n    }\n    \n    return docIdSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getLiveDocs() : coreKey;\n\n    DocIdSet docIdSet = cache.get(reader, coreKey, delCoreKey);\n    if (docIdSet != null) {\n      hitCount++;\n      return docIdSet;\n    }\n\n    missCount++;\n\n    // cache miss\n    docIdSet = docIdSetToCache(filter.getDocIdSet(context), reader);\n\n    if (docIdSet != null) {\n      cache.put(coreKey, delCoreKey, docIdSet);\n    }\n    \n    return docIdSet;\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getDeletedDocs() : coreKey;\n\n    DocIdSet docIdSet = cache.get(reader, coreKey, delCoreKey);\n    if (docIdSet != null) {\n      hitCount++;\n      return docIdSet;\n    }\n\n    missCount++;\n\n    // cache miss\n    docIdSet = docIdSetToCache(filter.getDocIdSet(context), reader);\n\n    if (docIdSet != null) {\n      cache.put(coreKey, delCoreKey, docIdSet);\n    }\n    \n    return docIdSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#getDocIdSet(AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    final IndexReader reader = context.reader;\n    final Object coreKey = reader.getCoreCacheKey();\n    final Object delCoreKey = reader.hasDeletions() ? reader.getLiveDocs() : coreKey;\n\n    DocIdSet docIdSet = cache.get(reader, coreKey, delCoreKey);\n    if (docIdSet != null) {\n      hitCount++;\n      return docIdSet;\n    }\n\n    missCount++;\n\n    // cache miss\n    docIdSet = docIdSetToCache(filter.getDocIdSet(context), reader);\n\n    if (docIdSet != null) {\n      cache.put(coreKey, delCoreKey, docIdSet);\n    }\n    \n    return docIdSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6620df8541b174097b1133a4fc370adb2e570524":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6620df8541b174097b1133a4fc370adb2e570524"]},"commit2Childs":{"6620df8541b174097b1133a4fc370adb2e570524":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["6620df8541b174097b1133a4fc370adb2e570524","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["29ef99d61cda9641b6250bf9567329a6e65f901d","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","d083e83f225b11e5fdd900e83d26ddb385b6955c","868da859b43505d9d2a023bfeae6dd0c795f5295","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","d083e83f225b11e5fdd900e83d26ddb385b6955c","868da859b43505d9d2a023bfeae6dd0c795f5295","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}