{"path":"solr/core/src/test/org/apache/solr/security/TestSha256AuthenticationProvider#testBasicAuthCommands().mjava","commits":[{"id":"3635776bfb39e459843cfe0a78c7f3f88602f8ea","date":1450428038,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/TestSha256AuthenticationProvider#testBasicAuthCommands().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasicAuthCommands(){\n    BasicAuthPlugin basicAuthPlugin = new BasicAuthPlugin();\n    basicAuthPlugin.init(Collections.emptyMap());\n\n    Map latestConf = new LinkedHashMap<>();\n\n    CommandOperation blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", true));\n    basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n    assertEquals(Boolean.TRUE,  latestConf.get(\"blockUnknown\"));\n    basicAuthPlugin.init(latestConf);\n    assertTrue(basicAuthPlugin.getBlockUnknown());\n    blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", false));\n    basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n    assertEquals(Boolean.FALSE,  latestConf.get(\"blockUnknown\"));\n    basicAuthPlugin.init(latestConf);\n    assertFalse(basicAuthPlugin.getBlockUnknown());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15af35d55d70c34451f9df5edeaeff6b31f8cbe","date":1519625627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/TestSha256AuthenticationProvider#testBasicAuthCommands().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/TestSha256AuthenticationProvider#testBasicAuthCommands().mjava","sourceNew":"  public void testBasicAuthCommands() throws IOException {\n    try (BasicAuthPlugin basicAuthPlugin = new BasicAuthPlugin()) {\n      basicAuthPlugin.init(Collections.emptyMap());\n\n      Map latestConf = new LinkedHashMap<>();\n\n      CommandOperation blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", true));\n      basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n      assertEquals(Boolean.TRUE, latestConf.get(\"blockUnknown\"));\n      basicAuthPlugin.init(latestConf);\n      assertTrue(basicAuthPlugin.getBlockUnknown());\n      blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", false));\n      basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n      assertEquals(Boolean.FALSE, latestConf.get(\"blockUnknown\"));\n      basicAuthPlugin.init(latestConf);\n      assertFalse(basicAuthPlugin.getBlockUnknown());\n    }\n  }\n\n","sourceOld":"  public void testBasicAuthCommands(){\n    BasicAuthPlugin basicAuthPlugin = new BasicAuthPlugin();\n    basicAuthPlugin.init(Collections.emptyMap());\n\n    Map latestConf = new LinkedHashMap<>();\n\n    CommandOperation blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", true));\n    basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n    assertEquals(Boolean.TRUE,  latestConf.get(\"blockUnknown\"));\n    basicAuthPlugin.init(latestConf);\n    assertTrue(basicAuthPlugin.getBlockUnknown());\n    blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", false));\n    basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n    assertEquals(Boolean.FALSE,  latestConf.get(\"blockUnknown\"));\n    basicAuthPlugin.init(latestConf);\n    assertFalse(basicAuthPlugin.getBlockUnknown());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd","date":1567056470,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/TestSha256AuthenticationProvider#testBasicAuthCommands().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/TestSha256AuthenticationProvider#testBasicAuthCommands().mjava","sourceNew":"  public void testBasicAuthCommands() throws IOException {\n    try (BasicAuthPlugin basicAuthPlugin = new BasicAuthPlugin()) {\n      basicAuthPlugin.init(createConfigMap(\"ignore\", \"me\"));\n\n      Map latestConf = createConfigMap(\"solr\", \"SolrRocks\");\n\n      CommandOperation blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", true));\n      basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n      assertEquals(Boolean.TRUE, latestConf.get(\"blockUnknown\"));\n      basicAuthPlugin.init(latestConf);\n      assertTrue(basicAuthPlugin.getBlockUnknown());\n      blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", false));\n      basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n      assertEquals(Boolean.FALSE, latestConf.get(\"blockUnknown\"));\n      basicAuthPlugin.init(latestConf);\n      assertFalse(basicAuthPlugin.getBlockUnknown());\n    }\n  }\n\n","sourceOld":"  public void testBasicAuthCommands() throws IOException {\n    try (BasicAuthPlugin basicAuthPlugin = new BasicAuthPlugin()) {\n      basicAuthPlugin.init(Collections.emptyMap());\n\n      Map latestConf = new LinkedHashMap<>();\n\n      CommandOperation blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", true));\n      basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n      assertEquals(Boolean.TRUE, latestConf.get(\"blockUnknown\"));\n      basicAuthPlugin.init(latestConf);\n      assertTrue(basicAuthPlugin.getBlockUnknown());\n      blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", false));\n      basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n      assertEquals(Boolean.FALSE, latestConf.get(\"blockUnknown\"));\n      basicAuthPlugin.init(latestConf);\n      assertFalse(basicAuthPlugin.getBlockUnknown());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/TestSha256AuthenticationProvider#testBasicAuthCommands().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/TestSha256AuthenticationProvider#testBasicAuthCommands().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public void testBasicAuthCommands() throws IOException {\n    try (BasicAuthPlugin basicAuthPlugin = new BasicAuthPlugin()) {\n      basicAuthPlugin.init(createConfigMap(\"ignore\", \"me\"));\n\n      @SuppressWarnings({\"rawtypes\"})\n      Map latestConf = createConfigMap(\"solr\", \"SolrRocks\");\n\n      CommandOperation blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", true));\n      basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n      assertEquals(Boolean.TRUE, latestConf.get(\"blockUnknown\"));\n      basicAuthPlugin.init(latestConf);\n      assertTrue(basicAuthPlugin.getBlockUnknown());\n      blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", false));\n      basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n      assertEquals(Boolean.FALSE, latestConf.get(\"blockUnknown\"));\n      basicAuthPlugin.init(latestConf);\n      assertFalse(basicAuthPlugin.getBlockUnknown());\n    }\n  }\n\n","sourceOld":"  public void testBasicAuthCommands() throws IOException {\n    try (BasicAuthPlugin basicAuthPlugin = new BasicAuthPlugin()) {\n      basicAuthPlugin.init(createConfigMap(\"ignore\", \"me\"));\n\n      Map latestConf = createConfigMap(\"solr\", \"SolrRocks\");\n\n      CommandOperation blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", true));\n      basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n      assertEquals(Boolean.TRUE, latestConf.get(\"blockUnknown\"));\n      basicAuthPlugin.init(latestConf);\n      assertTrue(basicAuthPlugin.getBlockUnknown());\n      blockUnknown = new CommandOperation(\"set-property\", singletonMap(\"blockUnknown\", false));\n      basicAuthPlugin.edit(latestConf, Collections.singletonList(blockUnknown));\n      assertEquals(Boolean.FALSE, latestConf.get(\"blockUnknown\"));\n      basicAuthPlugin.init(latestConf);\n      assertFalse(basicAuthPlugin.getBlockUnknown());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"3635776bfb39e459843cfe0a78c7f3f88602f8ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["3635776bfb39e459843cfe0a78c7f3f88602f8ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd"]},"commit2Childs":{"5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd":["e98520789adb1d5ad05afb4956eca0944a929688"],"3635776bfb39e459843cfe0a78c7f3f88602f8ea":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3635776bfb39e459843cfe0a78c7f3f88602f8ea"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["5580de1ca6cf6a8ac7b40d0008b458bb1319d7fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}