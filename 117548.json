{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetRequestSortedMerger#merge(Object,Context).mjava","commits":[{"id":"e8220da23feaeb400771f18161c4965dea5ab4cd","date":1530366342,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRequestSortedMerger#merge(Object,Context).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void merge(Object facetResult, Context mcontext) {\n    SimpleOrderedMap res = (SimpleOrderedMap)facetResult;\n    Boolean more = (Boolean)res.get(\"more\");\n    if (more != null && more) {\n      if (shardHasMoreBuckets == null) {\n        // We really only need this if it's a partial facet (has a limit)\n        shardHasMoreBuckets = new BitSet(mcontext.numShards);\n      }\n      shardHasMoreBuckets.set(mcontext.shardNum);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRequestSortedMerger#merge(Object,Context).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void merge(Object facetResult, Context mcontext) {\n    SimpleOrderedMap res = (SimpleOrderedMap)facetResult;\n    Boolean more = (Boolean)res.get(\"more\");\n    if (more != null && more) {\n      if (shardHasMoreBuckets == null) {\n        // We really only need this if it's a partial facet (has a limit)\n        shardHasMoreBuckets = new BitSet(mcontext.numShards);\n      }\n      shardHasMoreBuckets.set(mcontext.shardNum);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRequestSortedMerger#merge(Object,Context).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void merge(Object facetResult, Context mcontext) {\n    SimpleOrderedMap res = (SimpleOrderedMap)facetResult;\n    Boolean more = (Boolean)res.get(\"more\");\n    if (more != null && more) {\n      if (shardHasMoreBuckets == null) {\n        // We really only need this if it's a partial facet (has a limit)\n        shardHasMoreBuckets = new BitSet(mcontext.numShards);\n      }\n      shardHasMoreBuckets.set(mcontext.shardNum);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84a99d9041ffa5585158e5a283ea1736b6b8b473","date":1532019928,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRequestSortedMerger#merge(Object,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRequestSortedMerger#merge(Object,Context).mjava","sourceNew":"  @Override\n  public void merge(Object facetResult, Context mcontext) {\n    this.mcontext = mcontext;\n    SimpleOrderedMap res = (SimpleOrderedMap)facetResult;\n    Boolean more = (Boolean)res.get(\"more\");\n    if (more != null && more) {\n      if (shardHasMoreBuckets == null) {\n        // We really only need this if it's a partial facet (has a limit)\n        shardHasMoreBuckets = new BitSet(mcontext.numShards);\n      }\n      shardHasMoreBuckets.set(mcontext.shardNum);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void merge(Object facetResult, Context mcontext) {\n    SimpleOrderedMap res = (SimpleOrderedMap)facetResult;\n    Boolean more = (Boolean)res.get(\"more\");\n    if (more != null && more) {\n      if (shardHasMoreBuckets == null) {\n        // We really only need this if it's a partial facet (has a limit)\n        shardHasMoreBuckets = new BitSet(mcontext.numShards);\n      }\n      shardHasMoreBuckets.set(mcontext.shardNum);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRequestSortedMerger#merge(Object,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRequestSortedMerger#merge(Object,Context).mjava","sourceNew":"  @Override\n  public void merge(Object facetResult, Context mcontext) {\n    this.mcontext = mcontext;\n    @SuppressWarnings({\"rawtypes\"})\n    SimpleOrderedMap res = (SimpleOrderedMap)facetResult;\n    Boolean more = (Boolean)res.get(\"more\");\n    if (more != null && more) {\n      if (shardHasMoreBuckets == null) {\n        // We really only need this if it's a partial facet (has a limit)\n        shardHasMoreBuckets = new BitSet(mcontext.numShards);\n      }\n      shardHasMoreBuckets.set(mcontext.shardNum);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void merge(Object facetResult, Context mcontext) {\n    this.mcontext = mcontext;\n    SimpleOrderedMap res = (SimpleOrderedMap)facetResult;\n    Boolean more = (Boolean)res.get(\"more\");\n    if (more != null && more) {\n      if (shardHasMoreBuckets == null) {\n        // We really only need this if it's a partial facet (has a limit)\n        shardHasMoreBuckets = new BitSet(mcontext.numShards);\n      }\n      shardHasMoreBuckets.set(mcontext.shardNum);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["84a99d9041ffa5585158e5a283ea1736b6b8b473"],"e8220da23feaeb400771f18161c4965dea5ab4cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e8220da23feaeb400771f18161c4965dea5ab4cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84a99d9041ffa5585158e5a283ea1736b6b8b473":["e8220da23feaeb400771f18161c4965dea5ab4cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e8220da23feaeb400771f18161c4965dea5ab4cd"]},"commit2Childs":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e8220da23feaeb400771f18161c4965dea5ab4cd":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","84a99d9041ffa5585158e5a283ea1736b6b8b473","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8220da23feaeb400771f18161c4965dea5ab4cd","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"84a99d9041ffa5585158e5a283ea1736b6b8b473":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}