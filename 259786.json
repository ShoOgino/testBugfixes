{"path":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestPhoneticFilterFactory#testUnknownEncoder().mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestPhoneticFilterFactory#testUnknownEncoder().mjava","pathOld":"/dev/null","sourceNew":"  public void testUnknownEncoder() throws IOException {\n    try {\n      Map<String,String> args = new HashMap<String,String>();\n      args.put(\"encoder\", \"XXX\");\n      PhoneticFilterFactory factory = new PhoneticFilterFactory(args);\n      factory.inform(new ClasspathResourceLoader(factory.getClass()));\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Error loading encoder\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestPhoneticFilterFactory#testUnknownEncoder().mjava","pathOld":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestPhoneticFilterFactory#testUnknownEncoder().mjava","sourceNew":"  public void testUnknownEncoder() throws IOException {\n    try {\n      Map<String,String> args = new HashMap<>();\n      args.put(\"encoder\", \"XXX\");\n      PhoneticFilterFactory factory = new PhoneticFilterFactory(args);\n      factory.inform(new ClasspathResourceLoader(factory.getClass()));\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Error loading encoder\"));\n    }\n  }\n\n","sourceOld":"  public void testUnknownEncoder() throws IOException {\n    try {\n      Map<String,String> args = new HashMap<String,String>();\n      args.put(\"encoder\", \"XXX\");\n      PhoneticFilterFactory factory = new PhoneticFilterFactory(args);\n      factory.inform(new ClasspathResourceLoader(factory.getClass()));\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Error loading encoder\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestPhoneticFilterFactory#testUnknownEncoder().mjava","pathOld":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestPhoneticFilterFactory#testUnknownEncoder().mjava","sourceNew":"  public void testUnknownEncoder() throws IOException {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      Map<String,String> args = new HashMap<>();\n      args.put(\"encoder\", \"XXX\");\n      PhoneticFilterFactory factory = new PhoneticFilterFactory(args);\n      factory.inform(new ClasspathResourceLoader(factory.getClass()));\n    });\n    assertTrue(expected.getMessage().contains(\"Error loading encoder\"));\n  }\n\n","sourceOld":"  public void testUnknownEncoder() throws IOException {\n    try {\n      Map<String,String> args = new HashMap<>();\n      args.put(\"encoder\", \"XXX\");\n      PhoneticFilterFactory factory = new PhoneticFilterFactory(args);\n      factory.inform(new ClasspathResourceLoader(factory.getClass()));\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Error loading encoder\"));\n    }\n  }\n\n","bugFix":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}