{"path":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(LeafReaderContext,Bits).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(LeafReaderContext,Bits).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      // Although this set only includes live docs, other filters can be pushed down to queries.\n      DocIdSet readerSet = filter.getDocIdSet(context, acceptDocs);\n      return new JoinScorer(this, readerSet == null ? DocIdSetIterator.empty() : readerSet.iterator(), getBoost());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"781239fc84d36be12b84e4d3e2618f5f07a182e3","date":1423139668,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(LeafReaderContext,Bits,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      // Although this set only includes live docs, other filters can be pushed down to queries.\n      DocIdSet readerSet = filter.getDocIdSet(context, acceptDocs);\n      return new JoinScorer(this, readerSet == null ? DocIdSetIterator.empty() : readerSet.iterator(), getBoost());\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      // Although this set only includes live docs, other filters can be pushed down to queries.\n      DocIdSet readerSet = filter.getDocIdSet(context, acceptDocs);\n      return new JoinScorer(this, readerSet == null ? DocIdSetIterator.empty() : readerSet.iterator(), getBoost());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(LeafReaderContext,Bits).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(LeafReaderContext,Bits,boolean).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      // Although this set only includes live docs, other filters can be pushed down to queries.\n      DocIdSet readerSet = filter.getDocIdSet(context, acceptDocs);\n      return new JoinScorer(this, readerSet == null ? DocIdSetIterator.empty() : readerSet.iterator(), getBoost());\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      // Although this set only includes live docs, other filters can be pushed down to queries.\n      DocIdSet readerSet = filter.getDocIdSet(context, acceptDocs);\n      return new JoinScorer(this, readerSet == null ? DocIdSetIterator.empty() : readerSet.iterator(), getBoost());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7f94ff172f40ff68a926d112e25b96bc38e5a27","date":1431002360,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(LeafReaderContext,Bits).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      // Although this set only includes live docs, other filters can be pushed down to queries.\n      DocIdSet readerSet = filter.getDocIdSet(context, acceptDocs);\n      if (readerSet == null) {\n        return null;\n      }\n      DocIdSetIterator readerSetIterator = readerSet.iterator();\n      if (readerSetIterator == null) {\n        return null;\n      }\n      return new ConstantScoreScorer(this, score(), readerSetIterator);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      // Although this set only includes live docs, other filters can be pushed down to queries.\n      DocIdSet readerSet = filter.getDocIdSet(context, acceptDocs);\n      return new JoinScorer(this, readerSet == null ? DocIdSetIterator.empty() : readerSet.iterator(), getBoost());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin].JoinQueryWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      // Although this set only includes live docs, other filters can be pushed down to queries.\n      DocIdSet readerSet = filter.getDocIdSet(context, null);\n      if (readerSet == null) {\n        return null;\n      }\n      DocIdSetIterator readerSetIterator = readerSet.iterator();\n      if (readerSetIterator == null) {\n        return null;\n      }\n      return new ConstantScoreScorer(this, score(), readerSetIterator);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      if (filter == null) {\n        boolean debug = rb != null && rb.isDebug();\n        long start = debug ? System.currentTimeMillis() : 0;\n        resultSet = getDocSet();\n        long end = debug ? System.currentTimeMillis() : 0;\n\n        if (debug) {\n          SimpleOrderedMap<Object> dbg = new SimpleOrderedMap<>();\n          dbg.add(\"time\", (end-start));\n          dbg.add(\"fromSetSize\", fromSetSize);  // the input\n          dbg.add(\"toSetSize\", resultSet.size());    // the output\n\n          dbg.add(\"fromTermCount\", fromTermCount);\n          dbg.add(\"fromTermTotalDf\", fromTermTotalDf);\n          dbg.add(\"fromTermDirectCount\", fromTermDirectCount);\n          dbg.add(\"fromTermHits\", fromTermHits);\n          dbg.add(\"fromTermHitsTotalDf\", fromTermHitsTotalDf);\n          dbg.add(\"toTermHits\", toTermHits);\n          dbg.add(\"toTermHitsTotalDf\", toTermHitsTotalDf);\n          dbg.add(\"toTermDirectCount\", toTermDirectCount);\n          dbg.add(\"smallSetsDeferred\", smallSetsDeferred);\n          dbg.add(\"toSetDocsAdded\", resultListDocs);\n\n          // TODO: perhaps synchronize  addDebug in the future...\n          rb.addDebug(dbg, \"join\", JoinQuery.this.toString());\n        }\n\n        filter = resultSet.getTopFilter();\n      }\n\n      // Although this set only includes live docs, other filters can be pushed down to queries.\n      DocIdSet readerSet = filter.getDocIdSet(context, acceptDocs);\n      if (readerSet == null) {\n        return null;\n      }\n      DocIdSetIterator readerSetIterator = readerSet.iterator();\n      if (readerSetIterator == null) {\n        return null;\n      }\n      return new ConstantScoreScorer(this, score(), readerSetIterator);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["a7f94ff172f40ff68a926d112e25b96bc38e5a27"],"a7f94ff172f40ff68a926d112e25b96bc38e5a27":["fb17639909a369c1e64866842e5c213440acc17e"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["a7f94ff172f40ff68a926d112e25b96bc38e5a27"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a7f94ff172f40ff68a926d112e25b96bc38e5a27":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["fb17639909a369c1e64866842e5c213440acc17e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}