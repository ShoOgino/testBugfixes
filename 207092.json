{"path":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#doTestSplitByPaths(SolrIndexSplitter.SplitMethod).mjava","commits":[{"id":"20c968c14aace7cf49843bf2c1fafc7fd3845659","date":1533133859,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#doTestSplitByPaths(SolrIndexSplitter.SplitMethod).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestSplitByPaths(SolrIndexSplitter.SplitMethod splitMethod) throws Exception {\n    LocalSolrQueryRequest request = null;\n    try {\n      // add two docs\n      String id1 = \"dorothy\";\n      assertU(adoc(\"id\", id1));\n      String id2 = \"kansas\";\n      assertU(adoc(\"id\", id2));\n      assertU(commit());\n      assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==2\");\n\n      // find minHash/maxHash hash ranges\n      List<DocRouter.Range> ranges = getRanges(id1, id2);\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      SplitIndexCommand command = new SplitIndexCommand(request, rsp,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath()), null, ranges, new PlainIdRouter(), null, null, splitMethod);\n      doSplit(command);\n\n      Directory directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"id:dorothy should be present in split index1\", 1, reader.docFreq(new Term(\"id\", \"dorothy\")));\n      assertEquals(\"id:kansas should not be present in split index1\", 0, reader.docFreq(new Term(\"id\", \"kansas\")));\n      assertEquals(\"split index1 should have only one document\", 1, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"id:dorothy should not be present in split index2\", 0, reader.docFreq(new Term(\"id\", \"dorothy\")));\n      assertEquals(\"id:kansas should be present in split index2\", 1, reader.docFreq(new Term(\"id\", \"kansas\")));\n      assertEquals(\"split index2 should have only one document\", 1, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20c968c14aace7cf49843bf2c1fafc7fd3845659"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20c968c14aace7cf49843bf2c1fafc7fd3845659"],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}