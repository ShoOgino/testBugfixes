{"path":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","commits":[{"id":"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","date":1358521790,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/SimpleDVConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","sourceNew":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            values.lookupOrd(ord, scratch);\n          }\n        }\n\n        return null;\n      }\n\n","sourceOld":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            values.lookupOrd(ord, scratch);\n          }\n        }\n\n        return null;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33feaba5d317bf4ee3eec58c327ed68858c9cac9","date":1359587256,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","sourceNew":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            lastOrd = ord;\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs): nocommit: why?!\n            values.lookupOrd(ord, scratch);\n          }\n        }\n\n        return null;\n      }\n\n","sourceOld":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs):\n            values.lookupOrd(ord, scratch);\n          }\n        }\n\n        return null;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2f28977fb59bf3be28fb3a3799ad7e88b0cf2ac","date":1359592871,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","sourceNew":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            lastOrd = ord;\n            return scratch;\n          }\n        }\n\n        return null;\n      }\n\n","sourceOld":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            lastOrd = ord;\n            return scratch;\n          } else {\n            // Skip \"deleted\" terms (ie, terms that were not\n            // referenced by any live docs): nocommit: why?!\n            values.lookupOrd(ord, scratch);\n          }\n        }\n\n        return null;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67445ba6570b72d1e617d3a85562eabf92790274","date":1359593235,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","sourceNew":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          }\n        }\n\n        return null;\n      }\n\n","sourceOld":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            lastOrd = ord;\n            return scratch;\n          }\n        }\n\n        return null;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","pathOld":"/dev/null","sourceNew":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          }\n        }\n\n        return null;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f366ce28775e2b8ea4e06355009471328711666d","date":1360551293,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","sourceNew":null,"sourceOld":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          }\n        }\n\n        return null;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesConsumer.SortedBytesMerger.SegmentState#nextTerm().mjava","sourceNew":null,"sourceOld":"      public BytesRef nextTerm() {\n        while (ord < values.getValueCount()-1) {\n          ord++;\n          if (liveTerms == null || liveTerms.get(ord)) {\n            values.lookupOrd(ord, scratch);\n            return scratch;\n          }\n        }\n\n        return null;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2f28977fb59bf3be28fb3a3799ad7e88b0cf2ac":["33feaba5d317bf4ee3eec58c327ed68858c9cac9"],"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","67445ba6570b72d1e617d3a85562eabf92790274"],"67445ba6570b72d1e617d3a85562eabf92790274":["c2f28977fb59bf3be28fb3a3799ad7e88b0cf2ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f366ce28775e2b8ea4e06355009471328711666d":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"33feaba5d317bf4ee3eec58c327ed68858c9cac9":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["d4d69c535930b5cce125cff868d40f6373dc27d4","f366ce28775e2b8ea4e06355009471328711666d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddbb72a33557d2b5bc22ee95daf3281c43560502"]},"commit2Childs":{"c2f28977fb59bf3be28fb3a3799ad7e88b0cf2ac":["67445ba6570b72d1e617d3a85562eabf92790274"],"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["33feaba5d317bf4ee3eec58c327ed68858c9cac9"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["f366ce28775e2b8ea4e06355009471328711666d","ddbb72a33557d2b5bc22ee95daf3281c43560502"],"67445ba6570b72d1e617d3a85562eabf92790274":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","d4d69c535930b5cce125cff868d40f6373dc27d4"],"f366ce28775e2b8ea4e06355009471328711666d":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"33feaba5d317bf4ee3eec58c327ed68858c9cac9":["c2f28977fb59bf3be28fb3a3799ad7e88b0cf2ac"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}