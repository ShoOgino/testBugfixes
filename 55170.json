{"path":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_3().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_3().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_3().mjava","sourceNew":"        private boolean r_Step_3() {\n            int among_var;\n            // (, line 94\n            // [, line 95\n            ket = cursor;\n            // among, line 95\n            among_var = find_among_b(a_2, 14);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // (, line 95\n            // ], line 95\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 96\n                    // call R1, line 96\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // <-, line 96\n                    slice_from(\"eer\");\n                    break;\n                case 2:\n                    // (, line 97\n                    // call R1, line 97\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 97\n                    slice_del();\n                    // call lengthen_V, line 97\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 3:\n                    // (, line 100\n                    // call R1, line 100\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 100\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 101\n                    // <-, line 101\n                    slice_from(\"r\");\n                    break;\n                case 5:\n                    // (, line 104\n                    // call R1, line 104\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 104\n                    slice_del();\n                    // call lengthen_V, line 104\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 6:\n                    // (, line 105\n                    // call R1, line 105\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 105\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 105\n                    slice_from(\"aar\");\n                    break;\n                case 7:\n                    // (, line 106\n                    // call R2, line 106\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 106\n                    slice_del();\n                    // attach, line 106\n                    insert(cursor, cursor, \"f\");\n                    // call lengthen_V, line 106\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 8:\n                    // (, line 107\n                    // call R2, line 107\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 107\n                    slice_del();\n                    // attach, line 107\n                    insert(cursor, cursor, \"g\");\n                    // call lengthen_V, line 107\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 9:\n                    // (, line 108\n                    // call R1, line 108\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 108\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 108\n                    slice_from(\"t\");\n                    break;\n                case 10:\n                    // (, line 109\n                    // call R1, line 109\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 109\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 109\n                    slice_from(\"d\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_3() {\n            int among_var;\n            // (, line 94\n            // [, line 95\n            ket = cursor;\n            // among, line 95\n            among_var = find_among_b(a_2, 14);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // (, line 95\n            // ], line 95\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 96\n                    // call R1, line 96\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // <-, line 96\n                    slice_from(\"eer\");\n                    break;\n                case 2:\n                    // (, line 97\n                    // call R1, line 97\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 97\n                    slice_del();\n                    // call lengthen_V, line 97\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 3:\n                    // (, line 100\n                    // call R1, line 100\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 100\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 101\n                    // <-, line 101\n                    slice_from(\"r\");\n                    break;\n                case 5:\n                    // (, line 104\n                    // call R1, line 104\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 104\n                    slice_del();\n                    // call lengthen_V, line 104\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 6:\n                    // (, line 105\n                    // call R1, line 105\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 105\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 105\n                    slice_from(\"aar\");\n                    break;\n                case 7:\n                    // (, line 106\n                    // call R2, line 106\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 106\n                    slice_del();\n                    // attach, line 106\n                    insert(cursor, cursor, \"f\");\n                    // call lengthen_V, line 106\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 8:\n                    // (, line 107\n                    // call R2, line 107\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 107\n                    slice_del();\n                    // attach, line 107\n                    insert(cursor, cursor, \"g\");\n                    // call lengthen_V, line 107\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 9:\n                    // (, line 108\n                    // call R1, line 108\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 108\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 108\n                    slice_from(\"t\");\n                    break;\n                case 10:\n                    // (, line 109\n                    // call R1, line 109\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 109\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 109\n                    slice_from(\"d\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_3().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer#r_Step_3().mjava","sourceNew":"        private boolean r_Step_3() {\n            int among_var;\n            // (, line 94\n            // [, line 95\n            ket = cursor;\n            // among, line 95\n            among_var = find_among_b(a_2, 14);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // (, line 95\n            // ], line 95\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 96\n                    // call R1, line 96\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // <-, line 96\n                    slice_from(\"eer\");\n                    break;\n                case 2:\n                    // (, line 97\n                    // call R1, line 97\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 97\n                    slice_del();\n                    // call lengthen_V, line 97\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 3:\n                    // (, line 100\n                    // call R1, line 100\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 100\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 101\n                    // <-, line 101\n                    slice_from(\"r\");\n                    break;\n                case 5:\n                    // (, line 104\n                    // call R1, line 104\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 104\n                    slice_del();\n                    // call lengthen_V, line 104\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 6:\n                    // (, line 105\n                    // call R1, line 105\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 105\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 105\n                    slice_from(\"aar\");\n                    break;\n                case 7:\n                    // (, line 106\n                    // call R2, line 106\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 106\n                    slice_del();\n                    // attach, line 106\n                    insert(cursor, cursor, \"f\");\n                    // call lengthen_V, line 106\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 8:\n                    // (, line 107\n                    // call R2, line 107\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 107\n                    slice_del();\n                    // attach, line 107\n                    insert(cursor, cursor, \"g\");\n                    // call lengthen_V, line 107\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 9:\n                    // (, line 108\n                    // call R1, line 108\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 108\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 108\n                    slice_from(\"t\");\n                    break;\n                case 10:\n                    // (, line 109\n                    // call R1, line 109\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 109\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 109\n                    slice_from(\"d\");\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_3() {\n            int among_var;\n            // (, line 94\n            // [, line 95\n            ket = cursor;\n            // among, line 95\n            among_var = find_among_b(a_2, 14);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // (, line 95\n            // ], line 95\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 96\n                    // call R1, line 96\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // <-, line 96\n                    slice_from(\"eer\");\n                    break;\n                case 2:\n                    // (, line 97\n                    // call R1, line 97\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 97\n                    slice_del();\n                    // call lengthen_V, line 97\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 3:\n                    // (, line 100\n                    // call R1, line 100\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 100\n                    slice_del();\n                    break;\n                case 4:\n                    // (, line 101\n                    // <-, line 101\n                    slice_from(\"r\");\n                    break;\n                case 5:\n                    // (, line 104\n                    // call R1, line 104\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // delete, line 104\n                    slice_del();\n                    // call lengthen_V, line 104\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 6:\n                    // (, line 105\n                    // call R1, line 105\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 105\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 105\n                    slice_from(\"aar\");\n                    break;\n                case 7:\n                    // (, line 106\n                    // call R2, line 106\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 106\n                    slice_del();\n                    // attach, line 106\n                    insert(cursor, cursor, \"f\");\n                    // call lengthen_V, line 106\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 8:\n                    // (, line 107\n                    // call R2, line 107\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 107\n                    slice_del();\n                    // attach, line 107\n                    insert(cursor, cursor, \"g\");\n                    // call lengthen_V, line 107\n                    if (!r_lengthen_V())\n                    {\n                        return false;\n                    }\n                    break;\n                case 9:\n                    // (, line 108\n                    // call R1, line 108\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 108\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 108\n                    slice_from(\"t\");\n                    break;\n                case 10:\n                    // (, line 109\n                    // call R1, line 109\n                    if (!r_R1())\n                    {\n                        return false;\n                    }\n                    // call C, line 109\n                    if (!r_C())\n                    {\n                        return false;\n                    }\n                    // <-, line 109\n                    slice_from(\"d\");\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}