{"path":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","commits":[{"id":"637a392e2e05d4e1179ac3c532cfeef0cde977ba","date":1376347977,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<SolrInputDocument>();\n    recUnwrapp(unwrappedDocs, root);\n    Collections.reverse(unwrappedDocs);\n    return unwrappedDocs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<SolrInputDocument>();\n    recUnwrapp(unwrappedDocs, root);\n    Collections.reverse(unwrappedDocs);\n    return unwrappedDocs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"49368dc30c6d7f57e2547707f2a26a2e790dc587","date":1378306664,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","sourceNew":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<SolrInputDocument>();\n    recUnwrapp(unwrappedDocs, root);\n    return unwrappedDocs;\n  }\n\n","sourceOld":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<SolrInputDocument>();\n    recUnwrapp(unwrappedDocs, root);\n    Collections.reverse(unwrappedDocs);\n    return unwrappedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","sourceNew":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    recUnwrapp(unwrappedDocs, root);\n    return unwrappedDocs;\n  }\n\n","sourceOld":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<SolrInputDocument>();\n    recUnwrapp(unwrappedDocs, root);\n    return unwrappedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92f8ab19a30ff70981e43b8cc78069cb0941476e","date":1497374252,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","sourceNew":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    recUnwrapp(unwrappedDocs, root);\n    if (1 < unwrappedDocs.size() && ! req.getSchema().isUsableForChildDocs()) {\n      throw new SolrException\n        (SolrException.ErrorCode.BAD_REQUEST, \"Unable to index docs with children: the schema must \" +\n         \"include definitions for both a uniqueKey field and the '\" + IndexSchema.ROOT_FIELD_NAME +\n         \"' field, using the exact same fieldType\");\n    }\n    return unwrappedDocs;\n  }\n\n","sourceOld":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    recUnwrapp(unwrappedDocs, root);\n    return unwrappedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","sourceNew":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    recUnwrapp(unwrappedDocs, root);\n    if (1 < unwrappedDocs.size() && ! req.getSchema().isUsableForChildDocs()) {\n      throw new SolrException\n        (SolrException.ErrorCode.BAD_REQUEST, \"Unable to index docs with children: the schema must \" +\n         \"include definitions for both a uniqueKey field and the '\" + IndexSchema.ROOT_FIELD_NAME +\n         \"' field, using the exact same fieldType\");\n    }\n    return unwrappedDocs;\n  }\n\n","sourceOld":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    recUnwrapp(unwrappedDocs, root);\n    return unwrappedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","sourceNew":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    recUnwrapp(unwrappedDocs, root);\n    if (1 < unwrappedDocs.size() && ! req.getSchema().isUsableForChildDocs()) {\n      throw new SolrException\n        (SolrException.ErrorCode.BAD_REQUEST, \"Unable to index docs with children: the schema must \" +\n         \"include definitions for both a uniqueKey field and the '\" + IndexSchema.ROOT_FIELD_NAME +\n         \"' field, using the exact same fieldType\");\n    }\n    return unwrappedDocs;\n  }\n\n","sourceOld":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    recUnwrapp(unwrappedDocs, root);\n    return unwrappedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5ce7c704ca874aa623a99f2669737b52ec71cfc","date":1528728510,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","sourceNew":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    flattenAnonymous(unwrappedDocs, root, true);\n    flattenLabelled(unwrappedDocs, root, true);\n    unwrappedDocs.add(root);\n\n    return unwrappedDocs;\n  }\n\n","sourceOld":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    recUnwrapp(unwrappedDocs, root);\n    if (1 < unwrappedDocs.size() && ! req.getSchema().isUsableForChildDocs()) {\n      throw new SolrException\n        (SolrException.ErrorCode.BAD_REQUEST, \"Unable to index docs with children: the schema must \" +\n         \"include definitions for both a uniqueKey field and the '\" + IndexSchema.ROOT_FIELD_NAME +\n         \"' field, using the exact same fieldType\");\n    }\n    return unwrappedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","sourceNew":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    flattenAnonymous(unwrappedDocs, root, true);\n    flattenLabelled(unwrappedDocs, root, true);\n    unwrappedDocs.add(root);\n\n    return unwrappedDocs;\n  }\n\n","sourceOld":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    recUnwrapp(unwrappedDocs, root);\n    if (1 < unwrappedDocs.size() && ! req.getSchema().isUsableForChildDocs()) {\n      throw new SolrException\n        (SolrException.ErrorCode.BAD_REQUEST, \"Unable to index docs with children: the schema must \" +\n         \"include definitions for both a uniqueKey field and the '\" + IndexSchema.ROOT_FIELD_NAME +\n         \"' field, using the exact same fieldType\");\n    }\n    return unwrappedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#flatten(SolrInputDocument).mjava","sourceNew":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    flattenAnonymous(unwrappedDocs, root, true);\n    flattenLabelled(unwrappedDocs, root, true);\n    unwrappedDocs.add(root);\n\n    return unwrappedDocs;\n  }\n\n","sourceOld":"  private List<SolrInputDocument> flatten(SolrInputDocument root) {\n    List<SolrInputDocument> unwrappedDocs = new ArrayList<>();\n    recUnwrapp(unwrappedDocs, root);\n    if (1 < unwrappedDocs.size() && ! req.getSchema().isUsableForChildDocs()) {\n      throw new SolrException\n        (SolrException.ErrorCode.BAD_REQUEST, \"Unable to index docs with children: the schema must \" +\n         \"include definitions for both a uniqueKey field and the '\" + IndexSchema.ROOT_FIELD_NAME +\n         \"' field, using the exact same fieldType\");\n    }\n    return unwrappedDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["49368dc30c6d7f57e2547707f2a26a2e790dc587"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["28288370235ed02234a64753cdbf0c6ec096304a","c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92f8ab19a30ff70981e43b8cc78069cb0941476e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"49368dc30c6d7f57e2547707f2a26a2e790dc587":["637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","92f8ab19a30ff70981e43b8cc78069cb0941476e"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","92f8ab19a30ff70981e43b8cc78069cb0941476e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["28288370235ed02234a64753cdbf0c6ec096304a","c5ce7c704ca874aa623a99f2669737b52ec71cfc"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["92f8ab19a30ff70981e43b8cc78069cb0941476e","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","49368dc30c6d7f57e2547707f2a26a2e790dc587"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"92f8ab19a30ff70981e43b8cc78069cb0941476e":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"49368dc30c6d7f57e2547707f2a26a2e790dc587":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"28288370235ed02234a64753cdbf0c6ec096304a":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","c5ce7c704ca874aa623a99f2669737b52ec71cfc","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}