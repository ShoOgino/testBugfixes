{"path":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", SimpleAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", SimpleAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", SimpleAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["d572389229127c297dd1fa5ce4758e1cec41e799","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["d572389229127c297dd1fa5ce4758e1cec41e799"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["d572389229127c297dd1fa5ce4758e1cec41e799","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d572389229127c297dd1fa5ce4758e1cec41e799":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}