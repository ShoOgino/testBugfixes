{"path":"solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest#testSpatial().mjava","commits":[{"id":"6f2639dac7d9a6031cd30959c85c189fc690e1f5","date":1426025590,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest#testSpatial().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSpatial() throws Exception {\n    FieldAnalysisRequest request = new FieldAnalysisRequest();\n    request.addFieldType(\"location_rpt\");\n    request.setFieldValue(\"MULTIPOINT ((10 40), (40 30), (20 20), (30 10))\");\n\n    NamedList<NamedList> result = handler.handleAnalysisRequest(request, h.getCore().getLatestSchema());\n    NamedList<List<NamedList>> tokens = (NamedList<List<NamedList>>)\n        ((NamedList)result.get(\"field_types\").get(\"location_rpt\")).get(\"index\");\n    List<NamedList> tokenList = tokens.get(\"org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream\");\n    \n    assertEquals(\"s\", tokenList.get(0).get(\"text\") );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7043e7411cdd4dbbc872bf9fedd21231168cd5b8","date":1426087141,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest#testSpatial().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testSpatial() throws Exception {\n    FieldAnalysisRequest request = new FieldAnalysisRequest();\n    request.addFieldType(\"location_rpt\");\n    request.setFieldValue(\"MULTIPOINT ((10 40), (40 30), (20 20), (30 10))\");\n\n    NamedList<NamedList> result = handler.handleAnalysisRequest(request, h.getCore().getLatestSchema());\n    NamedList<List<NamedList>> tokens = (NamedList<List<NamedList>>)\n        ((NamedList)result.get(\"field_types\").get(\"location_rpt\")).get(\"index\");\n    List<NamedList> tokenList = tokens.get(\"org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream\");\n    \n    assertEquals(\"s\", tokenList.get(0).get(\"text\") );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ae131ec9cda430231fcefc081a4c4f5d29238ee","date":1426094638,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest#testSpatial().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSpatial() throws Exception {\n    FieldAnalysisRequest request = new FieldAnalysisRequest();\n    request.addFieldType(\"location_rpt\");\n    request.setFieldValue(\"MULTIPOINT ((10 40), (40 30), (20 20), (30 10))\");\n\n    NamedList<NamedList> result = handler.handleAnalysisRequest(request, h.getCore().getLatestSchema());\n    NamedList<List<NamedList>> tokens = (NamedList<List<NamedList>>)\n        ((NamedList)result.get(\"field_types\").get(\"location_rpt\")).get(\"index\");\n    List<NamedList> tokenList = tokens.get(\"org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream\");\n\n    assertTrue( tokenList.get(0).get(\"text\").toString().startsWith(\"s\") );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f253122fc4a1143f3b5c56e8588458ee0778630c","date":1426096019,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest#testSpatial().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest#testSpatial().mjava","sourceNew":"  @Test\n  public void testSpatial() throws Exception {\n    FieldAnalysisRequest request = new FieldAnalysisRequest();\n    request.addFieldType(\"location_rpt\");\n    request.setFieldValue(\"MULTIPOINT ((10 40), (40 30), (20 20), (30 10))\");\n\n    NamedList<NamedList> result = handler.handleAnalysisRequest(request, h.getCore().getLatestSchema());\n    NamedList<List<NamedList>> tokens = (NamedList<List<NamedList>>)\n        ((NamedList)result.get(\"field_types\").get(\"location_rpt\")).get(\"index\");\n    List<NamedList> tokenList = tokens.get(\"org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream\");\n\n\n    List<String> vals = new ArrayList<>(tokenList.size());\n    for(NamedList v : tokenList) {\n      vals.add( (String)v.get(\"text\") );\n    }\n    Collections.sort(vals);\n    assertEquals( \"[s, s7, s7w, s7w1+, s9, s9v, s9v2+, sp, spp, spp5+, sv, svk, svk6+]\", vals.toString() );\n  }\n\n","sourceOld":"  @Test\n  public void testSpatial() throws Exception {\n    FieldAnalysisRequest request = new FieldAnalysisRequest();\n    request.addFieldType(\"location_rpt\");\n    request.setFieldValue(\"MULTIPOINT ((10 40), (40 30), (20 20), (30 10))\");\n\n    NamedList<NamedList> result = handler.handleAnalysisRequest(request, h.getCore().getLatestSchema());\n    NamedList<List<NamedList>> tokens = (NamedList<List<NamedList>>)\n        ((NamedList)result.get(\"field_types\").get(\"location_rpt\")).get(\"index\");\n    List<NamedList> tokenList = tokens.get(\"org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream\");\n\n    assertTrue( tokenList.get(0).get(\"text\").toString().startsWith(\"s\") );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest#testSpatial().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSpatial() throws Exception {\n    FieldAnalysisRequest request = new FieldAnalysisRequest();\n    request.addFieldType(\"location_rpt\");\n    request.setFieldValue(\"MULTIPOINT ((10 40), (40 30), (20 20), (30 10))\");\n\n    NamedList<NamedList> result = handler.handleAnalysisRequest(request, h.getCore().getLatestSchema());\n    NamedList<List<NamedList>> tokens = (NamedList<List<NamedList>>)\n        ((NamedList)result.get(\"field_types\").get(\"location_rpt\")).get(\"index\");\n    List<NamedList> tokenList = tokens.get(\"org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream\");\n\n\n    List<String> vals = new ArrayList<>(tokenList.size());\n    for(NamedList v : tokenList) {\n      vals.add( (String)v.get(\"text\") );\n    }\n    Collections.sort(vals);\n    assertEquals( \"[s, s7, s7w, s7w1+, s9, s9v, s9v2+, sp, spp, spp5+, sv, svk, svk6+]\", vals.toString() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fac252ef8e3d0bbff9303ffbf675e824a729dfaf","date":1537347776,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest#testSpatial().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest#testSpatial().mjava","sourceNew":"  @Test\n  public void testSpatial() throws Exception {\n    FieldAnalysisRequest request = new FieldAnalysisRequest();\n    request.addFieldType(\"location_rpt\");\n    request.setFieldValue(\"MULTIPOINT ((10 40), (40 30), (20 20), (30 10))\");\n\n    NamedList<NamedList> result = handler.handleAnalysisRequest(request, h.getCore().getLatestSchema());\n    NamedList<List<NamedList>> tokens = (NamedList<List<NamedList>>)\n        ((NamedList)result.get(\"field_types\").get(\"location_rpt\")).get(\"index\");\n    List<NamedList> tokenList = tokens.get(\"org.apache.lucene.spatial.prefix.PrefixTreeStrategy$ShapeTokenStream\");\n\n\n    List<String> vals = new ArrayList<>(tokenList.size());\n    for(NamedList v : tokenList) {\n      vals.add( (String)v.get(\"text\") );\n    }\n    Collections.sort(vals);\n    assertEquals( \"[s, s7, s7w, s7w1+, s9, s9v, s9v2+, sp, spp, spp5+, sv, svk, svk6+]\", vals.toString() );\n  }\n\n","sourceOld":"  @Test\n  public void testSpatial() throws Exception {\n    FieldAnalysisRequest request = new FieldAnalysisRequest();\n    request.addFieldType(\"location_rpt\");\n    request.setFieldValue(\"MULTIPOINT ((10 40), (40 30), (20 20), (30 10))\");\n\n    NamedList<NamedList> result = handler.handleAnalysisRequest(request, h.getCore().getLatestSchema());\n    NamedList<List<NamedList>> tokens = (NamedList<List<NamedList>>)\n        ((NamedList)result.get(\"field_types\").get(\"location_rpt\")).get(\"index\");\n    List<NamedList> tokenList = tokens.get(\"org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream\");\n\n\n    List<String> vals = new ArrayList<>(tokenList.size());\n    for(NamedList v : tokenList) {\n      vals.add( (String)v.get(\"text\") );\n    }\n    Collections.sort(vals);\n    assertEquals( \"[s, s7, s7w, s7w1+, s9, s9v, s9v2+, sp, spp, spp5+, sv, svk, svk6+]\", vals.toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest#testSpatial().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/FieldAnalysisRequestHandlerTest#testSpatial().mjava","sourceNew":"  @Test\n  public void testSpatial() throws Exception {\n    FieldAnalysisRequest request = new FieldAnalysisRequest();\n    request.addFieldType(\"location_rpt\");\n    request.setFieldValue(\"MULTIPOINT ((10 40), (40 30), (20 20), (30 10))\");\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList<NamedList> result = handler.handleAnalysisRequest(request, h.getCore().getLatestSchema());\n    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    NamedList<List<NamedList>> tokens = (NamedList<List<NamedList>>)\n        ((NamedList)result.get(\"field_types\").get(\"location_rpt\")).get(\"index\");\n    @SuppressWarnings({\"rawtypes\"})\n    List<NamedList> tokenList = tokens.get(\"org.apache.lucene.spatial.prefix.PrefixTreeStrategy$ShapeTokenStream\");\n\n\n    List<String> vals = new ArrayList<>(tokenList.size());\n    for(@SuppressWarnings({\"rawtypes\"})NamedList v : tokenList) {\n      vals.add( (String)v.get(\"text\") );\n    }\n    Collections.sort(vals);\n    assertEquals( \"[s, s7, s7w, s7w1+, s9, s9v, s9v2+, sp, spp, spp5+, sv, svk, svk6+]\", vals.toString() );\n  }\n\n","sourceOld":"  @Test\n  public void testSpatial() throws Exception {\n    FieldAnalysisRequest request = new FieldAnalysisRequest();\n    request.addFieldType(\"location_rpt\");\n    request.setFieldValue(\"MULTIPOINT ((10 40), (40 30), (20 20), (30 10))\");\n\n    NamedList<NamedList> result = handler.handleAnalysisRequest(request, h.getCore().getLatestSchema());\n    NamedList<List<NamedList>> tokens = (NamedList<List<NamedList>>)\n        ((NamedList)result.get(\"field_types\").get(\"location_rpt\")).get(\"index\");\n    List<NamedList> tokenList = tokens.get(\"org.apache.lucene.spatial.prefix.PrefixTreeStrategy$ShapeTokenStream\");\n\n\n    List<String> vals = new ArrayList<>(tokenList.size());\n    for(NamedList v : tokenList) {\n      vals.add( (String)v.get(\"text\") );\n    }\n    Collections.sort(vals);\n    assertEquals( \"[s, s7, s7w, s7w1+, s9, s9v, s9v2+, sp, spp, spp5+, sv, svk, svk6+]\", vals.toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6f2639dac7d9a6031cd30959c85c189fc690e1f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f253122fc4a1143f3b5c56e8588458ee0778630c"],"9ae131ec9cda430231fcefc081a4c4f5d29238ee":["7043e7411cdd4dbbc872bf9fedd21231168cd5b8"],"fac252ef8e3d0bbff9303ffbf675e824a729dfaf":["f253122fc4a1143f3b5c56e8588458ee0778630c"],"7043e7411cdd4dbbc872bf9fedd21231168cd5b8":["6f2639dac7d9a6031cd30959c85c189fc690e1f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f253122fc4a1143f3b5c56e8588458ee0778630c":["9ae131ec9cda430231fcefc081a4c4f5d29238ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["fac252ef8e3d0bbff9303ffbf675e824a729dfaf"]},"commit2Childs":{"6f2639dac7d9a6031cd30959c85c189fc690e1f5":["7043e7411cdd4dbbc872bf9fedd21231168cd5b8"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"9ae131ec9cda430231fcefc081a4c4f5d29238ee":["f253122fc4a1143f3b5c56e8588458ee0778630c"],"7043e7411cdd4dbbc872bf9fedd21231168cd5b8":["9ae131ec9cda430231fcefc081a4c4f5d29238ee"],"fac252ef8e3d0bbff9303ffbf675e824a729dfaf":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6f2639dac7d9a6031cd30959c85c189fc690e1f5","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"f253122fc4a1143f3b5c56e8588458ee0778630c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fac252ef8e3d0bbff9303ffbf675e824a729dfaf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}