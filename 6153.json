{"path":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","commits":[{"id":"73cb3e2c71d5364fdb924c39cf9d7d1a25991413","date":1400838672,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","pathOld":"/dev/null","sourceNew":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    try {\n      DirectoryReader.openIfChanged(r);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","sourceNew":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    try {\n      DirectoryReader.openIfChanged(r);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    try {\n      DirectoryReader.openIfChanged(r);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","sourceNew":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFiles(Collections.singleton(fileName));\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    try {\n      DirectoryReader.openIfChanged(r);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    try {\n      DirectoryReader.openIfChanged(r);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1","date":1454513757,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","sourceNew":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    try {\n      DirectoryReader.openIfChanged(r);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFiles(Collections.singleton(fileName));\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    try {\n      DirectoryReader.openIfChanged(r);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","sourceNew":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    expectThrows(IllegalStateException.class, () -> {\n      DirectoryReader.openIfChanged(r);\n    });\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    try {\n      DirectoryReader.openIfChanged(r);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":["73cb3e2c71d5364fdb924c39cf9d7d1a25991413"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a90cc8c90aa53ddf51fbd15019989ac269514a3","date":1531845066,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","sourceNew":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    expectThrows(IllegalStateException.class, () -> {\n      DirectoryReader.openIfChanged(r);\n    });\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    expectThrows(IllegalStateException.class, () -> {\n      DirectoryReader.openIfChanged(r);\n    });\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","sourceNew":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    expectThrows(IllegalStateException.class, () -> {\n      DirectoryReader.openIfChanged(r);\n    });\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    expectThrows(IllegalStateException.class, () -> {\n      DirectoryReader.openIfChanged(r);\n    });\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReaderReopen#testNPEAfterInvalidReindex1().mjava","sourceNew":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new ByteBuffersDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    expectThrows(IllegalStateException.class, () -> {\n      DirectoryReader.openIfChanged(r);\n    });\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNPEAfterInvalidReindex1() throws Exception {\n    Directory dir = new RAMDirectory();\n\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"id\"));\n    w.commit();\n    w.close();\n\n    // Open reader w/ one segment w/ 2 docs, 1 deleted:\n    DirectoryReader r = DirectoryReader.open(dir);\n\n    // Blow away the index:\n    for(String fileName : dir.listAll()) {\n      dir.deleteFile(fileName);\n    }\n\n    w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id\", Field.Store.NO));\n    doc.add(new NumericDocValuesField(\"ndv\", 13));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"id\", \"id2\", Field.Store.NO));\n    w.addDocument(doc);\n    w.updateNumericDocValue(new Term(\"id\", \"id\"), \"ndv\", 17L);\n    w.commit();\n    w.close();\n\n    expectThrows(IllegalStateException.class, () -> {\n      DirectoryReader.openIfChanged(r);\n    });\n\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["05fe562aa248790944d43cdd478f512572835ba0","4a90cc8c90aa53ddf51fbd15019989ac269514a3"],"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":["6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["73cb3e2c71d5364fdb924c39cf9d7d1a25991413"],"73cb3e2c71d5364fdb924c39cf9d7d1a25991413":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d77dafd89756a5161d244985903e3487ca109182":["4a90cc8c90aa53ddf51fbd15019989ac269514a3"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"4a90cc8c90aa53ddf51fbd15019989ac269514a3":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73cb3e2c71d5364fdb924c39cf9d7d1a25991413"],"05fe562aa248790944d43cdd478f512572835ba0":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","4a90cc8c90aa53ddf51fbd15019989ac269514a3"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["05fe562aa248790944d43cdd478f512572835ba0","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"73cb3e2c71d5364fdb924c39cf9d7d1a25991413":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["8f4e2dcb5e470991d83a63c264bfe20880d3b3c1"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4a90cc8c90aa53ddf51fbd15019989ac269514a3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","d77dafd89756a5161d244985903e3487ca109182"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","8f4e2dcb5e470991d83a63c264bfe20880d3b3c1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}