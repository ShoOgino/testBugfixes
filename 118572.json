{"path":"solr/contrib/analytics/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#setFieldFacetParam(IndexSchema,Map[String,Map[String,FieldFacetRequest]],String,String,String,String[]).mjava","commits":[{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#setFieldFacetParam(IndexSchema,Map[String,Map[String,FieldFacetRequest]],String,String,String,String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#setFieldFacetParam(IndexSchema,Map[String,Map[String,FieldFacetRequest]],String,String,String,String[]).mjava","sourceNew":"  private static void setFieldFacetParam(IndexSchema schema, Map<String, Map<String, FieldFacetRequest>> fieldFacetMap, String requestName, String field, String paramType, String[] params) {\n    Map<String, FieldFacetRequest> facetMap = fieldFacetMap.get(requestName);\n    if (facetMap == null) {\n      facetMap = new HashMap<>();\n      fieldFacetMap.put(requestName, facetMap);\n    }\n    FieldFacetRequest fr = facetMap.get(field);\n    if (fr == null) {\n      fr = new FieldFacetRequest(schema.getField(field));\n      facetMap.put(field,fr);\n    }\n    if (paramType.equals(\"limit\")||paramType.equals(\"l\")) {\n      fr.setLimit(Integer.parseInt(params[0]));\n    } else if (paramType.equals(\"offset\")||paramType.equals(\"off\")) {\n      fr.setOffset(Integer.parseInt(params[0]));\n    } else if (paramType.equals(\"hidden\")||paramType.equals(\"h\")) {\n      fr.setHidden(Boolean.parseBoolean(params[0]));\n    } else if (paramType.equals(\"showmissing\")||paramType.equals(\"sm\")) {\n      fr.showMissing(Boolean.parseBoolean(params[0]));\n    } else if (paramType.equals(\"sortstatistic\")||paramType.equals(\"sortstat\")||paramType.equals(\"ss\")) {\n      fr.setSort(new FacetSortSpecification(params[0],fr.getDirection()));\n    } else if (paramType.equals(\"sortdirection\")||paramType.equals(\"sd\")) {\n      fr.setDirection(params[0]);\n    } \n  }\n\n","sourceOld":"  private static void setFieldFacetParam(IndexSchema schema, Map<String, Map<String, FieldFacetRequest>> fieldFacetMap, String requestName, String field, String paramType, String[] params) {\n    Map<String, FieldFacetRequest> facetMap = fieldFacetMap.get(requestName);\n    if (facetMap == null) {\n      facetMap = new HashMap<>();\n      fieldFacetMap.put(requestName, facetMap);\n    }\n    FieldFacetRequest fr = facetMap.get(field);\n    if (fr == null) {\n      fr = new FieldFacetRequest(schema.getField(field));\n      facetMap.put(field,fr);\n    }\n    if (paramType.equals(\"limit\")||paramType.equals(\"l\")) {\n      fr.setLimit(Integer.parseInt(params[0]));\n    } else if (paramType.equals(\"offset\")||paramType.equals(\"off\")) {\n      fr.setOffset(Integer.parseInt(params[0]));\n    } else if (paramType.equals(\"hidden\")||paramType.equals(\"h\")) {\n      fr.setHidden(Boolean.parseBoolean(params[0]));\n    } else if (paramType.equals(\"showmissing\")||paramType.equals(\"sm\")) {\n      fr.showMissing(Boolean.parseBoolean(params[0]));\n    } else if (paramType.equals(\"sortstatistic\")||paramType.equals(\"sortstat\")||paramType.equals(\"ss\")) {\n      fr.setSort(new FacetSortSpecification(params[0],fr.getDirection()));\n    } else if (paramType.equals(\"sortdirection\")||paramType.equals(\"sd\")) {\n      fr.setDirection(params[0]);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c495edcca4d0bc51bf62d9be3527c87bf9b44ded","date":1498673617,"type":4,"author":"Dennis Gove","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/analytics/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#setFieldFacetParam(IndexSchema,Map[String,Map[String,FieldFacetRequest]],String,String,String,String[]).mjava","sourceNew":null,"sourceOld":"  private static void setFieldFacetParam(IndexSchema schema, Map<String, Map<String, FieldFacetRequest>> fieldFacetMap, String requestName, String field, String paramType, String[] params) {\n    Map<String, FieldFacetRequest> facetMap = fieldFacetMap.get(requestName);\n    if (facetMap == null) {\n      facetMap = new HashMap<>();\n      fieldFacetMap.put(requestName, facetMap);\n    }\n    FieldFacetRequest fr = facetMap.get(field);\n    if (fr == null) {\n      fr = new FieldFacetRequest(schema.getField(field));\n      facetMap.put(field,fr);\n    }\n    if (paramType.equals(\"limit\")||paramType.equals(\"l\")) {\n      fr.setLimit(Integer.parseInt(params[0]));\n    } else if (paramType.equals(\"offset\")||paramType.equals(\"off\")) {\n      fr.setOffset(Integer.parseInt(params[0]));\n    } else if (paramType.equals(\"hidden\")||paramType.equals(\"h\")) {\n      fr.setHidden(Boolean.parseBoolean(params[0]));\n    } else if (paramType.equals(\"showmissing\")||paramType.equals(\"sm\")) {\n      fr.showMissing(Boolean.parseBoolean(params[0]));\n    } else if (paramType.equals(\"sortstatistic\")||paramType.equals(\"sortstat\")||paramType.equals(\"ss\")) {\n      fr.setSort(new FacetSortSpecification(params[0],fr.getDirection()));\n    } else if (paramType.equals(\"sortdirection\")||paramType.equals(\"sd\")) {\n      fr.setDirection(params[0]);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/analytics/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#setFieldFacetParam(IndexSchema,Map[String,Map[String,FieldFacetRequest]],String,String,String,String[]).mjava","sourceNew":null,"sourceOld":"  private static void setFieldFacetParam(IndexSchema schema, Map<String, Map<String, FieldFacetRequest>> fieldFacetMap, String requestName, String field, String paramType, String[] params) {\n    Map<String, FieldFacetRequest> facetMap = fieldFacetMap.get(requestName);\n    if (facetMap == null) {\n      facetMap = new HashMap<>();\n      fieldFacetMap.put(requestName, facetMap);\n    }\n    FieldFacetRequest fr = facetMap.get(field);\n    if (fr == null) {\n      fr = new FieldFacetRequest(schema.getField(field));\n      facetMap.put(field,fr);\n    }\n    if (paramType.equals(\"limit\")||paramType.equals(\"l\")) {\n      fr.setLimit(Integer.parseInt(params[0]));\n    } else if (paramType.equals(\"offset\")||paramType.equals(\"off\")) {\n      fr.setOffset(Integer.parseInt(params[0]));\n    } else if (paramType.equals(\"hidden\")||paramType.equals(\"h\")) {\n      fr.setHidden(Boolean.parseBoolean(params[0]));\n    } else if (paramType.equals(\"showmissing\")||paramType.equals(\"sm\")) {\n      fr.showMissing(Boolean.parseBoolean(params[0]));\n    } else if (paramType.equals(\"sortstatistic\")||paramType.equals(\"sortstat\")||paramType.equals(\"ss\")) {\n      fr.setSort(new FacetSortSpecification(params[0],fr.getDirection()));\n    } else if (paramType.equals(\"sortdirection\")||paramType.equals(\"sd\")) {\n      fr.setDirection(params[0]);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/analytics/src/java/org/apache/solr/analytics/request/AnalyticsRequestFactory#setFieldFacetParam(IndexSchema,Map[String,Map[String,FieldFacetRequest]],String,String,String,String[]).mjava","sourceNew":null,"sourceOld":"  private static void setFieldFacetParam(IndexSchema schema, Map<String, Map<String, FieldFacetRequest>> fieldFacetMap, String requestName, String field, String paramType, String[] params) {\n    Map<String, FieldFacetRequest> facetMap = fieldFacetMap.get(requestName);\n    if (facetMap == null) {\n      facetMap = new HashMap<>();\n      fieldFacetMap.put(requestName, facetMap);\n    }\n    FieldFacetRequest fr = facetMap.get(field);\n    if (fr == null) {\n      fr = new FieldFacetRequest(schema.getField(field));\n      facetMap.put(field,fr);\n    }\n    if (paramType.equals(\"limit\")||paramType.equals(\"l\")) {\n      fr.setLimit(Integer.parseInt(params[0]));\n    } else if (paramType.equals(\"offset\")||paramType.equals(\"off\")) {\n      fr.setOffset(Integer.parseInt(params[0]));\n    } else if (paramType.equals(\"hidden\")||paramType.equals(\"h\")) {\n      fr.setHidden(Boolean.parseBoolean(params[0]));\n    } else if (paramType.equals(\"showmissing\")||paramType.equals(\"sm\")) {\n      fr.showMissing(Boolean.parseBoolean(params[0]));\n    } else if (paramType.equals(\"sortstatistic\")||paramType.equals(\"sortstat\")||paramType.equals(\"ss\")) {\n      fr.setSort(new FacetSortSpecification(params[0],fr.getDirection()));\n    } else if (paramType.equals(\"sortdirection\")||paramType.equals(\"sd\")) {\n      fr.setDirection(params[0]);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["0f719faa74f7213d4a395510dbc1f1b7cb178484","28288370235ed02234a64753cdbf0c6ec096304a"],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["0f719faa74f7213d4a395510dbc1f1b7cb178484","c495edcca4d0bc51bf62d9be3527c87bf9b44ded"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"30c8e5574b55d57947e989443dfde611646530ee":[],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["28288370235ed02234a64753cdbf0c6ec096304a"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["30c8e5574b55d57947e989443dfde611646530ee","c495edcca4d0bc51bf62d9be3527c87bf9b44ded","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}