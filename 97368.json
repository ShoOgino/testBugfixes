{"path":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","sourceNew":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","sourceNew":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    crc.update(b, offset, len);\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","sourceNew":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    crc.update(b, offset, len);\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676","date":1398736164,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","sourceNew":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    if (crc != null) {\n      crc.update(b, offset, len);\n    }\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    crc.update(b, offset, len);\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","sourceNew":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    if (crc != null) {\n      crc.update(b, offset, len);\n    }\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    crc.update(b, offset, len);\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","sourceNew":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    if (crc != null) {\n      crc.update(b, offset, len);\n    }\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    crc.update(b, offset, len);\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMOutputStream#writeBytes(byte[],int,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void writeBytes(byte[] b, int offset, int len) throws IOException {\n    assert b != null;\n    if (crc != null) {\n      crc.update(b, offset, len);\n    }\n    while (len > 0) {\n      if (bufferPosition ==  bufferLength) {\n        currentBufferIndex++;\n        switchCurrentBuffer();\n      }\n\n      int remainInBuffer = currentBuffer.length - bufferPosition;\n      int bytesToCopy = len < remainInBuffer ? len : remainInBuffer;\n      System.arraycopy(b, offset, currentBuffer, bufferPosition, bytesToCopy);\n      offset += bytesToCopy;\n      len -= bytesToCopy;\n      bufferPosition += bytesToCopy;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["1f3b037cd083286b2af89f96e768f85dcd8072d6","3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676"],"5eb2511ababf862ea11e10761c70ee560cd84510":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["1f3b037cd083286b2af89f96e768f85dcd8072d6","3394716f52b34ab259ad5247e7595d9f9db6e935"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d77dafd89756a5161d244985903e3487ca109182":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","d77dafd89756a5161d244985903e3487ca109182"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["3394716f52b34ab259ad5247e7595d9f9db6e935","5eb2511ababf862ea11e10761c70ee560cd84510","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3f8e9abba2d7f518e6f4f2eac3c8c96b2a312676":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}