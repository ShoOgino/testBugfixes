{"path":"solr/src/java/org/apache/solr/spelling/SolrSpellChecker#getSuggestions(SpellingOptions).mjava","commits":[{"id":"d76ab9983349b199b0e6f65776c0087b0c08a10d","date":1282230089,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/spelling/SolrSpellChecker#getSuggestions(SpellingOptions).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get suggestions for the given query.  Tokenizes the query using a field appropriate Analyzer.\n   * The {@link SpellingResult#getSuggestions()} suggestions must be ordered by best suggestion first.\n   * <p/>\n   *\n   * @param options The {@link SpellingOptions} to use\n   * @return The {@link SpellingResult} suggestions\n   * @throws IOException if there is an error producing suggestions\n   */\n  public abstract SpellingResult getSuggestions(SpellingOptions options) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/SolrSpellChecker#getSuggestions(SpellingOptions).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get suggestions for the given query.  Tokenizes the query using a field appropriate Analyzer.\n   * The {@link SpellingResult#getSuggestions()} suggestions must be ordered by best suggestion first.\n   * <p/>\n   *\n   * @param options The {@link SpellingOptions} to use\n   * @return The {@link SpellingResult} suggestions\n   * @throws IOException if there is an error producing suggestions\n   */\n  public abstract SpellingResult getSuggestions(SpellingOptions options) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/SolrSpellChecker#getSuggestions(SpellingOptions).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/SolrSpellChecker#getSuggestions(SpellingOptions).mjava","sourceNew":"  /**\n   * Get suggestions for the given query.  Tokenizes the query using a field appropriate Analyzer.\n   * The {@link SpellingResult#getSuggestions()} suggestions must be ordered by best suggestion first.\n   * <p/>\n   *\n   * @param options The {@link SpellingOptions} to use\n   * @return The {@link SpellingResult} suggestions\n   * @throws IOException if there is an error producing suggestions\n   */\n  public abstract SpellingResult getSuggestions(SpellingOptions options) throws IOException;\n\n","sourceOld":"  /**\n   * Get suggestions for the given query.  Tokenizes the query using a field appropriate Analyzer.\n   * The {@link SpellingResult#getSuggestions()} suggestions must be ordered by best suggestion first.\n   * <p/>\n   *\n   * @param options The {@link SpellingOptions} to use\n   * @return The {@link SpellingResult} suggestions\n   * @throws IOException if there is an error producing suggestions\n   */\n  public abstract SpellingResult getSuggestions(SpellingOptions options) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/SolrSpellChecker#getSuggestions(SpellingOptions).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/SolrSpellChecker#getSuggestions(SpellingOptions).mjava","sourceNew":"  /**\n   * Get suggestions for the given query.  Tokenizes the query using a field appropriate Analyzer.\n   * The {@link SpellingResult#getSuggestions()} suggestions must be ordered by best suggestion first.\n   * <p/>\n   *\n   * @param options The {@link SpellingOptions} to use\n   * @return The {@link SpellingResult} suggestions\n   * @throws IOException if there is an error producing suggestions\n   */\n  public abstract SpellingResult getSuggestions(SpellingOptions options) throws IOException;\n\n","sourceOld":"  /**\n   * Get suggestions for the given query.  Tokenizes the query using a field appropriate Analyzer.\n   * The {@link SpellingResult#getSuggestions()} suggestions must be ordered by best suggestion first.\n   * <p/>\n   *\n   * @param options The {@link SpellingOptions} to use\n   * @return The {@link SpellingResult} suggestions\n   * @throws IOException if there is an error producing suggestions\n   */\n  public abstract SpellingResult getSuggestions(SpellingOptions options) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/SolrSpellChecker#getSuggestions(SpellingOptions).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/SolrSpellChecker#getSuggestions(SpellingOptions).mjava","sourceNew":"  /**\n   * Get suggestions for the given query.  Tokenizes the query using a field appropriate Analyzer.\n   * The {@link SpellingResult#getSuggestions()} suggestions must be ordered by best suggestion first.\n   * <p/>\n   *\n   * @param options The {@link SpellingOptions} to use\n   * @return The {@link SpellingResult} suggestions\n   * @throws IOException if there is an error producing suggestions\n   */\n  public abstract SpellingResult getSuggestions(SpellingOptions options) throws IOException;\n\n","sourceOld":"  /**\n   * Get suggestions for the given query.  Tokenizes the query using a field appropriate Analyzer.\n   * The {@link SpellingResult#getSuggestions()} suggestions must be ordered by best suggestion first.\n   * <p/>\n   *\n   * @param options The {@link SpellingOptions} to use\n   * @return The {@link SpellingResult} suggestions\n   * @throws IOException if there is an error producing suggestions\n   */\n  public abstract SpellingResult getSuggestions(SpellingOptions options) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d76ab9983349b199b0e6f65776c0087b0c08a10d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["d76ab9983349b199b0e6f65776c0087b0c08a10d"],"c26f00b574427b55127e869b935845554afde1fa":["d76ab9983349b199b0e6f65776c0087b0c08a10d","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["d76ab9983349b199b0e6f65776c0087b0c08a10d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d76ab9983349b199b0e6f65776c0087b0c08a10d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"d76ab9983349b199b0e6f65776c0087b0c08a10d":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d76ab9983349b199b0e6f65776c0087b0c08a10d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}