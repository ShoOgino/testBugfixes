{"path":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesConsumer#DefaultDocValuesConsumer(PerDocWriteState,Comparator[BytesRef]).mjava","commits":[{"id":"d47326e0c6ce589b6962777df409aad0550940fa","date":1304584540,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesConsumer#DefaultDocValuesConsumer(PerDocWriteState,Comparator[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  public DefaultDocValuesConsumer(PerDocWriteState state, Comparator<BytesRef> comparator) {\n    this.segmentName = state.segmentName;\n    this.codecId = state.codecId;\n    this.bytesUsed = state.bytesUsed;\n    this.directory = state.directory;\n    this.comparator = comparator;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesConsumer#DefaultDocValuesConsumer(PerDocWriteState,Comparator[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  public DefaultDocValuesConsumer(PerDocWriteState state, Comparator<BytesRef> comparator) {\n    this.segmentName = state.segmentName;\n    this.codecId = state.codecId;\n    this.bytesUsed = state.bytesUsed;\n    this.directory = state.directory;\n    this.comparator = comparator;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesConsumer#DefaultDocValuesConsumer(PerDocWriteState,Comparator[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  public DefaultDocValuesConsumer(PerDocWriteState state, Comparator<BytesRef> comparator) {\n    this.segmentName = state.segmentName;\n    this.codecId = state.codecId;\n    this.bytesUsed = state.bytesUsed;\n    this.directory = state.directory;\n    this.comparator = comparator;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc0b8069918917b33f361011899a1af0cdd2d462","date":1310039336,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesConsumer#DefaultDocValuesConsumer(PerDocWriteState,Comparator[BytesRef],boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesConsumer#DefaultDocValuesConsumer(PerDocWriteState,Comparator[BytesRef]).mjava","sourceNew":"  public DefaultDocValuesConsumer(PerDocWriteState state, Comparator<BytesRef> comparator, boolean useCompoundFile) throws IOException {\n    this.segmentName = state.segmentName;\n    this.codecId = state.codecId;\n    this.bytesUsed = state.bytesUsed;\n    //TODO maybe we should enable a global CFS that all codecs can pull on demand to further reduce the number of files?\n    this.directory = useCompoundFile ? state.directory.createCompoundOutput(IndexFileNames.segmentFileName(segmentName, state.codecId, IndexFileNames.COMPOUND_FILE_EXTENSION)) : state.directory;\n    this.comparator = comparator;\n    this.useCompoundFile = useCompoundFile;\n  }\n\n","sourceOld":"  public DefaultDocValuesConsumer(PerDocWriteState state, Comparator<BytesRef> comparator) {\n    this.segmentName = state.segmentName;\n    this.codecId = state.codecId;\n    this.bytesUsed = state.bytesUsed;\n    this.directory = state.directory;\n    this.comparator = comparator;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesConsumer#DefaultDocValuesConsumer(PerDocWriteState,Comparator[BytesRef],boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesConsumer#DefaultDocValuesConsumer(PerDocWriteState,Comparator[BytesRef]).mjava","sourceNew":"  public DefaultDocValuesConsumer(PerDocWriteState state, Comparator<BytesRef> comparator, boolean useCompoundFile) throws IOException {\n    this.segmentName = state.segmentName;\n    this.codecId = state.codecId;\n    this.bytesUsed = state.bytesUsed;\n    //TODO maybe we should enable a global CFS that all codecs can pull on demand to further reduce the number of files?\n    this.directory = useCompoundFile ? state.directory.createCompoundOutput(IndexFileNames.segmentFileName(segmentName, state.codecId, IndexFileNames.COMPOUND_FILE_EXTENSION)) : state.directory;\n    this.comparator = comparator;\n    this.useCompoundFile = useCompoundFile;\n  }\n\n","sourceOld":"  public DefaultDocValuesConsumer(PerDocWriteState state, Comparator<BytesRef> comparator) {\n    this.segmentName = state.segmentName;\n    this.codecId = state.codecId;\n    this.bytesUsed = state.bytesUsed;\n    this.directory = state.directory;\n    this.comparator = comparator;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesConsumer#DefaultDocValuesConsumer(PerDocWriteState,Comparator[BytesRef],boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultDocValuesConsumer#DefaultDocValuesConsumer(PerDocWriteState,Comparator[BytesRef]).mjava","sourceNew":"  public DefaultDocValuesConsumer(PerDocWriteState state, Comparator<BytesRef> comparator, boolean useCompoundFile) throws IOException {\n    this.segmentName = state.segmentName;\n    this.codecId = state.codecId;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    //TODO maybe we should enable a global CFS that all codecs can pull on demand to further reduce the number of files?\n    this.directory = useCompoundFile ? state.directory.createCompoundOutput(\n        IndexFileNames.segmentFileName(segmentName, codecId,\n            IndexFileNames.COMPOUND_FILE_EXTENSION), context) : state.directory;\n    this.comparator = comparator;\n    this.useCompoundFile = useCompoundFile;\n  }\n\n","sourceOld":"  public DefaultDocValuesConsumer(PerDocWriteState state, Comparator<BytesRef> comparator) {\n    this.segmentName = state.segmentName;\n    this.codecId = state.codecId;\n    this.bytesUsed = state.bytesUsed;\n    this.directory = state.directory;\n    this.comparator = comparator;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"1291e4568eb7d9463d751627596ef14baf4c1603":["2e8d7ba2175f47e280231533f7d3016249cea88b","bc0b8069918917b33f361011899a1af0cdd2d462"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d47326e0c6ce589b6962777df409aad0550940fa"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","bc0b8069918917b33f361011899a1af0cdd2d462"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bc0b8069918917b33f361011899a1af0cdd2d462":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bc0b8069918917b33f361011899a1af0cdd2d462"],"d47326e0c6ce589b6962777df409aad0550940fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","1291e4568eb7d9463d751627596ef14baf4c1603","bc0b8069918917b33f361011899a1af0cdd2d462"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","d47326e0c6ce589b6962777df409aad0550940fa"],"bc0b8069918917b33f361011899a1af0cdd2d462":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d47326e0c6ce589b6962777df409aad0550940fa":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}