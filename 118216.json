{"path":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#forward(String,ServletRequest,ServletResponse,FilterChain).mjava","commits":[{"id":"b3a34dae868734612eb6329aa0ef754f30bd2036","date":1438783154,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#forward(String,ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"/dev/null","sourceNew":"  protected void forward(String user, ServletRequest  req, ServletResponse rsp,\n                                    FilterChain chain) throws IOException, ServletException {\n    if(user != null) {\n      final Principal p = new BasicUserPrincipal(user);\n      req = new HttpServletRequestWrapper((HttpServletRequest) req) {\n        @Override\n        public Principal getUserPrincipal() {\n          return p;\n        }\n      };\n    }\n    chain.doFilter(req,rsp);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20be168d828ac40d262f85364d02f15b491dd88b","date":1469725145,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/MockAuthenticationPlugin#forward(String,ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#forward(String,ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  protected void forward(String user, ServletRequest  req, ServletResponse rsp,\n                                    FilterChain chain) throws IOException, ServletException {\n    if(user != null) {\n      final Principal p = new BasicUserPrincipal(user);\n      req = new HttpServletRequestWrapper((HttpServletRequest) req) {\n        @Override\n        public Principal getUserPrincipal() {\n          return p;\n        }\n      };\n    }\n    chain.doFilter(req,rsp);\n  }\n\n","sourceOld":"  protected void forward(String user, ServletRequest  req, ServletResponse rsp,\n                                    FilterChain chain) throws IOException, ServletException {\n    if(user != null) {\n      final Principal p = new BasicUserPrincipal(user);\n      req = new HttpServletRequestWrapper((HttpServletRequest) req) {\n        @Override\n        public Principal getUserPrincipal() {\n          return p;\n        }\n      };\n    }\n    chain.doFilter(req,rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/MockAuthenticationPlugin#forward(String,ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#forward(String,ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  protected void forward(String user, ServletRequest  req, ServletResponse rsp,\n                                    FilterChain chain) throws IOException, ServletException {\n    if(user != null) {\n      final Principal p = new BasicUserPrincipal(user);\n      req = new HttpServletRequestWrapper((HttpServletRequest) req) {\n        @Override\n        public Principal getUserPrincipal() {\n          return p;\n        }\n      };\n    }\n    chain.doFilter(req,rsp);\n  }\n\n","sourceOld":"  protected void forward(String user, ServletRequest  req, ServletResponse rsp,\n                                    FilterChain chain) throws IOException, ServletException {\n    if(user != null) {\n      final Principal p = new BasicUserPrincipal(user);\n      req = new HttpServletRequestWrapper((HttpServletRequest) req) {\n        @Override\n        public Principal getUserPrincipal() {\n          return p;\n        }\n      };\n    }\n    chain.doFilter(req,rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/MockAuthenticationPlugin#forward(String,ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/AuthenticationPlugin#forward(String,ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  protected void forward(String user, ServletRequest  req, ServletResponse rsp,\n                                    FilterChain chain) throws IOException, ServletException {\n    if(user != null) {\n      final Principal p = new BasicUserPrincipal(user);\n      req = new HttpServletRequestWrapper((HttpServletRequest) req) {\n        @Override\n        public Principal getUserPrincipal() {\n          return p;\n        }\n      };\n    }\n    chain.doFilter(req,rsp);\n  }\n\n","sourceOld":"  protected void forward(String user, ServletRequest  req, ServletResponse rsp,\n                                    FilterChain chain) throws IOException, ServletException {\n    if(user != null) {\n      final Principal p = new BasicUserPrincipal(user);\n      req = new HttpServletRequestWrapper((HttpServletRequest) req) {\n        @Override\n        public Principal getUserPrincipal() {\n          return p;\n        }\n      };\n    }\n    chain.doFilter(req,rsp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3a34dae868734612eb6329aa0ef754f30bd2036":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"20be168d828ac40d262f85364d02f15b491dd88b":["b3a34dae868734612eb6329aa0ef754f30bd2036"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b3a34dae868734612eb6329aa0ef754f30bd2036","20be168d828ac40d262f85364d02f15b491dd88b"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["b3a34dae868734612eb6329aa0ef754f30bd2036","20be168d828ac40d262f85364d02f15b491dd88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20be168d828ac40d262f85364d02f15b491dd88b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3a34dae868734612eb6329aa0ef754f30bd2036"],"b3a34dae868734612eb6329aa0ef754f30bd2036":["20be168d828ac40d262f85364d02f15b491dd88b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"20be168d828ac40d262f85364d02f15b491dd88b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}