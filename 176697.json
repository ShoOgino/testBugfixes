{"path":"solr/core/src/java/org/apache/solr/rest/schema/FieldTypeCollectionResource#getDynamicFieldsWithFieldType(FieldType).mjava","commits":[{"id":"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd","date":1364185773,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/FieldTypeCollectionResource#getDynamicFieldsWithFieldType(FieldType).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/FieldTypeCollectionResource#getDynamicFieldsWithFieldType(FieldType).mjava","sourceNew":"  /** Returns dynamic field lists from the map constructed in doInit() */\n  @Override\n  protected List<String> getDynamicFieldsWithFieldType(FieldType fieldType) {\n    List<String> dynamicFields = dynamicFieldsByFieldType.get(fieldType.getTypeName());\n    if (null == dynamicFields) {\n      dynamicFields = Collections.emptyList();\n    }\n    return dynamicFields;\n  }\n\n","sourceOld":"  /** Returns dynamic field lists from the map constructed in doInit() */\n  @Override\n  protected List<String> getDynamicFieldsWithFieldType(FieldType fieldType) {\n    List<String> dynamicFields = dynamicFieldsByFieldType.get(fieldType.getTypeName());\n    if (null == dynamicFields) {\n      dynamicFields = Collections.emptyList();\n    }\n    return dynamicFields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f494bc636a1302995e4930fdccd371eeda452f87","date":1457370876,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/FieldTypeCollectionResource#getDynamicFieldsWithFieldType(FieldType).mjava","sourceNew":null,"sourceOld":"  /** Returns dynamic field lists from the map constructed in doInit() */\n  @Override\n  protected List<String> getDynamicFieldsWithFieldType(FieldType fieldType) {\n    List<String> dynamicFields = dynamicFieldsByFieldType.get(fieldType.getTypeName());\n    if (null == dynamicFields) {\n      dynamicFields = Collections.emptyList();\n    }\n    return dynamicFields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f494bc636a1302995e4930fdccd371eeda452f87":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f494bc636a1302995e4930fdccd371eeda452f87"]},"commit2Childs":{"d2fa053a06c9c158f82d8e8b53b9a95031f43ebd":["f494bc636a1302995e4930fdccd371eeda452f87"],"f494bc636a1302995e4930fdccd371eeda452f87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2fa053a06c9c158f82d8e8b53b9a95031f43ebd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}