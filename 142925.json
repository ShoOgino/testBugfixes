{"path":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSimpleHighlighter().mjava","commits":[{"id":"b65377a14b2c1af24ad7adce693825c28c9ea0b6","date":1082509564,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSimpleHighlighter().mjava","pathOld":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/HighlighterTest#testSimpleHighlighter().mjava","sourceNew":"\tpublic void testSimpleHighlighter() throws Exception\n\t{\n\t\tdoSearching(\"Kennedy\");\n\t\tHighlighter highlighter =\tnew Highlighter(new QueryScorer(query));\n\t\thighlighter.setTextFragmenter(new SimpleFragmenter(40));\t\t\t\n\t\tint maxNumFragmentsRequired = 2;\n\t\tfor (int i = 0; i < hits.length(); i++)\n\t\t{\n\t\t\tString text = hits.doc(i).get(FIELD_NAME);\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\t\t\t\n\t\t\tString result =\n\t\t\t\thighlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired, \"...\");\n\t\t\tSystem.out.println(\"\\t\" + result);\n\t\t}\n\t\t//Not sure we can assert anything here - just running to check we dont throw any exceptions \n\t}\n\n","sourceOld":"\tpublic void testSimpleHighlighter() throws Exception\n\t{\n\t\tdoSearching(\"Kennedy\");\n\t\tHighlighter highlighter =\tnew Highlighter(new QueryScorer(query));\n\t\thighlighter.setTextFragmenter(new SimpleFragmenter(40));\t\t\t\n\t\tint maxNumFragmentsRequired = 2;\n\t\tfor (int i = 0; i < hits.length(); i++)\n\t\t{\n\t\t\tString text = hits.doc(i).get(FIELD_NAME);\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\t\t\t\n\t\t\tString result =\n\t\t\t\thighlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired, \"...\");\n\t\t\tSystem.out.println(\"\\t\" + result);\n\t\t}\n\t\t//Not sure we can assert anything here - just running to check we dont throw any exceptions \n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4836b0ad75558e4c39cb1c6ca188c153a48f8e98","date":1090874387,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSimpleHighlighter().mjava","pathOld":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSimpleHighlighter().mjava","sourceNew":"\tpublic void testSimpleHighlighter() throws Exception\n\t{\n\t\tdoSearching(\"Kennedy\");\n\t\tHighlighter highlighter =\tnew Highlighter(new QueryScorer(query));\n\t\thighlighter.setTextFragmenter(new SimpleFragmenter(40));\n\t\tint maxNumFragmentsRequired = 2;\n\t\tfor (int i = 0; i < hits.length(); i++)\n\t\t{\n\t\t\tString text = hits.doc(i).get(FIELD_NAME);\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\n\t\t\tString result =\n\t\t\t\thighlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired, \"...\");\n\t\t\tSystem.out.println(\"\\t\" + result);\n\t\t}\n\t\t//Not sure we can assert anything here - just running to check we dont throw any exceptions\n\t}\n\n","sourceOld":"\tpublic void testSimpleHighlighter() throws Exception\n\t{\n\t\tdoSearching(\"Kennedy\");\n\t\tHighlighter highlighter =\tnew Highlighter(new QueryScorer(query));\n\t\thighlighter.setTextFragmenter(new SimpleFragmenter(40));\t\t\t\n\t\tint maxNumFragmentsRequired = 2;\n\t\tfor (int i = 0; i < hits.length(); i++)\n\t\t{\n\t\t\tString text = hits.doc(i).get(FIELD_NAME);\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\t\t\t\n\t\t\tString result =\n\t\t\t\thighlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired, \"...\");\n\t\t\tSystem.out.println(\"\\t\" + result);\n\t\t}\n\t\t//Not sure we can assert anything here - just running to check we dont throw any exceptions \n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSimpleHighlighter().mjava","pathOld":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testSimpleHighlighter().mjava","sourceNew":"\tpublic void testSimpleHighlighter() throws Exception\n\t{\n\t\tdoSearching(\"Kennedy\");\n\t\tHighlighter highlighter =\tnew Highlighter(new QueryScorer(query));\n\t\thighlighter.setTextFragmenter(new SimpleFragmenter(40));\n\t\tint maxNumFragmentsRequired = 2;\n\t\tfor (int i = 0; i < hits.length(); i++)\n\t\t{\n\t\t\tString text = hits.doc(i).get(FIELD_NAME);\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\n\t\t\tString result =\n\t\t\t\thighlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired, \"...\");\n\t\t\tSystem.out.println(\"\\t\" + result);\n\t\t}\n\t\t//Not sure we can assert anything here - just running to check we dont throw any exceptions\n\t}\n\n","sourceOld":"\tpublic void testSimpleHighlighter() throws Exception\n\t{\n\t\tdoSearching(\"Kennedy\");\n\t\tHighlighter highlighter =\tnew Highlighter(new QueryScorer(query));\n\t\thighlighter.setTextFragmenter(new SimpleFragmenter(40));\n\t\tint maxNumFragmentsRequired = 2;\n\t\tfor (int i = 0; i < hits.length(); i++)\n\t\t{\n\t\t\tString text = hits.doc(i).get(FIELD_NAME);\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\n\t\t\tString result =\n\t\t\t\thighlighter.getBestFragments(tokenStream,text,maxNumFragmentsRequired, \"...\");\n\t\t\tSystem.out.println(\"\\t\" + result);\n\t\t}\n\t\t//Not sure we can assert anything here - just running to check we dont throw any exceptions\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["4836b0ad75558e4c39cb1c6ca188c153a48f8e98"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b65377a14b2c1af24ad7adce693825c28c9ea0b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4836b0ad75558e4c39cb1c6ca188c153a48f8e98":["b65377a14b2c1af24ad7adce693825c28c9ea0b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b65377a14b2c1af24ad7adce693825c28c9ea0b6"],"b65377a14b2c1af24ad7adce693825c28c9ea0b6":["4836b0ad75558e4c39cb1c6ca188c153a48f8e98"],"4836b0ad75558e4c39cb1c6ca188c153a48f8e98":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}