{"path":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#docFreq(String,BytesRef).mjava","commits":[{"id":"fdea49117913baff3ee1b0bb8d2c7d148e210e72","date":1331056250,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#docFreq(String,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#docFreq(String,BytesRef).mjava","sourceNew":"  @Override\n  public final int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in subreaders\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","sourceOld":"  @Override\n  public final int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in segments\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#docFreq(String,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in subreaders\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a0e3c1c21aac8ecf75706605133012833585c7","date":1347535263,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#docFreq(Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#docFreq(String,BytesRef).mjava","sourceNew":"  @Override\n  public final int docFreq(Term term) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in subreaders\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(term);\n    }\n    return total;\n  }\n\n","sourceOld":"  @Override\n  public final int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in subreaders\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a0e3c1c21aac8ecf75706605133012833585c7","date":1347535263,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#totalTermFreq(Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BaseCompositeReader#docFreq(String,BytesRef).mjava","sourceNew":"  @Override\n  public final long totalTermFreq(Term term) throws IOException {\n    ensureOpen();\n    long total = 0;        // sum freqs in subreaders\n    for (int i = 0; i < subReaders.length; i++) {\n      long sub = subReaders[i].totalTermFreq(term);\n      if (sub == -1) {\n        return -1;\n      }\n      total += sub;\n    }\n    return total;\n  }\n\n","sourceOld":"  @Override\n  public final int docFreq(String field, BytesRef t) throws IOException {\n    ensureOpen();\n    int total = 0;          // sum freqs in subreaders\n    for (int i = 0; i < subReaders.length; i++) {\n      total += subReaders[i].docFreq(field, t);\n    }\n    return total;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fdea49117913baff3ee1b0bb8d2c7d148e210e72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fdea49117913baff3ee1b0bb8d2c7d148e210e72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6a0e3c1c21aac8ecf75706605133012833585c7":["fdea49117913baff3ee1b0bb8d2c7d148e210e72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b6a0e3c1c21aac8ecf75706605133012833585c7"]},"commit2Childs":{"fdea49117913baff3ee1b0bb8d2c7d148e210e72":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","b6a0e3c1c21aac8ecf75706605133012833585c7"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fdea49117913baff3ee1b0bb8d2c7d148e210e72","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"b6a0e3c1c21aac8ecf75706605133012833585c7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}