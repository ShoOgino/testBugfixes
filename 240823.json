{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestLegacyGeoPointField#beforeClass().mjava","commits":[{"id":"f68e65f04a6bec2d9a08a7d70811205341af74db","date":1458618250,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestLegacyGeoPointField#beforeClass().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestGeoPointQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, -96.774, 32.763420, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.7772, 32.778650, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -73.998776, 40.720611, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -179.5, -44.5, GeoPointField.NUMERIC_TYPE_NOT_STORED)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    termEncoding = randomTermEncoding();\n    fieldType = randomFieldType();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, -96.774, 32.763420, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, fieldType),\n        new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, fieldType),\n        new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, fieldType),\n        new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, fieldType),\n        new GeoPointField(FIELD_NAME, -96.7772, 32.778650, fieldType),\n        new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, fieldType),\n        new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, fieldType),\n        new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, fieldType),\n        new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, fieldType),\n        new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, fieldType),\n        new GeoPointField(FIELD_NAME, -73.998776, 40.720611, fieldType),\n        new GeoPointField(FIELD_NAME, -179.5, -44.5, fieldType)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestLegacyGeoPointField#beforeClass().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestLegacyGeoPointField#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, 32.763420, -96.774, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.7559529921407, -96.7759895324707, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.77866942010977, -96.77701950073242, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.7756745755423, -96.7706036567688, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 27.703618681345585, -139.73458170890808, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.94823588839368, -96.4538113027811, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 33.06047141970814, -96.65084838867188, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.778650, -96.7772, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -88.56029371730983, -177.23537676036358, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 33.541429799076354, -26.779373834241003, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 26.774024500421728, -77.35379276106497, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -90.0, -14.796283808944777, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.94823588839368, -178.8538113027811, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.94823588839368, 178.8538113027811, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 40.720611, -73.998776, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -44.5, -179.5, GeoPointField.NUMERIC_TYPE_NOT_STORED)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, -96.774, 32.763420, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.7759895324707, 32.7559529921407, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.77701950073242, 32.77866942010977, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.7706036567688, 32.7756745755423, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -139.73458170890808, 27.703618681345585, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.4538113027811, 32.94823588839368, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.65084838867188, 33.06047141970814, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -96.7772, 32.778650, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -177.23537676036358, -88.56029371730983, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -26.779373834241003, 33.541429799076354, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -77.35379276106497, 26.774024500421728, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -14.796283808944777, -90.0, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -178.8538113027811, 32.94823588839368, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 178.8538113027811, 32.94823588839368, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -73.998776, 40.720611, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -179.5, -44.5, GeoPointField.NUMERIC_TYPE_NOT_STORED)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6c59bc551f4e523ce6a321280cc6733424fb824","date":1458837690,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestLegacyGeoPointField#beforeClass().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n            newIndexWriterConfig(new MockAnalyzer(random()))\n                    .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000))\n                    .setMergePolicy(newLogMergePolicy()));\n\n    // this is a simple systematic test\n    GeoPointField[] pts = new GeoPointField[] {\n        new GeoPointField(FIELD_NAME, 32.763420, -96.774, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.7559529921407, -96.7759895324707, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.77866942010977, -96.77701950073242, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.7756745755423, -96.7706036567688, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 27.703618681345585, -139.73458170890808, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.94823588839368, -96.4538113027811, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 33.06047141970814, -96.65084838867188, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.778650, -96.7772, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -88.56029371730983, -177.23537676036358, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 33.541429799076354, -26.779373834241003, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 26.774024500421728, -77.35379276106497, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -90.0, -14.796283808944777, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.94823588839368, -178.8538113027811, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 32.94823588839368, 178.8538113027811, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, 40.720611, -73.998776, GeoPointField.NUMERIC_TYPE_NOT_STORED),\n        new GeoPointField(FIELD_NAME, -44.5, -179.5, GeoPointField.NUMERIC_TYPE_NOT_STORED)};\n\n    for (GeoPointField p : pts) {\n        Document doc = new Document();\n        doc.add(p);\n        writer.addDocument(doc);\n    }\n\n    // add explicit multi-valued docs\n    for (int i=0; i<pts.length; i+=2) {\n      Document doc = new Document();\n      doc.add(pts[i]);\n      doc.add(pts[i+1]);\n      writer.addDocument(doc);\n    }\n\n    // index random string documents\n    for (int i=0; i<random().nextInt(10); ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"string\", Integer.toString(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n\n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f68e65f04a6bec2d9a08a7d70811205341af74db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["f68e65f04a6bec2d9a08a7d70811205341af74db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"d6c59bc551f4e523ce6a321280cc6733424fb824":["ec996bf2daff09d61a876319e8fae4aebbea58e3"]},"commit2Childs":{"f68e65f04a6bec2d9a08a7d70811205341af74db":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f68e65f04a6bec2d9a08a7d70811205341af74db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d6c59bc551f4e523ce6a321280cc6733424fb824":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}