{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#processStats(SimpleOrderedMap[Object],DocSet,int).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#processStats(SimpleOrderedMap[Object],DocSet,int).mjava","pathOld":"/dev/null","sourceNew":"  protected void processStats(SimpleOrderedMap<Object> bucket, DocSet docs, int docCount) throws IOException {\n    if (docCount == 0 && !freq.processEmpty || freq.getFacetStats().size() == 0) {\n      bucket.add(\"count\", docCount);\n      return;\n    }\n    createAccs(docCount, 1);\n    prepareForCollection();\n    int collected = collect(docs, 0);\n    countAcc.incrementCount(0, collected);\n    assert collected == docCount;\n    addStats(bucket, 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#processStats(SimpleOrderedMap[Object],DocSet,int).mjava","pathOld":"/dev/null","sourceNew":"  protected void processStats(SimpleOrderedMap<Object> bucket, DocSet docs, int docCount) throws IOException {\n    if (docCount == 0 && !freq.processEmpty || freq.getFacetStats().size() == 0) {\n      bucket.add(\"count\", docCount);\n      return;\n    }\n    createAccs(docCount, 1);\n    prepareForCollection();\n    int collected = collect(docs, 0);\n    countAcc.incrementCount(0, collected);\n    assert collected == docCount;\n    addStats(bucket, 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e13d0d4d8b6dc352cb304974502b9a36c153f78","date":1436492687,"type":6,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor[FacetField]#processStats(SimpleOrderedMap[Object],DocSet,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#processStats(SimpleOrderedMap[Object],DocSet,int).mjava","sourceNew":"  @Override\n  protected void processStats(SimpleOrderedMap<Object> bucket, DocSet docs, int docCount) throws IOException {\n    if (docCount == 0 && !freq.processEmpty || freq.getFacetStats().size() == 0) {\n      bucket.add(\"count\", docCount);\n      return;\n    }\n    createAccs(docCount, 1);\n    int collected = collect(docs, 0);\n\n    // countAcc.incrementCount(0, collected);  // should we set the counton the acc instead of just passing it?\n\n    assert collected == docCount;\n    addStats(bucket, collected, 0);\n  }\n\n","sourceOld":"  protected void processStats(SimpleOrderedMap<Object> bucket, DocSet docs, int docCount) throws IOException {\n    if (docCount == 0 && !freq.processEmpty || freq.getFacetStats().size() == 0) {\n      bucket.add(\"count\", docCount);\n      return;\n    }\n    createAccs(docCount, 1);\n    prepareForCollection();\n    int collected = collect(docs, 0);\n    countAcc.incrementCount(0, collected);\n    assert collected == docCount;\n    addStats(bucket, 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e13d0d4d8b6dc352cb304974502b9a36c153f78","date":1436492687,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#processStats(SimpleOrderedMap[Object],DocSet,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor[FacetRequest]#processStats(SimpleOrderedMap[Object],DocSet,int).mjava","sourceNew":"  protected void processStats(SimpleOrderedMap<Object> bucket, DocSet docs, int docCount) throws IOException {\n    if (docCount == 0 && !freq.processEmpty || freq.getFacetStats().size() == 0) {\n      bucket.add(\"count\", docCount);\n      return;\n    }\n    createAccs(docCount, 1);\n    int collected = collect(docs, 0);\n    countAcc.incrementCount(0, collected);\n    assert collected == docCount;\n    addStats(bucket, 0);\n  }\n\n","sourceOld":"  protected void processStats(SimpleOrderedMap<Object> bucket, DocSet docs, int docCount) throws IOException {\n    if (docCount == 0 && !freq.processEmpty || freq.getFacetStats().size() == 0) {\n      bucket.add(\"count\", docCount);\n      return;\n    }\n    createAccs(docCount, 1);\n    prepareForCollection();\n    int collected = collect(docs, 0);\n    countAcc.incrementCount(0, collected);\n    assert collected == docCount;\n    addStats(bucket, 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e13d0d4d8b6dc352cb304974502b9a36c153f78"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9e13d0d4d8b6dc352cb304974502b9a36c153f78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}