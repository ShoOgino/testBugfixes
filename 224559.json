{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/ReusableAnalyzerBase#tokenStream(String,Reader).mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/ReusableAnalyzerBase#tokenStream(String,Reader).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/ReusableAnalyzerBase#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * This method uses {@link #createComponents(String, Reader)} to obtain an\n   * instance of {@link TokenStreamComponents} and returns the sink of the\n   * components. Each calls to this method will create a new instance of\n   * {@link TokenStreamComponents}. Created {@link TokenStream} instances are \n   * never reused.\n   * \n   * @param fieldName the name of the field the created TokenStream is used for\n   * @param reader the reader the streams source reads from\n   */\n  @Override\n  public final TokenStream tokenStream(final String fieldName,\n      final Reader reader) {\n    return createComponents(fieldName, reader).getTokenStream();\n  }\n\n","sourceOld":"  /**\n   * This method uses {@link #createComponents(String, Reader)} to obtain an\n   * instance of {@link TokenStreamComponents} and returns the sink of the\n   * components. Each calls to this method will create a new instance of\n   * {@link TokenStreamComponents}. Created {@link TokenStream} instances are \n   * never reused.\n   * \n   * @param fieldName the name of the field the created TokenStream is used for\n   * @param reader the reader the streams source reads from\n   */\n  @Override\n  public final TokenStream tokenStream(final String fieldName,\n      final Reader reader) {\n    return createComponents(fieldName, reader).getTokenStream();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd","date":1291738757,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/ReusableAnalyzerBase#tokenStream(String,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/ReusableAnalyzerBase#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * This method uses {@link #createComponents(String, Reader)} to obtain an\n   * instance of {@link TokenStreamComponents} and returns the sink of the\n   * components. Each calls to this method will create a new instance of\n   * {@link TokenStreamComponents}. Created {@link TokenStream} instances are \n   * never reused.\n   * \n   * @param fieldName the name of the field the created TokenStream is used for\n   * @param reader the reader the streams source reads from\n   */\n  @Override\n  public final TokenStream tokenStream(final String fieldName,\n      final Reader reader) {\n    return createComponents(fieldName, initReader(reader)).getTokenStream();\n  }\n\n","sourceOld":"  /**\n   * This method uses {@link #createComponents(String, Reader)} to obtain an\n   * instance of {@link TokenStreamComponents} and returns the sink of the\n   * components. Each calls to this method will create a new instance of\n   * {@link TokenStreamComponents}. Created {@link TokenStream} instances are \n   * never reused.\n   * \n   * @param fieldName the name of the field the created TokenStream is used for\n   * @param reader the reader the streams source reads from\n   */\n  @Override\n  public final TokenStream tokenStream(final String fieldName,\n      final Reader reader) {\n    return createComponents(fieldName, reader).getTokenStream();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8c4bb144102e537495ae5b321f77a9898f7b0b8","date":1291834816,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/ReusableAnalyzerBase#tokenStream(String,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/ReusableAnalyzerBase#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * This method uses {@link #createComponents(String, Reader)} to obtain an\n   * instance of {@link TokenStreamComponents} and returns the sink of the\n   * components. Each calls to this method will create a new instance of\n   * {@link TokenStreamComponents}. Created {@link TokenStream} instances are \n   * never reused.\n   * \n   * @param fieldName the name of the field the created TokenStream is used for\n   * @param reader the reader the streams source reads from\n   */\n  @Override\n  public final TokenStream tokenStream(final String fieldName,\n      final Reader reader) {\n    return createComponents(fieldName, initReader(reader)).getTokenStream();\n  }\n\n","sourceOld":"  /**\n   * This method uses {@link #createComponents(String, Reader)} to obtain an\n   * instance of {@link TokenStreamComponents} and returns the sink of the\n   * components. Each calls to this method will create a new instance of\n   * {@link TokenStreamComponents}. Created {@link TokenStream} instances are \n   * never reused.\n   * \n   * @param fieldName the name of the field the created TokenStream is used for\n   * @param reader the reader the streams source reads from\n   */\n  @Override\n  public final TokenStream tokenStream(final String fieldName,\n      final Reader reader) {\n    return createComponents(fieldName, reader).getTokenStream();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/ReusableAnalyzerBase#tokenStream(String,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/ReusableAnalyzerBase#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * This method uses {@link #createComponents(String, Reader)} to obtain an\n   * instance of {@link TokenStreamComponents} and returns the sink of the\n   * components. Each calls to this method will create a new instance of\n   * {@link TokenStreamComponents}. Created {@link TokenStream} instances are \n   * never reused.\n   * \n   * @param fieldName the name of the field the created TokenStream is used for\n   * @param reader the reader the streams source reads from\n   */\n  @Override\n  public final TokenStream tokenStream(final String fieldName,\n      final Reader reader) {\n    return createComponents(fieldName, initReader(reader)).getTokenStream();\n  }\n\n","sourceOld":"  /**\n   * This method uses {@link #createComponents(String, Reader)} to obtain an\n   * instance of {@link TokenStreamComponents} and returns the sink of the\n   * components. Each calls to this method will create a new instance of\n   * {@link TokenStreamComponents}. Created {@link TokenStream} instances are \n   * never reused.\n   * \n   * @param fieldName the name of the field the created TokenStream is used for\n   * @param reader the reader the streams source reads from\n   */\n  @Override\n  public final TokenStream tokenStream(final String fieldName,\n      final Reader reader) {\n    return createComponents(fieldName, reader).getTokenStream();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8f1fd760e2a7a87de661158ca069c8dacab8360","date":1313992891,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/ReusableAnalyzerBase#tokenStream(String,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/ReusableAnalyzerBase#tokenStream(String,Reader).mjava","sourceNew":"  /**\n   * This method uses {@link #createComponents(String, Reader)} to obtain an\n   * instance of {@link TokenStreamComponents} and returns the sink of the\n   * components. Each calls to this method will create a new instance of\n   * {@link TokenStreamComponents}. Created {@link TokenStream} instances are \n   * never reused.\n   * \n   * @param fieldName the name of the field the created TokenStream is used for\n   * @param reader the reader the streams source reads from\n   */\n  @Override\n  public final TokenStream tokenStream(final String fieldName,\n      final Reader reader) {\n    return createComponents(fieldName, initReader(reader)).getTokenStream();\n  }\n\n","sourceOld":"  /**\n   * This method uses {@link #createComponents(String, Reader)} to obtain an\n   * instance of {@link TokenStreamComponents} and returns the sink of the\n   * components. Each calls to this method will create a new instance of\n   * {@link TokenStreamComponents}. Created {@link TokenStream} instances are \n   * never reused.\n   * \n   * @param fieldName the name of the field the created TokenStream is used for\n   * @param reader the reader the streams source reads from\n   */\n  @Override\n  public final TokenStream tokenStream(final String fieldName,\n      final Reader reader) {\n    return createComponents(fieldName, initReader(reader)).getTokenStream();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd"],"d8c4bb144102e537495ae5b321f77a9898f7b0b8":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd"],"b8f1fd760e2a7a87de661158ca069c8dacab8360":["f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8f1fd760e2a7a87de661158ca069c8dacab8360"],"f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d8c4bb144102e537495ae5b321f77a9898f7b0b8":[],"b8f1fd760e2a7a87de661158ca069c8dacab8360":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d8c4bb144102e537495ae5b321f77a9898f7b0b8","f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd"],"f6f92f9a1cb1cb0c498faf719c9222c6d4fa02dd":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d8c4bb144102e537495ae5b321f77a9898f7b0b8","b8f1fd760e2a7a87de661158ca069c8dacab8360"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d8c4bb144102e537495ae5b321f77a9898f7b0b8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}