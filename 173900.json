{"path":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","pathOld":"/dev/null","sourceNew":"  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","sourceNew":null,"sourceOld":"  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","pathOld":"src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","sourceNew":"  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","sourceOld":"  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","pathOld":"/dev/null","sourceNew":"  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b18a3a18e5b2ba91f969bc7c6c1198602de6def","date":1287504756,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","pathOld":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","sourceNew":"  @Test\n  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered 2!!!!!!!!!!!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","sourceOld":"  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","pathOld":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","sourceNew":"  @Test\n  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered 2!!!!!!!!!!!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","sourceOld":"  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","pathOld":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","sourceNew":"  @Test\n  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered 2!!!!!!!!!!!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","sourceOld":"  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","pathOld":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","sourceNew":"  @Test\n  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered 2!!!!!!!!!!!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","sourceOld":"  @Test\n  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered 2!!!!!!!!!!!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","pathOld":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","sourceNew":"  @Test\n  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered 2!!!!!!!!!!!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","sourceOld":"  @Test\n  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered 2!!!!!!!!!!!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","pathOld":"solr/src/test/org/apache/solr/core/SolrCoreTest#testClose().mjava","sourceNew":"  @Test\n  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered 2!!!!!!!!!!!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","sourceOld":"  @Test\n  public void testClose() throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    SolrCore core = cores.getCore(\"\");\n\n    ClosingRequestHandler handler1 = new ClosingRequestHandler();\n    handler1.inform( core );\n\n    String path = \"/this/is A path /that won't be registered 2!!!!!!!!!!!\";\n    SolrRequestHandler old = core.registerRequestHandler( path, handler1 );\n    assertNull( old ); // should not be anything...\n    assertEquals( core.getRequestHandlers().get( path ), handler1 );\n    core.close();\n    cores.shutdown();\n    assertTrue(\"Handler not closed\", handler1.closed == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["6b18a3a18e5b2ba91f969bc7c6c1198602de6def","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"6b18a3a18e5b2ba91f969bc7c6c1198602de6def":["1da8d55113b689b06716246649de6f62430f15c0"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","6b18a3a18e5b2ba91f969bc7c6c1198602de6def"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["6b18a3a18e5b2ba91f969bc7c6c1198602de6def"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["6b18a3a18e5b2ba91f969bc7c6c1198602de6def"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["1da8d55113b689b06716246649de6f62430f15c0","6b18a3a18e5b2ba91f969bc7c6c1198602de6def"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"6b18a3a18e5b2ba91f969bc7c6c1198602de6def":["c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["6b18a3a18e5b2ba91f969bc7c6c1198602de6def","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}