{"path":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","pathOld":"lucene/src/demo/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81ea17596392ebd5d12741eb9e3b2516258b9413","date":1298090976,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#jj_add_error_token(int,int).mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#jj_add_error_token(int,int).mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#jj_add_error_token(int,int).mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","81ea17596392ebd5d12741eb9e3b2516258b9413"],"81ea17596392ebd5d12741eb9e3b2516258b9413":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","81ea17596392ebd5d12741eb9e3b2516258b9413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81ea17596392ebd5d12741eb9e3b2516258b9413"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"81ea17596392ebd5d12741eb9e3b2516258b9413":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["f1bdbf92da222965b46c0a942c3857ba56e5c638","81ea17596392ebd5d12741eb9e3b2516258b9413","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}