{"path":"backwards/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#explain(IndexReader,int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#explain(IndexReader,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(IndexReader reader, int doc) throws IOException {\n      \n      ConstantScorer cs = new ConstantScorer(similarity, reader, this);\n      boolean exists = cs.docIdSetIterator.advance(doc) == doc;\n\n      ComplexExplanation result = new ComplexExplanation();\n\n      if (exists) {\n        result.setDescription(\"ConstantScoreQuery(\" + filter\n        + \"), product of:\");\n        result.setValue(queryWeight);\n        result.setMatch(Boolean.TRUE);\n        result.addDetail(new Explanation(getBoost(), \"boost\"));\n        result.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n      } else {\n        result.setDescription(\"ConstantScoreQuery(\" + filter\n        + \") doesn't match id \" + doc);\n        result.setValue(0);\n        result.setMatch(Boolean.FALSE);\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#explain(IndexReader,int).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantWeight#explain(IndexReader,int).mjava","sourceNew":"    @Override\n    public Explanation explain(IndexReader reader, int doc) throws IOException {\n      \n      ConstantScorer cs = new ConstantScorer(similarity, reader, this);\n      boolean exists = cs.docIdSetIterator.advance(doc) == doc;\n\n      ComplexExplanation result = new ComplexExplanation();\n\n      if (exists) {\n        result.setDescription(\"ConstantScoreQuery(\" + filter\n        + \"), product of:\");\n        result.setValue(queryWeight);\n        result.setMatch(Boolean.TRUE);\n        result.addDetail(new Explanation(getBoost(), \"boost\"));\n        result.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n      } else {\n        result.setDescription(\"ConstantScoreQuery(\" + filter\n        + \") doesn't match id \" + doc);\n        result.setValue(0);\n        result.setMatch(Boolean.FALSE);\n      }\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(IndexReader reader, int doc) throws IOException {\n      \n      ConstantScorer cs = new ConstantScorer(similarity, reader, this);\n      boolean exists = cs.docIdSetIterator.advance(doc) == doc;\n\n      ComplexExplanation result = new ComplexExplanation();\n\n      if (exists) {\n        result.setDescription(\"ConstantScoreQuery(\" + filter\n        + \"), product of:\");\n        result.setValue(queryWeight);\n        result.setMatch(Boolean.TRUE);\n        result.addDetail(new Explanation(getBoost(), \"boost\"));\n        result.addDetail(new Explanation(queryNorm,\"queryNorm\"));\n      } else {\n        result.setDescription(\"ConstantScoreQuery(\" + filter\n        + \") doesn't match id \" + doc);\n        result.setValue(0);\n        result.setMatch(Boolean.FALSE);\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}