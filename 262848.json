{"path":"src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","commits":[{"id":"17eb7532ac121036d18264e69542675407105635","date":1144877226,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","pathOld":"src/java/org/apache/solr/update/UpdateHandler#getId(Document).mjava","sourceNew":"  protected final String getIndexedId(Document doc) {\n    if (idField == null) throw new SolrException(400,\"Operation requires schema to have a unique key field\");\n    // Right now, single valued fields that require value transformation from external to internal (indexed)\n    // form have that transformation already performed and stored as the field value.\n    // This means\n    String id = idFieldType.storedToIndexed(doc.getField(idField.getName()));\n    if (id == null) throw new SolrException(400,\"Document is missing uniqueKey field \" + idField.getName());\n    return id;\n  }\n\n","sourceOld":"  protected final String getId(Document doc) {\n    if (idField == null) throw new SolrException(400,\"Operation requires schema to have a unique key field\");\n    String id = doc.get(idField.getName());\n    if (id == null) throw new SolrException(400,\"Document is missing uniqueKey field \" + idField.getName());\n    return id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0fca88525a75f64dd5d66cc89ad355e9ff10ed5","date":1174335919,"type":3,"author":"Mike Klaas","isMerge":false,"pathNew":"src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","pathOld":"src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","sourceNew":"  protected final String getIndexedId(Document doc) {\n    if (idField == null) \n      throw new SolrException(400,\"Operation requires schema to have a unique key field\");\n    \n    // Right now, single valued fields that require value transformation from external to internal (indexed)\n    // form have that transformation already performed and stored as the field value.\n    Fieldable[] id = doc.getFieldables( idField.getName() );\n    if (id == null || id.length < 1) \n      throw new SolrException(400,\"Document is missing uniqueKey field \" + idField.getName());\n    if( id.length > 1 ) \n      throw new SolrException(400,\"Document specifies multiple unique ids! \" + idField.getName());\n    \n    return idFieldType.storedToIndexed( id[0] );\n  }\n\n","sourceOld":"  protected final String getIndexedId(Document doc) {\n    if (idField == null) throw new SolrException(400,\"Operation requires schema to have a unique key field\");\n    // Right now, single valued fields that require value transformation from external to internal (indexed)\n    // form have that transformation already performed and stored as the field value.\n    // This means\n    String id = idFieldType.storedToIndexed(doc.getField(idField.getName()));\n    if (id == null) throw new SolrException(400,\"Document is missing uniqueKey field \" + idField.getName());\n    return id;\n  }\n\n","bugFix":["17eb7532ac121036d18264e69542675407105635"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","pathOld":"src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","sourceNew":"  protected final String getIndexedId(Document doc) {\n    if (idField == null) \n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n    \n    // Right now, single valued fields that require value transformation from external to internal (indexed)\n    // form have that transformation already performed and stored as the field value.\n    Fieldable[] id = doc.getFieldables( idField.getName() );\n    if (id == null || id.length < 1) \n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document is missing uniqueKey field \" + idField.getName());\n    if( id.length > 1 ) \n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document specifies multiple unique ids! \" + idField.getName());\n    \n    return idFieldType.storedToIndexed( id[0] );\n  }\n\n","sourceOld":"  protected final String getIndexedId(Document doc) {\n    if (idField == null) \n      throw new SolrException(400,\"Operation requires schema to have a unique key field\");\n    \n    // Right now, single valued fields that require value transformation from external to internal (indexed)\n    // form have that transformation already performed and stored as the field value.\n    Fieldable[] id = doc.getFieldables( idField.getName() );\n    if (id == null || id.length < 1) \n      throw new SolrException(400,\"Document is missing uniqueKey field \" + idField.getName());\n    if( id.length > 1 ) \n      throw new SolrException(400,\"Document specifies multiple unique ids! \" + idField.getName());\n    \n    return idFieldType.storedToIndexed( id[0] );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8147abadc2b9e098aa8746114cdbad06627e946e","date":1252311927,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","pathOld":"src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","sourceNew":"  protected final String getIndexedId(Document doc) {\n    if (idField == null)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    // Right now, single valued fields that require value transformation from external to internal (indexed)\n    // form have that transformation already performed and stored as the field value.\n    Fieldable[] id = doc.getFieldables( idField.getName() );\n    if (id == null || id.length < 1)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document is missing uniqueKey field \" + idField.getName());\n    if( id.length > 1 )\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document specifies multiple unique ids! \" + idField.getName());\n\n    return idFieldType.storedToIndexed( id[0] );\n  }\n\n","sourceOld":"  protected final String getIndexedId(Document doc) {\n    if (idField == null) \n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n    \n    // Right now, single valued fields that require value transformation from external to internal (indexed)\n    // form have that transformation already performed and stored as the field value.\n    Fieldable[] id = doc.getFieldables( idField.getName() );\n    if (id == null || id.length < 1) \n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document is missing uniqueKey field \" + idField.getName());\n    if( id.length > 1 ) \n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document specifies multiple unique ids! \" + idField.getName());\n    \n    return idFieldType.storedToIndexed( id[0] );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ba3f1c0856832d1e8fa89cd51b61a32fe42aa45","date":1266528548,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","pathOld":"src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","sourceNew":"  protected final String getIndexedId(Document doc) {\n    if (idField == null)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    // Right now, single valued fields that require value transformation from external to internal (indexed)\n    // form have that transformation already performed and stored as the field value.\n    Fieldable[] id = doc.getFieldables( idField.getName() );\n    if (id == null || id.length < 1)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document is missing mandatory uniqueKey field: \" + idField.getName());\n    if( id.length > 1 )\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document contains multiple values for uniqueKey field: \" + idField.getName());\n\n    return idFieldType.storedToIndexed( id[0] );\n  }\n\n","sourceOld":"  protected final String getIndexedId(Document doc) {\n    if (idField == null)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    // Right now, single valued fields that require value transformation from external to internal (indexed)\n    // form have that transformation already performed and stored as the field value.\n    Fieldable[] id = doc.getFieldables( idField.getName() );\n    if (id == null || id.length < 1)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document is missing uniqueKey field \" + idField.getName());\n    if( id.length > 1 )\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document specifies multiple unique ids! \" + idField.getName());\n\n    return idFieldType.storedToIndexed( id[0] );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","pathOld":"src/java/org/apache/solr/update/UpdateHandler#getIndexedId(Document).mjava","sourceNew":"  protected final String getIndexedId(Document doc) {\n    if (idField == null)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    // Right now, single valued fields that require value transformation from external to internal (indexed)\n    // form have that transformation already performed and stored as the field value.\n    Fieldable[] id = doc.getFieldables( idField.getName() );\n    if (id == null || id.length < 1)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document is missing mandatory uniqueKey field: \" + idField.getName());\n    if( id.length > 1 )\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document contains multiple values for uniqueKey field: \" + idField.getName());\n\n    return idFieldType.storedToIndexed( id[0] );\n  }\n\n","sourceOld":"  protected final String getIndexedId(Document doc) {\n    if (idField == null)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Operation requires schema to have a unique key field\");\n\n    // Right now, single valued fields that require value transformation from external to internal (indexed)\n    // form have that transformation already performed and stored as the field value.\n    Fieldable[] id = doc.getFieldables( idField.getName() );\n    if (id == null || id.length < 1)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document is missing mandatory uniqueKey field: \" + idField.getName());\n    if( id.length > 1 )\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Document contains multiple values for uniqueKey field: \" + idField.getName());\n\n    return idFieldType.storedToIndexed( id[0] );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0fca88525a75f64dd5d66cc89ad355e9ff10ed5":["17eb7532ac121036d18264e69542675407105635"],"0ba3f1c0856832d1e8fa89cd51b61a32fe42aa45":["8147abadc2b9e098aa8746114cdbad06627e946e"],"8147abadc2b9e098aa8746114cdbad06627e946e":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["0ba3f1c0856832d1e8fa89cd51b61a32fe42aa45"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["c0fca88525a75f64dd5d66cc89ad355e9ff10ed5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"17eb7532ac121036d18264e69542675407105635":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"c0fca88525a75f64dd5d66cc89ad355e9ff10ed5":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"0ba3f1c0856832d1e8fa89cd51b61a32fe42aa45":["ad94625fb8d088209f46650c8097196fec67f00c"],"8147abadc2b9e098aa8746114cdbad06627e946e":["0ba3f1c0856832d1e8fa89cd51b61a32fe42aa45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["17eb7532ac121036d18264e69542675407105635"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["8147abadc2b9e098aa8746114cdbad06627e946e"],"17eb7532ac121036d18264e69542675407105635":["c0fca88525a75f64dd5d66cc89ad355e9ff10ed5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}