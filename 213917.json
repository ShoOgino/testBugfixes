{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testForceMergeDeletes().mjava","commits":[{"id":"34ce7c842452c79b12c45a8feb64e4597c7110e8","date":1321637224,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testForceMergeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.forceMergeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testForceMergeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.forceMergeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.forceMergeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testForceMergeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.forceMergeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.forceMergeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testForceMergeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.forceMergeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.forceMergeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testForceMergeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testForceMergeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.forceMergeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testForceMergeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.forceMergeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["34ce7c842452c79b12c45a8feb64e4597c7110e8","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["34ce7c842452c79b12c45a8feb64e4597c7110e8","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["34ce7c842452c79b12c45a8feb64e4597c7110e8"],"34ce7c842452c79b12c45a8feb64e4597c7110e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["34ce7c842452c79b12c45a8feb64e4597c7110e8"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"34ce7c842452c79b12c45a8feb64e4597c7110e8":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}