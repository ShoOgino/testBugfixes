{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#before().mjava","commits":[{"id":"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19","date":1400739326,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#before().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void before() throws Throwable {\n    super.before();\n\n    assert tempDirBase == null;\n    javaTempDir = initializeJavaTempDir();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#before().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void before() throws Throwable {\n    super.before();\n\n    assert tempDirBase == null;\n    javaTempDir = initializeJavaTempDir();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7cefb6c0aa217f293070c43e7a77682dd56e0a33","date":1416928878,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#before().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#before().mjava","sourceNew":"  @Override\n  protected void before() throws Throwable {\n    super.before();\n\n    assert tempDirBase == null;\n    fileSystem = initializeFileSystem();\n    javaTempDir = initializeJavaTempDir();\n  }\n\n","sourceOld":"  @Override\n  protected void before() throws Throwable {\n    super.before();\n\n    assert tempDirBase == null;\n    javaTempDir = initializeJavaTempDir();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ccfbb043f2ebf23df8782dd32a68ff1b399c3d2","date":1443129829,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#before().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#before().mjava","sourceNew":"  @Override\n  protected void before() throws Throwable {\n    super.before();\n\n    assert tempDirBase == null;\n    fileSystem = initializeFileSystem();\n    javaTempDir = initializeJavaTempDir();\n\n    // So all code using OfflineSorter (suggesters, BKD tree, NumericRangeTree) see MockFS goodness, e.g. catching leaked file handles:\n    OfflineSorter.setDefaultTempDir(javaTempDir);\n  }\n\n","sourceOld":"  @Override\n  protected void before() throws Throwable {\n    super.before();\n\n    assert tempDirBase == null;\n    fileSystem = initializeFileSystem();\n    javaTempDir = initializeJavaTempDir();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#before().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleTemporaryFilesCleanup#before().mjava","sourceNew":"  @Override\n  protected void before() throws Throwable {\n    super.before();\n\n    assert tempDirBase == null;\n    fileSystem = initializeFileSystem();\n    javaTempDir = initializeJavaTempDir();\n  }\n\n","sourceOld":"  @Override\n  protected void before() throws Throwable {\n    super.before();\n\n    assert tempDirBase == null;\n    fileSystem = initializeFileSystem();\n    javaTempDir = initializeJavaTempDir();\n\n    // So all code using OfflineSorter (suggesters, BKD tree, NumericRangeTree) see MockFS goodness, e.g. catching leaked file handles:\n    OfflineSorter.setDefaultTempDir(javaTempDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ccfbb043f2ebf23df8782dd32a68ff1b399c3d2":["7cefb6c0aa217f293070c43e7a77682dd56e0a33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7605579001505896d48b07160075a5c8b8e128e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"7cefb6c0aa217f293070c43e7a77682dd56e0a33":["4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["8ccfbb043f2ebf23df8782dd32a68ff1b399c3d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8ccfbb043f2ebf23df8782dd32a68ff1b399c3d2":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7605579001505896d48b07160075a5c8b8e128e","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"b7605579001505896d48b07160075a5c8b8e128e":[],"7cefb6c0aa217f293070c43e7a77682dd56e0a33":["8ccfbb043f2ebf23df8782dd32a68ff1b399c3d2"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["b7605579001505896d48b07160075a5c8b8e128e","7cefb6c0aa217f293070c43e7a77682dd56e0a33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}