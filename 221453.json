{"path":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#writeToZooKeeper(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"8b51e04dc58a1002908e3caba8f5eb8ef59abe00","date":1384906513,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#writeToZooKeeper(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#writeToZooKeeper(SolrQueryRequest,SolrQueryResponse,CoreContainer).mjava","sourceNew":"  // write the file contained in the parameter \"file=XXX\" to ZooKeeper. The file may be a path, e.g.\n  // file=velocity/error.vm or file=schema.xml\n  //\n  // Important: Assumes that the file already exists in ZK, so far we aren't creating files there.\n  private void writeToZooKeeper(SolrQueryRequest req, SolrQueryResponse rsp)\n      throws KeeperException, InterruptedException, IOException {\n\n    CoreContainer coreContainer = req.getCore().getCoreDescriptor().getCoreContainer();\n    SolrZkClient zkClient = coreContainer.getZkController().getZkClient();\n\n    String adminFile = getAdminFileFromZooKeeper(req, rsp, zkClient);\n    ContentStream stream = getOneInputStream(req, rsp);\n    if (stream == null) {\n      return; // Error already in rsp.\n    }\n\n    byte[] data = IOUtils.toByteArray(new InputStreamReader(stream.getStream(), \"UTF-8\"), \"UTF-8\");\n    String fname = req.getParams().get(\"file\", null);\n    if (OP_TEST.equals(req.getParams().get(OP_PARAM)))  {\n      testReloadSuccess(req, rsp, stream);\n      return;\n    }\n    // Persist the managed schema\n    try {\n      // Assumption: the path exists\n      zkClient.setData(adminFile, data, true);\n      log.info(\"Saved \" + fname + \" to ZooKeeper successfully.\");\n    } catch (KeeperException.BadVersionException e) {\n      log.error(\"Cannot save file: \" + fname + \" to Zookeeper, \" +\n          \"ZooKeeper error: \" + e.getMessage());\n      rsp.setException(new SolrException(ErrorCode.SERVER_ERROR, \"Cannot save file: \" + fname + \" to Zookeeper, \" +\n          \"ZooKeeper error: \" + e.getMessage()));\n    }\n  }\n\n","sourceOld":"  // write the file contained in the parameter \"file=XXX\" to ZooKeeper. The file may be a path, e.g.\n  // file=velocity/error.vm or file=schema.xml\n  //\n  // Important: Assumes that the file already exists in ZK, so far we aren't creating files there.\n  private void writeToZooKeeper(SolrQueryRequest req, SolrQueryResponse rsp, CoreContainer coreContainer)\n      throws KeeperException, InterruptedException, IOException {\n    SolrZkClient zkClient = coreContainer.getZkController().getZkClient();\n\n    String adminFile = getAdminFileFromZooKeeper(req, rsp, zkClient);\n    ContentStream stream = getOneInputStream(req, rsp);\n    if (stream == null) {\n      return; // Error already in rsp.\n    }\n\n    byte[] data = IOUtils.toByteArray(new InputStreamReader(stream.getStream(), \"UTF-8\"), \"UTF-8\");\n    String fname = req.getParams().get(\"file\", null);\n    // Persist the managed schema\n    try {\n      // Assumption: the path exists\n      zkClient.setData(adminFile, data, true);\n      log.info(\"Saved \" + fname + \" to ZooKeeper successfully.\");\n    } catch (KeeperException.BadVersionException e) {\n      log.error(\"Cannot save file: \" + fname + \" to Zookeeper, \" +\n          \"ZooKeeper error: \" + e.getMessage());\n      rsp.setException(new SolrException(ErrorCode.SERVER_ERROR, \"Cannot save file: \" + fname + \" to Zookeeper, \" +\n          \"ZooKeeper error: \" + e.getMessage()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7455ee5c847b2ee7e44656e4218141f62dacb572","date":1386032125,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#writeToZooKeeper(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#writeToZooKeeper(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  // write the file contained in the parameter \"file=XXX\" to ZooKeeper. The file may be a path, e.g.\n  // file=velocity/error.vm or file=schema.xml\n  //\n  // Important: Assumes that the file already exists in ZK, so far we aren't creating files there.\n  private void writeToZooKeeper(SolrQueryRequest req, SolrQueryResponse rsp)\n      throws KeeperException, InterruptedException, IOException {\n\n    CoreContainer coreContainer = req.getCore().getCoreDescriptor().getCoreContainer();\n    SolrZkClient zkClient = coreContainer.getZkController().getZkClient();\n\n    String adminFile = ShowFileRequestHandler.getAdminFileFromZooKeeper(req, rsp, zkClient, hiddenFiles);\n    String fname = req.getParams().get(\"file\", null);\n    if (OP_TEST.equals(req.getParams().get(OP_PARAM))) {\n      testReloadSuccess(req, rsp);\n      return;\n    }\n    // Persist the managed schema\n    try {\n      // Assumption: the path exists\n      zkClient.setData(adminFile, data, true);\n      log.info(\"Saved \" + fname + \" to ZooKeeper successfully.\");\n    } catch (KeeperException.BadVersionException e) {\n      log.error(\"Cannot save file: \" + fname + \" to Zookeeper, \" +\n          \"ZooKeeper error: \" + e.getMessage());\n      rsp.setException(new SolrException(ErrorCode.SERVER_ERROR, \"Cannot save file: \" + fname + \" to Zookeeper, \" +\n          \"ZooKeeper error: \" + e.getMessage()));\n    }\n  }\n\n","sourceOld":"  // write the file contained in the parameter \"file=XXX\" to ZooKeeper. The file may be a path, e.g.\n  // file=velocity/error.vm or file=schema.xml\n  //\n  // Important: Assumes that the file already exists in ZK, so far we aren't creating files there.\n  private void writeToZooKeeper(SolrQueryRequest req, SolrQueryResponse rsp)\n      throws KeeperException, InterruptedException, IOException {\n\n    CoreContainer coreContainer = req.getCore().getCoreDescriptor().getCoreContainer();\n    SolrZkClient zkClient = coreContainer.getZkController().getZkClient();\n\n    String adminFile = getAdminFileFromZooKeeper(req, rsp, zkClient);\n    ContentStream stream = getOneInputStream(req, rsp);\n    if (stream == null) {\n      return; // Error already in rsp.\n    }\n\n    byte[] data = IOUtils.toByteArray(new InputStreamReader(stream.getStream(), \"UTF-8\"), \"UTF-8\");\n    String fname = req.getParams().get(\"file\", null);\n    if (OP_TEST.equals(req.getParams().get(OP_PARAM)))  {\n      testReloadSuccess(req, rsp, stream);\n      return;\n    }\n    // Persist the managed schema\n    try {\n      // Assumption: the path exists\n      zkClient.setData(adminFile, data, true);\n      log.info(\"Saved \" + fname + \" to ZooKeeper successfully.\");\n    } catch (KeeperException.BadVersionException e) {\n      log.error(\"Cannot save file: \" + fname + \" to Zookeeper, \" +\n          \"ZooKeeper error: \" + e.getMessage());\n      rsp.setException(new SolrException(ErrorCode.SERVER_ERROR, \"Cannot save file: \" + fname + \" to Zookeeper, \" +\n          \"ZooKeeper error: \" + e.getMessage()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8b51e04dc58a1002908e3caba8f5eb8ef59abe00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7455ee5c847b2ee7e44656e4218141f62dacb572":["8b51e04dc58a1002908e3caba8f5eb8ef59abe00"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7455ee5c847b2ee7e44656e4218141f62dacb572"]},"commit2Childs":{"8b51e04dc58a1002908e3caba8f5eb8ef59abe00":["7455ee5c847b2ee7e44656e4218141f62dacb572"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b51e04dc58a1002908e3caba8f5eb8ef59abe00"],"7455ee5c847b2ee7e44656e4218141f62dacb572":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}