{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest.ShapePair#ShapePair(Shape,Shape,boolean).mjava","commits":[{"id":"f54c29b684839e16d0a7ffd41ee8a1e93e905184","date":1395120410,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest.ShapePair#ShapePair(Shape,Shape,boolean).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest.ShapePair#ShapePair(Rectangle,Rectangle,boolean).mjava","sourceNew":"    public ShapePair(Shape shape1, Shape shape2, boolean containsThenWithin) {\n      super(Arrays.asList(shape1, shape2), ctx);\n      this.shape1 = shape1;\n      this.shape2 = shape2;\n      biasContainsThenWithin = containsThenWithin;\n    }\n\n","sourceOld":"    public ShapePair(Rectangle shape1, Rectangle shape2, boolean containsThenWithin) {\n      super(Arrays.asList(shape1, shape2), ctx);\n      this.shape1 = shape1;\n      this.shape2 = shape2;\n      biasContainsThenWithin = containsThenWithin;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d2a1de5195b361aa0308c81d975ac74695d0ffe","date":1401207212,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest.ShapePair#ShapePair(Shape,Shape,boolean).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest.ShapePair#ShapePair(Shape,Shape,boolean).mjava","sourceNew":"    public ShapePair(Shape shape1, Shape shape2, boolean containsThenWithin) {\n      super(Arrays.asList(shape1, shape2), ctx);\n      this.shape1 = shape1;\n      this.shape2 = shape2;\n      this.shape1_2D = toNonGeo(shape1);\n      this.shape2_2D = toNonGeo(shape2);\n      biasContainsThenWithin = containsThenWithin;\n    }\n\n","sourceOld":"    public ShapePair(Shape shape1, Shape shape2, boolean containsThenWithin) {\n      super(Arrays.asList(shape1, shape2), ctx);\n      this.shape1 = shape1;\n      this.shape2 = shape2;\n      biasContainsThenWithin = containsThenWithin;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0521546db127e358ced1772a9d696dbdd255b203","date":1403202289,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#ShapePair(Shape,Shape,boolean).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest.ShapePair#ShapePair(Shape,Shape,boolean).mjava","sourceNew":"    public ShapePair(Shape shape1, Shape shape2, boolean containsThenWithin) {\n      super(Arrays.asList(shape1, shape2), ctx);\n      this.shape1 = shape1;\n      this.shape2 = shape2;\n      this.shape1_2D = toNonGeo(shape1);\n      this.shape2_2D = toNonGeo(shape2);\n      biasContainsThenWithin = containsThenWithin;\n    }\n\n","sourceOld":"    public ShapePair(Shape shape1, Shape shape2, boolean containsThenWithin) {\n      super(Arrays.asList(shape1, shape2), ctx);\n      this.shape1 = shape1;\n      this.shape2 = shape2;\n      this.shape1_2D = toNonGeo(shape1);\n      this.shape2_2D = toNonGeo(shape2);\n      biasContainsThenWithin = containsThenWithin;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f54c29b684839e16d0a7ffd41ee8a1e93e905184":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3d2a1de5195b361aa0308c81d975ac74695d0ffe":["f54c29b684839e16d0a7ffd41ee8a1e93e905184"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0521546db127e358ced1772a9d696dbdd255b203":["3d2a1de5195b361aa0308c81d975ac74695d0ffe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0521546db127e358ced1772a9d696dbdd255b203"]},"commit2Childs":{"f54c29b684839e16d0a7ffd41ee8a1e93e905184":["3d2a1de5195b361aa0308c81d975ac74695d0ffe"],"3d2a1de5195b361aa0308c81d975ac74695d0ffe":["0521546db127e358ced1772a9d696dbdd255b203"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f54c29b684839e16d0a7ffd41ee8a1e93e905184"],"0521546db127e358ced1772a9d696dbdd255b203":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}