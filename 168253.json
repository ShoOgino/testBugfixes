{"path":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean exists(String path) {\n    Path hdfsDirPath = new Path(path);\n    Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      fileSystem = FileSystem.newInstance(hdfsDirPath.toUri(), conf);\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["60788e79302b77255f71a4bcfc58a2424a205d9c","a3bf63a4bdcd7c37d2bef84364a56ffdb8a51197"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean exists(String path) {\n    Path hdfsDirPath = new Path(path);\n    Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      fileSystem = FileSystem.newInstance(hdfsDirPath.toUri(), conf);\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3bf63a4bdcd7c37d2bef84364a56ffdb8a51197","date":1427044180,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    Path hdfsDirPath = new Path(path);\n    Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      fileSystem = FileSystem.get(hdfsDirPath.toUri(), conf);\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    Path hdfsDirPath = new Path(path);\n    Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      fileSystem = FileSystem.newInstance(hdfsDirPath.toUri(), conf);\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","bugFix":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    Path hdfsDirPath = new Path(path);\n    Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      fileSystem = FileSystem.get(hdfsDirPath.toUri(), conf);\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    Path hdfsDirPath = new Path(path);\n    Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      fileSystem = FileSystem.newInstance(hdfsDirPath.toUri(), conf);\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69e4e48f0090c52eda2f53eb199c8c862375fbcc","date":1429995757,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    final Path hdfsDirPath = new Path(path);\n    final Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      // no need to close the fs, the cache will do it\n      fileSystem = tmpFsCache.get(path, new Callable<FileSystem>() {\n        @Override\n        public FileSystem call() throws IOException {\n          return FileSystem.get(hdfsDirPath.toUri(), conf);\n        }\n      });\n    } catch (ExecutionException e) {\n      throw new RuntimeException(e);\n    }\n\n    try {\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    Path hdfsDirPath = new Path(path);\n    Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      fileSystem = FileSystem.get(hdfsDirPath.toUri(), conf);\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    } finally {\n      IOUtils.closeQuietly(fileSystem);\n    }\n  }\n\n","bugFix":null,"bugIntro":["60788e79302b77255f71a4bcfc58a2424a205d9c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"043df2e9a841864922c32756a44c939ed768cb89","date":1459876536,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    final Path hdfsDirPath = new Path(path);\n    final Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      // no need to close the fs, the cache will do it\n      fileSystem = tmpFsCache.get(path, () -> FileSystem.get(hdfsDirPath.toUri(), conf));\n    } catch (ExecutionException e) {\n      throw new RuntimeException(e);\n    }\n\n    try {\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    final Path hdfsDirPath = new Path(path);\n    final Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      // no need to close the fs, the cache will do it\n      fileSystem = tmpFsCache.get(path, new Callable<FileSystem>() {\n        @Override\n        public FileSystem call() throws IOException {\n          return FileSystem.get(hdfsDirPath.toUri(), conf);\n        }\n      });\n    } catch (ExecutionException e) {\n      throw new RuntimeException(e);\n    }\n\n    try {\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["60788e79302b77255f71a4bcfc58a2424a205d9c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b6284684320a9808c41a5e43de958b2da22f89bd","date":1459977490,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    final Path hdfsDirPath = new Path(path);\n    final Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      // no need to close the fs, the cache will do it\n      fileSystem = tmpFsCache.get(path, () -> FileSystem.get(hdfsDirPath.toUri(), conf));\n    } catch (ExecutionException e) {\n      throw new RuntimeException(e);\n    }\n\n    try {\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    final Path hdfsDirPath = new Path(path);\n    final Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      // no need to close the fs, the cache will do it\n      fileSystem = tmpFsCache.get(path, new Callable<FileSystem>() {\n        @Override\n        public FileSystem call() throws IOException {\n          return FileSystem.get(hdfsDirPath.toUri(), conf);\n        }\n      });\n    } catch (ExecutionException e) {\n      throw new RuntimeException(e);\n    }\n\n    try {\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"60788e79302b77255f71a4bcfc58a2424a205d9c","date":1517245253,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    final Path hdfsDirPath = new Path(path);\n    FileSystem fileSystem = getCachedFileSystem(path);\n\n    try {\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    final Path hdfsDirPath = new Path(path);\n    final Configuration conf = getConf();\n    FileSystem fileSystem = null;\n    try {\n      // no need to close the fs, the cache will do it\n      fileSystem = tmpFsCache.get(path, () -> FileSystem.get(hdfsDirPath.toUri(), conf));\n    } catch (ExecutionException e) {\n      throw new RuntimeException(e);\n    }\n\n    try {\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    }\n  }\n\n","bugFix":["849494cf2f3a96af5c8c84995108ddd8456fcd04","043df2e9a841864922c32756a44c939ed768cb89","69e4e48f0090c52eda2f53eb199c8c862375fbcc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    final Path hdfsDirPath = new Path(path);\n    FileSystem fileSystem = getCachedFileSystem(path);\n\n    try {\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      log.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    final Path hdfsDirPath = new Path(path);\n    FileSystem fileSystem = getCachedFileSystem(path);\n\n    try {\n      return fileSystem.exists(hdfsDirPath);\n    } catch (IOException e) {\n      LOG.error(\"Error checking if hdfs path exists\", e);\n      throw new RuntimeException(\"Error checking if hdfs path exists\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"043df2e9a841864922c32756a44c939ed768cb89":["69e4e48f0090c52eda2f53eb199c8c862375fbcc"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["849494cf2f3a96af5c8c84995108ddd8456fcd04","a3bf63a4bdcd7c37d2bef84364a56ffdb8a51197"],"60788e79302b77255f71a4bcfc58a2424a205d9c":["b6284684320a9808c41a5e43de958b2da22f89bd"],"b6284684320a9808c41a5e43de958b2da22f89bd":["69e4e48f0090c52eda2f53eb199c8c862375fbcc","043df2e9a841864922c32756a44c939ed768cb89"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a3bf63a4bdcd7c37d2bef84364a56ffdb8a51197":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["60788e79302b77255f71a4bcfc58a2424a205d9c"],"69e4e48f0090c52eda2f53eb199c8c862375fbcc":["a3bf63a4bdcd7c37d2bef84364a56ffdb8a51197"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","37a0f60745e53927c4c876cfe5b5a58170f0646c","a3bf63a4bdcd7c37d2bef84364a56ffdb8a51197"],"043df2e9a841864922c32756a44c939ed768cb89":["b6284684320a9808c41a5e43de958b2da22f89bd"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"60788e79302b77255f71a4bcfc58a2424a205d9c":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"b6284684320a9808c41a5e43de958b2da22f89bd":["60788e79302b77255f71a4bcfc58a2424a205d9c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a3bf63a4bdcd7c37d2bef84364a56ffdb8a51197":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","69e4e48f0090c52eda2f53eb199c8c862375fbcc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"69e4e48f0090c52eda2f53eb199c8c862375fbcc":["043df2e9a841864922c32756a44c939ed768cb89","b6284684320a9808c41a5e43de958b2da22f89bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}