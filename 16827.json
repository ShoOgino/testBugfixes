{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir1, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir1, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir1, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n    writer.addIndexesNoOptimize(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory(random);\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory(random);\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory(random);\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory(random);\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":["527cc14542789f47d75da436cb4287d1ab887e34"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir1, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n    writer.addIndexes(new Directory[] { dir2 });\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer.setInfoStream(infoStream);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    writer2.setInfoStream(infoStream);\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean optimize = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    createIndexNoClose(!optimize, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes2().mjava","sourceNew":"  public void testAddIndexes2() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes2() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriter writer = new IndexWriter(dir1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n    writer.addIndexes(dir2);\n\n    IndexReader r1 = writer.getReader();\n    assertEquals(500, r1.maxDoc());\n    \n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"06584e6e98d592b34e1329b384182f368d2025e8":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3bb13258feba31ab676502787ab2e1779f129b7a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["06584e6e98d592b34e1329b384182f368d2025e8"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["d572389229127c297dd1fa5ce4758e1cec41e799"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4e8cc373c801e54cec75daf9f52792cb4b17f536","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b21422ff1d1d56499dec481f193b402e5e8def5b":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"3bb13258feba31ab676502787ab2e1779f129b7a":["1f653cfcf159baeaafe5d01682a911e95bba4012","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["06584e6e98d592b34e1329b384182f368d2025e8","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"3bb13258feba31ab676502787ab2e1779f129b7a":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}