{"path":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testConstructorExceptions().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testConstructorExceptions().mjava","pathOld":"lucene/src/test/org/apache/lucene/document/TestDocument#testConstructorExceptions().mjava","sourceNew":"  public void testConstructorExceptions() {\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    new Field(\"name\", \"value\", ft); // okay\n    new StringField(\"name\", \"value\"); // okay\n    try {\n      new Field(\"name\", \"value\", new FieldType());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    new Field(\"name\", \"value\", ft); // okay\n    try {\n      FieldType ft2 = new FieldType();\n      ft2.setStored(true);\n      ft2.setStoreTermVectors(true);\n      new Field(\"name\", \"value\", ft2);\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n  }\n\n","sourceOld":"  public void testConstructorExceptions() {\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    new Field(\"name\", \"value\", ft); // okay\n    new StringField(\"name\", \"value\"); // okay\n    try {\n      new Field(\"name\", \"value\", new FieldType());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    new Field(\"name\", \"value\", ft); // okay\n    try {\n      FieldType ft2 = new FieldType();\n      ft2.setStored(true);\n      ft2.setStoreTermVectors(true);\n      new Field(\"name\", \"value\", ft2);\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testConstructorExceptions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testConstructorExceptions().mjava","sourceNew":"  public void testConstructorExceptions() {\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    new Field(\"name\", \"value\", ft); // okay\n    new StringField(\"name\", \"value\", Field.Store.NO); // okay\n    try {\n      new Field(\"name\", \"value\", new FieldType());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    new Field(\"name\", \"value\", ft); // okay\n    try {\n      FieldType ft2 = new FieldType();\n      ft2.setStored(true);\n      ft2.setStoreTermVectors(true);\n      new Field(\"name\", \"value\", ft2);\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n  }\n\n","sourceOld":"  public void testConstructorExceptions() {\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    new Field(\"name\", \"value\", ft); // okay\n    new StringField(\"name\", \"value\"); // okay\n    try {\n      new Field(\"name\", \"value\", new FieldType());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    new Field(\"name\", \"value\", ft); // okay\n    try {\n      FieldType ft2 = new FieldType();\n      ft2.setStored(true);\n      ft2.setStoreTermVectors(true);\n      new Field(\"name\", \"value\", ft2);\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testConstructorExceptions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testConstructorExceptions().mjava","sourceNew":"  public void testConstructorExceptions() throws Exception {\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    new Field(\"name\", \"value\", ft); // okay\n    new StringField(\"name\", \"value\", Field.Store.NO); // okay\n    try {\n      new Field(\"name\", \"value\", new FieldType());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    new Field(\"name\", \"value\", ft); // okay\n    Document doc = new Document();\n    FieldType ft2 = new FieldType();\n    ft2.setStored(true);\n    ft2.setStoreTermVectors(true);\n    doc.add(new Field(\"name\", \"value\", ft2));\n    try {\n      w.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testConstructorExceptions() {\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    new Field(\"name\", \"value\", ft); // okay\n    new StringField(\"name\", \"value\", Field.Store.NO); // okay\n    try {\n      new Field(\"name\", \"value\", new FieldType());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    new Field(\"name\", \"value\", ft); // okay\n    try {\n      FieldType ft2 = new FieldType();\n      ft2.setStored(true);\n      ft2.setStoreTermVectors(true);\n      new Field(\"name\", \"value\", ft2);\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testConstructorExceptions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testConstructorExceptions().mjava","sourceNew":"  public void testConstructorExceptions() throws Exception {\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    new Field(\"name\", \"value\", ft); // okay\n    new StringField(\"name\", \"value\", Field.Store.NO); // okay\n    try {\n      new Field(\"name\", \"value\", new FieldType());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    new Field(\"name\", \"value\", ft); // okay\n    Document doc = new Document();\n    FieldType ft2 = new FieldType();\n    ft2.setStored(true);\n    ft2.setStoreTermVectors(true);\n    doc.add(new Field(\"name\", \"value\", ft2));\n    try {\n      w.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testConstructorExceptions() {\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    new Field(\"name\", \"value\", ft); // okay\n    new StringField(\"name\", \"value\", Field.Store.NO); // okay\n    try {\n      new Field(\"name\", \"value\", new FieldType());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    new Field(\"name\", \"value\", ft); // okay\n    try {\n      FieldType ft2 = new FieldType();\n      ft2.setStored(true);\n      ft2.setStoreTermVectors(true);\n      new Field(\"name\", \"value\", ft2);\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testConstructorExceptions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testConstructorExceptions().mjava","sourceNew":"  public void testConstructorExceptions() throws Exception {\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    new Field(\"name\", \"value\", ft); // okay\n    new StringField(\"name\", \"value\", Field.Store.NO); // okay\n    expectThrows(IllegalArgumentException.class, () -> {\n      new Field(\"name\", \"value\", new FieldType());\n    });\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    new Field(\"name\", \"value\", ft); // okay\n    Document doc = new Document();\n    FieldType ft2 = new FieldType();\n    ft2.setStored(true);\n    ft2.setStoreTermVectors(true);\n    doc.add(new Field(\"name\", \"value\", ft2));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n    });\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testConstructorExceptions() throws Exception {\n    FieldType ft = new FieldType();\n    ft.setStored(true);\n    new Field(\"name\", \"value\", ft); // okay\n    new StringField(\"name\", \"value\", Field.Store.NO); // okay\n    try {\n      new Field(\"name\", \"value\", new FieldType());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    new Field(\"name\", \"value\", ft); // okay\n    Document doc = new Document();\n    FieldType ft2 = new FieldType();\n    ft2.setStored(true);\n    ft2.setStoreTermVectors(true);\n    doc.add(new Field(\"name\", \"value\", ft2));\n    try {\n      w.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c","c084e47df29de3330311d69dabf515ceaa989512"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["04f07771a2a7dd3a395700665ed839c3dae2def2","04f07771a2a7dd3a395700665ed839c3dae2def2"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["04f07771a2a7dd3a395700665ed839c3dae2def2","3394716f52b34ab259ad5247e7595d9f9db6e935"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","05fe562aa248790944d43cdd478f512572835ba0"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}