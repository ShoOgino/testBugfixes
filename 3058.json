{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","commits":[{"id":"b370db466d289e8ea02a47d9aee2aad4c9a369af","date":1432733692,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /** Compute the desired magnitude of a unit vector projected to a given\n   * planet model.\n   * @param planetModel is the planet model.\n   * @param x is the unit vector x value.\n   * @param y is the unit vector y value.\n   * @param z is the unit vector z value.\n   * @return a magnitude value for that (x,y,z) that projects the vector onto the specified ellipsoid.\n   */\n  protected static double computeDesiredEllipsoidMagnitude(final PlanetModel planetModel, final double x, final double y, final double z) {\n    return 1.0 / Math.sqrt(x*x*planetModel.inverseAbSquared + y*y*planetModel.inverseAbSquared + z*z*planetModel.inverseCSquared);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /** Compute the desired magnitude of a unit vector projected to a given\n   * planet model.\n   * @param planetModel is the planet model.\n   * @param x is the unit vector x value.\n   * @param y is the unit vector y value.\n   * @param z is the unit vector z value.\n   * @return a magnitude value for that (x,y,z) that projects the vector onto the specified ellipsoid.\n   */\n  protected static double computeDesiredEllipsoidMagnitude(final PlanetModel planetModel, final double x, final double y, final double z) {\n    return 1.0 / Math.sqrt(x*x*planetModel.inverseAbSquared + y*y*planetModel.inverseAbSquared + z*z*planetModel.inverseCSquared);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector#computeDesiredEllipsoidMagnitude(PlanetModel,double,double,double).mjava","sourceNew":"  /** Compute the desired magnitude of a unit vector projected to a given\n   * planet model.\n   * @param planetModel is the planet model.\n   * @param x is the unit vector x value.\n   * @param y is the unit vector y value.\n   * @param z is the unit vector z value.\n   * @return a magnitude value for that (x,y,z) that projects the vector onto the specified ellipsoid.\n   */\n  protected static double computeDesiredEllipsoidMagnitude(final PlanetModel planetModel, final double x, final double y, final double z) {\n    return 1.0 / Math.sqrt(x*x*planetModel.inverseAbSquared + y*y*planetModel.inverseAbSquared + z*z*planetModel.inverseCSquared);\n  }\n\n","sourceOld":"  /** Compute the desired magnitude of a unit vector projected to a given\n   * planet model.\n   * @param planetModel is the planet model.\n   * @param x is the unit vector x value.\n   * @param y is the unit vector y value.\n   * @param z is the unit vector z value.\n   * @return a magnitude value for that (x,y,z) that projects the vector onto the specified ellipsoid.\n   */\n  protected static double computeDesiredEllipsoidMagnitude(final PlanetModel planetModel, final double x, final double y, final double z) {\n    return 1.0 / Math.sqrt(x*x*planetModel.inverseAbSquared + y*y*planetModel.inverseAbSquared + z*z*planetModel.inverseCSquared);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b370db466d289e8ea02a47d9aee2aad4c9a369af"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["fec06d6753751ae302c7d35866763e6cb414112d"],"b370db466d289e8ea02a47d9aee2aad4c9a369af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fec06d6753751ae302c7d35866763e6cb414112d","b370db466d289e8ea02a47d9aee2aad4c9a369af"],"fec06d6753751ae302c7d35866763e6cb414112d":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b370db466d289e8ea02a47d9aee2aad4c9a369af":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}