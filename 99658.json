{"path":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#pathToString(String[],int).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#pathToString(String[],int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetsConfig#pathToString(String[],int).mjava","sourceNew":"  public static String pathToString(String[] path, int length) {\n    // nocommit .... too anal?  shouldn't we allow drill\n    // down on just dim, to get all docs that have that\n    // dim...?\n    /*\n    if (path.length < 2) {\n      throw new IllegalArgumentException(\"path length must be > 0 (dim=\" + path[0] + \")\");\n    }\n    */\n    if (length == 0) {\n      return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<length;i++) {\n      String s = path[i];\n      int numChars = s.length();\n      for(int j=0;j<numChars;j++) {\n        char ch = s.charAt(j);\n        if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {\n          sb.append(ESCAPE_CHAR);\n        }\n        sb.append(ch);\n      }\n      sb.append(DELIM_CHAR);\n    }\n\n    // Trim off last DELIM_CHAR:\n    sb.setLength(sb.length()-1);\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String pathToString(String[] path, int length) {\n    // nocommit .... too anal?  shouldn't we allow drill\n    // down on just dim, to get all docs that have that\n    // dim...?\n    /*\n    if (path.length < 2) {\n      throw new IllegalArgumentException(\"path length must be > 0 (dim=\" + path[0] + \")\");\n    }\n    */\n    if (length == 0) {\n      return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<length;i++) {\n      String s = path[i];\n      int numChars = s.length();\n      for(int j=0;j<numChars;j++) {\n        char ch = s.charAt(j);\n        if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {\n          sb.append(ESCAPE_CHAR);\n        }\n        sb.append(ch);\n      }\n      sb.append(DELIM_CHAR);\n    }\n\n    // Trim off last DELIM_CHAR:\n    sb.setLength(sb.length()-1);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6e499df4729e7162d5b39a70b0142e3186a029f","date":1385554050,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#pathToString(String[],int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#pathToString(String[],int).mjava","sourceNew":"  /** Turns the first {@code} length elements of {@code\n   * path} into an encoded string. */\n  public static String pathToString(String[] path, int length) {\n    // nocommit .... too anal?  shouldn't we allow drill\n    // down on just dim, to get all docs that have that\n    // dim...?\n    /*\n    if (path.length < 2) {\n      throw new IllegalArgumentException(\"path length must be > 0 (dim=\" + path[0] + \")\");\n    }\n    */\n    if (length == 0) {\n      return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<length;i++) {\n      String s = path[i];\n      int numChars = s.length();\n      for(int j=0;j<numChars;j++) {\n        char ch = s.charAt(j);\n        if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {\n          sb.append(ESCAPE_CHAR);\n        }\n        sb.append(ch);\n      }\n      sb.append(DELIM_CHAR);\n    }\n\n    // Trim off last DELIM_CHAR:\n    sb.setLength(sb.length()-1);\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String pathToString(String[] path, int length) {\n    // nocommit .... too anal?  shouldn't we allow drill\n    // down on just dim, to get all docs that have that\n    // dim...?\n    /*\n    if (path.length < 2) {\n      throw new IllegalArgumentException(\"path length must be > 0 (dim=\" + path[0] + \")\");\n    }\n    */\n    if (length == 0) {\n      return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<length;i++) {\n      String s = path[i];\n      int numChars = s.length();\n      for(int j=0;j<numChars;j++) {\n        char ch = s.charAt(j);\n        if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {\n          sb.append(ESCAPE_CHAR);\n        }\n        sb.append(ch);\n      }\n      sb.append(DELIM_CHAR);\n    }\n\n    // Trim off last DELIM_CHAR:\n    sb.setLength(sb.length()-1);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bbe9946d3cd818d329255e4c325597ac3480503e","date":1385580921,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#pathToString(String[],int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#pathToString(String[],int).mjava","sourceNew":"  /** Turns the first {@code} length elements of {@code\n   * path} into an encoded string. */\n  public static String pathToString(String[] path, int length) {\n    // nocommit .... too anal?  shouldn't we allow drill\n    // down on just dim, to get all docs that have that\n    // dim...?\n    /*\n    if (path.length < 2) {\n      throw new IllegalArgumentException(\"path length must be > 0 (dim=\" + path[0] + \")\");\n    }\n    */\n    if (length == 0) {\n      return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<length;i++) {\n      String s = path[i];\n      if (s.length() == 0) {\n        throw new IllegalArgumentException(\"each path component must have length > 0 (got: \\\"\\\")\");\n      }\n      int numChars = s.length();\n      for(int j=0;j<numChars;j++) {\n        char ch = s.charAt(j);\n        if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {\n          sb.append(ESCAPE_CHAR);\n        }\n        sb.append(ch);\n      }\n      sb.append(DELIM_CHAR);\n    }\n\n    // Trim off last DELIM_CHAR:\n    sb.setLength(sb.length()-1);\n    return sb.toString();\n  }\n\n","sourceOld":"  /** Turns the first {@code} length elements of {@code\n   * path} into an encoded string. */\n  public static String pathToString(String[] path, int length) {\n    // nocommit .... too anal?  shouldn't we allow drill\n    // down on just dim, to get all docs that have that\n    // dim...?\n    /*\n    if (path.length < 2) {\n      throw new IllegalArgumentException(\"path length must be > 0 (dim=\" + path[0] + \")\");\n    }\n    */\n    if (length == 0) {\n      return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<length;i++) {\n      String s = path[i];\n      int numChars = s.length();\n      for(int j=0;j<numChars;j++) {\n        char ch = s.charAt(j);\n        if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {\n          sb.append(ESCAPE_CHAR);\n        }\n        sb.append(ch);\n      }\n      sb.append(DELIM_CHAR);\n    }\n\n    // Trim off last DELIM_CHAR:\n    sb.setLength(sb.length()-1);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#pathToString(String[],int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#pathToString(String[],int).mjava","sourceNew":"  /** Turns the first {@code} length elements of {@code\n   * path} into an encoded string. */\n  public static String pathToString(String[] path, int length) {\n    if (length == 0) {\n      return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<length;i++) {\n      String s = path[i];\n      if (s.length() == 0) {\n        throw new IllegalArgumentException(\"each path component must have length > 0 (got: \\\"\\\")\");\n      }\n      int numChars = s.length();\n      for(int j=0;j<numChars;j++) {\n        char ch = s.charAt(j);\n        if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {\n          sb.append(ESCAPE_CHAR);\n        }\n        sb.append(ch);\n      }\n      sb.append(DELIM_CHAR);\n    }\n\n    // Trim off last DELIM_CHAR:\n    sb.setLength(sb.length()-1);\n    return sb.toString();\n  }\n\n","sourceOld":"  /** Turns the first {@code} length elements of {@code\n   * path} into an encoded string. */\n  public static String pathToString(String[] path, int length) {\n    // nocommit .... too anal?  shouldn't we allow drill\n    // down on just dim, to get all docs that have that\n    // dim...?\n    /*\n    if (path.length < 2) {\n      throw new IllegalArgumentException(\"path length must be > 0 (dim=\" + path[0] + \")\");\n    }\n    */\n    if (length == 0) {\n      return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<length;i++) {\n      String s = path[i];\n      if (s.length() == 0) {\n        throw new IllegalArgumentException(\"each path component must have length > 0 (got: \\\"\\\")\");\n      }\n      int numChars = s.length();\n      for(int j=0;j<numChars;j++) {\n        char ch = s.charAt(j);\n        if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {\n          sb.append(ESCAPE_CHAR);\n        }\n        sb.append(ch);\n      }\n      sb.append(DELIM_CHAR);\n    }\n\n    // Trim off last DELIM_CHAR:\n    sb.setLength(sb.length()-1);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a6c8fcce6eb5b976a26c9543c230548f7aa13e1","date":1388472624,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#pathToString(String[],int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#pathToString(String[],int).mjava","sourceNew":"  /** Turns the first {@code length} elements of {@code\n   * path} into an encoded string. */\n  public static String pathToString(String[] path, int length) {\n    if (length == 0) {\n      return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<length;i++) {\n      String s = path[i];\n      if (s.length() == 0) {\n        throw new IllegalArgumentException(\"each path component must have length > 0 (got: \\\"\\\")\");\n      }\n      int numChars = s.length();\n      for(int j=0;j<numChars;j++) {\n        char ch = s.charAt(j);\n        if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {\n          sb.append(ESCAPE_CHAR);\n        }\n        sb.append(ch);\n      }\n      sb.append(DELIM_CHAR);\n    }\n\n    // Trim off last DELIM_CHAR:\n    sb.setLength(sb.length()-1);\n    return sb.toString();\n  }\n\n","sourceOld":"  /** Turns the first {@code} length elements of {@code\n   * path} into an encoded string. */\n  public static String pathToString(String[] path, int length) {\n    if (length == 0) {\n      return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<length;i++) {\n      String s = path[i];\n      if (s.length() == 0) {\n        throw new IllegalArgumentException(\"each path component must have length > 0 (got: \\\"\\\")\");\n      }\n      int numChars = s.length();\n      for(int j=0;j<numChars;j++) {\n        char ch = s.charAt(j);\n        if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {\n          sb.append(ESCAPE_CHAR);\n        }\n        sb.append(ch);\n      }\n      sb.append(DELIM_CHAR);\n    }\n\n    // Trim off last DELIM_CHAR:\n    sb.setLength(sb.length()-1);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#pathToString(String[],int).mjava","pathOld":"/dev/null","sourceNew":"  /** Turns the first {@code length} elements of {@code\n   * path} into an encoded string. */\n  public static String pathToString(String[] path, int length) {\n    if (length == 0) {\n      return \"\";\n    }\n    StringBuilder sb = new StringBuilder();\n    for(int i=0;i<length;i++) {\n      String s = path[i];\n      if (s.length() == 0) {\n        throw new IllegalArgumentException(\"each path component must have length > 0 (got: \\\"\\\")\");\n      }\n      int numChars = s.length();\n      for(int j=0;j<numChars;j++) {\n        char ch = s.charAt(j);\n        if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {\n          sb.append(ESCAPE_CHAR);\n        }\n        sb.append(ch);\n      }\n      sb.append(DELIM_CHAR);\n    }\n\n    // Trim off last DELIM_CHAR:\n    sb.setLength(sb.length()-1);\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6e499df4729e7162d5b39a70b0142e3186a029f":["21d36d0db865f7b84026b447bec653469a6e66df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["bbe9946d3cd818d329255e4c325597ac3480503e"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8a6c8fcce6eb5b976a26c9543c230548f7aa13e1"],"8a6c8fcce6eb5b976a26c9543c230548f7aa13e1":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"bbe9946d3cd818d329255e4c325597ac3480503e":["b6e499df4729e7162d5b39a70b0142e3186a029f"]},"commit2Childs":{"b6e499df4729e7162d5b39a70b0142e3186a029f":["bbe9946d3cd818d329255e4c325597ac3480503e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"21d36d0db865f7b84026b447bec653469a6e66df":["b6e499df4729e7162d5b39a70b0142e3186a029f"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["8a6c8fcce6eb5b976a26c9543c230548f7aa13e1"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8a6c8fcce6eb5b976a26c9543c230548f7aa13e1":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"bbe9946d3cd818d329255e4c325597ac3480503e":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}