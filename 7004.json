{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery.RandomFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","commits":[{"id":"06a4493f0c732d2928d1a4f773f15d19434aa8ba","date":1405856163,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery.RandomFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {\n      int maxDoc = context.reader().maxDoc();\n      FixedBitSet bits = new FixedBitSet(maxDoc);\n      Random random = new Random(seed ^ context.docBase);\n      for(int docID=0;docID<maxDoc;docID++) {\n        if (random.nextFloat() <= density && (acceptDocs == null || acceptDocs.get(docID))) {\n          bits.set(docID);\n          //System.out.println(\"  acc id=\" + idSource.getInt(docID) + \" docID=\" + docID);\n        }\n      }\n\n      return bits;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery.RandomFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":null,"sourceOld":"    @Override\n    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {\n      int maxDoc = context.reader().maxDoc();\n      FixedBitSet bits = new FixedBitSet(maxDoc);\n      Random random = new Random(seed ^ context.docBase);\n      for(int docID=0;docID<maxDoc;docID++) {\n        if (random.nextFloat() <= density && (acceptDocs == null || acceptDocs.get(docID))) {\n          bits.set(docID);\n          //System.out.println(\"  acc id=\" + idSource.getInt(docID) + \" docID=\" + docID);\n        }\n      }\n\n      return bits;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06a4493f0c732d2928d1a4f773f15d19434aa8ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["06a4493f0c732d2928d1a4f773f15d19434aa8ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06a4493f0c732d2928d1a4f773f15d19434aa8ba"],"06a4493f0c732d2928d1a4f773f15d19434aa8ba":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}