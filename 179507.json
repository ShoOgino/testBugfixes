{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple2().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple2().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple2().mjava","sourceNew":"  public void testSimple2() throws Exception {\n    assumeTrue(\"Broken scoring: LUCENE-3723\", \n        searcher.getSimilarity() instanceof TFIDFSimilarity);\n    SpanQuery q1 = new SpanTermQuery(new Term(\"gender\", \"female\"));\n    SpanQuery q2 = new SpanTermQuery(new Term(\"last\", \"smith\"));\n    SpanQuery q = new SpanNearQuery(new SpanQuery[]\n      { q1, new FieldMaskingSpanQuery(q2, \"gender\")}, -1, false );\n    check(q, new int[] { 2, 4 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q1, \"id\"),\n        new FieldMaskingSpanQuery(q2, \"id\") }, -1, false );\n    check(q, new int[] { 2, 4 });\n  }\n\n","sourceOld":"  public void testSimple2() throws Exception {\n    assumeTrue(\"Broken scoring: LUCENE-3723\", \n        searcher.getSimilarity() instanceof TFIDFSimilarity);\n    SpanQuery q1 = new SpanTermQuery(new Term(\"gender\", \"female\"));\n    SpanQuery q2 = new SpanTermQuery(new Term(\"last\", \"smith\"));\n    SpanQuery q = new SpanNearQuery(new SpanQuery[]\n      { q1, new FieldMaskingSpanQuery(q2, \"gender\")}, -1, false );\n    check(q, new int[] { 2, 4 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q1, \"id\"),\n        new FieldMaskingSpanQuery(q2, \"id\") }, -1, false );\n    check(q, new int[] { 2, 4 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"485545da3b4429d6f138b4baac573a97820ee93b","date":1433876557,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple2().mjava","sourceNew":"  public void testSimple2() throws Exception {\n    assumeTrue(\"Broken scoring: LUCENE-3723\", \n        searcher.getSimilarity(true) instanceof TFIDFSimilarity);\n    SpanQuery q1 = new SpanTermQuery(new Term(\"gender\", \"female\"));\n    SpanQuery q2 = new SpanTermQuery(new Term(\"last\", \"smith\"));\n    SpanQuery q = new SpanNearQuery(new SpanQuery[]\n      { q1, new FieldMaskingSpanQuery(q2, \"gender\")}, -1, false );\n    check(q, new int[] { 2, 4 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q1, \"id\"),\n        new FieldMaskingSpanQuery(q2, \"id\") }, -1, false );\n    check(q, new int[] { 2, 4 });\n  }\n\n","sourceOld":"  public void testSimple2() throws Exception {\n    assumeTrue(\"Broken scoring: LUCENE-3723\", \n        searcher.getSimilarity() instanceof TFIDFSimilarity);\n    SpanQuery q1 = new SpanTermQuery(new Term(\"gender\", \"female\"));\n    SpanQuery q2 = new SpanTermQuery(new Term(\"last\", \"smith\"));\n    SpanQuery q = new SpanNearQuery(new SpanQuery[]\n      { q1, new FieldMaskingSpanQuery(q2, \"gender\")}, -1, false );\n    check(q, new int[] { 2, 4 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q1, \"id\"),\n        new FieldMaskingSpanQuery(q2, \"id\") }, -1, false );\n    check(q, new int[] { 2, 4 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple2().mjava","sourceNew":"  public void testSimple2() throws Exception {\n    assumeTrue(\"Broken scoring: LUCENE-3723\", \n        searcher.getSimilarity() instanceof TFIDFSimilarity);\n    SpanQuery q1 = new SpanTermQuery(new Term(\"gender\", \"female\"));\n    SpanQuery q2 = new SpanTermQuery(new Term(\"last\", \"smith\"));\n    SpanQuery q = new SpanNearQuery(new SpanQuery[]\n      { q1, new FieldMaskingSpanQuery(q2, \"gender\")}, -1, false );\n    check(q, new int[] { 2, 4 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q1, \"id\"),\n        new FieldMaskingSpanQuery(q2, \"id\") }, -1, false );\n    check(q, new int[] { 2, 4 });\n  }\n\n","sourceOld":"  public void testSimple2() throws Exception {\n    assumeTrue(\"Broken scoring: LUCENE-3723\", \n        searcher.getSimilarity(true) instanceof TFIDFSimilarity);\n    SpanQuery q1 = new SpanTermQuery(new Term(\"gender\", \"female\"));\n    SpanQuery q2 = new SpanTermQuery(new Term(\"last\", \"smith\"));\n    SpanQuery q = new SpanNearQuery(new SpanQuery[]\n      { q1, new FieldMaskingSpanQuery(q2, \"gender\")}, -1, false );\n    check(q, new int[] { 2, 4 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q1, \"id\"),\n        new FieldMaskingSpanQuery(q2, \"id\") }, -1, false );\n    check(q, new int[] { 2, 4 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/spans/TestFieldMaskingSpanQuery#testSimple2().mjava","sourceNew":"  public void testSimple2() throws Exception {\n    assumeTrue(\"Broken scoring: LUCENE-3723\", \n        searcher.getSimilarity() instanceof TFIDFSimilarity);\n    SpanQuery q1 = new SpanTermQuery(new Term(\"gender\", \"female\"));\n    SpanQuery q2 = new SpanTermQuery(new Term(\"last\", \"smith\"));\n    SpanQuery q = new SpanNearQuery(new SpanQuery[]\n      { q1, new FieldMaskingSpanQuery(q2, \"gender\")}, -1, false );\n    check(q, new int[] { 2, 4 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q1, \"id\"),\n        new FieldMaskingSpanQuery(q2, \"id\") }, -1, false );\n    check(q, new int[] { 2, 4 });\n  }\n\n","sourceOld":"  public void testSimple2() throws Exception {\n    assumeTrue(\"Broken scoring: LUCENE-3723\", \n        searcher.getSimilarity(true) instanceof TFIDFSimilarity);\n    SpanQuery q1 = new SpanTermQuery(new Term(\"gender\", \"female\"));\n    SpanQuery q2 = new SpanTermQuery(new Term(\"last\", \"smith\"));\n    SpanQuery q = new SpanNearQuery(new SpanQuery[]\n      { q1, new FieldMaskingSpanQuery(q2, \"gender\")}, -1, false );\n    check(q, new int[] { 2, 4 });\n    q = new SpanNearQuery(new SpanQuery[]\n      { new FieldMaskingSpanQuery(q1, \"id\"),\n        new FieldMaskingSpanQuery(q2, \"id\") }, -1, false );\n    check(q, new int[] { 2, 4 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["485545da3b4429d6f138b4baac573a97820ee93b","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["485545da3b4429d6f138b4baac573a97820ee93b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"485545da3b4429d6f138b4baac573a97820ee93b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["485545da3b4429d6f138b4baac573a97820ee93b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"485545da3b4429d6f138b4baac573a97820ee93b":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}