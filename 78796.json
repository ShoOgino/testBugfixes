{"path":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MRUnitBase#setupMorphline(String,String).mjava","commits":[{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MRUnitBase#setupMorphline(String,String).mjava","pathOld":"solr/contrib/solr-mr/src/test/org/apache/solr/hadoop/MRUnitBase#setupMorphline(String,String).mjava","sourceNew":"  public static void setupMorphline(String tempDir, String file) throws IOException {\n    String morphlineText = FileUtils.readFileToString(new File(RESOURCES_DIR + \"/\" + file + \".conf\"), \"UTF-8\");\n    morphlineText = morphlineText.replaceAll(\"RESOURCES_DIR\", new File(tempDir).getAbsolutePath());\n    morphlineText = morphlineText.replaceAll(\"\\\\$\\\\{SOLR_LOCATOR\\\\}\",  \"{ collection : collection1 }\");\n    \n    FileUtils.writeStringToFile(new File(tempDir + \"/\" + file + \".conf\"), morphlineText, \"UTF-8\");\n  }\n\n","sourceOld":"  public static void setupMorphline(String tempDir, String file) throws IOException {\n    String morphlineText = FileUtils.readFileToString(new File(RESOURCES_DIR + \"/\" + file + \".conf\"), \"UTF-8\");\n    morphlineText = morphlineText.replaceAll(\"RESOURCES_DIR\", new File(tempDir).getAbsolutePath());\n    morphlineText = morphlineText.replaceAll(\"\\\\$\\\\{SOLR_LOCATOR\\\\}\",  \"{ collection : collection1 }\");\n    \n    FileUtils.writeStringToFile(new File(tempDir + \"/\" + file + \".conf\"), morphlineText, \"UTF-8\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MRUnitBase#setupMorphline(String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static void setupMorphline(String tempDir, String file) throws IOException {\n    String morphlineText = FileUtils.readFileToString(new File(RESOURCES_DIR + \"/\" + file + \".conf\"), \"UTF-8\");\n    morphlineText = morphlineText.replaceAll(\"RESOURCES_DIR\", new File(tempDir).getAbsolutePath());\n    morphlineText = morphlineText.replaceAll(\"\\\\$\\\\{SOLR_LOCATOR\\\\}\",  \"{ collection : collection1 }\");\n    \n    FileUtils.writeStringToFile(new File(tempDir + \"/\" + file + \".conf\"), morphlineText, \"UTF-8\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96fdd7189254bc9698a673fdf4e2b0e97e993ede","date":1387480427,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setupMorphline(String,String,boolean).mjava","pathOld":"solr/contrib/map-reduce/src/test/org/apache/solr/hadoop/MRUnitBase#setupMorphline(String,String).mjava","sourceNew":"  public static void setupMorphline(String tempDir, String file, boolean replaceSolrLocator) throws IOException {\n    String morphlineText = FileUtils.readFileToString(new File(RESOURCES_DIR + \"/\" + file + \".conf\"), \"UTF-8\");\n    morphlineText = morphlineText.replaceAll(\"RESOURCES_DIR\", new File(tempDir).getAbsolutePath());\n    if (replaceSolrLocator) {\n      morphlineText = morphlineText.replaceAll(\"\\\\$\\\\{SOLR_LOCATOR\\\\}\",\n          \"{ collection : collection1 }\");\n    }\n    new File(tempDir + \"/\" + file + \".conf\").getParentFile().mkdirs();\n    FileUtils.writeStringToFile(new File(tempDir + \"/\" + file + \".conf\"), morphlineText, \"UTF-8\");\n  }\n\n","sourceOld":"  public static void setupMorphline(String tempDir, String file) throws IOException {\n    String morphlineText = FileUtils.readFileToString(new File(RESOURCES_DIR + \"/\" + file + \".conf\"), \"UTF-8\");\n    morphlineText = morphlineText.replaceAll(\"RESOURCES_DIR\", new File(tempDir).getAbsolutePath());\n    morphlineText = morphlineText.replaceAll(\"\\\\$\\\\{SOLR_LOCATOR\\\\}\",  \"{ collection : collection1 }\");\n    \n    FileUtils.writeStringToFile(new File(tempDir + \"/\" + file + \".conf\"), morphlineText, \"UTF-8\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"96fdd7189254bc9698a673fdf4e2b0e97e993ede":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["96fdd7189254bc9698a673fdf4e2b0e97e993ede"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","96fdd7189254bc9698a673fdf4e2b0e97e993ede"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70f91c8322fbffe3a3a897ef20ea19119cac10cd","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"96fdd7189254bc9698a673fdf4e2b0e97e993ede":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}