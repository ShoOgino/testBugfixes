{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/RequestAuthenticator#authenticateAccount(GDataRequest,AccountRole).mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/RequestAuthenticator#authenticateAccount(GDataRequest,AccountRole).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/RequestAuthenticator#authenticateAccount(GDataRequest,AccountRole).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.server.authentication.GDataHttpAuthenticator#authenticateAccount(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.data.GDataAccount.AccountRole)\n     */\n    public boolean authenticateAccount(GDataRequest request, AccountRole role) {\n        String clientIp = request.getRemoteAddress();\n        if (LOG.isDebugEnabled())\n            LOG\n                    .debug(\"Authenticating Account for GDataRequest -- modifying entries -- Role: \"\n                            + role + \"; ClientIp: \" + clientIp);\n\n        AuthenticationController controller = GDataServerRegistry.getRegistry()\n                .lookup(AuthenticationController.class,\n                        ComponentType.AUTHENTICATIONCONTROLLER);\n        ServiceFactory factory = GDataServerRegistry.getRegistry().lookup(\n                ServiceFactory.class, ComponentType.SERVICEFACTORY);\n        AdminService adminService = factory.getAdminService();\n        GDataAccount account;\n        try {\n            account = adminService.getFeedOwningAccount(request.getFeedId());\n            String token = getTokenFromRequest(request.getHttpServletRequest());\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Got Token: \" + token + \"; for requesting account: \"\n                        + account);\n            if (account != null && token != null)\n                return controller.authenticateToken(token, clientIp,\n                        AccountRole.ENTRYAMINISTRATOR, account.getName());\n\n        } catch (ServiceException e) {\n            LOG.error(\"can get GDataAccount for feedID -- \"\n                    + request.getFeedId(), e);\n            throw new AuthenticatorException(\" Service exception occured\", e);\n\n        }finally{\n        \n            if(adminService!=null)\n                adminService.close();\n        \n        }\n\n        return false;\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.server.authentication.GDataHttpAuthenticator#authenticateAccount(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.data.GDataAccount.AccountRole)\n     */\n    public boolean authenticateAccount(GDataRequest request, AccountRole role) {\n        String clientIp = request.getRemoteAddress();\n        if (LOG.isDebugEnabled())\n            LOG\n                    .debug(\"Authenticating Account for GDataRequest -- modifying entries -- Role: \"\n                            + role + \"; ClientIp: \" + clientIp);\n\n        AuthenticationController controller = GDataServerRegistry.getRegistry()\n                .lookup(AuthenticationController.class,\n                        ComponentType.AUTHENTICATIONCONTROLLER);\n        ServiceFactory factory = GDataServerRegistry.getRegistry().lookup(\n                ServiceFactory.class, ComponentType.SERVICEFACTORY);\n        AdminService adminService = factory.getAdminService();\n        GDataAccount account;\n        try {\n            account = adminService.getFeedOwningAccount(request.getFeedId());\n            String token = getTokenFromRequest(request.getHttpServletRequest());\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Got Token: \" + token + \"; for requesting account: \"\n                        + account);\n            if (account != null && token != null)\n                return controller.authenticateToken(token, clientIp,\n                        AccountRole.ENTRYAMINISTRATOR, account.getName());\n\n        } catch (ServiceException e) {\n            LOG.error(\"can get GDataAccount for feedID -- \"\n                    + request.getFeedId(), e);\n            throw new AuthenticatorException(\" Service exception occured\", e);\n\n        }finally{\n        \n            if(adminService!=null)\n                adminService.close();\n        \n        }\n\n        return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/servlet/handler/RequestAuthenticator#authenticateAccount(GDataRequest,AccountRole).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/RequestAuthenticator#authenticateAccount(GDataRequest,AccountRole).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.server.authentication.GDataHttpAuthenticator#authenticateAccount(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.data.GDataAccount.AccountRole)\n     */\n    public boolean authenticateAccount(GDataRequest request, AccountRole role) {\n        String clientIp = request.getRemoteAddress();\n        if (LOG.isDebugEnabled())\n            LOG\n                    .debug(\"Authenticating Account for GDataRequest -- modifying entries -- Role: \"\n                            + role + \"; ClientIp: \" + clientIp);\n\n        AuthenticationController controller = GDataServerRegistry.getRegistry()\n                .lookup(AuthenticationController.class,\n                        ComponentType.AUTHENTICATIONCONTROLLER);\n        ServiceFactory factory = GDataServerRegistry.getRegistry().lookup(\n                ServiceFactory.class, ComponentType.SERVICEFACTORY);\n        AdminService adminService = factory.getAdminService();\n        GDataAccount account;\n        try {\n            account = adminService.getFeedOwningAccount(request.getFeedId());\n            String token = getTokenFromRequest(request.getHttpServletRequest());\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Got Token: \" + token + \"; for requesting account: \"\n                        + account);\n            if (account != null && token != null)\n                return controller.authenticateToken(token, clientIp,\n                        AccountRole.ENTRYAMINISTRATOR, account.getName());\n\n        } catch (ServiceException e) {\n            LOG.error(\"can get GDataAccount for feedID -- \"\n                    + request.getFeedId(), e);\n            throw new AuthenticatorException(\" Service exception occured\", e);\n\n        }finally{\n        \n            if(adminService!=null)\n                adminService.close();\n        \n        }\n\n        return false;\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.server.authentication.GDataHttpAuthenticator#authenticateAccount(org.apache.lucene.gdata.server.GDataRequest,\n     *      org.apache.lucene.gdata.data.GDataAccount.AccountRole)\n     */\n    public boolean authenticateAccount(GDataRequest request, AccountRole role) {\n        String clientIp = request.getRemoteAddress();\n        if (LOG.isDebugEnabled())\n            LOG\n                    .debug(\"Authenticating Account for GDataRequest -- modifying entries -- Role: \"\n                            + role + \"; ClientIp: \" + clientIp);\n\n        AuthenticationController controller = GDataServerRegistry.getRegistry()\n                .lookup(AuthenticationController.class,\n                        ComponentType.AUTHENTICATIONCONTROLLER);\n        ServiceFactory factory = GDataServerRegistry.getRegistry().lookup(\n                ServiceFactory.class, ComponentType.SERVICEFACTORY);\n        AdminService adminService = factory.getAdminService();\n        GDataAccount account;\n        try {\n            account = adminService.getFeedOwningAccount(request.getFeedId());\n            String token = getTokenFromRequest(request.getHttpServletRequest());\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Got Token: \" + token + \"; for requesting account: \"\n                        + account);\n            if (account != null && token != null)\n                return controller.authenticateToken(token, clientIp,\n                        AccountRole.ENTRYAMINISTRATOR, account.getName());\n\n        } catch (ServiceException e) {\n            LOG.error(\"can get GDataAccount for feedID -- \"\n                    + request.getFeedId(), e);\n            throw new AuthenticatorException(\" Service exception occured\", e);\n\n        }finally{\n        \n            if(adminService!=null)\n                adminService.close();\n        \n        }\n\n        return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}