{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CreateIndexTaskTest#testInfoStream_SystemOutErr().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CreateIndexTaskTest#testInfoStream_SystemOutErr().mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CreateIndexTaskTest#testInfoStream_SystemOutErr().mjava","sourceNew":"  public void testInfoStream_SystemOutErr() throws Exception {\n \n    PrintStream curOut = System.out;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemOut\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setOut(curOut);\n    }\n    \n    PrintStream curErr = System.err;\n    baos.reset();\n    System.setErr(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemErr\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setErr(curErr);\n    }\n\n  }\n\n","sourceOld":"  public void testInfoStream_SystemOutErr() throws Exception {\n \n    PrintStream curOut = System.out;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemOut\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setOut(curOut);\n    }\n    \n    PrintStream curErr = System.err;\n    baos.reset();\n    System.setErr(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemErr\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setErr(curErr);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c70cdb81dc660d90f9d0664dd91b473b7e66563","date":1341679310,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CreateIndexTaskTest#testInfoStream_SystemOutErr().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CreateIndexTaskTest#testInfoStream_SystemOutErr().mjava","sourceNew":"  public void testInfoStream_SystemOutErr() throws Exception {\n \n    PrintStream curOut = System.out;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(baos, false, Charset.defaultCharset().name()));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemOut\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setOut(curOut);\n    }\n    \n    PrintStream curErr = System.err;\n    baos.reset();\n    System.setErr(new PrintStream(baos, false, Charset.defaultCharset().name()));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemErr\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setErr(curErr);\n    }\n\n  }\n\n","sourceOld":"  public void testInfoStream_SystemOutErr() throws Exception {\n \n    PrintStream curOut = System.out;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemOut\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setOut(curOut);\n    }\n    \n    PrintStream curErr = System.err;\n    baos.reset();\n    System.setErr(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemErr\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setErr(curErr);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CreateIndexTaskTest#testInfoStream_SystemOutErr().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CreateIndexTaskTest#testInfoStream_SystemOutErr().mjava","sourceNew":"  public void testInfoStream_SystemOutErr() throws Exception {\n \n    PrintStream curOut = System.out;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(baos, false, Charset.defaultCharset().name()));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemOut\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setOut(curOut);\n    }\n    \n    PrintStream curErr = System.err;\n    baos.reset();\n    System.setErr(new PrintStream(baos, false, Charset.defaultCharset().name()));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemErr\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setErr(curErr);\n    }\n\n  }\n\n","sourceOld":"  public void testInfoStream_SystemOutErr() throws Exception {\n \n    PrintStream curOut = System.out;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemOut\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setOut(curOut);\n    }\n    \n    PrintStream curErr = System.err;\n    baos.reset();\n    System.setErr(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemErr\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setErr(curErr);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CreateIndexTaskTest#testInfoStream_SystemOutErr().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CreateIndexTaskTest#testInfoStream_SystemOutErr().mjava","sourceNew":"  public void testInfoStream_SystemOutErr() throws Exception {\n \n    PrintStream curOut = System.out;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(baos, false, Charset.defaultCharset().name()));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemOut\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setOut(curOut);\n    }\n    \n    PrintStream curErr = System.err;\n    baos.reset();\n    System.setErr(new PrintStream(baos, false, Charset.defaultCharset().name()));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemErr\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setErr(curErr);\n    }\n\n  }\n\n","sourceOld":"  public void testInfoStream_SystemOutErr() throws Exception {\n \n    PrintStream curOut = System.out;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemOut\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setOut(curOut);\n    }\n    \n    PrintStream curErr = System.err;\n    baos.reset();\n    System.setErr(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemErr\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setErr(curErr);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CreateIndexTaskTest#testInfoStream_SystemOutErr().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CreateIndexTaskTest#testInfoStream_SystemOutErr().mjava","sourceNew":"  public void testInfoStream_SystemOutErr() throws Exception {\n \n    PrintStream curOut = System.out;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(baos, false, Charset.defaultCharset().name()));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemOut\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setOut(curOut);\n    }\n    \n    PrintStream curErr = System.err;\n    baos.reset();\n    System.setErr(new PrintStream(baos, false, Charset.defaultCharset().name()));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemErr\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setErr(curErr);\n    }\n\n  }\n\n","sourceOld":"  public void testInfoStream_SystemOutErr() throws Exception {\n \n    PrintStream curOut = System.out;\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    System.setOut(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemOut\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setOut(curOut);\n    }\n    \n    PrintStream curErr = System.err;\n    baos.reset();\n    System.setErr(new PrintStream(baos));\n    try {\n      PerfRunData runData = createPerfRunData(\"SystemErr\");\n      CreateIndexTask cit = new CreateIndexTask(runData);\n      cit.doLogic();\n      new CloseIndexTask(runData).doLogic();\n      assertTrue(baos.size() > 0);\n    } finally {\n      System.setErr(curErr);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2acf500f78aa12b92e371fd89c719291986b6b90":["b89678825b68eccaf09e6ab71675fc0b0af1e099","9c70cdb81dc660d90f9d0664dd91b473b7e66563"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2acf500f78aa12b92e371fd89c719291986b6b90"],"9c70cdb81dc660d90f9d0664dd91b473b7e66563":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"46d8ada1fff8d18cb197c38c7983225162599948":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2acf500f78aa12b92e371fd89c719291986b6b90","9c70cdb81dc660d90f9d0664dd91b473b7e66563","46d8ada1fff8d18cb197c38c7983225162599948"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2acf500f78aa12b92e371fd89c719291986b6b90":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"9c70cdb81dc660d90f9d0664dd91b473b7e66563":["2acf500f78aa12b92e371fd89c719291986b6b90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}