{"path":"lucene/sandbox/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleDisjoint().mjava","commits":[{"id":"9feee35369998c08f5168e0808e67e09857d5bac","date":1544618795,"type":0,"author":"iverase","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleDisjoint().mjava","pathOld":"/dev/null","sourceNew":"  public void testTriangleDisjoint() {\n    Rectangle rectangle = new Rectangle(0, 1, 0, 1);\n    Rectangle2D rectangle2D = Rectangle2D.create(rectangle);\n    int ax = GeoEncodingUtils.encodeLongitude(4);\n    int ay = GeoEncodingUtils.encodeLatitude(4);\n    int bx = GeoEncodingUtils.encodeLongitude(5);\n    int by = GeoEncodingUtils.encodeLatitude(5);\n    int cx = GeoEncodingUtils.encodeLongitude(5);\n    int cy = GeoEncodingUtils.encodeLatitude(4);\n    assertFalse(rectangle2D.intersectsTriangle(ax, ay, bx, by , cx, cy));\n    assertFalse(rectangle2D.containsTriangle(ax, ay, bx, by , cx, cy));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3","date":1576052211,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleDisjoint().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleDisjoint().mjava","sourceNew":"  public void testTriangleDisjoint() {\n    Rectangle rectangle = new Rectangle(0, 1, 0, 1);\n    Rectangle2D rectangle2D = Rectangle2D.create(rectangle);\n    int ax = GeoEncodingUtils.encodeLongitude(4);\n    int ay = GeoEncodingUtils.encodeLatitude(4);\n    int bx = GeoEncodingUtils.encodeLongitude(5);\n    int by = GeoEncodingUtils.encodeLatitude(5);\n    int cx = GeoEncodingUtils.encodeLongitude(5);\n    int cy = GeoEncodingUtils.encodeLatitude(4);\n    assertFalse(rectangle2D.intersectsTriangle(ax, ay, bx, by , cx, cy));\n    assertFalse(rectangle2D.containsTriangle(ax, ay, bx, by , cx, cy));\n    assertEquals(Component2D.WithinRelation.DISJOINT, rectangle2D.withinTriangle(ax, ay, true, bx, by , true, cx, cy, true));\n  }\n\n","sourceOld":"  public void testTriangleDisjoint() {\n    Rectangle rectangle = new Rectangle(0, 1, 0, 1);\n    Rectangle2D rectangle2D = Rectangle2D.create(rectangle);\n    int ax = GeoEncodingUtils.encodeLongitude(4);\n    int ay = GeoEncodingUtils.encodeLatitude(4);\n    int bx = GeoEncodingUtils.encodeLongitude(5);\n    int by = GeoEncodingUtils.encodeLatitude(5);\n    int cx = GeoEncodingUtils.encodeLongitude(5);\n    int cy = GeoEncodingUtils.encodeLatitude(4);\n    assertFalse(rectangle2D.intersectsTriangle(ax, ay, bx, by , cx, cy));\n    assertFalse(rectangle2D.containsTriangle(ax, ay, bx, by , cx, cy));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab","date":1576073026,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleDisjoint().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleDisjoint().mjava","sourceNew":"  public void testTriangleDisjoint() {\n    Rectangle rectangle = new Rectangle(0, 1, 0, 1);\n    Rectangle2D rectangle2D = Rectangle2D.create(rectangle);\n    int ax = GeoEncodingUtils.encodeLongitude(4);\n    int ay = GeoEncodingUtils.encodeLatitude(4);\n    int bx = GeoEncodingUtils.encodeLongitude(5);\n    int by = GeoEncodingUtils.encodeLatitude(5);\n    int cx = GeoEncodingUtils.encodeLongitude(5);\n    int cy = GeoEncodingUtils.encodeLatitude(4);\n    assertFalse(rectangle2D.intersectsTriangle(ax, ay, bx, by , cx, cy));\n    assertFalse(rectangle2D.containsTriangle(ax, ay, bx, by , cx, cy));\n    assertEquals(Component2D.WithinRelation.DISJOINT, rectangle2D.withinTriangle(ax, ay, true, bx, by , true, cx, cy, true));\n  }\n\n","sourceOld":"  public void testTriangleDisjoint() {\n    Rectangle rectangle = new Rectangle(0, 1, 0, 1);\n    Rectangle2D rectangle2D = Rectangle2D.create(rectangle);\n    int ax = GeoEncodingUtils.encodeLongitude(4);\n    int ay = GeoEncodingUtils.encodeLatitude(4);\n    int bx = GeoEncodingUtils.encodeLongitude(5);\n    int by = GeoEncodingUtils.encodeLatitude(5);\n    int cx = GeoEncodingUtils.encodeLongitude(5);\n    int cy = GeoEncodingUtils.encodeLatitude(4);\n    assertFalse(rectangle2D.intersectsTriangle(ax, ay, bx, by , cx, cy));\n    assertFalse(rectangle2D.containsTriangle(ax, ay, bx, by , cx, cy));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleDisjoint().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleDisjoint().mjava","sourceNew":"  public void testTriangleDisjoint() {\n    Rectangle rectangle = new Rectangle(0, 1, 0, 1);\n    Rectangle2D rectangle2D = Rectangle2D.create(rectangle);\n    int ax = GeoEncodingUtils.encodeLongitude(4);\n    int ay = GeoEncodingUtils.encodeLatitude(4);\n    int bx = GeoEncodingUtils.encodeLongitude(5);\n    int by = GeoEncodingUtils.encodeLatitude(5);\n    int cx = GeoEncodingUtils.encodeLongitude(5);\n    int cy = GeoEncodingUtils.encodeLatitude(4);\n    assertFalse(rectangle2D.intersectsTriangle(ax, ay, bx, by , cx, cy));\n    assertFalse(rectangle2D.containsTriangle(ax, ay, bx, by , cx, cy));\n    assertEquals(Component2D.WithinRelation.DISJOINT, rectangle2D.withinTriangle(ax, ay, true, bx, by , true, cx, cy, true));\n  }\n\n","sourceOld":"  public void testTriangleDisjoint() {\n    Rectangle rectangle = new Rectangle(0, 1, 0, 1);\n    Rectangle2D rectangle2D = Rectangle2D.create(rectangle);\n    int ax = GeoEncodingUtils.encodeLongitude(4);\n    int ay = GeoEncodingUtils.encodeLatitude(4);\n    int bx = GeoEncodingUtils.encodeLongitude(5);\n    int by = GeoEncodingUtils.encodeLatitude(5);\n    int cx = GeoEncodingUtils.encodeLongitude(5);\n    int cy = GeoEncodingUtils.encodeLatitude(4);\n    assertFalse(rectangle2D.intersectsTriangle(ax, ay, bx, by , cx, cy));\n    assertFalse(rectangle2D.containsTriangle(ax, ay, bx, by , cx, cy));\n    assertEquals(Component2D.WithinRelation.DISJOINT, rectangle2D.withinTriangle(ax, ay, true, bx, by , true, cx, cy, true));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9feee35369998c08f5168e0808e67e09857d5bac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab":["9feee35369998c08f5168e0808e67e09857d5bac","3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3"],"3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3":["9feee35369998c08f5168e0808e67e09857d5bac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"9feee35369998c08f5168e0808e67e09857d5bac":["6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab","3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3"],"6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9feee35369998c08f5168e0808e67e09857d5bac"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3f2d8fb73c718c3fc5600f453cc514f18ae1b8c3":["6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab","09c1e6d465800c73af60624bf9d4459a19f7940c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c6b7e01cb749c3b01e226e06085dfb1d9ed8eab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}