{"path":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,FieldInfosFormat).mjava","commits":[{"id":"d60c1bb96a28a26d197c36299f7b6c9c5da617a1","date":1522484702,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir,\n                                                      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa5e39259dfd4a68287c824d3b7e1bc9097dc895","date":1522505041,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,DocValuesFormat,FieldInfosFormat).mjava","sourceNew":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir,\n                                                      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir, DocValuesFormat dvFormat, \n      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f94c392daa8f5708186bede16c84eafad4cdd2","date":1599578873,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,FieldInfosFormat).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#writeFieldInfosGen(FieldInfos,Directory,FieldInfosFormat).mjava","sourceNew":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir,\n                                                      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90L * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","sourceOld":"  private synchronized Set<String> writeFieldInfosGen(FieldInfos fieldInfos, Directory dir,\n                                                      FieldInfosFormat infosFormat) throws IOException {\n    final long nextFieldInfosGen = info.getNextFieldInfosGen();\n    final String segmentSuffix = Long.toString(nextFieldInfosGen, Character.MAX_RADIX);\n    // we write approximately that many bytes (based on Lucene46DVF):\n    // HEADER + FOOTER: 40\n    // 90 bytes per-field (over estimating long name and attributes map)\n    final long estInfosSize = 40 + 90 * fieldInfos.size();\n    final IOContext infosContext = new IOContext(new FlushInfo(info.info.maxDoc(), estInfosSize));\n    // separately also track which files were created for this gen\n    final TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(dir);\n    infosFormat.write(trackingDir, info.info, segmentSuffix, fieldInfos, infosContext);\n    info.advanceFieldInfosGen();\n    return trackingDir.getCreatedFiles();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c9f94c392daa8f5708186bede16c84eafad4cdd2":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9f94c392daa8f5708186bede16c84eafad4cdd2"]},"commit2Childs":{"c9f94c392daa8f5708186bede16c84eafad4cdd2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["c9f94c392daa8f5708186bede16c84eafad4cdd2"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}