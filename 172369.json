{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","sourceNew":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws CorruptIndexException, IOException {\n    if (indexWriter != null) {\n      indexWriter.commit(combinedCommitData(null));\n      doClose();\n    }\n  }\n\n","sourceOld":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws CorruptIndexException, IOException {\n    if (indexWriter != null) {\n      indexWriter.commit(combinedCommitData(null));\n      doClose();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b7a1bc6030c258e47d63eff3455a2b1bbf32683","date":1339494023,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","sourceNew":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws CorruptIndexException, IOException {\n    if (!isClosed) {\n      indexWriter.commit(combinedCommitData(null));\n      doClose();\n    }\n  }\n\n","sourceOld":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws CorruptIndexException, IOException {\n    if (indexWriter != null) {\n      indexWriter.commit(combinedCommitData(null));\n      doClose();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","sourceNew":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      indexWriter.commit(combinedCommitData(null));\n      doClose();\n    }\n  }\n\n","sourceOld":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws CorruptIndexException, IOException {\n    if (!isClosed) {\n      indexWriter.commit(combinedCommitData(null));\n      doClose();\n    }\n  }\n\n","bugFix":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","sourceNew":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      indexWriter.commit(combinedCommitData(null));\n      doClose();\n    }\n  }\n\n","sourceOld":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws CorruptIndexException, IOException {\n    if (!isClosed) {\n      indexWriter.commit(combinedCommitData(null));\n      doClose();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b47e1512544568a22b82c96169d466fae8a4b79e","date":1354519309,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","sourceNew":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      indexWriter.setCommitData(combinedCommitData(indexWriter.getCommitData()));\n      indexWriter.commit();\n      doClose();\n    }\n  }\n\n","sourceOld":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      indexWriter.commit(combinedCommitData(null));\n      doClose();\n    }\n  }\n\n","bugFix":null,"bugIntro":["d8a0be2353a06d1424e3eeafc4c72455204ce92d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","sourceNew":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      indexWriter.setCommitData(combinedCommitData(indexWriter.getCommitData()));\n      indexWriter.commit();\n      doClose();\n    }\n  }\n\n","sourceOld":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      indexWriter.commit(combinedCommitData(null));\n      doClose();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8a0be2353a06d1424e3eeafc4c72455204ce92d","date":1367553170,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","sourceNew":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      commit();\n      doClose();\n    }\n  }\n\n","sourceOld":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      indexWriter.setCommitData(combinedCommitData(indexWriter.getCommitData()));\n      indexWriter.commit();\n      doClose();\n    }\n  }\n\n","bugFix":["b47e1512544568a22b82c96169d466fae8a4b79e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","sourceNew":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      commit();\n      indexWriter.shutdown();\n      doClose();\n    }\n  }\n\n","sourceOld":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      commit();\n      doClose();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#close().mjava","sourceNew":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      commit();\n      indexWriter.close();\n      doClose();\n    }\n  }\n\n","sourceOld":"  /**\n   * Frees used resources as well as closes the underlying {@link IndexWriter},\n   * which commits whatever changes made to it to the underlying\n   * {@link Directory}.\n   */\n  @Override\n  public synchronized void close() throws IOException {\n    if (!isClosed) {\n      commit();\n      indexWriter.shutdown();\n      doClose();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d8a0be2353a06d1424e3eeafc4c72455204ce92d":["b47e1512544568a22b82c96169d466fae8a4b79e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","b47e1512544568a22b82c96169d466fae8a4b79e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d8a0be2353a06d1424e3eeafc4c72455204ce92d"],"b47e1512544568a22b82c96169d466fae8a4b79e":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"d8a0be2353a06d1424e3eeafc4c72455204ce92d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8b7a1bc6030c258e47d63eff3455a2b1bbf32683"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8b7a1bc6030c258e47d63eff3455a2b1bbf32683":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"b47e1512544568a22b82c96169d466fae8a4b79e":["d8a0be2353a06d1424e3eeafc4c72455204ce92d","407687e67faf6e1f02a211ca078d8e3eed631027"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","407687e67faf6e1f02a211ca078d8e3eed631027","b47e1512544568a22b82c96169d466fae8a4b79e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}