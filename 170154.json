{"path":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","commits":[{"id":"6066dbe072ec5334ff5824f474e9d3abd1620fb7","date":1278709584,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(SegmentInfos.CURRENT_FORMAT); // write FORMAT\n    out.writeLong(++infos.version); // every write changes\n                                 // the index\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c5947ccd7ba3770dcba5a0713dbd5496678256d9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0cd8367c3d48e4b63dee1895a261d4986c716bbb","date":1279637747,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(++infos.version); // every write changes\n                                 // the index\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(SegmentInfos.CURRENT_FORMAT); // write FORMAT\n    out.writeLong(++infos.version); // every write changes\n                                 // the index\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(++infos.version); // every write changes\n                                 // the index\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c5947ccd7ba3770dcba5a0713dbd5496678256d9","date":1291744634,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(++infos.version); // every write changes\n                                 // the index\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","bugFix":["6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4bd5d0a5ac72666f0bcbd50b535d2cc70dbf584b","date":1291778725,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(++infos.version); // every write changes\n                                 // the index\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(++infos.version); // every write changes\n                                 // the index\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeLong(infos.getGlobalFieldMapVersion());\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeLong(infos.getGlobalFieldMapVersion());\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeLong(infos.getGlobalFieldMapVersion());\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeLong(infos.getGlobalFieldMapVersion());\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeLong(infos.getGlobalFieldMapVersion());\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    out.writeInt(FORMAT_CURRENT); // write FORMAT\n    out.writeLong(infos.version);\n    out.writeInt(infos.counter); // write counter\n    out.writeLong(infos.getGlobalFieldMapVersion());\n    out.writeInt(infos.size()); // write infos\n    for (SegmentInfo si : infos) {\n      si.write(out);\n    }\n    out.writeStringStringMap(infos.getUserData());\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos, IOContext context)\n          throws IOException {\n    //nocommit should this context always be flush?\n    IndexOutput out = createOutput(dir, segmentFileName, context);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultSegmentInfosWriter#writeInfos(Directory,String,SegmentInfos).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, SegmentInfos infos)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName);\n    boolean success = false;\n    try {\n      out.writeInt(FORMAT_CURRENT); // write FORMAT\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeLong(infos.getGlobalFieldMapVersion());\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        si.write(out);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeSafely(true, out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c5947ccd7ba3770dcba5a0713dbd5496678256d9":["0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"efb7a19703a037c29e30440260d393500febc1f4":["1224a4027481acce15495b03bce9b48b93b42722"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["efb7a19703a037c29e30440260d393500febc1f4"],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","c5947ccd7ba3770dcba5a0713dbd5496678256d9"],"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","1224a4027481acce15495b03bce9b48b93b42722"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["1224a4027481acce15495b03bce9b48b93b42722","efb7a19703a037c29e30440260d393500febc1f4"],"4bd5d0a5ac72666f0bcbd50b535d2cc70dbf584b":["0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["4bd5d0a5ac72666f0bcbd50b535d2cc70dbf584b","1224a4027481acce15495b03bce9b48b93b42722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["efb7a19703a037c29e30440260d393500febc1f4","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"1224a4027481acce15495b03bce9b48b93b42722":["c5947ccd7ba3770dcba5a0713dbd5496678256d9"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["d619839baa8ce5503e496b94a9e42ad6f079293f","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"c5947ccd7ba3770dcba5a0713dbd5496678256d9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","1224a4027481acce15495b03bce9b48b93b42722"],"efb7a19703a037c29e30440260d393500febc1f4":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","ddc4c914be86e34b54f70023f45a60fa7f04e929","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["c5947ccd7ba3770dcba5a0713dbd5496678256d9","5f4e87790277826a2aea119328600dfb07761f32","4bd5d0a5ac72666f0bcbd50b535d2cc70dbf584b"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"4bd5d0a5ac72666f0bcbd50b535d2cc70dbf584b":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f4e87790277826a2aea119328600dfb07761f32","6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1224a4027481acce15495b03bce9b48b93b42722":["efb7a19703a037c29e30440260d393500febc1f4","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}