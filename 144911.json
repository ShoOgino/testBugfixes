{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTest#tearDown().mjava","commits":[{"id":"82484aea958a2f87f01285b102e83b1b89b6b6ad","date":1332516764,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTest#tearDown().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#tearDown().mjava","sourceNew":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n    File dataDir = new File(home,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!AbstractSolrTestCase.recurseDelete(dataDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n    File persistedFile = new File(home,\"solr-persist.xml\");\n    assertTrue(\"Failed to delete \"+persistedFile, persistedFile.delete());\n    assertTrue(\"Failed to delete \"+solrXml, solrXml.delete());\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc542884e0501f0801d1bb1680a07323892895da","date":1332517410,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTestCase#tearDown().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/AbstractEmbeddedSolrServerTest#tearDown().mjava","sourceNew":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","sourceOld":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (cores != null)\n      cores.shutdown();\n\n    deleteAdditionalFiles();\n\n    File dataDir = new File(tempDir,\"data\");\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      log.info(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      //Removing the temporary directory which contains the index (all other files should have been removed before)\n      if (!AbstractSolrTestCase.recurseDelete(tempDir)) {\n        log.warn(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"82484aea958a2f87f01285b102e83b1b89b6b6ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fc542884e0501f0801d1bb1680a07323892895da":["82484aea958a2f87f01285b102e83b1b89b6b6ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fc542884e0501f0801d1bb1680a07323892895da"]},"commit2Childs":{"82484aea958a2f87f01285b102e83b1b89b6b6ad":["fc542884e0501f0801d1bb1680a07323892895da"],"fc542884e0501f0801d1bb1680a07323892895da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["82484aea958a2f87f01285b102e83b1b89b6b6ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}