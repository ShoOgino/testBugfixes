{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],int).mjava","commits":[{"id":"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","date":1499961129,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],int).mjava","pathOld":"/dev/null","sourceNew":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["25d862725cffd5d4d62fd002b5dc320f92c53365","25d862725cffd5d4d62fd002b5dc320f92c53365"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],int).mjava","pathOld":"/dev/null","sourceNew":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],int).mjava","pathOld":"/dev/null","sourceNew":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15ba547dfc0dd0b670e678cb3db8e5d27c694420","date":1511865512,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],Map[String,Object],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],int).mjava","sourceNew":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, Map<String, Object> properties, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.properties = properties != null ? Collections.unmodifiableMap(properties) : null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","sourceOld":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":["25d862725cffd5d4d62fd002b5dc320f92c53365","25d862725cffd5d4d62fd002b5dc320f92c53365"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1aad05eeff7818b0833c02ac6b743aa72054963b","date":1512093122,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],Map[String,Object],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#AutoScalingConfig(Policy,Map[String,TriggerConfig],Map[String,TriggerListenerConfig],int).mjava","sourceNew":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, Map<String, Object> properties, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.properties = properties != null ? Collections.unmodifiableMap(properties) : null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","sourceOld":"  private AutoScalingConfig(Policy policy, Map<String, TriggerConfig> triggerConfigs, Map<String,\n      TriggerListenerConfig> listenerConfigs, int zkVersion) {\n    this.policy = policy;\n    this.triggers = triggerConfigs != null ? Collections.unmodifiableMap(triggerConfigs) : null;\n    this.listeners = listenerConfigs != null ? Collections.unmodifiableMap(listenerConfigs) : null;\n    this.jsonMap = null;\n    this.zkVersion = zkVersion;\n    this.empty = policy == null &&\n        (triggerConfigs == null || triggerConfigs.isEmpty()) &&\n        (listenerConfigs == null || listenerConfigs.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["560c18d71dad43d675158783c3840f8c80d6d39c","15ba547dfc0dd0b670e678cb3db8e5d27c694420"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"15ba547dfc0dd0b670e678cb3db8e5d27c694420":["560c18d71dad43d675158783c3840f8c80d6d39c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1aad05eeff7818b0833c02ac6b743aa72054963b"]},"commit2Childs":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15ba547dfc0dd0b670e678cb3db8e5d27c694420":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c","219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"560c18d71dad43d675158783c3840f8c80d6d39c":["1aad05eeff7818b0833c02ac6b743aa72054963b","15ba547dfc0dd0b670e678cb3db8e5d27c694420"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}