{"path":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(Map[String,Collection[Object]]).mjava","commits":[{"id":"07d695a14a1938b01a5d4ab68b3c815eb061da94","date":1415146902,"type":1,"author":"Anshum Gupta","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(Map[String,Collection[Object]]).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(Map[String,ArrayList[String]]).mjava","sourceNew":"  /**\n   * \n   * @param filteredDocument Document with field values extracted for selected fields.\n   * @return More Like This query for the passed document.\n   */\n  public Query like(Map<String, Collection<Object>> filteredDocument) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = MultiFields.getIndexedFields(ir);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n    return createQuery(retrieveTerms(filteredDocument));\n  }\n\n","sourceOld":"  /**\n   * \n   * @param filteredDocument Document with field values extracted for selected fields.\n   * @return More Like This query for the passed document.\n   */\n  public Query like(Map<String, ArrayList<String>> filteredDocument) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = MultiFields.getIndexedFields(ir);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n    return createQuery(retrieveTerms(filteredDocument));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(Map[String,Collection[Object]]).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(Map[String,Collection[Object]]).mjava","sourceNew":"  /**\n   * \n   * @param filteredDocument Document with field values extracted for selected fields.\n   * @return More Like This query for the passed document.\n   */\n  public Query like(Map<String, Collection<Object>> filteredDocument) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = FieldInfos.getIndexedFields(ir);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n    return createQuery(retrieveTerms(filteredDocument));\n  }\n\n","sourceOld":"  /**\n   * \n   * @param filteredDocument Document with field values extracted for selected fields.\n   * @return More Like This query for the passed document.\n   */\n  public Query like(Map<String, Collection<Object>> filteredDocument) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = MultiFields.getIndexedFields(ir);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n    return createQuery(retrieveTerms(filteredDocument));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"04e775de416dd2d8067b10db1c8af975a1d5017e":["07d695a14a1938b01a5d4ab68b3c815eb061da94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"07d695a14a1938b01a5d4ab68b3c815eb061da94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["07d695a14a1938b01a5d4ab68b3c815eb061da94"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07d695a14a1938b01a5d4ab68b3c815eb061da94":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}