{"path":"src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","commits":[{"id":"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349","date":1224582283,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"/dev/null","sourceNew":"  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success)\n            return false;\n        } else {\n          boolean success = file.delete();\n          if (!success)\n            return false;\n        }\n      }\n    }\n    return dir.delete();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17","cbc3688252d4a8045d69a164236b2cf87b721f17","cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9","date":1225202752,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  /**delete the directree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success)\n            return false;\n        } else {\n          boolean success = file.delete();\n          if (!success)\n            return false;\n        }\n      }\n    }\n    return dir.delete();\n  }\n\n","sourceOld":"  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success)\n            return false;\n        } else {\n          boolean success = file.delete();\n          if (!success)\n            return false;\n        }\n      }\n    }\n    return dir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8620c64e323e74078214cf931e505179d14c888e","date":1225270494,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success)\n            return false;\n        } else {\n          boolean success = file.delete();\n          if (!success)\n            return false;\n        }\n      }\n    }\n    return dir.delete();\n  }\n\n","sourceOld":"  /**delete the directree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success)\n            return false;\n        } else {\n          boolean success = file.delete();\n          if (!success)\n            return false;\n        }\n      }\n    }\n    return dir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"530ebfd92bca7116555792112f655ad316104ae4","date":1232651327,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","sourceOld":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success)\n            return false;\n        } else {\n          boolean success = file.delete();\n          if (!success)\n            return false;\n        }\n      }\n    }\n    return dir.delete();\n  }\n\n","bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17","cbc3688252d4a8045d69a164236b2cf87b721f17","cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","sourceOld":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"530ebfd92bca7116555792112f655ad316104ae4":["8620c64e323e74078214cf931e505179d14c888e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"8620c64e323e74078214cf931e505179d14c888e":["6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9"],"ad94625fb8d088209f46650c8097196fec67f00c":["530ebfd92bca7116555792112f655ad316104ae4"],"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349":["6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9"],"530ebfd92bca7116555792112f655ad316104ae4":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8620c64e323e74078214cf931e505179d14c888e":["530ebfd92bca7116555792112f655ad316104ae4"],"6c89a4aebdbd208d5517a488e7dd7c1d164c3bc9":["8620c64e323e74078214cf931e505179d14c888e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}