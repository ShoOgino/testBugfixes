{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#initializeMetrics(SolrMetricsContext,String).mjava","commits":[{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#initializeMetrics(SolrMetricsContext,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    super.initializeMetrics(parentContext, scope);\n    metrics = new MetricsMap((detailed, map) -> {\n      if (importer != null) {\n        DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n\n        map.put(\"Status\", importer.getStatus().toString());\n\n        if (importer.docBuilder != null) {\n          DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n          map.put(\"Documents Processed\", running.docCount);\n          map.put(\"Requests made to DataSource\", running.queryCount);\n          map.put(\"Rows Fetched\", running.rowsCount);\n          map.put(\"Documents Deleted\", running.deletedDocCount);\n          map.put(\"Documents Skipped\", running.skipDocCount);\n        }\n\n        map.put(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n        map.put(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n        map.put(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n        map.put(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n        map.put(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n      }\n    });\n    solrMetricsContext.gauge(this, metrics, true, \"importer\", getCategory().toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    super.initializeMetrics(manager, registryName, tag, scope);\n    metrics = new MetricsMap((detailed, map) -> {\n      if (importer != null) {\n        DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n\n        map.put(\"Status\", importer.getStatus().toString());\n\n        if (importer.docBuilder != null) {\n          DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n          map.put(\"Documents Processed\", running.docCount);\n          map.put(\"Requests made to DataSource\", running.queryCount);\n          map.put(\"Rows Fetched\", running.rowsCount);\n          map.put(\"Documents Deleted\", running.deletedDocCount);\n          map.put(\"Documents Skipped\", running.skipDocCount);\n        }\n\n        map.put(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n        map.put(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n        map.put(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n        map.put(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n        map.put(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n      }\n    });\n    manager.registerGauge(this, registryName, metrics, tag, true, \"importer\", getCategory().toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c2af5a711bd6e2d33e0221ced0f47ac596ed275","date":1572877903,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#initializeMetrics(SolrMetricsContext,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#initializeMetrics(SolrMetricsContext,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    super.initializeMetrics(parentContext, scope);\n    metrics = new MetricsMap((detailed, map) -> {\n      if (importer != null) {\n        DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n\n        map.put(\"Status\", importer.getStatus().toString());\n\n        if (importer.docBuilder != null) {\n          DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n          map.put(\"Documents Processed\", running.docCount);\n          map.put(\"Requests made to DataSource\", running.queryCount);\n          map.put(\"Rows Fetched\", running.rowsCount);\n          map.put(\"Documents Deleted\", running.deletedDocCount);\n          map.put(\"Documents Skipped\", running.skipDocCount);\n        }\n\n        map.put(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n        map.put(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n        map.put(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n        map.put(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n        map.put(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n      }\n    });\n    solrMetricsContext.gauge(metrics, true, \"importer\", getCategory().toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    super.initializeMetrics(parentContext, scope);\n    metrics = new MetricsMap((detailed, map) -> {\n      if (importer != null) {\n        DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n\n        map.put(\"Status\", importer.getStatus().toString());\n\n        if (importer.docBuilder != null) {\n          DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n          map.put(\"Documents Processed\", running.docCount);\n          map.put(\"Requests made to DataSource\", running.queryCount);\n          map.put(\"Rows Fetched\", running.rowsCount);\n          map.put(\"Documents Deleted\", running.deletedDocCount);\n          map.put(\"Documents Skipped\", running.skipDocCount);\n        }\n\n        map.put(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n        map.put(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n        map.put(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n        map.put(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n        map.put(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n      }\n    });\n    solrMetricsContext.gauge(this, metrics, true, \"importer\", getCategory().toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#initializeMetrics(SolrMetricsContext,String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    super.initializeMetrics(parentContext, scope);\n    metrics = new MetricsMap((detailed, map) -> {\n      if (importer != null) {\n        DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n\n        map.put(\"Status\", importer.getStatus().toString());\n\n        if (importer.docBuilder != null) {\n          DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n          map.put(\"Documents Processed\", running.docCount);\n          map.put(\"Requests made to DataSource\", running.queryCount);\n          map.put(\"Rows Fetched\", running.rowsCount);\n          map.put(\"Documents Deleted\", running.deletedDocCount);\n          map.put(\"Documents Skipped\", running.skipDocCount);\n        }\n\n        map.put(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n        map.put(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n        map.put(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n        map.put(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n        map.put(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n      }\n    });\n    solrMetricsContext.gauge(metrics, true, \"importer\", getCategory().toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}