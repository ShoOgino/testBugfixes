{"path":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","commits":[{"id":"2df6dcf97491e32d0853436240f3045d19aa457f","date":1298984641,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME);\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME);\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME);\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","sourceNew":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME());\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME);\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b09c7419b92e982a901698cb401ce22ac35e4b04","date":1301668869,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","sourceNew":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME());\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME);\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","sourceNew":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME());\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME);\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47ac88233e9e3019faa24a5184425ad60c23d70f","date":1302779803,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","sourceNew":"  @Test\n  public void testTSTPersistence() throws Exception {\n    runTest(TSTLookup.class, true);\n  }\n\n","sourceOld":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME());\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb46686a27187e42311e77666a2c7026f461ebc","date":1302858020,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","sourceNew":"  @Test\n  public void testTSTPersistence() throws Exception {\n    runTest(TSTLookup.class, true);\n  }\n\n","sourceOld":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME());\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","sourceNew":"  @Test\n  public void testTSTPersistence() throws Exception {\n    runTest(TSTLookup.class, true);\n  }\n\n","sourceOld":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME);\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","sourceNew":"  @Test\n  public void testTSTPersistence() throws Exception {\n    runTest(TSTLookup.class, true);\n  }\n\n","sourceOld":"  @Test\n  public void testTSTPersistence() throws Exception {\n    TSTLookup lookup = new TSTLookup();\n    for (String k : keys) {\n      lookup.add(k, new Float(k.length()));\n    }\n    File storeDir = new File(TEST_HOME());\n    lookup.store(storeDir);\n    lookup = new TSTLookup();\n    lookup.load(storeDir);\n    for (String k : keys) {\n      Float val = (Float)lookup.get(k);\n      assertNotNull(k, val);\n      assertEquals(k, k.length(), val.intValue());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","sourceNew":"  public void testTSTPersistence() throws Exception {\n    runTest(TSTLookup.class, true);\n  }\n\n","sourceOld":"  @Test\n  public void testTSTPersistence() throws Exception {\n    runTest(TSTLookup.class, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","sourceNew":"  public void testTSTPersistence() throws Exception {\n    runTest(TSTLookup.class, true);\n  }\n\n","sourceOld":"  @Test\n  public void testTSTPersistence() throws Exception {\n    runTest(TSTLookup.class, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/PersistenceTest#testTSTPersistence().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/PersistenceTest#testTSTPersistence().mjava","sourceNew":"  public void testTSTPersistence() throws Exception {\n    runTest(TSTLookup.class, true);\n  }\n\n","sourceOld":"  @Test\n  public void testTSTPersistence() throws Exception {\n    runTest(TSTLookup.class, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e230a61047bc041516c811baa08a7174d6f8322a":["47ac88233e9e3019faa24a5184425ad60c23d70f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","47ac88233e9e3019faa24a5184425ad60c23d70f"],"d20d5e40789b1c42f4f926e3174b271256c43657":["2df6dcf97491e32d0853436240f3045d19aa457f"],"47ac88233e9e3019faa24a5184425ad60c23d70f":["b09c7419b92e982a901698cb401ce22ac35e4b04"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2df6dcf97491e32d0853436240f3045d19aa457f"],"1eb46686a27187e42311e77666a2c7026f461ebc":["45669a651c970812a680841b97a77cce06af559f","47ac88233e9e3019faa24a5184425ad60c23d70f"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2df6dcf97491e32d0853436240f3045d19aa457f"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","e230a61047bc041516c811baa08a7174d6f8322a"],"a3776dccca01c11e7046323cfad46a3b4a471233":["d20d5e40789b1c42f4f926e3174b271256c43657","47ac88233e9e3019faa24a5184425ad60c23d70f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b09c7419b92e982a901698cb401ce22ac35e4b04":["2df6dcf97491e32d0853436240f3045d19aa457f"],"2df6dcf97491e32d0853436240f3045d19aa457f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"45669a651c970812a680841b97a77cce06af559f":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","b09c7419b92e982a901698cb401ce22ac35e4b04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["135621f3a0670a9394eb563224a3b76cc4dddc0f","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"d20d5e40789b1c42f4f926e3174b271256c43657":["a3776dccca01c11e7046323cfad46a3b4a471233"],"47ac88233e9e3019faa24a5184425ad60c23d70f":["e230a61047bc041516c811baa08a7174d6f8322a","135621f3a0670a9394eb563224a3b76cc4dddc0f","1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["45669a651c970812a680841b97a77cce06af559f"],"1eb46686a27187e42311e77666a2c7026f461ebc":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","2df6dcf97491e32d0853436240f3045d19aa457f"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["47ac88233e9e3019faa24a5184425ad60c23d70f","45669a651c970812a680841b97a77cce06af559f"],"2df6dcf97491e32d0853436240f3045d19aa457f":["d20d5e40789b1c42f4f926e3174b271256c43657","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","b09c7419b92e982a901698cb401ce22ac35e4b04"],"45669a651c970812a680841b97a77cce06af559f":["1eb46686a27187e42311e77666a2c7026f461ebc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["1eb46686a27187e42311e77666a2c7026f461ebc","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}