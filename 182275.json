{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#Config(File).mjava","commits":[{"id":"b2e70b697d9f5a6130848741a4f0cdc08a1fe258","date":1168661303,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#Config(File).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * Read config from file containing both algorithm and config properties.\r\n   * @param algFile file containing both algorithm and config properties.\r\n   * @throws IOException\r\n   */\r\n  public Config (File algFile) throws IOException {\r\n    // read alg file to array of lines\r\n    ArrayList lines = new ArrayList();\r\n    BufferedReader r = new BufferedReader(new FileReader(algFile));\r\n    int lastConfigLine=0;\r\n    for (String line = r.readLine(); line!=null; line=r.readLine()) {\r\n      lines.add(line);\r\n      if (line.indexOf('=')>0) {\r\n        lastConfigLine = lines.size();\r\n      }\r\n    }\r\n    r.close();\r\n    // copy props lines to string\r\n    StringBuffer sb = new StringBuffer();\r\n    for (int i=0; i<lastConfigLine; i++) {\r\n      sb.append(lines.get(i));\r\n      sb.append(NEW_LINE);\r\n    }\r\n    // read props from string\r\n    this.props = new Properties();\r\n    props.load(new ByteArrayInputStream(sb.toString().getBytes()));\r\n\r\n    if (Boolean.valueOf(props.getProperty(\"print.props\",\"true\")).booleanValue()) {\r\n      printProps();\r\n    }\r\n    \r\n    // copy algorithm lines\r\n    sb = new StringBuffer();\r\n    for (int i=lastConfigLine; i<lines.size(); i++) {\r\n      sb.append(lines.get(i));\r\n      sb.append(NEW_LINE);\r\n    }\r\n    algorithmText = sb.toString();\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e5d405c425acd995b94fac218d47b5dc7969d031"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"975cb787e66d548dba4f63c22c08d692c7235f73","date":1174605228,"type":5,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#Config(Reader).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config#Config(File).mjava","sourceNew":"  /**\r\n   * Read config from file containing both algorithm and config properties.\r\n   * @param algFile file containing both algorithm and config properties.\r\n   * @throws IOException\r\n   */\r\n  public Config (Reader algReader) throws IOException {\r\n    // read alg file to array of lines\r\n    ArrayList lines = new ArrayList();\r\n    BufferedReader r = new BufferedReader(algReader);\r\n    int lastConfigLine=0;\r\n    for (String line = r.readLine(); line!=null; line=r.readLine()) {\r\n      lines.add(line);\r\n      if (line.indexOf('=')>0) {\r\n        lastConfigLine = lines.size();\r\n      }\r\n    }\r\n    r.close();\r\n    // copy props lines to string\r\n    StringBuffer sb = new StringBuffer();\r\n    for (int i=0; i<lastConfigLine; i++) {\r\n      sb.append(lines.get(i));\r\n      sb.append(NEW_LINE);\r\n    }\r\n    // read props from string\r\n    this.props = new Properties();\r\n    props.load(new ByteArrayInputStream(sb.toString().getBytes()));\r\n\r\n    if (Boolean.valueOf(props.getProperty(\"print.props\",\"true\")).booleanValue()) {\r\n      printProps();\r\n    }\r\n    \r\n    // copy algorithm lines\r\n    sb = new StringBuffer();\r\n    for (int i=lastConfigLine; i<lines.size(); i++) {\r\n      sb.append(lines.get(i));\r\n      sb.append(NEW_LINE);\r\n    }\r\n    algorithmText = sb.toString();\r\n  }\r\n\n","sourceOld":"  /**\r\n   * Read config from file containing both algorithm and config properties.\r\n   * @param algFile file containing both algorithm and config properties.\r\n   * @throws IOException\r\n   */\r\n  public Config (File algFile) throws IOException {\r\n    // read alg file to array of lines\r\n    ArrayList lines = new ArrayList();\r\n    BufferedReader r = new BufferedReader(new FileReader(algFile));\r\n    int lastConfigLine=0;\r\n    for (String line = r.readLine(); line!=null; line=r.readLine()) {\r\n      lines.add(line);\r\n      if (line.indexOf('=')>0) {\r\n        lastConfigLine = lines.size();\r\n      }\r\n    }\r\n    r.close();\r\n    // copy props lines to string\r\n    StringBuffer sb = new StringBuffer();\r\n    for (int i=0; i<lastConfigLine; i++) {\r\n      sb.append(lines.get(i));\r\n      sb.append(NEW_LINE);\r\n    }\r\n    // read props from string\r\n    this.props = new Properties();\r\n    props.load(new ByteArrayInputStream(sb.toString().getBytes()));\r\n\r\n    if (Boolean.valueOf(props.getProperty(\"print.props\",\"true\")).booleanValue()) {\r\n      printProps();\r\n    }\r\n    \r\n    // copy algorithm lines\r\n    sb = new StringBuffer();\r\n    for (int i=lastConfigLine; i<lines.size(); i++) {\r\n      sb.append(lines.get(i));\r\n      sb.append(NEW_LINE);\r\n    }\r\n    algorithmText = sb.toString();\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"975cb787e66d548dba4f63c22c08d692c7235f73":["b2e70b697d9f5a6130848741a4f0cdc08a1fe258"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b2e70b697d9f5a6130848741a4f0cdc08a1fe258":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["975cb787e66d548dba4f63c22c08d692c7235f73"]},"commit2Childs":{"975cb787e66d548dba4f63c22c08d692c7235f73":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b2e70b697d9f5a6130848741a4f0cdc08a1fe258"],"b2e70b697d9f5a6130848741a4f0cdc08a1fe258":["975cb787e66d548dba4f63c22c08d692c7235f73"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}