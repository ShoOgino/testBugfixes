{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestDistribStateManager#testHasData().mjava","commits":[{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestDistribStateManager#testHasData().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testHasData() throws Exception {\n    assertFalse(stateManager.hasData(\"/hasData/foo\"));\n    assertFalse(stateManager.hasData(\"/hasData/bar\"));\n    try {\n      stateManager.createData(\"/hasData/foo\", new byte[0], CreateMode.PERSISTENT);\n    } catch (NoSuchElementException e) {\n      // expected\n    }\n    stateManager.makePath(\"/hasData\");\n    stateManager.createData(\"/hasData/foo\", new byte[0], CreateMode.PERSISTENT);\n    stateManager.createData(\"/hasData/bar\", new byte[0], CreateMode.PERSISTENT);\n    assertTrue(stateManager.hasData(\"/hasData/foo\"));\n    assertTrue(stateManager.hasData(\"/hasData/bar\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01e3e55745c6667006f67aaa604466b9974425f4","date":1518776937,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestDistribStateManager#testHasData().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestDistribStateManager#testHasData().mjava","sourceNew":"  @Test\n  public void testHasData() throws Exception {\n    assertFalse(stateManager.hasData(\"/hasData/foo\"));\n    assertFalse(stateManager.hasData(\"/hasData/bar\"));\n    try {\n      stateManager.createData(\"/hasData/foo\", new byte[0], CreateMode.PERSISTENT);\n      fail(\"should have failed (parent /hasData doesn't exist)\");\n    } catch (NoSuchElementException e) {\n      // expected\n    }\n    stateManager.makePath(\"/hasData\");\n    stateManager.createData(\"/hasData/foo\", new byte[0], CreateMode.PERSISTENT);\n    stateManager.createData(\"/hasData/bar\", new byte[0], CreateMode.PERSISTENT);\n    assertTrue(stateManager.hasData(\"/hasData/foo\"));\n    assertTrue(stateManager.hasData(\"/hasData/bar\"));\n  }\n\n","sourceOld":"  @Test\n  public void testHasData() throws Exception {\n    assertFalse(stateManager.hasData(\"/hasData/foo\"));\n    assertFalse(stateManager.hasData(\"/hasData/bar\"));\n    try {\n      stateManager.createData(\"/hasData/foo\", new byte[0], CreateMode.PERSISTENT);\n    } catch (NoSuchElementException e) {\n      // expected\n    }\n    stateManager.makePath(\"/hasData\");\n    stateManager.createData(\"/hasData/foo\", new byte[0], CreateMode.PERSISTENT);\n    stateManager.createData(\"/hasData/bar\", new byte[0], CreateMode.PERSISTENT);\n    assertTrue(stateManager.hasData(\"/hasData/foo\"));\n    assertTrue(stateManager.hasData(\"/hasData/bar\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6a5c1c40529f15b445e6720dfde1967e139bff1","date":1535375643,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimDistribStateManager#testHasData().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestDistribStateManager#testHasData().mjava","sourceNew":"  @Test\n  public void testHasData() throws Exception {\n    assertFalse(stateManager.hasData(\"/hasData/foo\"));\n    assertFalse(stateManager.hasData(\"/hasData/bar\"));\n    try {\n      stateManager.createData(\"/hasData/foo\", new byte[0], CreateMode.PERSISTENT);\n      fail(\"should have failed (parent /hasData doesn't exist)\");\n    } catch (NoSuchElementException e) {\n      // expected\n    }\n    stateManager.makePath(\"/hasData\");\n    stateManager.createData(\"/hasData/foo\", new byte[0], CreateMode.PERSISTENT);\n    stateManager.createData(\"/hasData/bar\", new byte[0], CreateMode.PERSISTENT);\n    assertTrue(stateManager.hasData(\"/hasData/foo\"));\n    assertTrue(stateManager.hasData(\"/hasData/bar\"));\n  }\n\n","sourceOld":"  @Test\n  public void testHasData() throws Exception {\n    assertFalse(stateManager.hasData(\"/hasData/foo\"));\n    assertFalse(stateManager.hasData(\"/hasData/bar\"));\n    try {\n      stateManager.createData(\"/hasData/foo\", new byte[0], CreateMode.PERSISTENT);\n      fail(\"should have failed (parent /hasData doesn't exist)\");\n    } catch (NoSuchElementException e) {\n      // expected\n    }\n    stateManager.makePath(\"/hasData\");\n    stateManager.createData(\"/hasData/foo\", new byte[0], CreateMode.PERSISTENT);\n    stateManager.createData(\"/hasData/bar\", new byte[0], CreateMode.PERSISTENT);\n    assertTrue(stateManager.hasData(\"/hasData/foo\"));\n    assertTrue(stateManager.hasData(\"/hasData/bar\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["01e3e55745c6667006f67aaa604466b9974425f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"01e3e55745c6667006f67aaa604466b9974425f4":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a6a5c1c40529f15b445e6720dfde1967e139bff1"]},"commit2Childs":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["01e3e55745c6667006f67aaa604466b9974425f4"],"01e3e55745c6667006f67aaa604466b9974425f4":["a6a5c1c40529f15b445e6720dfde1967e139bff1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}