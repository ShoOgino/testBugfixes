{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","commits":[{"id":"105afd3f649c3faf4685df2d26cc3be1f7e51b2b","date":1183256350,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"  public static void main(String[] args) {\n    if (args.length != 2) {\n      printUsage();\n    }\n\n    File wikipedia = new File(args[0]);\n\n    if (wikipedia.exists()) {\n      File outputDir = new File(args[1]);\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(wikipedia, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbeed263e6233e327186a2d90fd6848347f2883a","date":1186649846,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":null,"sourceOld":"  public static void main(String[] args) {\n    if (args.length != 2) {\n      printUsage();\n    }\n\n    File wikipedia = new File(args[0]);\n\n    if (wikipedia.exists()) {\n      File outputDir = new File(args[1]);\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(wikipedia, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d67ec1c595e11d78eba796c4aee82d3488645e6","date":1198164796,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"  public static void main(String[] args) {\n    if (args.length != 2) {\n      printUsage();\n    }\n\n    File wikipedia = new File(args[0]);\n\n    if (wikipedia.exists()) {\n      File outputDir = new File(args[1]);\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(wikipedia, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["880f1e23ff85a04d8d8f8d7722c6a8a58352f708"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"880f1e23ff85a04d8d8f8d7722c6a8a58352f708","date":1201733272,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new EnwikiDocMaker();\n    Properties properties = new Properties();\n\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"doc.maker.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia != null && wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiDocMaker\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) {\n    if (args.length != 2) {\n      printUsage();\n    }\n\n    File wikipedia = new File(args[0]);\n\n    if (wikipedia.exists()) {\n      File outputDir = new File(args[1]);\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(wikipedia, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":["2d67ec1c595e11d78eba796c4aee82d3488645e6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new EnwikiDocMaker();\n    Properties properties = new Properties();\n\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia != null && wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiDocMaker\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new EnwikiDocMaker();\n    Properties properties = new Properties();\n\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"doc.maker.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia != null && wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiDocMaker\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2aa9553aad4bb588f33e036ce51485a850a2917","date":1257895368,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia != null && wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new EnwikiDocMaker();\n    Properties properties = new Properties();\n\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia != null && wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiDocMaker\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia != null && wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"105afd3f649c3faf4685df2d26cc3be1f7e51b2b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2aa9553aad4bb588f33e036ce51485a850a2917":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["880f1e23ff85a04d8d8f8d7722c6a8a58352f708"],"880f1e23ff85a04d8d8f8d7722c6a8a58352f708":["2d67ec1c595e11d78eba796c4aee82d3488645e6"],"dbeed263e6233e327186a2d90fd6848347f2883a":["105afd3f649c3faf4685df2d26cc3be1f7e51b2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d67ec1c595e11d78eba796c4aee82d3488645e6":["dbeed263e6233e327186a2d90fd6848347f2883a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["f2aa9553aad4bb588f33e036ce51485a850a2917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"105afd3f649c3faf4685df2d26cc3be1f7e51b2b":["dbeed263e6233e327186a2d90fd6848347f2883a"],"f2aa9553aad4bb588f33e036ce51485a850a2917":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["f2aa9553aad4bb588f33e036ce51485a850a2917"],"880f1e23ff85a04d8d8f8d7722c6a8a58352f708":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"dbeed263e6233e327186a2d90fd6848347f2883a":["2d67ec1c595e11d78eba796c4aee82d3488645e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["105afd3f649c3faf4685df2d26cc3be1f7e51b2b"],"2d67ec1c595e11d78eba796c4aee82d3488645e6":["880f1e23ff85a04d8d8f8d7722c6a8a58352f708"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}