{"path":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#test2().mjava","commits":[{"id":"39515bf43e8b2401975a24ef6aab6575684663c4","date":1343998859,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#test2().mjava","pathOld":"/dev/null","sourceNew":"  public void test2() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    addDoc(\"LANGE\", writer);\n    addDoc(\"LUETH\", writer);\n    addDoc(\"PIRSING\", writer);\n    addDoc(\"RIEGEL\", writer);\n    addDoc(\"TRZECZIAK\", writer);\n    addDoc(\"WALKER\", writer);\n    addDoc(\"WBR\", writer);\n    addDoc(\"WE\", writer);\n    addDoc(\"WEB\", writer);\n    addDoc(\"WEBE\", writer);\n    addDoc(\"WEBER\", writer);\n    addDoc(\"WEBERE\", writer);\n    addDoc(\"WEBREE\", writer);\n    addDoc(\"WEBEREI\", writer);\n    addDoc(\"WBRE\", writer);\n    addDoc(\"WITTKOPF\", writer);\n    addDoc(\"WOJNAROWSKI\", writer);\n    addDoc(\"WRICKE\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"WEBER\"), 2, 1);\n    //query.setRewriteMethod(FuzzyQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(8, hits.length);\n\n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#test2().mjava","pathOld":"/dev/null","sourceNew":"  public void test2() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    addDoc(\"LANGE\", writer);\n    addDoc(\"LUETH\", writer);\n    addDoc(\"PIRSING\", writer);\n    addDoc(\"RIEGEL\", writer);\n    addDoc(\"TRZECZIAK\", writer);\n    addDoc(\"WALKER\", writer);\n    addDoc(\"WBR\", writer);\n    addDoc(\"WE\", writer);\n    addDoc(\"WEB\", writer);\n    addDoc(\"WEBE\", writer);\n    addDoc(\"WEBER\", writer);\n    addDoc(\"WEBERE\", writer);\n    addDoc(\"WEBREE\", writer);\n    addDoc(\"WEBEREI\", writer);\n    addDoc(\"WBRE\", writer);\n    addDoc(\"WITTKOPF\", writer);\n    addDoc(\"WOJNAROWSKI\", writer);\n    addDoc(\"WRICKE\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"WEBER\"), 2, 1);\n    //query.setRewriteMethod(FuzzyQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(8, hits.length);\n\n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#test2().mjava","pathOld":"/dev/null","sourceNew":"  public void test2() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    addDoc(\"LANGE\", writer);\n    addDoc(\"LUETH\", writer);\n    addDoc(\"PIRSING\", writer);\n    addDoc(\"RIEGEL\", writer);\n    addDoc(\"TRZECZIAK\", writer);\n    addDoc(\"WALKER\", writer);\n    addDoc(\"WBR\", writer);\n    addDoc(\"WE\", writer);\n    addDoc(\"WEB\", writer);\n    addDoc(\"WEBE\", writer);\n    addDoc(\"WEBER\", writer);\n    addDoc(\"WEBERE\", writer);\n    addDoc(\"WEBREE\", writer);\n    addDoc(\"WEBEREI\", writer);\n    addDoc(\"WBRE\", writer);\n    addDoc(\"WITTKOPF\", writer);\n    addDoc(\"WOJNAROWSKI\", writer);\n    addDoc(\"WRICKE\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"WEBER\"), 2, 1);\n    //query.setRewriteMethod(FuzzyQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(8, hits.length);\n\n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#test2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#test2().mjava","sourceNew":"  public void test2() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    addDoc(\"LANGE\", writer);\n    addDoc(\"LUETH\", writer);\n    addDoc(\"PIRSING\", writer);\n    addDoc(\"RIEGEL\", writer);\n    addDoc(\"TRZECZIAK\", writer);\n    addDoc(\"WALKER\", writer);\n    addDoc(\"WBR\", writer);\n    addDoc(\"WE\", writer);\n    addDoc(\"WEB\", writer);\n    addDoc(\"WEBE\", writer);\n    addDoc(\"WEBER\", writer);\n    addDoc(\"WEBERE\", writer);\n    addDoc(\"WEBREE\", writer);\n    addDoc(\"WEBEREI\", writer);\n    addDoc(\"WBRE\", writer);\n    addDoc(\"WITTKOPF\", writer);\n    addDoc(\"WOJNAROWSKI\", writer);\n    addDoc(\"WRICKE\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.shutdown();\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"WEBER\"), 2, 1);\n    //query.setRewriteMethod(FuzzyQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(8, hits.length);\n\n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void test2() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    addDoc(\"LANGE\", writer);\n    addDoc(\"LUETH\", writer);\n    addDoc(\"PIRSING\", writer);\n    addDoc(\"RIEGEL\", writer);\n    addDoc(\"TRZECZIAK\", writer);\n    addDoc(\"WALKER\", writer);\n    addDoc(\"WBR\", writer);\n    addDoc(\"WE\", writer);\n    addDoc(\"WEB\", writer);\n    addDoc(\"WEBE\", writer);\n    addDoc(\"WEBER\", writer);\n    addDoc(\"WEBERE\", writer);\n    addDoc(\"WEBREE\", writer);\n    addDoc(\"WEBEREI\", writer);\n    addDoc(\"WBRE\", writer);\n    addDoc(\"WITTKOPF\", writer);\n    addDoc(\"WOJNAROWSKI\", writer);\n    addDoc(\"WRICKE\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"WEBER\"), 2, 1);\n    //query.setRewriteMethod(FuzzyQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(8, hits.length);\n\n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#test2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#test2().mjava","sourceNew":"  public void test2() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    addDoc(\"LANGE\", writer);\n    addDoc(\"LUETH\", writer);\n    addDoc(\"PIRSING\", writer);\n    addDoc(\"RIEGEL\", writer);\n    addDoc(\"TRZECZIAK\", writer);\n    addDoc(\"WALKER\", writer);\n    addDoc(\"WBR\", writer);\n    addDoc(\"WE\", writer);\n    addDoc(\"WEB\", writer);\n    addDoc(\"WEBE\", writer);\n    addDoc(\"WEBER\", writer);\n    addDoc(\"WEBERE\", writer);\n    addDoc(\"WEBREE\", writer);\n    addDoc(\"WEBEREI\", writer);\n    addDoc(\"WBRE\", writer);\n    addDoc(\"WITTKOPF\", writer);\n    addDoc(\"WOJNAROWSKI\", writer);\n    addDoc(\"WRICKE\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"WEBER\"), 2, 1);\n    //query.setRewriteMethod(FuzzyQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(8, hits.length);\n\n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void test2() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    addDoc(\"LANGE\", writer);\n    addDoc(\"LUETH\", writer);\n    addDoc(\"PIRSING\", writer);\n    addDoc(\"RIEGEL\", writer);\n    addDoc(\"TRZECZIAK\", writer);\n    addDoc(\"WALKER\", writer);\n    addDoc(\"WBR\", writer);\n    addDoc(\"WE\", writer);\n    addDoc(\"WEB\", writer);\n    addDoc(\"WEBE\", writer);\n    addDoc(\"WEBER\", writer);\n    addDoc(\"WEBERE\", writer);\n    addDoc(\"WEBREE\", writer);\n    addDoc(\"WEBEREI\", writer);\n    addDoc(\"WBRE\", writer);\n    addDoc(\"WITTKOPF\", writer);\n    addDoc(\"WOJNAROWSKI\", writer);\n    addDoc(\"WRICKE\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.shutdown();\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"WEBER\"), 2, 1);\n    //query.setRewriteMethod(FuzzyQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(8, hits.length);\n\n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#test2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFuzzyQuery#test2().mjava","sourceNew":"  public void test2() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    addDoc(\"LANGE\", writer);\n    addDoc(\"LUETH\", writer);\n    addDoc(\"PIRSING\", writer);\n    addDoc(\"RIEGEL\", writer);\n    addDoc(\"TRZECZIAK\", writer);\n    addDoc(\"WALKER\", writer);\n    addDoc(\"WBR\", writer);\n    addDoc(\"WE\", writer);\n    addDoc(\"WEB\", writer);\n    addDoc(\"WEBE\", writer);\n    addDoc(\"WEBER\", writer);\n    addDoc(\"WEBERE\", writer);\n    addDoc(\"WEBREE\", writer);\n    addDoc(\"WEBEREI\", writer);\n    addDoc(\"WBRE\", writer);\n    addDoc(\"WITTKOPF\", writer);\n    addDoc(\"WOJNAROWSKI\", writer);\n    addDoc(\"WRICKE\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"WEBER\"), 2, 1);\n    //query.setRewriteMethod(FuzzyQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    ScoreDoc[] hits = searcher.search(query, 1000).scoreDocs;\n    assertEquals(8, hits.length);\n\n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void test2() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.KEYWORD, false));\n    addDoc(\"LANGE\", writer);\n    addDoc(\"LUETH\", writer);\n    addDoc(\"PIRSING\", writer);\n    addDoc(\"RIEGEL\", writer);\n    addDoc(\"TRZECZIAK\", writer);\n    addDoc(\"WALKER\", writer);\n    addDoc(\"WBR\", writer);\n    addDoc(\"WE\", writer);\n    addDoc(\"WEB\", writer);\n    addDoc(\"WEBE\", writer);\n    addDoc(\"WEBER\", writer);\n    addDoc(\"WEBERE\", writer);\n    addDoc(\"WEBREE\", writer);\n    addDoc(\"WEBEREI\", writer);\n    addDoc(\"WBRE\", writer);\n    addDoc(\"WITTKOPF\", writer);\n    addDoc(\"WOJNAROWSKI\", writer);\n    addDoc(\"WRICKE\", writer);\n\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    writer.close();\n\n    FuzzyQuery query = new FuzzyQuery(new Term(\"field\", \"WEBER\"), 2, 1);\n    //query.setRewriteMethod(FuzzyQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(8, hits.length);\n\n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"39515bf43e8b2401975a24ef6aab6575684663c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","39515bf43e8b2401975a24ef6aab6575684663c4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["39515bf43e8b2401975a24ef6aab6575684663c4"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","39515bf43e8b2401975a24ef6aab6575684663c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"]},"commit2Childs":{"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["39515bf43e8b2401975a24ef6aab6575684663c4","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"39515bf43e8b2401975a24ef6aab6575684663c4":["d6f074e73200c07d54f242d3880a8da5a35ff97b","ae14298f4eec6d5faee6a149f88ba57d14a6f21a","8fd5be977c105554c6a7b68afcdbc511439723ab"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}