{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","commits":[{"id":"ae75def1e2525383b6e1397ed97c44387da9941c","date":1385249238,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/DocumentBuilder#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","sourceOld":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca39562b2d7687143fdb601d5de1b8f7b778f1db","date":1385299806,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n        addedIndexedFields.add(new StringField(indexFieldName, facetField.dim, Field.Store.NO));\n      }\n    }\n  }\n\n","sourceOld":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetsConfig#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n        addedIndexedFields.add(new StringField(indexFieldName, facetField.dim, Field.Store.NO));\n      }\n    }\n  }\n\n","sourceOld":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n        addedIndexedFields.add(new StringField(indexFieldName, facetField.dim, Field.Store.NO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["ca39562b2d7687143fdb601d5de1b8f7b778f1db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["ae75def1e2525383b6e1397ed97c44387da9941c"],"ae75def1e2525383b6e1397ed97c44387da9941c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","ae75def1e2525383b6e1397ed97c44387da9941c"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ae75def1e2525383b6e1397ed97c44387da9941c":["ca39562b2d7687143fdb601d5de1b8f7b778f1db"]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}