{"path":"solr/core/src/java/org/apache/solr/search/DocSet#getBits().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSet#getBits().mjava","pathOld":"solr/src/java/org/apache/solr/search/DocSet#getBits().mjava","sourceNew":"  /**\n   * Returns a BitSet view of the DocSet.  Any changes to this BitSet <b>may</b>\n   * be reflected in the DocSet, hence if the DocSet is shared or was returned from\n   * a SolrIndexSearcher method, it's not safe to modify the BitSet.\n   *\n   * @return\n   * An OpenBitSet with the bit number of every docid set in the set.\n   */\n  public OpenBitSet getBits();\n\n","sourceOld":"  /**\n   * Returns a BitSet view of the DocSet.  Any changes to this BitSet <b>may</b>\n   * be reflected in the DocSet, hence if the DocSet is shared or was returned from\n   * a SolrIndexSearcher method, it's not safe to modify the BitSet.\n   *\n   * @return\n   * An OpenBitSet with the bit number of every docid set in the set.\n   */\n  public OpenBitSet getBits();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSet#getBits().mjava","pathOld":"solr/src/java/org/apache/solr/search/DocSet#getBits().mjava","sourceNew":"  /**\n   * Returns a BitSet view of the DocSet.  Any changes to this BitSet <b>may</b>\n   * be reflected in the DocSet, hence if the DocSet is shared or was returned from\n   * a SolrIndexSearcher method, it's not safe to modify the BitSet.\n   *\n   * @return\n   * An OpenBitSet with the bit number of every docid set in the set.\n   */\n  public OpenBitSet getBits();\n\n","sourceOld":"  /**\n   * Returns a BitSet view of the DocSet.  Any changes to this BitSet <b>may</b>\n   * be reflected in the DocSet, hence if the DocSet is shared or was returned from\n   * a SolrIndexSearcher method, it's not safe to modify the BitSet.\n   *\n   * @return\n   * An OpenBitSet with the bit number of every docid set in the set.\n   */\n  public OpenBitSet getBits();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSet#getBits().mjava","pathOld":"solr/src/java/org/apache/solr/search/DocSet#getBits().mjava","sourceNew":"  /**\n   * Returns a BitSet view of the DocSet.  Any changes to this BitSet <b>may</b>\n   * be reflected in the DocSet, hence if the DocSet is shared or was returned from\n   * a SolrIndexSearcher method, it's not safe to modify the BitSet.\n   *\n   * @return\n   * An OpenBitSet with the bit number of every docid set in the set.\n   */\n  public OpenBitSet getBits();\n\n","sourceOld":"  /**\n   * Returns a BitSet view of the DocSet.  Any changes to this BitSet <b>may</b>\n   * be reflected in the DocSet, hence if the DocSet is shared or was returned from\n   * a SolrIndexSearcher method, it's not safe to modify the BitSet.\n   *\n   * @return\n   * An OpenBitSet with the bit number of every docid set in the set.\n   */\n  public OpenBitSet getBits();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","date":1392536197,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/DocSet#getBits().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a BitSet view of the DocSet.  Any changes to this BitSet <b>may</b>\n   * be reflected in the DocSet, hence if the DocSet is shared or was returned from\n   * a SolrIndexSearcher method, it's not safe to modify the BitSet.\n   *\n   * @return\n   * An OpenBitSet with the bit number of every docid set in the set.\n   */\n  public OpenBitSet getBits();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7","date":1582642100,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSet#getBits().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A {@link Bits} that has fast random access (as is generally required of Bits).\n   * It may be necessary to do work to build this.\n   */\n  public abstract Bits getBits();\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90440a2155c2b9ce30bf8fc29b1c978c58dae1e7"]},"commit2Childs":{"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["90440a2155c2b9ce30bf8fc29b1c978c58dae1e7"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}