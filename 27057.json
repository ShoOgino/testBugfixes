{"path":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#TVMapper(String[],IndexReader,boolean,boolean,boolean,boolean,boolean).mjava","commits":[{"id":"3a04bdb295a363a052bdc5a2fcd6e8ce977aa51c","date":1224776958,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#TVMapper(String[],IndexReader,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public TVMapper(String[] fields, IndexReader reader, boolean termFreq, boolean positions, boolean offsets, boolean idf, boolean tfIdf) {\n\n      this.reader = reader;\n      this.fields = fields != null ? new HashSet<String>(Arrays.asList(fields)) : Collections.<String>emptySet();\n      this.termFreq = termFreq;\n      this.positions = positions;\n      this.offsets = offsets;\n      this.idf = idf;\n      this.tfIdf = tfIdf;\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2686717a32b40222a4361bd16ae295511cb8ce7","date":1226500515,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#TVMapper(String[],IndexReader,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#TVMapper(String[],IndexReader,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"    public TVMapper(String[] fields, IndexReader reader, boolean termFreq, boolean positions, boolean offsets, boolean docFreq, boolean tfIdf) {\n\n      this.reader = reader;\n      this.fields = fields != null ? new HashSet<String>(Arrays.asList(fields)) : Collections.<String>emptySet();\n      this.termFreq = termFreq;\n      this.positions = positions;\n      this.offsets = offsets;\n      this.docFreq = docFreq;\n      this.tfIdf = tfIdf;\n\n    }\n\n","sourceOld":"    public TVMapper(String[] fields, IndexReader reader, boolean termFreq, boolean positions, boolean offsets, boolean idf, boolean tfIdf) {\n\n      this.reader = reader;\n      this.fields = fields != null ? new HashSet<String>(Arrays.asList(fields)) : Collections.<String>emptySet();\n      this.termFreq = termFreq;\n      this.positions = positions;\n      this.offsets = offsets;\n      this.idf = idf;\n      this.tfIdf = tfIdf;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06aac04eefdea12e25b74f574393532f90a7d590","date":1243427649,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#TVMapper(String[],IndexReader,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#TVMapper(String[],IndexReader,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"    /**\n     *\n     * @param fields\n     * @param reader\n     * @param termFreq\n     * @param positions true if the TVM should try to get position info from the Term Vector, assuming it is present\n     * @param offsets true if the TVM should try to get offset info from the Term Vector, assuming it is present\n     * @param docFreq\n     * @param tfIdf\n     */\n    public TVMapper(String[] fields, IndexReader reader, boolean termFreq, boolean positions, boolean offsets, boolean docFreq, boolean tfIdf) {\n\n      this.reader = reader;\n      this.fields = fields != null ? new HashSet<String>(Arrays.asList(fields)) : Collections.<String>emptySet();\n      this.termFreq = termFreq;\n      this.positions = positions;\n      this.offsets = offsets;\n      this.docFreq = docFreq;\n      this.tfIdf = tfIdf;\n\n    }\n\n","sourceOld":"    public TVMapper(String[] fields, IndexReader reader, boolean termFreq, boolean positions, boolean offsets, boolean docFreq, boolean tfIdf) {\n\n      this.reader = reader;\n      this.fields = fields != null ? new HashSet<String>(Arrays.asList(fields)) : Collections.<String>emptySet();\n      this.termFreq = termFreq;\n      this.positions = positions;\n      this.offsets = offsets;\n      this.docFreq = docFreq;\n      this.tfIdf = tfIdf;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#TVMapper(String[],IndexReader,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/handler/component/TermVectorComponent.TVMapper#TVMapper(String[],IndexReader,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"    /**\n     *\n     * @param fields\n     * @param reader\n     * @param termFreq\n     * @param positions true if the TVM should try to get position info from the Term Vector, assuming it is present\n     * @param offsets true if the TVM should try to get offset info from the Term Vector, assuming it is present\n     * @param docFreq\n     * @param tfIdf\n     */\n    public TVMapper(String[] fields, IndexReader reader, boolean termFreq, boolean positions, boolean offsets, boolean docFreq, boolean tfIdf) {\n\n      this.reader = reader;\n      this.fields = fields != null ? new HashSet<String>(Arrays.asList(fields)) : Collections.<String>emptySet();\n      this.termFreq = termFreq;\n      this.positions = positions;\n      this.offsets = offsets;\n      this.docFreq = docFreq;\n      this.tfIdf = tfIdf;\n\n    }\n\n","sourceOld":"    /**\n     *\n     * @param fields\n     * @param reader\n     * @param termFreq\n     * @param positions true if the TVM should try to get position info from the Term Vector, assuming it is present\n     * @param offsets true if the TVM should try to get offset info from the Term Vector, assuming it is present\n     * @param docFreq\n     * @param tfIdf\n     */\n    public TVMapper(String[] fields, IndexReader reader, boolean termFreq, boolean positions, boolean offsets, boolean docFreq, boolean tfIdf) {\n\n      this.reader = reader;\n      this.fields = fields != null ? new HashSet<String>(Arrays.asList(fields)) : Collections.<String>emptySet();\n      this.termFreq = termFreq;\n      this.positions = positions;\n      this.offsets = offsets;\n      this.docFreq = docFreq;\n      this.tfIdf = tfIdf;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"06aac04eefdea12e25b74f574393532f90a7d590":["a2686717a32b40222a4361bd16ae295511cb8ce7"],"a2686717a32b40222a4361bd16ae295511cb8ce7":["3a04bdb295a363a052bdc5a2fcd6e8ce977aa51c"],"ad94625fb8d088209f46650c8097196fec67f00c":["06aac04eefdea12e25b74f574393532f90a7d590"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a04bdb295a363a052bdc5a2fcd6e8ce977aa51c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3a04bdb295a363a052bdc5a2fcd6e8ce977aa51c"],"06aac04eefdea12e25b74f574393532f90a7d590":["ad94625fb8d088209f46650c8097196fec67f00c"],"a2686717a32b40222a4361bd16ae295511cb8ce7":["06aac04eefdea12e25b74f574393532f90a7d590"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"3a04bdb295a363a052bdc5a2fcd6e8ce977aa51c":["a2686717a32b40222a4361bd16ae295511cb8ce7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}