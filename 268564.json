{"path":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testRewrite().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testRewrite().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testRewrite().mjava","sourceNew":"  /* test that a single term is rewritten to a term query */\n  public void testRewrite() throws IOException {\n    PhraseQuery pq = new PhraseQuery();\n    pq.add(new Term(\"foo\", \"bar\"));\n    Query rewritten = pq.rewrite(searcher.getIndexReader());\n    assertTrue(rewritten instanceof TermQuery);\n  }\n\n","sourceOld":"  /* test that a single term is rewritten to a term query */\n  public void testRewrite() throws IOException {\n    PhraseQuery pq = new PhraseQuery();\n    pq.add(new Term(\"foo\", \"bar\"));\n    Query rewritten = pq.rewrite(searcher.getIndexReader());\n    assertTrue(rewritten instanceof TermQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testRewrite().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testRewrite().mjava","sourceNew":"  /* test that a single term is rewritten to a term query */\n  public void testRewrite() throws IOException {\n    PhraseQuery pq = new PhraseQuery(\"foo\", \"bar\");\n    Query rewritten = pq.rewrite(searcher.getIndexReader());\n    assertTrue(rewritten instanceof TermQuery);\n  }\n\n","sourceOld":"  /* test that a single term is rewritten to a term query */\n  public void testRewrite() throws IOException {\n    PhraseQuery pq = new PhraseQuery();\n    pq.add(new Term(\"foo\", \"bar\"));\n    Query rewritten = pq.rewrite(searcher.getIndexReader());\n    assertTrue(rewritten instanceof TermQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9e1499c5d26c936238506df90a3c02c76707722":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9e1499c5d26c936238506df90a3c02c76707722"]},"commit2Childs":{"e9e1499c5d26c936238506df90a3c02c76707722":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e9e1499c5d26c936238506df90a3c02c76707722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}