{"path":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher,ScoreMode,float).mjava","commits":[{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n      return new Weight(CrazyMustUseBulkScorerQuery.this) {\n        @Override\n        public void extractTerms(Set<Term> terms) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return false;\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new Weight(CrazyMustUseBulkScorerQuery.this) {\n        @Override\n        public void extractTerms(Set<Term> terms) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return false;\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n      return new Weight(CrazyMustUseBulkScorerQuery.this) {\n        @Override\n        public void extractTerms(Set<Term> terms) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return false;\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new Weight(CrazyMustUseBulkScorerQuery.this) {\n        @Override\n        public void extractTerms(Set<Term> terms) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return false;\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3","date":1536316907,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher,ScoreMode,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n      return new Weight(CrazyMustUseBulkScorerQuery.this) {\n        @Override\n        public void extractTerms(Set<Term> terms) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return false;\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new ScoreAndDoc());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n      return new Weight(CrazyMustUseBulkScorerQuery.this) {\n        @Override\n        public void extractTerms(Set<Term> terms) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return false;\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7","date":1552575873,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher,ScoreMode,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n      return new Weight(CrazyMustUseBulkScorerQuery.this) {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return false;\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new ScoreAndDoc());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n      return new Weight(CrazyMustUseBulkScorerQuery.this) {\n        @Override\n        public void extractTerms(Set<Term> terms) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return false;\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, Bits acceptDocs, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new ScoreAndDoc());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["417142ff08fda9cf0b72d5133e63097a166c6458"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"],"417142ff08fda9cf0b72d5133e63097a166c6458":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}