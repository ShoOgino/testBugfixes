{"path":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(int,int,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(int,int,boolean).mjava","pathOld":"src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(int,int,boolean).mjava","sourceNew":"        TestIndex(int minR, int maxR, boolean allowNegativeRandomInts) {\n            this.minR = minR;\n            this.maxR = maxR;\n            this.allowNegativeRandomInts = allowNegativeRandomInts;\n        }\n\n","sourceOld":"        TestIndex(int minR, int maxR, boolean allowNegativeRandomInts) {\n            this.minR = minR;\n            this.maxR = maxR;\n            this.allowNegativeRandomInts = allowNegativeRandomInts;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c084e47df29de3330311d69dabf515ceaa989512","date":1279030906,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(int,int,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(int,int,boolean).mjava","sourceNew":"    TestIndex(int minR, int maxR, boolean allowNegativeRandomInts) {\n      this.minR = minR;\n      this.maxR = maxR;\n      this.allowNegativeRandomInts = allowNegativeRandomInts;\n    }\n\n","sourceOld":"        TestIndex(int minR, int maxR, boolean allowNegativeRandomInts) {\n            this.minR = minR;\n            this.maxR = maxR;\n            this.allowNegativeRandomInts = allowNegativeRandomInts;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(int,int,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(int,int,boolean).mjava","sourceNew":"    TestIndex(int minR, int maxR, boolean allowNegativeRandomInts) {\n      this.minR = minR;\n      this.maxR = maxR;\n      this.allowNegativeRandomInts = allowNegativeRandomInts;\n    }\n\n","sourceOld":"        TestIndex(int minR, int maxR, boolean allowNegativeRandomInts) {\n            this.minR = minR;\n            this.maxR = maxR;\n            this.allowNegativeRandomInts = allowNegativeRandomInts;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(int,int,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(int,int,boolean).mjava","sourceNew":"    TestIndex(int minR, int maxR, boolean allowNegativeRandomInts) {\n      this.minR = minR;\n      this.maxR = maxR;\n      this.allowNegativeRandomInts = allowNegativeRandomInts;\n      try {\n        index = newDirectory(rand);\n      } catch (IOException e) { throw new RuntimeException(e); }\n    }\n\n","sourceOld":"    TestIndex(int minR, int maxR, boolean allowNegativeRandomInts) {\n      this.minR = minR;\n      this.maxR = maxR;\n      this.allowNegativeRandomInts = allowNegativeRandomInts;\n    }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(Random,int,int,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(int,int,boolean).mjava","sourceNew":"    TestIndex(Random random, int minR, int maxR, boolean allowNegativeRandomInts) {\n      this.minR = minR;\n      this.maxR = maxR;\n      this.allowNegativeRandomInts = allowNegativeRandomInts;\n      try {\n        index = newDirectory();\n      } catch (IOException e) { throw new RuntimeException(e); }\n    }\n\n","sourceOld":"    TestIndex(int minR, int maxR, boolean allowNegativeRandomInts) {\n      this.minR = minR;\n      this.maxR = maxR;\n      this.allowNegativeRandomInts = allowNegativeRandomInts;\n      try {\n        index = newDirectory(rand);\n      } catch (IOException e) { throw new RuntimeException(e); }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.TestIndex#TestIndex(int,int,boolean).mjava","sourceNew":null,"sourceOld":"    TestIndex(int minR, int maxR, boolean allowNegativeRandomInts) {\n      this.minR = minR;\n      this.maxR = maxR;\n      this.allowNegativeRandomInts = allowNegativeRandomInts;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c084e47df29de3330311d69dabf515ceaa989512":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["c084e47df29de3330311d69dabf515ceaa989512"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["9454a6510e2db155fb01faa5c049b06ece95fab9","c084e47df29de3330311d69dabf515ceaa989512"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","1f653cfcf159baeaafe5d01682a911e95bba4012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c084e47df29de3330311d69dabf515ceaa989512":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","5f4e87790277826a2aea119328600dfb07761f32"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c084e47df29de3330311d69dabf515ceaa989512","5f4e87790277826a2aea119328600dfb07761f32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}