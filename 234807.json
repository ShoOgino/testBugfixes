{"path":"src/java/org/apache/lucene/index/IndexWriter.ReaderPool#get(SegmentInfo,boolean,int).mjava","commits":[{"id":"c4ff8864209d2e972cb4393600c26082f9a6533d","date":1239297466,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter.ReaderPool#get(SegmentInfo,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"    public synchronized SegmentReader get(SegmentInfo info, boolean doOpenStores, int readBufferSize) throws IOException {\n\n      if (poolReaders) {\n        readBufferSize = BufferedIndexInput.BUFFER_SIZE;\n      }\n\n      SegmentReader sr = (SegmentReader) readerMap.get(info);\n      if (sr == null) {\n        // TODO: we may want to avoid doing this while\n        // synchronized\n        // Returns a ref, which we xfer to readerMap:\n        sr = SegmentReader.get(info, readBufferSize, doOpenStores);\n        sr.writer = IndexWriter.this;\n        readerMap.put(info, sr);\n      } else if (doOpenStores) {\n        sr.openDocStores();\n      }\n\n      // Return a ref to our caller\n      sr.incRef();\n      return sr;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter.ReaderPool#get(SegmentInfo,boolean,int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter.ReaderPool#get(SegmentInfo,boolean,int).mjava","sourceNew":"    public synchronized SegmentReader get(SegmentInfo info, boolean doOpenStores, int readBufferSize) throws IOException {\n\n      if (poolReaders) {\n        readBufferSize = BufferedIndexInput.BUFFER_SIZE;\n      }\n\n      SegmentReader sr = (SegmentReader) readerMap.get(info);\n      if (sr == null) {\n        // TODO: we may want to avoid doing this while\n        // synchronized\n        // Returns a ref, which we xfer to readerMap:\n        sr = SegmentReader.get(info, readBufferSize, doOpenStores);\n        readerMap.put(info, sr);\n      } else if (doOpenStores) {\n        sr.openDocStores();\n      }\n\n      // Return a ref to our caller\n      sr.incRef();\n      return sr;\n    }\n\n","sourceOld":"    public synchronized SegmentReader get(SegmentInfo info, boolean doOpenStores, int readBufferSize) throws IOException {\n\n      if (poolReaders) {\n        readBufferSize = BufferedIndexInput.BUFFER_SIZE;\n      }\n\n      SegmentReader sr = (SegmentReader) readerMap.get(info);\n      if (sr == null) {\n        // TODO: we may want to avoid doing this while\n        // synchronized\n        // Returns a ref, which we xfer to readerMap:\n        sr = SegmentReader.get(info, readBufferSize, doOpenStores);\n        sr.writer = IndexWriter.this;\n        readerMap.put(info, sr);\n      } else if (doOpenStores) {\n        sr.openDocStores();\n      }\n\n      // Return a ref to our caller\n      sr.incRef();\n      return sr;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"961159f13aece73fbb30aea720e77a2237e8bafd","date":1247258916,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter.ReaderPool#get(SegmentInfo,boolean,int,int).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter.ReaderPool#get(SegmentInfo,boolean,int).mjava","sourceNew":"    public synchronized SegmentReader get(SegmentInfo info, boolean doOpenStores, int readBufferSize, int termsIndexDivisor) throws IOException {\n\n      if (poolReaders) {\n        readBufferSize = BufferedIndexInput.BUFFER_SIZE;\n      }\n\n      SegmentReader sr = (SegmentReader) readerMap.get(info);\n      if (sr == null) {\n        // TODO: we may want to avoid doing this while\n        // synchronized\n        // Returns a ref, which we xfer to readerMap:\n        sr = SegmentReader.get(info, readBufferSize, doOpenStores, termsIndexDivisor);\n        readerMap.put(info, sr);\n      } else {\n        if (doOpenStores) {\n          sr.openDocStores();\n        }\n        if (termsIndexDivisor != -1 && !sr.termsIndexLoaded()) {\n          // If this reader was originally opened because we\n          // needed to merge it, we didn't load the terms\n          // index.  But now, if the caller wants the terms\n          // index (eg because it's doing deletes, or an NRT\n          // reader is being opened) we ask the reader to\n          // load its terms index.\n          sr.loadTermsIndex(termsIndexDivisor);\n        }\n      }\n\n      // Return a ref to our caller\n      sr.incRef();\n      return sr;\n    }\n\n","sourceOld":"    public synchronized SegmentReader get(SegmentInfo info, boolean doOpenStores, int readBufferSize) throws IOException {\n\n      if (poolReaders) {\n        readBufferSize = BufferedIndexInput.BUFFER_SIZE;\n      }\n\n      SegmentReader sr = (SegmentReader) readerMap.get(info);\n      if (sr == null) {\n        // TODO: we may want to avoid doing this while\n        // synchronized\n        // Returns a ref, which we xfer to readerMap:\n        sr = SegmentReader.get(info, readBufferSize, doOpenStores);\n        readerMap.put(info, sr);\n      } else if (doOpenStores) {\n        sr.openDocStores();\n      }\n\n      // Return a ref to our caller\n      sr.incRef();\n      return sr;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"961159f13aece73fbb30aea720e77a2237e8bafd":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c4ff8864209d2e972cb4393600c26082f9a6533d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["961159f13aece73fbb30aea720e77a2237e8bafd"]},"commit2Childs":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["961159f13aece73fbb30aea720e77a2237e8bafd"],"961159f13aece73fbb30aea720e77a2237e8bafd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"c4ff8864209d2e972cb4393600c26082f9a6533d":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}