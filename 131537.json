{"path":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","commits":[{"id":"4f29ba80b723649f5feb7e37afe1a558dd2c1304","date":1278318805,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[String,ArrayIntList],int,int,float).mjava","sourceNew":"    public Info(HashMap<BytesRef,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n    }\n\n","sourceOld":"    public Info(HashMap<String,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","pathOld":"/dev/null","sourceNew":"    public Info(HashMap<BytesRef,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ecd298fdc085e7eba27afa7fae58df1ba1a2808","date":1295102557,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","sourceNew":"    public Info(HashMap<BytesRef,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n      long sum = 0;\n      for(Map.Entry<BytesRef,ArrayIntList> ent : terms.entrySet()) {\n        sum += ent.getValue().size();\n      }\n      sumTotalTermFreq = sum;\n    }\n\n","sourceOld":"    public Info(HashMap<BytesRef,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16843358872ed92ba92888ab99df297550b9a36a","date":1295144724,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","sourceNew":"    public Info(HashMap<BytesRef,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n      long sum = 0;\n      for(Map.Entry<BytesRef,ArrayIntList> ent : terms.entrySet()) {\n        sum += ent.getValue().size();\n      }\n      sumTotalTermFreq = sum;\n    }\n\n","sourceOld":"    public Info(HashMap<BytesRef,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","sourceNew":"    public Info(HashMap<BytesRef,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n      long sum = 0;\n      for(Map.Entry<BytesRef,ArrayIntList> ent : terms.entrySet()) {\n        sum += ent.getValue().size();\n      }\n      sumTotalTermFreq = sum;\n    }\n\n","sourceOld":"    public Info(HashMap<BytesRef,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.Info#Info(HashMap[BytesRef,ArrayIntList],int,int,float).mjava","sourceNew":"    public Info(HashMap<BytesRef,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n      long sum = 0;\n      for(Map.Entry<BytesRef,ArrayIntList> ent : terms.entrySet()) {\n        sum += ent.getValue().size();\n      }\n      sumTotalTermFreq = sum;\n    }\n\n","sourceOld":"    public Info(HashMap<BytesRef,ArrayIntList> terms, int numTokens, int numOverlapTokens, float boost) {\n      this.terms = terms;\n      this.numTokens = numTokens;\n      this.numOverlapTokens = numOverlapTokens;\n      this.boost = boost;\n      long sum = 0;\n      for(Map.Entry<BytesRef,ArrayIntList> ent : terms.entrySet()) {\n        sum += ent.getValue().size();\n      }\n      sumTotalTermFreq = sum;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16843358872ed92ba92888ab99df297550b9a36a":["5f4e87790277826a2aea119328600dfb07761f32","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["29ef99d61cda9641b6250bf9567329a6e65f901d","5f4e87790277826a2aea119328600dfb07761f32","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","5f4e87790277826a2aea119328600dfb07761f32"],"16843358872ed92ba92888ab99df297550b9a36a":[],"5f4e87790277826a2aea119328600dfb07761f32":["16843358872ed92ba92888ab99df297550b9a36a"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["b89678825b68eccaf09e6ab71675fc0b0af1e099","29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}