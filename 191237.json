{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/ConversionEvaluatorsTest#testInvalidExpression().mjava","commits":[{"id":"c84219732de95c058a8de66ece93c70ad1b1051c","date":1492441745,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/ConversionEvaluatorsTest#testInvalidExpression().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInvalidExpression() throws Exception {\n\n    StreamEvaluator evaluator;\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"Invalid expression convert(inches) - expecting 3 value but found 1\"));\n    }\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches, yards, 3)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      Tuple tuple = new Tuple(new HashMap());\n      evaluator.evaluate(tuple);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"No conversion available from INCHES to YARDS\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/ConversionEvaluatorsTest#testInvalidExpression().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInvalidExpression() throws Exception {\n\n    StreamEvaluator evaluator;\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"Invalid expression convert(inches) - expecting 3 value but found 1\"));\n    }\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches, yards, 3)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      Tuple tuple = new Tuple(new HashMap());\n      evaluator.evaluate(tuple);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"No conversion available from INCHES to YARDS\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1e7de64990e3928b90142a52fb92eeff556475","date":1503713257,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/ConversionEvaluatorsTest#testInvalidExpression().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/ConversionEvaluatorsTest#testInvalidExpression().mjava","sourceNew":"  @Test\n  public void testInvalidExpression() throws Exception {\n\n    StreamEvaluator evaluator;\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertEquals(\"Invalid expression convert(inches) - expecting exactly 3 parameters but found 1\", e.getCause().getCause().getMessage());\n    }\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches, yards, 3)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      Tuple tuple = new Tuple(new HashMap());\n      evaluator.evaluate(tuple);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"No conversion available from INCHES to YARDS\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidExpression() throws Exception {\n\n    StreamEvaluator evaluator;\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"Invalid expression convert(inches) - expecting 3 value but found 1\"));\n    }\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches, yards, 3)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      Tuple tuple = new Tuple(new HashMap());\n      evaluator.evaluate(tuple);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"No conversion available from INCHES to YARDS\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45c28dbb559366e1f4ef8077346552bfb3f7ecf6","date":1503738439,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/ConversionEvaluatorsTest#testInvalidExpression().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/ConversionEvaluatorsTest#testInvalidExpression().mjava","sourceNew":"  @Test\n  public void testInvalidExpression() throws Exception {\n\n    StreamEvaluator evaluator;\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertEquals(\"Invalid expression convert(inches) - expecting exactly 3 parameters but found 1\", e.getCause().getCause().getMessage());\n    }\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches, yards, 3)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      Tuple tuple = new Tuple(new HashMap());\n      evaluator.evaluate(tuple);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"No conversion available from INCHES to YARDS\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidExpression() throws Exception {\n\n    StreamEvaluator evaluator;\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"Invalid expression convert(inches) - expecting 3 value but found 1\"));\n    }\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches, yards, 3)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      Tuple tuple = new Tuple(new HashMap());\n      evaluator.evaluate(tuple);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"No conversion available from INCHES to YARDS\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/ConversionEvaluatorsTest#testInvalidExpression().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/ConversionEvaluatorsTest#testInvalidExpression().mjava","sourceNew":"  @Test\n  public void testInvalidExpression() throws Exception {\n\n    StreamEvaluator evaluator;\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertEquals(\"Invalid expression convert(inches) - expecting exactly 3 parameters but found 1\", e.getCause().getCause().getMessage());\n    }\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches, yards, 3)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      Tuple tuple = new Tuple(new HashMap());\n      evaluator.evaluate(tuple);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"No conversion available from INCHES to YARDS\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidExpression() throws Exception {\n\n    StreamEvaluator evaluator;\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"Invalid expression convert(inches) - expecting 3 value but found 1\"));\n    }\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches, yards, 3)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      Tuple tuple = new Tuple(new HashMap());\n      evaluator.evaluate(tuple);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"No conversion available from INCHES to YARDS\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/ConversionEvaluatorsTest#testInvalidExpression().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/ConversionEvaluatorsTest#testInvalidExpression().mjava","sourceNew":"  @Test\n  public void testInvalidExpression() throws Exception {\n\n    StreamEvaluator evaluator;\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertEquals(\"Invalid expression convert(inches) - expecting exactly 3 parameters but found 1\", e.getCause().getCause().getMessage());\n    }\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches, yards, 3)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      @SuppressWarnings({\"rawtypes\"})\n      Tuple tuple = new Tuple(new HashMap());\n      evaluator.evaluate(tuple);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"No conversion available from INCHES to YARDS\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidExpression() throws Exception {\n\n    StreamEvaluator evaluator;\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertEquals(\"Invalid expression convert(inches) - expecting exactly 3 parameters but found 1\", e.getCause().getCause().getMessage());\n    }\n\n    try {\n      evaluator = factory.constructEvaluator(\"convert(inches, yards, 3)\");\n      StreamContext streamContext = new StreamContext();\n      evaluator.setStreamContext(streamContext);\n      Tuple tuple = new Tuple(new HashMap());\n      evaluator.evaluate(tuple);\n      assertTrue(false);\n    } catch (IOException e) {\n      assertTrue(e.getCause().getCause().getMessage().contains(\"No conversion available from INCHES to YARDS\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c84219732de95c058a8de66ece93c70ad1b1051c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["c84219732de95c058a8de66ece93c70ad1b1051c","ba1e7de64990e3928b90142a52fb92eeff556475"],"ba1e7de64990e3928b90142a52fb92eeff556475":["c84219732de95c058a8de66ece93c70ad1b1051c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"c84219732de95c058a8de66ece93c70ad1b1051c":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6","ba1e7de64990e3928b90142a52fb92eeff556475"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","c84219732de95c058a8de66ece93c70ad1b1051c"],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["9ba1b632c041956c93c41aa1143d16a567014891","3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"ba1e7de64990e3928b90142a52fb92eeff556475":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}