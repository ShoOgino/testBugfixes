{"path":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#stop().mjava","commits":[{"id":"bc6055f4a2e8e9f9caaec2297010c9502480ed69","date":1050060580,"type":0,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#stop().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Aborts all the requests currently in progress on this connection and\n     * closes all associated sockets. You usually do <em>not</em> need to invoke\n     * this - it only meant for when you need to abruptly stop things, such as\n     * for example the stop button in a browser. <P>\n     *\n     * Note: there is a small window where a request method such as <code>Get()</code>\n     * may have been invoked but the request has not been built and added to the\n     * list. Any request in this window will not be aborted.\n     *\n     * @since   V0.2-3\n     */\n    public void stop()\n    {\n        for (Request req = (Request) RequestList.enumerate(); req != null;\n                req = (Request) RequestList.next())\n        {\n            req.aborted = true;\n        }\n\n        for (StreamDemultiplexor demux =\n                (StreamDemultiplexor) DemuxList.enumerate();\n                demux != null; demux = (StreamDemultiplexor) DemuxList.next())\n        {\n            demux.abort();\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#stop().mjava","sourceNew":null,"sourceOld":"    /**\n     * Aborts all the requests currently in progress on this connection and\n     * closes all associated sockets. You usually do <em>not</em> need to invoke\n     * this - it only meant for when you need to abruptly stop things, such as\n     * for example the stop button in a browser. <P>\n     *\n     * Note: there is a small window where a request method such as <code>Get()</code>\n     * may have been invoked but the request has not been built and added to the\n     * list. Any request in this window will not be aborted.\n     *\n     * @since   V0.2-3\n     */\n    public void stop()\n    {\n        for (Request req = (Request) RequestList.enumerate(); req != null;\n                req = (Request) RequestList.next())\n        {\n            req.aborted = true;\n        }\n\n        for (StreamDemultiplexor demux =\n                (StreamDemultiplexor) DemuxList.enumerate();\n                demux != null; demux = (StreamDemultiplexor) DemuxList.next())\n        {\n            demux.abort();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}