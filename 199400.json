{"path":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","commits":[{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,ReaderContext).mjava","sourceNew":"  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","sourceOld":"  public DocIdSet getDocIdSet(final Map context, final ReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext.reader).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       @Override\n      public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","sourceOld":"  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       @Override\n      public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       @Override\n      public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","sourceOld":"  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       @Override\n      public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       @Override\n      public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       @Override\n      public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       @Override\n      public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter#getDocIdSet(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       @Override\n      public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final Map context, final AtomicReaderContext readerContext) throws IOException {\n     return new DocIdSet() {\n       @Override\n      public DocIdSetIterator iterator() throws IOException {\n         return valueSource.getValues(context, readerContext).getRangeScorer(readerContext.reader, lowerVal, upperVal, includeLower, includeUpper);\n       }\n     };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["c220849f876de24a79f756f65b3eb045db59f63f"],"c220849f876de24a79f756f65b3eb045db59f63f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"c26f00b574427b55127e869b935845554afde1fa":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c220849f876de24a79f756f65b3eb045db59f63f"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["868da859b43505d9d2a023bfeae6dd0c795f5295","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c220849f876de24a79f756f65b3eb045db59f63f":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","868da859b43505d9d2a023bfeae6dd0c795f5295"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c220849f876de24a79f756f65b3eb045db59f63f","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}