{"path":"solr/core/src/java/org/apache/solr/schema/DoublePointField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","commits":[{"id":"46dc9ac8b3e748407baaef82453138ff3974480c","date":1484789241,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/DoublePointField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    double actualMin, actualMax;\n    if (min == null) {\n      actualMin = Double.NEGATIVE_INFINITY;\n    } else {\n      actualMin = Double.parseDouble(min);\n      if (!minInclusive) {\n        actualMin = DoublePoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Double.POSITIVE_INFINITY;\n    } else {\n      actualMax = Double.parseDouble(max);\n      if (!maxInclusive) {\n        actualMax = DoublePoint.nextDown(actualMax);\n      }\n    }\n    return DoublePoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["92f8ab19a30ff70981e43b8cc78069cb0941476e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3cdd24a5b48ffd59f921ccc4f5199fc029f65797","date":1485039431,"type":5,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/DoublePointField#getPointRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/DoublePointField#getRangeQuery(QParser,SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  @Override\n  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    double actualMin, actualMax;\n    if (min == null) {\n      actualMin = Double.NEGATIVE_INFINITY;\n    } else {\n      actualMin = Double.parseDouble(min);\n      if (!minInclusive) {\n        actualMin = DoublePoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Double.POSITIVE_INFINITY;\n    } else {\n      actualMax = Double.parseDouble(max);\n      if (!maxInclusive) {\n        actualMax = DoublePoint.nextDown(actualMax);\n      }\n    }\n    return DoublePoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n\n","sourceOld":"  @Override\n  public Query getRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    double actualMin, actualMax;\n    if (min == null) {\n      actualMin = Double.NEGATIVE_INFINITY;\n    } else {\n      actualMin = Double.parseDouble(min);\n      if (!minInclusive) {\n        actualMin = DoublePoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Double.POSITIVE_INFINITY;\n    } else {\n      actualMax = Double.parseDouble(max);\n      if (!maxInclusive) {\n        actualMax = DoublePoint.nextDown(actualMax);\n      }\n    }\n    return DoublePoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3cdd24a5b48ffd59f921ccc4f5199fc029f65797":["46dc9ac8b3e748407baaef82453138ff3974480c"],"46dc9ac8b3e748407baaef82453138ff3974480c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cdd24a5b48ffd59f921ccc4f5199fc029f65797"]},"commit2Childs":{"3cdd24a5b48ffd59f921ccc4f5199fc029f65797":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"46dc9ac8b3e748407baaef82453138ff3974480c":["3cdd24a5b48ffd59f921ccc4f5199fc029f65797"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["46dc9ac8b3e748407baaef82453138ff3974480c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}