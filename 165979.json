{"path":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","commits":[{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","sourceNew":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFields() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFields().mjava","sourceNew":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFields() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbaae1c00d39df2c872bbe043af26d02d3818313","date":1409657064,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","sourceNew":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"foo_direct\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"bar_direct\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"foo_pulsing\").getName());\n    assertEquals(\"Pulsing41\", format.getPostingsFormatForField(\"bar_pulsing\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a19b69cac04945230af7260c5b1cee8341235d13","date":1413591570,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","sourceNew":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"foo_direct\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"bar_direct\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"foo_direct\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"bar_direct\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","sourceNew":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"foo_direct\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"bar_direct\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"foo_direct\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"bar_direct\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(\"Lucene41\", format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71488d7f5786ae87541276121ecb69705a11a295","date":1465498138,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","sourceNew":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"foo_direct\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"bar_direct\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"foo_direct\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"bar_direct\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecSupport#testDynamicFieldsPostingsFormats().mjava","sourceNew":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"foo_direct\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"bar_direct\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","sourceOld":"  public void testDynamicFieldsPostingsFormats() {\n    Codec codec = h.getCore().getCodec();\n    PerFieldPostingsFormat format = (PerFieldPostingsFormat) codec.postingsFormat();\n\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"foo_simple\").getName());\n    assertEquals(\"SimpleText\", format.getPostingsFormatForField(\"bar_simple\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"foo_direct\").getName());\n    assertEquals(\"Direct\", format.getPostingsFormatForField(\"bar_direct\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"foo_standard\").getName());\n    assertEquals(TestUtil.getDefaultPostingsFormat().getName(), format.getPostingsFormatForField(\"bar_standard\").getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fbaae1c00d39df2c872bbe043af26d02d3818313":["73bb5a57dc75b54a39494f99986599cae7dff417"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","73bb5a57dc75b54a39494f99986599cae7dff417"],"a19b69cac04945230af7260c5b1cee8341235d13":["fbaae1c00d39df2c872bbe043af26d02d3818313"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71488d7f5786ae87541276121ecb69705a11a295":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["fbaae1c00d39df2c872bbe043af26d02d3818313","a19b69cac04945230af7260c5b1cee8341235d13"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238","71488d7f5786ae87541276121ecb69705a11a295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71488d7f5786ae87541276121ecb69705a11a295"],"73bb5a57dc75b54a39494f99986599cae7dff417":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fbaae1c00d39df2c872bbe043af26d02d3818313":["a19b69cac04945230af7260c5b1cee8341235d13","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"a19b69cac04945230af7260c5b1cee8341235d13":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["95303ff3749680c743b9425f9cf99e6e4065e8a8","73bb5a57dc75b54a39494f99986599cae7dff417"],"71488d7f5786ae87541276121ecb69705a11a295":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["71488d7f5786ae87541276121ecb69705a11a295","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"73bb5a57dc75b54a39494f99986599cae7dff417":["fbaae1c00d39df2c872bbe043af26d02d3818313","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["95303ff3749680c743b9425f9cf99e6e4065e8a8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}