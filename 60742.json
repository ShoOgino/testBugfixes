{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(int,boolean).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n\n    long skipPos = skipOut.getFilePointer();\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert docCount > 0;\n    assert docCount == df;\n\n    // TODO: -- only do this if once (consolidate the\n    // conditional things that are written)\n    if (!omitTF) {\n      freqIndex.write(termsOut, isIndexTerm);\n    }\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    if (isIndexTerm) {\n      termsOut.writeVLong(skipPos);\n      lastSkipStart = skipPos;\n    } else if (df >= skipInterval) {\n      termsOut.writeVLong(skipPos-lastSkipStart);\n      lastSkipStart = skipPos;\n    }\n\n    if (!omitTF) {\n      posIndex.write(termsOut, isIndexTerm);\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(payloadStart);\n      } else {\n        termsOut.writeVLong(payloadStart-lastPayloadStart);\n      }\n      lastPayloadStart = payloadStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8df828f6eb8a46ba5a58ab37d00659165feb274f","date":1288433840,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(int,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert docCount > 0;\n    assert docCount == df;\n\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n\n    long skipPos = skipOut.getFilePointer();\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert docCount > 0;\n    assert docCount == df;\n\n    // TODO: -- only do this if once (consolidate the\n    // conditional things that are written)\n    if (!omitTF) {\n      freqIndex.write(termsOut, isIndexTerm);\n    }\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    if (isIndexTerm) {\n      termsOut.writeVLong(skipPos);\n      lastSkipStart = skipPos;\n    } else if (df >= skipInterval) {\n      termsOut.writeVLong(skipPos-lastSkipStart);\n      lastSkipStart = skipPos;\n    }\n\n    if (!omitTF) {\n      posIndex.write(termsOut, isIndexTerm);\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(payloadStart);\n      } else {\n        termsOut.writeVLong(payloadStart-lastPayloadStart);\n      }\n      lastPayloadStart = payloadStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(int,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert docCount > 0;\n    assert docCount == df;\n\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n\n    long skipPos = skipOut.getFilePointer();\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert docCount > 0;\n    assert docCount == df;\n\n    // TODO: -- only do this if once (consolidate the\n    // conditional things that are written)\n    if (!omitTF) {\n      freqIndex.write(termsOut, isIndexTerm);\n    }\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    if (isIndexTerm) {\n      termsOut.writeVLong(skipPos);\n      lastSkipStart = skipPos;\n    } else if (df >= skipInterval) {\n      termsOut.writeVLong(skipPos-lastSkipStart);\n      lastSkipStart = skipPos;\n    }\n\n    if (!omitTF) {\n      posIndex.write(termsOut, isIndexTerm);\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(payloadStart);\n      } else {\n        termsOut.writeVLong(payloadStart-lastPayloadStart);\n      }\n      lastPayloadStart = payloadStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(int,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert docCount > 0;\n    assert docCount == df;\n\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n\n    long skipPos = skipOut.getFilePointer();\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert docCount > 0;\n    assert docCount == df;\n\n    // TODO: -- only do this if once (consolidate the\n    // conditional things that are written)\n    if (!omitTF) {\n      freqIndex.write(termsOut, isIndexTerm);\n    }\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    if (isIndexTerm) {\n      termsOut.writeVLong(skipPos);\n      lastSkipStart = skipPos;\n    } else if (df >= skipInterval) {\n      termsOut.writeVLong(skipPos-lastSkipStart);\n      lastSkipStart = skipPos;\n    }\n\n    if (!omitTF) {\n      posIndex.write(termsOut, isIndexTerm);\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(payloadStart);\n      } else {\n        termsOut.writeVLong(payloadStart-lastPayloadStart);\n      }\n      lastPayloadStart = payloadStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ecd298fdc085e7eba27afa7fae58df1ba1a2808","date":1295102557,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(TermStats,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(int,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(TermStats stats, boolean isIndexTerm) throws IOException {\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert stats.docFreq > 0;\n    assert stats.docFreq == df;\n\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert docCount > 0;\n    assert docCount == df;\n\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16843358872ed92ba92888ab99df297550b9a36a","date":1295144724,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(TermStats,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(int,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(TermStats stats, boolean isIndexTerm) throws IOException {\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert stats.docFreq > 0;\n    assert stats.docFreq == df;\n\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert docCount > 0;\n    assert docCount == df;\n\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsWriterImpl#finishTerm(int,boolean).mjava","sourceNew":null,"sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n\n    // TODO: -- wasteful we are counting this in two places?\n    assert docCount > 0;\n    assert docCount == df;\n\n    docIndex.write(termsOut, isIndexTerm);\n\n    if (df >= skipInterval) {\n      skipListWriter.writeSkip(skipOut);\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8df828f6eb8a46ba5a58ab37d00659165feb274f":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["85a883878c0af761245ab048babc63d099f835f3","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","8df828f6eb8a46ba5a58ab37d00659165feb274f"],"16843358872ed92ba92888ab99df297550b9a36a":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","8df828f6eb8a46ba5a58ab37d00659165feb274f"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["8df828f6eb8a46ba5a58ab37d00659165feb274f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6ecd298fdc085e7eba27afa7fae58df1ba1a2808"]},"commit2Childs":{"8df828f6eb8a46ba5a58ab37d00659165feb274f":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"85a883878c0af761245ab048babc63d099f835f3":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"16843358872ed92ba92888ab99df297550b9a36a":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["8df828f6eb8a46ba5a58ab37d00659165feb274f","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["16843358872ed92ba92888ab99df297550b9a36a"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}