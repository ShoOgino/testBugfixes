{"path":"lucene/backwards/src/java/org/apache/lucene/search/DocIdSetIterator#advance(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/DocIdSetIterator#advance(int).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/DocIdSetIterator#advance(int).mjava","sourceNew":"  /**\n   * Advances to the first beyond the current whose document number is greater\n   * than or equal to <i>target</i>. Returns the current document number or\n   * {@link #NO_MORE_DOCS} if there are no more docs in the set.\n   * <p>\n   * Behaves as if written:\n   * \n   * <pre>\n   * int advance(int target) {\n   *   int doc;\n   *   while ((doc = nextDoc()) &lt; target) {\n   *   }\n   *   return doc;\n   * }\n   * </pre>\n   * \n   * Some implementations are considerably more efficient than that.\n   * <p>\n   * <b>NOTE:</b> certain implementations may return a different value (each\n   * time) if called several times in a row with the same target.\n   * <p>\n   * <b>NOTE:</b> this method may be called with {@value #NO_MORE_DOCS} for\n   * efficiency by some Scorers. If your implementation cannot efficiently\n   * determine that it should exhaust, it is recommended that you check for that\n   * value in each call to this method.\n   * <p>\n   * <b>NOTE:</b> after the iterator has exhausted you should not call this\n   * method, as it may result in unpredicted behavior.\n   * <p>\n   * \n   * @since 2.9\n   */\n  public abstract int advance(int target) throws IOException;\n\n","sourceOld":"  /**\n   * Advances to the first beyond the current whose document number is greater\n   * than or equal to <i>target</i>. Returns the current document number or\n   * {@link #NO_MORE_DOCS} if there are no more docs in the set.\n   * <p>\n   * Behaves as if written:\n   * \n   * <pre>\n   * int advance(int target) {\n   *   int doc;\n   *   while ((doc = nextDoc()) &lt; target) {\n   *   }\n   *   return doc;\n   * }\n   * </pre>\n   * \n   * Some implementations are considerably more efficient than that.\n   * <p>\n   * <b>NOTE:</b> certain implementations may return a different value (each\n   * time) if called several times in a row with the same target.\n   * <p>\n   * <b>NOTE:</b> this method may be called with {@value #NO_MORE_DOCS} for\n   * efficiency by some Scorers. If your implementation cannot efficiently\n   * determine that it should exhaust, it is recommended that you check for that\n   * value in each call to this method.\n   * <p>\n   * <b>NOTE:</b> after the iterator has exhausted you should not call this\n   * method, as it may result in unpredicted behavior.\n   * <p>\n   * \n   * @since 2.9\n   */\n  public abstract int advance(int target) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/search/DocIdSetIterator#advance(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Advances to the first beyond the current whose document number is greater\n   * than or equal to <i>target</i>. Returns the current document number or\n   * {@link #NO_MORE_DOCS} if there are no more docs in the set.\n   * <p>\n   * Behaves as if written:\n   * \n   * <pre>\n   * int advance(int target) {\n   *   int doc;\n   *   while ((doc = nextDoc()) &lt; target) {\n   *   }\n   *   return doc;\n   * }\n   * </pre>\n   * \n   * Some implementations are considerably more efficient than that.\n   * <p>\n   * <b>NOTE:</b> certain implementations may return a different value (each\n   * time) if called several times in a row with the same target.\n   * <p>\n   * <b>NOTE:</b> this method may be called with {@value #NO_MORE_DOCS} for\n   * efficiency by some Scorers. If your implementation cannot efficiently\n   * determine that it should exhaust, it is recommended that you check for that\n   * value in each call to this method.\n   * <p>\n   * <b>NOTE:</b> after the iterator has exhausted you should not call this\n   * method, as it may result in unpredicted behavior.\n   * <p>\n   * \n   * @since 2.9\n   */\n  public abstract int advance(int target) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}