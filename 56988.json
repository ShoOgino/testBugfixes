{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","commits":[{"id":"7d81c8cf020ec9c6cead8805f9ad276d24d9373b","date":1496105305,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c45a3d60b844e1d970c169f8a5c19c035389e82","date":1497801057,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(subEvaluators.size() < 2) {\n      throw new IOException(\"ANOVA evaluator expects atleast 2 parameters found: \"+subEvaluators.size());\n    }\n  }\n\n","sourceOld":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79b159f90b30e102a19464d26c4f5ca83e5f65bf","date":1497801057,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(subEvaluators.size() < 2){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least two values but found %d\",expression,subEvaluators.size()));\n    }\n  }\n\n","sourceOld":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(subEvaluators.size() < 2) {\n      throw new IOException(\"ANOVA evaluator expects atleast 2 parameters found: \"+subEvaluators.size());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(subEvaluators.size() < 2){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least two values but found %d\",expression,subEvaluators.size()));\n    }\n  }\n\n","sourceOld":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(subEvaluators.size() < 2){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least two values but found %d\",expression,subEvaluators.size()));\n    }\n  }\n\n","sourceOld":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1e7de64990e3928b90142a52fb92eeff556475","date":1503713257,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{\n    super(expression, factory);\n    \n    if(containedEvaluators.size() < 1){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least one value but found %d\",expression,containedEvaluators.size()));\n    }\n  }\n\n","sourceOld":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(subEvaluators.size() < 2){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least two values but found %d\",expression,subEvaluators.size()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45c28dbb559366e1f4ef8077346552bfb3f7ecf6","date":1503738439,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{\n    super(expression, factory);\n    \n    if(containedEvaluators.size() < 1){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least one value but found %d\",expression,containedEvaluators.size()));\n    }\n  }\n\n","sourceOld":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(subEvaluators.size() < 2){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least two values but found %d\",expression,subEvaluators.size()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AnovaEvaluator#AnovaEvaluator(StreamExpression,StreamFactory).mjava","sourceNew":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{\n    super(expression, factory);\n    \n    if(containedEvaluators.size() < 1){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least one value but found %d\",expression,containedEvaluators.size()));\n    }\n  }\n\n","sourceOld":"  public AnovaEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {\n    super(expression, factory);\n    \n    if(subEvaluators.size() < 2){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least two values but found %d\",expression,subEvaluators.size()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7d81c8cf020ec9c6cead8805f9ad276d24d9373b"],"7d81c8cf020ec9c6cead8805f9ad276d24d9373b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c45a3d60b844e1d970c169f8a5c19c035389e82":["7d81c8cf020ec9c6cead8805f9ad276d24d9373b"],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["28288370235ed02234a64753cdbf0c6ec096304a","ba1e7de64990e3928b90142a52fb92eeff556475"],"ba1e7de64990e3928b90142a52fb92eeff556475":["28288370235ed02234a64753cdbf0c6ec096304a"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7d81c8cf020ec9c6cead8805f9ad276d24d9373b"],"28288370235ed02234a64753cdbf0c6ec096304a":["d1f5728f32a4a256b36cfabd7a2636452f599bb9","79b159f90b30e102a19464d26c4f5ca83e5f65bf"],"79b159f90b30e102a19464d26c4f5ca83e5f65bf":["2c45a3d60b844e1d970c169f8a5c19c035389e82"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e9017cf144952056066919f1ebc7897ff9bd71b1","79b159f90b30e102a19464d26c4f5ca83e5f65bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"7d81c8cf020ec9c6cead8805f9ad276d24d9373b":["e9017cf144952056066919f1ebc7897ff9bd71b1","2c45a3d60b844e1d970c169f8a5c19c035389e82","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","7d81c8cf020ec9c6cead8805f9ad276d24d9373b","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"2c45a3d60b844e1d970c169f8a5c19c035389e82":["79b159f90b30e102a19464d26c4f5ca83e5f65bf"],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba1e7de64990e3928b90142a52fb92eeff556475":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"28288370235ed02234a64753cdbf0c6ec096304a":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6","ba1e7de64990e3928b90142a52fb92eeff556475"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["28288370235ed02234a64753cdbf0c6ec096304a"],"79b159f90b30e102a19464d26c4f5ca83e5f65bf":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}