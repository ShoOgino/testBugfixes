{"path":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsFlat(String,NamedList).mjava","commits":[{"id":"4145b7b13874de95211223a6edb648da8794a688","date":1170182192,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsFlat(String,NamedList).mjava","pathOld":"/dev/null","sourceNew":"  // Represents a NamedList directly as an array with keys/values\n  // interleaved.\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [\"a\",1,\"b\",2,null,3]\n  protected void writeNamedListAsFlat(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    indent();\n    writer.write('[');\n    incLevel();\n\n    for (int i=0; i<sz; i++) {\n      if (i!=0) {\n        writer.write(',');\n      }\n      String key = val.getName(i);\n      indent();\n      writeStr(null, key, true);\n      writer.write(',');\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writer.write(']');\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e824bfb49f3546913db1d6255af1f82121f92b","date":1170699724,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsFlat(String,NamedList).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsFlat(String,NamedList).mjava","sourceNew":"  // Represents a NamedList directly as an array with keys/values\n  // interleaved.\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [\"a\",1,\"b\",2,null,3]\n  protected void writeNamedListAsFlat(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    writer.write('[');\n    incLevel();\n\n    for (int i=0; i<sz; i++) {\n      if (i!=0) {\n        writer.write(',');\n      }\n      String key = val.getName(i);\n      indent();\n      if (key==null) {\n        writeNull(null);\n      } else {\n        writeStr(null, key, true);\n      }\n      writer.write(',');\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writer.write(']');\n  }\n\n","sourceOld":"  // Represents a NamedList directly as an array with keys/values\n  // interleaved.\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [\"a\",1,\"b\",2,null,3]\n  protected void writeNamedListAsFlat(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    indent();\n    writer.write('[');\n    incLevel();\n\n    for (int i=0; i<sz; i++) {\n      if (i!=0) {\n        writer.write(',');\n      }\n      String key = val.getName(i);\n      indent();\n      writeStr(null, key, true);\n      writer.write(',');\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writer.write(']');\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13baf5514709a27de4ff67151d35b715138d158d","date":1186803122,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsFlat(String,NamedList).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsFlat(String,NamedList).mjava","sourceNew":"  // Represents a NamedList directly as an array with keys/values\n  // interleaved.\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [\"a\",1,\"b\",2,null,3]\n  protected void writeNamedListAsFlat(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    writeArrayOpener(sz);\n    incLevel();\n\n    for (int i=0; i<sz; i++) {\n      if (i!=0) {\n        writeArraySeparator();\n      }\n      String key = val.getName(i);\n      indent();\n      if (key==null) {\n        writeNull(null);\n      } else {\n        writeStr(null, key, true);\n      }\n      writeArraySeparator();\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeArrayCloser();\n  }\n\n","sourceOld":"  // Represents a NamedList directly as an array with keys/values\n  // interleaved.\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [\"a\",1,\"b\",2,null,3]\n  protected void writeNamedListAsFlat(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    writer.write('[');\n    incLevel();\n\n    for (int i=0; i<sz; i++) {\n      if (i!=0) {\n        writer.write(',');\n      }\n      String key = val.getName(i);\n      indent();\n      if (key==null) {\n        writeNull(null);\n      } else {\n        writeStr(null, key, true);\n      }\n      writer.write(',');\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writer.write(']');\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10b17ff7ad534c3b34a34944d80a87d217011d9c","date":1263262796,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeNamedListAsFlat(String,NamedList).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsFlat(String,NamedList).mjava","sourceNew":"  // Represents a NamedList directly as an array with keys/values\n  // interleaved.\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [\"a\",1,\"b\",2,null,3]\n  protected void writeNamedListAsFlat(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    writeArrayOpener(sz);\n    incLevel();\n\n    for (int i=0; i<sz; i++) {\n      if (i!=0) {\n        writeArraySeparator();\n      }\n      String key = val.getName(i);\n      indent();\n      if (key==null) {\n        writeNull(null);\n      } else {\n        writeStr(null, key, true);\n      }\n      writeArraySeparator();\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeArrayCloser();\n  }\n\n","sourceOld":"  // Represents a NamedList directly as an array with keys/values\n  // interleaved.\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [\"a\",1,\"b\",2,null,3]\n  protected void writeNamedListAsFlat(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    writeArrayOpener(sz);\n    incLevel();\n\n    for (int i=0; i<sz; i++) {\n      if (i!=0) {\n        writeArraySeparator();\n      }\n      String key = val.getName(i);\n      indent();\n      if (key==null) {\n        writeNull(null);\n      } else {\n        writeStr(null, key, true);\n      }\n      writeArraySeparator();\n      writeVal(key, val.getVal(i));\n    }\n\n    decLevel();\n    writeArrayCloser();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b4e824bfb49f3546913db1d6255af1f82121f92b":["4145b7b13874de95211223a6edb648da8794a688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"13baf5514709a27de4ff67151d35b715138d158d":["b4e824bfb49f3546913db1d6255af1f82121f92b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"10b17ff7ad534c3b34a34944d80a87d217011d9c":["13baf5514709a27de4ff67151d35b715138d158d"],"4145b7b13874de95211223a6edb648da8794a688":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b4e824bfb49f3546913db1d6255af1f82121f92b":["13baf5514709a27de4ff67151d35b715138d158d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"13baf5514709a27de4ff67151d35b715138d158d":["10b17ff7ad534c3b34a34944d80a87d217011d9c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4145b7b13874de95211223a6edb648da8794a688"],"10b17ff7ad534c3b34a34944d80a87d217011d9c":[],"4145b7b13874de95211223a6edb648da8794a688":["b4e824bfb49f3546913db1d6255af1f82121f92b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["10b17ff7ad534c3b34a34944d80a87d217011d9c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}