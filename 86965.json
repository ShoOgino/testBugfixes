{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#lookup(CharSequence,Set[BytesRef],boolean,int).mjava","commits":[{"id":"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b","date":1395588343,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#lookup(CharSequence,Set[BytesRef],boolean,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#lookup(CharSequence,boolean,int).mjava","sourceNew":"  @Override\n  public List<LookupResult> lookup(CharSequence key, Set<BytesRef> contexts, boolean higherWeightsFirst, int num) {\n    if (contexts != null) {\n      throw new IllegalArgumentException(\"this suggester doesn't support contexts\");\n    }\n    final List<Completion> completions;\n    if (higherWeightsFirst) {\n      completions = higherWeightsCompletion.lookup(key, num);\n    } else {\n      completions = normalCompletion.lookup(key, num);\n    }\n    \n    final ArrayList<LookupResult> results = new ArrayList<>(completions.size());\n    CharsRef spare = new CharsRef();\n    for (Completion c : completions) {\n      spare.grow(c.utf8.length);\n      UnicodeUtil.UTF8toUTF16(c.utf8, spare);\n      results.add(new LookupResult(spare.toString(), c.bucket));\n    }\n    return results;\n  }\n\n","sourceOld":"  @Override\n  public List<LookupResult> lookup(CharSequence key, boolean higherWeightsFirst, int num) {\n    final List<Completion> completions;\n    if (higherWeightsFirst) {\n      completions = higherWeightsCompletion.lookup(key, num);\n    } else {\n      completions = normalCompletion.lookup(key, num);\n    }\n    \n    final ArrayList<LookupResult> results = new ArrayList<>(completions.size());\n    CharsRef spare = new CharsRef();\n    for (Completion c : completions) {\n      spare.grow(c.utf8.length);\n      UnicodeUtil.UTF8toUTF16(c.utf8, spare);\n      results.add(new LookupResult(spare.toString(), c.bucket));\n    }\n    return results;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#lookup(CharSequence,Set[BytesRef],boolean,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#lookup(CharSequence,Set[BytesRef],boolean,int).mjava","sourceNew":"  @Override\n  public List<LookupResult> lookup(CharSequence key, Set<BytesRef> contexts, boolean higherWeightsFirst, int num) {\n    if (contexts != null) {\n      throw new IllegalArgumentException(\"this suggester doesn't support contexts\");\n    }\n    final List<Completion> completions;\n    if (higherWeightsFirst) {\n      completions = higherWeightsCompletion.lookup(key, num);\n    } else {\n      completions = normalCompletion.lookup(key, num);\n    }\n    \n    final ArrayList<LookupResult> results = new ArrayList<>(completions.size());\n    CharsRefBuilder spare = new CharsRefBuilder();\n    for (Completion c : completions) {\n      spare.copyUTF8Bytes(c.utf8);\n      results.add(new LookupResult(spare.toString(), c.bucket));\n    }\n    return results;\n  }\n\n","sourceOld":"  @Override\n  public List<LookupResult> lookup(CharSequence key, Set<BytesRef> contexts, boolean higherWeightsFirst, int num) {\n    if (contexts != null) {\n      throw new IllegalArgumentException(\"this suggester doesn't support contexts\");\n    }\n    final List<Completion> completions;\n    if (higherWeightsFirst) {\n      completions = higherWeightsCompletion.lookup(key, num);\n    } else {\n      completions = normalCompletion.lookup(key, num);\n    }\n    \n    final ArrayList<LookupResult> results = new ArrayList<>(completions.size());\n    CharsRef spare = new CharsRef();\n    for (Completion c : completions) {\n      spare.grow(c.utf8.length);\n      UnicodeUtil.UTF8toUTF16(c.utf8, spare);\n      results.add(new LookupResult(spare.toString(), c.bucket));\n    }\n    return results;\n  }\n\n","bugFix":["6ecc52400551de6a7d8daf646be839487911627c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}