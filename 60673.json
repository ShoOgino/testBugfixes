{"path":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector.TokenLL#insertIntoSortedLinkedList(TokenLL).mjava","commits":[{"id":"ae230518a1a68acc124bef8df61ef94bd7c1295e","date":1417181719,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector.TokenLL#insertIntoSortedLinkedList(TokenLL).mjava","pathOld":"/dev/null","sourceNew":"    /** Given the head of a linked-list (possibly null) this inserts the token at the correct\n     * spot to maintain the desired order, and returns the head (which could be this token if it's the smallest).\n     * O(N^2) complexity but N should be a handful at most.\n     */\n    TokenLL insertIntoSortedLinkedList(final TokenLL head) {\n      assert next == null;\n      if (head == null) {\n        return this;\n      } else if (this.compareOffsets(head) <= 0) {\n        this.next = head;\n        return this;\n      }\n      TokenLL prev = head;\n      while (prev.next != null && this.compareOffsets(prev.next) > 0) {\n        prev = prev.next;\n      }\n      this.next = prev.next;\n      prev.next = this;\n      return head;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"714aa8d007eef87d7203cfc6e0fe4dab8dd8a497","date":1417181893,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermVector.TokenLL#insertIntoSortedLinkedList(TokenLL).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenStreamFromTermPositionVector.TokenLL#insertIntoSortedLinkedList(TokenLL).mjava","sourceNew":"    /** Given the head of a linked-list (possibly null) this inserts the token at the correct\n     * spot to maintain the desired order, and returns the head (which could be this token if it's the smallest).\n     * O(N^2) complexity but N should be a handful at most.\n     */\n    TokenLL insertIntoSortedLinkedList(final TokenLL head) {\n      assert next == null;\n      if (head == null) {\n        return this;\n      } else if (this.compareOffsets(head) <= 0) {\n        this.next = head;\n        return this;\n      }\n      TokenLL prev = head;\n      while (prev.next != null && this.compareOffsets(prev.next) > 0) {\n        prev = prev.next;\n      }\n      this.next = prev.next;\n      prev.next = this;\n      return head;\n    }\n\n","sourceOld":"    /** Given the head of a linked-list (possibly null) this inserts the token at the correct\n     * spot to maintain the desired order, and returns the head (which could be this token if it's the smallest).\n     * O(N^2) complexity but N should be a handful at most.\n     */\n    TokenLL insertIntoSortedLinkedList(final TokenLL head) {\n      assert next == null;\n      if (head == null) {\n        return this;\n      } else if (this.compareOffsets(head) <= 0) {\n        this.next = head;\n        return this;\n      }\n      TokenLL prev = head;\n      while (prev.next != null && this.compareOffsets(prev.next) > 0) {\n        prev = prev.next;\n      }\n      this.next = prev.next;\n      prev.next = this;\n      return head;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"714aa8d007eef87d7203cfc6e0fe4dab8dd8a497":["ae230518a1a68acc124bef8df61ef94bd7c1295e"],"ae230518a1a68acc124bef8df61ef94bd7c1295e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["714aa8d007eef87d7203cfc6e0fe4dab8dd8a497"]},"commit2Childs":{"714aa8d007eef87d7203cfc6e0fe4dab8dd8a497":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae230518a1a68acc124bef8df61ef94bd7c1295e":["714aa8d007eef87d7203cfc6e0fe4dab8dd8a497"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ae230518a1a68acc124bef8df61ef94bd7c1295e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}