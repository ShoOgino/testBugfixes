{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","commits":[{"id":"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0","date":1174485154,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * Sub classes that supports parameters must overide this method to return true.\n   * @return true iff this task supports command line params.\n   */\n  public boolean supportsParams () {\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0f4b47efbf80cb689c6a58715ad0b93b088658e","date":1174655626,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","sourceNew":"  /**\r\n   * Sub classes that supports parameters must overide this method to return true.\r\n   * @return true iff this task supports command line params.\r\n   */\r\n  public boolean supportsParams () {\r\n    return false;\r\n  }\r\n\n","sourceOld":"  /**\r\n   * Sub classes that supports parameters must overide this method to return true.\n   * @return true iff this task supports command line params.\n   */\n  public boolean supportsParams () {\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3738fa43eaa87dc7b393fe98b04cde1019e20bac","date":1175557034,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","sourceNew":"  /**\n   * Sub classes that supports parameters must overide this method to return true.\n   * @return true iff this task supports command line params.\n   */\n  public boolean supportsParams () {\n    return false;\n  }\n\n","sourceOld":"  /**\r\n   * Sub classes that supports parameters must overide this method to return true.\r\n   * @return true iff this task supports command line params.\r\n   */\r\n  public boolean supportsParams () {\r\n    return false;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"add7d922e63099fbce8f0a1b31216df7ef5067f1","date":1252002701,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","sourceNew":"  /**\n   * Sub classes that supports parameters must override this method to return true.\n   * @return true iff this task supports command line params.\n   */\n  public boolean supportsParams () {\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Sub classes that supports parameters must overide this method to return true.\n   * @return true iff this task supports command line params.\n   */\n  public boolean supportsParams () {\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48c2026b2f44142b851cbbef393684b7b1b6fef4","date":1262026339,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","sourceNew":"  /**\n   * Sub classes that supports parameters must override this method to return true.\n   * @return true if this task supports command line params.\n   */\n  public boolean supportsParams () {\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Sub classes that supports parameters must override this method to return true.\n   * @return true iff this task supports command line params.\n   */\n  public boolean supportsParams () {\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"331c83430d717d617c1d6d542e0b54cea46484e8","date":1262046887,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","sourceNew":"  /**\n   * Sub classes that supports parameters must override this method to return true.\n   * @return true iff this task supports command line params.\n   */\n  public boolean supportsParams () {\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Sub classes that supports parameters must override this method to return true.\n   * @return true if this task supports command line params.\n   */\n  public boolean supportsParams () {\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask#supportsParams().mjava","sourceNew":"  /**\n   * Sub classes that supports parameters must override this method to return true.\n   * @return true iff this task supports command line params.\n   */\n  public boolean supportsParams () {\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Sub classes that supports parameters must override this method to return true.\n   * @return true iff this task supports command line params.\n   */\n  public boolean supportsParams () {\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0f4b47efbf80cb689c6a58715ad0b93b088658e":["1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0"],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["a0f4b47efbf80cb689c6a58715ad0b93b088658e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["331c83430d717d617c1d6d542e0b54cea46484e8"],"331c83430d717d617c1d6d542e0b54cea46484e8":["48c2026b2f44142b851cbbef393684b7b1b6fef4"],"48c2026b2f44142b851cbbef393684b7b1b6fef4":["add7d922e63099fbce8f0a1b31216df7ef5067f1"]},"commit2Childs":{"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0":["a0f4b47efbf80cb689c6a58715ad0b93b088658e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["48c2026b2f44142b851cbbef393684b7b1b6fef4"],"a0f4b47efbf80cb689c6a58715ad0b93b088658e":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"331c83430d717d617c1d6d542e0b54cea46484e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"48c2026b2f44142b851cbbef393684b7b1b6fef4":["331c83430d717d617c1d6d542e0b54cea46484e8"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}