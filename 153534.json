{"path":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMap(Map[String,Object]).mjava","commits":[{"id":"5e8661269ebb23269662a2826882f11611e91d5a","date":1475042403,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMap(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Map toMap(Map<String, Object> map) {\n    toNamedList().forEach((k, v) -> {\n      if (v == null || \"\".equals(v)) return;\n      map.put(k, v);\n    });\n    return map;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMap(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Map toMap(Map<String, Object> map) {\n    toNamedList().forEach((k, v) -> {\n      if (v == null || \"\".equals(v)) return;\n      map.put(k, v);\n    });\n    return map;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMap(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Map toMap(Map<String, Object> map) {\n    toNamedList().forEach((k, v) -> {\n      if (v == null || \"\".equals(v)) return;\n      map.put(k, v);\n    });\n    return map;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1bbcda32e5cd37ef61ea1190bacd080308e22070","date":1508850553,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMap(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    toNamedList().forEach((k, v) -> {\n      if (v == null || \"\".equals(v)) return;\n      try {\n        ew.put(k, v);\n      } catch (IOException e) {\n        throw new RuntimeException(\"Error serializing\", e);\n      }\n    });\n\n  }\n\n","sourceOld":"  @Override\n  public Map toMap(Map<String, Object> map) {\n    toNamedList().forEach((k, v) -> {\n      if (v == null || \"\".equals(v)) return;\n      map.put(k, v);\n    });\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5e8661269ebb23269662a2826882f11611e91d5a"],"5e8661269ebb23269662a2826882f11611e91d5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1bbcda32e5cd37ef61ea1190bacd080308e22070"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","5e8661269ebb23269662a2826882f11611e91d5a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["1bbcda32e5cd37ef61ea1190bacd080308e22070","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"5e8661269ebb23269662a2826882f11611e91d5a":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}