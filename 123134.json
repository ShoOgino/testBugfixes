{"path":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","sourceNew":"  /**\n   * Given a standard query string map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) \n  {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx > 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), \"UTF-8\");\n            String value = URLDecoder.decode( kv.substring( idx+1 ), \"UTF-8\");\n            MultiMapSolrParams.addParam( name, value, map );\n          }\n          else {\n            String name = URLDecoder.decode( kv, \"UTF-8\" );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n    return new MultiMapSolrParams( map );\n  }\n\n","sourceOld":"  /**\n   * Given a standard query string map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) \n  {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx > 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), \"UTF-8\");\n            String value = URLDecoder.decode( kv.substring( idx+1 ), \"UTF-8\");\n            MultiMapSolrParams.addParam( name, value, map );\n          }\n          else {\n            String name = URLDecoder.decode( kv, \"UTF-8\" );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n    return new MultiMapSolrParams( map );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","sourceNew":"  /**\n   * Given a standard query string map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) \n  {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx > 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), \"UTF-8\");\n            String value = URLDecoder.decode( kv.substring( idx+1 ), \"UTF-8\");\n            MultiMapSolrParams.addParam( name, value, map );\n          }\n          else {\n            String name = URLDecoder.decode( kv, \"UTF-8\" );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n    return new MultiMapSolrParams( map );\n  }\n\n","sourceOld":"  /**\n   * Given a standard query string map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) \n  {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx > 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), \"UTF-8\");\n            String value = URLDecoder.decode( kv.substring( idx+1 ), \"UTF-8\");\n            MultiMapSolrParams.addParam( name, value, map );\n          }\n          else {\n            String name = URLDecoder.decode( kv, \"UTF-8\" );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n    return new MultiMapSolrParams( map );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","pathOld":"solr/src/webapp/src/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","sourceNew":"  /**\n   * Given a standard query string map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) \n  {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx > 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), \"UTF-8\");\n            String value = URLDecoder.decode( kv.substring( idx+1 ), \"UTF-8\");\n            MultiMapSolrParams.addParam( name, value, map );\n          }\n          else {\n            String name = URLDecoder.decode( kv, \"UTF-8\" );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n    return new MultiMapSolrParams( map );\n  }\n\n","sourceOld":"  /**\n   * Given a standard query string map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) \n  {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx > 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), \"UTF-8\");\n            String value = URLDecoder.decode( kv.substring( idx+1 ), \"UTF-8\");\n            MultiMapSolrParams.addParam( name, value, map );\n          }\n          else {\n            String name = URLDecoder.decode( kv, \"UTF-8\" );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n    return new MultiMapSolrParams( map );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7d0565444d6381434fbff66cecf07da249f2bb4","date":1357484111,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","sourceNew":"  /**\n   * Given a url-encoded query string (UTF-8), map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    parseQueryString(queryString, \"UTF-8\", map);\n    return new MultiMapSolrParams(map);\n  }\n\n","sourceOld":"  /**\n   * Given a standard query string map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) \n  {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx > 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), \"UTF-8\");\n            String value = URLDecoder.decode( kv.substring( idx+1 ), \"UTF-8\");\n            MultiMapSolrParams.addParam( name, value, map );\n          }\n          else {\n            String name = URLDecoder.decode( kv, \"UTF-8\" );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n    return new MultiMapSolrParams( map );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","sourceNew":"  /**\n   * Given a url-encoded query string (UTF-8), map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    parseQueryString(queryString, \"UTF-8\", map);\n    return new MultiMapSolrParams(map);\n  }\n\n","sourceOld":"  /**\n   * Given a standard query string map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) \n  {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    if( queryString != null && queryString.length() > 0 ) {\n      try {\n        for( String kv : queryString.split( \"&\" ) ) {\n          int idx = kv.indexOf( '=' );\n          if( idx > 0 ) {\n            String name = URLDecoder.decode( kv.substring( 0, idx ), \"UTF-8\");\n            String value = URLDecoder.decode( kv.substring( idx+1 ), \"UTF-8\");\n            MultiMapSolrParams.addParam( name, value, map );\n          }\n          else {\n            String name = URLDecoder.decode( kv, \"UTF-8\" );\n            MultiMapSolrParams.addParam( name, \"\", map );\n          }\n        }\n      }\n      catch( UnsupportedEncodingException uex ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, uex );\n      }\n    }\n    return new MultiMapSolrParams( map );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfea9c90af47b6b37ffaafe52d3307a1f8978e68","date":1357665734,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","sourceNew":"  /**\n   * Given a url-encoded query string (UTF-8), map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    parseQueryString(queryString, map);\n    return new MultiMapSolrParams(map);\n  }\n\n","sourceOld":"  /**\n   * Given a url-encoded query string (UTF-8), map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    parseQueryString(queryString, \"UTF-8\", map);\n    return new MultiMapSolrParams(map);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","sourceNew":"  /**\n   * Given a url-encoded query string (UTF-8), map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    parseQueryString(queryString, map);\n    return new MultiMapSolrParams(map);\n  }\n\n","sourceOld":"  /**\n   * Given a url-encoded query string (UTF-8), map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    parseQueryString(queryString, \"UTF-8\", map);\n    return new MultiMapSolrParams(map);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrRequestParsers#parseQueryString(String).mjava","sourceNew":"  /**\n   * Given a url-encoded query string (UTF-8), map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) {\n    Map<String,String[]> map = new HashMap<>();\n    parseQueryString(queryString, map);\n    return new MultiMapSolrParams(map);\n  }\n\n","sourceOld":"  /**\n   * Given a url-encoded query string (UTF-8), map it into solr params\n   */\n  public static MultiMapSolrParams parseQueryString(String queryString) {\n    Map<String,String[]> map = new HashMap<String, String[]>();\n    parseQueryString(queryString, map);\n    return new MultiMapSolrParams(map);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","c7d0565444d6381434fbff66cecf07da249f2bb4"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bfea9c90af47b6b37ffaafe52d3307a1f8978e68"],"c7d0565444d6381434fbff66cecf07da249f2bb4":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"bfea9c90af47b6b37ffaafe52d3307a1f8978e68":["c7d0565444d6381434fbff66cecf07da249f2bb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","bfea9c90af47b6b37ffaafe52d3307a1f8978e68"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4e6354dd7c71fe122926fc53d7d29f715b1283db"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c7d0565444d6381434fbff66cecf07da249f2bb4":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","bfea9c90af47b6b37ffaafe52d3307a1f8978e68"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c7d0565444d6381434fbff66cecf07da249f2bb4"],"bfea9c90af47b6b37ffaafe52d3307a1f8978e68":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}