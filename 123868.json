{"path":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#validateUserVersions(Object[],String[],String).mjava","commits":[{"id":"31b9d540ce892a94ad2ad89f9b9cddc9180b6c15","date":1523556268,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#validateUserVersions(Object[],String[],String).mjava","pathOld":"/dev/null","sourceNew":"  private static void validateUserVersions(Object[] userVersions, String[] fieldNames, String errorMessage) {\n    assert userVersions.length == fieldNames.length;\n    for (int i = 0; i < userVersions.length; i++) {\n      Object userVersion = userVersions[i];\n      if ( null == userVersion) {\n        // could happen if they turn this feature on after building an index\n        // w/o the versionField, or if validating a new doc, not present.\n        throw new SolrException(SERVER_ERROR, errorMessage + fieldNames[i]);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0f4b03a7701ad6256c4b8946243ae1981931a28","date":1527108277,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#validateUserVersions(Object[],String[],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#validateUserVersions(Object[],String[],String).mjava","sourceNew":"  private void validateUserVersions(Object[] userVersions, String[] fieldNames, String errorMessage) {\n    assert userVersions.length == fieldNames.length;\n    for (int i = 0; i < userVersions.length; i++) {\n      Object userVersion = userVersions[i];\n      if (supportMissingVersionOnOldDocs && null == userVersion) {\n        userVersions[i] = (Comparable<Object>) o -> -1;\n      } else if (null == userVersion) {\n        // could happen if they turn this feature on after building an index\n        // w/o the versionField, or if validating a new doc, not present.\n        throw new SolrException(SERVER_ERROR, errorMessage + fieldNames[i]);\n      }\n    }\n  }\n\n","sourceOld":"  private static void validateUserVersions(Object[] userVersions, String[] fieldNames, String errorMessage) {\n    assert userVersions.length == fieldNames.length;\n    for (int i = 0; i < userVersions.length; i++) {\n      Object userVersion = userVersions[i];\n      if ( null == userVersion) {\n        // could happen if they turn this feature on after building an index\n        // w/o the versionField, or if validating a new doc, not present.\n        throw new SolrException(SERVER_ERROR, errorMessage + fieldNames[i]);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d0f4b03a7701ad6256c4b8946243ae1981931a28":["31b9d540ce892a94ad2ad89f9b9cddc9180b6c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"31b9d540ce892a94ad2ad89f9b9cddc9180b6c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0f4b03a7701ad6256c4b8946243ae1981931a28"]},"commit2Childs":{"d0f4b03a7701ad6256c4b8946243ae1981931a28":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["31b9d540ce892a94ad2ad89f9b9cddc9180b6c15"],"31b9d540ce892a94ad2ad89f9b9cddc9180b6c15":["d0f4b03a7701ad6256c4b8946243ae1981931a28"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}