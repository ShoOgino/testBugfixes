{"path":"lucene/core/src/java/org/apache/lucene/util/packed/Direct64#set(int,long[],int,int).mjava","commits":[{"id":"501135652c6500e4108453df1cc819dae12098e7","date":1340109868,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Direct64#set(int,long[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int set(int index, long[] arr, int off, int len) {\n    assert index >= 0 && index < valueCount;\n    assert off + len <= arr.length;\n    final int sets = Math.min(valueCount - index, len);\n    System.arraycopy(arr, off, values, index, sets);\n    return sets;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55110eb60c5105294fc2ae7912d82b750865aa58","date":1341389822,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Direct64#set(int,long[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Direct64#set(int,long[],int,int).mjava","sourceNew":"  public int set(int index, long[] arr, int off, int len) {\n    assert len > 0 : \"len must be > 0 (got \" + len + \")\";\n    assert index >= 0 && index < valueCount;\n    assert off + len <= arr.length;\n\n    final int sets = Math.min(valueCount - index, len);\n    System.arraycopy(arr, off, values, index, sets);\n    return sets;\n  }\n\n","sourceOld":"  @Override\n  public int set(int index, long[] arr, int off, int len) {\n    assert index >= 0 && index < valueCount;\n    assert off + len <= arr.length;\n    final int sets = Math.min(valueCount - index, len);\n    System.arraycopy(arr, off, values, index, sets);\n    return sets;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Direct64#set(int,long[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Direct64#set(int,long[],int,int).mjava","sourceNew":"  public int set(int index, long[] arr, int off, int len) {\n    assert len > 0 : \"len must be > 0 (got \" + len + \")\";\n    assert index >= 0 && index < valueCount;\n    assert off + len <= arr.length;\n\n    final int sets = Math.min(valueCount - index, len);\n    System.arraycopy(arr, off, values, index, sets);\n    return sets;\n  }\n\n","sourceOld":"  @Override\n  public int set(int index, long[] arr, int off, int len) {\n    assert index >= 0 && index < valueCount;\n    assert off + len <= arr.length;\n    final int sets = Math.min(valueCount - index, len);\n    System.arraycopy(arr, off, values, index, sets);\n    return sets;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Direct64#set(int,long[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Direct64#set(int,long[],int,int).mjava","sourceNew":"  @Override\n  public int set(int index, long[] arr, int off, int len) {\n    assert len > 0 : \"len must be > 0 (got \" + len + \")\";\n    assert index >= 0 && index < valueCount;\n    assert off + len <= arr.length;\n\n    final int sets = Math.min(valueCount - index, len);\n    System.arraycopy(arr, off, values, index, sets);\n    return sets;\n  }\n\n","sourceOld":"  public int set(int index, long[] arr, int off, int len) {\n    assert len > 0 : \"len must be > 0 (got \" + len + \")\";\n    assert index >= 0 && index < valueCount;\n    assert off + len <= arr.length;\n\n    final int sets = Math.min(valueCount - index, len);\n    System.arraycopy(arr, off, values, index, sets);\n    return sets;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/Direct64#set(int,long[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Direct64#set(int,long[],int,int).mjava","sourceNew":"  @Override\n  public int set(int index, long[] arr, int off, int len) {\n    assert len > 0 : \"len must be > 0 (got \" + len + \")\";\n    assert index >= 0 && index < valueCount;\n    assert off + len <= arr.length;\n\n    final int sets = Math.min(valueCount - index, len);\n    System.arraycopy(arr, off, values, index, sets);\n    return sets;\n  }\n\n","sourceOld":"  public int set(int index, long[] arr, int off, int len) {\n    assert len > 0 : \"len must be > 0 (got \" + len + \")\";\n    assert index >= 0 && index < valueCount;\n    assert off + len <= arr.length;\n\n    final int sets = Math.min(valueCount - index, len);\n    System.arraycopy(arr, off, values, index, sets);\n    return sets;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f440d3f04c39b9b18e8e48a78ef7b9f840674e22","date":1568209549,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/Direct64#set(int,long[],int,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int set(int index, long[] arr, int off, int len) {\n    assert len > 0 : \"len must be > 0 (got \" + len + \")\";\n    assert index >= 0 && index < valueCount;\n    assert off + len <= arr.length;\n\n    final int sets = Math.min(valueCount - index, len);\n    System.arraycopy(arr, off, values, index, sets);\n    return sets;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["55110eb60c5105294fc2ae7912d82b750865aa58","7530de27b87b961b51f01bd1299b7004d46e8823"],"f440d3f04c39b9b18e8e48a78ef7b9f840674e22":["7530de27b87b961b51f01bd1299b7004d46e8823"],"55110eb60c5105294fc2ae7912d82b750865aa58":["501135652c6500e4108453df1cc819dae12098e7"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["501135652c6500e4108453df1cc819dae12098e7","55110eb60c5105294fc2ae7912d82b750865aa58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"501135652c6500e4108453df1cc819dae12098e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7530de27b87b961b51f01bd1299b7004d46e8823":["55110eb60c5105294fc2ae7912d82b750865aa58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f440d3f04c39b9b18e8e48a78ef7b9f840674e22"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"55110eb60c5105294fc2ae7912d82b750865aa58":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","7530de27b87b961b51f01bd1299b7004d46e8823"],"f440d3f04c39b9b18e8e48a78ef7b9f840674e22":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["501135652c6500e4108453df1cc819dae12098e7"],"501135652c6500e4108453df1cc819dae12098e7":["55110eb60c5105294fc2ae7912d82b750865aa58","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f440d3f04c39b9b18e8e48a78ef7b9f840674e22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}