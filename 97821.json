{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestPolygon#testPolygonNotClosed().mjava","commits":[{"id":"95ddcac9ac08381985af6eac8f8b77ba881d4ad8","date":1459477726,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestPolygon#testPolygonNotClosed().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testPolygonNotClosed().mjava","sourceNew":"  /** polygon must be closed */\n  public void testPolygonNotClosed() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      new Polygon(new double[] { 18, 18, 19, 19, 19 }, new double[] { -66, -65, -65, -66, -67 });\n    });\n    assertTrue(expected.getMessage(), expected.getMessage().contains(\"it must close itself\"));\n  }\n\n","sourceOld":"  /** polygon must be closed */\n  public void testPolygonNotClosed() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      newPolygonQuery(\"test\", \n          new double[] { 18, 18, 19, 19, 19 },\n          new double[] { -66, -65, -65, -66, -67 });\n    });\n    assertTrue(expected.getMessage(), expected.getMessage().contains(\"it must close itself\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86979a945891cffd49f9634fac5d16ebfe47c541","date":1459704804,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testPolygonNotClosed().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestPolygon#testPolygonNotClosed().mjava","sourceNew":"  /** polygon must be closed */\n  public void testPolygonNotClosed() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      new Polygon(new double[] { 18, 18, 19, 19, 19 }, new double[] { -66, -65, -65, -66, -67 });\n    });\n    assertTrue(expected.getMessage(), expected.getMessage().contains(\"it must close itself\"));\n  }\n\n","sourceOld":"  /** polygon must be closed */\n  public void testPolygonNotClosed() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      new Polygon(new double[] { 18, 18, 19, 19, 19 }, new double[] { -66, -65, -65, -66, -67 });\n    });\n    assertTrue(expected.getMessage(), expected.getMessage().contains(\"it must close itself\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"95ddcac9ac08381985af6eac8f8b77ba881d4ad8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"86979a945891cffd49f9634fac5d16ebfe47c541":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["86979a945891cffd49f9634fac5d16ebfe47c541"]},"commit2Childs":{"95ddcac9ac08381985af6eac8f8b77ba881d4ad8":["86979a945891cffd49f9634fac5d16ebfe47c541"],"86979a945891cffd49f9634fac5d16ebfe47c541":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}