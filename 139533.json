{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCounts#TotalFacetCounts(TaxonomyReader,FacetIndexingParams,int[][],CreationType).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCounts#TotalFacetCounts(TaxonomyReader,FacetIndexingParams,int[][],CreationType).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/TotalFacetCounts#TotalFacetCounts(TaxonomyReader,FacetIndexingParams,int[][],CreationType).mjava","sourceNew":"  /** \n   * Construct by key - from index Directory or by recomputing.\n   * @param key the key mapping of this total facet counts (index, taxonomy, category lists...) \n   */\n  private TotalFacetCounts (TaxonomyReader taxonomy, FacetIndexingParams facetIndexingParams,\n      int[][] counts, CreationType createType4Test) throws IOException, LockObtainFailedException {\n    this.taxonomy = taxonomy;\n    this.facetIndexingParams = facetIndexingParams;\n    this.totalCounts = counts;\n    this.createType4test = createType4Test;\n    this.gen4test = atomicGen4Test.incrementAndGet();\n  }\n\n","sourceOld":"  /** \n   * Construct by key - from index Directory or by recomputing.\n   * @param key the key mapping of this total facet counts (index, taxonomy, category lists...) \n   */\n  private TotalFacetCounts (TaxonomyReader taxonomy, FacetIndexingParams facetIndexingParams,\n      int[][] counts, CreationType createType4Test) throws IOException, LockObtainFailedException {\n    this.taxonomy = taxonomy;\n    this.facetIndexingParams = facetIndexingParams;\n    this.totalCounts = counts;\n    this.createType4test = createType4Test;\n    this.gen4test = atomicGen4Test.incrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9be242e584b2f40a71c1736de4cbdb36bcf08a5","date":1335144174,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCounts#TotalFacetCounts(TaxonomyReader,FacetIndexingParams,int[][],CreationType).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCounts#TotalFacetCounts(TaxonomyReader,FacetIndexingParams,int[][],CreationType).mjava","sourceNew":"  /** \n   * Construct by key - from index Directory or by recomputing.\n   */\n  private TotalFacetCounts (TaxonomyReader taxonomy, FacetIndexingParams facetIndexingParams,\n      int[][] counts, CreationType createType4Test) throws IOException, LockObtainFailedException {\n    this.taxonomy = taxonomy;\n    this.facetIndexingParams = facetIndexingParams;\n    this.totalCounts = counts;\n    this.createType4test = createType4Test;\n    this.gen4test = atomicGen4Test.incrementAndGet();\n  }\n\n","sourceOld":"  /** \n   * Construct by key - from index Directory or by recomputing.\n   * @param key the key mapping of this total facet counts (index, taxonomy, category lists...) \n   */\n  private TotalFacetCounts (TaxonomyReader taxonomy, FacetIndexingParams facetIndexingParams,\n      int[][] counts, CreationType createType4Test) throws IOException, LockObtainFailedException {\n    this.taxonomy = taxonomy;\n    this.facetIndexingParams = facetIndexingParams;\n    this.totalCounts = counts;\n    this.createType4test = createType4Test;\n    this.gen4test = atomicGen4Test.incrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCounts#TotalFacetCounts(TaxonomyReader,FacetIndexingParams,int[][],CreationType).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCounts#TotalFacetCounts(TaxonomyReader,FacetIndexingParams,int[][],CreationType).mjava","sourceNew":"  /** \n   * Construct by key - from index Directory or by recomputing.\n   */\n  private TotalFacetCounts (TaxonomyReader taxonomy, FacetIndexingParams facetIndexingParams,\n      int[][] counts, CreationType createType4Test) {\n    this.taxonomy = taxonomy;\n    this.facetIndexingParams = facetIndexingParams;\n    this.totalCounts = counts;\n    this.createType4test = createType4Test;\n    this.gen4test = atomicGen4Test.incrementAndGet();\n  }\n\n","sourceOld":"  /** \n   * Construct by key - from index Directory or by recomputing.\n   */\n  private TotalFacetCounts (TaxonomyReader taxonomy, FacetIndexingParams facetIndexingParams,\n      int[][] counts, CreationType createType4Test) throws IOException, LockObtainFailedException {\n    this.taxonomy = taxonomy;\n    this.facetIndexingParams = facetIndexingParams;\n    this.totalCounts = counts;\n    this.createType4test = createType4Test;\n    this.gen4test = atomicGen4Test.incrementAndGet();\n  }\n\n","bugFix":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCounts#TotalFacetCounts(TaxonomyReader,FacetIndexingParams,int[][],CreationType).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCounts#TotalFacetCounts(TaxonomyReader,FacetIndexingParams,int[][],CreationType).mjava","sourceNew":"  /** \n   * Construct by key - from index Directory or by recomputing.\n   */\n  private TotalFacetCounts (TaxonomyReader taxonomy, FacetIndexingParams facetIndexingParams,\n      int[][] counts, CreationType createType4Test) {\n    this.taxonomy = taxonomy;\n    this.facetIndexingParams = facetIndexingParams;\n    this.totalCounts = counts;\n    this.createType4test = createType4Test;\n    this.gen4test = atomicGen4Test.incrementAndGet();\n  }\n\n","sourceOld":"  /** \n   * Construct by key - from index Directory or by recomputing.\n   */\n  private TotalFacetCounts (TaxonomyReader taxonomy, FacetIndexingParams facetIndexingParams,\n      int[][] counts, CreationType createType4Test) throws IOException, LockObtainFailedException {\n    this.taxonomy = taxonomy;\n    this.facetIndexingParams = facetIndexingParams;\n    this.totalCounts = counts;\n    this.createType4test = createType4Test;\n    this.gen4test = atomicGen4Test.incrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/complements/TotalFacetCounts#TotalFacetCounts(TaxonomyReader,FacetIndexingParams,int[][],CreationType).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TotalFacetCounts#TotalFacetCounts(TaxonomyReader,FacetIndexingParams,int[][],CreationType).mjava","sourceNew":"  /** \n   * Construct by key - from index Directory or by recomputing.\n   */\n  private TotalFacetCounts (TaxonomyReader taxonomy, FacetIndexingParams facetIndexingParams,\n      int[][] counts, CreationType createType4Test) {\n    this.taxonomy = taxonomy;\n    this.facetIndexingParams = facetIndexingParams;\n    this.totalCounts = counts;\n    this.createType4test = createType4Test;\n    this.gen4test = atomicGen4Test.incrementAndGet();\n  }\n\n","sourceOld":"  /** \n   * Construct by key - from index Directory or by recomputing.\n   */\n  private TotalFacetCounts (TaxonomyReader taxonomy, FacetIndexingParams facetIndexingParams,\n      int[][] counts, CreationType createType4Test) {\n    this.taxonomy = taxonomy;\n    this.facetIndexingParams = facetIndexingParams;\n    this.totalCounts = counts;\n    this.createType4test = createType4Test;\n    this.gen4test = atomicGen4Test.incrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f9be242e584b2f40a71c1736de4cbdb36bcf08a5":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"607428da722dcb3e86bbd11c63de8986e6275c36":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["f9be242e584b2f40a71c1736de4cbdb36bcf08a5","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["f9be242e584b2f40a71c1736de4cbdb36bcf08a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"f9be242e584b2f40a71c1736de4cbdb36bcf08a5":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f9be242e584b2f40a71c1736de4cbdb36bcf08a5"],"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["607428da722dcb3e86bbd11c63de8986e6275c36","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}