{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getShardLeader(String,String,int).mjava","commits":[{"id":"29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3","date":1460654262,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#getShardLeader(String,String,int).mjava","pathOld":"/dev/null","sourceNew":"  protected Replica getShardLeader(String testCollectionName, String shardId, int timeoutSecs) throws Exception {\n    Replica leader = null;\n    long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(timeoutSecs, TimeUnit.SECONDS);\n    while (System.nanoTime() < timeout) {\n      Replica tmp = null;\n      try {\n        tmp = cloudClient.getZkStateReader().getLeaderRetry(testCollectionName, shardId);\n      } catch (Exception exc) {}\n      if (tmp != null && \"active\".equals(tmp.getStr(ZkStateReader.STATE_PROP))) {\n        leader = tmp;\n        break;\n      }\n      Thread.sleep(1000);\n    }\n    assertNotNull(\"Could not find active leader for \" + shardId + \" of \" +\n        testCollectionName + \" after \"+timeoutSecs+\" secs; clusterState: \" +\n        printClusterStateInfo(testCollectionName), leader);\n\n    return leader;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3"],"29e08b0fe8c5c0149b9e904e43afc1f270f8a6c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}