{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#createIndexer(IndexSchema).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#createIndexer(IndexSchema).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/search/index/IndexController#createIndexer(IndexSchema).mjava","sourceNew":"    protected ServiceIndex createIndexer(final IndexSchema schema) throws IOException {\n        GDataIndexer indexer;\n        File indexLocation = createIndexLocation(schema.getIndexLocation(),\n                schema.getName());\n        boolean create = createIndexDirectory(indexLocation);\n        Directory dir = FSDirectory.getDirectory(indexLocation, create);\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Create new Indexer for IndexSchema: \" + schema);\n        /*\n         * timed or committed indexer?! keep the possibility to let users decide\n         * to use scheduled commits\n         */\n        if (schema.isUseTimedIndexer())\n            indexer = GDataIndexer.createTimedGdataIndexer(schema, dir, create,\n                    schema.getIndexerIdleTime());\n        else\n            indexer = GDataIndexer.createGdataIndexer(schema, dir, create);\n        indexer.registerIndexEventListener(this);\n        return new ServiceIndex(schema, indexer, dir);\n    }\n\n","sourceOld":"    protected ServiceIndex createIndexer(final IndexSchema schema) throws IOException {\n        GDataIndexer indexer;\n        File indexLocation = createIndexLocation(schema.getIndexLocation(),\n                schema.getName());\n        boolean create = createIndexDirectory(indexLocation);\n        Directory dir = FSDirectory.getDirectory(indexLocation, create);\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Create new Indexer for IndexSchema: \" + schema);\n        /*\n         * timed or committed indexer?! keep the possibility to let users decide\n         * to use scheduled commits\n         */\n        if (schema.isUseTimedIndexer())\n            indexer = GDataIndexer.createTimedGdataIndexer(schema, dir, create,\n                    schema.getIndexerIdleTime());\n        else\n            indexer = GDataIndexer.createGdataIndexer(schema, dir, create);\n        indexer.registerIndexEventListener(this);\n        return new ServiceIndex(schema, indexer, dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#createIndexer(IndexSchema).mjava","sourceNew":null,"sourceOld":"    protected ServiceIndex createIndexer(final IndexSchema schema) throws IOException {\n        GDataIndexer indexer;\n        File indexLocation = createIndexLocation(schema.getIndexLocation(),\n                schema.getName());\n        boolean create = createIndexDirectory(indexLocation);\n        Directory dir = FSDirectory.getDirectory(indexLocation, create);\n        if (LOG.isInfoEnabled())\n            LOG.info(\"Create new Indexer for IndexSchema: \" + schema);\n        /*\n         * timed or committed indexer?! keep the possibility to let users decide\n         * to use scheduled commits\n         */\n        if (schema.isUseTimedIndexer())\n            indexer = GDataIndexer.createTimedGdataIndexer(schema, dir, create,\n                    schema.getIndexerIdleTime());\n        else\n            indexer = GDataIndexer.createGdataIndexer(schema, dir, create);\n        indexer.registerIndexEventListener(this);\n        return new ServiceIndex(schema, indexer, dir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}