{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/util/ShapeFieldCacheProvider#getCache(LeafReader).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/util/ShapeFieldCacheProvider#getCache(LeafReader).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/ShapeFieldCacheProvider#getCache(LeafReader).mjava","sourceNew":"  public synchronized ShapeFieldCache<T> getCache(LeafReader reader) throws IOException {\n    ShapeFieldCache<T> idx = sidx.get(reader);\n    if (idx != null) {\n      return idx;\n    }\n    long startTime = System.currentTimeMillis();\n\n    log.fine(\"Building Cache [\" + reader.maxDoc() + \"]\");\n    idx = new ShapeFieldCache<>(reader.maxDoc(),defaultSize);\n    int count = 0;\n    PostingsEnum docs = null;\n    Terms terms = reader.terms(shapeField);\n    if (terms != null) {\n      TermsEnum te = terms.iterator();\n      BytesRef term = te.next();\n      while (term != null) {\n        T shape = readShape(term);\n        if( shape != null ) {\n          docs = te.postings(docs, PostingsEnum.NONE);\n          Integer docid = docs.nextDoc();\n          while (docid != DocIdSetIterator.NO_MORE_DOCS) {\n            idx.add( docid, shape );\n            docid = docs.nextDoc();\n            count++;\n          }\n        }\n        term = te.next();\n      }\n    }\n    sidx.put(reader, idx);\n    long elapsed = System.currentTimeMillis() - startTime;\n    log.fine(\"Cached: [\" + count + \" in \" + elapsed + \"ms] \" + idx);\n    return idx;\n  }\n\n","sourceOld":"  public synchronized ShapeFieldCache<T> getCache(LeafReader reader) throws IOException {\n    ShapeFieldCache<T> idx = sidx.get(reader);\n    if (idx != null) {\n      return idx;\n    }\n    long startTime = System.currentTimeMillis();\n\n    log.fine(\"Building Cache [\" + reader.maxDoc() + \"]\");\n    idx = new ShapeFieldCache<>(reader.maxDoc(),defaultSize);\n    int count = 0;\n    PostingsEnum docs = null;\n    Terms terms = reader.terms(shapeField);\n    if (terms != null) {\n      TermsEnum te = terms.iterator();\n      BytesRef term = te.next();\n      while (term != null) {\n        T shape = readShape(term);\n        if( shape != null ) {\n          docs = te.postings(docs, PostingsEnum.NONE);\n          Integer docid = docs.nextDoc();\n          while (docid != DocIdSetIterator.NO_MORE_DOCS) {\n            idx.add( docid, shape );\n            docid = docs.nextDoc();\n            count++;\n          }\n        }\n        term = te.next();\n      }\n    }\n    sidx.put(reader, idx);\n    long elapsed = System.currentTimeMillis() - startTime;\n    log.fine(\"Cached: [\" + count + \" in \" + elapsed + \"ms] \" + idx);\n    return idx;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/util/ShapeFieldCacheProvider#getCache(LeafReader).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/util/ShapeFieldCacheProvider#getCache(LeafReader).mjava","sourceNew":"  public synchronized ShapeFieldCache<T> getCache(LeafReader reader) throws IOException {\n    ShapeFieldCache<T> idx = sidx.get(reader);\n    if (idx != null) {\n      return idx;\n    }\n    long startTime = System.currentTimeMillis();\n\n    log.fine(\"Building Cache [\" + reader.maxDoc() + \"]\");\n    idx = new ShapeFieldCache<>(reader.maxDoc(),defaultSize);\n    int count = 0;\n    PostingsEnum docs = null;\n    Terms terms = reader.terms(shapeField);\n    if (terms != null) {\n      TermsEnum te = terms.iterator();\n      BytesRef term = te.next();\n      while (term != null) {\n        T shape = readShape(term);\n        if( shape != null ) {\n          docs = te.postings(docs, PostingsEnum.NONE);\n          Integer docid = docs.nextDoc();\n          while (docid != DocIdSetIterator.NO_MORE_DOCS) {\n            idx.add( docid, shape );\n            docid = docs.nextDoc();\n            count++;\n          }\n        }\n        term = te.next();\n      }\n    }\n    sidx.put(reader, idx);\n    long elapsed = System.currentTimeMillis() - startTime;\n    log.fine(\"Cached: [\" + count + \" in \" + elapsed + \"ms] \" + idx);\n    return idx;\n  }\n\n","sourceOld":"  public synchronized ShapeFieldCache<T> getCache(LeafReader reader) throws IOException {\n    ShapeFieldCache<T> idx = sidx.get(reader);\n    if (idx != null) {\n      return idx;\n    }\n    long startTime = System.currentTimeMillis();\n\n    log.fine(\"Building Cache [\" + reader.maxDoc() + \"]\");\n    idx = new ShapeFieldCache<>(reader.maxDoc(),defaultSize);\n    int count = 0;\n    PostingsEnum docs = null;\n    Terms terms = reader.terms(shapeField);\n    if (terms != null) {\n      TermsEnum te = terms.iterator();\n      BytesRef term = te.next();\n      while (term != null) {\n        T shape = readShape(term);\n        if( shape != null ) {\n          docs = te.postings(docs, PostingsEnum.NONE);\n          Integer docid = docs.nextDoc();\n          while (docid != DocIdSetIterator.NO_MORE_DOCS) {\n            idx.add( docid, shape );\n            docid = docs.nextDoc();\n            count++;\n          }\n        }\n        term = te.next();\n      }\n    }\n    sidx.put(reader, idx);\n    long elapsed = System.currentTimeMillis() - startTime;\n    log.fine(\"Cached: [\" + count + \" in \" + elapsed + \"ms] \" + idx);\n    return idx;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}