{"path":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","commits":[{"id":"0eab5479eeaba1914f4cd6b6bca566976c31075c","date":1162241544,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    return new IndexWriter(dir, new WhitespaceAnalyzer(), create);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e0d75d47683f1bcf4a7c6de9d79ac3b91de51c4","date":1190750527,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), create);\n    writer.setMergePolicy(new LogDocMergePolicy());\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    return new IndexWriter(dir, new WhitespaceAnalyzer(), create);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), create, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMergePolicy(new LogDocMergePolicy());\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), create);\n    writer.setMergePolicy(new LogDocMergePolicy());\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4ae99f08f69aa3acba7cd75134e8447eb747559","date":1222344278,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, true, new WhitespaceAnalyzer(), create);\n    writer.setMergePolicy(new LogDocMergePolicy());\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), create, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMergePolicy(new LogDocMergePolicy());\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13eaef7d286f35b5c850a1c2eb7b337679aa6453","date":1249118545,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, true, new WhitespaceAnalyzer(), create);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, true, new WhitespaceAnalyzer(), create);\n    writer.setMergePolicy(new LogDocMergePolicy());\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87c966e9308847938a7c905c2e46a56d8df788b8","date":1255035452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), create, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, true, new WhitespaceAnalyzer(), create);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), create, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), create, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), create, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), create, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,IndexWriterConfig).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), create, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,IndexWriterConfig).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), create, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,IndexWriterConfig).mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#newWriter(Directory,boolean).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, boolean create)\n      throws IOException {\n    final IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), create, IndexWriter.MaxFieldLength.UNLIMITED);\n    writer.setMergePolicy(new LogDocMergePolicy(writer));\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c4ae99f08f69aa3acba7cd75134e8447eb747559":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["2e0d75d47683f1bcf4a7c6de9d79ac3b91de51c4"],"0eab5479eeaba1914f4cd6b6bca566976c31075c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e0d75d47683f1bcf4a7c6de9d79ac3b91de51c4":["0eab5479eeaba1914f4cd6b6bca566976c31075c"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["87c966e9308847938a7c905c2e46a56d8df788b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"13eaef7d286f35b5c850a1c2eb7b337679aa6453":["c4ae99f08f69aa3acba7cd75134e8447eb747559"],"87c966e9308847938a7c905c2e46a56d8df788b8":["13eaef7d286f35b5c850a1c2eb7b337679aa6453"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"c4ae99f08f69aa3acba7cd75134e8447eb747559":["13eaef7d286f35b5c850a1c2eb7b337679aa6453"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["c4ae99f08f69aa3acba7cd75134e8447eb747559"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"0eab5479eeaba1914f4cd6b6bca566976c31075c":["2e0d75d47683f1bcf4a7c6de9d79ac3b91de51c4"],"2e0d75d47683f1bcf4a7c6de9d79ac3b91de51c4":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0eab5479eeaba1914f4cd6b6bca566976c31075c"],"13eaef7d286f35b5c850a1c2eb7b337679aa6453":["87c966e9308847938a7c905c2e46a56d8df788b8"],"87c966e9308847938a7c905c2e46a56d8df788b8":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}