{"path":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#setNoCFSRatio(double).mjava","commits":[{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#setNoCFSRatio(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LogMergePolicy#setNoCFSRatio(double).mjava","sourceNew":"  /** If a merged segment will be more than this percentage\n   *  of the total size of the index, leave the segment as\n   *  non-compound file even if compound file is enabled.\n   *  Set to 1.0 to always use CFS regardless of merge\n   *  size. */\n  public final void setNoCFSRatio(double noCFSRatio) {\n    if (noCFSRatio < 0.0 || noCFSRatio > 1.0) {\n      throw new IllegalArgumentException(\"noCFSRatio must be 0.0 to 1.0 inclusive; got \" + noCFSRatio);\n    }\n    this.noCFSRatio = noCFSRatio;\n  }\n\n","sourceOld":"  /** If a merged segment will be more than this percentage\n   *  of the total size of the index, leave the segment as\n   *  non-compound file even if compound file is enabled.\n   *  Set to 1.0 to always use CFS regardless of merge\n   *  size. */\n  public void setNoCFSRatio(double noCFSRatio) {\n    if (noCFSRatio < 0.0 || noCFSRatio > 1.0) {\n      throw new IllegalArgumentException(\"noCFSRatio must be 0.0 to 1.0 inclusive; got \" + noCFSRatio);\n    }\n    this.noCFSRatio = noCFSRatio;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e96253deb801879f3fc6373f5069f2debfe797d3","date":1454570664,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#setNoCFSRatio(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#setNoCFSRatio(double).mjava","sourceNew":"  /** If a merged segment will be more than this percentage\n   *  of the total size of the index, leave the segment as\n   *  non-compound file even if compound file is enabled.\n   *  Set to 1.0 to always use CFS regardless of merge\n   *  size. */\n  public void setNoCFSRatio(double noCFSRatio) {\n    if (noCFSRatio < 0.0 || noCFSRatio > 1.0) {\n      throw new IllegalArgumentException(\"noCFSRatio must be 0.0 to 1.0 inclusive; got \" + noCFSRatio);\n    }\n    this.noCFSRatio = noCFSRatio;\n  }\n\n","sourceOld":"  /** If a merged segment will be more than this percentage\n   *  of the total size of the index, leave the segment as\n   *  non-compound file even if compound file is enabled.\n   *  Set to 1.0 to always use CFS regardless of merge\n   *  size. */\n  public final void setNoCFSRatio(double noCFSRatio) {\n    if (noCFSRatio < 0.0 || noCFSRatio > 1.0) {\n      throw new IllegalArgumentException(\"noCFSRatio must be 0.0 to 1.0 inclusive; got \" + noCFSRatio);\n    }\n    this.noCFSRatio = noCFSRatio;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1704c078ec59838c9d95d5bf5738b393b537494","date":1454693901,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#setNoCFSRatio(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#setNoCFSRatio(double).mjava","sourceNew":"  /** If a merged segment will be more than this percentage\n   *  of the total size of the index, leave the segment as\n   *  non-compound file even if compound file is enabled.\n   *  Set to 1.0 to always use CFS regardless of merge\n   *  size. */\n  public void setNoCFSRatio(double noCFSRatio) {\n    if (noCFSRatio < 0.0 || noCFSRatio > 1.0) {\n      throw new IllegalArgumentException(\"noCFSRatio must be 0.0 to 1.0 inclusive; got \" + noCFSRatio);\n    }\n    this.noCFSRatio = noCFSRatio;\n  }\n\n","sourceOld":"  /** If a merged segment will be more than this percentage\n   *  of the total size of the index, leave the segment as\n   *  non-compound file even if compound file is enabled.\n   *  Set to 1.0 to always use CFS regardless of merge\n   *  size. */\n  public final void setNoCFSRatio(double noCFSRatio) {\n    if (noCFSRatio < 0.0 || noCFSRatio > 1.0) {\n      throw new IllegalArgumentException(\"noCFSRatio must be 0.0 to 1.0 inclusive; got \" + noCFSRatio);\n    }\n    this.noCFSRatio = noCFSRatio;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#setNoCFSRatio(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#setNoCFSRatio(double).mjava","sourceNew":"  /** If a merged segment will be more than this percentage\n   *  of the total size of the index, leave the segment as\n   *  non-compound file even if compound file is enabled.\n   *  Set to 1.0 to always use CFS regardless of merge\n   *  size. */\n  public void setNoCFSRatio(double noCFSRatio) {\n    if (noCFSRatio < 0.0 || noCFSRatio > 1.0) {\n      throw new IllegalArgumentException(\"noCFSRatio must be 0.0 to 1.0 inclusive; got \" + noCFSRatio);\n    }\n    this.noCFSRatio = noCFSRatio;\n  }\n\n","sourceOld":"  /** If a merged segment will be more than this percentage\n   *  of the total size of the index, leave the segment as\n   *  non-compound file even if compound file is enabled.\n   *  Set to 1.0 to always use CFS regardless of merge\n   *  size. */\n  public final void setNoCFSRatio(double noCFSRatio) {\n    if (noCFSRatio < 0.0 || noCFSRatio > 1.0) {\n      throw new IllegalArgumentException(\"noCFSRatio must be 0.0 to 1.0 inclusive; got \" + noCFSRatio);\n    }\n    this.noCFSRatio = noCFSRatio;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e96253deb801879f3fc6373f5069f2debfe797d3":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["088a7ef694fd43d5d9a4d200c4005865f773d1e7","e96253deb801879f3fc6373f5069f2debfe797d3"],"b1704c078ec59838c9d95d5bf5738b393b537494":["088a7ef694fd43d5d9a4d200c4005865f773d1e7","e96253deb801879f3fc6373f5069f2debfe797d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e96253deb801879f3fc6373f5069f2debfe797d3"]},"commit2Childs":{"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["e96253deb801879f3fc6373f5069f2debfe797d3","1e6acbaae7af722f17204ceccf0f7db5753eccf3","b1704c078ec59838c9d95d5bf5738b393b537494"],"e96253deb801879f3fc6373f5069f2debfe797d3":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","b1704c078ec59838c9d95d5bf5738b393b537494","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"b1704c078ec59838c9d95d5bf5738b393b537494":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","b1704c078ec59838c9d95d5bf5738b393b537494","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}