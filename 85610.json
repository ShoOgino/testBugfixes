{"path":"solr/core/src/test/org/apache/solr/cloud/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","commits":[{"id":"2c705a0d590cf911e7c942df49563ca2ea176e22","date":1526916174,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * picks a random value for the \"sort\" param, biased in favor of interesting test cases\n     *\n     * @return a sort string (w/direction), or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     */\n    public static String randomSortParam(Random r) {\n\n      // IMPORTANT!!!\n      // if this method is modified to produce new sorts, make sure to update\n      // randomLimitParam to account for them if they are impacted by SOLR-12343\n      final String dir = random().nextBoolean() ? \"asc\" : \"desc\";\n      switch(r.nextInt(4)) {\n        case 0: return null;\n        case 1: return \"count \" + dir;\n        case 2: return \"skg \" + dir;\n        case 3: return \"index \" + dir;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["84a99d9041ffa5585158e5a283ea1736b6b8b473"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"84a99d9041ffa5585158e5a283ea1736b6b8b473","date":1532019928,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","sourceNew":"    /**\n     * picks a random value for the \"sort\" param, biased in favor of interesting test cases\n     *\n     * @return a sort string (w/direction), or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     */\n    public static String randomSortParam(Random r) {\n\n      // IMPORTANT!!!\n      // if this method is modified to produce new sorts, make sure to update\n      // randomLimitParam to account for them if they are impacted by SOLR-12556\n      final String dir = random().nextBoolean() ? \"asc\" : \"desc\";\n      switch(r.nextInt(4)) {\n        case 0: return null;\n        case 1: return \"count \" + dir;\n        case 2: return \"skg \" + dir;\n        case 3: return \"index \" + dir;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","sourceOld":"    /**\n     * picks a random value for the \"sort\" param, biased in favor of interesting test cases\n     *\n     * @return a sort string (w/direction), or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     */\n    public static String randomSortParam(Random r) {\n\n      // IMPORTANT!!!\n      // if this method is modified to produce new sorts, make sure to update\n      // randomLimitParam to account for them if they are impacted by SOLR-12343\n      final String dir = random().nextBoolean() ? \"asc\" : \"desc\";\n      switch(r.nextInt(4)) {\n        case 0: return null;\n        case 1: return \"count \" + dir;\n        case 2: return \"skg \" + dir;\n        case 3: return \"index \" + dir;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","bugFix":["2c705a0d590cf911e7c942df49563ca2ea176e22"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92910727264a23a47b7a6c94b0f75d655537b9ea","date":1540414655,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","sourceNew":"    /**\n     * picks a random value for the \"sort\" param, biased in favor of interesting test cases\n     *\n     * @return a sort string (w/direction), or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     */\n    public static String randomSortParam(Random r) {\n\n      // IMPORTANT!!!\n      // if this method is modified to produce new sorts, make sure to update\n      // randomLimitParam to account for them if they are impacted by SOLR-12556\n      final String dir = random().nextBoolean() ? \"asc\" : \"desc\";\n      switch(r.nextInt(4)) {\n        case 0: return null;\n        case 1: return \"count \" + dir;\n        case 2: return \"skg \" + dir;\n        case 3: return \"index \" + dir;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","sourceOld":"    /**\n     * picks a random value for the \"sort\" param, biased in favor of interesting test cases\n     *\n     * @return a sort string (w/direction), or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     */\n    public static String randomSortParam(Random r) {\n\n      // IMPORTANT!!!\n      // if this method is modified to produce new sorts, make sure to update\n      // randomLimitParam to account for them if they are impacted by SOLR-12556\n      final String dir = random().nextBoolean() ? \"asc\" : \"desc\";\n      switch(r.nextInt(4)) {\n        case 0: return null;\n        case 1: return \"count \" + dir;\n        case 2: return \"skg \" + dir;\n        case 3: return \"index \" + dir;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c705a0d590cf911e7c942df49563ca2ea176e22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84a99d9041ffa5585158e5a283ea1736b6b8b473":["2c705a0d590cf911e7c942df49563ca2ea176e22"],"92910727264a23a47b7a6c94b0f75d655537b9ea":["84a99d9041ffa5585158e5a283ea1736b6b8b473"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["92910727264a23a47b7a6c94b0f75d655537b9ea"]},"commit2Childs":{"2c705a0d590cf911e7c942df49563ca2ea176e22":["84a99d9041ffa5585158e5a283ea1736b6b8b473"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2c705a0d590cf911e7c942df49563ca2ea176e22"],"84a99d9041ffa5585158e5a283ea1736b6b8b473":["92910727264a23a47b7a6c94b0f75d655537b9ea"],"92910727264a23a47b7a6c94b0f75d655537b9ea":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}