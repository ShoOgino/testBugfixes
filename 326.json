{"path":"modules/analysis/common/src/java/org/tartarus/snowball/ext/LovinsStemmer#r_BB().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/LovinsStemmer#r_BB().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/LovinsStemmer#r_BB().mjava","sourceNew":"        private boolean r_BB() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 49\n            // test, line 49\n            v_1 = limit - cursor;\n            // hop, line 49\n            {\n                int c = cursor - 3;\n                if (limit_backward > c || c > limit)\n                {\n                    return false;\n                }\n                cursor = c;\n            }\n            cursor = limit - v_1;\n            // not, line 49\n            {\n                v_2 = limit - cursor;\n                lab0: do {\n                    // literal, line 49\n                    if (!(eq_s_b(3, \"met\")))\n                    {\n                        break lab0;\n                    }\n                    return false;\n                } while (false);\n                cursor = limit - v_2;\n            }\n            // not, line 49\n            {\n                v_3 = limit - cursor;\n                lab1: do {\n                    // literal, line 49\n                    if (!(eq_s_b(4, \"ryst\")))\n                    {\n                        break lab1;\n                    }\n                    return false;\n                } while (false);\n                cursor = limit - v_3;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_BB() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 49\n            // test, line 49\n            v_1 = limit - cursor;\n            // hop, line 49\n            {\n                int c = cursor - 3;\n                if (limit_backward > c || c > limit)\n                {\n                    return false;\n                }\n                cursor = c;\n            }\n            cursor = limit - v_1;\n            // not, line 49\n            {\n                v_2 = limit - cursor;\n                lab0: do {\n                    // literal, line 49\n                    if (!(eq_s_b(3, \"met\")))\n                    {\n                        break lab0;\n                    }\n                    return false;\n                } while (false);\n                cursor = limit - v_2;\n            }\n            // not, line 49\n            {\n                v_3 = limit - cursor;\n                lab1: do {\n                    // literal, line 49\n                    if (!(eq_s_b(4, \"ryst\")))\n                    {\n                        break lab1;\n                    }\n                    return false;\n                } while (false);\n                cursor = limit - v_3;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/LovinsStemmer#r_BB().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/LovinsStemmer#r_BB().mjava","sourceNew":"        private boolean r_BB() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 49\n            // test, line 49\n            v_1 = limit - cursor;\n            // hop, line 49\n            {\n                int c = cursor - 3;\n                if (limit_backward > c || c > limit)\n                {\n                    return false;\n                }\n                cursor = c;\n            }\n            cursor = limit - v_1;\n            // not, line 49\n            {\n                v_2 = limit - cursor;\n                lab0: do {\n                    // literal, line 49\n                    if (!(eq_s_b(3, \"met\")))\n                    {\n                        break lab0;\n                    }\n                    return false;\n                } while (false);\n                cursor = limit - v_2;\n            }\n            // not, line 49\n            {\n                v_3 = limit - cursor;\n                lab1: do {\n                    // literal, line 49\n                    if (!(eq_s_b(4, \"ryst\")))\n                    {\n                        break lab1;\n                    }\n                    return false;\n                } while (false);\n                cursor = limit - v_3;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_BB() {\n            int v_1;\n            int v_2;\n            int v_3;\n            // (, line 49\n            // test, line 49\n            v_1 = limit - cursor;\n            // hop, line 49\n            {\n                int c = cursor - 3;\n                if (limit_backward > c || c > limit)\n                {\n                    return false;\n                }\n                cursor = c;\n            }\n            cursor = limit - v_1;\n            // not, line 49\n            {\n                v_2 = limit - cursor;\n                lab0: do {\n                    // literal, line 49\n                    if (!(eq_s_b(3, \"met\")))\n                    {\n                        break lab0;\n                    }\n                    return false;\n                } while (false);\n                cursor = limit - v_2;\n            }\n            // not, line 49\n            {\n                v_3 = limit - cursor;\n                lab1: do {\n                    // literal, line 49\n                    if (!(eq_s_b(4, \"ryst\")))\n                    {\n                        break lab1;\n                    }\n                    return false;\n                } while (false);\n                cursor = limit - v_3;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}