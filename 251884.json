{"path":"sandbox/contributions/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","commits":[{"id":"36f8536aad2e65f5a64d8784afd359db1b1f62d2","date":1074804556,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","pathOld":"/dev/null","sourceNew":"  public void assertAnalyzesTo(Analyzer a, String input, String[] output)\n    throws Exception {\n\n    TokenStream ts = a.tokenStream(\"dummy\", new StringReader\n      (input));\n\n    for (int i = 0; i < output.length; i++) {\n      Token t = ts.next();\n      assertNotNull(t);\n      assertEquals(t.termText(), output[i]);\n    }\n    assertNull(ts.next());\n    ts.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a28f2a02242055cc5e2dde7ed01137cf7ea6e3c1","date":1074862174,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","pathOld":"sandbox/contributions/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","sourceNew":"\t// Method copied from TestAnalyzers, maybe should be refactored\n\tpublic void assertAnalyzesTo(Analyzer a, String input, String[] output)\n\t\tthrows Exception {\n\n\t\tTokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n\n\t\tfor (int i = 0; i < output.length; i++) {\n\t\t\tToken t = ts.next();\n\t\t\tassertNotNull(t);\n\t\t\tassertEquals(t.termText(), output[i]);\n\t\t}\n\t\tassertNull(ts.next());\n\t\tts.close();\n\t}\n\n","sourceOld":"  public void assertAnalyzesTo(Analyzer a, String input, String[] output)\n    throws Exception {\n\n    TokenStream ts = a.tokenStream(\"dummy\", new StringReader\n      (input));\n\n    for (int i = 0; i < output.length; i++) {\n      Token t = ts.next();\n      assertNotNull(t);\n      assertEquals(t.termText(), output[i]);\n    }\n    assertNull(ts.next());\n    ts.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","pathOld":"sandbox/contributions/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","sourceNew":"\t// Method copied from TestAnalyzers, maybe should be refactored\n\tpublic void assertAnalyzesTo(Analyzer a, String input, String[] output)\n\t\tthrows Exception {\n\n\t\tTokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n\n\t\tfor (int i = 0; i < output.length; i++) {\n\t\t\tToken t = ts.next();\n\t\t\tassertNotNull(t);\n\t\t\tassertEquals(t.termText(), output[i]);\n\t\t}\n\t\tassertNull(ts.next());\n\t\tts.close();\n\t}\n\n","sourceOld":"\t// Method copied from TestAnalyzers, maybe should be refactored\n\tpublic void assertAnalyzesTo(Analyzer a, String input, String[] output)\n\t\tthrows Exception {\n\n\t\tTokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n\n\t\tfor (int i = 0; i < output.length; i++) {\n\t\t\tToken t = ts.next();\n\t\t\tassertNotNull(t);\n\t\t\tassertEquals(t.termText(), output[i]);\n\t\t}\n\t\tassertNull(ts.next());\n\t\tts.close();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["a28f2a02242055cc5e2dde7ed01137cf7ea6e3c1"],"a28f2a02242055cc5e2dde7ed01137cf7ea6e3c1":["36f8536aad2e65f5a64d8784afd359db1b1f62d2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"36f8536aad2e65f5a64d8784afd359db1b1f62d2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a28f2a02242055cc5e2dde7ed01137cf7ea6e3c1":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f8536aad2e65f5a64d8784afd359db1b1f62d2"],"36f8536aad2e65f5a64d8784afd359db1b1f62d2":["a28f2a02242055cc5e2dde7ed01137cf7ea6e3c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}