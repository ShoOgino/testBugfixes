{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  public Object transformRow(Map<String, Object> row, Context context) {\n    try {\n      if (engine == null)\n        initEngine(context);\n      if (engine == null)\n        return row;\n      return invokeFunctionMethod.invoke(engine, functionName, new Object[]{\n              row, context});\n    } catch (DataImportHandlerException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      wrapAndThrow(SEVERE,e,\n              \"Could not invoke method :\"\n                      + functionName\n                      + \"\\n <script>\\n\"\n                      + context.getScript()\n                      + \"</script>\");\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE,e, \"Error invoking script for entity \" + context.getEntityAttribute(\"name\"));\n    }\n    //will not reach here\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public Object transformRow(Map<String, Object> row, Context context) {\n    try {\n      if (engine == null)\n        initEngine(context);\n      if (engine == null)\n        return row;\n      return invokeFunctionMethod.invoke(engine, functionName, new Object[]{\n              row, context});\n    } catch (DataImportHandlerException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      wrapAndThrow(SEVERE,e,\n              \"Could not invoke method :\"\n                      + functionName\n                      + \"\\n <script>\\n\"\n                      + context.getScript()\n                      + \"</script>\");\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE,e, \"Error invoking script for entity \" + context.getEntityAttribute(\"name\"));\n    }\n    //will not reach here\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  public Object transformRow(Map<String, Object> row, Context context) {\n    try {\n      if (engine == null)\n        initEngine(context);\n      if (engine == null)\n        return row;\n      return invokeFunctionMethod.invoke(engine, functionName, new Object[]{\n              row, context});\n    } catch (DataImportHandlerException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      wrapAndThrow(SEVERE,e,\n              \"Could not invoke method :\"\n                      + functionName\n                      + \"\\n <script>\\n\"\n                      + context.getScript()\n                      + \"</script>\");\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE,e, \"Error invoking script for entity \" + context.getEntityAttribute(\"name\"));\n    }\n    //will not reach here\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public Object transformRow(Map<String, Object> row, Context context) {\n    try {\n      if (engine == null)\n        initEngine(context);\n      if (engine == null)\n        return row;\n      return invokeFunctionMethod.invoke(engine, functionName, new Object[]{\n              row, context});\n    } catch (DataImportHandlerException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      wrapAndThrow(SEVERE,e,\n              \"Could not invoke method :\"\n                      + functionName\n                      + \"\\n <script>\\n\"\n                      + context.getScript()\n                      + \"</script>\");\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE,e, \"Error invoking script for entity \" + context.getEntityAttribute(\"name\"));\n    }\n    //will not reach here\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aae2a73c5ef2043e514f991fa7e95acc6f856ecb","date":1332350533,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  public Object transformRow(Map<String, Object> row, Context context) {\n    try {\n      if (engine == null)\n        initEngine(context);\n      if (engine == null)\n        return row;\n      return engine.invokeFunction(functionName, new Object[]{row, context});      \n    } catch (DataImportHandlerException e) {\n      throw e;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE,e, \"Error invoking script for entity \" + context.getEntityAttribute(\"name\"));\n    }\n    //will not reach here\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public Object transformRow(Map<String, Object> row, Context context) {\n    try {\n      if (engine == null)\n        initEngine(context);\n      if (engine == null)\n        return row;\n      return invokeFunctionMethod.invoke(engine, functionName, new Object[]{\n              row, context});\n    } catch (DataImportHandlerException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      wrapAndThrow(SEVERE,e,\n              \"Could not invoke method :\"\n                      + functionName\n                      + \"\\n <script>\\n\"\n                      + context.getScript()\n                      + \"</script>\");\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE,e, \"Error invoking script for entity \" + context.getEntityAttribute(\"name\"));\n    }\n    //will not reach here\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6d0c28263a15e6a013d6643c3b6e389fd45a6c2","date":1576668624,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  public Object transformRow(Map<String,Object> row, Context context) {\n    return AccessController.doPrivileged(new PrivilegedAction<Object>() {\n      @Override\n      public Object run() {\n        return transformRowUnsafe(row, context);\n      }\n    }, SCRIPT_SANDBOX);\n  }\n\n","sourceOld":"  @Override\n  public Object transformRow(Map<String, Object> row, Context context) {\n    try {\n      if (engine == null)\n        initEngine(context);\n      if (engine == null)\n        return row;\n      return engine.invokeFunction(functionName, new Object[]{row, context});      \n    } catch (DataImportHandlerException e) {\n      throw e;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE,e, \"Error invoking script for entity \" + context.getEntityAttribute(\"name\"));\n    }\n    //will not reach here\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21970a18a53245a65302f031a590db9d78d08b4c","date":1576678204,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":"  @Override\n  public Object transformRow(Map<String,Object> row, Context context) {\n    return AccessController.doPrivileged(new PrivilegedAction<Object>() {\n      @Override\n      public Object run() {\n        return transformRowUnsafe(row, context);\n      }\n    }, SCRIPT_SANDBOX);\n  }\n\n","sourceOld":"  @Override\n  public Object transformRow(Map<String, Object> row, Context context) {\n    try {\n      if (engine == null)\n        initEngine(context);\n      if (engine == null)\n        return row;\n      return engine.invokeFunction(functionName, new Object[]{row, context});      \n    } catch (DataImportHandlerException e) {\n      throw e;\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE,e, \"Error invoking script for entity \" + context.getEntityAttribute(\"name\"));\n    }\n    //will not reach here\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ScriptTransformer#transformRow(Map[String,Object],Context).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Object transformRow(Map<String,Object> row, Context context) {\n    return AccessController.doPrivileged(new PrivilegedAction<Object>() {\n      @Override\n      public Object run() {\n        return transformRowUnsafe(row, context);\n      }\n    }, SCRIPT_SANDBOX);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["f6d0c28263a15e6a013d6643c3b6e389fd45a6c2"],"21970a18a53245a65302f031a590db9d78d08b4c":["aae2a73c5ef2043e514f991fa7e95acc6f856ecb","f6d0c28263a15e6a013d6643c3b6e389fd45a6c2"],"aae2a73c5ef2043e514f991fa7e95acc6f856ecb":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f6d0c28263a15e6a013d6643c3b6e389fd45a6c2":["aae2a73c5ef2043e514f991fa7e95acc6f856ecb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21970a18a53245a65302f031a590db9d78d08b4c":[],"aae2a73c5ef2043e514f991fa7e95acc6f856ecb":["21970a18a53245a65302f031a590db9d78d08b4c","f6d0c28263a15e6a013d6643c3b6e389fd45a6c2"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["aae2a73c5ef2043e514f991fa7e95acc6f856ecb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"f6d0c28263a15e6a013d6643c3b6e389fd45a6c2":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","21970a18a53245a65302f031a590db9d78d08b4c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21970a18a53245a65302f031a590db9d78d08b4c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}