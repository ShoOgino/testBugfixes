{"path":"lucene/test-framework/src/java/org/apache/lucene/mockfile/ShuffleFS#newDirectoryStream(Path,Filter[#-super-Path]).mjava","commits":[{"id":"0570a6b8fbda74e4718ba36c70fd1953103a3dcb","date":1429616032,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/ShuffleFS#newDirectoryStream(Path,Filter[#-super-Path]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DirectoryStream<Path> newDirectoryStream(Path dir, Filter<? super Path> filter) throws IOException {\n    try (DirectoryStream<Path> stream = super.newDirectoryStream(dir, filter)) {\n      // read complete directory listing\n      List<Path> contents = new ArrayList<>();\n      for (Path path : stream) {\n        contents.add(path);\n      }\n      // sort first based only on filename\n      Collections.sort(contents, (path1, path2) -> path1.getFileName().toString().compareTo(path2.getFileName().toString()));\n      // sort based on current class seed\n      Collections.shuffle(contents, new Random(seed));\n      return new DirectoryStream<Path>() {\n        @Override\n        public Iterator<Path> iterator() {\n          return contents.iterator();\n        }\n        @Override\n        public void close() throws IOException {}        \n      };\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0570a6b8fbda74e4718ba36c70fd1953103a3dcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0570a6b8fbda74e4718ba36c70fd1953103a3dcb"]},"commit2Childs":{"0570a6b8fbda74e4718ba36c70fd1953103a3dcb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0570a6b8fbda74e4718ba36c70fd1953103a3dcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}