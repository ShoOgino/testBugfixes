{"path":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#testAnalyzerByBogusName().mjava","commits":[{"id":"2c24804758d67429e3055070a9fe970d4f159954","date":1565508925,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#testAnalyzerByBogusName().mjava","pathOld":"/dev/null","sourceNew":"  public void testAnalyzerByBogusName() throws Exception {\n\n    String addFieldTypeAnalyzer = \"{\\n\" +\n        \"'add-field-type' : {\" +\n        \"    'name' : 'myNewTextField',\\n\" +\n        \"    'class':'solr.TextField',\\n\" +\n        \"    'analyzer' : {\\n\" +\n        \"        'tokenizer' : { 'name':'bogus' }\\n\" +\n        \"    }\\n\"+\n        \"}}\";\n\n    String response = restTestHarness.post(\"/schema\", json(addFieldTypeAnalyzer));\n    Map map = (Map) fromJSONString(response);\n    Map error = (Map)map.get(\"error\");\n    assertNotNull(\"No errors\", error);\n    List details = (List)error.get(\"details\");\n    assertNotNull(\"No details\", details);\n    assertEquals(\"Wrong number of details\", 1, details.size());\n    List errorList = (List)((Map)details.get(0)).get(\"errorMessages\");\n    assertEquals(1, errorList.size());\n    assertTrue (((String)errorList.get(0)).contains\n        (\"A SPI class of type org.apache.lucene.analysis.util.TokenizerFactory with name 'bogus' does not exist.\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#testAnalyzerByBogusName().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#testAnalyzerByBogusName().mjava","sourceNew":"  public void testAnalyzerByBogusName() throws Exception {\n\n    String addFieldTypeAnalyzer = \"{\\n\" +\n        \"'add-field-type' : {\" +\n        \"    'name' : 'myNewTextField',\\n\" +\n        \"    'class':'solr.TextField',\\n\" +\n        \"    'analyzer' : {\\n\" +\n        \"        'tokenizer' : { 'name':'bogus' }\\n\" +\n        \"    }\\n\"+\n        \"}}\";\n\n    String response = restTestHarness.post(\"/schema\", json(addFieldTypeAnalyzer));\n    @SuppressWarnings({\"rawtypes\"})\n    Map map = (Map) fromJSONString(response);\n    @SuppressWarnings({\"rawtypes\"})\n    Map error = (Map)map.get(\"error\");\n    assertNotNull(\"No errors\", error);\n    @SuppressWarnings({\"rawtypes\"})\n    List details = (List)error.get(\"details\");\n    assertNotNull(\"No details\", details);\n    assertEquals(\"Wrong number of details\", 1, details.size());\n    @SuppressWarnings({\"rawtypes\"})\n    List errorList = (List)((Map)details.get(0)).get(\"errorMessages\");\n    assertEquals(1, errorList.size());\n    assertTrue (((String)errorList.get(0)).contains\n        (\"A SPI class of type org.apache.lucene.analysis.util.TokenizerFactory with name 'bogus' does not exist.\"));\n  }\n\n","sourceOld":"  public void testAnalyzerByBogusName() throws Exception {\n\n    String addFieldTypeAnalyzer = \"{\\n\" +\n        \"'add-field-type' : {\" +\n        \"    'name' : 'myNewTextField',\\n\" +\n        \"    'class':'solr.TextField',\\n\" +\n        \"    'analyzer' : {\\n\" +\n        \"        'tokenizer' : { 'name':'bogus' }\\n\" +\n        \"    }\\n\"+\n        \"}}\";\n\n    String response = restTestHarness.post(\"/schema\", json(addFieldTypeAnalyzer));\n    Map map = (Map) fromJSONString(response);\n    Map error = (Map)map.get(\"error\");\n    assertNotNull(\"No errors\", error);\n    List details = (List)error.get(\"details\");\n    assertNotNull(\"No details\", details);\n    assertEquals(\"Wrong number of details\", 1, details.size());\n    List errorList = (List)((Map)details.get(0)).get(\"errorMessages\");\n    assertEquals(1, errorList.size());\n    assertTrue (((String)errorList.get(0)).contains\n        (\"A SPI class of type org.apache.lucene.analysis.util.TokenizerFactory with name 'bogus' does not exist.\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":3,"author":"Tomoko Uchida","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#testAnalyzerByBogusName().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#testAnalyzerByBogusName().mjava","sourceNew":"  public void testAnalyzerByBogusName() throws Exception {\n\n    String addFieldTypeAnalyzer = \"{\\n\" +\n        \"'add-field-type' : {\" +\n        \"    'name' : 'myNewTextField',\\n\" +\n        \"    'class':'solr.TextField',\\n\" +\n        \"    'analyzer' : {\\n\" +\n        \"        'tokenizer' : { 'name':'bogus' }\\n\" +\n        \"    }\\n\"+\n        \"}}\";\n\n    String response = restTestHarness.post(\"/schema\", json(addFieldTypeAnalyzer));\n    @SuppressWarnings({\"rawtypes\"})\n    Map map = (Map) fromJSONString(response);\n    @SuppressWarnings({\"rawtypes\"})\n    Map error = (Map)map.get(\"error\");\n    assertNotNull(\"No errors\", error);\n    @SuppressWarnings({\"rawtypes\"})\n    List details = (List)error.get(\"details\");\n    assertNotNull(\"No details\", details);\n    assertEquals(\"Wrong number of details\", 1, details.size());\n    @SuppressWarnings({\"rawtypes\"})\n    List errorList = (List)((Map)details.get(0)).get(\"errorMessages\");\n    assertEquals(1, errorList.size());\n    assertTrue (((String)errorList.get(0)).contains\n        (\"A SPI class of type org.apache.lucene.analysis.TokenizerFactory with name 'bogus' does not exist.\"));\n  }\n\n","sourceOld":"  public void testAnalyzerByBogusName() throws Exception {\n\n    String addFieldTypeAnalyzer = \"{\\n\" +\n        \"'add-field-type' : {\" +\n        \"    'name' : 'myNewTextField',\\n\" +\n        \"    'class':'solr.TextField',\\n\" +\n        \"    'analyzer' : {\\n\" +\n        \"        'tokenizer' : { 'name':'bogus' }\\n\" +\n        \"    }\\n\"+\n        \"}}\";\n\n    String response = restTestHarness.post(\"/schema\", json(addFieldTypeAnalyzer));\n    @SuppressWarnings({\"rawtypes\"})\n    Map map = (Map) fromJSONString(response);\n    @SuppressWarnings({\"rawtypes\"})\n    Map error = (Map)map.get(\"error\");\n    assertNotNull(\"No errors\", error);\n    @SuppressWarnings({\"rawtypes\"})\n    List details = (List)error.get(\"details\");\n    assertNotNull(\"No details\", details);\n    assertEquals(\"Wrong number of details\", 1, details.size());\n    @SuppressWarnings({\"rawtypes\"})\n    List errorList = (List)((Map)details.get(0)).get(\"errorMessages\");\n    assertEquals(1, errorList.size());\n    assertTrue (((String)errorList.get(0)).contains\n        (\"A SPI class of type org.apache.lucene.analysis.util.TokenizerFactory with name 'bogus' does not exist.\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c24804758d67429e3055070a9fe970d4f159954":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"e98520789adb1d5ad05afb4956eca0944a929688":["2c24804758d67429e3055070a9fe970d4f159954"]},"commit2Childs":{"2c24804758d67429e3055070a9fe970d4f159954":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2c24804758d67429e3055070a9fe970d4f159954"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e98520789adb1d5ad05afb4956eca0944a929688":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}