{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random, te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random, te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    InvertedFields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random, te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random, te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random, te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    InvertedFields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random, te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random, te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":["02331260bb246364779cb6f04919ca47900d01bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, 0);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, 0);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, 0);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb07ab105350b80ed9d63ca64b117084ed7391bc","date":1344824719,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, 0);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, 0);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, 0);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, 0);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, 0);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, 0);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15250ca94ba8ab3bcdd476daf6bf3f3febb92640","date":1355200097,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, DocsEnum.FLAG_NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, 0);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, DocsEnum.FLAG_NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, 0);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = TestUtil.docs(random(), te, null, null, DocsEnum.FLAG_NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random(), te, null, null, DocsEnum.FLAG_NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8028ab7a24273833d53d35eb160dba5b57283cf5","date":1416767720,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = TestUtil.docs(random(), te, null, null, DocsEnum.FLAG_NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = TestUtil.docs(random(), te, null, null, DocsEnum.FLAG_NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":["25433c5cacacb7a2055d62d4d36b0daf210e0a10"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        PostingsEnum de = TestUtil.docs(random(), te, null, null, PostingsEnum.FLAG_NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = TestUtil.docs(random(), te, null, null, DocsEnum.FLAG_NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73063b92d958076ef4ae8beb5f493e8ccdcecb4","date":1424177215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        PostingsEnum de = TestUtil.docs(random(), te, null, null, PostingsEnum.NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        PostingsEnum de = TestUtil.docs(random(), te, null, null, PostingsEnum.FLAG_NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator();\n      while (te.next() != null) {\n        PostingsEnum de = TestUtil.docs(random(), te, null, null, PostingsEnum.NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        PostingsEnum de = TestUtil.docs(random(), te, null, null, PostingsEnum.NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator();\n      while (te.next() != null) {\n        PostingsEnum de = TestUtil.docs(random(), te, null, PostingsEnum.NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator();\n      while (te.next() != null) {\n        PostingsEnum de = TestUtil.docs(random(), te, null, null, PostingsEnum.NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7","date":1538404752,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    final Collection<String> fields = MultiFields.getIndexedFields(ir);\n    for (String field : fields) {\n      Terms terms = MultiFields.getTerms(ir, field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator();\n      while (te.next() != null) {\n        PostingsEnum de = TestUtil.docs(random(), te, null, PostingsEnum.NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    for (String field : fields) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator();\n      while (te.next() != null) {\n        PostingsEnum de = TestUtil.docs(random(), te, null, PostingsEnum.NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    final Collection<String> fields = FieldInfos.getIndexedFields(ir);\n    for (String field : fields) {\n      Terms terms = MultiTerms.getTerms(ir, field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator();\n      while (te.next() != null) {\n        PostingsEnum de = TestUtil.docs(random(), te, null, PostingsEnum.NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    final Collection<String> fields = MultiFields.getIndexedFields(ir);\n    for (String field : fields) {\n      Terms terms = MultiFields.getTerms(ir, field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator();\n      while (te.next() != null) {\n        PostingsEnum de = TestUtil.docs(random(), te, null, PostingsEnum.NONE);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["fb07ab105350b80ed9d63ca64b117084ed7391bc","15250ca94ba8ab3bcdd476daf6bf3f3febb92640"],"6613659748fe4411a7dcf85266e55db1f95f7315":["15250ca94ba8ab3bcdd476daf6bf3f3febb92640"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["02331260bb246364779cb6f04919ca47900d01bb"],"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"51f5280f31484820499077f41fcdfe92d527d9dc":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"8028ab7a24273833d53d35eb160dba5b57283cf5":["6613659748fe4411a7dcf85266e55db1f95f7315"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"15250ca94ba8ab3bcdd476daf6bf3f3febb92640":["fb07ab105350b80ed9d63ca64b117084ed7391bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","02331260bb246364779cb6f04919ca47900d01bb"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","02331260bb246364779cb6f04919ca47900d01bb"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["d6f074e73200c07d54f242d3880a8da5a35ff97b","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"02331260bb246364779cb6f04919ca47900d01bb":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"6613659748fe4411a7dcf85266e55db1f95f7315":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c7869f64c874ebf7f317d22c00baf2b6857797a6","15250ca94ba8ab3bcdd476daf6bf3f3febb92640","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"51f5280f31484820499077f41fcdfe92d527d9dc":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7"],"8028ab7a24273833d53d35eb160dba5b57283cf5":["51f5280f31484820499077f41fcdfe92d527d9dc"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"15250ca94ba8ab3bcdd476daf6bf3f3febb92640":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6613659748fe4411a7dcf85266e55db1f95f7315"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","02331260bb246364779cb6f04919ca47900d01bb"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"02331260bb246364779cb6f04919ca47900d01bb":["fb07ab105350b80ed9d63ca64b117084ed7391bc","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}