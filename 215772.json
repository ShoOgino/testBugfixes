{"path":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","sourceNew":"  /** @lucene.internal */\n  public IndexFormatTooOldException(String resourceDesc, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource: \" + resourceDesc + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n    \"). This version of Lucene only supports indexes created with release 3.0 and later.\");\n    assert resourceDesc != null;\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public IndexFormatTooOldException(String resourceDesc, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource: \" + resourceDesc + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n    \"). This version of Lucene only supports indexes created with release 3.0 and later.\");\n    assert resourceDesc != null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","sourceNew":"  /** @lucene.internal */\n  public IndexFormatTooOldException(String resourceDesc, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource: \" + resourceDesc + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n    \"). This version of Lucene only supports indexes created with release 4.0 and later.\");\n    assert resourceDesc != null;\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public IndexFormatTooOldException(String resourceDesc, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource: \" + resourceDesc + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n    \"). This version of Lucene only supports indexes created with release 3.0 and later.\");\n    assert resourceDesc != null;\n  }\n\n","bugFix":null,"bugIntro":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c14aed69f37b57db63b1fccc0740b17060a08f2b","date":1348227091,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","sourceNew":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDesc describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maxium version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDesc, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource: \" + resourceDesc + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n    \"). This version of Lucene only supports indexes created with release 4.0 and later.\");\n    assert resourceDesc != null;\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public IndexFormatTooOldException(String resourceDesc, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource: \" + resourceDesc + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n    \"). This version of Lucene only supports indexes created with release 4.0 and later.\");\n    assert resourceDesc != null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9a70ce9bddc6f985feb8e5e182aebe20872328d4","date":1411172748,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","sourceNew":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDesc describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maxium version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDesc, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported: \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n    \"). This version of Lucene only supports indexes created with release 4.0 and later.\", resourceDesc);\n    assert resourceDesc != null;\n  }\n\n","sourceOld":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDesc describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maxium version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDesc, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource: \" + resourceDesc + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n    \"). This version of Lucene only supports indexes created with release 4.0 and later.\");\n    assert resourceDesc != null;\n  }\n\n","bugFix":["f1efe3edca215dd9891cb42af283fed96f792ca0","57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76e310c76dd6558a4745a42435f2c83d0653bf78","date":1411426186,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","sourceNew":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDesc describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maxium version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDesc, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource \" + resourceDesc + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n        \"). This version of Lucene only supports indexes created with release 4.0 and later.\");\n  }\n\n","sourceOld":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDesc describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maxium version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDesc, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported: \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n    \"). This version of Lucene only supports indexes created with release 4.0 and later.\", resourceDesc);\n    assert resourceDesc != null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7cd425b41357fc2d22c92654fb7c614761ca6fa","date":1438618930,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","sourceNew":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDescription describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maximum version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDescription, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource \" + resourceDescription + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n        \"). This version of Lucene only supports indexes created with release 4.0 and later.\");\n    this.resourceDescription = resourceDescription;\n    this.version = version;\n    this.minVersion = minVersion;\n    this.maxVersion = maxVersion;\n    this.reason = null;\n  }\n\n","sourceOld":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDesc describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maxium version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDesc, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource \" + resourceDesc + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n        \"). This version of Lucene only supports indexes created with release 4.0 and later.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"070197f47974dbdf2d0cfffdcdcea3df47721f46","date":1456907853,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","sourceNew":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDescription describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maximum version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDescription, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource \" + resourceDescription + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n        \"). This version of Lucene only supports indexes created with release 6.0 and later.\");\n    this.resourceDescription = resourceDescription;\n    this.version = version;\n    this.minVersion = minVersion;\n    this.maxVersion = maxVersion;\n    this.reason = null;\n  }\n\n","sourceOld":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDescription describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maximum version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDescription, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource \" + resourceDescription + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n        \"). This version of Lucene only supports indexes created with release 4.0 and later.\");\n    this.resourceDescription = resourceDescription;\n    this.version = version;\n    this.minVersion = minVersion;\n    this.maxVersion = maxVersion;\n    this.reason = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","sourceNew":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDescription describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maximum version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDescription, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource \" + resourceDescription + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n        \"). This version of Lucene only supports indexes created with release 6.0 and later.\");\n    this.resourceDescription = resourceDescription;\n    this.version = version;\n    this.minVersion = minVersion;\n    this.maxVersion = maxVersion;\n    this.reason = null;\n  }\n\n","sourceOld":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDescription describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maximum version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDescription, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource \" + resourceDescription + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n        \"). This version of Lucene only supports indexes created with release 4.0 and later.\");\n    this.resourceDescription = resourceDescription;\n    this.version = version;\n    this.minVersion = minVersion;\n    this.maxVersion = maxVersion;\n    this.reason = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d722b735bc69d2234e957cb69cf96ad28ea7e1c3","date":1546867201,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexFormatTooOldException#IndexFormatTooOldException(String,int,int,int).mjava","sourceNew":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDescription describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maximum version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDescription, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource \" + resourceDescription + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n        \"). This version of Lucene only supports indexes created with release 8.0 and later.\");\n    this.resourceDescription = resourceDescription;\n    this.version = version;\n    this.minVersion = minVersion;\n    this.maxVersion = maxVersion;\n    this.reason = null;\n  }\n\n","sourceOld":"  /** Creates an {@code IndexFormatTooOldException}.\n   *\n   *  @param resourceDescription describes the file that was too old\n   *  @param version the version of the file that was too old\n   *  @param minVersion the minimum version accepted\n   *  @param maxVersion the maximum version accepted\n   * \n   * @lucene.internal */\n  public IndexFormatTooOldException(String resourceDescription, int version, int minVersion, int maxVersion) {\n    super(\"Format version is not supported (resource \" + resourceDescription + \"): \" +\n        version + \" (needs to be between \" + minVersion + \" and \" + maxVersion +\n        \"). This version of Lucene only supports indexes created with release 6.0 and later.\");\n    this.resourceDescription = resourceDescription;\n    this.version = version;\n    this.minVersion = minVersion;\n    this.maxVersion = maxVersion;\n    this.reason = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"070197f47974dbdf2d0cfffdcdcea3df47721f46":["a7cd425b41357fc2d22c92654fb7c614761ca6fa"],"a7cd425b41357fc2d22c92654fb7c614761ca6fa":["76e310c76dd6558a4745a42435f2c83d0653bf78"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["a7cd425b41357fc2d22c92654fb7c614761ca6fa","070197f47974dbdf2d0cfffdcdcea3df47721f46"],"76e310c76dd6558a4745a42435f2c83d0653bf78":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d722b735bc69d2234e957cb69cf96ad28ea7e1c3"],"d722b735bc69d2234e957cb69cf96ad28ea7e1c3":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["76e310c76dd6558a4745a42435f2c83d0653bf78"],"070197f47974dbdf2d0cfffdcdcea3df47721f46":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a7cd425b41357fc2d22c92654fb7c614761ca6fa":["070197f47974dbdf2d0cfffdcdcea3df47721f46","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["d722b735bc69d2234e957cb69cf96ad28ea7e1c3"],"76e310c76dd6558a4745a42435f2c83d0653bf78":["a7cd425b41357fc2d22c92654fb7c614761ca6fa"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d722b735bc69d2234e957cb69cf96ad28ea7e1c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}