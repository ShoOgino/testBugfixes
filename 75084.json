{"path":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","commits":[{"id":"a5093a9e893633cc091cf2f729d7863671c2b715","date":1339132888,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   * @throws KeeperException\n   * @throws InterruptedException\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    try {\n      return element();\n    } catch (NoSuchElementException e) {\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    try {\n      return element();\n    } catch (NoSuchElementException e) {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   * @throws KeeperException\n   * @throws InterruptedException\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    try {\n      return element();\n    } catch (NoSuchElementException e) {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c986b1ea9768aff3c903f05a2c85b7b672b5c225","date":1359126891,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    try {\n      return element().getBytes();\n    } catch (NoSuchElementException e) {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    try {\n      return element();\n    } catch (NoSuchElementException e) {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd45d4a2ee01a1932d33eec42f5272c2402da679","date":1359316912,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    try {\n      return element().getBytes();\n    } catch (NoSuchElementException e) {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    try {\n      return element();\n    } catch (NoSuchElementException e) {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e6c873b95174ff04c895232927baa76a95925eb","date":1385054916,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n      QueueEvent element = element();\n      if(element == null) return null;\n      return element.getBytes();\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    try {\n      return element().getBytes();\n    } catch (NoSuchElementException e) {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n      QueueEvent element = element();\n      if(element == null) return null;\n      return element.getBytes();\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    try {\n      return element().getBytes();\n    } catch (NoSuchElementException e) {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f45f67a018421da088ea39274f23ad5d339b97d","date":1395559348,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    TimerContext time = stats.time(dir + \"_peek\");\n    try {\n      QueueEvent element = element();\n      if (element == null) return null;\n      return element.getBytes();\n    } finally {\n      time.stop();\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n      QueueEvent element = element();\n      if(element == null) return null;\n      return element.getBytes();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a282020d6c9a4ea32a359539e283e4771a2fda8","date":1440047542,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    TimerContext time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   * \n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    TimerContext time = stats.time(dir + \"_peek\");\n    try {\n      QueueEvent element = element();\n      if (element == null) return null;\n      return element.getBytes();\n    } finally {\n      time.stop();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3e7752e8a5e963c6939aaa99c36134147a5ece","date":1479805653,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    Timer.Context time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    TimerContext time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    Timer.Context time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    TimerContext time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac","date":1503580177,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  @Override\n  public byte[] peek() throws KeeperException, InterruptedException {\n    Timer.Context time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    Timer.Context time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b869898f50ca80263bac2e3ae0949f7700e5c977","date":1503580229,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    Timer.Context time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  @Override\n  public byte[] peek() throws KeeperException, InterruptedException {\n    Timer.Context time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89c102d671c256ef8dd67b3ecb3ab96fe7a8006e","date":1505888025,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  @Override\n  public byte[] peek() throws KeeperException, InterruptedException {\n    Timer.Context time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    Timer.Context time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue#peek().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#peek().mjava","sourceNew":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  @Override\n  public byte[] peek() throws KeeperException, InterruptedException {\n    Timer.Context time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the data at the first element of the queue, or null if the queue is\n   * empty.\n   *\n   * @return data at the first element of the queue, or null.\n   */\n  public byte[] peek() throws KeeperException, InterruptedException {\n    Timer.Context time = stats.time(dir + \"_peek\");\n    try {\n      return firstElement();\n    } finally {\n      time.stop();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["a5093a9e893633cc091cf2f729d7863671c2b715"],"0f3e7752e8a5e963c6939aaa99c36134147a5ece":["2a282020d6c9a4ea32a359539e283e4771a2fda8"],"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["0f3e7752e8a5e963c6939aaa99c36134147a5ece"],"9f45f67a018421da088ea39274f23ad5d339b97d":["9e6c873b95174ff04c895232927baa76a95925eb"],"b869898f50ca80263bac2e3ae0949f7700e5c977":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","c986b1ea9768aff3c903f05a2c85b7b672b5c225"],"727bb765ff2542275f6d31f67be18d7104bae148":["2a282020d6c9a4ea32a359539e283e4771a2fda8","0f3e7752e8a5e963c6939aaa99c36134147a5ece"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["b869898f50ca80263bac2e3ae0949f7700e5c977","89c102d671c256ef8dd67b3ecb3ab96fe7a8006e"],"9e6c873b95174ff04c895232927baa76a95925eb":["c986b1ea9768aff3c903f05a2c85b7b672b5c225"],"c986b1ea9768aff3c903f05a2c85b7b672b5c225":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5093a9e893633cc091cf2f729d7863671c2b715":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["c986b1ea9768aff3c903f05a2c85b7b672b5c225","9e6c873b95174ff04c895232927baa76a95925eb"],"89c102d671c256ef8dd67b3ecb3ab96fe7a8006e":["0f3e7752e8a5e963c6939aaa99c36134147a5ece"],"2a282020d6c9a4ea32a359539e283e4771a2fda8":["9f45f67a018421da088ea39274f23ad5d339b97d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89c102d671c256ef8dd67b3ecb3ab96fe7a8006e"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["dd45d4a2ee01a1932d33eec42f5272c2402da679","c986b1ea9768aff3c903f05a2c85b7b672b5c225"],"0f3e7752e8a5e963c6939aaa99c36134147a5ece":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac","727bb765ff2542275f6d31f67be18d7104bae148","89c102d671c256ef8dd67b3ecb3ab96fe7a8006e"],"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["b869898f50ca80263bac2e3ae0949f7700e5c977"],"9f45f67a018421da088ea39274f23ad5d339b97d":["2a282020d6c9a4ea32a359539e283e4771a2fda8"],"b869898f50ca80263bac2e3ae0949f7700e5c977":["6240b74b884c5587f2a4062dd27d6c32bf228889"],"dd45d4a2ee01a1932d33eec42f5272c2402da679":[],"727bb765ff2542275f6d31f67be18d7104bae148":[],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"9e6c873b95174ff04c895232927baa76a95925eb":["9f45f67a018421da088ea39274f23ad5d339b97d","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"c986b1ea9768aff3c903f05a2c85b7b672b5c225":["dd45d4a2ee01a1932d33eec42f5272c2402da679","9e6c873b95174ff04c895232927baa76a95925eb","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5093a9e893633cc091cf2f729d7863671c2b715"],"a5093a9e893633cc091cf2f729d7863671c2b715":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"89c102d671c256ef8dd67b3ecb3ab96fe7a8006e":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a282020d6c9a4ea32a359539e283e4771a2fda8":["0f3e7752e8a5e963c6939aaa99c36134147a5ece","727bb765ff2542275f6d31f67be18d7104bae148"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dd45d4a2ee01a1932d33eec42f5272c2402da679","727bb765ff2542275f6d31f67be18d7104bae148","6240b74b884c5587f2a4062dd27d6c32bf228889","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}