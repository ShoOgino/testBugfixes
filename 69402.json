{"path":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","sourceNew":"        private boolean r_combo_suffix() {\n            int among_var;\n            int v_1;\n            // test, line 91\n            v_1 = limit - cursor;\n            // (, line 91\n            // [, line 92\n            ket = cursor;\n            // substring, line 92\n            among_var = find_among_b(a_2, 46);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 92\n            bra = cursor;\n            // call R1, line 92\n            if (!r_R1())\n            {\n                return false;\n            }\n            // (, line 92\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 100\n                    // <-, line 101\n                    slice_from(\"abil\");\n                    break;\n                case 2:\n                    // (, line 103\n                    // <-, line 104\n                    slice_from(\"ibil\");\n                    break;\n                case 3:\n                    // (, line 106\n                    // <-, line 107\n                    slice_from(\"iv\");\n                    break;\n                case 4:\n                    // (, line 112\n                    // <-, line 113\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 117\n                    // <-, line 118\n                    slice_from(\"at\");\n                    break;\n                case 6:\n                    // (, line 121\n                    // <-, line 122\n                    slice_from(\"it\");\n                    break;\n            }\n            // set standard_suffix_removed, line 125\n            B_standard_suffix_removed = true;\n            cursor = limit - v_1;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_combo_suffix() {\n            int among_var;\n            int v_1;\n            // test, line 91\n            v_1 = limit - cursor;\n            // (, line 91\n            // [, line 92\n            ket = cursor;\n            // substring, line 92\n            among_var = find_among_b(a_2, 46);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 92\n            bra = cursor;\n            // call R1, line 92\n            if (!r_R1())\n            {\n                return false;\n            }\n            // (, line 92\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 100\n                    // <-, line 101\n                    slice_from(\"abil\");\n                    break;\n                case 2:\n                    // (, line 103\n                    // <-, line 104\n                    slice_from(\"ibil\");\n                    break;\n                case 3:\n                    // (, line 106\n                    // <-, line 107\n                    slice_from(\"iv\");\n                    break;\n                case 4:\n                    // (, line 112\n                    // <-, line 113\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 117\n                    // <-, line 118\n                    slice_from(\"at\");\n                    break;\n                case 6:\n                    // (, line 121\n                    // <-, line 122\n                    slice_from(\"it\");\n                    break;\n            }\n            // set standard_suffix_removed, line 125\n            B_standard_suffix_removed = true;\n            cursor = limit - v_1;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer#r_combo_suffix().mjava","sourceNew":"        private boolean r_combo_suffix() {\n            int among_var;\n            int v_1;\n            // test, line 91\n            v_1 = limit - cursor;\n            // (, line 91\n            // [, line 92\n            ket = cursor;\n            // substring, line 92\n            among_var = find_among_b(a_2, 46);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 92\n            bra = cursor;\n            // call R1, line 92\n            if (!r_R1())\n            {\n                return false;\n            }\n            // (, line 92\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 100\n                    // <-, line 101\n                    slice_from(\"abil\");\n                    break;\n                case 2:\n                    // (, line 103\n                    // <-, line 104\n                    slice_from(\"ibil\");\n                    break;\n                case 3:\n                    // (, line 106\n                    // <-, line 107\n                    slice_from(\"iv\");\n                    break;\n                case 4:\n                    // (, line 112\n                    // <-, line 113\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 117\n                    // <-, line 118\n                    slice_from(\"at\");\n                    break;\n                case 6:\n                    // (, line 121\n                    // <-, line 122\n                    slice_from(\"it\");\n                    break;\n            }\n            // set standard_suffix_removed, line 125\n            B_standard_suffix_removed = true;\n            cursor = limit - v_1;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_combo_suffix() {\n            int among_var;\n            int v_1;\n            // test, line 91\n            v_1 = limit - cursor;\n            // (, line 91\n            // [, line 92\n            ket = cursor;\n            // substring, line 92\n            among_var = find_among_b(a_2, 46);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 92\n            bra = cursor;\n            // call R1, line 92\n            if (!r_R1())\n            {\n                return false;\n            }\n            // (, line 92\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 100\n                    // <-, line 101\n                    slice_from(\"abil\");\n                    break;\n                case 2:\n                    // (, line 103\n                    // <-, line 104\n                    slice_from(\"ibil\");\n                    break;\n                case 3:\n                    // (, line 106\n                    // <-, line 107\n                    slice_from(\"iv\");\n                    break;\n                case 4:\n                    // (, line 112\n                    // <-, line 113\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 117\n                    // <-, line 118\n                    slice_from(\"at\");\n                    break;\n                case 6:\n                    // (, line 121\n                    // <-, line 122\n                    slice_from(\"it\");\n                    break;\n            }\n            // set standard_suffix_removed, line 125\n            B_standard_suffix_removed = true;\n            cursor = limit - v_1;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}