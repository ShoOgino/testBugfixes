{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","commits":[{"id":"cfd7f00f3dbc4c50d336540f063493fc0f7d830f","date":1322850565,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultStoredFieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", Lucene40StoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < Lucene40StoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n      if (format > Lucene40StoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", DefaultStoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < DefaultStoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, DefaultStoredFieldsWriter.FORMAT_MINIMUM, DefaultStoredFieldsWriter.FORMAT_CURRENT);\n      if (format > DefaultStoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, DefaultStoredFieldsWriter.FORMAT_MINIMUM, DefaultStoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40StoredFieldsReader#checkCodeVersion(Directory,String).mjava","sourceNew":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", Lucene40StoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < Lucene40StoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n      if (format > Lucene40StoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","sourceOld":"  /** Verifies that the code version which wrote the segment is supported. */\n  public static void checkCodeVersion(Directory dir, String segment) throws IOException {\n    final String indexStreamFN = IndexFileNames.segmentFileName(segment, \"\", Lucene40StoredFieldsWriter.FIELDS_INDEX_EXTENSION);\n    IndexInput idxStream = dir.openInput(indexStreamFN, IOContext.DEFAULT);\n    \n    try {\n      int format = idxStream.readInt();\n      if (format < Lucene40StoredFieldsWriter.FORMAT_MINIMUM)\n        throw new IndexFormatTooOldException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n      if (format > Lucene40StoredFieldsWriter.FORMAT_CURRENT)\n        throw new IndexFormatTooNewException(idxStream, format, Lucene40StoredFieldsWriter.FORMAT_MINIMUM, Lucene40StoredFieldsWriter.FORMAT_CURRENT);\n    } finally {\n      idxStream.close();\n    }\n  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}