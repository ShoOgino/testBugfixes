{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41DocValuesConsumer#addBinaryField(FieldInfo,boolean,int).mjava","commits":[{"id":"f176b7bac2a187d69335c079b1f923449fb2881f","date":1353257308,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41DocValuesConsumer#addBinaryField(FieldInfo,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41DocValuesConsumer#addBinaryField(FieldInfo,boolean,int,int).mjava","sourceNew":"  @Override\n  public BinaryDocValuesConsumer addBinaryField(FieldInfo field,\n      boolean fixedLength, int maxLength) throws IOException {\n    String nameData = IndexFileNames.segmentFileName(this.info.name + \"_\"\n        + field.number, DV_SEGMENT_SUFFIX, DATA_EXTENSION);\n    String idxOut = IndexFileNames.segmentFileName(this.info.name + \"_\"\n        + field.number, DV_SEGMENT_SUFFIX, INDEX_EXTENSION);\n    boolean success = false;\n    IndexOutput dataOut = null;\n    IndexOutput indexOut = null;\n    try {\n      dataOut = dir.createOutput(nameData, context);\n      indexOut = dir.createOutput(idxOut, context);\n      Lucene41BinaryDocValuesConsumer consumer = new Lucene41BinaryDocValuesConsumer(\n          dataOut, indexOut, fixedLength, maxLength);\n      success = true;\n      return consumer;\n    } finally {\n      if (!success) {\n        IOUtils.close(dataOut, indexOut);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public BinaryDocValuesConsumer addBinaryField(FieldInfo field,\n      boolean fixedLength, int maxLength, int numDocs) throws IOException {\n    String nameData = IndexFileNames.segmentFileName(this.info.name + \"_\"\n        + field.number, DV_SEGMENT_SUFFIX, DATA_EXTENSION);\n    String idxOut = IndexFileNames.segmentFileName(this.info.name + \"_\"\n        + field.number, DV_SEGMENT_SUFFIX, INDEX_EXTENSION);\n    boolean success = false;\n    IndexOutput dataOut = null;\n    IndexOutput indexOut = null;\n    try {\n      dataOut = dir.createOutput(nameData, context);\n      indexOut = dir.createOutput(idxOut, context);\n      Lucene41BinaryDocValuesConsumer consumer = new Lucene41BinaryDocValuesConsumer(\n          dataOut, indexOut, fixedLength, maxLength);\n      success = true;\n      return consumer;\n    } finally {\n      if (!success) {\n        IOUtils.close(dataOut, indexOut);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ede45a461a2dcb573505ed9b6a5182dfebd3688f","date":1353338494,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41DocValuesConsumer#addBinaryField(FieldInfo,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41DocValuesConsumer#addBinaryField(FieldInfo,boolean,int).mjava","sourceNew":"  @Override\n  public BinaryDocValuesConsumer addBinaryField(FieldInfo field,\n      boolean fixedLength, int maxLength) throws IOException {\n    String nameData = getDocValuesFileName(info, field, DATA_EXTENSION);\n    String idxOut = getDocValuesFileName(info, field, INDEX_EXTENSION);\n    boolean success = false;\n    IndexOutput dataOut = null;\n    IndexOutput indexOut = null;\n    try {\n      dataOut = getDirectory().createOutput(nameData, context);\n      indexOut = getDirectory().createOutput(idxOut, context);\n      Lucene41BinaryDocValuesConsumer consumer = new Lucene41BinaryDocValuesConsumer(\n          dataOut, indexOut, fixedLength, maxLength);\n      success = true;\n      return consumer;\n    } finally {\n      if (!success) {\n        IOUtils.close(dataOut, indexOut);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public BinaryDocValuesConsumer addBinaryField(FieldInfo field,\n      boolean fixedLength, int maxLength) throws IOException {\n    String nameData = IndexFileNames.segmentFileName(this.info.name + \"_\"\n        + field.number, DV_SEGMENT_SUFFIX, DATA_EXTENSION);\n    String idxOut = IndexFileNames.segmentFileName(this.info.name + \"_\"\n        + field.number, DV_SEGMENT_SUFFIX, INDEX_EXTENSION);\n    boolean success = false;\n    IndexOutput dataOut = null;\n    IndexOutput indexOut = null;\n    try {\n      dataOut = dir.createOutput(nameData, context);\n      indexOut = dir.createOutput(idxOut, context);\n      Lucene41BinaryDocValuesConsumer consumer = new Lucene41BinaryDocValuesConsumer(\n          dataOut, indexOut, fixedLength, maxLength);\n      success = true;\n      return consumer;\n    } finally {\n      if (!success) {\n        IOUtils.close(dataOut, indexOut);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"746e3645169db50c8f53252b30d6bc9ac21dea7c","date":1357597773,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/values/Lucene41DocValuesConsumer#addBinaryField(FieldInfo,boolean,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public BinaryDocValuesConsumer addBinaryField(FieldInfo field,\n      boolean fixedLength, int maxLength) throws IOException {\n    String nameData = getDocValuesFileName(info, field, DATA_EXTENSION);\n    String idxOut = getDocValuesFileName(info, field, INDEX_EXTENSION);\n    boolean success = false;\n    IndexOutput dataOut = null;\n    IndexOutput indexOut = null;\n    try {\n      dataOut = getDirectory().createOutput(nameData, context);\n      indexOut = getDirectory().createOutput(idxOut, context);\n      Lucene41BinaryDocValuesConsumer consumer = new Lucene41BinaryDocValuesConsumer(\n          dataOut, indexOut, fixedLength, maxLength);\n      success = true;\n      return consumer;\n    } finally {\n      if (!success) {\n        IOUtils.close(dataOut, indexOut);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["f176b7bac2a187d69335c079b1f923449fb2881f"],"746e3645169db50c8f53252b30d6bc9ac21dea7c":["ede45a461a2dcb573505ed9b6a5182dfebd3688f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f176b7bac2a187d69335c079b1f923449fb2881f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["746e3645169db50c8f53252b30d6bc9ac21dea7c"],"746e3645169db50c8f53252b30d6bc9ac21dea7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f176b7bac2a187d69335c079b1f923449fb2881f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f176b7bac2a187d69335c079b1f923449fb2881f":["ede45a461a2dcb573505ed9b6a5182dfebd3688f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["746e3645169db50c8f53252b30d6bc9ac21dea7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}