{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","sourceOld":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0","date":1379858263,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true);\n    assertAnalyzesTo(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","sourceOld":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true);\n    assertAnalyzesToReuse(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6237bacfd44ad16661121d7d8a604a57f78978e9","date":1391038488,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true,\n        ShingleFilter.DEFAULT_FILLER_TOKEN);\n    assertAnalyzesTo(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","sourceOld":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true);\n    assertAnalyzesTo(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true,\n        ShingleFilter.DEFAULT_FILLER_TOKEN);\n    assertAnalyzesTo(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n    analyzer.close();\n  }\n\n","sourceOld":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true,\n        ShingleFilter.DEFAULT_FILLER_TOKEN);\n    assertAnalyzesTo(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#testOutputUnigramsIfNoShinglesSingleToken().mjava","sourceNew":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true,\n        ShingleFilter.DEFAULT_FILLER_TOKEN);\n    assertAnalyzesTo(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n    analyzer.close();\n  }\n\n","sourceOld":"  public void testOutputUnigramsIfNoShinglesSingleToken() throws Exception {\n    ShingleAnalyzerWrapper analyzer = new ShingleAnalyzerWrapper(\n        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false),\n        ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE,\n        ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE,\n        \"\", false, true,\n        ShingleFilter.DEFAULT_FILLER_TOKEN);\n    assertAnalyzesTo(analyzer, \"please\",\n                          new String[] { \"please\" },\n                          new int[] { 0 },\n                          new int[] { 6 },\n                          new int[] { 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["6237bacfd44ad16661121d7d8a604a57f78978e9","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["6237bacfd44ad16661121d7d8a604a57f78978e9"],"6237bacfd44ad16661121d7d8a604a57f78978e9":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"df1b735b811bfe6055a98336ee8dfd1e43cf2dc0":["6237bacfd44ad16661121d7d8a604a57f78978e9"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["df1b735b811bfe6055a98336ee8dfd1e43cf2dc0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6237bacfd44ad16661121d7d8a604a57f78978e9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}