{"path":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#flush(SegmentWriteState,Sorter.DocMap,NormsConsumer).mjava","commits":[{"id":"86a0a50d2d14aaee1e635bbec914468551f7f9a2","date":1482234306,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#flush(SegmentWriteState,Sorter.DocMap,NormsConsumer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#flush(SegmentWriteState,NormsConsumer).mjava","sourceNew":"  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, NormsConsumer normsConsumer) throws IOException {\n    final PackedLongValues values = pending.build();\n    final SortingLeafReader.CachedNumericDVs sorted;\n    if (sortMap != null) {\n      sorted = NumericDocValuesWriter.sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedNorms(values, docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    normsConsumer.addNormsField(fieldInfo,\n                                new NormsProducer() {\n                                  @Override\n                                  public NumericDocValues getNorms(FieldInfo fieldInfo2) {\n                                   if (fieldInfo != NormValuesWriter.this.fieldInfo) {\n                                     throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                   }\n                                   if (sorted == null) {\n                                     return new BufferedNorms(values, docsWithField.iterator());\n                                   } else {\n                                     return new SortingLeafReader.SortingNumericDocValues(sorted);\n                                   }\n                                  }\n\n                                  @Override\n                                  public void checkIntegrity() {\n                                  }\n\n                                  @Override\n                                  public void close() {\n                                  }\n                                  \n                                  @Override\n                                  public long ramBytesUsed() {\n                                    return 0;\n                                  }\n                               });\n  }\n\n","sourceOld":"  public void flush(SegmentWriteState state, NormsConsumer normsConsumer) throws IOException {\n\n    final PackedLongValues values = pending.build();\n\n    normsConsumer.addNormsField(fieldInfo,\n                                new NormsProducer() {\n                                  @Override\n                                  public NumericDocValues getNorms(FieldInfo fieldInfo2) {\n                                   if (fieldInfo != NormValuesWriter.this.fieldInfo) {\n                                     throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                   }\n                                   return new BufferedNorms(values, docsWithField.iterator());\n                                  }\n\n                                  @Override\n                                  public void checkIntegrity() {\n                                  }\n\n                                  @Override\n                                  public void close() {\n                                  }\n                                  \n                                  @Override\n                                  public long ramBytesUsed() {\n                                    return 0;\n                                  }\n                               });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#flush(SegmentWriteState,Sorter.DocMap,NormsConsumer).mjava","pathOld":"/dev/null","sourceNew":"  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, NormsConsumer normsConsumer) throws IOException {\n    final PackedLongValues values = pending.build();\n    final SortingLeafReader.CachedNumericDVs sorted;\n    if (sortMap != null) {\n      sorted = NumericDocValuesWriter.sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedNorms(values, docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    normsConsumer.addNormsField(fieldInfo,\n                                new NormsProducer() {\n                                  @Override\n                                  public NumericDocValues getNorms(FieldInfo fieldInfo2) {\n                                   if (fieldInfo != NormValuesWriter.this.fieldInfo) {\n                                     throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                   }\n                                   if (sorted == null) {\n                                     return new BufferedNorms(values, docsWithField.iterator());\n                                   } else {\n                                     return new SortingLeafReader.SortingNumericDocValues(sorted);\n                                   }\n                                  }\n\n                                  @Override\n                                  public void checkIntegrity() {\n                                  }\n\n                                  @Override\n                                  public void close() {\n                                  }\n                                  \n                                  @Override\n                                  public long ramBytesUsed() {\n                                    return 0;\n                                  }\n                               });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63","date":1599130480,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#flush(SegmentWriteState,Sorter.DocMap,NormsConsumer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#flush(SegmentWriteState,Sorter.DocMap,NormsConsumer).mjava","sourceNew":"  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, NormsConsumer normsConsumer) throws IOException {\n    final PackedLongValues values = pending.build();\n    final NumericDocValuesWriter.CachedNumericDVs sorted;\n    if (sortMap != null) {\n      sorted = NumericDocValuesWriter.sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedNorms(values, docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    normsConsumer.addNormsField(fieldInfo,\n                                new NormsProducer() {\n                                  @Override\n                                  public NumericDocValues getNorms(FieldInfo fieldInfo2) {\n                                   if (fieldInfo != NormValuesWriter.this.fieldInfo) {\n                                     throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                   }\n                                   if (sorted == null) {\n                                     return new BufferedNorms(values, docsWithField.iterator());\n                                   } else {\n                                     return new NumericDocValuesWriter.SortingNumericDocValues(sorted);\n                                   }\n                                  }\n\n                                  @Override\n                                  public void checkIntegrity() {\n                                  }\n\n                                  @Override\n                                  public void close() {\n                                  }\n                                  \n                                  @Override\n                                  public long ramBytesUsed() {\n                                    return 0;\n                                  }\n                               });\n  }\n\n","sourceOld":"  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, NormsConsumer normsConsumer) throws IOException {\n    final PackedLongValues values = pending.build();\n    final SortingLeafReader.CachedNumericDVs sorted;\n    if (sortMap != null) {\n      sorted = NumericDocValuesWriter.sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedNorms(values, docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    normsConsumer.addNormsField(fieldInfo,\n                                new NormsProducer() {\n                                  @Override\n                                  public NumericDocValues getNorms(FieldInfo fieldInfo2) {\n                                   if (fieldInfo != NormValuesWriter.this.fieldInfo) {\n                                     throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                   }\n                                   if (sorted == null) {\n                                     return new BufferedNorms(values, docsWithField.iterator());\n                                   } else {\n                                     return new SortingLeafReader.SortingNumericDocValues(sorted);\n                                   }\n                                  }\n\n                                  @Override\n                                  public void checkIntegrity() {\n                                  }\n\n                                  @Override\n                                  public void close() {\n                                  }\n                                  \n                                  @Override\n                                  public long ramBytesUsed() {\n                                    return 0;\n                                  }\n                               });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6109eb85278a3a0b573c754977177cbad278c6c","date":1600863688,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#flush(SegmentWriteState,Sorter.DocMap,NormsConsumer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NormValuesWriter#flush(SegmentWriteState,Sorter.DocMap,NormsConsumer).mjava","sourceNew":"  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, NormsConsumer normsConsumer) throws IOException {\n    final PackedLongValues values = pending.build();\n    final NumericDocValuesWriter.NumericDVs sorted;\n    if (sortMap != null) {\n      sorted = NumericDocValuesWriter.sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedNorms(values, docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    normsConsumer.addNormsField(fieldInfo,\n                                new NormsProducer() {\n                                  @Override\n                                  public NumericDocValues getNorms(FieldInfo fieldInfo2) {\n                                   if (fieldInfo != NormValuesWriter.this.fieldInfo) {\n                                     throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                   }\n                                   if (sorted == null) {\n                                     return new BufferedNorms(values, docsWithField.iterator());\n                                   } else {\n                                     return new NumericDocValuesWriter.SortingNumericDocValues(sorted);\n                                   }\n                                  }\n\n                                  @Override\n                                  public void checkIntegrity() {\n                                  }\n\n                                  @Override\n                                  public void close() {\n                                  }\n                                  \n                                  @Override\n                                  public long ramBytesUsed() {\n                                    return 0;\n                                  }\n                               });\n  }\n\n","sourceOld":"  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, NormsConsumer normsConsumer) throws IOException {\n    final PackedLongValues values = pending.build();\n    final NumericDocValuesWriter.CachedNumericDVs sorted;\n    if (sortMap != null) {\n      sorted = NumericDocValuesWriter.sortDocValues(state.segmentInfo.maxDoc(), sortMap,\n          new BufferedNorms(values, docsWithField.iterator()));\n    } else {\n      sorted = null;\n    }\n    normsConsumer.addNormsField(fieldInfo,\n                                new NormsProducer() {\n                                  @Override\n                                  public NumericDocValues getNorms(FieldInfo fieldInfo2) {\n                                   if (fieldInfo != NormValuesWriter.this.fieldInfo) {\n                                     throw new IllegalArgumentException(\"wrong fieldInfo\");\n                                   }\n                                   if (sorted == null) {\n                                     return new BufferedNorms(values, docsWithField.iterator());\n                                   } else {\n                                     return new NumericDocValuesWriter.SortingNumericDocValues(sorted);\n                                   }\n                                  }\n\n                                  @Override\n                                  public void checkIntegrity() {\n                                  }\n\n                                  @Override\n                                  public void close() {\n                                  }\n                                  \n                                  @Override\n                                  public long ramBytesUsed() {\n                                    return 0;\n                                  }\n                               });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6109eb85278a3a0b573c754977177cbad278c6c":["19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c6109eb85278a3a0b573c754977177cbad278c6c"]},"commit2Childs":{"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"c6109eb85278a3a0b573c754977177cbad278c6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63"],"19d8bfe2b34f3ba4420efc1f441e4145a2ad6c63":["c6109eb85278a3a0b573c754977177cbad278c6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}