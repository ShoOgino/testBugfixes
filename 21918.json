{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizer#setMaxTokenLength(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizer#setMaxTokenLength(int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizer#setMaxTokenLength(int).mjava","sourceNew":"  /** Set the max allowed token length.  Any token longer\n   *  than this is skipped. */\n  public void setMaxTokenLength(int length) {\n    this.maxTokenLength = length;\n  }\n\n","sourceOld":"  /** Set the max allowed token length.  Any token longer\n   *  than this is skipped. */\n  public void setMaxTokenLength(int length) {\n    this.maxTokenLength = length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43acd3a99a12a5bec9c72097de0e294c80cb6daa","date":1396327381,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizer#setMaxTokenLength(int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizer#setMaxTokenLength(int).mjava","sourceNew":"  /** Set the max allowed token length.  Any token longer\n   *  than this is skipped. */\n  public void setMaxTokenLength(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"maxTokenLength must be greater than zero\");\n    }\n    this.maxTokenLength = length;\n  }\n\n","sourceOld":"  /** Set the max allowed token length.  Any token longer\n   *  than this is skipped. */\n  public void setMaxTokenLength(int length) {\n    this.maxTokenLength = length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizer#setMaxTokenLength(int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizer#setMaxTokenLength(int).mjava","sourceNew":"  /** Set the max allowed token length.  Any token longer\n   *  than this is skipped. */\n  public void setMaxTokenLength(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"maxTokenLength must be greater than zero\");\n    }\n    this.maxTokenLength = length;\n  }\n\n","sourceOld":"  /** Set the max allowed token length.  Any token longer\n   *  than this is skipped. */\n  public void setMaxTokenLength(int length) {\n    this.maxTokenLength = length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":5,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/classic/ClassicTokenizer#setMaxTokenLength(int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizer#setMaxTokenLength(int).mjava","sourceNew":"  /** Set the max allowed token length.  Any token longer\n   *  than this is skipped. */\n  public void setMaxTokenLength(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"maxTokenLength must be greater than zero\");\n    }\n    this.maxTokenLength = length;\n  }\n\n","sourceOld":"  /** Set the max allowed token length.  Any token longer\n   *  than this is skipped. */\n  public void setMaxTokenLength(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"maxTokenLength must be greater than zero\");\n    }\n    this.maxTokenLength = length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["b89678825b68eccaf09e6ab71675fc0b0af1e099","43acd3a99a12a5bec9c72097de0e294c80cb6daa"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["43acd3a99a12a5bec9c72097de0e294c80cb6daa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"43acd3a99a12a5bec9c72097de0e294c80cb6daa":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5eb2511ababf862ea11e10761c70ee560cd84510","43acd3a99a12a5bec9c72097de0e294c80cb6daa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43acd3a99a12a5bec9c72097de0e294c80cb6daa":["5eb2511ababf862ea11e10761c70ee560cd84510","313c36388b6cae6118f75a1860ad0ba0af7e1344"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}