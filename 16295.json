{"path":"src/java/org/apache/solr/search/function/ByteFieldSource#getValues(IndexReader).mjava","commits":[{"id":"5ab232266b4f237481db6f2cf86893a18bf29ce1","date":1214948956,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/ByteFieldSource#getValues(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public DocValues getValues(IndexReader reader) throws IOException {\n    final byte[] arr = (parser == null) ?\n            cache.getBytes(reader, field) :\n            cache.getBytes(reader, field, parser);\n    return new DocValues() {\n      @Override\n      public byte byteVal(int doc) {\n        return (byte) arr[doc];\n      }\n\n      @Override\n      public short shortVal(int doc) {\n        return (short) arr[doc];\n      }\n\n      public float floatVal(int doc) {\n        return (float) arr[doc];\n      }\n\n      public int intVal(int doc) {\n        return (int) arr[doc];\n      }\n\n      public long longVal(int doc) {\n        return (long) arr[doc];\n      }\n\n      public double doubleVal(int doc) {\n        return (double) arr[doc];\n      }\n\n      public String strVal(int doc) {\n        return Byte.toString(arr[doc]);\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + byteVal(doc);\n      }\n\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4","d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","date":1253196493,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/ByteFieldSource#getValues(Map,IndexReader).mjava","pathOld":"src/java/org/apache/solr/search/function/ByteFieldSource#getValues(IndexReader).mjava","sourceNew":"  public DocValues getValues(Map context, IndexReader reader) throws IOException {\n    final byte[] arr = (parser == null) ?\n            cache.getBytes(reader, field) :\n            cache.getBytes(reader, field, parser);\n    return new DocValues() {\n      @Override\n      public byte byteVal(int doc) {\n        return (byte) arr[doc];\n      }\n\n      @Override\n      public short shortVal(int doc) {\n        return (short) arr[doc];\n      }\n\n      public float floatVal(int doc) {\n        return (float) arr[doc];\n      }\n\n      public int intVal(int doc) {\n        return (int) arr[doc];\n      }\n\n      public long longVal(int doc) {\n        return (long) arr[doc];\n      }\n\n      public double doubleVal(int doc) {\n        return (double) arr[doc];\n      }\n\n      public String strVal(int doc) {\n        return Byte.toString(arr[doc]);\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + byteVal(doc);\n      }\n\n    };\n  }\n\n","sourceOld":"  public DocValues getValues(IndexReader reader) throws IOException {\n    final byte[] arr = (parser == null) ?\n            cache.getBytes(reader, field) :\n            cache.getBytes(reader, field, parser);\n    return new DocValues() {\n      @Override\n      public byte byteVal(int doc) {\n        return (byte) arr[doc];\n      }\n\n      @Override\n      public short shortVal(int doc) {\n        return (short) arr[doc];\n      }\n\n      public float floatVal(int doc) {\n        return (float) arr[doc];\n      }\n\n      public int intVal(int doc) {\n        return (int) arr[doc];\n      }\n\n      public long longVal(int doc) {\n        return (long) arr[doc];\n      }\n\n      public double doubleVal(int doc) {\n        return (double) arr[doc];\n      }\n\n      public String strVal(int doc) {\n        return Byte.toString(arr[doc]);\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + byteVal(doc);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":["5ab232266b4f237481db6f2cf86893a18bf29ce1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5ab232266b4f237481db6f2cf86893a18bf29ce1":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5ab232266b4f237481db6f2cf86893a18bf29ce1"],"5ab232266b4f237481db6f2cf86893a18bf29ce1":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}