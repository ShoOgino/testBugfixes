{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/State#addEpsilon(State).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/State#addEpsilon(State).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/State#addEpsilon(State).mjava","sourceNew":"  void addEpsilon(State to) {\n    if (to.accept) accept = true;\n    for (Transition t : to.getTransitions())\n      addTransition(t);\n  }\n\n","sourceOld":"  void addEpsilon(State to) {\n    if (to.accept) accept = true;\n    for (Transition t : to.getTransitions())\n      addTransition(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ce825e9276493231308229152c48f755ce1a0a5","date":1348871483,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/State#addEpsilon(State).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/State#addEpsilon(State).mjava","sourceNew":"  /** Virtually adds an epsilon transition to the target\n   *  {@code to} state.  This is implemented by copying all\n   *  transitions from {@code to} to this state, and if {@code\n   *  to} is an accept state then set accept for this state. */\n  public void addEpsilon(State to) {\n    if (to.accept) accept = true;\n    for (Transition t : to.getTransitions())\n      addTransition(t);\n  }\n\n","sourceOld":"  void addEpsilon(State to) {\n    if (to.accept) accept = true;\n    for (Transition t : to.getTransitions())\n      addTransition(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cc37084489c2a7ca417a147a21ba3a24e1c3e8b","date":1348877743,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/State#addEpsilon(State).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/State#addEpsilon(State).mjava","sourceNew":"  /** Virtually adds an epsilon transition to the target\n   *  {@code to} state.  This is implemented by copying all\n   *  transitions from {@code to} to this state, and if {@code\n   *  to} is an accept state then set accept for this state. */\n  void addEpsilon(State to) {\n    if (to.accept) accept = true;\n    for (Transition t : to.getTransitions())\n      addTransition(t);\n  }\n\n","sourceOld":"  /** Virtually adds an epsilon transition to the target\n   *  {@code to} state.  This is implemented by copying all\n   *  transitions from {@code to} to this state, and if {@code\n   *  to} is an accept state then set accept for this state. */\n  public void addEpsilon(State to) {\n    if (to.accept) accept = true;\n    for (Transition t : to.getTransitions())\n      addTransition(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f4ef381bf0c2d618c6db830d3dd668c6901c05a","date":1402592253,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/State#addEpsilon(State).mjava","sourceNew":null,"sourceOld":"  /** Virtually adds an epsilon transition to the target\n   *  {@code to} state.  This is implemented by copying all\n   *  transitions from {@code to} to this state, and if {@code\n   *  to} is an accept state then set accept for this state. */\n  void addEpsilon(State to) {\n    if (to.accept) accept = true;\n    for (Transition t : to.getTransitions())\n      addTransition(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/State#addEpsilon(State).mjava","sourceNew":null,"sourceOld":"  /** Virtually adds an epsilon transition to the target\n   *  {@code to} state.  This is implemented by copying all\n   *  transitions from {@code to} to this state, and if {@code\n   *  to} is an accept state then set accept for this state. */\n  void addEpsilon(State to) {\n    if (to.accept) accept = true;\n    for (Transition t : to.getTransitions())\n      addTransition(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ce825e9276493231308229152c48f755ce1a0a5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["5cc37084489c2a7ca417a147a21ba3a24e1c3e8b"],"5c84485629d80d203608e8975a1139de9933cc38":["5cc37084489c2a7ca417a147a21ba3a24e1c3e8b","7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c84485629d80d203608e8975a1139de9933cc38"],"5cc37084489c2a7ca417a147a21ba3a24e1c3e8b":["6ce825e9276493231308229152c48f755ce1a0a5"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6ce825e9276493231308229152c48f755ce1a0a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6ce825e9276493231308229152c48f755ce1a0a5":["5cc37084489c2a7ca417a147a21ba3a24e1c3e8b"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cc37084489c2a7ca417a147a21ba3a24e1c3e8b":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a","5c84485629d80d203608e8975a1139de9933cc38"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}