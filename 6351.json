{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams).mjava","commits":[{"id":"6b4144476bf37b7500e29f9586d2fc733029b077","date":1225431123,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          if (importer.getDocBuilder().importStatistics.docCount.get() >= requestParams.rows) {\n            // Abort this operation now\n            importer.getDocBuilder().abort();\n            LOG.info(\"Indexing stopped at docCount = \" + importer.getDocBuilder().importStatistics.docCount);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n            if (debugDocuments.size() >= requestParams.rows) {\n              // Abort this operation now\n              importer.getDocBuilder().abort();\n            }\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00e13feee5c0e49640da959c282367763b8bdbde","date":1235044794,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          if (importer.getDocBuilder().importStatistics.docCount.get() >= requestParams.rows) {\n            // Abort this operation now\n            importer.getDocBuilder().abort();\n            LOG.info(\"Indexing stopped at docCount = \" + importer.getDocBuilder().importStatistics.docCount);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","bugFix":["6b4144476bf37b7500e29f9586d2fc733029b077","157728c1f42b384dfc049157cc95adc767da3415"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8a5eb53fdb9b644b0938ea8d04a2a5a7dd7edec","date":1245670073,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams) {\n\n    return new SolrWriter(processor, loader.getConfigDir()) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6b4144476bf37b7500e29f9586d2fc733029b077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"f8a5eb53fdb9b644b0938ea8d04a2a5a7dd7edec":["00e13feee5c0e49640da959c282367763b8bdbde"],"00e13feee5c0e49640da959c282367763b8bdbde":["6b4144476bf37b7500e29f9586d2fc733029b077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["f8a5eb53fdb9b644b0938ea8d04a2a5a7dd7edec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6b4144476bf37b7500e29f9586d2fc733029b077":["00e13feee5c0e49640da959c282367763b8bdbde"],"f8a5eb53fdb9b644b0938ea8d04a2a5a7dd7edec":["ad94625fb8d088209f46650c8097196fec67f00c"],"00e13feee5c0e49640da959c282367763b8bdbde":["f8a5eb53fdb9b644b0938ea8d04a2a5a7dd7edec"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["6b4144476bf37b7500e29f9586d2fc733029b077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}