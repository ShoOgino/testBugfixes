{"path":"lucene/core/src/java/org/apache/lucene/search/SearcherLifetimeManager#acquire(long).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SearcherLifetimeManager#acquire(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SearcherLifetimeManager#acquire(long).mjava","sourceNew":"  /** Retrieve a previously recorded {@link IndexSearcher}, if it\n   *  has not yet been closed\n   *\n   *  <p><b>NOTE</b>: this may return null when the\n   *  requested searcher has already timed out.  When this\n   *  happens you should notify your user that their session\n   *  timed out and that they'll have to restart their\n   *  search.\n   *\n   *  <p>If this returns a non-null result, you must match\n   *  later call {@link #release} on this searcher, best\n   *  from a finally clause. */\n  public IndexSearcher acquire(long version) {\n    ensureOpen();\n    final SearcherTracker tracker = searchers.get(version);\n    if (tracker != null &&\n        tracker.searcher.getIndexReader().tryIncRef()) {\n      return tracker.searcher;\n    }\n\n    return null;\n  }\n\n","sourceOld":"  /** Retrieve a previously recorded {@link IndexSearcher}, if it\n   *  has not yet been closed\n   *\n   *  <p><b>NOTE</b>: this may return null when the\n   *  requested searcher has already timed out.  When this\n   *  happens you should notify your user that their session\n   *  timed out and that they'll have to restart their\n   *  search.\n   *\n   *  <p>If this returns a non-null result, you must match\n   *  later call {@link #release} on this searcher, best\n   *  from a finally clause. */\n  public IndexSearcher acquire(long version) {\n    ensureOpen();\n    final SearcherTracker tracker = searchers.get(version);\n    if (tracker != null &&\n        tracker.searcher.getIndexReader().tryIncRef()) {\n      return tracker.searcher;\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}