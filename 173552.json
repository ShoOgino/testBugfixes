{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testPacManPolyQuery().mjava","commits":[{"id":"e91b7d9f5000faefb0e81b98e76ad5b9463283e8","date":1433799348,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testPacManPolyQuery().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoUtils.rectCrossesPoly(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoUtils.rectCrossesPoly(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoUtils.rectWithinPoly(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07c50cb1eca5629cac5b6702dd0f5e06157af61a","date":1445464748,"type":3,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testPacManPolyQuery().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testPacManPolyQuery().mjava","sourceNew":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoUtils.rectCrossesPoly(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoUtils.rectCrossesPoly(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoUtils.rectWithinPoly(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","sourceOld":"  @Test\n  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoUtils.rectCrossesPoly(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoUtils.rectCrossesPoly(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoUtils.rectWithinPoly(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33bb6bd7295e66f93f182556f5353b97243e62ba","date":1449525768,"type":3,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testPacManPolyQuery().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testPacManPolyQuery().mjava","sourceNew":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPoly(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPoly(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPoly(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","sourceOld":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoUtils.rectCrossesPoly(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoUtils.rectCrossesPoly(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoUtils.rectWithinPoly(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","bugFix":null,"bugIntro":["04995b00da1e08edb88b14c5a9789d741de5c51d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04995b00da1e08edb88b14c5a9789d741de5c51d","date":1453863716,"type":3,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testPacManPolyQuery().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testPacManPolyQuery().mjava","sourceNew":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPolyApprox(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPolyApprox(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPolyApprox(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","sourceOld":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPoly(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPoly(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPoly(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","bugFix":["33bb6bd7295e66f93f182556f5353b97243e62ba"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#testPacManPolyQuery().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testPacManPolyQuery().mjava","sourceNew":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPolyApprox(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPolyApprox(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPolyApprox(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","sourceOld":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPolyApprox(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPolyApprox(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPolyApprox(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#testPacManPolyQuery().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testPacManPolyQuery().mjava","sourceNew":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPolyApprox(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPolyApprox(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPolyApprox(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","sourceOld":"  public void testPacManPolyQuery() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // shape bbox\n    double xMinA = -10;\n    double xMaxA = 10;\n    double yMinA = -10;\n    double yMaxA = 10;\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    assertTrue(GeoRelationUtils.rectCrossesPoly(xMin, yMin, xMax, yMax, px, py, xMinA, yMinA, xMaxA, yMaxA));\n    assertFalse(GeoRelationUtils.rectCrossesPoly(-5, 0,  0.000001, 5, px, py, xMin, yMin, xMax, yMax));\n    assertTrue(GeoRelationUtils.rectWithinPoly(-5, 0, -2, 5, px, py, xMin, yMin, xMax, yMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["33bb6bd7295e66f93f182556f5353b97243e62ba","937923083e4d137932336fc80f3d78758ff698a6"],"07c50cb1eca5629cac5b6702dd0f5e06157af61a":["e91b7d9f5000faefb0e81b98e76ad5b9463283e8"],"e91b7d9f5000faefb0e81b98e76ad5b9463283e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"937923083e4d137932336fc80f3d78758ff698a6":["04995b00da1e08edb88b14c5a9789d741de5c51d"],"04995b00da1e08edb88b14c5a9789d741de5c51d":["33bb6bd7295e66f93f182556f5353b97243e62ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["937923083e4d137932336fc80f3d78758ff698a6"],"33bb6bd7295e66f93f182556f5353b97243e62ba":["07c50cb1eca5629cac5b6702dd0f5e06157af61a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e91b7d9f5000faefb0e81b98e76ad5b9463283e8"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"07c50cb1eca5629cac5b6702dd0f5e06157af61a":["33bb6bd7295e66f93f182556f5353b97243e62ba"],"e91b7d9f5000faefb0e81b98e76ad5b9463283e8":["07c50cb1eca5629cac5b6702dd0f5e06157af61a"],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"04995b00da1e08edb88b14c5a9789d741de5c51d":["937923083e4d137932336fc80f3d78758ff698a6"],"33bb6bd7295e66f93f182556f5353b97243e62ba":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","04995b00da1e08edb88b14c5a9789d741de5c51d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}