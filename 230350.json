{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TupleStream#writeMap(EntryWriter).mjava","commits":[{"id":"0192949680ef6812c36a6fd2c7344d74bb7a81d3","date":1478610686,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TupleStream#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    open();\n    ew.put(\"docs\", (IteratorWriter) iw -> {\n      try {\n        for (; ; ) {\n          Tuple tuple = read();\n          if (tuple != null) {\n            iw.add(tuple);\n            if (tuple.EOF) {\n              close();\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe15a42e904812683ef9365c28389e14f639466","date":1478615818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TupleStream#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    open();\n    ew.put(\"docs\", (IteratorWriter) iw -> {\n      try {\n        for (; ; ) {\n          Tuple tuple = read();\n          if (tuple != null) {\n            iw.add(tuple);\n            if (tuple.EOF) {\n              close();\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TupleStream#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    open();\n    ew.put(\"docs\", (IteratorWriter) iw -> {\n      try {\n        for (; ; ) {\n          Tuple tuple = read();\n          if (tuple != null) {\n            iw.add(tuple);\n            if (tuple.EOF) {\n              close();\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fa113475b0d7da1c7f347c5c0014c210851f7c0","date":1495464242,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TupleStream#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TupleStream#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    open();\n    ew.put(\"docs\", (IteratorWriter) iw -> {\n      try {\n        for ( ; ; ) {\n          Tuple tuple = read();\n          if (tuple != null) {\n            iw.add(tuple);\n            if (tuple.EOF) {\n              close();\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n      } catch (Throwable e) {\n        close();\n        Throwable ex = e;\n        while(ex != null) {\n          String m = ex.getMessage();\n          if(m != null && m.contains(\"Broken pipe\")) {\n            throw new IgnoreException();\n          }\n          ex = ex.getCause();\n        }\n\n        if(e instanceof IOException) {\n          throw e;\n        } else {\n          throw new IOException(e);\n        }\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    open();\n    ew.put(\"docs\", (IteratorWriter) iw -> {\n      try {\n        for (; ; ) {\n          Tuple tuple = read();\n          if (tuple != null) {\n            iw.add(tuple);\n            if (tuple.EOF) {\n              close();\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TupleStream#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TupleStream#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    open();\n    ew.put(\"docs\", (IteratorWriter) iw -> {\n      try {\n        for ( ; ; ) {\n          Tuple tuple = read();\n          if (tuple != null) {\n            iw.add(tuple);\n            if (tuple.EOF) {\n              close();\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n      } catch (Throwable e) {\n        close();\n        Throwable ex = e;\n        while(ex != null) {\n          String m = ex.getMessage();\n          if(m != null && m.contains(\"Broken pipe\")) {\n            throw new IgnoreException();\n          }\n          ex = ex.getCause();\n        }\n\n        if(e instanceof IOException) {\n          throw e;\n        } else {\n          throw new IOException(e);\n        }\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    open();\n    ew.put(\"docs\", (IteratorWriter) iw -> {\n      try {\n        for (; ; ) {\n          Tuple tuple = read();\n          if (tuple != null) {\n            iw.add(tuple);\n            if (tuple.EOF) {\n              close();\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["8fe15a42e904812683ef9365c28389e14f639466","9fa113475b0d7da1c7f347c5c0014c210851f7c0"],"8fe15a42e904812683ef9365c28389e14f639466":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0192949680ef6812c36a6fd2c7344d74bb7a81d3"],"9fa113475b0d7da1c7f347c5c0014c210851f7c0":["8fe15a42e904812683ef9365c28389e14f639466"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8fe15a42e904812683ef9365c28389e14f639466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9fa113475b0d7da1c7f347c5c0014c210851f7c0"],"0192949680ef6812c36a6fd2c7344d74bb7a81d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"8fe15a42e904812683ef9365c28389e14f639466":["e9017cf144952056066919f1ebc7897ff9bd71b1","9fa113475b0d7da1c7f347c5c0014c210851f7c0","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"9fa113475b0d7da1c7f347c5c0014c210851f7c0":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fe15a42e904812683ef9365c28389e14f639466","199dfa410f1fdbfd3294106b04096cce5ed34b21","0192949680ef6812c36a6fd2c7344d74bb7a81d3"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"0192949680ef6812c36a6fd2c7344d74bb7a81d3":["8fe15a42e904812683ef9365c28389e14f639466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}