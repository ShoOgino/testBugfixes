{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(5);\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(5);\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(5);\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9","date":1270985469,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10","date":1270996866,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4","date":1271167458,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory(random);\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory(random);\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(5);\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n    \n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      addDoc(writer);\n\n    IndexReader reader = IndexReader.open(dir, true);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir, true);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = reader.reopen();\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir, true);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir, true);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3bb13258feba31ab676502787ab2e1779f129b7a","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"d572389229127c297dd1fa5ce4758e1cec41e799":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["f2c5f0cb44df114db4228c8f77861714b5cabaea","962d04139994fce5193143ef35615499a9a96d78"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"79c2cb24929f2649a8875fb629086171f914d5ce":["a3776dccca01c11e7046323cfad46a3b4a471233","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4e8cc373c801e54cec75daf9f52792cb4b17f536","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"3bb13258feba31ab676502787ab2e1779f129b7a":["1f653cfcf159baeaafe5d01682a911e95bba4012","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"962d04139994fce5193143ef35615499a9a96d78":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["d572389229127c297dd1fa5ce4758e1cec41e799"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","962d04139994fce5193143ef35615499a9a96d78"],"79c2cb24929f2649a8875fb629086171f914d5ce":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["79c2cb24929f2649a8875fb629086171f914d5ce"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"3bb13258feba31ab676502787ab2e1779f129b7a":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}