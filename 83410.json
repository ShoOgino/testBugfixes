{"path":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#testDocValues(SegmentInfo,FieldInfos,SegmentReader).mjava","commits":[{"id":"d2dee33619431ada2a7a07f5fe2dbd94bac6a460","date":1337274029,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#testDocValues(SegmentInfo,FieldInfos,SegmentReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#testDocValues(SegmentInfo,SegmentReader).mjava","sourceNew":"  private Status.DocValuesStatus testDocValues(SegmentInfo info,\n                                               FieldInfos fieldInfos,\n                                               SegmentReader reader) {\n    final Status.DocValuesStatus status = new Status.DocValuesStatus();\n    try {\n      if (infoStream != null) {\n        infoStream.print(\"    test: DocValues........\");\n      }\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.hasDocValues()) {\n          status.totalValueFields++;\n          final DocValues docValues = reader.docValues(fieldInfo.name);\n          checkDocValues(docValues, fieldInfo.name, fieldInfo.getDocValuesType(), reader.maxDoc());\n        } else {\n          if (reader.docValues(fieldInfo.name) != null) {\n            throw new RuntimeException(\"field: \" + fieldInfo.name + \" has docvalues but should omit them!\");\n          }\n        }\n      }\n\n      msg(\"OK [\" + status.docCount + \" total doc Count; Num DocValues Fields \"\n          + status.totalValueFields);\n    } catch (Throwable e) {\n      msg(\"ERROR [\" + String.valueOf(e.getMessage()) + \"]\");\n      status.error = e;\n      if (infoStream != null) {\n        e.printStackTrace(infoStream);\n      }\n    }\n    return status;\n  }\n\n","sourceOld":"  private Status.DocValuesStatus testDocValues(SegmentInfo info,\n      SegmentReader reader) {\n    final Status.DocValuesStatus status = new Status.DocValuesStatus();\n    try {\n      if (infoStream != null) {\n        infoStream.print(\"    test: DocValues........\");\n      }\n      final FieldInfos fieldInfos = info.getFieldInfos();\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.hasDocValues()) {\n          status.totalValueFields++;\n          final DocValues docValues = reader.docValues(fieldInfo.name);\n          checkDocValues(docValues, fieldInfo.name, fieldInfo.getDocValuesType(), reader.maxDoc());\n        } else {\n          if (reader.docValues(fieldInfo.name) != null) {\n            throw new RuntimeException(\"field: \" + fieldInfo.name + \" has docvalues but should omit them!\");\n          }\n        }\n      }\n\n      msg(\"OK [\" + status.docCount + \" total doc Count; Num DocValues Fields \"\n          + status.totalValueFields);\n    } catch (Throwable e) {\n      msg(\"ERROR [\" + String.valueOf(e.getMessage()) + \"]\");\n      status.error = e;\n      if (infoStream != null) {\n        e.printStackTrace(infoStream);\n      }\n    }\n    return status;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#testDocValues(SegmentInfoPerCommit,FieldInfos,SegmentReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#testDocValues(SegmentInfo,FieldInfos,SegmentReader).mjava","sourceNew":"  private Status.DocValuesStatus testDocValues(SegmentInfoPerCommit info,\n                                               FieldInfos fieldInfos,\n                                               SegmentReader reader) {\n    final Status.DocValuesStatus status = new Status.DocValuesStatus();\n    try {\n      if (infoStream != null) {\n        infoStream.print(\"    test: DocValues........\");\n      }\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.hasDocValues()) {\n          status.totalValueFields++;\n          final DocValues docValues = reader.docValues(fieldInfo.name);\n          checkDocValues(docValues, fieldInfo.name, fieldInfo.getDocValuesType(), reader.maxDoc());\n        } else {\n          if (reader.docValues(fieldInfo.name) != null) {\n            throw new RuntimeException(\"field: \" + fieldInfo.name + \" has docvalues but should omit them!\");\n          }\n        }\n      }\n\n      msg(\"OK [\" + status.docCount + \" total doc Count; Num DocValues Fields \"\n          + status.totalValueFields);\n    } catch (Throwable e) {\n      msg(\"ERROR [\" + String.valueOf(e.getMessage()) + \"]\");\n      status.error = e;\n      if (infoStream != null) {\n        e.printStackTrace(infoStream);\n      }\n    }\n    return status;\n  }\n\n","sourceOld":"  private Status.DocValuesStatus testDocValues(SegmentInfo info,\n                                               FieldInfos fieldInfos,\n                                               SegmentReader reader) {\n    final Status.DocValuesStatus status = new Status.DocValuesStatus();\n    try {\n      if (infoStream != null) {\n        infoStream.print(\"    test: DocValues........\");\n      }\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.hasDocValues()) {\n          status.totalValueFields++;\n          final DocValues docValues = reader.docValues(fieldInfo.name);\n          checkDocValues(docValues, fieldInfo.name, fieldInfo.getDocValuesType(), reader.maxDoc());\n        } else {\n          if (reader.docValues(fieldInfo.name) != null) {\n            throw new RuntimeException(\"field: \" + fieldInfo.name + \" has docvalues but should omit them!\");\n          }\n        }\n      }\n\n      msg(\"OK [\" + status.docCount + \" total doc Count; Num DocValues Fields \"\n          + status.totalValueFields);\n    } catch (Throwable e) {\n      msg(\"ERROR [\" + String.valueOf(e.getMessage()) + \"]\");\n      status.error = e;\n      if (infoStream != null) {\n        e.printStackTrace(infoStream);\n      }\n    }\n    return status;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["d2dee33619431ada2a7a07f5fe2dbd94bac6a460"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d2dee33619431ada2a7a07f5fe2dbd94bac6a460":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2dee33619431ada2a7a07f5fe2dbd94bac6a460","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9d153abcf92dc5329d98571a8c3035df9bd80648":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9d153abcf92dc5329d98571a8c3035df9bd80648","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}