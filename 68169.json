{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SumRowsEvaluator#doWork(Object).mjava","commits":[{"id":"a8c5e58e88072db16e2a636f1738f87c1df207bd","date":1510101986,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SumRowsEvaluator#doWork(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      return null;\n    } else if (value instanceof Matrix) {\n\n      Matrix matrix = (Matrix) value;\n      double[][] data = matrix.getData();\n      List<Number> sums = new ArrayList(data.length);\n\n      for(int i=0; i<data.length; i++) {\n        double sum = 0;\n        double[] row = data[i];\n        for(int j=0; j<row.length; j++){\n          sum+=row[j];\n        }\n\n        sums.add(sum);\n      }\n\n      return sums;\n    } else {\n      throw new IOException(\"Grand sum function only operates on a matrix\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SumRowsEvaluator#doWork(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      return null;\n    } else if (value instanceof Matrix) {\n\n      Matrix matrix = (Matrix) value;\n      double[][] data = matrix.getData();\n      List<Number> sums = new ArrayList(data.length);\n\n      for(int i=0; i<data.length; i++) {\n        double sum = 0;\n        double[] row = data[i];\n        for(int j=0; j<row.length; j++){\n          sum+=row[j];\n        }\n\n        sums.add(sum);\n      }\n\n      return sums;\n    } else {\n      throw new IOException(\"Grand sum function only operates on a matrix\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885","date":1591579911,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SumRowsEvaluator#doWork(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SumRowsEvaluator#doWork(Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      return null;\n    } else if (value instanceof Matrix) {\n\n      Matrix matrix = (Matrix) value;\n      double[][] data = matrix.getData();\n      List<Number> sums = new ArrayList<>(data.length);\n\n      for(int i=0; i<data.length; i++) {\n        double sum = 0;\n        double[] row = data[i];\n        for(int j=0; j<row.length; j++){\n          sum+=row[j];\n        }\n\n        sums.add(sum);\n      }\n\n      return sums;\n    } else {\n      throw new IOException(\"Grand sum function only operates on a matrix\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      return null;\n    } else if (value instanceof Matrix) {\n\n      Matrix matrix = (Matrix) value;\n      double[][] data = matrix.getData();\n      List<Number> sums = new ArrayList(data.length);\n\n      for(int i=0; i<data.length; i++) {\n        double sum = 0;\n        double[] row = data[i];\n        for(int j=0; j<row.length; j++){\n          sum+=row[j];\n        }\n\n        sums.add(sum);\n      }\n\n      return sums;\n    } else {\n      throw new IOException(\"Grand sum function only operates on a matrix\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"a8c5e58e88072db16e2a636f1738f87c1df207bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a8c5e58e88072db16e2a636f1738f87c1df207bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885"]},"commit2Childs":{"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a8c5e58e88072db16e2a636f1738f87c1df207bd":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a8c5e58e88072db16e2a636f1738f87c1df207bd","d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}