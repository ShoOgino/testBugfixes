{"path":"solr/contrib/uima/src/test/org/apache/solr/uima/ts/SentimentAnnotation_Type#SentimentAnnotation_Type(JCas,Type).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/ts/SentimentAnnotation_Type#SentimentAnnotation_Type(JCas,Type).mjava","pathOld":"solr/contrib/uima/src/test/java/org/apache/solr/uima/ts/SentimentAnnotation_Type#SentimentAnnotation_Type(JCas,Type).mjava","sourceNew":"  /** initialize variables to correspond with Cas Type and Features\n\t* @generated */\n  public SentimentAnnotation_Type(JCas jcas, Type casType) {\n    super(jcas, casType);\n    casImpl.getFSClassRegistry().addGeneratorForType((TypeImpl)this.casType, getFSGenerator());\n\n \n    casFeat_mood = jcas.getRequiredFeatureDE(casType, \"mood\", \"uima.cas.String\", featOkTst);\n    casFeatCode_mood  = (null == casFeat_mood) ? JCas.INVALID_FEATURE_CODE : ((FeatureImpl)casFeat_mood).getCode();\n\n  }\n\n","sourceOld":"  /** initialize variables to correspond with Cas Type and Features\n\t* @generated */\n  public SentimentAnnotation_Type(JCas jcas, Type casType) {\n    super(jcas, casType);\n    casImpl.getFSClassRegistry().addGeneratorForType((TypeImpl)this.casType, getFSGenerator());\n\n \n    casFeat_mood = jcas.getRequiredFeatureDE(casType, \"mood\", \"uima.cas.String\", featOkTst);\n    casFeatCode_mood  = (null == casFeat_mood) ? JCas.INVALID_FEATURE_CODE : ((FeatureImpl)casFeat_mood).getCode();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/ts/SentimentAnnotation_Type#SentimentAnnotation_Type(JCas,Type).mjava","pathOld":"solr/contrib/uima/src/test/java/org/apache/solr/uima/ts/SentimentAnnotation_Type#SentimentAnnotation_Type(JCas,Type).mjava","sourceNew":"  /** initialize variables to correspond with Cas Type and Features\n\t* @generated */\n  public SentimentAnnotation_Type(JCas jcas, Type casType) {\n    super(jcas, casType);\n    casImpl.getFSClassRegistry().addGeneratorForType((TypeImpl)this.casType, getFSGenerator());\n\n \n    casFeat_mood = jcas.getRequiredFeatureDE(casType, \"mood\", \"uima.cas.String\", featOkTst);\n    casFeatCode_mood  = (null == casFeat_mood) ? JCas.INVALID_FEATURE_CODE : ((FeatureImpl)casFeat_mood).getCode();\n\n  }\n\n","sourceOld":"  /** initialize variables to correspond with Cas Type and Features\n\t* @generated */\n  public SentimentAnnotation_Type(JCas jcas, Type casType) {\n    super(jcas, casType);\n    casImpl.getFSClassRegistry().addGeneratorForType((TypeImpl)this.casType, getFSGenerator());\n\n \n    casFeat_mood = jcas.getRequiredFeatureDE(casType, \"mood\", \"uima.cas.String\", featOkTst);\n    casFeatCode_mood  = (null == casFeat_mood) ? JCas.INVALID_FEATURE_CODE : ((FeatureImpl)casFeat_mood).getCode();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/ts/SentimentAnnotation_Type#SentimentAnnotation_Type(JCas,Type).mjava","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/ts/SentimentAnnotation_Type#SentimentAnnotation_Type(JCas,Type).mjava","sourceNew":"  /** initialize variables to correspond with Cas Type and Features\n  * @generated */\n  public SentimentAnnotation_Type(JCas jcas, Type casType) {\n    super(jcas, casType);\n    casImpl.getFSClassRegistry().addGeneratorForType((TypeImpl)this.casType, getFSGenerator());\n\n \n    casFeat_mood = jcas.getRequiredFeatureDE(casType, \"mood\", \"uima.cas.String\", featOkTst);\n    casFeatCode_mood  = (null == casFeat_mood) ? JCas.INVALID_FEATURE_CODE : ((FeatureImpl)casFeat_mood).getCode();\n\n  }\n\n","sourceOld":"  /** initialize variables to correspond with Cas Type and Features\n\t* @generated */\n  public SentimentAnnotation_Type(JCas jcas, Type casType) {\n    super(jcas, casType);\n    casImpl.getFSClassRegistry().addGeneratorForType((TypeImpl)this.casType, getFSGenerator());\n\n \n    casFeat_mood = jcas.getRequiredFeatureDE(casType, \"mood\", \"uima.cas.String\", featOkTst);\n    casFeatCode_mood  = (null == casFeat_mood) ? JCas.INVALID_FEATURE_CODE : ((FeatureImpl)casFeat_mood).getCode();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0420320d7fac516ca24b80689a22bd5cbbb7f703","date":1348812875,"type":5,"author":"Tommaso Teofili","isMerge":false,"pathNew":"solr/contrib/uima/src/test/org/apache/solr/uima/ts/DummySentimentAnnotation_Type#DummySentimentAnnotation_Type(JCas,Type).mjava","pathOld":"solr/contrib/uima/src/test/org/apache/solr/uima/ts/SentimentAnnotation_Type#SentimentAnnotation_Type(JCas,Type).mjava","sourceNew":"  /** initialize variables to correspond with Cas Type and Features\n  * @generated */\n  public DummySentimentAnnotation_Type(JCas jcas, Type casType) {\n    super(jcas, casType);\n    casImpl.getFSClassRegistry().addGeneratorForType((TypeImpl)this.casType, getFSGenerator());\n\n \n    casFeat_mood = jcas.getRequiredFeatureDE(casType, \"mood\", \"uima.cas.String\", featOkTst);\n    casFeatCode_mood  = (null == casFeat_mood) ? JCas.INVALID_FEATURE_CODE : ((FeatureImpl)casFeat_mood).getCode();\n\n  }\n\n","sourceOld":"  /** initialize variables to correspond with Cas Type and Features\n  * @generated */\n  public SentimentAnnotation_Type(JCas jcas, Type casType) {\n    super(jcas, casType);\n    casImpl.getFSClassRegistry().addGeneratorForType((TypeImpl)this.casType, getFSGenerator());\n\n \n    casFeat_mood = jcas.getRequiredFeatureDE(casType, \"mood\", \"uima.cas.String\", featOkTst);\n    casFeatCode_mood  = (null == casFeat_mood) ? JCas.INVALID_FEATURE_CODE : ((FeatureImpl)casFeat_mood).getCode();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0420320d7fac516ca24b80689a22bd5cbbb7f703":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0420320d7fac516ca24b80689a22bd5cbbb7f703"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"0420320d7fac516ca24b80689a22bd5cbbb7f703":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["0420320d7fac516ca24b80689a22bd5cbbb7f703"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}