{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#skipDeletedDoc(DocValuesFieldUpdates.Iterator[],int).mjava","commits":[{"id":"06805da26538ed636bd89b10c2699cc3834032ae","date":1395132972,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#skipDeletedDoc(DocValuesFieldUpdates.Iterator[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#skipDeletedDoc(UpdatesIterator[],int).mjava","sourceNew":"  private void skipDeletedDoc(DocValuesFieldUpdates.Iterator[] updatesIters, int deletedDoc) {\n    for (DocValuesFieldUpdates.Iterator iter : updatesIters) {\n      if (iter.doc() == deletedDoc) {\n        iter.nextDoc();\n      }\n      // when entering the method, all iterators must already be beyond the\n      // deleted document, or right on it, in which case we advance them over\n      // and they must be beyond it now.\n      assert iter.doc() > deletedDoc : \"updateDoc=\" + iter.doc() + \" deletedDoc=\" + deletedDoc;\n    }\n  }\n\n","sourceOld":"  private void skipDeletedDoc(UpdatesIterator[] updatesIters, int deletedDoc) {\n    for (UpdatesIterator iter : updatesIters) {\n      if (iter.doc() == deletedDoc) {\n        iter.nextDoc();\n      }\n      // when entering the method, all iterators must already be beyond the\n      // deleted document, or right on it, in which case we advance them above\n      // and they must be beyond it now.\n      assert iter.doc() > deletedDoc : \"updateDoc=\" + iter.doc() + \" deletedDoc=\" + deletedDoc;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c088100f7646827db17ea080925f7a0a916b1cd","date":1524662254,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#skipDeletedDoc(DocValuesFieldUpdates.Iterator[],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#skipDeletedDoc(DocValuesFieldUpdates.Iterator[],int).mjava","sourceNew":"  private void skipDeletedDoc(DocValuesFieldUpdates.Iterator[] updatesIters, int deletedDoc) {\n    for (DocValuesFieldUpdates.Iterator iter : updatesIters) {\n      if (iter.docID() == deletedDoc) {\n        iter.nextDoc();\n      }\n      // when entering the method, all iterators must already be beyond the\n      // deleted document, or right on it, in which case we advance them over\n      // and they must be beyond it now.\n      assert iter.docID() > deletedDoc : \"updateDoc=\" + iter.docID() + \" deletedDoc=\" + deletedDoc;\n    }\n  }\n\n","sourceOld":"  private void skipDeletedDoc(DocValuesFieldUpdates.Iterator[] updatesIters, int deletedDoc) {\n    for (DocValuesFieldUpdates.Iterator iter : updatesIters) {\n      if (iter.doc() == deletedDoc) {\n        iter.nextDoc();\n      }\n      // when entering the method, all iterators must already be beyond the\n      // deleted document, or right on it, in which case we advance them over\n      // and they must be beyond it now.\n      assert iter.doc() > deletedDoc : \"updateDoc=\" + iter.doc() + \" deletedDoc=\" + deletedDoc;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2","date":1588002560,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#skipDeletedDoc(DocValuesFieldUpdates.Iterator[],int).mjava","sourceNew":null,"sourceOld":"  private void skipDeletedDoc(DocValuesFieldUpdates.Iterator[] updatesIters, int deletedDoc) {\n    for (DocValuesFieldUpdates.Iterator iter : updatesIters) {\n      if (iter.docID() == deletedDoc) {\n        iter.nextDoc();\n      }\n      // when entering the method, all iterators must already be beyond the\n      // deleted document, or right on it, in which case we advance them over\n      // and they must be beyond it now.\n      assert iter.docID() > deletedDoc : \"updateDoc=\" + iter.docID() + \" deletedDoc=\" + deletedDoc;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c088100f7646827db17ea080925f7a0a916b1cd":["06805da26538ed636bd89b10c2699cc3834032ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["4c088100f7646827db17ea080925f7a0a916b1cd"],"06805da26538ed636bd89b10c2699cc3834032ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"]},"commit2Childs":{"4c088100f7646827db17ea080925f7a0a916b1cd":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06805da26538ed636bd89b10c2699cc3834032ae"],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06805da26538ed636bd89b10c2699cc3834032ae":["4c088100f7646827db17ea080925f7a0a916b1cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}