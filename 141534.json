{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/net/HostManager#put(String).mjava","commits":[{"id":"52314eea0c72dd5a9f46988a9ac714c7ef1dcc37","date":1024322413,"type":0,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/net/HostManager#put(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Description of the Method\n     *\n     * @param hostName  Description of the Parameter\n     * @return          Description of the Return Value\n     */\n    public HostInfo put(String hostName)\n    {\n        if (!hosts.containsKey(hostName))\n        {\n            int hostID;\n            synchronized (this)\n            {\n                hostID = hostCount++;\n            }\n            HostInfo hi = new HostInfo(hostName,hostID);\n            hosts.put(hostName, hi);\n            //System.out.println(\"hostManager: + \" + hostName);\n            if(!hostName.equals(hostName.toLowerCase()))\n            {\n                try\n                {\n                    throw new Exception();\n                }\n                catch(Exception e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return hi;\n        }\n        return (HostInfo)hosts.get(hostName);\n        /*else\n        {\n            hostID = hosts.get()\n        }\n        // assert hostID != -1;\n        return hostID;*/\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37ad635dce04d2ba99e2808780c397e5251878b5","date":1035301248,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/net/HostManager#put(String).mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/net/HostManager#put(String).mjava","sourceNew":"    /**\n     * Description of the Method\n     *\n     * @param hostName  Description of the Parameter\n     * @return          Description of the Return Value\n     */\n    public HostInfo put(String hostName)\n    {\n        if(resolver != null)\n        {\n            return putResolved(hostName, resolver.resolveHost(hostName));\n        }\n        else\n        {\n            return putResolved(hostName, hostName);\n        }\n    }\n\n","sourceOld":"    /**\n     * Description of the Method\n     *\n     * @param hostName  Description of the Parameter\n     * @return          Description of the Return Value\n     */\n    public HostInfo put(String hostName)\n    {\n        if (!hosts.containsKey(hostName))\n        {\n            int hostID;\n            synchronized (this)\n            {\n                hostID = hostCount++;\n            }\n            HostInfo hi = new HostInfo(hostName,hostID);\n            hosts.put(hostName, hi);\n            //System.out.println(\"hostManager: + \" + hostName);\n            if(!hostName.equals(hostName.toLowerCase()))\n            {\n                try\n                {\n                    throw new Exception();\n                }\n                catch(Exception e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return hi;\n        }\n        return (HostInfo)hosts.get(hostName);\n        /*else\n        {\n            hostID = hosts.get()\n        }\n        // assert hostID != -1;\n        return hostID;*/\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/net/HostManager#put(String).mjava","sourceNew":null,"sourceOld":"    /**\n     * Description of the Method\n     *\n     * @param hostName  Description of the Parameter\n     * @return          Description of the Return Value\n     */\n    public HostInfo put(String hostName)\n    {\n        if(resolver != null)\n        {\n            return putResolved(hostName, resolver.resolveHost(hostName));\n        }\n        else\n        {\n            return putResolved(hostName, hostName);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"52314eea0c72dd5a9f46988a9ac714c7ef1dcc37":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["37ad635dce04d2ba99e2808780c397e5251878b5"],"37ad635dce04d2ba99e2808780c397e5251878b5":["52314eea0c72dd5a9f46988a9ac714c7ef1dcc37"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"52314eea0c72dd5a9f46988a9ac714c7ef1dcc37":["37ad635dce04d2ba99e2808780c397e5251878b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["52314eea0c72dd5a9f46988a9ac714c7ef1dcc37"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37ad635dce04d2ba99e2808780c397e5251878b5":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}