{"path":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#findMerges(MergeTrigger,SegmentInfos).mjava","commits":[{"id":"181b1aa5a99534972fbfd5595cdbb38bba5f39ee","date":1350576187,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#findMerges(MergeTrigger,SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#findMerges(SegmentInfos).mjava","sourceNew":"  /**\n   * Determine what set of merge operations are now necessary on the index.\n   * {@link IndexWriter} calls this whenever there is a change to the segments.\n   * This call is always synchronized on the {@link IndexWriter} instance so\n   * only one thread at a time will call this method.\n   * @param mergeTrigger the event that triggered the merge\n   * @param segmentInfos\n   *          the total set of segments in the index\n   */\n  public abstract MergeSpecification findMerges(MergeTrigger mergeTrigger, SegmentInfos segmentInfos)\n      throws IOException;\n\n","sourceOld":"  /**\n   * Determine what set of merge operations are now necessary on the index.\n   * {@link IndexWriter} calls this whenever there is a change to the segments.\n   * This call is always synchronized on the {@link IndexWriter} instance so\n   * only one thread at a time will call this method.\n   * \n   * @param segmentInfos\n   *          the total set of segments in the index\n   */\n  public abstract MergeSpecification findMerges(SegmentInfos segmentInfos)\n      throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e52115b56781006682fd92c6938efaf174304d","date":1351014780,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#findMerges(MergeTrigger,SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#findMerges(SegmentInfos).mjava","sourceNew":"  /**\n   * Determine what set of merge operations are now necessary on the index.\n   * {@link IndexWriter} calls this whenever there is a change to the segments.\n   * This call is always synchronized on the {@link IndexWriter} instance so\n   * only one thread at a time will call this method.\n   * @param mergeTrigger the event that triggered the merge\n   * @param segmentInfos\n   *          the total set of segments in the index\n   */\n  public abstract MergeSpecification findMerges(MergeTrigger mergeTrigger, SegmentInfos segmentInfos)\n      throws IOException;\n\n","sourceOld":"  /**\n   * Determine what set of merge operations are now necessary on the index.\n   * {@link IndexWriter} calls this whenever there is a change to the segments.\n   * This call is always synchronized on the {@link IndexWriter} instance so\n   * only one thread at a time will call this method.\n   * \n   * @param segmentInfos\n   *          the total set of segments in the index\n   */\n  public abstract MergeSpecification findMerges(SegmentInfos segmentInfos)\n      throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"027bee21e09164c9ee230395405076d1e0034b30","date":1401521821,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#findMerges(MergeTrigger,SegmentInfos,IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergePolicy#findMerges(MergeTrigger,SegmentInfos).mjava","sourceNew":"  /**\n   * Determine what set of merge operations are now necessary on the index.\n   * {@link IndexWriter} calls this whenever there is a change to the segments.\n   * This call is always synchronized on the {@link IndexWriter} instance so\n   * only one thread at a time will call this method.\n   * @param mergeTrigger the event that triggered the merge\n   * @param segmentInfos\n   *          the total set of segments in the index\n   * @param writer the IndexWriter to find the merges on\n   */\n  public abstract MergeSpecification findMerges(MergeTrigger mergeTrigger, SegmentInfos segmentInfos, IndexWriter writer)\n      throws IOException;\n\n","sourceOld":"  /**\n   * Determine what set of merge operations are now necessary on the index.\n   * {@link IndexWriter} calls this whenever there is a change to the segments.\n   * This call is always synchronized on the {@link IndexWriter} instance so\n   * only one thread at a time will call this method.\n   * @param mergeTrigger the event that triggered the merge\n   * @param segmentInfos\n   *          the total set of segments in the index\n   */\n  public abstract MergeSpecification findMerges(MergeTrigger mergeTrigger, SegmentInfos segmentInfos)\n      throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"62e52115b56781006682fd92c6938efaf174304d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","181b1aa5a99534972fbfd5595cdbb38bba5f39ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"181b1aa5a99534972fbfd5595cdbb38bba5f39ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"027bee21e09164c9ee230395405076d1e0034b30":["181b1aa5a99534972fbfd5595cdbb38bba5f39ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["027bee21e09164c9ee230395405076d1e0034b30"]},"commit2Childs":{"62e52115b56781006682fd92c6938efaf174304d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["62e52115b56781006682fd92c6938efaf174304d","181b1aa5a99534972fbfd5595cdbb38bba5f39ee"],"181b1aa5a99534972fbfd5595cdbb38bba5f39ee":["62e52115b56781006682fd92c6938efaf174304d","027bee21e09164c9ee230395405076d1e0034b30"],"027bee21e09164c9ee230395405076d1e0034b30":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["62e52115b56781006682fd92c6938efaf174304d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}