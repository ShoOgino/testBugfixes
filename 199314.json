{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoBBoxTest#testBBoxBounds().mjava","commits":[{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoBBoxTest#testBBoxBounds().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoBBoxTest#testBBoxBounds().mjava","sourceNew":"  @Test\n  public void testBBoxBounds() {\n    GeoBBox c;\n    LatLonBounds b;\n    XYZBounds xyzb;\n    GeoArea solid;\n    GeoPoint point;\n    int relationship;\n    \n    c= GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.7570958596622309, -0.7458670829264561, -0.9566079379002148, 1.4802570961901191);\n    solid = GeoAreaFactory.makeGeoArea(PlanetModel.SPHERE,0.10922258701604912,0.1248184603754517,-0.8172414690802067,0.9959041483215542,-0.6136586624726926,0.6821740363641521);\n    point = new GeoPoint(PlanetModel.SPHERE, 0.3719987557178081, 1.4529582778845198);\n    assertTrue(c.isWithin(point));\n    assertTrue(solid.isWithin(point));\n    relationship = solid.getRelationship(c);\n    assertTrue(relationship == GeoArea.OVERLAPS || relationship == GeoArea.CONTAINS || relationship == GeoArea.WITHIN);\n\n    c= GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.006607096847842122, -0.002828135860810422, -0.0012934461873348349, 0.006727418645092394);\n    solid = GeoAreaFactory.makeGeoArea(PlanetModel.SPHERE,0.9999995988328008,1.0000000002328306,-0.0012934708508166816,0.006727393021214471,-0.002828157275369464,0.006607074060760007);\n    point = new GeoPoint(PlanetModel.SPHERE, -5.236470872437899E-4, 3.992578692654256E-4);\n    assertTrue(c.isWithin(point));\n    assertTrue(solid.isWithin(point));\n    relationship = solid.getRelationship(c);\n    assertTrue(relationship == GeoArea.OVERLAPS || relationship == GeoArea.CONTAINS || relationship == GeoArea.WITHIN);\n    \n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.25, -Math.PI * 0.25, -1.0, 1.0);\n    b = new LatLonBounds();\n    c.getBounds(b);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(Math.PI * 0.25, b.getMaxLatitude(), 0.000001);\n    assertEquals(0.382051, xyzb.getMinimumX(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumX(), 0.000001);\n    assertEquals(-0.841471, xyzb.getMinimumY(), 0.000001);\n    assertEquals(0.841471, xyzb.getMaximumY(), 0.000001);\n    assertEquals(-0.707107, xyzb.getMinimumZ(), 0.000001);\n    assertEquals(0.707107, xyzb.getMaximumZ(), 0.000001);\n    \n    GeoArea area = GeoAreaFactory.makeGeoArea(PlanetModel.SPHERE,\n      xyzb.getMinimumX() - 2.0 * Vector.MINIMUM_RESOLUTION,\n      xyzb.getMaximumX() + 2.0 * Vector.MINIMUM_RESOLUTION,\n      xyzb.getMinimumY() - 2.0 * Vector.MINIMUM_RESOLUTION,\n      xyzb.getMaximumY() + 2.0 * Vector.MINIMUM_RESOLUTION,\n      xyzb.getMinimumZ() - 2.0 * Vector.MINIMUM_RESOLUTION,\n      xyzb.getMaximumZ() + 2.0 * Vector.MINIMUM_RESOLUTION);\n    assertEquals(GeoArea.WITHIN, area.getRelationship(c));\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -1.0, 1.0);\n    b = new LatLonBounds();\n    c.getBounds(b);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n    assertEquals(0.382051, xyzb.getMinimumX(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumX(), 0.000001);\n    assertEquals(-0.841471, xyzb.getMinimumY(), 0.000001);\n    assertEquals(0.841471, xyzb.getMaximumY(), 0.000001);\n    assertEquals(-0.707107, xyzb.getMinimumZ(), 0.000001);\n    assertEquals(0.0, xyzb.getMaximumZ(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, 1.0, -1.0);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n    assertEquals(-1.0, xyzb.getMinimumX(), 0.000001);\n    assertEquals(0.540303, xyzb.getMaximumX(), 0.000001);\n    assertEquals(-1.0, xyzb.getMinimumY(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumY(), 0.000001);\n    assertEquals(-0.707107, xyzb.getMinimumZ(), 0.000001);\n    assertEquals(0.0, xyzb.getMaximumZ(), 0.000001);\n\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    //assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(0.0, xyzb.getMinimumX(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumX(), 0.000001);\n    assertEquals(-0.841471, xyzb.getMinimumY(), 0.000001);\n    assertEquals(0.841471, xyzb.getMaximumY(), 0.000001);\n    assertEquals(-1.0, xyzb.getMinimumZ(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumZ(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-1.0, xyzb.getMinimumX(), 0.000001);\n    assertEquals(0.540303, xyzb.getMaximumX(), 0.000001);\n    assertEquals(-1.0, xyzb.getMinimumY(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumY(), 0.000001);\n    assertEquals(-1.0, xyzb.getMinimumZ(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumZ(), 0.000001);\n\n    // Check wide variants of rectangle and longitude slice\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    //assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n\n    // Check latitude zone\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 1.0, -1.0, -Math.PI, Math.PI);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getMinLatitude(), 0.000001);\n    assertEquals(1.0, b.getMaxLatitude(), 0.000001);\n\n    // Now, combine a few things to test the bounds object\n    GeoBBox c1;\n    GeoBBox c2;\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new LatLonBounds();\n    c1.getBounds(b);\n    c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI * 0.5);\n\n    b = new LatLonBounds();\n    c1.getBounds(b);\n    c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new LatLonBounds();\n    c1.getBounds(b);\n    c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n  }\n\n","sourceOld":"  @Test\n  public void testBBoxBounds() {\n    GeoBBox c;\n    LatLonBounds b;\n    XYZBounds xyzb;\n    GeoArea solid;\n    GeoPoint point;\n    int relationship;\n    \n    c= GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.7570958596622309, -0.7458670829264561, -0.9566079379002148, 1.4802570961901191);\n    solid = GeoAreaFactory.makeGeoArea(PlanetModel.SPHERE,0.10922258701604912,0.1248184603754517,-0.8172414690802067,0.9959041483215542,-0.6136586624726926,0.6821740363641521);\n    point = new GeoPoint(PlanetModel.SPHERE, 0.3719987557178081, 1.4529582778845198);\n    assertTrue(c.isWithin(point));\n    assertTrue(solid.isWithin(point));\n    relationship = solid.getRelationship(c);\n    assertTrue(relationship == GeoArea.OVERLAPS || relationship == GeoArea.CONTAINS || relationship == GeoArea.WITHIN);\n\n    c= GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.006607096847842122, -0.002828135860810422, -0.0012934461873348349, 0.006727418645092394);\n    solid = GeoAreaFactory.makeGeoArea(PlanetModel.SPHERE,0.9999995988328008,1.0000000002328306,-0.0012934708508166816,0.006727393021214471,-0.002828157275369464,0.006607074060760007);\n    point = new GeoPoint(PlanetModel.SPHERE, -5.236470872437899E-4, 3.992578692654256E-4);\n    assertTrue(c.isWithin(point));\n    assertTrue(solid.isWithin(point));\n    relationship = solid.getRelationship(c);\n    assertTrue(relationship == GeoArea.OVERLAPS || relationship == GeoArea.CONTAINS || relationship == GeoArea.WITHIN);\n    \n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.25, -Math.PI * 0.25, -1.0, 1.0);\n    b = new LatLonBounds();\n    c.getBounds(b);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(Math.PI * 0.25, b.getMaxLatitude(), 0.000001);\n    assertEquals(0.382051, xyzb.getMinimumX(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumX(), 0.000001);\n    assertEquals(-0.841471, xyzb.getMinimumY(), 0.000001);\n    assertEquals(0.841471, xyzb.getMaximumY(), 0.000001);\n    assertEquals(-0.707107, xyzb.getMinimumZ(), 0.000001);\n    assertEquals(0.707107, xyzb.getMaximumZ(), 0.000001);\n    \n    GeoArea area = GeoAreaFactory.makeGeoArea(PlanetModel.SPHERE,\n      xyzb.getMinimumX() - 2.0 * Vector.MINIMUM_RESOLUTION,\n      xyzb.getMaximumX() + 2.0 * Vector.MINIMUM_RESOLUTION,\n      xyzb.getMinimumY() - 2.0 * Vector.MINIMUM_RESOLUTION,\n      xyzb.getMaximumY() + 2.0 * Vector.MINIMUM_RESOLUTION,\n      xyzb.getMinimumZ() - 2.0 * Vector.MINIMUM_RESOLUTION,\n      xyzb.getMaximumZ() + 2.0 * Vector.MINIMUM_RESOLUTION);\n    assertEquals(GeoArea.WITHIN, area.getRelationship(c));\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -1.0, 1.0);\n    b = new LatLonBounds();\n    c.getBounds(b);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n    assertEquals(0.382051, xyzb.getMinimumX(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumX(), 0.000001);\n    assertEquals(-0.841471, xyzb.getMinimumY(), 0.000001);\n    assertEquals(0.841471, xyzb.getMaximumY(), 0.000001);\n    assertEquals(-0.707107, xyzb.getMinimumZ(), 0.000001);\n    assertEquals(0.0, xyzb.getMaximumZ(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, 1.0, -1.0);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n    assertEquals(-1.0, xyzb.getMinimumX(), 0.000001);\n    assertEquals(0.540303, xyzb.getMaximumX(), 0.000001);\n    assertEquals(-1.0, xyzb.getMinimumY(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumY(), 0.000001);\n    assertEquals(-0.707107, xyzb.getMinimumZ(), 0.000001);\n    assertEquals(0.0, xyzb.getMaximumZ(), 0.000001);\n\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    //assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(0.0, xyzb.getMinimumX(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumX(), 0.000001);\n    assertEquals(-0.841471, xyzb.getMinimumY(), 0.000001);\n    assertEquals(0.841471, xyzb.getMaximumY(), 0.000001);\n    assertEquals(-1.0, xyzb.getMinimumZ(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumZ(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-1.0, xyzb.getMinimumX(), 0.000001);\n    assertEquals(0.540303, xyzb.getMaximumX(), 0.000001);\n    assertEquals(-1.0, xyzb.getMinimumY(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumY(), 0.000001);\n    assertEquals(-1.0, xyzb.getMinimumZ(), 0.000001);\n    assertEquals(1.0, xyzb.getMaximumZ(), 0.000001);\n\n    // Check wide variants of rectangle and longitude slice\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    //assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n\n    // Check latitude zone\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 1.0, -1.0, -Math.PI, Math.PI);\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getMinLatitude(), 0.000001);\n    assertEquals(1.0, b.getMaxLatitude(), 0.000001);\n\n    // Now, combine a few things to test the bounds object\n    GeoBBox c1;\n    GeoBBox c2;\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new LatLonBounds();\n    c1.getBounds(b);\n    c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI * 0.5);\n\n    b = new LatLonBounds();\n    c1.getBounds(b);\n    c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new LatLonBounds();\n    c1.getBounds(b);\n    c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4e444678504caf66a8060b1d514383aa4feac0c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e444678504caf66a8060b1d514383aa4feac0c"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}