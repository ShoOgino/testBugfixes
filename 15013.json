{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/CapitalizationFilter#CapitalizationFilter(TokenStream,boolean,CharArraySet,boolean,Collection[char[]],int,int,int).mjava","commits":[{"id":"45e349695223fccf7b1b9d08ba85a1c919b06f7c","date":1277292317,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/CapitalizationFilter#CapitalizationFilter(TokenStream,boolean,CharArraySet,boolean,Collection[char[]],int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a CapitalizationFilter with the specified parameters.\n   * @param in input tokenstream \n   * @param onlyFirstWord should each word be capitalized or all of the words?\n   * @param keep a keep word list.  Each word that should be kept separated by whitespace.\n   * @param forceFirstLetter Force the first letter to be capitalized even if it is in the keep list.\n   * @param okPrefix do not change word capitalization if a word begins with something in this list.\n   * @param minWordLength how long the word needs to be to get capitalization applied.  If the\n   *                      minWordLength is 3, \"and\" > \"And\" but \"or\" stays \"or\".\n   * @param maxWordCount if the token contains more then maxWordCount words, the capitalization is\n   *                     assumed to be correct.\n   * @param maxTokenLength ???\n   */\n  public CapitalizationFilter(TokenStream in, boolean onlyFirstWord, CharArraySet keep, \n      boolean forceFirstLetter, Collection<char[]> okPrefix, int minWordLength, \n      int maxWordCount, int maxTokenLength) {\n    super(in);\n    this.onlyFirstWord = onlyFirstWord;\n    this.keep = keep;\n    this.forceFirstLetter = forceFirstLetter;\n    this.okPrefix = okPrefix;\n    this.minWordLength = minWordLength;\n    this.maxWordCount = maxWordCount;\n    this.maxTokenLength = maxTokenLength;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/CapitalizationFilter#CapitalizationFilter(TokenStream,boolean,CharArraySet,boolean,Collection[char[]],int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a CapitalizationFilter with the specified parameters.\n   * @param in input tokenstream \n   * @param onlyFirstWord should each word be capitalized or all of the words?\n   * @param keep a keep word list.  Each word that should be kept separated by whitespace.\n   * @param forceFirstLetter Force the first letter to be capitalized even if it is in the keep list.\n   * @param okPrefix do not change word capitalization if a word begins with something in this list.\n   * @param minWordLength how long the word needs to be to get capitalization applied.  If the\n   *                      minWordLength is 3, \"and\" > \"And\" but \"or\" stays \"or\".\n   * @param maxWordCount if the token contains more then maxWordCount words, the capitalization is\n   *                     assumed to be correct.\n   * @param maxTokenLength ???\n   */\n  public CapitalizationFilter(TokenStream in, boolean onlyFirstWord, CharArraySet keep, \n      boolean forceFirstLetter, Collection<char[]> okPrefix, int minWordLength, \n      int maxWordCount, int maxTokenLength) {\n    super(in);\n    this.onlyFirstWord = onlyFirstWord;\n    this.keep = keep;\n    this.forceFirstLetter = forceFirstLetter;\n    this.okPrefix = okPrefix;\n    this.minWordLength = minWordLength;\n    this.maxWordCount = maxWordCount;\n    this.maxTokenLength = maxTokenLength;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/CapitalizationFilter#CapitalizationFilter(TokenStream,boolean,CharArraySet,boolean,Collection[char[]],int,int,int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/CapitalizationFilter#CapitalizationFilter(TokenStream,boolean,CharArraySet,boolean,Collection[char[]],int,int,int).mjava","sourceNew":"  /**\n   * Creates a CapitalizationFilter with the specified parameters.\n   * @param in input tokenstream \n   * @param onlyFirstWord should each word be capitalized or all of the words?\n   * @param keep a keep word list.  Each word that should be kept separated by whitespace.\n   * @param forceFirstLetter Force the first letter to be capitalized even if it is in the keep list.\n   * @param okPrefix do not change word capitalization if a word begins with something in this list.\n   * @param minWordLength how long the word needs to be to get capitalization applied.  If the\n   *                      minWordLength is 3, \"and\" > \"And\" but \"or\" stays \"or\".\n   * @param maxWordCount if the token contains more then maxWordCount words, the capitalization is\n   *                     assumed to be correct.\n   * @param maxTokenLength ???\n   */\n  public CapitalizationFilter(TokenStream in, boolean onlyFirstWord, CharArraySet keep, \n      boolean forceFirstLetter, Collection<char[]> okPrefix, int minWordLength, \n      int maxWordCount, int maxTokenLength) {\n    super(in);\n    this.onlyFirstWord = onlyFirstWord;\n    this.keep = keep;\n    this.forceFirstLetter = forceFirstLetter;\n    this.okPrefix = okPrefix;\n    this.minWordLength = minWordLength;\n    this.maxWordCount = maxWordCount;\n    this.maxTokenLength = maxTokenLength;\n  }\n\n","sourceOld":"  /**\n   * Creates a CapitalizationFilter with the specified parameters.\n   * @param in input tokenstream \n   * @param onlyFirstWord should each word be capitalized or all of the words?\n   * @param keep a keep word list.  Each word that should be kept separated by whitespace.\n   * @param forceFirstLetter Force the first letter to be capitalized even if it is in the keep list.\n   * @param okPrefix do not change word capitalization if a word begins with something in this list.\n   * @param minWordLength how long the word needs to be to get capitalization applied.  If the\n   *                      minWordLength is 3, \"and\" > \"And\" but \"or\" stays \"or\".\n   * @param maxWordCount if the token contains more then maxWordCount words, the capitalization is\n   *                     assumed to be correct.\n   * @param maxTokenLength ???\n   */\n  public CapitalizationFilter(TokenStream in, boolean onlyFirstWord, CharArraySet keep, \n      boolean forceFirstLetter, Collection<char[]> okPrefix, int minWordLength, \n      int maxWordCount, int maxTokenLength) {\n    super(in);\n    this.onlyFirstWord = onlyFirstWord;\n    this.keep = keep;\n    this.forceFirstLetter = forceFirstLetter;\n    this.okPrefix = okPrefix;\n    this.minWordLength = minWordLength;\n    this.maxWordCount = maxWordCount;\n    this.maxTokenLength = maxTokenLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["45e349695223fccf7b1b9d08ba85a1c919b06f7c"],"45e349695223fccf7b1b9d08ba85a1c919b06f7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","45e349695223fccf7b1b9d08ba85a1c919b06f7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"45e349695223fccf7b1b9d08ba85a1c919b06f7c":["b89678825b68eccaf09e6ab71675fc0b0af1e099","5f4e87790277826a2aea119328600dfb07761f32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["45e349695223fccf7b1b9d08ba85a1c919b06f7c","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}