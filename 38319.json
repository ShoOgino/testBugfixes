{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/TermsFilter#getDocIdSet(ReaderContext).mjava","commits":[{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/TermsFilter#getDocIdSet(ReaderContext).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/TermsFilter#getDocIdSet(IndexReader).mjava","sourceNew":"/* (non-Javadoc)\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\n\t */\n  @Override\n  public DocIdSet getDocIdSet(ReaderContext context) throws IOException {\n    IndexReader reader = context.reader;\n    OpenBitSet result=new OpenBitSet(reader.maxDoc());\n    Fields fields = reader.fields();\n    BytesRef br = new BytesRef();\n    Bits delDocs = reader.getDeletedDocs();\n    if (fields != null) {\n      String lastField = null;\n      Terms termsC = null;\n      TermsEnum termsEnum = null;\n      DocsEnum docs = null;\n      for (Iterator<Term> iter = terms.iterator(); iter.hasNext();) {\n        Term term = iter.next();\n        if (term.field() != lastField) {\n          termsC = fields.terms(term.field());\n          termsEnum = termsC.iterator();\n          lastField = term.field();\n        }\n\n        if (terms != null) {\n          br.copy(term.bytes());\n          if (termsEnum.seek(br) == TermsEnum.SeekStatus.FOUND) {\n            docs = termsEnum.docs(delDocs, docs);\n            while(docs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n              result.set(docs.docID());\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"/* (non-Javadoc)\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\n\t */\n  @Override\n  public DocIdSet getDocIdSet(IndexReader reader) throws IOException {\n    OpenBitSet result=new OpenBitSet(reader.maxDoc());\n    Fields fields = reader.fields();\n    BytesRef br = new BytesRef();\n    Bits delDocs = reader.getDeletedDocs();\n    if (fields != null) {\n      String lastField = null;\n      Terms termsC = null;\n      TermsEnum termsEnum = null;\n      DocsEnum docs = null;\n      for (Iterator<Term> iter = terms.iterator(); iter.hasNext();) {\n        Term term = iter.next();\n        if (term.field() != lastField) {\n          termsC = fields.terms(term.field());\n          termsEnum = termsC.iterator();\n          lastField = term.field();\n        }\n\n        if (terms != null) {\n          br.copy(term.bytes());\n          if (termsEnum.seek(br) == TermsEnum.SeekStatus.FOUND) {\n            docs = termsEnum.docs(delDocs, docs);\n            while(docs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n              result.set(docs.docID());\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/TermsFilter#getDocIdSet(AtomicReaderContext).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/TermsFilter#getDocIdSet(ReaderContext).mjava","sourceNew":"/* (non-Javadoc)\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\n\t */\n  @Override\n  public DocIdSet getDocIdSet(AtomicReaderContext context) throws IOException {\n    IndexReader reader = context.reader;\n    OpenBitSet result=new OpenBitSet(reader.maxDoc());\n    Fields fields = reader.fields();\n    BytesRef br = new BytesRef();\n    Bits delDocs = reader.getDeletedDocs();\n    if (fields != null) {\n      String lastField = null;\n      Terms termsC = null;\n      TermsEnum termsEnum = null;\n      DocsEnum docs = null;\n      for (Iterator<Term> iter = terms.iterator(); iter.hasNext();) {\n        Term term = iter.next();\n        if (term.field() != lastField) {\n          termsC = fields.terms(term.field());\n          termsEnum = termsC.iterator();\n          lastField = term.field();\n        }\n\n        if (terms != null) {\n          br.copy(term.bytes());\n          if (termsEnum.seek(br) == TermsEnum.SeekStatus.FOUND) {\n            docs = termsEnum.docs(delDocs, docs);\n            while(docs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n              result.set(docs.docID());\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"/* (non-Javadoc)\n   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)\n\t */\n  @Override\n  public DocIdSet getDocIdSet(ReaderContext context) throws IOException {\n    IndexReader reader = context.reader;\n    OpenBitSet result=new OpenBitSet(reader.maxDoc());\n    Fields fields = reader.fields();\n    BytesRef br = new BytesRef();\n    Bits delDocs = reader.getDeletedDocs();\n    if (fields != null) {\n      String lastField = null;\n      Terms termsC = null;\n      TermsEnum termsEnum = null;\n      DocsEnum docs = null;\n      for (Iterator<Term> iter = terms.iterator(); iter.hasNext();) {\n        Term term = iter.next();\n        if (term.field() != lastField) {\n          termsC = fields.terms(term.field());\n          termsEnum = termsC.iterator();\n          lastField = term.field();\n        }\n\n        if (terms != null) {\n          br.copy(term.bytes());\n          if (termsEnum.seek(br) == TermsEnum.SeekStatus.FOUND) {\n            docs = termsEnum.docs(delDocs, docs);\n            while(docs.nextDoc() != DocsEnum.NO_MORE_DOCS) {\n              result.set(docs.docID());\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"]},"commit2Childs":{"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}