{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#getDistPrecision().mjava","commits":[{"id":"ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd","date":1340946597,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#getDistPrecision().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The fraction of the distance from the center of the query shape to its nearest edge that is considered acceptable\n   * error. The algorithm for computing the distance to the nearest edge is actually a little different. It normalizes\n   * the shape to a square given it's bounding box area:\n   * <pre>sqrt(shape.bbox.area)/2</pre>\n   * And the error distance is beyond the shape such that the shape is a minimum shape.\n   */\n  public Double getDistPrecision() {\n    return distPrecision;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"147a814c4b009f0a613263ddea933f231804c47b","date":1341285543,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#getDistPrecision().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#getDistPrecision().mjava","sourceNew":"  /**\n   * The fraction of the distance from the center of the query shape to its nearest edge\n   * that is considered acceptable error. The algorithm for computing the distance to the\n   * nearest edge is actually a little different. It normalizes the shape to a square\n   * given it's bounding box area:\n   * <pre>sqrt(shape.bbox.area)/2</pre>\n   * And the error distance is beyond the shape such that the shape is a minimum shape.\n   */\n  public Double getDistPrecision() {\n    return distPrecision;\n  }\n\n","sourceOld":"  /**\n   * The fraction of the distance from the center of the query shape to its nearest edge that is considered acceptable\n   * error. The algorithm for computing the distance to the nearest edge is actually a little different. It normalizes\n   * the shape to a square given it's bounding box area:\n   * <pre>sqrt(shape.bbox.area)/2</pre>\n   * And the error distance is beyond the shape such that the shape is a minimum shape.\n   */\n  public Double getDistPrecision() {\n    return distPrecision;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#getDistPrecision().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The fraction of the distance from the center of the query shape to its nearest edge\n   * that is considered acceptable error. The algorithm for computing the distance to the\n   * nearest edge is actually a little different. It normalizes the shape to a square\n   * given it's bounding box area:\n   * <pre>sqrt(shape.bbox.area)/2</pre>\n   * And the error distance is beyond the shape such that the shape is a minimum shape.\n   */\n  public Double getDistPrecision() {\n    return distPrecision;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85ac3534293008a0b7704f8ba54592d51fd29fa5","date":1346435585,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#getDistPrecision().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#getDistPrecision().mjava","sourceNew":"  /**\n   * A measure of acceptable error of the shape.  It is specified as the\n   * fraction of the distance from the center of the query shape to its furthest\n   * bounding box corner.  This effectively inflates the size of the shape but\n   * should not shrink it.\n   * <p/>\n   * The default is {@link #DEFAULT_DIST_PRECISION}\n   *\n   * @return 0 to 0.5\n   */\n  public Double getDistPrecision() {\n    return distPrecision;\n  }\n\n","sourceOld":"  /**\n   * The fraction of the distance from the center of the query shape to its nearest edge\n   * that is considered acceptable error. The algorithm for computing the distance to the\n   * nearest edge is actually a little different. It normalizes the shape to a square\n   * given it's bounding box area:\n   * <pre>sqrt(shape.bbox.area)/2</pre>\n   * And the error distance is beyond the shape such that the shape is a minimum shape.\n   */\n  public Double getDistPrecision() {\n    return distPrecision;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d1f90e969803cc84174589b5e4a39b7935fecd","date":1346584861,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#getDistPrecision().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#getDistPrecision().mjava","sourceNew":"  /**\n   * A measure of acceptable error of the shape.  It is specified as the\n   * fraction of the distance from the center of the query shape to its furthest\n   * bounding box corner.  This effectively inflates the size of the shape but\n   * should not shrink it.\n   * <p/>\n   * The default is {@link #DEFAULT_DIST_PRECISION}\n   *\n   * @return 0 to 0.5\n   */\n  public Double getDistPrecision() {\n    return distPrecision;\n  }\n\n","sourceOld":"  /**\n   * The fraction of the distance from the center of the query shape to its nearest edge\n   * that is considered acceptable error. The algorithm for computing the distance to the\n   * nearest edge is actually a little different. It normalizes the shape to a square\n   * given it's bounding box area:\n   * <pre>sqrt(shape.bbox.area)/2</pre>\n   * And the error distance is beyond the shape such that the shape is a minimum shape.\n   */\n  public Double getDistPrecision() {\n    return distPrecision;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e2410e27320f6aaba450cbf500d7822baf642f8","date":1347075066,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs#getDistPrecision().mjava","sourceNew":null,"sourceOld":"  /**\n   * A measure of acceptable error of the shape.  It is specified as the\n   * fraction of the distance from the center of the query shape to its furthest\n   * bounding box corner.  This effectively inflates the size of the shape but\n   * should not shrink it.\n   * <p/>\n   * The default is {@link #DEFAULT_DIST_PRECISION}\n   *\n   * @return 0 to 0.5\n   */\n  public Double getDistPrecision() {\n    return distPrecision;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6e2410e27320f6aaba450cbf500d7822baf642f8":["85ac3534293008a0b7704f8ba54592d51fd29fa5"],"ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0d1f90e969803cc84174589b5e4a39b7935fecd":["147a814c4b009f0a613263ddea933f231804c47b","85ac3534293008a0b7704f8ba54592d51fd29fa5"],"85ac3534293008a0b7704f8ba54592d51fd29fa5":["147a814c4b009f0a613263ddea933f231804c47b"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","147a814c4b009f0a613263ddea933f231804c47b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"147a814c4b009f0a613263ddea933f231804c47b":["ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e2410e27320f6aaba450cbf500d7822baf642f8"]},"commit2Childs":{"6e2410e27320f6aaba450cbf500d7822baf642f8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd":["147a814c4b009f0a613263ddea933f231804c47b"],"d0d1f90e969803cc84174589b5e4a39b7935fecd":[],"85ac3534293008a0b7704f8ba54592d51fd29fa5":["6e2410e27320f6aaba450cbf500d7822baf642f8","d0d1f90e969803cc84174589b5e4a39b7935fecd"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"147a814c4b009f0a613263ddea933f231804c47b":["d0d1f90e969803cc84174589b5e4a39b7935fecd","85ac3534293008a0b7704f8ba54592d51fd29fa5","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d0d1f90e969803cc84174589b5e4a39b7935fecd","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}