{"path":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#PrefixOperatorQuery().mjava","commits":[{"id":"d04b321158481d3895702b3cbf6821a3083e6c15","date":1120530543,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#PrefixOperatorQuery().mjava","pathOld":"/dev/null","sourceNew":"  final public SrndQuery PrefixOperatorQuery() throws ParseException {\n  Token oprt;\n  List queries;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case OR:\n      oprt = jj_consume_token(OR);\n      /* prefix OR */\n          queries = FieldsQueryList();\n     {if (true) return getOrQuery(queries, false /* not infix */, oprt);}\n      break;\n    case AND:\n      oprt = jj_consume_token(AND);\n      /* prefix AND */\n          queries = FieldsQueryList();\n     {if (true) return getAndQuery(queries, false /* not infix */, oprt);}\n      break;\n    case N:\n      oprt = jj_consume_token(N);\n      /* prefix N */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false /* not infix */, oprt, false /* not ordered */);}\n      break;\n    case W:\n      oprt = jj_consume_token(W);\n      /* prefix W */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false  /* not infix */, oprt, true /* ordered */);}\n      break;\n    default:\n      jj_la1[6] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#PrefixOperatorQuery().mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#PrefixOperatorQuery().mjava","sourceNew":"  final public SrndQuery PrefixOperatorQuery() throws ParseException {\n  Token oprt;\n  List queries;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case OR:\n      oprt = jj_consume_token(OR);\n      /* prefix OR */\n          queries = FieldsQueryList();\n     {if (true) return getOrQuery(queries, false /* not infix */, oprt);}\n      break;\n    case AND:\n      oprt = jj_consume_token(AND);\n      /* prefix AND */\n          queries = FieldsQueryList();\n     {if (true) return getAndQuery(queries, false /* not infix */, oprt);}\n      break;\n    case N:\n      oprt = jj_consume_token(N);\n      /* prefix N */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false /* not infix */, oprt, false /* not ordered */);}\n      break;\n    case W:\n      oprt = jj_consume_token(W);\n      /* prefix W */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false  /* not infix */, oprt, true /* ordered */);}\n      break;\n    default:\n      jj_la1[6] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public SrndQuery PrefixOperatorQuery() throws ParseException {\n  Token oprt;\n  List queries;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case OR:\n      oprt = jj_consume_token(OR);\n      /* prefix OR */\n          queries = FieldsQueryList();\n     {if (true) return getOrQuery(queries, false /* not infix */, oprt);}\n      break;\n    case AND:\n      oprt = jj_consume_token(AND);\n      /* prefix AND */\n          queries = FieldsQueryList();\n     {if (true) return getAndQuery(queries, false /* not infix */, oprt);}\n      break;\n    case N:\n      oprt = jj_consume_token(N);\n      /* prefix N */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false /* not infix */, oprt, false /* not ordered */);}\n      break;\n    case W:\n      oprt = jj_consume_token(W);\n      /* prefix W */\n          queries = FieldsQueryList();\n     {if (true) return getDistanceQuery(queries, false  /* not infix */, oprt, true /* ordered */);}\n      break;\n    default:\n      jj_la1[6] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d04b321158481d3895702b3cbf6821a3083e6c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d04b321158481d3895702b3cbf6821a3083e6c15"]},"commit2Childs":{"d04b321158481d3895702b3cbf6821a3083e6c15":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d04b321158481d3895702b3cbf6821a3083e6c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}