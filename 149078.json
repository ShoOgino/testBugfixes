{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","sourceNew":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 200);\n    maxFacetDepth = config.get(\"max.facet.depth\", 10);\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","sourceOld":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 200);\n    maxFacetDepth = config.get(\"max.facet.depth\", 10);\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53442c6c7d342feead7bcbabb097abcfeb06b575","date":1358751520,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","sourceNew":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 10);\n    maxFacetDepth = config.get(\"max.facet.depth\", 3);\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","sourceOld":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 200);\n    maxFacetDepth = config.get(\"max.facet.depth\", 10);\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","sourceNew":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 10);\n    maxFacetDepth = config.get(\"max.facet.depth\", 3);\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","sourceOld":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 200);\n    maxFacetDepth = config.get(\"max.facet.depth\", 10);\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","sourceNew":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 10);\n    maxDims = config.get(\"max.doc.facets.dims\", 5);\n    maxFacetDepth = config.get(\"max.facet.depth\", 3);\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","sourceOld":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 10);\n    maxFacetDepth = config.get(\"max.facet.depth\", 3);\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8","date":1387415264,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","sourceNew":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 10);\n    maxDims = config.get(\"max.doc.facets.dims\", 5);\n    maxFacetDepth = config.get(\"max.facet.depth\", 3);\n    if (maxFacetDepth < 2) {\n      throw new IllegalArgumentException(\"max.facet.depth must be at least 2; got: \" + maxFacetDepth);\n    }\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","sourceOld":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 10);\n    maxDims = config.get(\"max.doc.facets.dims\", 5);\n    maxFacetDepth = config.get(\"max.facet.depth\", 3);\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#setConfig(Config).mjava","sourceNew":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 10);\n    maxDims = config.get(\"max.doc.facets.dims\", 5);\n    maxFacetDepth = config.get(\"max.facet.depth\", 3);\n    if (maxFacetDepth < 2) {\n      throw new IllegalArgumentException(\"max.facet.depth must be at least 2; got: \" + maxFacetDepth);\n    }\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","sourceOld":"  @Override\n  public void setConfig(Config config) {\n    super.setConfig(config);\n    random = new Random(config.get(\"rand.seed\", 13));\n    maxDocFacets = config.get(\"max.doc.facets\", 10);\n    maxFacetDepth = config.get(\"max.facet.depth\", 3);\n    maxValue = maxDocFacets * maxFacetDepth;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"53442c6c7d342feead7bcbabb097abcfeb06b575":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["53442c6c7d342feead7bcbabb097abcfeb06b575"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["53442c6c7d342feead7bcbabb097abcfeb06b575","51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"07155cdd910937cdf6877e48884d5782845c8b8b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","53442c6c7d342feead7bcbabb097abcfeb06b575"],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["53442c6c7d342feead7bcbabb097abcfeb06b575","07155cdd910937cdf6877e48884d5782845c8b8b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"53442c6c7d342feead7bcbabb097abcfeb06b575":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13","07155cdd910937cdf6877e48884d5782845c8b8b"],"21d36d0db865f7b84026b447bec653469a6e66df":["51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}