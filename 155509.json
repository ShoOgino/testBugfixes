{"path":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","commits":[{"id":"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","date":1394784078,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"/dev/null","sourceNew":"  private void testSolrJAPICalls() throws Exception {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 2, \"conf1\", server, \"1001\");\n    String state = null;\n\n    state = getRequestStateAfterCompletion(\"1001\", 10, server);\n\n    assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 2, \"conf1\", server, \"1002\");\n\n    state = getRequestStateAfterCompletion(\"1002\", 3, server);\n\n    assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n\n    CollectionAdminRequest.splitShard(\"testasynccollectioncreation\", \"shard1\", server, \"1003\");\n\n    state = getRequestStateAfterCompletion(\"1003\", 60, server);\n\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["15e5c6e9cbb262742d1c0e5a3b42c87f97918e1d","6784d0cc613dc1ee97030eaaa5e0754edc22d164","38d22cfc483e181f76915556ccaa942fd0280c26"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15e5c6e9cbb262742d1c0e5a3b42c87f97918e1d","date":1400759887,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  private void testSolrJAPICalls() throws Exception {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 2, \"conf1\", server, \"1001\");\n    String state = null;\n\n    state = getRequestStateAfterCompletion(\"1001\", 10, server);\n\n    assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 2, \"conf1\", server, \"1002\");\n\n    state = getRequestStateAfterCompletion(\"1002\", 3, server);\n\n    assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n\n    CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n    addReplica.setCollectionName(\"testasynccollectioncreation\");\n    addReplica.setShardName(\"shard1\");\n    addReplica.setAsyncId(\"1003\");\n    server.request(addReplica);\n    state = getRequestStateAfterCompletion(\"1003\", 60, server);\n    assertEquals(\"Add replica did not complete\", \"completed\", state);\n\n    CollectionAdminRequest.splitShard(\"testasynccollectioncreation\", \"shard1\", server, \"1004\");\n\n    state = getRequestStateAfterCompletion(\"1004\", 60, server);\n\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n  }\n\n","sourceOld":"  private void testSolrJAPICalls() throws Exception {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 2, \"conf1\", server, \"1001\");\n    String state = null;\n\n    state = getRequestStateAfterCompletion(\"1001\", 10, server);\n\n    assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 2, \"conf1\", server, \"1002\");\n\n    state = getRequestStateAfterCompletion(\"1002\", 3, server);\n\n    assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n\n    CollectionAdminRequest.splitShard(\"testasynccollectioncreation\", \"shard1\", server, \"1003\");\n\n    state = getRequestStateAfterCompletion(\"1003\", 60, server);\n\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n  }\n\n","bugFix":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164","38d22cfc483e181f76915556ccaa942fd0280c26"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38d22cfc483e181f76915556ccaa942fd0280c26","date":1406583772,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  private void testSolrJAPICalls() throws Exception {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 1, \"conf1\", server, \"1001\");\n    String state = null;\n\n    state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, server);\n\n    assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 1, \"conf1\", server, \"1002\");\n\n    state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, server);\n\n    assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n\n    CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n    addReplica.setCollectionName(\"testasynccollectioncreation\");\n    addReplica.setShardName(\"shard1\");\n    addReplica.setAsyncId(\"1003\");\n    server.request(addReplica);\n    state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, server);\n    assertEquals(\"Add replica did not complete\", \"completed\", state);\n\n    CollectionAdminRequest.splitShard(\"testasynccollectioncreation\", \"shard1\", server, \"1004\");\n\n    state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, server);\n\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n  }\n\n","sourceOld":"  private void testSolrJAPICalls() throws Exception {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 2, \"conf1\", server, \"1001\");\n    String state = null;\n\n    state = getRequestStateAfterCompletion(\"1001\", 10, server);\n\n    assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 2, \"conf1\", server, \"1002\");\n\n    state = getRequestStateAfterCompletion(\"1002\", 3, server);\n\n    assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n\n    CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n    addReplica.setCollectionName(\"testasynccollectioncreation\");\n    addReplica.setShardName(\"shard1\");\n    addReplica.setAsyncId(\"1003\");\n    server.request(addReplica);\n    state = getRequestStateAfterCompletion(\"1003\", 60, server);\n    assertEquals(\"Add replica did not complete\", \"completed\", state);\n\n    CollectionAdminRequest.splitShard(\"testasynccollectioncreation\", \"shard1\", server, \"1004\");\n\n    state = getRequestStateAfterCompletion(\"1004\", 60, server);\n\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n  }\n\n","bugFix":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","15e5c6e9cbb262742d1c0e5a3b42c87f97918e1d"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4a7d7ef06ef6f04ba2de657e90e0458048a967c6","date":1409691631,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  private void testSolrJAPICalls() throws Exception {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n\n    Create createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n    createCollectionRequest.setNumShards(1);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"1001\");\n    createCollectionRequest.process(server);\n\n    String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, server);\n\n    assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n\n\n    createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n    createCollectionRequest.setNumShards(1);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"1002\");\n    createCollectionRequest.process(server);\n\n    state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, server);\n\n    assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n\n    CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n    addReplica.setCollectionName(\"testasynccollectioncreation\");\n    addReplica.setShardName(\"shard1\");\n    addReplica.setAsyncId(\"1003\");\n    server.request(addReplica);\n    state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, server);\n    assertEquals(\"Add replica did not complete\", \"completed\", state);\n\n\n    SplitShard splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"testasynccollectioncreation\");\n    splitShardRequest.setShardName(\"shard1\");\n    splitShardRequest.setAsyncId(\"1004\");\n    splitShardRequest.process(server);\n\n    state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, server);\n\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n  }\n\n","sourceOld":"  private void testSolrJAPICalls() throws Exception {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 1, \"conf1\", server, \"1001\");\n    String state = null;\n\n    state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, server);\n\n    assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n\n    CollectionAdminRequest.createCollection(\"testasynccollectioncreation\", 1, \"conf1\", server, \"1002\");\n\n    state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, server);\n\n    assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n\n    CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n    addReplica.setCollectionName(\"testasynccollectioncreation\");\n    addReplica.setShardName(\"shard1\");\n    addReplica.setAsyncId(\"1003\");\n    server.request(addReplica);\n    state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, server);\n    assertEquals(\"Add replica did not complete\", \"completed\", state);\n\n    CollectionAdminRequest.splitShard(\"testasynccollectioncreation\", \"shard1\", server, \"1004\");\n\n    state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, server);\n\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  private void testSolrJAPICalls() throws Exception {\n    SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    Create createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n    createCollectionRequest.setNumShards(1);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"1001\");\n    createCollectionRequest.process(client);\n\n    String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n\n    assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n\n\n    createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n    createCollectionRequest.setNumShards(1);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"1002\");\n    createCollectionRequest.process(client);\n\n    state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n\n    assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n\n    CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n    addReplica.setCollectionName(\"testasynccollectioncreation\");\n    addReplica.setShardName(\"shard1\");\n    addReplica.setAsyncId(\"1003\");\n    client.request(addReplica);\n    state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n    assertEquals(\"Add replica did not complete\", \"completed\", state);\n\n\n    SplitShard splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"testasynccollectioncreation\");\n    splitShardRequest.setShardName(\"shard1\");\n    splitShardRequest.setAsyncId(\"1004\");\n    splitShardRequest.process(client);\n\n    state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n  }\n\n","sourceOld":"  private void testSolrJAPICalls() throws Exception {\n    SolrServer server = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0)));\n\n    Create createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n    createCollectionRequest.setNumShards(1);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"1001\");\n    createCollectionRequest.process(server);\n\n    String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, server);\n\n    assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n\n\n    createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n    createCollectionRequest.setNumShards(1);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"1002\");\n    createCollectionRequest.process(server);\n\n    state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, server);\n\n    assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n\n    CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n    addReplica.setCollectionName(\"testasynccollectioncreation\");\n    addReplica.setShardName(\"shard1\");\n    addReplica.setAsyncId(\"1003\");\n    server.request(addReplica);\n    state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, server);\n    assertEquals(\"Add replica did not complete\", \"completed\", state);\n\n\n    SplitShard splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"testasynccollectioncreation\");\n    splitShardRequest.setShardName(\"shard1\");\n    splitShardRequest.setAsyncId(\"1004\");\n    splitShardRequest.process(server);\n\n    state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, server);\n\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  private void testSolrJAPICalls() throws Exception {\n    SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    try {\n      Create createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n  \n  \n      createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n      addReplica.setCollectionName(\"testasynccollectioncreation\");\n      addReplica.setShardName(\"shard1\");\n      addReplica.setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertEquals(\"Add replica did not complete\", \"completed\", state);\n  \n  \n      SplitShard splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"testasynccollectioncreation\");\n      splitShardRequest.setShardName(\"shard1\");\n      splitShardRequest.setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n    } finally {\n      client.shutdown();\n    }\n  }\n\n","sourceOld":"  private void testSolrJAPICalls() throws Exception {\n    SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    Create createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n    createCollectionRequest.setNumShards(1);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"1001\");\n    createCollectionRequest.process(client);\n\n    String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n\n    assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n\n\n    createCollectionRequest = new Create();\n    createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n    createCollectionRequest.setNumShards(1);\n    createCollectionRequest.setConfigName(\"conf1\");\n    createCollectionRequest.setAsyncId(\"1002\");\n    createCollectionRequest.process(client);\n\n    state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n\n    assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n\n    CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n    addReplica.setCollectionName(\"testasynccollectioncreation\");\n    addReplica.setShardName(\"shard1\");\n    addReplica.setAsyncId(\"1003\");\n    client.request(addReplica);\n    state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n    assertEquals(\"Add replica did not complete\", \"completed\", state);\n\n\n    SplitShard splitShardRequest = new SplitShard();\n    splitShardRequest.setCollectionName(\"testasynccollectioncreation\");\n    splitShardRequest.setShardName(\"shard1\");\n    splitShardRequest.setAsyncId(\"1004\");\n    splitShardRequest.process(client);\n\n    state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n  }\n\n","bugFix":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","bafca15d8e408346a67f4282ad1143b88023893b","15e5c6e9cbb262742d1c0e5a3b42c87f97918e1d","4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 1)\n  public void testSolrJAPICalls() throws Exception {\n    SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    try {\n      Create createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n  \n  \n      createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n      addReplica.setCollectionName(\"testasynccollectioncreation\");\n      addReplica.setShardName(\"shard1\");\n      addReplica.setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertEquals(\"Add replica did not complete\", \"completed\", state);\n  \n  \n      SplitShard splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"testasynccollectioncreation\");\n      splitShardRequest.setShardName(\"shard1\");\n      splitShardRequest.setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n    } finally {\n      client.shutdown();\n    }\n\n    if (DEBUG) {\n      printLayout();\n    }\n  }\n\n","sourceOld":"  private void testSolrJAPICalls() throws Exception {\n    SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    try {\n      Create createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n  \n  \n      createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n      addReplica.setCollectionName(\"testasynccollectioncreation\");\n      addReplica.setShardName(\"shard1\");\n      addReplica.setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertEquals(\"Add replica did not complete\", \"completed\", state);\n  \n  \n      SplitShard splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"testasynccollectioncreation\");\n      splitShardRequest.setShardName(\"shard1\");\n      splitShardRequest.setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n    } finally {\n      client.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 1)\n  public void testSolrJAPICalls() throws Exception {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      Create createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n  \n  \n      createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n      addReplica.setCollectionName(\"testasynccollectioncreation\");\n      addReplica.setShardName(\"shard1\");\n      addReplica.setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertEquals(\"Add replica did not complete\", \"completed\", state);\n  \n  \n      SplitShard splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"testasynccollectioncreation\");\n      splitShardRequest.setShardName(\"shard1\");\n      splitShardRequest.setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n    }\n\n    if (DEBUG) {\n      printLayout();\n    }\n  }\n\n","sourceOld":"  @Test\n  @ShardsFixed(num = 1)\n  public void testSolrJAPICalls() throws Exception {\n    SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    try {\n      Create createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n  \n  \n      createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n      addReplica.setCollectionName(\"testasynccollectioncreation\");\n      addReplica.setShardName(\"shard1\");\n      addReplica.setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertEquals(\"Add replica did not complete\", \"completed\", state);\n  \n  \n      SplitShard splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"testasynccollectioncreation\");\n      splitShardRequest.setShardName(\"shard1\");\n      splitShardRequest.setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n    } finally {\n      client.shutdown();\n    }\n\n    if (DEBUG) {\n      printLayout();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182acd29cf4cb1644a02b8517f3a5b867c0d7cce","date":1432665213,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 1)\n  public void testSolrJAPICalls() throws Exception {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      Create createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n  \n  \n      createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertEquals(\"Add replica did not complete\", \"completed\", state);\n  \n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n    }\n\n    if (DEBUG) {\n      printLayout();\n    }\n  }\n\n","sourceOld":"  @Test\n  @ShardsFixed(num = 1)\n  public void testSolrJAPICalls() throws Exception {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      Create createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n  \n  \n      createCollectionRequest = new Create();\n      createCollectionRequest.setCollectionName(\"testasynccollectioncreation\");\n      createCollectionRequest.setNumShards(1);\n      createCollectionRequest.setConfigName(\"conf1\");\n      createCollectionRequest.setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica();\n      addReplica.setCollectionName(\"testasynccollectioncreation\");\n      addReplica.setShardName(\"shard1\");\n      addReplica.setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertEquals(\"Add replica did not complete\", \"completed\", state);\n  \n  \n      SplitShard splitShardRequest = new SplitShard();\n      splitShardRequest.setCollectionName(\"testasynccollectioncreation\");\n      splitShardRequest.setShardName(\"shard1\");\n      splitShardRequest.setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n    }\n\n    if (DEBUG) {\n      printLayout();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b","date":1432801743,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 1)\n  public void testSolrJAPICalls() throws Exception {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      Create createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n  \n  \n      createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertEquals(\"Add replica did not complete\", \"completed\", state);\n  \n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n    }\n  }\n\n","sourceOld":"  @Test\n  @ShardsFixed(num = 1)\n  public void testSolrJAPICalls() throws Exception {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      Create createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n  \n  \n      createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertEquals(\"Add replica did not complete\", \"completed\", state);\n  \n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n    }\n\n    if (DEBUG) {\n      printLayout();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3088cdaa24ffe3ef44713ac9484114bd56eca2af","date":1453441194,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  @ShardsFixed(num = 1)\n  public void testSolrJAPICalls() throws Exception {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      Create createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      RequestStatusState state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n  \n      createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n    }\n  }\n\n","sourceOld":"  @Test\n  @ShardsFixed(num = 1)\n  public void testSolrJAPICalls() throws Exception {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      Create createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      String state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"CreateCollection task did not complete!\", \"completed\", state);\n  \n  \n      createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertEquals(\"Recreating a collection with the same name didn't fail, should have.\", \"failed\", state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertEquals(\"Add replica did not complete\", \"completed\", state);\n  \n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, \"completed\", state);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"861a8940601b61a2fd5427f7187314d516ef1586","date":1457434409,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setReplicationFactor(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = new CollectionAdminRequest.AddReplica()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = new SplitShard()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","sourceOld":"  @Test\n  @ShardsFixed(num = 1)\n  public void testSolrJAPICalls() throws Exception {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      Create createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      RequestStatusState state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n  \n      createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1dce8d293bb23a3bc9acca2dbdf8329ec48517d","date":1457434419,"type":3,"author":"Alan Woodward","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setReplicationFactor(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = new CollectionAdminRequest.AddReplica()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = new SplitShard()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","sourceOld":"  @Test\n  @ShardsFixed(num = 1)\n  public void testSolrJAPICalls() throws Exception {\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      Create createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1001\");\n      createCollectionRequest.process(client);\n  \n      RequestStatusState state = getRequestStateAfterCompletion(\"1001\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n  \n      createCollectionRequest = new Create()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setNumShards(1)\n              .setConfigName(\"conf1\")\n              .setAsyncId(\"1002\");\n      createCollectionRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1002\", MAX_TIMEOUT_SECONDS, client);\n  \n      assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n  \n      CollectionAdminRequest.AddReplica addReplica = new CollectionAdminRequest.AddReplica()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1003\");\n      client.request(addReplica);\n      state = getRequestStateAfterCompletion(\"1003\", MAX_TIMEOUT_SECONDS, client);\n      assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n  \n      SplitShard splitShardRequest = new SplitShard()\n              .setCollectionName(\"testasynccollectioncreation\")\n              .setShardName(\"shard1\")\n              .setAsyncId(\"1004\");\n      splitShardRequest.process(client);\n  \n      state = getRequestStateAfterCompletion(\"1004\", MAX_TIMEOUT_SECONDS * 2, client);\n  \n      assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac97ea104d893f16aab430d9904473bc1f233f3c","date":1496249396,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = CollectionAdminRequest.addReplicaToShard(\"testasynccollectioncreation\", \"shard1\")\n      .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.splitShard(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","sourceOld":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setReplicationFactor(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = new CollectionAdminRequest.AddReplica()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = new SplitShard()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3217321f3e1d7922898c6c633d17acfa840d6875","date":1496257480,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = CollectionAdminRequest.addReplicaToShard(\"testasynccollectioncreation\", \"shard1\")\n      .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.splitShard(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","sourceOld":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setReplicationFactor(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = new CollectionAdminRequest.AddReplica()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = new SplitShard()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","date":1496281877,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = CollectionAdminRequest.addReplicaToShard(\"testasynccollectioncreation\", \"shard1\")\n      .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.splitShard(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","sourceOld":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setReplicationFactor(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = new CollectionAdminRequest.AddReplica()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = new SplitShard()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = CollectionAdminRequest.addReplicaToShard(\"testasynccollectioncreation\", \"shard1\")\n      .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.splitShard(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","sourceOld":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setReplicationFactor(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = new Create()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setNumShards(1)\n        .setConfigName(\"conf1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = new CollectionAdminRequest.AddReplica()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = new SplitShard()\n        .setCollectionName(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = CollectionAdminRequest.addReplicaToShard(\"testasynccollectioncreation\", \"shard1\")\n      .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.splitShard(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","sourceOld":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = CollectionAdminRequest.addReplicaToShard(\"testasynccollectioncreation\", \"shard1\")\n      .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.splitShard(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIAsyncDistributedZkTest#testSolrJAPICalls().mjava","sourceNew":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = CollectionAdminRequest.addReplicaToShard(\"testasynccollectioncreation\", \"shard1\")\n      .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.splitShard(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","sourceOld":"  @Test\n  public void testSolrJAPICalls() throws Exception {\n\n    final CloudSolrClient client = cluster.getSolrClient();\n\n    RequestStatusState state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"CreateCollection task did not complete!\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.createCollection(\"testasynccollectioncreation\",\"conf1\",1,1)\n        .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Recreating a collection with the same should have failed.\", RequestStatusState.FAILED, state);\n\n    state = CollectionAdminRequest.addReplicaToShard(\"testasynccollectioncreation\", \"shard1\")\n      .processAndWait(client, MAX_TIMEOUT_SECONDS);\n    assertSame(\"Add replica did not complete\", RequestStatusState.COMPLETED, state);\n\n    state = CollectionAdminRequest.splitShard(\"testasynccollectioncreation\")\n        .setShardName(\"shard1\")\n        .processAndWait(client, MAX_TIMEOUT_SECONDS * 2);\n    assertEquals(\"Shard split did not complete. Last recorded state: \" + state, RequestStatusState.COMPLETED, state);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["3217321f3e1d7922898c6c633d17acfa840d6875","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"3088cdaa24ffe3ef44713ac9484114bd56eca2af":["2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b"],"abb23fcc2461782ab204e61213240feb77d355aa":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["d1dce8d293bb23a3bc9acca2dbdf8329ec48517d"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["3217321f3e1d7922898c6c633d17acfa840d6875"],"bafca15d8e408346a67f4282ad1143b88023893b":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"3217321f3e1d7922898c6c633d17acfa840d6875":["d1dce8d293bb23a3bc9acca2dbdf8329ec48517d","ac97ea104d893f16aab430d9904473bc1f233f3c"],"38d22cfc483e181f76915556ccaa942fd0280c26":["15e5c6e9cbb262742d1c0e5a3b42c87f97918e1d"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["d1dce8d293bb23a3bc9acca2dbdf8329ec48517d","3217321f3e1d7922898c6c633d17acfa840d6875"],"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["38d22cfc483e181f76915556ccaa942fd0280c26"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["d1dce8d293bb23a3bc9acca2dbdf8329ec48517d","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce"],"15e5c6e9cbb262742d1c0e5a3b42c87f97918e1d":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["abb23fcc2461782ab204e61213240feb77d355aa"],"182acd29cf4cb1644a02b8517f3a5b867c0d7cce":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"d1dce8d293bb23a3bc9acca2dbdf8329ec48517d":["3088cdaa24ffe3ef44713ac9484114bd56eca2af","861a8940601b61a2fd5427f7187314d516ef1586"],"861a8940601b61a2fd5427f7187314d516ef1586":["3088cdaa24ffe3ef44713ac9484114bd56eca2af"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3088cdaa24ffe3ef44713ac9484114bd56eca2af":["d1dce8d293bb23a3bc9acca2dbdf8329ec48517d","861a8940601b61a2fd5427f7187314d516ef1586"],"abb23fcc2461782ab204e61213240feb77d355aa":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["3217321f3e1d7922898c6c633d17acfa840d6875"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["15e5c6e9cbb262742d1c0e5a3b42c87f97918e1d"],"3217321f3e1d7922898c6c633d17acfa840d6875":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"bafca15d8e408346a67f4282ad1143b88023893b":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"38d22cfc483e181f76915556ccaa942fd0280c26":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["bafca15d8e408346a67f4282ad1143b88023893b"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b":["3088cdaa24ffe3ef44713ac9484114bd56eca2af"],"15e5c6e9cbb262742d1c0e5a3b42c87f97918e1d":["38d22cfc483e181f76915556ccaa942fd0280c26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce"],"182acd29cf4cb1644a02b8517f3a5b867c0d7cce":["2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b"],"d1dce8d293bb23a3bc9acca2dbdf8329ec48517d":["ac97ea104d893f16aab430d9904473bc1f233f3c","3217321f3e1d7922898c6c633d17acfa840d6875","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","e9017cf144952056066919f1ebc7897ff9bd71b1"],"861a8940601b61a2fd5427f7187314d516ef1586":["d1dce8d293bb23a3bc9acca2dbdf8329ec48517d"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["abb23fcc2461782ab204e61213240feb77d355aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}