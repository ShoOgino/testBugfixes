{"path":"src/java/org/apache/solr/util/TestHarness#delete(String,String).mjava","commits":[{"id":"f66f1826f07774581d2ec661444fc987bdd1a85d","date":1144730206,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/TestHarness#delete(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generates a delete xml string\n   * @param val text that has not already been xml escaped\n   */\n  private static String delete(String deltype, String val) {\n    try {\n      StringWriter r = new StringWriter();\n            \n      r.write(\"<delete>\");\n      XML.writeXML(r, deltype, val);\n      r.write(\"</delete>\");\n            \n      return r.getBuffer().toString();\n    } catch (IOException e) {\n      throw new RuntimeException\n        (\"this should never happen with a StringWriter\", e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#delete(String,String).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#delete(String,String).mjava","sourceNew":"  /**\n   * Generates a delete xml string\n   * @param val text that has not already been xml escaped\n   */\n  private static String delete(String deltype, String val) {\n    try {\n      StringWriter r = new StringWriter();\n            \n      r.write(\"<delete>\");\n      XML.writeXML(r, deltype, val);\n      r.write(\"</delete>\");\n            \n      return r.getBuffer().toString();\n    } catch (IOException e) {\n      throw new RuntimeException\n        (\"this should never happen with a StringWriter\", e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Generates a delete xml string\n   * @param val text that has not already been xml escaped\n   */\n  private static String delete(String deltype, String val) {\n    try {\n      StringWriter r = new StringWriter();\n            \n      r.write(\"<delete>\");\n      XML.writeXML(r, deltype, val);\n      r.write(\"</delete>\");\n            \n      return r.getBuffer().toString();\n    } catch (IOException e) {\n      throw new RuntimeException\n        (\"this should never happen with a StringWriter\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"f66f1826f07774581d2ec661444fc987bdd1a85d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"f66f1826f07774581d2ec661444fc987bdd1a85d":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}