{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"f\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"the wizard of ozzy\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ee76d213d935c68932ca13b55fa0a8a32bf6af1a","date":1343572717,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"f\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","ba1116b3450a9c1642c89445d131b37344055245","04f07771a2a7dd3a395700665ed839c3dae2def2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"f\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"f\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"f\", a);\n    Query q = qp.parse(\"\\\"wizard of ozzy\\\"\");\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eafa8c5eabc3dacd34680054e6a33bda024080ac","date":1367691488,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testPositionIncrements().mjava","sourceNew":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits.value);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-2002: make sure defaults for StandardAnalyzer's\n  // enableStopPositionIncr & QueryParser's enablePosIncr\n  // \"match\"\n  public void testPositionIncrements() throws Exception {\n    Directory dir = newDirectory();\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(a));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"the wizard of ozzy\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = getQuery(\"\\\"wizard of ozzy\\\"\",a);\n    assertEquals(1, s.search(q, 1).totalHits);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a1862266772deb28cdcb7d996b64d2177022687":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["04f07771a2a7dd3a395700665ed839c3dae2def2","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["04f07771a2a7dd3a395700665ed839c3dae2def2","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["eafa8c5eabc3dacd34680054e6a33bda024080ac","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"2a1862266772deb28cdcb7d996b64d2177022687":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["2a1862266772deb28cdcb7d996b64d2177022687"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}