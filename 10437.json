{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MultiTermHighlighting.AutomataCollector#visitLeaf(Query).mjava","commits":[{"id":"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7","date":1552575873,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MultiTermHighlighting.AutomataCollector#visitLeaf(Query).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void visitLeaf(Query query) {\n      if (query instanceof AutomatonQuery) {\n        AutomatonQuery aq = (AutomatonQuery) query;\n        if (aq.isAutomatonBinary() == false) {\n          // WildcardQuery, RegexpQuery\n          runAutomata.add(new CharacterRunAutomaton(aq.getAutomaton()) {\n            @Override\n            public String toString() {\n              return query.toString();\n            }\n          });\n        }\n        else {\n          runAutomata.add(binaryToCharRunAutomaton(aq.getAutomaton(), query.toString()));\n        }\n      }\n      else if (query instanceof FuzzyQuery) {\n        FuzzyQuery fq = (FuzzyQuery) query;\n        if (fq.getMaxEdits() == 0 || fq.getPrefixLength() >= fq.getTerm().text().length()) {\n          consumeTerms(query, fq.getTerm());\n        }\n        else {\n          runAutomata.add(new CharacterRunAutomaton(fq.toAutomaton()){\n            @Override\n            public String toString() {\n              return query.toString();\n            }\n          });\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d35c63123a7e255b58f8cf3948eb9a6128100a32","date":1574872099,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/MultiTermHighlighting.AutomataCollector#visitLeaf(Query).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void visitLeaf(Query query) {\n      if (query instanceof AutomatonQuery) {\n        AutomatonQuery aq = (AutomatonQuery) query;\n        if (aq.isAutomatonBinary() == false) {\n          // WildcardQuery, RegexpQuery\n          runAutomata.add(new CharacterRunAutomaton(aq.getAutomaton()) {\n            @Override\n            public String toString() {\n              return query.toString();\n            }\n          });\n        }\n        else {\n          runAutomata.add(binaryToCharRunAutomaton(aq.getAutomaton(), query.toString()));\n        }\n      }\n      else if (query instanceof FuzzyQuery) {\n        FuzzyQuery fq = (FuzzyQuery) query;\n        if (fq.getMaxEdits() == 0 || fq.getPrefixLength() >= fq.getTerm().text().length()) {\n          consumeTerms(query, fq.getTerm());\n        }\n        else {\n          runAutomata.add(new CharacterRunAutomaton(fq.toAutomaton()){\n            @Override\n            public String toString() {\n              return query.toString();\n            }\n          });\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d35c63123a7e255b58f8cf3948eb9a6128100a32":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d35c63123a7e255b58f8cf3948eb9a6128100a32"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"d35c63123a7e255b58f8cf3948eb9a6128100a32":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["d35c63123a7e255b58f8cf3948eb9a6128100a32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}