{"path":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeFilter#SlowCollatedTermRangeFilter(String,String,String,boolean,boolean,Collator).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeFilter#SlowCollatedTermRangeFilter(String,String,String,boolean,boolean,Collator).mjava","pathOld":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeFilter#SlowCollatedTermRangeFilter(String,String,String,boolean,boolean,Collator).mjava","sourceNew":"  /**\n   *\n   * @param lowerTerm The lower bound on this range\n   * @param upperTerm The upper bound on this range\n   * @param includeLower Does this range include the lower bound?\n   * @param includeUpper Does this range include the upper bound?\n   * @param collator The collator to use when determining range inclusion; set\n   *  to null to use Unicode code point ordering instead of collation.\n   * @throws IllegalArgumentException if both terms are null or if\n   *  lowerTerm is null and includeLower is true (similar for upperTerm\n   *  and includeUpper)\n   */\n  public SlowCollatedTermRangeFilter(String fieldName, String lowerTerm, String upperTerm,\n                     boolean includeLower, boolean includeUpper,\n                     Collator collator) {\n      super(new SlowCollatedTermRangeQuery(fieldName, lowerTerm, upperTerm, includeLower, includeUpper, collator));\n  }\n\n","sourceOld":"  /**\n   *\n   * @param lowerTerm The lower bound on this range\n   * @param upperTerm The upper bound on this range\n   * @param includeLower Does this range include the lower bound?\n   * @param includeUpper Does this range include the upper bound?\n   * @param collator The collator to use when determining range inclusion; set\n   *  to null to use Unicode code point ordering instead of collation.\n   * @throws IllegalArgumentException if both terms are null or if\n   *  lowerTerm is null and includeLower is true (similar for upperTerm\n   *  and includeUpper)\n   */\n  public SlowCollatedTermRangeFilter(String fieldName, String lowerTerm, String upperTerm,\n                     boolean includeLower, boolean includeUpper,\n                     Collator collator) {\n      super(new SlowCollatedTermRangeQuery(fieldName, lowerTerm, upperTerm, includeLower, includeUpper, collator));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59cae262d4251e10e2a034b17c45776f6b4c7e68","date":1424712773,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/sandbox/queries/SlowCollatedTermRangeFilter#SlowCollatedTermRangeFilter(String,String,String,boolean,boolean,Collator).mjava","sourceNew":null,"sourceOld":"  /**\n   *\n   * @param lowerTerm The lower bound on this range\n   * @param upperTerm The upper bound on this range\n   * @param includeLower Does this range include the lower bound?\n   * @param includeUpper Does this range include the upper bound?\n   * @param collator The collator to use when determining range inclusion; set\n   *  to null to use Unicode code point ordering instead of collation.\n   * @throws IllegalArgumentException if both terms are null or if\n   *  lowerTerm is null and includeLower is true (similar for upperTerm\n   *  and includeUpper)\n   */\n  public SlowCollatedTermRangeFilter(String fieldName, String lowerTerm, String upperTerm,\n                     boolean includeLower, boolean includeUpper,\n                     Collator collator) {\n      super(new SlowCollatedTermRangeQuery(fieldName, lowerTerm, upperTerm, includeLower, includeUpper, collator));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"59cae262d4251e10e2a034b17c45776f6b4c7e68":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59cae262d4251e10e2a034b17c45776f6b4c7e68"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["59cae262d4251e10e2a034b17c45776f6b4c7e68"],"59cae262d4251e10e2a034b17c45776f6b4c7e68":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}