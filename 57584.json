{"path":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#close().mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(8) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(8) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // forceMerge since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(8) == 2) {\n      doRandomForceMerge();\n    }\n    w.close();\n  }\n\n","sourceOld":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(8) == 2) {\n      doRandomOptimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // forceMerge since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(8) == 2) {\n      doRandomForceMerge();\n    }\n    w.close();\n  }\n\n","sourceOld":"  /**\n   * Close this writer.\n   * @see IndexWriter#close()\n   */\n  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // forceMerge since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(8) == 2) {\n      doRandomForceMerge();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}