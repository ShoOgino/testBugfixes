{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTerms#UniformSplitTerms(IndexInput,FieldMetadata,PostingsReaderBase,BlockDecoder,IndexDictionary.BrowserSupplier).mjava","commits":[{"id":"42f6185d883389450f593fb00103d2e89a0b8336","date":1577705030,"type":1,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTerms#UniformSplitTerms(IndexInput,FieldMetadata,PostingsReaderBase,BlockDecoder,IndexDictionary.BrowserSupplier).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTerms#UniformSplitTerms(IndexInput,FieldMetadata,PostingsReaderBase,BlockDecoder,DictionaryBrowserSupplier).mjava","sourceNew":"  /**\n   * @param blockDecoder Optional block decoder, may be null if none. It can be used for decompression or decryption.\n   */\n  protected UniformSplitTerms(IndexInput blockInput, FieldMetadata fieldMetadata,\n                              PostingsReaderBase postingsReader, BlockDecoder blockDecoder,\n                              IndexDictionary.BrowserSupplier dictionaryBrowserSupplier) {\n    assert fieldMetadata != null;\n    assert fieldMetadata.getFieldInfo() != null;\n    assert fieldMetadata.getLastTerm() != null;\n    assert dictionaryBrowserSupplier != null;\n    this.blockInput = blockInput;\n    this.fieldMetadata = fieldMetadata;\n    this.postingsReader = postingsReader;\n    this.blockDecoder = blockDecoder;\n    this.dictionaryBrowserSupplier = dictionaryBrowserSupplier;\n  }\n\n","sourceOld":"  /**\n   * @param blockDecoder Optional block decoder, may be null if none. It can be used for decompression or decryption.\n   */\n  protected UniformSplitTerms(IndexInput blockInput, FieldMetadata fieldMetadata,\n                              PostingsReaderBase postingsReader, BlockDecoder blockDecoder,\n                              DictionaryBrowserSupplier dictionaryBrowserSupplier) {\n    assert fieldMetadata != null;\n    assert fieldMetadata.getFieldInfo() != null;\n    assert fieldMetadata.getLastTerm() != null;\n    assert dictionaryBrowserSupplier != null;\n    this.blockInput = blockInput;\n    this.fieldMetadata = fieldMetadata;\n    this.postingsReader = postingsReader;\n    this.blockDecoder = blockDecoder;\n    this.dictionaryBrowserSupplier = dictionaryBrowserSupplier;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e478fa10594a2ef9d1ddf7d195020300453c4e","date":1577783287,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTerms#UniformSplitTerms(IndexInput,FieldMetadata,PostingsReaderBase,BlockDecoder,IndexDictionary.BrowserSupplier).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTerms#UniformSplitTerms(IndexInput,FieldMetadata,PostingsReaderBase,BlockDecoder,DictionaryBrowserSupplier).mjava","sourceNew":"  /**\n   * @param blockDecoder Optional block decoder, may be null if none. It can be used for decompression or decryption.\n   */\n  protected UniformSplitTerms(IndexInput blockInput, FieldMetadata fieldMetadata,\n                              PostingsReaderBase postingsReader, BlockDecoder blockDecoder,\n                              IndexDictionary.BrowserSupplier dictionaryBrowserSupplier) {\n    assert fieldMetadata != null;\n    assert fieldMetadata.getFieldInfo() != null;\n    assert fieldMetadata.getLastTerm() != null;\n    assert dictionaryBrowserSupplier != null;\n    this.blockInput = blockInput;\n    this.fieldMetadata = fieldMetadata;\n    this.postingsReader = postingsReader;\n    this.blockDecoder = blockDecoder;\n    this.dictionaryBrowserSupplier = dictionaryBrowserSupplier;\n  }\n\n","sourceOld":"  /**\n   * @param blockDecoder Optional block decoder, may be null if none. It can be used for decompression or decryption.\n   */\n  protected UniformSplitTerms(IndexInput blockInput, FieldMetadata fieldMetadata,\n                              PostingsReaderBase postingsReader, BlockDecoder blockDecoder,\n                              DictionaryBrowserSupplier dictionaryBrowserSupplier) {\n    assert fieldMetadata != null;\n    assert fieldMetadata.getFieldInfo() != null;\n    assert fieldMetadata.getLastTerm() != null;\n    assert dictionaryBrowserSupplier != null;\n    this.blockInput = blockInput;\n    this.fieldMetadata = fieldMetadata;\n    this.postingsReader = postingsReader;\n    this.blockDecoder = blockDecoder;\n    this.dictionaryBrowserSupplier = dictionaryBrowserSupplier;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"42f6185d883389450f593fb00103d2e89a0b8336":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"62e478fa10594a2ef9d1ddf7d195020300453c4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","42f6185d883389450f593fb00103d2e89a0b8336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42f6185d883389450f593fb00103d2e89a0b8336"]},"commit2Childs":{"42f6185d883389450f593fb00103d2e89a0b8336":["62e478fa10594a2ef9d1ddf7d195020300453c4e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["42f6185d883389450f593fb00103d2e89a0b8336","62e478fa10594a2ef9d1ddf7d195020300453c4e"],"62e478fa10594a2ef9d1ddf7d195020300453c4e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["62e478fa10594a2ef9d1ddf7d195020300453c4e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}