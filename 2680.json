{"path":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter#revisitPolicy().mjava","commits":[{"id":"492bacefe65f87b305a1988c63ff7bb5c8fcef75","date":1271907901,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter#revisitPolicy().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Revisits the {@link IndexDeletionPolicy} by calling its\n   * {@link IndexDeletionPolicy#onCommit(List)} again with the known commits.\n   * This is useful in cases where a deletion policy which holds onto index\n   * commits is used. The application may know that some commits are not held by\n   * the deletion policy anymore and call\n   * {@link IndexWriter#deleteUnusedFiles()}, which will attempt to delete the\n   * unused commits again.\n   */\n  void revisitPolicy() throws IOException {\n    if (infoStream != null) {\n      message(\"now revisitPolicy\");\n    }\n\n    if (commits.size() > 0) {\n      policy.onCommit(commits);\n      deleteCommits();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7719bda090a2ae5bab940a27ba7bb9054b29818","date":1315503197,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter#revisitPolicy().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter#revisitPolicy().mjava","sourceNew":"  /**\n   * Revisits the {@link IndexDeletionPolicy} by calling its\n   * {@link IndexDeletionPolicy#onCommit(List)} again with the known commits.\n   * This is useful in cases where a deletion policy which holds onto index\n   * commits is used. The application may know that some commits are not held by\n   * the deletion policy anymore and call\n   * {@link IndexWriter#deleteUnusedFiles()}, which will attempt to delete the\n   * unused commits again.\n   */\n  void revisitPolicy() throws IOException {\n    assert locked();\n    if (infoStream != null) {\n      message(\"now revisitPolicy\");\n    }\n\n    if (commits.size() > 0) {\n      policy.onCommit(commits);\n      deleteCommits();\n    }\n  }\n\n","sourceOld":"  /**\n   * Revisits the {@link IndexDeletionPolicy} by calling its\n   * {@link IndexDeletionPolicy#onCommit(List)} again with the known commits.\n   * This is useful in cases where a deletion policy which holds onto index\n   * commits is used. The application may know that some commits are not held by\n   * the deletion policy anymore and call\n   * {@link IndexWriter#deleteUnusedFiles()}, which will attempt to delete the\n   * unused commits again.\n   */\n  void revisitPolicy() throws IOException {\n    if (infoStream != null) {\n      message(\"now revisitPolicy\");\n    }\n\n    if (commits.size() > 0) {\n      policy.onCommit(commits);\n      deleteCommits();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter#revisitPolicy().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter#revisitPolicy().mjava","sourceNew":"  /**\n   * Revisits the {@link IndexDeletionPolicy} by calling its\n   * {@link IndexDeletionPolicy#onCommit(List)} again with the known commits.\n   * This is useful in cases where a deletion policy which holds onto index\n   * commits is used. The application may know that some commits are not held by\n   * the deletion policy anymore and call\n   * {@link IndexWriter#deleteUnusedFiles()}, which will attempt to delete the\n   * unused commits again.\n   */\n  void revisitPolicy() throws IOException {\n    assert locked();\n    if (infoStream != null) {\n      infoStream.message(\"IFD\", \"now revisitPolicy\");\n    }\n\n    if (commits.size() > 0) {\n      policy.onCommit(commits);\n      deleteCommits();\n    }\n  }\n\n","sourceOld":"  /**\n   * Revisits the {@link IndexDeletionPolicy} by calling its\n   * {@link IndexDeletionPolicy#onCommit(List)} again with the known commits.\n   * This is useful in cases where a deletion policy which holds onto index\n   * commits is used. The application may know that some commits are not held by\n   * the deletion policy anymore and call\n   * {@link IndexWriter#deleteUnusedFiles()}, which will attempt to delete the\n   * unused commits again.\n   */\n  void revisitPolicy() throws IOException {\n    assert locked();\n    if (infoStream != null) {\n      message(\"now revisitPolicy\");\n    }\n\n    if (commits.size() > 0) {\n      policy.onCommit(commits);\n      deleteCommits();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58c6bbc222f074c844e736e6fb23647e3db9cfe3","date":1322743940,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter#revisitPolicy().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter#revisitPolicy().mjava","sourceNew":"  /**\n   * Revisits the {@link IndexDeletionPolicy} by calling its\n   * {@link IndexDeletionPolicy#onCommit(List)} again with the known commits.\n   * This is useful in cases where a deletion policy which holds onto index\n   * commits is used. The application may know that some commits are not held by\n   * the deletion policy anymore and call\n   * {@link IndexWriter#deleteUnusedFiles()}, which will attempt to delete the\n   * unused commits again.\n   */\n  void revisitPolicy() throws IOException {\n    assert locked();\n    if (infoStream.isEnabled(\"IFD\")) {\n      infoStream.message(\"IFD\", \"now revisitPolicy\");\n    }\n\n    if (commits.size() > 0) {\n      policy.onCommit(commits);\n      deleteCommits();\n    }\n  }\n\n","sourceOld":"  /**\n   * Revisits the {@link IndexDeletionPolicy} by calling its\n   * {@link IndexDeletionPolicy#onCommit(List)} again with the known commits.\n   * This is useful in cases where a deletion policy which holds onto index\n   * commits is used. The application may know that some commits are not held by\n   * the deletion policy anymore and call\n   * {@link IndexWriter#deleteUnusedFiles()}, which will attempt to delete the\n   * unused commits again.\n   */\n  void revisitPolicy() throws IOException {\n    assert locked();\n    if (infoStream != null) {\n      infoStream.message(\"IFD\", \"now revisitPolicy\");\n    }\n\n    if (commits.size() > 0) {\n      policy.onCommit(commits);\n      deleteCommits();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter#revisitPolicy().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexFileDeleter#revisitPolicy().mjava","sourceNew":"  /**\n   * Revisits the {@link IndexDeletionPolicy} by calling its\n   * {@link IndexDeletionPolicy#onCommit(List)} again with the known commits.\n   * This is useful in cases where a deletion policy which holds onto index\n   * commits is used. The application may know that some commits are not held by\n   * the deletion policy anymore and call\n   * {@link IndexWriter#deleteUnusedFiles()}, which will attempt to delete the\n   * unused commits again.\n   */\n  void revisitPolicy() throws IOException {\n    assert locked();\n    if (infoStream.isEnabled(\"IFD\")) {\n      infoStream.message(\"IFD\", \"now revisitPolicy\");\n    }\n\n    if (commits.size() > 0) {\n      policy.onCommit(commits);\n      deleteCommits();\n    }\n  }\n\n","sourceOld":"  /**\n   * Revisits the {@link IndexDeletionPolicy} by calling its\n   * {@link IndexDeletionPolicy#onCommit(List)} again with the known commits.\n   * This is useful in cases where a deletion policy which holds onto index\n   * commits is used. The application may know that some commits are not held by\n   * the deletion policy anymore and call\n   * {@link IndexWriter#deleteUnusedFiles()}, which will attempt to delete the\n   * unused commits again.\n   */\n  void revisitPolicy() throws IOException {\n    assert locked();\n    if (infoStream.isEnabled(\"IFD\")) {\n      infoStream.message(\"IFD\", \"now revisitPolicy\");\n    }\n\n    if (commits.size() > 0) {\n      policy.onCommit(commits);\n      deleteCommits();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["06584e6e98d592b34e1329b384182f368d2025e8"],"f7719bda090a2ae5bab940a27ba7bb9054b29818":["492bacefe65f87b305a1988c63ff7bb5c8fcef75"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"06584e6e98d592b34e1329b384182f368d2025e8":["f7719bda090a2ae5bab940a27ba7bb9054b29818"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"492bacefe65f87b305a1988c63ff7bb5c8fcef75":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f7719bda090a2ae5bab940a27ba7bb9054b29818":["06584e6e98d592b34e1329b384182f368d2025e8"],"06584e6e98d592b34e1329b384182f368d2025e8":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["492bacefe65f87b305a1988c63ff7bb5c8fcef75"],"492bacefe65f87b305a1988c63ff7bb5c8fcef75":["f7719bda090a2ae5bab940a27ba7bb9054b29818"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}