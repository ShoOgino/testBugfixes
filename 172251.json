{"path":"solr/core/src/test/org/apache/solr/cloud/TestCloudPseudoReturnFields#testMultiValuedRTG().mjava","commits":[{"id":"934e1c7ca2823f3ec2758cc0f0912eac404856f2","date":1467837741,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudPseudoReturnFields#testMultiValuedRTG().mjava","pathOld":"/dev/null","sourceNew":"  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-9286\")\n  public void testMultiValuedRTG() throws Exception {\n    SolrDocument doc = null;\n\n    // check same results as testMultiValued via RTG (committed doc)\n    doc = getRandClient(random()).getById(\"42\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 2, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"aaa\", doc.getFieldValue(\"subject\"));\n\n    // also check real-time-get from transaction log (uncommitted doc)\n    doc = getRandClient(random()).getById(\"99\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 3, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"uncommitted\", doc.getFieldValue(\"subject\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["76b65cf789129cacd84e977b8f1538aec29e0281"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"76b65cf789129cacd84e977b8f1538aec29e0281","date":1470165799,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudPseudoReturnFields#testMultiValuedRTG().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudPseudoReturnFields#testMultiValuedRTG().mjava","sourceNew":"  public void testMultiValuedRTG() throws Exception {\n    SolrDocument doc = null;\n\n    // check same results as testMultiValued via RTG (committed doc)\n    doc = getRandClient(random()).getById(\"42\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 3, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"aaa\", doc.getFieldValue(\"subject\"));\n\n    // also check real-time-get from transaction log (uncommitted doc)\n    doc = getRandClient(random()).getById(\"99\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 3, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"uncommitted\", doc.getFieldValue(\"subject\"));\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-9286\")\n  public void testMultiValuedRTG() throws Exception {\n    SolrDocument doc = null;\n\n    // check same results as testMultiValued via RTG (committed doc)\n    doc = getRandClient(random()).getById(\"42\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 2, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"aaa\", doc.getFieldValue(\"subject\"));\n\n    // also check real-time-get from transaction log (uncommitted doc)\n    doc = getRandClient(random()).getById(\"99\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 3, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"uncommitted\", doc.getFieldValue(\"subject\"));\n  }\n\n","bugFix":["934e1c7ca2823f3ec2758cc0f0912eac404856f2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudPseudoReturnFields#testMultiValuedRTG().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudPseudoReturnFields#testMultiValuedRTG().mjava","sourceNew":"  public void testMultiValuedRTG() throws Exception {\n    SolrDocument doc = null;\n\n    // check same results as testMultiValued via RTG (committed doc)\n    doc = getRandClient(random()).getById(\"42\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 3, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"aaa\", doc.getFieldValue(\"subject\"));\n\n    // also check real-time-get from transaction log (uncommitted doc)\n    doc = getRandClient(random()).getById(\"99\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 3, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"uncommitted\", doc.getFieldValue(\"subject\"));\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-9286\")\n  public void testMultiValuedRTG() throws Exception {\n    SolrDocument doc = null;\n\n    // check same results as testMultiValued via RTG (committed doc)\n    doc = getRandClient(random()).getById(\"42\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 2, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"aaa\", doc.getFieldValue(\"subject\"));\n\n    // also check real-time-get from transaction log (uncommitted doc)\n    doc = getRandClient(random()).getById(\"99\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 3, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"uncommitted\", doc.getFieldValue(\"subject\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudPseudoReturnFields#testMultiValuedRTG().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiValuedRTG() throws Exception {\n    SolrDocument doc = null;\n\n    // check same results as testMultiValued via RTG (committed doc)\n    doc = getRandClient(random()).getById(\"42\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 3, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"aaa\", doc.getFieldValue(\"subject\"));\n\n    // also check real-time-get from transaction log (uncommitted doc)\n    doc = getRandClient(random()).getById(\"99\", params(\"fl\",\"val_ss:val_i, val2_ss:10, subject\"));\n    assertEquals(\"\"+doc, 3, doc.size());\n    assertEquals(\"\"+doc, 1, doc.getFieldValue(\"val_ss\"));\n    assertEquals(\"\"+doc, 10L, doc.getFieldValue(\"val2_ss\"));\n    assertEquals(\"\"+doc, \"uncommitted\", doc.getFieldValue(\"subject\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"934e1c7ca2823f3ec2758cc0f0912eac404856f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","76b65cf789129cacd84e977b8f1538aec29e0281"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["934e1c7ca2823f3ec2758cc0f0912eac404856f2","76b65cf789129cacd84e977b8f1538aec29e0281"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["76b65cf789129cacd84e977b8f1538aec29e0281"],"76b65cf789129cacd84e977b8f1538aec29e0281":["934e1c7ca2823f3ec2758cc0f0912eac404856f2"]},"commit2Childs":{"934e1c7ca2823f3ec2758cc0f0912eac404856f2":["3b013574eedcdbac35dc7e35b0ee616ffc38895d","76b65cf789129cacd84e977b8f1538aec29e0281"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["934e1c7ca2823f3ec2758cc0f0912eac404856f2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"76b65cf789129cacd84e977b8f1538aec29e0281":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}