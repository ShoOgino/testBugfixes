{"path":"solr/core/src/java/org/apache/solr/handler/component/SpatialHeatmapFacets.PngHelper#writeImage(BufferedImage).mjava","commits":[{"id":"59d82b0be40ecfcc2c94c776b324e0903a62b844","date":1423535462,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SpatialHeatmapFacets.PngHelper#writeImage(BufferedImage).mjava","pathOld":"/dev/null","sourceNew":"    static byte[] writeImage(BufferedImage image) {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream(\n          // initialize to roughly 1/4th the size a native int would take per-pixel\n          image.getWidth() * image.getHeight() + 1024\n      );\n      try {\n        ImageIO.write(image, FORMAT_PNG, baos);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"While generating PNG: \" + e);\n      }\n      //too bad we can't access the raw byte[]; this copies to a new one\n      return baos.toByteArray();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ab027bdfe663227636ccbeda13ae82add302939","date":1529980633,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetHeatmap.PngHelper#writeImage(BufferedImage).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SpatialHeatmapFacets.PngHelper#writeImage(BufferedImage).mjava","sourceNew":"    static byte[] writeImage(BufferedImage image) {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream(\n          // initialize to roughly 1/4th the size a native int would take per-pixel\n          image.getWidth() * image.getHeight() + 1024\n      );\n      try {\n        ImageIO.write(image, FORMAT_PNG, baos);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"While generating PNG: \" + e);\n      }\n      //too bad we can't access the raw byte[]; this copies to a new one\n      return baos.toByteArray();\n    }\n\n","sourceOld":"    static byte[] writeImage(BufferedImage image) {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream(\n          // initialize to roughly 1/4th the size a native int would take per-pixel\n          image.getWidth() * image.getHeight() + 1024\n      );\n      try {\n        ImageIO.write(image, FORMAT_PNG, baos);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"While generating PNG: \" + e);\n      }\n      //too bad we can't access the raw byte[]; this copies to a new one\n      return baos.toByteArray();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":5,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetHeatmap.PngHelper#writeImage(BufferedImage).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SpatialHeatmapFacets.PngHelper#writeImage(BufferedImage).mjava","sourceNew":"    static byte[] writeImage(BufferedImage image) {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream(\n          // initialize to roughly 1/4th the size a native int would take per-pixel\n          image.getWidth() * image.getHeight() + 1024\n      );\n      try {\n        ImageIO.write(image, FORMAT_PNG, baos);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"While generating PNG: \" + e);\n      }\n      //too bad we can't access the raw byte[]; this copies to a new one\n      return baos.toByteArray();\n    }\n\n","sourceOld":"    static byte[] writeImage(BufferedImage image) {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream(\n          // initialize to roughly 1/4th the size a native int would take per-pixel\n          image.getWidth() * image.getHeight() + 1024\n      );\n      try {\n        ImageIO.write(image, FORMAT_PNG, baos);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"While generating PNG: \" + e);\n      }\n      //too bad we can't access the raw byte[]; this copies to a new one\n      return baos.toByteArray();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":5,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetHeatmap.PngHelper#writeImage(BufferedImage).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SpatialHeatmapFacets.PngHelper#writeImage(BufferedImage).mjava","sourceNew":"    static byte[] writeImage(BufferedImage image) {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream(\n          // initialize to roughly 1/4th the size a native int would take per-pixel\n          image.getWidth() * image.getHeight() + 1024\n      );\n      try {\n        ImageIO.write(image, FORMAT_PNG, baos);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"While generating PNG: \" + e);\n      }\n      //too bad we can't access the raw byte[]; this copies to a new one\n      return baos.toByteArray();\n    }\n\n","sourceOld":"    static byte[] writeImage(BufferedImage image) {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream(\n          // initialize to roughly 1/4th the size a native int would take per-pixel\n          image.getWidth() * image.getHeight() + 1024\n      );\n      try {\n        ImageIO.write(image, FORMAT_PNG, baos);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"While generating PNG: \" + e);\n      }\n      //too bad we can't access the raw byte[]; this copies to a new one\n      return baos.toByteArray();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ab027bdfe663227636ccbeda13ae82add302939":["59d82b0be40ecfcc2c94c776b324e0903a62b844"],"59d82b0be40ecfcc2c94c776b324e0903a62b844":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["59d82b0be40ecfcc2c94c776b324e0903a62b844","2ab027bdfe663227636ccbeda13ae82add302939"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ab027bdfe663227636ccbeda13ae82add302939"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["59d82b0be40ecfcc2c94c776b324e0903a62b844","2ab027bdfe663227636ccbeda13ae82add302939"]},"commit2Childs":{"2ab027bdfe663227636ccbeda13ae82add302939":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"59d82b0be40ecfcc2c94c776b324e0903a62b844":["2ab027bdfe663227636ccbeda13ae82add302939","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["59d82b0be40ecfcc2c94c776b324e0903a62b844"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}