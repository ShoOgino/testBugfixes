{"path":"src/test/org/apache/lucene/store/TestBufferedIndexInput#testReadByte().mjava","commits":[{"id":"e05018fda5a2dd9ffd4f4f1813bd64b20bb4c6c3","date":1162241591,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestBufferedIndexInput#testReadByte().mjava","pathOld":"/dev/null","sourceNew":"\t// Call readByte() repeatedly, past the buffer boundary, and see that it\n\t// is working as expected.\n\t// Our input comes from a dynamically generated/ \"file\" - see\n\t// MyBufferedIndexInput below.\n    public void testReadByte() throws Exception {\n    \tMyBufferedIndexInput input = new MyBufferedIndexInput(); \n    \tfor(int i=0; i<BufferedIndexInput.BUFFER_SIZE*10; i++){\n     \t\tassertEquals(input.readByte(), byten(i));\n    \t}\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["37cdff042fc21a4f3d9c437c1022deac5d3bab72"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37cdff042fc21a4f3d9c437c1022deac5d3bab72","date":1247767655,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestBufferedIndexInput#testReadByte().mjava","pathOld":"src/test/org/apache/lucene/store/TestBufferedIndexInput#testReadByte().mjava","sourceNew":"  // Call readByte() repeatedly, past the buffer boundary, and see that it\n  // is working as expected.\n  // Our input comes from a dynamically generated/ \"file\" - see\n  // MyBufferedIndexInput below.\n  public void testReadByte() throws Exception {\n    MyBufferedIndexInput input = new MyBufferedIndexInput();\n    for (int i = 0; i < BufferedIndexInput.BUFFER_SIZE * 10; i++) {\n      assertEquals(input.readByte(), byten(i));\n    }\n  }\n\n","sourceOld":"\t// Call readByte() repeatedly, past the buffer boundary, and see that it\n\t// is working as expected.\n\t// Our input comes from a dynamically generated/ \"file\" - see\n\t// MyBufferedIndexInput below.\n    public void testReadByte() throws Exception {\n    \tMyBufferedIndexInput input = new MyBufferedIndexInput(); \n    \tfor(int i=0; i<BufferedIndexInput.BUFFER_SIZE*10; i++){\n     \t\tassertEquals(input.readByte(), byten(i));\n    \t}\n    }\n\n","bugFix":["e05018fda5a2dd9ffd4f4f1813bd64b20bb4c6c3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestBufferedIndexInput#testReadByte().mjava","pathOld":"src/test/org/apache/lucene/store/TestBufferedIndexInput#testReadByte().mjava","sourceNew":"  // Call readByte() repeatedly, past the buffer boundary, and see that it\n  // is working as expected.\n  // Our input comes from a dynamically generated/ \"file\" - see\n  // MyBufferedIndexInput below.\n  public void testReadByte() throws Exception {\n    MyBufferedIndexInput input = new MyBufferedIndexInput();\n    for (int i = 0; i < BufferedIndexInput.BUFFER_SIZE * 10; i++) {\n      assertEquals(input.readByte(), byten(i));\n    }\n  }\n\n","sourceOld":"  // Call readByte() repeatedly, past the buffer boundary, and see that it\n  // is working as expected.\n  // Our input comes from a dynamically generated/ \"file\" - see\n  // MyBufferedIndexInput below.\n  public void testReadByte() throws Exception {\n    MyBufferedIndexInput input = new MyBufferedIndexInput();\n    for (int i = 0; i < BufferedIndexInput.BUFFER_SIZE * 10; i++) {\n      assertEquals(input.readByte(), byten(i));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e05018fda5a2dd9ffd4f4f1813bd64b20bb4c6c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37cdff042fc21a4f3d9c437c1022deac5d3bab72":["e05018fda5a2dd9ffd4f4f1813bd64b20bb4c6c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["37cdff042fc21a4f3d9c437c1022deac5d3bab72"]},"commit2Childs":{"e05018fda5a2dd9ffd4f4f1813bd64b20bb4c6c3":["37cdff042fc21a4f3d9c437c1022deac5d3bab72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e05018fda5a2dd9ffd4f4f1813bd64b20bb4c6c3"],"37cdff042fc21a4f3d9c437c1022deac5d3bab72":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}