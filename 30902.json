{"path":"solr/core/src/java/org/apache/solr/core/TransientSolrCoreCacheFactory#newInstance(SolrResourceLoader,CoreContainer).mjava","commits":[{"id":"9435d55e3ea95c5d94406d3affc36f9505b6a736","date":1491251232,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/TransientSolrCoreCacheFactory#newInstance(SolrResourceLoader,CoreContainer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new TransientSolrCoreCacheFactory instance\n   *\n   * @param loader a SolrResourceLoader used to find the TransientSolrCacheFactory classes\n   * @param coreContainer CoreContainer that encloses all the Solr cores.              \n   * @return a new, initialized TransientSolrCoreCache instance\n   */\n\n  public static TransientSolrCoreCacheFactory newInstance(SolrResourceLoader loader, CoreContainer coreContainer) {\n    PluginInfo info = coreContainer.getConfig().getTransientCachePluginInfo();\n    if (info == null) { // definition not in our solr.xml file, use default\n      info = DEFAULT_TRANSIENT_SOLR_CACHE_INFO;\n    }\n\n    try {\n      // According to the docs, this returns a TransientSolrCoreCacheFactory with the default c'tor\n      TransientSolrCoreCacheFactory tccf = loader.findClass(info.className, TransientSolrCoreCacheFactory.class).newInstance(); \n      \n      // OK, now we call it's init method.\n      if (PluginInfoInitialized.class.isAssignableFrom(tccf.getClass()))\n        PluginInfoInitialized.class.cast(tccf).init(info);\n      tccf.setCoreContainer(coreContainer);\n      return tccf;\n    } catch (Exception e) {\n      // Many things could cuse this, bad solrconfig, mis-typed class name, whatever. However, this should not\n      // keep the enclosing coreContainer from instantiating, so log an error and continue.\n      log.error(String.format(Locale.ROOT, \"Error instantiating TransientSolrCoreCacheFactory class [%s]: %s\",\n          info.className, e.getMessage()));\n      return null;\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6a4b585aed7660a589375f6a09b90efd29c961","date":1491296430,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/TransientSolrCoreCacheFactory#newInstance(SolrResourceLoader,CoreContainer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new TransientSolrCoreCacheFactory instance\n   *\n   * @param loader a SolrResourceLoader used to find the TransientSolrCacheFactory classes\n   * @param coreContainer CoreContainer that encloses all the Solr cores.              \n   * @return a new, initialized TransientSolrCoreCache instance\n   */\n\n  public static TransientSolrCoreCacheFactory newInstance(SolrResourceLoader loader, CoreContainer coreContainer) {\n    PluginInfo info = coreContainer.getConfig().getTransientCachePluginInfo();\n    if (info == null) { // definition not in our solr.xml file, use default\n      info = DEFAULT_TRANSIENT_SOLR_CACHE_INFO;\n    }\n\n    try {\n      // According to the docs, this returns a TransientSolrCoreCacheFactory with the default c'tor\n      TransientSolrCoreCacheFactory tccf = loader.findClass(info.className, TransientSolrCoreCacheFactory.class).newInstance(); \n      \n      // OK, now we call it's init method.\n      if (PluginInfoInitialized.class.isAssignableFrom(tccf.getClass()))\n        PluginInfoInitialized.class.cast(tccf).init(info);\n      tccf.setCoreContainer(coreContainer);\n      return tccf;\n    } catch (Exception e) {\n      // Many things could cuse this, bad solrconfig, mis-typed class name, whatever. However, this should not\n      // keep the enclosing coreContainer from instantiating, so log an error and continue.\n      log.error(String.format(Locale.ROOT, \"Error instantiating TransientSolrCoreCacheFactory class [%s]: %s\",\n          info.className, e.getMessage()));\n      return null;\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/TransientSolrCoreCacheFactory#newInstance(SolrResourceLoader,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/TransientSolrCoreCacheFactory#newInstance(SolrResourceLoader,CoreContainer).mjava","sourceNew":"  /**\n   * Create a new TransientSolrCoreCacheFactory instance\n   *\n   * @param loader a SolrResourceLoader used to find the TransientSolrCacheFactory classes\n   * @param coreContainer CoreContainer that encloses all the Solr cores.              \n   * @return a new, initialized TransientSolrCoreCache instance\n   */\n\n  public static TransientSolrCoreCacheFactory newInstance(SolrResourceLoader loader, CoreContainer coreContainer) {\n    PluginInfo info = coreContainer.getConfig().getTransientCachePluginInfo();\n    if (info == null) { // definition not in our solr.xml file, use default\n      info = DEFAULT_TRANSIENT_SOLR_CACHE_INFO;\n    }\n\n    try {\n      // According to the docs, this returns a TransientSolrCoreCacheFactory with the default c'tor\n      TransientSolrCoreCacheFactory tccf = loader.findClass(info.className, TransientSolrCoreCacheFactory.class).getConstructor().newInstance(); \n      \n      // OK, now we call it's init method.\n      if (PluginInfoInitialized.class.isAssignableFrom(tccf.getClass()))\n        PluginInfoInitialized.class.cast(tccf).init(info);\n      tccf.setCoreContainer(coreContainer);\n      return tccf;\n    } catch (Exception e) {\n      // Many things could cuse this, bad solrconfig, mis-typed class name, whatever. However, this should not\n      // keep the enclosing coreContainer from instantiating, so log an error and continue.\n      log.error(String.format(Locale.ROOT, \"Error instantiating TransientSolrCoreCacheFactory class [%s]: %s\",\n          info.className, e.getMessage()));\n      return null;\n    }\n\n  }\n\n","sourceOld":"  /**\n   * Create a new TransientSolrCoreCacheFactory instance\n   *\n   * @param loader a SolrResourceLoader used to find the TransientSolrCacheFactory classes\n   * @param coreContainer CoreContainer that encloses all the Solr cores.              \n   * @return a new, initialized TransientSolrCoreCache instance\n   */\n\n  public static TransientSolrCoreCacheFactory newInstance(SolrResourceLoader loader, CoreContainer coreContainer) {\n    PluginInfo info = coreContainer.getConfig().getTransientCachePluginInfo();\n    if (info == null) { // definition not in our solr.xml file, use default\n      info = DEFAULT_TRANSIENT_SOLR_CACHE_INFO;\n    }\n\n    try {\n      // According to the docs, this returns a TransientSolrCoreCacheFactory with the default c'tor\n      TransientSolrCoreCacheFactory tccf = loader.findClass(info.className, TransientSolrCoreCacheFactory.class).newInstance(); \n      \n      // OK, now we call it's init method.\n      if (PluginInfoInitialized.class.isAssignableFrom(tccf.getClass()))\n        PluginInfoInitialized.class.cast(tccf).init(info);\n      tccf.setCoreContainer(coreContainer);\n      return tccf;\n    } catch (Exception e) {\n      // Many things could cuse this, bad solrconfig, mis-typed class name, whatever. However, this should not\n      // keep the enclosing coreContainer from instantiating, so log an error and continue.\n      log.error(String.format(Locale.ROOT, \"Error instantiating TransientSolrCoreCacheFactory class [%s]: %s\",\n          info.className, e.getMessage()));\n      return null;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c238f5fb83803b49b37b3a1a12224a64d47542","date":1593655679,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/TransientSolrCoreCacheFactory#newInstance(SolrResourceLoader,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/TransientSolrCoreCacheFactory#newInstance(SolrResourceLoader,CoreContainer).mjava","sourceNew":"  /**\n   * Create a new TransientSolrCoreCacheFactory instance\n   *\n   * @param loader a SolrResourceLoader used to find the TransientSolrCacheFactory classes\n   * @param coreContainer CoreContainer that encloses all the Solr cores.              \n   * @return a new, initialized TransientSolrCoreCache instance\n   */\n\n  public static TransientSolrCoreCacheFactory newInstance(SolrResourceLoader loader, CoreContainer coreContainer) {\n    PluginInfo info = coreContainer.getConfig().getTransientCachePluginInfo();\n    if (info == null) { // definition not in our solr.xml file, use default\n      info = DEFAULT_TRANSIENT_SOLR_CACHE_INFO;\n    }\n\n    try {\n      // According to the docs, this returns a TransientSolrCoreCacheFactory with the default c'tor\n      TransientSolrCoreCacheFactory tccf = loader.findClass(info.className, TransientSolrCoreCacheFactory.class).getConstructor().newInstance(); \n      \n      // OK, now we call it's init method.\n      if (PluginInfoInitialized.class.isAssignableFrom(tccf.getClass()))\n        PluginInfoInitialized.class.cast(tccf).init(info);\n      tccf.setCoreContainer(coreContainer);\n      return tccf;\n    } catch (Exception e) {\n      // Many things could cause this, bad solrconfig, mis-typed class name, whatever. However, this should not\n      // keep the enclosing coreContainer from instantiating, so log an error and continue.\n      log.error(\"Error instantiating TransientSolrCoreCacheFactory class [{}]: \", info.className, e);\n      return null;\n    }\n\n  }\n\n","sourceOld":"  /**\n   * Create a new TransientSolrCoreCacheFactory instance\n   *\n   * @param loader a SolrResourceLoader used to find the TransientSolrCacheFactory classes\n   * @param coreContainer CoreContainer that encloses all the Solr cores.              \n   * @return a new, initialized TransientSolrCoreCache instance\n   */\n\n  public static TransientSolrCoreCacheFactory newInstance(SolrResourceLoader loader, CoreContainer coreContainer) {\n    PluginInfo info = coreContainer.getConfig().getTransientCachePluginInfo();\n    if (info == null) { // definition not in our solr.xml file, use default\n      info = DEFAULT_TRANSIENT_SOLR_CACHE_INFO;\n    }\n\n    try {\n      // According to the docs, this returns a TransientSolrCoreCacheFactory with the default c'tor\n      TransientSolrCoreCacheFactory tccf = loader.findClass(info.className, TransientSolrCoreCacheFactory.class).getConstructor().newInstance(); \n      \n      // OK, now we call it's init method.\n      if (PluginInfoInitialized.class.isAssignableFrom(tccf.getClass()))\n        PluginInfoInitialized.class.cast(tccf).init(info);\n      tccf.setCoreContainer(coreContainer);\n      return tccf;\n    } catch (Exception e) {\n      // Many things could cuse this, bad solrconfig, mis-typed class name, whatever. However, this should not\n      // keep the enclosing coreContainer from instantiating, so log an error and continue.\n      log.error(String.format(Locale.ROOT, \"Error instantiating TransientSolrCoreCacheFactory class [%s]: %s\",\n          info.className, e.getMessage()));\n      return null;\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9435d55e3ea95c5d94406d3affc36f9505b6a736":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["9435d55e3ea95c5d94406d3affc36f9505b6a736"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57c238f5fb83803b49b37b3a1a12224a64d47542":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"8b6a4b585aed7660a589375f6a09b90efd29c961":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57c238f5fb83803b49b37b3a1a12224a64d47542"]},"commit2Childs":{"9435d55e3ea95c5d94406d3affc36f9505b6a736":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["57c238f5fb83803b49b37b3a1a12224a64d47542"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9435d55e3ea95c5d94406d3affc36f9505b6a736","8b6a4b585aed7660a589375f6a09b90efd29c961"],"57c238f5fb83803b49b37b3a1a12224a64d47542":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8b6a4b585aed7660a589375f6a09b90efd29c961":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8b6a4b585aed7660a589375f6a09b90efd29c961","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}