{"path":"lucene/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","commits":[{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IndexDocValues#setCache(SourceCache).mjava","sourceNew":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets the {@link SourceCache} used by this {@link IndexDocValues} instance. This\n   * method should be called before {@link #load()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IndexDocValues#setCache(SourceCache).mjava","sourceNew":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets the {@link SourceCache} used by this {@link IndexDocValues} instance. This\n   * method should be called before {@link #load()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","sourceNew":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}