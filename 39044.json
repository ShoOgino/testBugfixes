{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","commits":[{"id":"1bbcda32e5cd37ef61ea1190bacd080308e22070","date":1508850553,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","pathOld":"/dev/null","sourceNew":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf, SolrCloudManager cloudManager) {\n    Policy policy = autoScalingConf.getPolicy();\n    Suggestion.SuggestionCtx suggestionCtx = new Suggestion.SuggestionCtx();\n    suggestionCtx.session = policy.createSession(cloudManager);\n    List<Violation> violations = suggestionCtx.session.getViolations();\n    for (Violation violation : violations) {\n      Suggestion.getTagType(violation.getClause().tag.name).getSuggestions(suggestionCtx.setViolation(violation));\n      suggestionCtx.violation = null;\n    }\n    return suggestionCtx.getSuggestions();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"179b14362375bb921c76d7217b6c558ced472891","date":1509441077,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","sourceNew":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf, SolrCloudManager cloudManager) {\n    Policy policy = autoScalingConf.getPolicy();\n    Suggestion.SuggestionCtx suggestionCtx = new Suggestion.SuggestionCtx();\n    suggestionCtx.session = policy.createSession(cloudManager);\n    List<Violation> violations = suggestionCtx.session.getViolations();\n    for (Violation violation : violations) {\n      Suggestion.getTagType(violation.getClause().isPerCollectiontag() ?\n          violation.getClause().tag.name:\n          violation.getClause().globalTag.name)\n          .getSuggestions(suggestionCtx.setViolation(violation));\n      suggestionCtx.violation = null;\n    }\n    return suggestionCtx.getSuggestions();\n  }\n\n","sourceOld":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf, SolrCloudManager cloudManager) {\n    Policy policy = autoScalingConf.getPolicy();\n    Suggestion.SuggestionCtx suggestionCtx = new Suggestion.SuggestionCtx();\n    suggestionCtx.session = policy.createSession(cloudManager);\n    List<Violation> violations = suggestionCtx.session.getViolations();\n    for (Violation violation : violations) {\n      Suggestion.getTagType(violation.getClause().tag.name).getSuggestions(suggestionCtx.setViolation(violation));\n      suggestionCtx.violation = null;\n    }\n    return suggestionCtx.getSuggestions();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac52b67f02dde8ba4b452266fdf8c0e15442c856","date":1510634873,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","sourceNew":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf, SolrCloudManager cloudManager) {\n    Policy policy = autoScalingConf.getPolicy();\n    Suggestion.SuggestionCtx suggestionCtx = new Suggestion.SuggestionCtx();\n    suggestionCtx.session = policy.createSession(cloudManager);\n    List<Violation> violations = suggestionCtx.session.getViolations();\n    for (Violation violation : violations) {\n      Suggestion.ConditionType tagType = Suggestion.getTagType(violation.getClause().isPerCollectiontag() ?\n          violation.getClause().tag.name :\n          violation.getClause().globalTag.name);\n      tagType.getSuggestions(suggestionCtx.setViolation(violation));\n      suggestionCtx.violation = null;\n    }\n    return suggestionCtx.getSuggestions();\n  }\n\n","sourceOld":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf, SolrCloudManager cloudManager) {\n    Policy policy = autoScalingConf.getPolicy();\n    Suggestion.SuggestionCtx suggestionCtx = new Suggestion.SuggestionCtx();\n    suggestionCtx.session = policy.createSession(cloudManager);\n    List<Violation> violations = suggestionCtx.session.getViolations();\n    for (Violation violation : violations) {\n      Suggestion.getTagType(violation.getClause().isPerCollectiontag() ?\n          violation.getClause().tag.name:\n          violation.getClause().globalTag.name)\n          .getSuggestions(suggestionCtx.setViolation(violation));\n      suggestionCtx.violation = null;\n    }\n    return suggestionCtx.getSuggestions();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"427edb17549d4bb82462a16eec4ee0533d12d5b7","date":1533006754,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","sourceNew":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf, SolrCloudManager cloudManager) {\n    Policy policy = autoScalingConf.getPolicy();\n    Suggestion.Ctx suggestionCtx = new Suggestion.Ctx();\n    suggestionCtx.session = policy.createSession(cloudManager);\n    List<Violation> violations = suggestionCtx.session.getViolations();\n    for (Violation violation : violations) {\n      String name = violation.getClause().isPerCollectiontag() ?\n          violation.getClause().tag.name :\n          violation.getClause().globalTag.name;\n      Variable.Type tagType = VariableBase.getTagType(name);\n      tagType.getSuggestions(suggestionCtx.setViolation(violation));\n      suggestionCtx.violation = null;\n    }\n    return suggestionCtx.getSuggestions();\n  }\n\n","sourceOld":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf, SolrCloudManager cloudManager) {\n    Policy policy = autoScalingConf.getPolicy();\n    Suggestion.SuggestionCtx suggestionCtx = new Suggestion.SuggestionCtx();\n    suggestionCtx.session = policy.createSession(cloudManager);\n    List<Violation> violations = suggestionCtx.session.getViolations();\n    for (Violation violation : violations) {\n      Suggestion.ConditionType tagType = Suggestion.getTagType(violation.getClause().isPerCollectiontag() ?\n          violation.getClause().tag.name :\n          violation.getClause().globalTag.name);\n      tagType.getSuggestions(suggestionCtx.setViolation(violation));\n      suggestionCtx.violation = null;\n    }\n    return suggestionCtx.getSuggestions();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6428b274f6593f368c4f838379620e7f5d196d65","date":1537799661,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","sourceNew":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf,\n                                                              SolrCloudManager cloudManager) {\n    return getSuggestions(autoScalingConf, cloudManager, 20);\n  }\n\n","sourceOld":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf, SolrCloudManager cloudManager) {\n    Policy policy = autoScalingConf.getPolicy();\n    Suggestion.Ctx suggestionCtx = new Suggestion.Ctx();\n    suggestionCtx.session = policy.createSession(cloudManager);\n    List<Violation> violations = suggestionCtx.session.getViolations();\n    for (Violation violation : violations) {\n      String name = violation.getClause().isPerCollectiontag() ?\n          violation.getClause().tag.name :\n          violation.getClause().globalTag.name;\n      Variable.Type tagType = VariableBase.getTagType(name);\n      tagType.getSuggestions(suggestionCtx.setViolation(violation));\n      suggestionCtx.violation = null;\n    }\n    return suggestionCtx.getSuggestions();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"549864a5317b87de2dd7d4a7d4f8d88eae2c7e58","date":1538573878,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","sourceNew":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf,\n                                                              SolrCloudManager cloudManager) {\n    return getSuggestions(autoScalingConf, cloudManager, 50);\n  }\n\n","sourceOld":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf,\n                                                              SolrCloudManager cloudManager) {\n    return getSuggestions(autoScalingConf, cloudManager, 20);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58e890cd5653ae8550bc6088d739f4eaaf950aff","date":1547036285,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","sourceNew":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf,\n                                                              SolrCloudManager cloudManager) {\n    return getSuggestions(autoScalingConf, cloudManager, 20, 10);\n  }\n\n","sourceOld":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf,\n                                                              SolrCloudManager cloudManager) {\n    return getSuggestions(autoScalingConf, cloudManager, 50);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc9c1463ee15ef7c0d3b9656b69b7a5ba49ac3d4","date":1558992012,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","sourceNew":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf,\n                                                              SolrCloudManager cloudManager) {\n    return getSuggestions(autoScalingConf, cloudManager, 20, 10, null);\n  }\n\n","sourceOld":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf,\n                                                              SolrCloudManager cloudManager) {\n    return getSuggestions(autoScalingConf, cloudManager, 20, 10);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper#getSuggestions(AutoScalingConfig,SolrCloudManager).mjava","sourceNew":null,"sourceOld":"  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf,\n                                                              SolrCloudManager cloudManager) {\n    return getSuggestions(autoScalingConf, cloudManager, 20, 10, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58e890cd5653ae8550bc6088d739f4eaaf950aff":["549864a5317b87de2dd7d4a7d4f8d88eae2c7e58"],"3f504512a03d978990cbff30db0522b354e846db":["fc9c1463ee15ef7c0d3b9656b69b7a5ba49ac3d4"],"549864a5317b87de2dd7d4a7d4f8d88eae2c7e58":["6428b274f6593f368c4f838379620e7f5d196d65"],"427edb17549d4bb82462a16eec4ee0533d12d5b7":["ac52b67f02dde8ba4b452266fdf8c0e15442c856"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6428b274f6593f368c4f838379620e7f5d196d65":["427edb17549d4bb82462a16eec4ee0533d12d5b7"],"ac52b67f02dde8ba4b452266fdf8c0e15442c856":["179b14362375bb921c76d7217b6c558ced472891"],"179b14362375bb921c76d7217b6c558ced472891":["1bbcda32e5cd37ef61ea1190bacd080308e22070"],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fc9c1463ee15ef7c0d3b9656b69b7a5ba49ac3d4":["58e890cd5653ae8550bc6088d739f4eaaf950aff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"58e890cd5653ae8550bc6088d739f4eaaf950aff":["fc9c1463ee15ef7c0d3b9656b69b7a5ba49ac3d4"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"549864a5317b87de2dd7d4a7d4f8d88eae2c7e58":["58e890cd5653ae8550bc6088d739f4eaaf950aff"],"427edb17549d4bb82462a16eec4ee0533d12d5b7":["6428b274f6593f368c4f838379620e7f5d196d65"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1bbcda32e5cd37ef61ea1190bacd080308e22070"],"6428b274f6593f368c4f838379620e7f5d196d65":["549864a5317b87de2dd7d4a7d4f8d88eae2c7e58"],"ac52b67f02dde8ba4b452266fdf8c0e15442c856":["427edb17549d4bb82462a16eec4ee0533d12d5b7"],"179b14362375bb921c76d7217b6c558ced472891":["ac52b67f02dde8ba4b452266fdf8c0e15442c856"],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["179b14362375bb921c76d7217b6c558ced472891"],"fc9c1463ee15ef7c0d3b9656b69b7a5ba49ac3d4":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}