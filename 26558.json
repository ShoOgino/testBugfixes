{"path":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","commits":[{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"solr/contrib/solr-morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = TEMP_DIR + \"/test-morphlines-\" + System.currentTimeMillis();\n    new File(tempDir).mkdirs();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = TEMP_DIR + \"/test-morphlines-\" + System.currentTimeMillis();\n    new File(tempDir).mkdirs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = TEMP_DIR + \"/test-morphlines-\" + System.currentTimeMillis();\n    new File(tempDir).mkdirs();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96fdd7189254bc9698a673fdf4e2b0e97e993ede","date":1387480427,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = new File(TEMP_DIR + \"/test-morphlines-\" + System.currentTimeMillis()).getAbsolutePath();\n    new File(tempDir).mkdirs();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = TEMP_DIR + \"/test-morphlines-\" + System.currentTimeMillis();\n    new File(tempDir).mkdirs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = new File(TEMP_DIR + \"/test-morphlines-\" + System.currentTimeMillis()).getAbsolutePath();\n    new File(tempDir).mkdirs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = new File(dataDir + \"/test-morphlines-\" + System.currentTimeMillis()).getAbsolutePath();\n    new File(tempDir).mkdirs();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = new File(TEMP_DIR + \"/test-morphlines-\" + System.currentTimeMillis()).getAbsolutePath();\n    new File(tempDir).mkdirs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().getAbsolutePath();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().getAbsolutePath();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = new File(dataDir + \"/test-morphlines-\" + System.currentTimeMillis()).getAbsolutePath();\n    new File(tempDir).mkdirs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().toFile().getAbsolutePath();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrClient = new HttpSolrClient(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrClient) solrClient).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrClient = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrClient());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrClientDocumentLoader(solrClient, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().toFile().getAbsolutePath();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrServer = new HttpSolrServer(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrServer)solrServer).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrServer = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrServer());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrServerDocumentLoader(solrServer, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().toFile().getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrClient = new HttpSolrClient(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrClient) solrClient).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrClient = new EmbeddedTestSolrServer(h.getCoreContainer(), DEFAULT_TEST_CORENAME);\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrClient());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrClientDocumentLoader(solrClient, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().toFile().getAbsolutePath();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrClient = new HttpSolrClient(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrClient) solrClient).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrClient = new EmbeddedTestSolrServer(h.getCoreContainer(), \"\");\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrClient());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrClientDocumentLoader(solrClient, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().toFile().getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrClient = getHttpSolrClient(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrClient) solrClient).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrClient = new EmbeddedTestSolrServer(h.getCoreContainer(), DEFAULT_TEST_CORENAME);\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrClient());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrClientDocumentLoader(solrClient, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().toFile().getAbsolutePath();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrClient = new HttpSolrClient(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrClient) solrClient).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrClient = new EmbeddedTestSolrServer(h.getCoreContainer(), DEFAULT_TEST_CORENAME);\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrClient());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrClientDocumentLoader(solrClient, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().toFile().getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrClient = getHttpSolrClient(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrClient) solrClient).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrClient = new EmbeddedTestSolrServer(h.getCoreContainer(), DEFAULT_TEST_CORENAME);\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrClient());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrClientDocumentLoader(solrClient, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().toFile().getAbsolutePath();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrClient = new HttpSolrClient(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrClient) solrClient).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrClient = new EmbeddedTestSolrServer(h.getCoreContainer(), DEFAULT_TEST_CORENAME);\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrClient());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrClientDocumentLoader(solrClient, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().toFile().getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12109b652e9210b8d58fca47f6c4a725d058a58e","date":1490373076,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":null,"sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrClient = getHttpSolrClient(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrClient) solrClient).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrClient = new EmbeddedTestSolrServer(h.getCoreContainer(), DEFAULT_TEST_CORENAME);\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrClient());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrClientDocumentLoader(solrClient, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().toFile().getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe1c4aa9af769a38e878f608070f672efbeac27f","date":1490594650,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/morphlines-core/src/test/org/apache/solr/morphlines/solr/AbstractSolrMorphlineTestBase#setUp().mjava","sourceNew":null,"sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    collector = new Collector();\n    \n    if (EXTERNAL_SOLR_SERVER_URL != null) {\n      //solrServer = new ConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      //solrServer = new SafeConcurrentUpdateSolrServer(EXTERNAL_SOLR_SERVER_URL, 2, 2);\n      solrClient = getHttpSolrClient(EXTERNAL_SOLR_SERVER_URL);\n      ((HttpSolrClient) solrClient).setParser(new XMLResponseParser());\n    } else {\n      if (TEST_WITH_EMBEDDED_SOLR_SERVER) {\n        solrClient = new EmbeddedTestSolrServer(h.getCoreContainer(), DEFAULT_TEST_CORENAME);\n      } else {\n        throw new RuntimeException(\"Not yet implemented\");\n        //solrServer = new TestSolrServer(getSolrClient());\n      }\n    }\n\n    int batchSize = SEQ_NUM2.incrementAndGet() % 2 == 0 ? 100 : 1; //SolrInspector.DEFAULT_SOLR_SERVER_BATCH_SIZE : 1;\n    testServer = new SolrClientDocumentLoader(solrClient, batchSize);\n    deleteAllDocuments();\n    \n    tempDir = createTempDir().toFile().getAbsolutePath();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12109b652e9210b8d58fca47f6c4a725d058a58e":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["96fdd7189254bc9698a673fdf4e2b0e97e993ede"],"fe1c4aa9af769a38e878f608070f672efbeac27f":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["96fdd7189254bc9698a673fdf4e2b0e97e993ede"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"96fdd7189254bc9698a673fdf4e2b0e97e993ede":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12109b652e9210b8d58fca47f6c4a725d058a58e"]},"commit2Childs":{"12109b652e9210b8d58fca47f6c4a725d058a58e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"bafca15d8e408346a67f4282ad1143b88023893b":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"f4abec28b874149a7223e32cc7a01704c27790de":["bafca15d8e408346a67f4282ad1143b88023893b"],"fe1c4aa9af769a38e878f608070f672efbeac27f":[],"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","96fdd7189254bc9698a673fdf4e2b0e97e993ede"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70f91c8322fbffe3a3a897ef20ea19119cac10cd","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["12109b652e9210b8d58fca47f6c4a725d058a58e","fe1c4aa9af769a38e878f608070f672efbeac27f"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"96fdd7189254bc9698a673fdf4e2b0e97e993ede":["d0d579490a72f2e6297eaa648940611234c57cf1","1416f9d09d016a6894cd17e1caac137dad2bba59"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe1c4aa9af769a38e878f608070f672efbeac27f","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}