{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","commits":[{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"/dev/null","sourceNew":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = writer.getConfig().getSimilarityProvider();\n    this.bufferedDeletesStream = bufferedDeletesStream;\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    this.config = config;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7d45e9e2ad7f57776540627c78f5e22e469ccdc1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d2ed1b9b7b46829fe3199afe9a8bc203f201b175","date":1301491807,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","sourceNew":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.bufferedDeletesStream = bufferedDeletesStream;\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    \n    healthiness = new Healthiness();\n    final long maxRamPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    flushControl = new DocumentsWriterFlushControl(flushPolicy, perThreadPool, healthiness, pendingDeletes, maxRamPerDWPT);\n  }\n\n","sourceOld":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = writer.getConfig().getSimilarityProvider();\n    this.bufferedDeletesStream = bufferedDeletesStream;\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    this.config = config;\n  }\n\n","bugFix":null,"bugIntro":["32f306edd62f81390a6e263e8b913f089f3e98a1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"327863a2fd61e831028b6c56c8fef6b00a44eb0b","date":1302686439,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","sourceNew":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.bufferedDeletesStream = bufferedDeletesStream;\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    \n    healthiness = new Healthiness();\n    final long maxRamPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    flushControl = new DocumentsWriterFlushControl(this, healthiness, maxRamPerDWPT);\n  }\n\n","sourceOld":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.bufferedDeletesStream = bufferedDeletesStream;\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    \n    healthiness = new Healthiness();\n    final long maxRamPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    flushControl = new DocumentsWriterFlushControl(flushPolicy, perThreadPool, healthiness, pendingDeletes, maxRamPerDWPT);\n  }\n\n","bugFix":null,"bugIntro":["32f306edd62f81390a6e263e8b913f089f3e98a1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7d45e9e2ad7f57776540627c78f5e22e469ccdc1","date":1302784878,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","sourceNew":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    \n    healthiness = new Healthiness();\n    final long maxRamPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    flushControl = new DocumentsWriterFlushControl(this, healthiness, maxRamPerDWPT);\n  }\n\n","sourceOld":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.bufferedDeletesStream = bufferedDeletesStream;\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    \n    healthiness = new Healthiness();\n    final long maxRamPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    flushControl = new DocumentsWriterFlushControl(this, healthiness, maxRamPerDWPT);\n  }\n\n","bugFix":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"/dev/null","sourceNew":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    \n    healthiness = new Healthiness();\n    final long maxRamPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    flushControl = new DocumentsWriterFlushControl(this, healthiness, maxRamPerDWPT);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"/dev/null","sourceNew":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    \n    healthiness = new Healthiness();\n    final long maxRamPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    flushControl = new DocumentsWriterFlushControl(this, healthiness, maxRamPerDWPT);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"32f306edd62f81390a6e263e8b913f089f3e98a1","date":1305615519,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","sourceNew":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    flushControl = new DocumentsWriterFlushControl(this, config );\n  }\n\n","sourceOld":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    \n    healthiness = new Healthiness();\n    final long maxRamPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    flushControl = new DocumentsWriterFlushControl(this, healthiness, maxRamPerDWPT);\n  }\n\n","bugFix":["327863a2fd61e831028b6c56c8fef6b00a44eb0b","d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"bugIntro":["b7465988fd0a9c673dcb88f51473300c41d630f0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","sourceNew":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    flushControl = new DocumentsWriterFlushControl(this, config );\n  }\n\n","sourceOld":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    \n    healthiness = new Healthiness();\n    final long maxRamPerDWPT = config.getRAMPerThreadHardLimitMB() * 1024 * 1024;\n    flushControl = new DocumentsWriterFlushControl(this, healthiness, maxRamPerDWPT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"/dev/null","sourceNew":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    flushControl = new DocumentsWriterFlushControl(this, config );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7465988fd0a9c673dcb88f51473300c41d630f0","date":1311685662,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","sourceNew":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    flushControl = new DocumentsWriterFlushControl(this, config);\n  }\n\n","sourceOld":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    flushControl = new DocumentsWriterFlushControl(this, config );\n  }\n\n","bugFix":["32f306edd62f81390a6e263e8b913f089f3e98a1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6d61bb4c680a738a817636a2a4e2a16c8375a4c","date":1311702666,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","sourceNew":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    flushPolicy = config.getFlushPolicy();\n    assert flushPolicy != null;\n    flushPolicy.init(this);\n    flushControl = new DocumentsWriterFlushControl(this, config);\n  }\n\n","sourceOld":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    final FlushPolicy configuredPolicy = config.getFlushPolicy();\n    if (configuredPolicy == null) {\n      flushPolicy = new FlushByRamOrCountsPolicy();\n    } else {\n      flushPolicy = configuredPolicy;\n    }\n    flushPolicy.init(this);\n    flushControl = new DocumentsWriterFlushControl(this, config);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(Codec,IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriterConfig,Directory,IndexWriter,FieldNumberBiMap,BufferedDeletesStream).mjava","sourceNew":"  DocumentsWriter(Codec codec, IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.codec = codec;\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    flushPolicy = config.getFlushPolicy();\n    assert flushPolicy != null;\n    flushPolicy.init(this);\n    flushControl = new DocumentsWriterFlushControl(this, config);\n  }\n\n","sourceOld":"  DocumentsWriter(IndexWriterConfig config, Directory directory, IndexWriter writer, FieldNumberBiMap globalFieldNumbers,\n      BufferedDeletesStream bufferedDeletesStream) throws IOException {\n    this.directory = directory;\n    this.indexWriter = writer;\n    this.similarityProvider = config.getSimilarityProvider();\n    this.perThreadPool = config.getIndexerThreadPool();\n    this.chain = config.getIndexingChain();\n    this.perThreadPool.initialize(this, globalFieldNumbers, config);\n    flushPolicy = config.getFlushPolicy();\n    assert flushPolicy != null;\n    flushPolicy.init(this);\n    flushControl = new DocumentsWriterFlushControl(this, config);\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7d45e9e2ad7f57776540627c78f5e22e469ccdc1"],"327863a2fd61e831028b6c56c8fef6b00a44eb0b":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"7b91922b55d15444d554721b352861d028eb8278":["c6d61bb4c680a738a817636a2a4e2a16c8375a4c"],"7d45e9e2ad7f57776540627c78f5e22e469ccdc1":["327863a2fd61e831028b6c56c8fef6b00a44eb0b"],"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["135621f3a0670a9394eb563224a3b76cc4dddc0f","32f306edd62f81390a6e263e8b913f089f3e98a1"],"c6d61bb4c680a738a817636a2a4e2a16c8375a4c":["b7465988fd0a9c673dcb88f51473300c41d630f0"],"b7465988fd0a9c673dcb88f51473300c41d630f0":["32f306edd62f81390a6e263e8b913f089f3e98a1"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32f306edd62f81390a6e263e8b913f089f3e98a1"],"32f306edd62f81390a6e263e8b913f089f3e98a1":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"135621f3a0670a9394eb563224a3b76cc4dddc0f":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["135621f3a0670a9394eb563224a3b76cc4dddc0f","32f306edd62f81390a6e263e8b913f089f3e98a1"],"327863a2fd61e831028b6c56c8fef6b00a44eb0b":["7d45e9e2ad7f57776540627c78f5e22e469ccdc1"],"7d45e9e2ad7f57776540627c78f5e22e469ccdc1":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["327863a2fd61e831028b6c56c8fef6b00a44eb0b"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"c6d61bb4c680a738a817636a2a4e2a16c8375a4c":["7b91922b55d15444d554721b352861d028eb8278"],"b7465988fd0a9c673dcb88f51473300c41d630f0":["c6d61bb4c680a738a817636a2a4e2a16c8375a4c"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","a3776dccca01c11e7046323cfad46a3b4a471233"],"32f306edd62f81390a6e263e8b913f089f3e98a1":["c3a8a449466c1ff7ce2274fe73dab487256964b4","b7465988fd0a9c673dcb88f51473300c41d630f0","a3776dccca01c11e7046323cfad46a3b4a471233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}