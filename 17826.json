{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue.FlushTicket#finishFlush(IndexWriter,FlushedSegment,FrozenBufferedUpdates).mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue.FlushTicket#finishFlush(IndexWriter,FlushedSegment,FrozenBufferedUpdates).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue.FlushTicket#finishFlush(IndexWriter,FlushedSegment,FrozenBufferedDeletes).mjava","sourceNew":"    protected final void finishFlush(IndexWriter indexWriter, FlushedSegment newSegment, FrozenBufferedUpdates bufferedUpdates)\n            throws IOException {\n        // Finish the flushed segment and publish it to IndexWriter\n        if (newSegment == null) {\n          assert bufferedUpdates != null;\n          if (bufferedUpdates != null && bufferedUpdates.any()) {\n            indexWriter.publishFrozenUpdates(bufferedUpdates);\n            if (indexWriter.infoStream.isEnabled(\"DW\")) {\n                indexWriter.infoStream.message(\"DW\", \"flush: push buffered updates: \" + bufferedUpdates);\n            }\n          }\n        } else {\n            publishFlushedSegment(indexWriter, newSegment, bufferedUpdates);  \n        }\n      }\n\n","sourceOld":"    protected final void finishFlush(IndexWriter indexWriter, FlushedSegment newSegment, FrozenBufferedDeletes bufferedDeletes)\n            throws IOException {\n        // Finish the flushed segment and publish it to IndexWriter\n        if (newSegment == null) {\n          assert bufferedDeletes != null;\n          if (bufferedDeletes != null && bufferedDeletes.any()) {\n            indexWriter.publishFrozenDeletes(bufferedDeletes);\n            if (indexWriter.infoStream.isEnabled(\"DW\")) {\n                indexWriter.infoStream.message(\"DW\", \"flush: push buffered deletes: \" + bufferedDeletes);\n            }\n          }\n        } else {\n            publishFlushedSegment(indexWriter, newSegment, bufferedDeletes);  \n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue.FlushTicket#finishFlush(IndexWriter,FlushedSegment,FrozenBufferedUpdates).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue.FlushTicket#finishFlush(IndexWriter,FlushedSegment,FrozenBufferedUpdates).mjava","sourceNew":"    protected final void finishFlush(IndexWriter indexWriter, FlushedSegment newSegment, FrozenBufferedUpdates bufferedUpdates)\n            throws IOException {\n      // Finish the flushed segment and publish it to IndexWriter\n      if (newSegment == null) {\n        if (bufferedUpdates != null && bufferedUpdates.any()) {\n          indexWriter.publishFrozenUpdates(bufferedUpdates);\n          if (indexWriter.infoStream.isEnabled(\"DW\")) {\n            indexWriter.infoStream.message(\"DW\", \"flush: push buffered updates: \" + bufferedUpdates);\n          }\n        }\n      } else {\n        publishFlushedSegment(indexWriter, newSegment, bufferedUpdates);  \n      }\n    }\n\n","sourceOld":"    protected final void finishFlush(IndexWriter indexWriter, FlushedSegment newSegment, FrozenBufferedUpdates bufferedUpdates)\n            throws IOException {\n        // Finish the flushed segment and publish it to IndexWriter\n        if (newSegment == null) {\n          assert bufferedUpdates != null;\n          if (bufferedUpdates != null && bufferedUpdates.any()) {\n            indexWriter.publishFrozenUpdates(bufferedUpdates);\n            if (indexWriter.infoStream.isEnabled(\"DW\")) {\n                indexWriter.infoStream.message(\"DW\", \"flush: push buffered updates: \" + bufferedUpdates);\n            }\n          }\n        } else {\n            publishFlushedSegment(indexWriter, newSegment, bufferedUpdates);  \n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue.FlushTicket#finishFlush(IndexWriter,FlushedSegment,FrozenBufferedUpdates).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue.FlushTicket#finishFlush(IndexWriter,FlushedSegment,FrozenBufferedUpdates).mjava","sourceNew":"    protected final void finishFlush(IndexWriter indexWriter, FlushedSegment newSegment, FrozenBufferedUpdates bufferedUpdates)\n            throws IOException {\n      // Finish the flushed segment and publish it to IndexWriter\n      if (newSegment == null) {\n        if (bufferedUpdates != null && bufferedUpdates.any()) {\n          indexWriter.publishFrozenUpdates(bufferedUpdates);\n          if (indexWriter.infoStream.isEnabled(\"DW\")) {\n            indexWriter.infoStream.message(\"DW\", \"flush: push buffered updates: \" + bufferedUpdates);\n          }\n        }\n      } else {\n        publishFlushedSegment(indexWriter, newSegment, bufferedUpdates);  \n      }\n    }\n\n","sourceOld":"    protected final void finishFlush(IndexWriter indexWriter, FlushedSegment newSegment, FrozenBufferedUpdates bufferedUpdates)\n            throws IOException {\n        // Finish the flushed segment and publish it to IndexWriter\n        if (newSegment == null) {\n          assert bufferedUpdates != null;\n          if (bufferedUpdates != null && bufferedUpdates.any()) {\n            indexWriter.publishFrozenUpdates(bufferedUpdates);\n            if (indexWriter.infoStream.isEnabled(\"DW\")) {\n                indexWriter.infoStream.message(\"DW\", \"flush: push buffered updates: \" + bufferedUpdates);\n            }\n          }\n        } else {\n            publishFlushedSegment(indexWriter, newSegment, bufferedUpdates);  \n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue.FlushTicket#finishFlush(IndexWriter,FlushedSegment,FrozenBufferedUpdates).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue.FlushTicket#finishFlush(IndexWriter,FlushedSegment,FrozenBufferedUpdates).mjava","sourceNew":"    protected final void finishFlush(IndexWriter indexWriter, FlushedSegment newSegment, FrozenBufferedUpdates bufferedUpdates)\n            throws IOException {\n      // Finish the flushed segment and publish it to IndexWriter\n      if (newSegment == null) {\n        if (bufferedUpdates != null && bufferedUpdates.any()) {\n          indexWriter.publishFrozenUpdates(bufferedUpdates);\n          if (indexWriter.infoStream.isEnabled(\"DW\")) {\n            indexWriter.infoStream.message(\"DW\", \"flush: push buffered updates: \" + bufferedUpdates);\n          }\n        }\n      } else {\n        publishFlushedSegment(indexWriter, newSegment, bufferedUpdates);  \n      }\n    }\n\n","sourceOld":"    protected final void finishFlush(IndexWriter indexWriter, FlushedSegment newSegment, FrozenBufferedUpdates bufferedUpdates)\n            throws IOException {\n        // Finish the flushed segment and publish it to IndexWriter\n        if (newSegment == null) {\n          assert bufferedUpdates != null;\n          if (bufferedUpdates != null && bufferedUpdates.any()) {\n            indexWriter.publishFrozenUpdates(bufferedUpdates);\n            if (indexWriter.infoStream.isEnabled(\"DW\")) {\n                indexWriter.infoStream.message(\"DW\", \"flush: push buffered updates: \" + bufferedUpdates);\n            }\n          }\n        } else {\n            publishFlushedSegment(indexWriter, newSegment, bufferedUpdates);  \n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b8498afacfc8322268ca0d659d274fcce08d557","date":1524577248,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushQueue.FlushTicket#finishFlush(IndexWriter,FlushedSegment,FrozenBufferedUpdates).mjava","sourceNew":null,"sourceOld":"    protected final void finishFlush(IndexWriter indexWriter, FlushedSegment newSegment, FrozenBufferedUpdates bufferedUpdates)\n            throws IOException {\n      // Finish the flushed segment and publish it to IndexWriter\n      if (newSegment == null) {\n        if (bufferedUpdates != null && bufferedUpdates.any()) {\n          indexWriter.publishFrozenUpdates(bufferedUpdates);\n          if (indexWriter.infoStream.isEnabled(\"DW\")) {\n            indexWriter.infoStream.message(\"DW\", \"flush: push buffered updates: \" + bufferedUpdates);\n          }\n        }\n      } else {\n        publishFlushedSegment(indexWriter, newSegment, bufferedUpdates);  \n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6b8498afacfc8322268ca0d659d274fcce08d557":["28288370235ed02234a64753cdbf0c6ec096304a"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6b8498afacfc8322268ca0d659d274fcce08d557"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"6b8498afacfc8322268ca0d659d274fcce08d557":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["6b8498afacfc8322268ca0d659d274fcce08d557"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}