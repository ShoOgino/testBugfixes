{"path":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","pathOld":"solr/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","sourceNew":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","sourceOld":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","pathOld":"solr/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","sourceNew":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","sourceOld":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","pathOld":"solr/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","sourceNew":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","sourceOld":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41","date":1334628185,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","sourceNew":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl, SolrCache.class);\n    if (config.regenImpl != null) {\n      config.regenerator = loader.newInstance(config.regenImpl, CacheRegenerator.class);\n    }\n    \n    return config;\n  }\n\n","sourceOld":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,String,Map[String,String],String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","sourceNew":"  public static CacheConfig getConfig(SolrConfig solrConfig, String nodeName, Map<String,String> attrs, String xpath) {\n    CacheConfig config = new CacheConfig();\n    config.nodeName = nodeName;\n    config.args = attrs;\n\n    Map<String, String> map = solrConfig.getOverlay().getEditableSubProperties(xpath);\n    if(map != null){\n      HashMap<String, String> mapCopy = new HashMap<>(config.args);\n      for (Map.Entry<String, String> e : map.entrySet()) {\n        mapCopy.put(e.getKey(),String.valueOf(e.getValue()));\n      }\n      config.args = mapCopy;\n    }\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    if(config.cacheImpl == null) config.cacheImpl = \"solr.LRUCache\";\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl, SolrCache.class);\n    if (config.regenImpl != null) {\n      config.regenerator = loader.newInstance(config.regenImpl, CacheRegenerator.class);\n    }\n    \n    return config;\n  }\n\n","sourceOld":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl, SolrCache.class);\n    if (config.regenImpl != null) {\n      config.regenerator = loader.newInstance(config.regenImpl, CacheRegenerator.class);\n    }\n    \n    return config;\n  }\n\n","bugFix":null,"bugIntro":["15f9a498a407241cefcbd00ca7fc84d5e7fa573e"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"531fe719c7218235a679452eb3d137bfd8fc6af1":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["531fe719c7218235a679452eb3d137bfd8fc6af1"]},"commit2Childs":{"531fe719c7218235a679452eb3d137bfd8fc6af1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}