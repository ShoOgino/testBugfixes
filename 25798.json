{"path":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.SolrDocumentStoredFieldVisitor#needsField(FieldInfo).mjava","commits":[{"id":"12f7f335611574989edc8f87d25d91e89aa385b6","date":1489690739,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.SolrDocumentStoredFieldVisitor#needsField(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Status needsField(FieldInfo fieldInfo) throws IOException {\n      Status status = super.needsField(fieldInfo);\n      assert status != Status.STOP : \"Status.STOP not supported or expected\";\n      if (addLargeFieldsLazily && largeFields.contains(fieldInfo.name)) { // load \"large\" fields using this lazy mechanism\n        if (lazyFieldProducer != null || status == Status.YES) {\n          doc.add(new LargeLazyField(fieldInfo.name, docId));\n        }\n        return Status.NO;\n      }\n      if (status == Status.NO && lazyFieldProducer != null) { // lazy\n        doc.add(lazyFieldProducer.getField(fieldInfo));\n      }\n      return status;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b4eb0a25318cc756077fbde9bd3052690aed03d","date":1490280009,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.SolrDocumentStoredFieldVisitor#needsField(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Status needsField(FieldInfo fieldInfo) throws IOException {\n      Status status = super.needsField(fieldInfo);\n      assert status != Status.STOP : \"Status.STOP not supported or expected\";\n      if (addLargeFieldsLazily && largeFields.contains(fieldInfo.name)) { // load \"large\" fields using this lazy mechanism\n        if (lazyFieldProducer != null || status == Status.YES) {\n          doc.add(new LargeLazyField(fieldInfo.name, docId));\n        }\n        return Status.NO;\n      }\n      if (status == Status.NO && lazyFieldProducer != null) { // lazy\n        doc.add(lazyFieldProducer.getField(fieldInfo));\n      }\n      return status;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63a9344cff6a72bc4c1ef080c69e10ad0635b811","date":1490410892,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher.SolrDocumentStoredFieldVisitor#needsField(FieldInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.SolrDocumentStoredFieldVisitor#needsField(FieldInfo).mjava","sourceNew":"    @Override\n    public Status needsField(FieldInfo fieldInfo) throws IOException {\n      Status status = super.needsField(fieldInfo);\n      assert status != Status.STOP : \"Status.STOP not supported or expected\";\n      if (addLargeFieldsLazily && largeFields.contains(fieldInfo.name)) { // load \"large\" fields using this lazy mechanism\n        if (lazyFieldProducer != null || status == Status.YES) {\n          doc.add(new LargeLazyField(fieldInfo.name, docId));\n        }\n        return Status.NO;\n      }\n      if (status == Status.NO && lazyFieldProducer != null) { // lazy\n        doc.add(lazyFieldProducer.getField(fieldInfo));\n      }\n      return status;\n    }\n\n","sourceOld":"    @Override\n    public Status needsField(FieldInfo fieldInfo) throws IOException {\n      Status status = super.needsField(fieldInfo);\n      assert status != Status.STOP : \"Status.STOP not supported or expected\";\n      if (addLargeFieldsLazily && largeFields.contains(fieldInfo.name)) { // load \"large\" fields using this lazy mechanism\n        if (lazyFieldProducer != null || status == Status.YES) {\n          doc.add(new LargeLazyField(fieldInfo.name, docId));\n        }\n        return Status.NO;\n      }\n      if (status == Status.NO && lazyFieldProducer != null) { // lazy\n        doc.add(lazyFieldProducer.getField(fieldInfo));\n      }\n      return status;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de548de3ce5405595899f548152d4b93ac9eb9cc","date":1490594650,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrDocumentFetcher.SolrDocumentStoredFieldVisitor#needsField(FieldInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.SolrDocumentStoredFieldVisitor#needsField(FieldInfo).mjava","sourceNew":"    @Override\n    public Status needsField(FieldInfo fieldInfo) throws IOException {\n      Status status = super.needsField(fieldInfo);\n      assert status != Status.STOP : \"Status.STOP not supported or expected\";\n      if (addLargeFieldsLazily && largeFields.contains(fieldInfo.name)) { // load \"large\" fields using this lazy mechanism\n        if (lazyFieldProducer != null || status == Status.YES) {\n          doc.add(new LargeLazyField(fieldInfo.name, docId));\n        }\n        return Status.NO;\n      }\n      if (status == Status.NO && lazyFieldProducer != null) { // lazy\n        doc.add(lazyFieldProducer.getField(fieldInfo));\n      }\n      return status;\n    }\n\n","sourceOld":"    @Override\n    public Status needsField(FieldInfo fieldInfo) throws IOException {\n      Status status = super.needsField(fieldInfo);\n      assert status != Status.STOP : \"Status.STOP not supported or expected\";\n      if (addLargeFieldsLazily && largeFields.contains(fieldInfo.name)) { // load \"large\" fields using this lazy mechanism\n        if (lazyFieldProducer != null || status == Status.YES) {\n          doc.add(new LargeLazyField(fieldInfo.name, docId));\n        }\n        return Status.NO;\n      }\n      if (status == Status.NO && lazyFieldProducer != null) { // lazy\n        doc.add(lazyFieldProducer.getField(fieldInfo));\n      }\n      return status;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de548de3ce5405595899f548152d4b93ac9eb9cc":["7b4eb0a25318cc756077fbde9bd3052690aed03d"],"63a9344cff6a72bc4c1ef080c69e10ad0635b811":["12f7f335611574989edc8f87d25d91e89aa385b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b4eb0a25318cc756077fbde9bd3052690aed03d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"12f7f335611574989edc8f87d25d91e89aa385b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["63a9344cff6a72bc4c1ef080c69e10ad0635b811"]},"commit2Childs":{"de548de3ce5405595899f548152d4b93ac9eb9cc":[],"63a9344cff6a72bc4c1ef080c69e10ad0635b811":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7b4eb0a25318cc756077fbde9bd3052690aed03d":["de548de3ce5405595899f548152d4b93ac9eb9cc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b4eb0a25318cc756077fbde9bd3052690aed03d","12f7f335611574989edc8f87d25d91e89aa385b6"],"12f7f335611574989edc8f87d25d91e89aa385b6":["63a9344cff6a72bc4c1ef080c69e10ad0635b811"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["de548de3ce5405595899f548152d4b93ac9eb9cc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}