{"path":"lucene/src/java/org/apache/lucene/index/SegmentReader.CoreReaders#openIndexValuesReaders(Directory,SegmentInfo).mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader.CoreReaders#openIndexValuesReaders(Directory,SegmentInfo).mjava","pathOld":"/dev/null","sourceNew":"    // Only opens files... doesn't actually load any values\n    private void openIndexValuesReaders(Directory dir, SegmentInfo si) throws IOException {\n      final int numFields = fieldInfos.size();\n      for(int i=0;i<numFields;i++) {\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(i);\n        final Values v = fieldInfo.getIndexValues();\n        final String field = fieldInfo.name;\n        final String id = IndexFileNames.segmentFileName(segment, Integer\n            .toString(fieldInfo.number), \"\");\n        // nocommit - externalize the filenames \n        if (v != null && dir.fileExists(id+\".dat\")) {\n          switch(v) {\n          case PACKED_INTS:\n            indexValues.put(field, Ints.getReader(dir, id, false));\n            break;\n          case PACKED_INTS_FIXED:\n            indexValues.put(field, Ints.getReader(dir, id, true));\n            break;\n          case SIMPLE_FLOAT_4BYTE:\n            indexValues.put(field, Floats.getReader(dir, id, si.docCount));\n            break;\n          case SIMPLE_FLOAT_8BYTE:\n            indexValues.put(field, Floats.getReader(dir, id, si.docCount));\n            break;\n          case BYTES_FIXED_STRAIGHT:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.STRAIGHT, true, si.docCount));\n            break;\n          case BYTES_FIXED_DEREF:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.DEREF, true, si.docCount));\n            break;\n          case BYTES_FIXED_SORTED:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.SORTED, true, si.docCount));\n            break;\n          case BYTES_VAR_STRAIGHT:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.STRAIGHT, false, si.docCount));\n            break;\n          case BYTES_VAR_DEREF:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.DEREF, false, si.docCount));\n            break;\n          case BYTES_VAR_SORTED:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.SORTED, false, si.docCount));\n            break;\n          default:\n            throw new IllegalStateException(\"unrecognized index values mode \" + v);\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e28c49f1fb6215a550fdadcf3805aa629b63ec0","date":1288081775,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader.CoreReaders#openIndexValuesReaders(Directory,SegmentInfo).mjava","sourceNew":null,"sourceOld":"    // Only opens files... doesn't actually load any values\n    private void openIndexValuesReaders(Directory dir, SegmentInfo si) throws IOException {\n      final int numFields = fieldInfos.size();\n      for(int i=0;i<numFields;i++) {\n        final FieldInfo fieldInfo = fieldInfos.fieldInfo(i);\n        final Values v = fieldInfo.getIndexValues();\n        final String field = fieldInfo.name;\n        final String id = IndexFileNames.segmentFileName(segment, Integer\n            .toString(fieldInfo.number), \"\");\n        // nocommit - externalize the filenames \n        if (v != null && dir.fileExists(id+\".dat\")) {\n          switch(v) {\n          case PACKED_INTS:\n            indexValues.put(field, Ints.getReader(dir, id, false));\n            break;\n          case PACKED_INTS_FIXED:\n            indexValues.put(field, Ints.getReader(dir, id, true));\n            break;\n          case SIMPLE_FLOAT_4BYTE:\n            indexValues.put(field, Floats.getReader(dir, id, si.docCount));\n            break;\n          case SIMPLE_FLOAT_8BYTE:\n            indexValues.put(field, Floats.getReader(dir, id, si.docCount));\n            break;\n          case BYTES_FIXED_STRAIGHT:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.STRAIGHT, true, si.docCount));\n            break;\n          case BYTES_FIXED_DEREF:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.DEREF, true, si.docCount));\n            break;\n          case BYTES_FIXED_SORTED:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.SORTED, true, si.docCount));\n            break;\n          case BYTES_VAR_STRAIGHT:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.STRAIGHT, false, si.docCount));\n            break;\n          case BYTES_VAR_DEREF:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.DEREF, false, si.docCount));\n            break;\n          case BYTES_VAR_SORTED:\n            indexValues.put(field, Bytes.getReader(dir, id, Bytes.Mode.SORTED, false, si.docCount));\n            break;\n          default:\n            throw new IllegalStateException(\"unrecognized index values mode \" + v);\n          }\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["01f60198ece724a6e96cd0b45f289cf42ff83d4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":[],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}