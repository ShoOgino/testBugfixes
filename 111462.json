{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#doReload(String).mjava","commits":[{"id":"044244fb346dc6965d217fce709880d0e3bc2e9f","date":1343347260,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#doReload(String).mjava","pathOld":"/dev/null","sourceNew":"  private void doReload(String name) throws ParserConfigurationException, IOException, SAXException {\n    name= checkDefault(name);\n    SolrCore core;\n    synchronized(cores) {\n      core = cores.get(name);\n    }\n    if (core == null)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"No such core: \" + name );\n\n    CoreDescriptor cd = core.getCoreDescriptor();\n  \n    File instanceDir = new File(cd.getInstanceDir());\n    if (!instanceDir.isAbsolute()) {\n      instanceDir = new File(getSolrHome(), cd.getInstanceDir());\n    }\n\n    log.info(\"Reloading SolrCore '{}' using instanceDir: {}\", \n             cd.getName(), instanceDir.getAbsolutePath());\n    \n    SolrResourceLoader solrLoader;\n    if(zkController == null) {\n      solrLoader = new SolrResourceLoader(instanceDir.getAbsolutePath(), libLoader, getCoreProps(instanceDir.getAbsolutePath(), cd.getPropertiesName(),cd.getCoreProperties()));\n    } else {\n      try {\n        String collection = cd.getCloudDescriptor().getCollectionName();\n        zkController.createCollectionZkNode(cd.getCloudDescriptor());\n\n        String zkConfigName = zkController.readConfigName(collection);\n        if (zkConfigName == null) {\n          log.error(\"Could not find config name for collection:\" + collection);\n          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Could not find config name for collection:\" + collection);\n        }\n        solrLoader = new ZkSolrResourceLoader(instanceDir.getAbsolutePath(), zkConfigName, libLoader, getCoreProps(instanceDir.getAbsolutePath(), cd.getPropertiesName(),cd.getCoreProperties()), zkController);\n      } catch (KeeperException e) {\n        log.error(\"\", e);\n        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n            \"\", e);\n      } catch (InterruptedException e) {\n        // Restore the interrupted status\n        Thread.currentThread().interrupt();\n        log.error(\"\", e);\n        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n            \"\", e);\n      }\n    }\n    \n    SolrCore newCore = core.reload(solrLoader, core);\n    // keep core to orig name link\n    String origName = coreToOrigName.remove(core);\n    if (origName != null) {\n      coreToOrigName.put(newCore, origName);\n    }\n    register(name, newCore, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cee0d276a5aee45373d831d0328b4544eec95754","date":1343349574,"type":4,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#doReload(String).mjava","sourceNew":null,"sourceOld":"  private void doReload(String name) throws ParserConfigurationException, IOException, SAXException {\n    name= checkDefault(name);\n    SolrCore core;\n    synchronized(cores) {\n      core = cores.get(name);\n    }\n    if (core == null)\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"No such core: \" + name );\n\n    CoreDescriptor cd = core.getCoreDescriptor();\n  \n    File instanceDir = new File(cd.getInstanceDir());\n    if (!instanceDir.isAbsolute()) {\n      instanceDir = new File(getSolrHome(), cd.getInstanceDir());\n    }\n\n    log.info(\"Reloading SolrCore '{}' using instanceDir: {}\", \n             cd.getName(), instanceDir.getAbsolutePath());\n    \n    SolrResourceLoader solrLoader;\n    if(zkController == null) {\n      solrLoader = new SolrResourceLoader(instanceDir.getAbsolutePath(), libLoader, getCoreProps(instanceDir.getAbsolutePath(), cd.getPropertiesName(),cd.getCoreProperties()));\n    } else {\n      try {\n        String collection = cd.getCloudDescriptor().getCollectionName();\n        zkController.createCollectionZkNode(cd.getCloudDescriptor());\n\n        String zkConfigName = zkController.readConfigName(collection);\n        if (zkConfigName == null) {\n          log.error(\"Could not find config name for collection:\" + collection);\n          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Could not find config name for collection:\" + collection);\n        }\n        solrLoader = new ZkSolrResourceLoader(instanceDir.getAbsolutePath(), zkConfigName, libLoader, getCoreProps(instanceDir.getAbsolutePath(), cd.getPropertiesName(),cd.getCoreProperties()), zkController);\n      } catch (KeeperException e) {\n        log.error(\"\", e);\n        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n            \"\", e);\n      } catch (InterruptedException e) {\n        // Restore the interrupted status\n        Thread.currentThread().interrupt();\n        log.error(\"\", e);\n        throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\n            \"\", e);\n      }\n    }\n    \n    SolrCore newCore = core.reload(solrLoader, core);\n    // keep core to orig name link\n    String origName = coreToOrigName.remove(core);\n    if (origName != null) {\n      coreToOrigName.put(newCore, origName);\n    }\n    register(name, newCore, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"044244fb346dc6965d217fce709880d0e3bc2e9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cee0d276a5aee45373d831d0328b4544eec95754":["044244fb346dc6965d217fce709880d0e3bc2e9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cee0d276a5aee45373d831d0328b4544eec95754"]},"commit2Childs":{"044244fb346dc6965d217fce709880d0e3bc2e9f":["cee0d276a5aee45373d831d0328b4544eec95754"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["044244fb346dc6965d217fce709880d0e3bc2e9f"],"cee0d276a5aee45373d831d0328b4544eec95754":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}