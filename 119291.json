{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19e21d98da803ac6174cb50a880e6289139756ca","date":1323342587,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efc85580874d26ca9617f9ad61628d56f6859762","date":1323367273,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b1605dda5afabdc06fd136fa0dd14ad326e3001","date":1326751633,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":null,"sourceOld":"    /**\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["c26f00b574427b55127e869b935845554afde1fa","19e21d98da803ac6174cb50a880e6289139756ca"],"19e21d98da803ac6174cb50a880e6289139756ca":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b1605dda5afabdc06fd136fa0dd14ad326e3001":["19e21d98da803ac6174cb50a880e6289139756ca"],"efc85580874d26ca9617f9ad61628d56f6859762":["c26f00b574427b55127e869b935845554afde1fa","19e21d98da803ac6174cb50a880e6289139756ca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b1605dda5afabdc06fd136fa0dd14ad326e3001"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"c26f00b574427b55127e869b935845554afde1fa":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","19e21d98da803ac6174cb50a880e6289139756ca","efc85580874d26ca9617f9ad61628d56f6859762"],"19e21d98da803ac6174cb50a880e6289139756ca":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7b1605dda5afabdc06fd136fa0dd14ad326e3001","efc85580874d26ca9617f9ad61628d56f6859762"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7b1605dda5afabdc06fd136fa0dd14ad326e3001":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"efc85580874d26ca9617f9ad61628d56f6859762":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","a258fbb26824fd104ed795e5d9033d2d040049ee","efc85580874d26ca9617f9ad61628d56f6859762","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}