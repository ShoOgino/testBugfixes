{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#stripPrefix(BytesRef).mjava","commits":[{"id":"76f7066a3ec6e68e257b01dd46edbbdd3530690a","date":1358805020,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#stripPrefix(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Used only in ctor: */\n  private String stripPrefix(BytesRef prefix) throws IOException {\n    return new String(scratch.bytes, scratch.offset + prefix.length, scratch.length - prefix.length, \"UTF-8\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#stripPrefix(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Used only in ctor: */\n  private String stripPrefix(BytesRef prefix) throws IOException {\n    return new String(scratch.bytes, scratch.offset + prefix.length, scratch.length - prefix.length, \"UTF-8\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#stripPrefix(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#stripPrefix(BytesRef).mjava","sourceNew":"  /** Used only in ctor: */\n  private String stripPrefix(BytesRef prefix) throws IOException {\n    return new String(scratch.bytes, scratch.offset + prefix.length, scratch.length - prefix.length, StandardCharsets.UTF_8);\n  }\n\n","sourceOld":"  /** Used only in ctor: */\n  private String stripPrefix(BytesRef prefix) throws IOException {\n    return new String(scratch.bytes, scratch.offset + prefix.length, scratch.length - prefix.length, \"UTF-8\");\n  }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#stripPrefix(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#stripPrefix(BytesRef).mjava","sourceNew":"  /** Used only in ctor: */\n  private String stripPrefix(BytesRef prefix) throws IOException {\n    return new String(scratch.bytes, scratch.offset + prefix.length, scratch.length - prefix.length, StandardCharsets.UTF_8);\n  }\n\n","sourceOld":"  /** Used only in ctor: */\n  private String stripPrefix(BytesRef prefix) throws IOException {\n    return new String(scratch.bytes, scratch.offset + prefix.length, scratch.length - prefix.length, \"UTF-8\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#stripPrefix(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#stripPrefix(BytesRef).mjava","sourceNew":"  /** Used only in ctor: */\n  private String stripPrefix(BytesRef prefix) throws IOException {\n    return new String(scratch.bytes(), prefix.length, scratch.length() - prefix.length, StandardCharsets.UTF_8);\n  }\n\n","sourceOld":"  /** Used only in ctor: */\n  private String stripPrefix(BytesRef prefix) throws IOException {\n    return new String(scratch.bytes, scratch.offset + prefix.length, scratch.length - prefix.length, StandardCharsets.UTF_8);\n  }\n\n","bugFix":["7d89d7e4e5101347833eea558851bf4209218619"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca792c26af46bd6c4a08d81117c60440cf6a7e3d","date":1445938295,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#stripPrefix(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesReader#stripPrefix(BytesRef).mjava","sourceNew":"  /** Used only in ctor: */\n  private String stripPrefix(BytesRef prefix) {\n    return new String(scratch.bytes(), prefix.length, scratch.length() - prefix.length, StandardCharsets.UTF_8);\n  }\n\n","sourceOld":"  /** Used only in ctor: */\n  private String stripPrefix(BytesRef prefix) throws IOException {\n    return new String(scratch.bytes(), prefix.length, scratch.length() - prefix.length, StandardCharsets.UTF_8);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["d4d69c535930b5cce125cff868d40f6373dc27d4","7d89d7e4e5101347833eea558851bf4209218619"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","76f7066a3ec6e68e257b01dd46edbbdd3530690a"],"76f7066a3ec6e68e257b01dd46edbbdd3530690a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["7d89d7e4e5101347833eea558851bf4209218619"],"7d89d7e4e5101347833eea558851bf4209218619":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"76f7066a3ec6e68e257b01dd46edbbdd3530690a":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","76f7066a3ec6e68e257b01dd46edbbdd3530690a"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}