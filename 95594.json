{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsProducer#getNorms(FieldInfo).mjava","commits":[{"id":"22a2e66dfda83847e80095b8693c660742ab3e9c","date":1408628796,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsProducer#getNorms(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsProducer#getNumeric(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    NumericDocValues instance = instances.get(field.number);\n    if (instance == null) {\n      instance = loadNorms(field);\n      instances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized NumericDocValues getNumeric(FieldInfo field) throws IOException {\n    NumericDocValues instance = instances.get(field.number);\n    if (instance == null) {\n      instance = loadNorms(field);\n      instances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0936055c0eed56be3e4ae5c9db5b0e355390736a","date":1410874015,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsProducer#getNorms(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsProducer#getNorms(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    NumericDocValues instance = instances.get(field.name);\n    if (instance == null) {\n      instance = loadNorms(field);\n      instances.put(field.name, instance);\n      activeCount.incrementAndGet();\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    NumericDocValues instance = instances.get(field.number);\n    if (instance == null) {\n      instance = loadNorms(field);\n      instances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc8f80fee115148a0e4a0574560be06b494de821","date":1412069872,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsProducer#getNorms(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsProducer#getNorms(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    NumericDocValues instance = instances.get(field.name);\n    if (instance == null) {\n      instance = loadNorms(field);\n      if (!merging) {\n        instances.put(field.name, instance);\n        activeCount.incrementAndGet();\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    NumericDocValues instance = instances.get(field.name);\n    if (instance == null) {\n      instance = loadNorms(field);\n      instances.put(field.name, instance);\n      activeCount.incrementAndGet();\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsProducer#getNorms(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsProducer#getNorms(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    NumericDocValues instance = instances.get(field.name);\n    if (instance == null) {\n      instance = loadNorms(field);\n      if (!merging) {\n        instances.put(field.name, instance);\n        activeCount.incrementAndGet();\n      }\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized NumericDocValues getNorms(FieldInfo field) throws IOException {\n    NumericDocValues instance = instances.get(field.name);\n    if (instance == null) {\n      instance = loadNorms(field);\n      instances.put(field.name, instance);\n      activeCount.incrementAndGet();\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc8f80fee115148a0e4a0574560be06b494de821":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["0936055c0eed56be3e4ae5c9db5b0e355390736a","bc8f80fee115148a0e4a0574560be06b494de821"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22a2e66dfda83847e80095b8693c660742ab3e9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"]},"commit2Childs":{"bc8f80fee115148a0e4a0574560be06b494de821":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["bc8f80fee115148a0e4a0574560be06b494de821","9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}