{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.IndexTree#clone().mjava","commits":[{"id":"9fc0d60683b47b5d922124c31f57c8b34734f9e6","date":1480846684,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.IndexTree#clone().mjava","pathOld":"/dev/null","sourceNew":"    /** Clone, but you are not allowed to pop up past the point where the clone happened. */\n    public abstract IndexTree clone();\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.IndexTree#clone().mjava","pathOld":"/dev/null","sourceNew":"    /** Clone, but you are not allowed to pop up past the point where the clone happened. */\n    public abstract IndexTree clone();\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0e7448656541edc407546460641f47950451b16","date":1519150500,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.IndexTree#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.IndexTree#clone().mjava","sourceNew":"    /** Clone, but you are not allowed to pop up past the point where the clone happened. */\n    @Override\n    public IndexTree clone() {\n      IndexTree index = new IndexTree();\n      index.nodeID = nodeID;\n      index.level = level;\n      index.splitDim = splitDim;\n      index.leafBlockFPStack[level] = leafBlockFPStack[level];\n      index.leftNodePositions[level] = leftNodePositions[level];\n      index.rightNodePositions[level] = rightNodePositions[level];\n      index.splitValuesStack[index.level] = splitValuesStack[index.level].clone();\n      System.arraycopy(negativeDeltas, level*numDims, index.negativeDeltas, level*numDims, numDims);\n      index.splitDims[level] = splitDims[level];\n      return index;\n    }\n\n","sourceOld":"    /** Clone, but you are not allowed to pop up past the point where the clone happened. */\n    public abstract IndexTree clone();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.IndexTree#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.IndexTree#clone().mjava","sourceNew":"    /** Clone, but you are not allowed to pop up past the point where the clone happened. */\n    @Override\n    public IndexTree clone() {\n      IndexTree index = new IndexTree();\n      index.nodeID = nodeID;\n      index.level = level;\n      index.splitDim = splitDim;\n      index.leafBlockFPStack[level] = leafBlockFPStack[level];\n      index.leftNodePositions[level] = leftNodePositions[level];\n      index.rightNodePositions[level] = rightNodePositions[level];\n      index.splitValuesStack[index.level] = splitValuesStack[index.level].clone();\n      System.arraycopy(negativeDeltas, level*numIndexDims, index.negativeDeltas, level*numIndexDims, numIndexDims);\n      index.splitDims[level] = splitDims[level];\n      return index;\n    }\n\n","sourceOld":"    /** Clone, but you are not allowed to pop up past the point where the clone happened. */\n    @Override\n    public IndexTree clone() {\n      IndexTree index = new IndexTree();\n      index.nodeID = nodeID;\n      index.level = level;\n      index.splitDim = splitDim;\n      index.leafBlockFPStack[level] = leafBlockFPStack[level];\n      index.leftNodePositions[level] = leftNodePositions[level];\n      index.rightNodePositions[level] = rightNodePositions[level];\n      index.splitValuesStack[index.level] = splitValuesStack[index.level].clone();\n      System.arraycopy(negativeDeltas, level*numDims, index.negativeDeltas, level*numDims, numDims);\n      index.splitDims[level] = splitDims[level];\n      return index;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6b1fd50f847900ca47783ea832846d60e81f990","date":1591769592,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.IndexTree#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.IndexTree#clone().mjava","sourceNew":"    /** Clone, but you are not allowed to pop up past the point where the clone happened. */\n    @Override\n    public IndexTree clone() {\n      IndexTree index = new IndexTree(in.clone(), nodeID, level);\n      // copy node data\n      index.splitDim = splitDim;\n      index.leafBlockFPStack[level] = leafBlockFPStack[level];\n      index.rightNodePositions[level] = rightNodePositions[level];\n      index.splitValuesStack[index.level] = splitValuesStack[index.level].clone();\n      System.arraycopy(negativeDeltas, level*numIndexDims, index.negativeDeltas, level*numIndexDims, numIndexDims);\n      index.splitDims[level] = splitDims[level];\n      return index;\n    }\n\n","sourceOld":"    /** Clone, but you are not allowed to pop up past the point where the clone happened. */\n    @Override\n    public IndexTree clone() {\n      IndexTree index = new IndexTree();\n      index.nodeID = nodeID;\n      index.level = level;\n      index.splitDim = splitDim;\n      index.leafBlockFPStack[level] = leafBlockFPStack[level];\n      index.leftNodePositions[level] = leftNodePositions[level];\n      index.rightNodePositions[level] = rightNodePositions[level];\n      index.splitValuesStack[index.level] = splitValuesStack[index.level].clone();\n      System.arraycopy(negativeDeltas, level*numIndexDims, index.negativeDeltas, level*numIndexDims, numIndexDims);\n      index.splitDims[level] = splitDims[level];\n      return index;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.IndexTree#clone().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.IndexTree#clone().mjava","sourceNew":"    /** Clone, but you are not allowed to pop up past the point where the clone happened. */\n    @Override\n    public IndexTree clone() {\n      IndexTree index = new IndexTree(in.clone(), nodeID, level);\n      // copy node data\n      index.splitDim = splitDim;\n      index.leafBlockFPStack[level] = leafBlockFPStack[level];\n      index.rightNodePositions[level] = rightNodePositions[level];\n      index.splitValuesStack[index.level] = splitValuesStack[index.level].clone();\n      System.arraycopy(negativeDeltas, level*config.numIndexDims, index.negativeDeltas, level*config.numIndexDims, config.numIndexDims);\n      index.splitDims[level] = splitDims[level];\n      return index;\n    }\n\n","sourceOld":"    /** Clone, but you are not allowed to pop up past the point where the clone happened. */\n    @Override\n    public IndexTree clone() {\n      IndexTree index = new IndexTree(in.clone(), nodeID, level);\n      // copy node data\n      index.splitDim = splitDim;\n      index.leafBlockFPStack[level] = leafBlockFPStack[level];\n      index.rightNodePositions[level] = rightNodePositions[level];\n      index.splitValuesStack[index.level] = splitValuesStack[index.level].clone();\n      System.arraycopy(negativeDeltas, level*numIndexDims, index.negativeDeltas, level*numIndexDims, numIndexDims);\n      index.splitDims[level] = splitDims[level];\n      return index;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0e7448656541edc407546460641f47950451b16":["9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["d6b1fd50f847900ca47783ea832846d60e81f990"],"f6652c943595e92c187ee904c382863013eae28f":["c0e7448656541edc407546460641f47950451b16"],"d6b1fd50f847900ca47783ea832846d60e81f990":["f6652c943595e92c187ee904c382863013eae28f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"c0e7448656541edc407546460641f47950451b16":["f6652c943595e92c187ee904c382863013eae28f"],"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["c0e7448656541edc407546460641f47950451b16","9856095f7afb5a607bf5e65077615ed91273508c"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["d6b1fd50f847900ca47783ea832846d60e81f990"],"d6b1fd50f847900ca47783ea832846d60e81f990":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc0d60683b47b5d922124c31f57c8b34734f9e6","9856095f7afb5a607bf5e65077615ed91273508c"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}