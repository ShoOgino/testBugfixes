{"path":"solr/core/src/java/org/apache/solr/update/processor/UniqFieldsUpdateProcessorFactory.UniqFieldsUpdateProcessor#processAdd(AddUpdateCommand).mjava","commits":[{"id":"80ae2aa7d57f5ae78c575525926f7647f23e9f58","date":1311232167,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UniqFieldsUpdateProcessorFactory.UniqFieldsUpdateProcessor#processAdd(AddUpdateCommand).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void processAdd(AddUpdateCommand cmd) throws IOException {\n      if(fields != null){\n        SolrInputDocument solrInputDocument = cmd.getSolrInputDocument();\n        List<Object> uniqList = new ArrayList<Object>();\n        for (String field : fields) {\n          uniqList.clear();\n          Collection<Object> col = solrInputDocument.getFieldValues(field);\n          if (col != null) {\n            for (Object o : col) {\n              if(!uniqList.contains(o))\n                uniqList.add(o);\n            }\n            solrInputDocument.remove(field);\n            for (Object o : uniqList) {\n              solrInputDocument.addField(field, o);\n            }\n          }    \n        }\n      }\n      super.processAdd(cmd);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"befc0fd038478617cec3feec3762965441e6ec25","date":1377797477,"type":4,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UniqFieldsUpdateProcessorFactory.UniqFieldsUpdateProcessor#processAdd(AddUpdateCommand).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void processAdd(AddUpdateCommand cmd) throws IOException {\n      if(fields != null){\n        SolrInputDocument solrInputDocument = cmd.getSolrInputDocument();\n        List<Object> uniqList = new ArrayList<Object>();\n        for (String field : fields) {\n          uniqList.clear();\n          Collection<Object> col = solrInputDocument.getFieldValues(field);\n          if (col != null) {\n            for (Object o : col) {\n              if(!uniqList.contains(o))\n                uniqList.add(o);\n            }\n            solrInputDocument.remove(field);\n            for (Object o : uniqList) {\n              solrInputDocument.addField(field, o);\n            }\n          }    \n        }\n      }\n      super.processAdd(cmd);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UniqFieldsUpdateProcessorFactory.UniqFieldsUpdateProcessor#processAdd(AddUpdateCommand).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void processAdd(AddUpdateCommand cmd) throws IOException {\n      if(fields != null){\n        SolrInputDocument solrInputDocument = cmd.getSolrInputDocument();\n        List<Object> uniqList = new ArrayList<Object>();\n        for (String field : fields) {\n          uniqList.clear();\n          Collection<Object> col = solrInputDocument.getFieldValues(field);\n          if (col != null) {\n            for (Object o : col) {\n              if(!uniqList.contains(o))\n                uniqList.add(o);\n            }\n            solrInputDocument.remove(field);\n            for (Object o : uniqList) {\n              solrInputDocument.addField(field, o);\n            }\n          }    \n        }\n      }\n      super.processAdd(cmd);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"80ae2aa7d57f5ae78c575525926f7647f23e9f58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["80ae2aa7d57f5ae78c575525926f7647f23e9f58","befc0fd038478617cec3feec3762965441e6ec25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"befc0fd038478617cec3feec3762965441e6ec25":["80ae2aa7d57f5ae78c575525926f7647f23e9f58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["befc0fd038478617cec3feec3762965441e6ec25"]},"commit2Childs":{"80ae2aa7d57f5ae78c575525926f7647f23e9f58":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","befc0fd038478617cec3feec3762965441e6ec25"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80ae2aa7d57f5ae78c575525926f7647f23e9f58"],"befc0fd038478617cec3feec3762965441e6ec25":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}