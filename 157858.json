{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f4ef381bf0c2d618c6db830d3dd668c6901c05a","date":1402592253,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSetLight.FrozenIntSetLight#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSetLight) {\n        FrozenIntSetLight other = (FrozenIntSetLight) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSetLight) {\n        SortedIntSetLight other = (SortedIntSetLight) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6b23a02f76f15e0dd99a6951055a45aa5c43c48","date":1581020205,"type":4,"author":"Mike","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/SortedIntSet.FrozenIntSet#equals(Object).mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean equals(Object _other) {\n      if (_other == null) {\n        return false;\n      }\n      if (_other instanceof FrozenIntSet) {\n        FrozenIntSet other = (FrozenIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      } else if (_other instanceof SortedIntSet) {\n        SortedIntSet other = (SortedIntSet) _other;\n        if (hashCode != other.hashCode) {\n          return false;\n        }\n        if (other.values.length != values.length) {\n          return false;\n        }\n        for(int i=0;i<values.length;i++) {\n          if (other.values[i] != values[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d6b23a02f76f15e0dd99a6951055a45aa5c43c48":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d6b23a02f76f15e0dd99a6951055a45aa5c43c48"]},"commit2Childs":{"d6b23a02f76f15e0dd99a6951055a45aa5c43c48":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d6b23a02f76f15e0dd99a6951055a45aa5c43c48","7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}