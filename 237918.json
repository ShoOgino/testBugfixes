{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleReportUncaughtExceptions#setupHandler().mjava","commits":[{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleReportUncaughtExceptions#setupHandler().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/UncaughtExceptionsRule#setupHandler().mjava","sourceNew":"  private void setupHandler() {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        // org.junit.internal.AssumptionViolatedException in older releases\n        // org.junit.Assume.AssumptionViolatedException in recent ones\n        if (e.getClass().getName().endsWith(\"AssumptionViolatedException\")) {\n          String where = \"<unknown>\";\n          for (StackTraceElement elem : e.getStackTrace()) {\n            if (!elem.getClassName().startsWith(\"org.junit\")) {\n              where = elem.toString();\n              break;\n            }\n          }\n          System.err.print(\"NOTE: Uncaught exception handler caught a failed assumption at \" \n              + where + \" (ignored):\");\n        } else {\n          synchronized (uncaughtExceptions) {\n            uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n          }\n\n          StringWriter sw = new StringWriter();\n          sw.write(\"\\n===>\\nUncaught exception by thread: \" + t + \"\\n\");\n          PrintWriter pw = new PrintWriter(sw);\n          e.printStackTrace(pw);\n          pw.flush();\n          sw.write(\"<===\\n\");\n          System.err.println(sw.toString());\n        }\n      }\n    });\n  }  \n\n","sourceOld":"  private void setupHandler() {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        // org.junit.internal.AssumptionViolatedException in older releases\n        // org.junit.Assume.AssumptionViolatedException in recent ones\n        if (e.getClass().getName().endsWith(\"AssumptionViolatedException\")) {\n          String where = \"<unknown>\";\n          for (StackTraceElement elem : e.getStackTrace()) {\n            if (!elem.getClassName().startsWith(\"org.junit\")) {\n              where = elem.toString();\n              break;\n            }\n          }\n          System.err.print(\"NOTE: Uncaught exception handler caught a failed assumption at \" \n              + where + \" (ignored):\");\n        } else {\n          synchronized (uncaughtExceptions) {\n            uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n          }\n\n          StringWriter sw = new StringWriter();\n          sw.write(\"\\n===>\\nUncaught exception by thread: \" + t + \"\\n\");\n          PrintWriter pw = new PrintWriter(sw);\n          e.printStackTrace(pw);\n          pw.flush();\n          sw.write(\"<===\\n\");\n          System.err.println(sw.toString());\n        }\n      }\n    });\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c8719b2c0b382be11f5b193b6fc14bc310e906b","date":1344770591,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleReportUncaughtExceptions#setupHandler().mjava","sourceNew":null,"sourceOld":"  private void setupHandler() {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        // org.junit.internal.AssumptionViolatedException in older releases\n        // org.junit.Assume.AssumptionViolatedException in recent ones\n        if (e.getClass().getName().endsWith(\"AssumptionViolatedException\")) {\n          String where = \"<unknown>\";\n          for (StackTraceElement elem : e.getStackTrace()) {\n            if (!elem.getClassName().startsWith(\"org.junit\")) {\n              where = elem.toString();\n              break;\n            }\n          }\n          System.err.print(\"NOTE: Uncaught exception handler caught a failed assumption at \" \n              + where + \" (ignored):\");\n        } else {\n          synchronized (uncaughtExceptions) {\n            uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n          }\n\n          StringWriter sw = new StringWriter();\n          sw.write(\"\\n===>\\nUncaught exception by thread: \" + t + \"\\n\");\n          PrintWriter pw = new PrintWriter(sw);\n          e.printStackTrace(pw);\n          pw.flush();\n          sw.write(\"<===\\n\");\n          System.err.println(sw.toString());\n        }\n      }\n    });\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleReportUncaughtExceptions#setupHandler().mjava","sourceNew":null,"sourceOld":"  private void setupHandler() {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        // org.junit.internal.AssumptionViolatedException in older releases\n        // org.junit.Assume.AssumptionViolatedException in recent ones\n        if (e.getClass().getName().endsWith(\"AssumptionViolatedException\")) {\n          String where = \"<unknown>\";\n          for (StackTraceElement elem : e.getStackTrace()) {\n            if (!elem.getClassName().startsWith(\"org.junit\")) {\n              where = elem.toString();\n              break;\n            }\n          }\n          System.err.print(\"NOTE: Uncaught exception handler caught a failed assumption at \" \n              + where + \" (ignored):\");\n        } else {\n          synchronized (uncaughtExceptions) {\n            uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n          }\n\n          StringWriter sw = new StringWriter();\n          sw.write(\"\\n===>\\nUncaught exception by thread: \" + t + \"\\n\");\n          PrintWriter pw = new PrintWriter(sw);\n          e.printStackTrace(pw);\n          pw.flush();\n          sw.write(\"<===\\n\");\n          System.err.println(sw.toString());\n        }\n      }\n    });\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleReportUncaughtExceptions#setupHandler().mjava","sourceNew":null,"sourceOld":"  private void setupHandler() {\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        // org.junit.internal.AssumptionViolatedException in older releases\n        // org.junit.Assume.AssumptionViolatedException in recent ones\n        if (e.getClass().getName().endsWith(\"AssumptionViolatedException\")) {\n          String where = \"<unknown>\";\n          for (StackTraceElement elem : e.getStackTrace()) {\n            if (!elem.getClassName().startsWith(\"org.junit\")) {\n              where = elem.toString();\n              break;\n            }\n          }\n          System.err.print(\"NOTE: Uncaught exception handler caught a failed assumption at \" \n              + where + \" (ignored):\");\n        } else {\n          synchronized (uncaughtExceptions) {\n            uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n          }\n\n          StringWriter sw = new StringWriter();\n          sw.write(\"\\n===>\\nUncaught exception by thread: \" + t + \"\\n\");\n          PrintWriter pw = new PrintWriter(sw);\n          e.printStackTrace(pw);\n          pw.flush();\n          sw.write(\"<===\\n\");\n          System.err.println(sw.toString());\n        }\n      }\n    });\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":["5da0b42730b6b99b31389ef94cb97384e83b9ede","1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["5da0b42730b6b99b31389ef94cb97384e83b9ede","1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"1c8719b2c0b382be11f5b193b6fc14bc310e906b":["5da0b42730b6b99b31389ef94cb97384e83b9ede"]},"commit2Childs":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"1c8719b2c0b382be11f5b193b6fc14bc310e906b":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}