{"path":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#newFieldQuery(Analyzer,String,String,boolean,boolean,boolean,SynonymQueryStyle).mjava","commits":[{"id":"47d74fab5d64854ddafa81b65ed399b192f2d947","date":1512411916,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#newFieldQuery(Analyzer,String,String,boolean,boolean,boolean,SynonymQueryStyle).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/SolrQueryParserBase#newFieldQuery(Analyzer,String,String,boolean,boolean,boolean).mjava","sourceNew":"  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,\n                                boolean quoted, boolean fieldAutoGenPhraseQueries, boolean fieldEnableGraphQueries,\n                                SynonymQueryStyle synonymQueryStyle)\n      throws SyntaxError {\n    BooleanClause.Occur occur = operator == Operator.AND ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;\n    setEnableGraphQueries(fieldEnableGraphQueries);\n    setSynonymQueryStyle(synonymQueryStyle);\n    Query query = createFieldQuery(analyzer, occur, field, queryText,\n        quoted || fieldAutoGenPhraseQueries || autoGeneratePhraseQueries, phraseSlop);\n    setEnableGraphQueries(true); // reset back to default\n    setSynonymQueryStyle(AS_SAME_TERM);\n    return query;\n  }\n\n","sourceOld":"  protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,\n                                boolean quoted, boolean fieldAutoGenPhraseQueries, boolean fieldEnableGraphQueries) \n      throws SyntaxError {\n    BooleanClause.Occur occur = operator == Operator.AND ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;\n    setEnableGraphQueries(fieldEnableGraphQueries);\n    Query query = createFieldQuery(analyzer, occur, field, queryText,\n        quoted || fieldAutoGenPhraseQueries || autoGeneratePhraseQueries, phraseSlop);\n    setEnableGraphQueries(true); // reset back to default\n    return query;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"47d74fab5d64854ddafa81b65ed399b192f2d947":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["47d74fab5d64854ddafa81b65ed399b192f2d947"]},"commit2Childs":{"47d74fab5d64854ddafa81b65ed399b192f2d947":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["47d74fab5d64854ddafa81b65ed399b192f2d947"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}