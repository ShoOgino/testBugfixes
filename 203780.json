{"path":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Optimizer2#merge(Cell,Cell).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Optimizer2#merge(Cell,Cell).mjava","pathOld":"modules/analysis/stempel/src/java/org/egothor/stemmer/Optimizer2#merge(Cell,Cell).mjava","sourceNew":"  /**\n   * Merge the given Cells and return the resulting Cell.\n   * \n   * @param m the master Cell\n   * @param e the existing Cell\n   * @return the resulting Cell, or <tt>null</tt> if the operation cannot be\n   *         realized\n   */\n  @Override\n  public Cell merge(Cell m, Cell e) {\n    if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip) {\n      Cell c = new Cell(m);\n      c.cnt += e.cnt;\n      return c;\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Merge the given Cells and return the resulting Cell.\n   * \n   * @param m the master Cell\n   * @param e the existing Cell\n   * @return the resulting Cell, or <tt>null</tt> if the operation cannot be\n   *         realized\n   */\n  @Override\n  public Cell merge(Cell m, Cell e) {\n    if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip) {\n      Cell c = new Cell(m);\n      c.cnt += e.cnt;\n      return c;\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Optimizer2#merge(Cell,Cell).mjava","pathOld":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Optimizer2#merge(Cell,Cell).mjava","sourceNew":"  /**\n   * Merge the given Cells and return the resulting Cell.\n   * \n   * @param m the master Cell\n   * @param e the existing Cell\n   * @return the resulting Cell, or <code>null</code> if the operation cannot be\n   *         realized\n   */\n  @Override\n  public Cell merge(Cell m, Cell e) {\n    if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip) {\n      Cell c = new Cell(m);\n      c.cnt += e.cnt;\n      return c;\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Merge the given Cells and return the resulting Cell.\n   * \n   * @param m the master Cell\n   * @param e the existing Cell\n   * @return the resulting Cell, or <tt>null</tt> if the operation cannot be\n   *         realized\n   */\n  @Override\n  public Cell merge(Cell m, Cell e) {\n    if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip) {\n      Cell c = new Cell(m);\n      c.cnt += e.cnt;\n      return c;\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e3751ad4cc85eb979419cf5469dfba266eae56a"]},"commit2Childs":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}