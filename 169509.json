{"path":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","sourceNew":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<Object>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<Object>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n\n        info.add( \"sourceId\",    (m.getSourceId()   !=null ? m.getSourceId()    : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<String>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","sourceOld":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<Object>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<Object>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n\n        info.add( \"sourceId\",    (m.getSourceId()   !=null ? m.getSourceId()    : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<String>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","sourceNew":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<Object>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<Object>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n\n        info.add( \"sourceId\",    (m.getSourceId()   !=null ? m.getSourceId()    : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<String>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","sourceOld":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<Object>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<Object>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n\n        info.add( \"sourceId\",    (m.getSourceId()   !=null ? m.getSourceId()    : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<String>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","sourceNew":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<Object>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<Object>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n\n        info.add( \"sourceId\",    (m.getSourceId()   !=null ? m.getSourceId()    : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<String>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","sourceOld":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<Object>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<Object>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n\n        info.add( \"sourceId\",    (m.getSourceId()   !=null ? m.getSourceId()    : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<String>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18c264904f4236696be3696a0d998a37931a8a50","date":1333699995,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","sourceNew":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<Object>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<Object>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<String>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","sourceOld":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<Object>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<Object>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n\n        info.add( \"sourceId\",    (m.getSourceId()   !=null ? m.getSourceId()    : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<String>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","sourceNew":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","sourceOld":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<Object>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<Object>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<String>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1390137e395d2f07f9ba5b8c43d293befe84d563","date":1427947685,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","sourceNew":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n        category.add( entry.getKey(), info );\n\n        info.add( NAME,          (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","sourceOld":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","sourceNew":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n        category.add( entry.getKey(), info );\n\n        info.add( NAME,          (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","sourceOld":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n        category.add( entry.getKey(), info );\n\n        info.add( \"name\",        (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","sourceNew":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<>();\n    for (SolrInfoBean.Category cat : SolrInfoBean.Category.values())\n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoBean> entry : reg.entrySet()) {\n        SolrInfoBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n        category.add( entry.getKey(), info );\n\n        info.add( NAME,          (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n\n        if (stats) {\n          info.add( \"stats\", m.getMetricsSnapshot());\n        }\n      }\n    }\n    return list;\n  }\n\n","sourceOld":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n        category.add( entry.getKey(), info );\n\n        info.add( NAME,          (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","sourceNew":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<>();\n    for (SolrInfoBean.Category cat : SolrInfoBean.Category.values())\n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoBean> entry : reg.entrySet()) {\n        SolrInfoBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n        category.add( entry.getKey(), info );\n\n        info.add( NAME,          (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n\n        if (stats) {\n          info.add( \"stats\", m.getMetricsSnapshot());\n        }\n      }\n    }\n    return list;\n  }\n\n","sourceOld":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<>();\n    for (SolrInfoMBean.Category cat : SolrInfoMBean.Category.values()) \n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoMBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoMBean> entry : reg.entrySet()) {\n        SolrInfoMBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n        category.add( entry.getKey(), info );\n\n        info.add( NAME,          (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"version\",     (m.getVersion()    !=null ? m.getVersion()     : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n        info.add( \"source\",      (m.getSource()     !=null ? m.getSource()      : na) );\n\n        URL[] urls = m.getDocs();\n        if ((urls != null) && (urls.length > 0)) {\n          ArrayList<String> docs = new ArrayList<>(urls.length);\n          for( URL u : urls ) {\n            docs.add( u.toExternalForm() );\n          }\n          info.add( \"docs\", docs );\n        }\n\n        if( stats ) {\n          info.add( \"stats\", m.getStatistics() );\n        }\n      }\n    }\n    return list;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c2af5a711bd6e2d33e0221ced0f47ac596ed275","date":1572877903,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/PluginInfoHandler#getSolrInfoBeans(SolrCore,boolean).mjava","sourceNew":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<>();\n    for (SolrInfoBean.Category cat : SolrInfoBean.Category.values())\n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoBean> entry : reg.entrySet()) {\n        SolrInfoBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n        category.add( entry.getKey(), info );\n\n        info.add( NAME,          (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n\n        if (stats && m.getSolrMetricsContext() != null) {\n          info.add( \"stats\", m.getSolrMetricsContext().getMetricsSnapshot());\n        }\n      }\n    }\n    return list;\n  }\n\n","sourceOld":"  private static SimpleOrderedMap<Object> getSolrInfoBeans( SolrCore core, boolean stats )\n  {\n    SimpleOrderedMap<Object> list = new SimpleOrderedMap<>();\n    for (SolrInfoBean.Category cat : SolrInfoBean.Category.values())\n    {\n      SimpleOrderedMap<Object> category = new SimpleOrderedMap<>();\n      list.add( cat.name(), category );\n      Map<String, SolrInfoBean> reg = core.getInfoRegistry();\n      for (Map.Entry<String,SolrInfoBean> entry : reg.entrySet()) {\n        SolrInfoBean m = entry.getValue();\n        if (m.getCategory() != cat) continue;\n\n        String na = \"Not Declared\";\n        SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n        category.add( entry.getKey(), info );\n\n        info.add( NAME,          (m.getName()       !=null ? m.getName()        : na) );\n        info.add( \"description\", (m.getDescription()!=null ? m.getDescription() : na) );\n\n        if (stats) {\n          info.add( \"stats\", m.getMetricsSnapshot());\n        }\n      }\n    }\n    return list;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["18c264904f4236696be3696a0d998a37931a8a50"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["816521ebaad5add9cb96bb88c577394e2938c40b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","1390137e395d2f07f9ba5b8c43d293befe84d563"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"816521ebaad5add9cb96bb88c577394e2938c40b":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"18c264904f4236696be3696a0d998a37931a8a50":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["1390137e395d2f07f9ba5b8c43d293befe84d563","d2638f781be724518ff6c2263d14a48cf6e68017"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","d2638f781be724518ff6c2263d14a48cf6e68017","816521ebaad5add9cb96bb88c577394e2938c40b"],"c26f00b574427b55127e869b935845554afde1fa":["18c264904f4236696be3696a0d998a37931a8a50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"18c264904f4236696be3696a0d998a37931a8a50":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","d2638f781be724518ff6c2263d14a48cf6e68017","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}