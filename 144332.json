{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testEMailAddresses().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testEMailAddresses().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testEMailAddresses().mjava","sourceNew":"  public void testEMailAddresses() throws Exception {\n    // email addresses, possibly with underscores, periods, etc\n    assertAnalyzesTo(a, \"test@example.com\", new String[]{\"test@example.com\"});\n    assertAnalyzesTo(a, \"first.lastname@example.com\", new String[]{\"first.lastname@example.com\"});\n    assertAnalyzesTo(a, \"first_lastname@example.com\", new String[]{\"first_lastname@example.com\"});\n  }\n\n","sourceOld":"  public void testEMailAddresses() throws Exception {\n    // email addresses, possibly with underscores, periods, etc\n    assertAnalyzesTo(a, \"test@example.com\", new String[]{\"test@example.com\"});\n    assertAnalyzesTo(a, \"first.lastname@example.com\", new String[]{\"first.lastname@example.com\"});\n    assertAnalyzesTo(a, \"first_lastname@example.com\", new String[]{\"first_lastname@example.com\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c177b66783fe11c18553f8b57e8b745098cc7607","date":1412798789,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testEMailAddresses().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testEMailAddresses().mjava","sourceNew":"  public void testEMailAddresses() throws Exception {\n    // email addresses, possibly with underscores, periods, etc\n    assertAnalyzesTo(a, \"test@example.com\", new String[]{\"test@example.com\"});\n    assertAnalyzesTo(a, \"first.lastname@example.com\", new String[]{\"first.lastname@example.com\"});\n    assertAnalyzesTo(a, \"first_lastname@example.com\", new String[]{\"first_lastname@example.com\"});\n  }\n\n","sourceOld":"  public void testEMailAddresses() throws Exception {\n    // email addresses, possibly with underscores, periods, etc\n    assertAnalyzesTo(a, \"test@example.com\", new String[]{\"test@example.com\"});\n    assertAnalyzesTo(a, \"first.lastname@example.com\", new String[]{\"first.lastname@example.com\"});\n    assertAnalyzesTo(a, \"first_lastname@example.com\", new String[]{\"first_lastname@example.com\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testEMailAddresses().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testEMailAddresses().mjava","sourceNew":"  public void testEMailAddresses() throws Exception {\n    // email addresses, possibly with underscores, periods, etc\n    assertAnalyzesTo(a, \"test@example.com\", new String[]{\"test@example.com\"});\n    assertAnalyzesTo(a, \"first.lastname@example.com\", new String[]{\"first.lastname@example.com\"});\n    assertAnalyzesTo(a, \"first_lastname@example.com\", new String[]{\"first_lastname@example.com\"});\n  }\n\n","sourceOld":"  public void testEMailAddresses() throws Exception {\n    // email addresses, possibly with underscores, periods, etc\n    assertAnalyzesTo(a, \"test@example.com\", new String[]{\"test@example.com\"});\n    assertAnalyzesTo(a, \"first.lastname@example.com\", new String[]{\"first.lastname@example.com\"});\n    assertAnalyzesTo(a, \"first_lastname@example.com\", new String[]{\"first_lastname@example.com\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55980207f1977bd1463465de1659b821347e2fa8":["b89678825b68eccaf09e6ab71675fc0b0af1e099","c177b66783fe11c18553f8b57e8b745098cc7607"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c177b66783fe11c18553f8b57e8b745098cc7607":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c177b66783fe11c18553f8b57e8b745098cc7607"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["55980207f1977bd1463465de1659b821347e2fa8","c177b66783fe11c18553f8b57e8b745098cc7607"],"55980207f1977bd1463465de1659b821347e2fa8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c177b66783fe11c18553f8b57e8b745098cc7607":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}