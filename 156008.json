{"path":"lucene/core/src/java/org/apache/lucene/search/SortField#equals(Object).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortField#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SortField#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement equals (unless a singleton is always used). */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SortField)) return false;\n    final SortField other = (SortField)o;\n    return (\n      StringHelper.equals(other.field, this.field)\n      && other.type == this.type\n      && other.reverse == this.reverse\n      && (other.comparatorSource == null ? this.comparatorSource == null : other.comparatorSource.equals(this.comparatorSource))\n    );\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement equals (unless a singleton is always used). */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SortField)) return false;\n    final SortField other = (SortField)o;\n    return (\n      StringHelper.equals(other.field, this.field)\n      && other.type == this.type\n      && other.reverse == this.reverse\n      && (other.comparatorSource == null ? this.comparatorSource == null : other.comparatorSource.equals(this.comparatorSource))\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortField#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SortField#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} was provided, it must properly\n   *  implement equals (unless a singleton is always used). */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SortField)) return false;\n    final SortField other = (SortField)o;\n    return (\n      StringHelper.equals(other.field, this.field)\n      && other.type == this.type\n      && other.reverse == this.reverse\n      && (other.comparatorSource == null ? this.comparatorSource == null : other.comparatorSource.equals(this.comparatorSource))\n    );\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement equals (unless a singleton is always used). */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SortField)) return false;\n    final SortField other = (SortField)o;\n    return (\n      StringHelper.equals(other.field, this.field)\n      && other.type == this.type\n      && other.reverse == this.reverse\n      && (other.comparatorSource == null ? this.comparatorSource == null : other.comparatorSource.equals(this.comparatorSource))\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortField#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SortField#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} was provided, it must properly\n   *  implement equals (unless a singleton is always used). */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SortField)) return false;\n    final SortField other = (SortField)o;\n    return (\n      StringHelper.equals(other.field, this.field)\n      && other.type == this.type\n      && other.reverse == this.reverse\n      && (other.comparatorSource == null ? this.comparatorSource == null : other.comparatorSource.equals(this.comparatorSource))\n    );\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement equals (unless a singleton is always used). */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SortField)) return false;\n    final SortField other = (SortField)o;\n    return (\n      StringHelper.equals(other.field, this.field)\n      && other.type == this.type\n      && other.reverse == this.reverse\n      && (other.comparatorSource == null ? this.comparatorSource == null : other.comparatorSource.equals(this.comparatorSource))\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortField#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SortField#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} was provided, it must properly\n   *  implement equals (unless a singleton is always used). */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SortField)) return false;\n    final SortField other = (SortField)o;\n    return (\n      StringHelper.equals(other.field, this.field)\n      && other.type == this.type\n      && other.reverse == this.reverse\n      && (other.comparatorSource == null ? this.comparatorSource == null : other.comparatorSource.equals(this.comparatorSource))\n    );\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement equals (unless a singleton is always used). */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SortField)) return false;\n    final SortField other = (SortField)o;\n    return (\n      StringHelper.equals(other.field, this.field)\n      && other.type == this.type\n      && other.reverse == this.reverse\n      && (other.comparatorSource == null ? this.comparatorSource == null : other.comparatorSource.equals(this.comparatorSource))\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c3e0ad6e16a850c4c87e4e55cc55f0501ba32bd","date":1450801295,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortField#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SortField#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} was provided, it must properly\n   *  implement equals (unless a singleton is always used). */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SortField)) return false;\n    final SortField other = (SortField)o;\n    return (\n      Objects.equals(other.field, this.field)\n      && other.type == this.type\n      && other.reverse == this.reverse\n      && Objects.equals(this.comparatorSource, other.comparatorSource)\n      && Objects.equals(this.missingValue, other.missingValue)\n    );\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} was provided, it must properly\n   *  implement equals (unless a singleton is always used). */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SortField)) return false;\n    final SortField other = (SortField)o;\n    return (\n      StringHelper.equals(other.field, this.field)\n      && other.type == this.type\n      && other.reverse == this.reverse\n      && (other.comparatorSource == null ? this.comparatorSource == null : other.comparatorSource.equals(this.comparatorSource))\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","93dd449115a9247533e44bab47e8429e5dccbc6d"],"0c3e0ad6e16a850c4c87e4e55cc55f0501ba32bd":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0c3e0ad6e16a850c4c87e4e55cc55f0501ba32bd"]},"commit2Childs":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","0c3e0ad6e16a850c4c87e4e55cc55f0501ba32bd"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"0c3e0ad6e16a850c4c87e4e55cc55f0501ba32bd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}