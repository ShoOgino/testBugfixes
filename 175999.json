{"path":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(IndexReader,String).mjava","commits":[{"id":"be20f9fed1d3edcb1c84abcc39df87a90fab22df","date":1275590285,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(IndexReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCache#getStrings(IndexReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermsIndex getTermsIndex (IndexReader reader, String field)\n  throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code> and returns an array\n   * of size <code>reader.maxDoc()</code> containing the value each document\n   * has in the given field.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public String[] getStrings (IndexReader reader, String field)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCache#getTerms(AtomicIndexReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(IndexReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTerms getTerms (AtomicIndexReader reader, String field)\n  throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermsIndex getTermsIndex (IndexReader reader, String field)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":6,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicIndexReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(IndexReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermsIndex getTermsIndex (AtomicIndexReader reader, String field)\n  throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermsIndex getTermsIndex (IndexReader reader, String field)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(IndexReader,String).mjava","sourceNew":null,"sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermsIndex getTermsIndex (IndexReader reader, String field)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"]},"commit2Childs":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}