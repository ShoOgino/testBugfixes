{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","commits":[{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","sourceNew":"  public void testKeywordsCaseInsensitive() throws IOException {\n    Reader reader = new StringReader(\"testing DoGs\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    StemmerOverrideFilterFactory factory = new StemmerOverrideFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    ResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    args.put(\"dictionary\", \"stemdict.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(loader);\n    \n    TokenStream ts = new PorterStemFilter(factory.create(tokenizer));\n    assertTokenStreamContents(ts, new String[] { \"test\", \"cat\" });\n  }\n\n","sourceOld":"  public void testKeywordsCaseInsensitive() throws IOException {\n    Reader reader = new StringReader(\"testing DoGs\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    StemmerOverrideFilterFactory factory = new StemmerOverrideFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    ResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    args.put(\"dictionary\", \"stemdict.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(loader);\n    \n    TokenStream ts = new PorterStemFilter(factory.create(tokenizer));\n    assertTokenStreamContents(ts, new String[] { \"test\", \"cat\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80231a39fa20f6c8567eb4e3a3a0511630a97ac7","date":1343105908,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","sourceNew":"  public void testKeywordsCaseInsensitive() throws IOException {\n    Reader reader = new StringReader(\"testing DoGs\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    StemmerOverrideFilterFactory factory = new StemmerOverrideFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    ResourceLoader loader = new StringMockResourceLoader(\"dogs\\tcat\");\n    args.put(\"dictionary\", \"stemdict.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(loader);\n    \n    TokenStream ts = new PorterStemFilter(factory.create(tokenizer));\n    assertTokenStreamContents(ts, new String[] { \"test\", \"cat\" });\n  }\n\n","sourceOld":"  public void testKeywordsCaseInsensitive() throws IOException {\n    Reader reader = new StringReader(\"testing DoGs\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    StemmerOverrideFilterFactory factory = new StemmerOverrideFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    ResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    args.put(\"dictionary\", \"stemdict.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(loader);\n    \n    TokenStream ts = new PorterStemFilter(factory.create(tokenizer));\n    assertTokenStreamContents(ts, new String[] { \"test\", \"cat\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","sourceNew":"  public void testKeywordsCaseInsensitive() throws IOException {\n    Reader reader = new StringReader(\"testing DoGs\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    StemmerOverrideFilterFactory factory = new StemmerOverrideFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    ResourceLoader loader = new StringMockResourceLoader(\"dogs\\tcat\");\n    args.put(\"dictionary\", \"stemdict.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(loader);\n    \n    TokenStream ts = new PorterStemFilter(factory.create(tokenizer));\n    assertTokenStreamContents(ts, new String[] { \"test\", \"cat\" });\n  }\n\n","sourceOld":"  public void testKeywordsCaseInsensitive() throws IOException {\n    Reader reader = new StringReader(\"testing DoGs\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    StemmerOverrideFilterFactory factory = new StemmerOverrideFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    ResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    args.put(\"dictionary\", \"stemdict.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(loader);\n    \n    TokenStream ts = new PorterStemFilter(factory.create(tokenizer));\n    assertTokenStreamContents(ts, new String[] { \"test\", \"cat\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","pathOld":"/dev/null","sourceNew":"  public void testKeywordsCaseInsensitive() throws IOException {\n    Reader reader = new StringReader(\"testing DoGs\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    StemmerOverrideFilterFactory factory = new StemmerOverrideFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    ResourceLoader loader = new StringMockResourceLoader(\"dogs\\tcat\");\n    args.put(\"dictionary\", \"stemdict.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(loader);\n    \n    TokenStream ts = new PorterStemFilter(factory.create(tokenizer));\n    assertTokenStreamContents(ts, new String[] { \"test\", \"cat\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","pathOld":"/dev/null","sourceNew":"  public void testKeywordsCaseInsensitive() throws IOException {\n    Reader reader = new StringReader(\"testing DoGs\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    StemmerOverrideFilterFactory factory = new StemmerOverrideFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    ResourceLoader loader = new StringMockResourceLoader(\"dogs\\tcat\");\n    args.put(\"dictionary\", \"stemdict.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(loader);\n    \n    TokenStream ts = new PorterStemFilter(factory.create(tokenizer));\n    assertTokenStreamContents(ts, new String[] { \"test\", \"cat\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","sourceNew":"  public void testKeywordsCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"testing DoGs\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"StemmerOverride\", TEST_VERSION_CURRENT,\n        new StringMockResourceLoader(\"dogs\\tcat\"),\n        \"dictionary\", \"stemdict.txt\",\n        \"ignoreCase\", \"true\").create(stream);\n    stream = tokenFilterFactory(\"PorterStem\").create(stream);\n    \n    assertTokenStreamContents(stream, new String[] { \"test\", \"cat\" });\n  }\n\n","sourceOld":"  public void testKeywordsCaseInsensitive() throws IOException {\n    Reader reader = new StringReader(\"testing DoGs\");\n    Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    StemmerOverrideFilterFactory factory = new StemmerOverrideFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    ResourceLoader loader = new StringMockResourceLoader(\"dogs\\tcat\");\n    args.put(\"dictionary\", \"stemdict.txt\");\n    args.put(\"ignoreCase\", \"true\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(loader);\n    \n    TokenStream ts = new PorterStemFilter(factory.create(tokenizer));\n    assertTokenStreamContents(ts, new String[] { \"test\", \"cat\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","sourceNew":"  public void testKeywordsCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"testing DoGs\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"StemmerOverride\", TEST_VERSION_CURRENT,\n        new StringMockResourceLoader(\"dogs\\tcat\"),\n        \"dictionary\", \"stemdict.txt\",\n        \"ignoreCase\", \"true\").create(stream);\n    stream = tokenFilterFactory(\"PorterStem\").create(stream);\n    \n    assertTokenStreamContents(stream, new String[] { \"test\", \"cat\" });\n  }\n\n","sourceOld":"  public void testKeywordsCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"testing DoGs\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"StemmerOverride\", TEST_VERSION_CURRENT,\n        new StringMockResourceLoader(\"dogs\\tcat\"),\n        \"dictionary\", \"stemdict.txt\",\n        \"ignoreCase\", \"true\").create(stream);\n    stream = tokenFilterFactory(\"PorterStem\").create(stream);\n    \n    assertTokenStreamContents(stream, new String[] { \"test\", \"cat\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19e497fe4da591a79332da97681b8017d9c61165","date":1409030374,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestStemmerOverrideFilterFactory#testKeywordsCaseInsensitive().mjava","sourceNew":"  public void testKeywordsCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"testing DoGs\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"StemmerOverride\", Version.LATEST,\n        new StringMockResourceLoader(\"dogs\\tcat\"),\n        \"dictionary\", \"stemdict.txt\",\n        \"ignoreCase\", \"true\").create(stream);\n    stream = tokenFilterFactory(\"PorterStem\").create(stream);\n    \n    assertTokenStreamContents(stream, new String[] { \"test\", \"cat\" });\n  }\n\n","sourceOld":"  public void testKeywordsCaseInsensitive() throws Exception {\n    Reader reader = new StringReader(\"testing DoGs\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"StemmerOverride\", TEST_VERSION_CURRENT,\n        new StringMockResourceLoader(\"dogs\\tcat\"),\n        \"dictionary\", \"stemdict.txt\",\n        \"ignoreCase\", \"true\").create(stream);\n    stream = tokenFilterFactory(\"PorterStem\").create(stream);\n    \n    assertTokenStreamContents(stream, new String[] { \"test\", \"cat\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"80231a39fa20f6c8567eb4e3a3a0511630a97ac7":["3241e06e642196396b80bb293acd9c0814d079e0"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","80231a39fa20f6c8567eb4e3a3a0511630a97ac7"],"3241e06e642196396b80bb293acd9c0814d079e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19e497fe4da591a79332da97681b8017d9c61165"],"19e497fe4da591a79332da97681b8017d9c61165":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"80231a39fa20f6c8567eb4e3a3a0511630a97ac7":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["19e497fe4da591a79332da97681b8017d9c61165"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"3241e06e642196396b80bb293acd9c0814d079e0":["80231a39fa20f6c8567eb4e3a3a0511630a97ac7"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"19e497fe4da591a79332da97681b8017d9c61165":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}