{"path":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsIndexReader#readHeader(IndexInput).mjava","commits":[{"id":"6066dbe072ec5334ff5824f474e9d3abd1620fb7","date":1278709584,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsIndexReader#readHeader(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, AppendingTermsIndexWriter.CODEC_NAME, AppendingTermsIndexWriter.VERSION_START);    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cd8367c3d48e4b63dee1895a261d4986c716bbb","date":1279637747,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsIndexReader#readHeader(IndexInput).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsIndexReader#readHeader(IndexInput).mjava","sourceNew":"  @Override\n  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, AppendingTermsIndexWriter.CODEC_NAME,\n      AppendingTermsIndexWriter.VERSION_START, AppendingTermsIndexWriter.VERSION_START);    \n  }\n\n","sourceOld":"  @Override\n  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, AppendingTermsIndexWriter.CODEC_NAME, AppendingTermsIndexWriter.VERSION_START);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsIndexReader#readHeader(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, AppendingTermsIndexWriter.CODEC_NAME,\n      AppendingTermsIndexWriter.VERSION_START, AppendingTermsIndexWriter.VERSION_START);    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7","date":1323207588,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsIndexReader#readHeader(IndexInput).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsIndexReader#readHeader(IndexInput).mjava","sourceNew":"  @Override\n  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, AppendingTermsIndexWriter.CODEC_NAME,\n      AppendingTermsIndexWriter.VERSION_START, AppendingTermsIndexWriter.VERSION_START);    \n  }\n\n","sourceOld":"  @Override\n  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, AppendingTermsIndexWriter.CODEC_NAME,\n      AppendingTermsIndexWriter.VERSION_START, AppendingTermsIndexWriter.VERSION_START);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"929d416aad35e36f2d2743c625e05e23908e7563","date":1323209095,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsIndexReader#readHeader(IndexInput).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingTermsIndexReader#readHeader(IndexInput).mjava","sourceNew":"  @Override\n  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, AppendingTermsIndexWriter.CODEC_NAME,\n      AppendingTermsIndexWriter.VERSION_START, AppendingTermsIndexWriter.VERSION_START);    \n  }\n\n","sourceOld":"  @Override\n  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, AppendingTermsIndexWriter.CODEC_NAME,\n      AppendingTermsIndexWriter.VERSION_START, AppendingTermsIndexWriter.VERSION_START);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"929d416aad35e36f2d2743c625e05e23908e7563":["0cd8367c3d48e4b63dee1895a261d4986c716bbb","9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7"],"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["6066dbe072ec5334ff5824f474e9d3abd1620fb7"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7":["0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7"]},"commit2Childs":{"929d416aad35e36f2d2743c625e05e23908e7563":[],"6066dbe072ec5334ff5824f474e9d3abd1620fb7":["0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6066dbe072ec5334ff5824f474e9d3abd1620fb7","5f4e87790277826a2aea119328600dfb07761f32"],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["929d416aad35e36f2d2743c625e05e23908e7563","5f4e87790277826a2aea119328600dfb07761f32","9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7"],"5f4e87790277826a2aea119328600dfb07761f32":[],"9eda19c7aeddd50f2d8bc261c8567cdeb7f094d7":["929d416aad35e36f2d2743c625e05e23908e7563","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["929d416aad35e36f2d2743c625e05e23908e7563","5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}