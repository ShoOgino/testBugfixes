{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws Exception {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","sourceOld":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws Exception {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6f80818731469e00f54165ec94aae2db868ea05","date":1343266866,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","sourceOld":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws Exception {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7788ecd3ff4cc7d31ea776ca656b01e9c4031494","date":1343346813,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws IOException\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","sourceOld":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws IOException\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","sourceOld":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws Exception {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws IOException\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","sourceOld":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws Exception\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws Exception {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","sourceOld":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws IOException\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e907a7662c29a0c348830bf6e36fc834249da77b","date":1358518195,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURI().toASCIIString()));\n  }\n\n","sourceOld":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","sourceNew":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURI().toASCIIString()));\n  }\n\n","sourceOld":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURL().toExternalForm()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","sourceNew":"  /**\n   * Create a hyphenator tree\n   *\n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws java.io.IOException If there is a low-level I/O error.\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURI().toASCIIString()));\n  }\n\n","sourceOld":"  /**\n   * Create a hyphenator tree\n   * \n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURI().toASCIIString()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/HyphenationCompoundWordTokenFilter#getHyphenationTree(File).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a hyphenator tree\n   *\n   * @param hyphenationFile the file of the XML grammar to load\n   * @return An object representing the hyphenation patterns\n   * @throws java.io.IOException If there is a low-level I/O error.\n   */\n  public static HyphenationTree getHyphenationTree(File hyphenationFile)\n      throws IOException {\n    return getHyphenationTree(new InputSource(hyphenationFile.toURI().toASCIIString()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["7788ecd3ff4cc7d31ea776ca656b01e9c4031494"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7788ecd3ff4cc7d31ea776ca656b01e9c4031494"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","e907a7662c29a0c348830bf6e36fc834249da77b"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["e907a7662c29a0c348830bf6e36fc834249da77b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7788ecd3ff4cc7d31ea776ca656b01e9c4031494"],"f6f80818731469e00f54165ec94aae2db868ea05":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"e907a7662c29a0c348830bf6e36fc834249da77b":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"7788ecd3ff4cc7d31ea776ca656b01e9c4031494":["f6f80818731469e00f54165ec94aae2db868ea05"],"f4abec28b874149a7223e32cc7a01704c27790de":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c4015cd39dff8d4dec562d909f9766debac53aa6","e907a7662c29a0c348830bf6e36fc834249da77b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","f6f80818731469e00f54165ec94aae2db868ea05"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["f4abec28b874149a7223e32cc7a01704c27790de"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"f6f80818731469e00f54165ec94aae2db868ea05":["7788ecd3ff4cc7d31ea776ca656b01e9c4031494"],"7788ecd3ff4cc7d31ea776ca656b01e9c4031494":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"e907a7662c29a0c348830bf6e36fc834249da77b":["c4015cd39dff8d4dec562d909f9766debac53aa6","379db3ad24c4f0214f30a122265a6d6be003a99d"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","c4015cd39dff8d4dec562d909f9766debac53aa6","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}