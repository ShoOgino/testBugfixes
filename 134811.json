{"path":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity#testAPIExclusivity().mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity#testAPIExclusivity().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAPIExclusivity() throws Exception {\n    int trials = 30;\n    setupBaseConfigSet(GRANDBASE_CONFIGSET_NAME);\n    CreateThread createBaseThread =\n        new CreateThread(solrCluster, BASE_CONFIGSET_NAME, GRANDBASE_CONFIGSET_NAME, trials);\n    CreateThread createThread =\n        new CreateThread(solrCluster, CONFIGSET_NAME, BASE_CONFIGSET_NAME, trials);\n    DeleteThread deleteBaseThread = new DeleteThread(solrCluster, BASE_CONFIGSET_NAME, trials);\n    DeleteThread deleteThread = new DeleteThread(solrCluster, CONFIGSET_NAME, trials);\n    List<ConfigSetsAPIThread> threads = Arrays.asList(\n        createBaseThread, createThread, deleteBaseThread, deleteThread);\n\n    for (ConfigSetsAPIThread thread : threads) {\n      thread.start();\n    }\n    for (ConfigSetsAPIThread thread : threads) {\n      thread.join();\n    }\n    List<Exception> exceptions = new LinkedList<Exception>();\n    for (ConfigSetsAPIThread thread : threads) {\n      exceptions.addAll(thread.getUnexpectedExceptions());\n    }\n    assertEquals(\"Unexpected exception: \" + getFirstExceptionOrNull(exceptions),\n        0, exceptions.size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f05a978efde7504001b41923af1403765a944d5","date":1440810978,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity#testAPIExclusivity().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIExclusivity#testAPIExclusivity().mjava","sourceNew":"  @Test\n  public void testAPIExclusivity() throws Exception {\n    int trials = 20;\n    setupBaseConfigSet(GRANDBASE_CONFIGSET_NAME);\n    CreateThread createBaseThread =\n        new CreateThread(solrCluster, BASE_CONFIGSET_NAME, GRANDBASE_CONFIGSET_NAME, trials);\n    CreateThread createThread =\n        new CreateThread(solrCluster, CONFIGSET_NAME, BASE_CONFIGSET_NAME, trials);\n    DeleteThread deleteBaseThread = new DeleteThread(solrCluster, BASE_CONFIGSET_NAME, trials);\n    DeleteThread deleteThread = new DeleteThread(solrCluster, CONFIGSET_NAME, trials);\n    List<ConfigSetsAPIThread> threads = Arrays.asList(\n        createBaseThread, createThread, deleteBaseThread, deleteThread);\n\n    for (ConfigSetsAPIThread thread : threads) {\n      thread.start();\n    }\n    for (ConfigSetsAPIThread thread : threads) {\n      thread.join();\n    }\n    List<Exception> exceptions = new LinkedList<Exception>();\n    for (ConfigSetsAPIThread thread : threads) {\n      exceptions.addAll(thread.getUnexpectedExceptions());\n    }\n    assertEquals(\"Unexpected exception: \" + getFirstExceptionOrNull(exceptions),\n        0, exceptions.size());\n  }\n\n","sourceOld":"  @Test\n  public void testAPIExclusivity() throws Exception {\n    int trials = 30;\n    setupBaseConfigSet(GRANDBASE_CONFIGSET_NAME);\n    CreateThread createBaseThread =\n        new CreateThread(solrCluster, BASE_CONFIGSET_NAME, GRANDBASE_CONFIGSET_NAME, trials);\n    CreateThread createThread =\n        new CreateThread(solrCluster, CONFIGSET_NAME, BASE_CONFIGSET_NAME, trials);\n    DeleteThread deleteBaseThread = new DeleteThread(solrCluster, BASE_CONFIGSET_NAME, trials);\n    DeleteThread deleteThread = new DeleteThread(solrCluster, CONFIGSET_NAME, trials);\n    List<ConfigSetsAPIThread> threads = Arrays.asList(\n        createBaseThread, createThread, deleteBaseThread, deleteThread);\n\n    for (ConfigSetsAPIThread thread : threads) {\n      thread.start();\n    }\n    for (ConfigSetsAPIThread thread : threads) {\n      thread.join();\n    }\n    List<Exception> exceptions = new LinkedList<Exception>();\n    for (ConfigSetsAPIThread thread : threads) {\n      exceptions.addAll(thread.getUnexpectedExceptions());\n    }\n    assertEquals(\"Unexpected exception: \" + getFirstExceptionOrNull(exceptions),\n        0, exceptions.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f05a978efde7504001b41923af1403765a944d5"],"3f05a978efde7504001b41923af1403765a944d5":["2209af2c265d2258ec4b29c8cc78622d36994a15"]},"commit2Childs":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["3f05a978efde7504001b41923af1403765a944d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3f05a978efde7504001b41923af1403765a944d5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}