{"path":"solr/core/src/java/org/apache/solr/metrics/reporters/solr/SolrReporter.Builder#build(HttpClient,Supplier[String]).mjava","commits":[{"id":"073f1aa70444ec64f3e216816af2a3b43fa38fe7","date":1488920481,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/solr/SolrReporter.Builder#build(HttpClient,Supplier[String]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Build it.\n     * @param client an instance of {@link HttpClient} to be used for making calls.\n     * @param urlProvider function that returns the base URL of Solr instance to target. May return\n     *                    null to indicate that reporting should be skipped. Note: this\n     *                    function will be called every time just before report is sent.\n     * @return configured instance of reporter\n     */\n    public SolrReporter build(HttpClient client, Supplier<String> urlProvider) {\n      return new SolrReporter(client, urlProvider, metricManager, reports, handler, reporterId, rateUnit, durationUnit,\n          params, skipHistograms, skipAggregateValues, cloudClient);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daeaac5f7b42498079f0fb7c3a91802e588fc21a","date":1493066118,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/solr/SolrReporter.Builder#build(HttpClient,Supplier[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/reporters/solr/SolrReporter.Builder#build(HttpClient,Supplier[String]).mjava","sourceNew":"    /**\n     * Build it.\n     * @param client an instance of {@link HttpClient} to be used for making calls.\n     * @param urlProvider function that returns the base URL of Solr instance to target. May return\n     *                    null to indicate that reporting should be skipped. Note: this\n     *                    function will be called every time just before report is sent.\n     * @return configured instance of reporter\n     */\n    public SolrReporter build(HttpClient client, Supplier<String> urlProvider) {\n      return new SolrReporter(client, urlProvider, metricManager, reports, handler, reporterId, rateUnit, durationUnit,\n          params, skipHistograms, skipAggregateValues, cloudClient, compact);\n    }\n\n","sourceOld":"    /**\n     * Build it.\n     * @param client an instance of {@link HttpClient} to be used for making calls.\n     * @param urlProvider function that returns the base URL of Solr instance to target. May return\n     *                    null to indicate that reporting should be skipped. Note: this\n     *                    function will be called every time just before report is sent.\n     * @return configured instance of reporter\n     */\n    public SolrReporter build(HttpClient client, Supplier<String> urlProvider) {\n      return new SolrReporter(client, urlProvider, metricManager, reports, handler, reporterId, rateUnit, durationUnit,\n          params, skipHistograms, skipAggregateValues, cloudClient);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/solr/SolrReporter.Builder#build(HttpClient,Supplier[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/reporters/solr/SolrReporter.Builder#build(HttpClient,Supplier[String]).mjava","sourceNew":"    /**\n     * Build it.\n     * @param client an instance of {@link HttpClient} to be used for making calls.\n     * @param urlProvider function that returns the base URL of Solr instance to target. May return\n     *                    null to indicate that reporting should be skipped. Note: this\n     *                    function will be called every time just before report is sent.\n     * @return configured instance of reporter\n     */\n    public SolrReporter build(HttpClient client, Supplier<String> urlProvider) {\n      return new SolrReporter(client, urlProvider, metricManager, reports, handler, reporterId, rateUnit, durationUnit,\n          params, skipHistograms, skipAggregateValues, cloudClient, compact);\n    }\n\n","sourceOld":"    /**\n     * Build it.\n     * @param client an instance of {@link HttpClient} to be used for making calls.\n     * @param urlProvider function that returns the base URL of Solr instance to target. May return\n     *                    null to indicate that reporting should be skipped. Note: this\n     *                    function will be called every time just before report is sent.\n     * @return configured instance of reporter\n     */\n    public SolrReporter build(HttpClient client, Supplier<String> urlProvider) {\n      return new SolrReporter(client, urlProvider, metricManager, reports, handler, reporterId, rateUnit, durationUnit,\n          params, skipHistograms, skipAggregateValues, cloudClient);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2022c62013ac31ba0bed28b0f0e6faf9af8dd2aa","date":1589312640,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/solr/SolrReporter.Builder#build(HttpClient,Supplier[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/reporters/solr/SolrReporter.Builder#build(HttpClient,Supplier[String]).mjava","sourceNew":"    /**\n     * Build it.\n     * @param client an instance of {@link HttpClient} to be used for making calls.\n     * @param urlProvider function that returns the base URL of Solr instance to target. May return\n     *                    null to indicate that reporting should be skipped. Note: this\n     *                    function will be called every time just before report is sent.\n     * @return configured instance of reporter\n     * @deprecated use {@link #build(SolrClientCache, Supplier)} instead.\n     */\n    public SolrReporter build(HttpClient client, Supplier<String> urlProvider) {\n      return new SolrReporter(client, urlProvider, metricManager, reports, handler, reporterId, rateUnit, durationUnit,\n          params, skipHistograms, skipAggregateValues, cloudClient, compact);\n    }\n\n","sourceOld":"    /**\n     * Build it.\n     * @param client an instance of {@link HttpClient} to be used for making calls.\n     * @param urlProvider function that returns the base URL of Solr instance to target. May return\n     *                    null to indicate that reporting should be skipped. Note: this\n     *                    function will be called every time just before report is sent.\n     * @return configured instance of reporter\n     */\n    public SolrReporter build(HttpClient client, Supplier<String> urlProvider) {\n      return new SolrReporter(client, urlProvider, metricManager, reports, handler, reporterId, rateUnit, durationUnit,\n          params, skipHistograms, skipAggregateValues, cloudClient, compact);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd25fa3647fa73152703b8dccb4fb5f43633de20","date":1592060458,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/reporters/solr/SolrReporter.Builder#build(HttpClient,Supplier[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/reporters/solr/SolrReporter.Builder#build(HttpClient,Supplier[String]).mjava","sourceNew":"    /**\n     * Build it.\n     * @param client an instance of {@link HttpClient} to be used for making calls.\n     * @param urlProvider function that returns the base URL of Solr instance to target. May return\n     *                    null to indicate that reporting should be skipped. Note: this\n     *                    function will be called every time just before report is sent.\n     * @return configured instance of reporter\n     * @deprecated use {@link #build(SolrClientCache, Supplier)} instead.\n     */\n    @Deprecated\n    public SolrReporter build(HttpClient client, Supplier<String> urlProvider) {\n      return new SolrReporter(client, urlProvider, metricManager, reports, handler, reporterId, rateUnit, durationUnit,\n          params, skipHistograms, skipAggregateValues, cloudClient, compact);\n    }\n\n","sourceOld":"    /**\n     * Build it.\n     * @param client an instance of {@link HttpClient} to be used for making calls.\n     * @param urlProvider function that returns the base URL of Solr instance to target. May return\n     *                    null to indicate that reporting should be skipped. Note: this\n     *                    function will be called every time just before report is sent.\n     * @return configured instance of reporter\n     * @deprecated use {@link #build(SolrClientCache, Supplier)} instead.\n     */\n    public SolrReporter build(HttpClient client, Supplier<String> urlProvider) {\n      return new SolrReporter(client, urlProvider, metricManager, reports, handler, reporterId, rateUnit, durationUnit,\n          params, skipHistograms, skipAggregateValues, cloudClient, compact);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["073f1aa70444ec64f3e216816af2a3b43fa38fe7","daeaac5f7b42498079f0fb7c3a91802e588fc21a"],"2022c62013ac31ba0bed28b0f0e6faf9af8dd2aa":["daeaac5f7b42498079f0fb7c3a91802e588fc21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["2022c62013ac31ba0bed28b0f0e6faf9af8dd2aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd25fa3647fa73152703b8dccb4fb5f43633de20"],"daeaac5f7b42498079f0fb7c3a91802e588fc21a":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"2022c62013ac31ba0bed28b0f0e6faf9af8dd2aa":["bd25fa3647fa73152703b8dccb4fb5f43633de20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["e9017cf144952056066919f1ebc7897ff9bd71b1","daeaac5f7b42498079f0fb7c3a91802e588fc21a"],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"daeaac5f7b42498079f0fb7c3a91802e588fc21a":["e9017cf144952056066919f1ebc7897ff9bd71b1","2022c62013ac31ba0bed28b0f0e6faf9af8dd2aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}