{"path":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","commits":[{"id":"671279fa1676e7f2755c2745a25abd77a169f992","date":1312053489,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","pathOld":"/dev/null","sourceNew":"  /** Creates and returns a lucene Document to index.  Any changes made to the returned Document\n   * will not be reflected in the SolrInputDocument, or future calls to this method.\n   */\n   public Document getLuceneDocument() {\n     return DocumentBuilder.toDocument(getSolrInputDocument(), req.getSchema());\n   }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","sourceNew":"  /** Creates and returns a lucene Document to index.  Any changes made to the returned Document\n   * will not be reflected in the SolrInputDocument, or future calls to this method. This defaults\n   * to false for the inPlaceUpdate parameter of {@link #getLuceneDocument(boolean)}.\n   */\n   public Document getLuceneDocument() {\n     return getLuceneDocument(false);\n   }\n\n","sourceOld":"  /** Creates and returns a lucene Document to index.  Any changes made to the returned Document\n   * will not be reflected in the SolrInputDocument, or future calls to this method.\n   */\n   public Document getLuceneDocument() {\n     return DocumentBuilder.toDocument(getSolrInputDocument(), req.getSchema());\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","sourceNew":"  /** Creates and returns a lucene Document to index.  Any changes made to the returned Document\n   * will not be reflected in the SolrInputDocument, or future calls to this method. This defaults\n   * to false for the inPlaceUpdate parameter of {@link #getLuceneDocument(boolean)}.\n   */\n   public Document getLuceneDocument() {\n     return getLuceneDocument(false);\n   }\n\n","sourceOld":"  /** Creates and returns a lucene Document to index.  Any changes made to the returned Document\n   * will not be reflected in the SolrInputDocument, or future calls to this method.\n   */\n   public Document getLuceneDocument() {\n     return DocumentBuilder.toDocument(getSolrInputDocument(), req.getSchema());\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5ce7c704ca874aa623a99f2669737b52ec71cfc","date":1528728510,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","sourceNew":"  /**\n   * Creates and returns a lucene Document to index.\n   * Nested documents, if found, will cause an exception to be thrown.  Call {@link #getLuceneDocsIfNested()} for that.\n   * Any changes made to the returned Document will not be reflected in the SolrInputDocument, or future calls to this\n   * method.\n   * Note that the behavior of this is sensitive to {@link #isInPlaceUpdate()}.\n   */\n   public Document getLuceneDocument() {\n     final boolean ignoreNestedDocs = false; // throw an exception if found\n     return DocumentBuilder.toDocument(getSolrInputDocument(), req.getSchema(), isInPlaceUpdate(), ignoreNestedDocs);\n   }\n\n","sourceOld":"  /** Creates and returns a lucene Document to index.  Any changes made to the returned Document\n   * will not be reflected in the SolrInputDocument, or future calls to this method. This defaults\n   * to false for the inPlaceUpdate parameter of {@link #getLuceneDocument(boolean)}.\n   */\n   public Document getLuceneDocument() {\n     return getLuceneDocument(false);\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","sourceNew":"  /**\n   * Creates and returns a lucene Document to index.\n   * Nested documents, if found, will cause an exception to be thrown.  Call {@link #getLuceneDocsIfNested()} for that.\n   * Any changes made to the returned Document will not be reflected in the SolrInputDocument, or future calls to this\n   * method.\n   * Note that the behavior of this is sensitive to {@link #isInPlaceUpdate()}.\n   */\n   public Document getLuceneDocument() {\n     final boolean ignoreNestedDocs = false; // throw an exception if found\n     return DocumentBuilder.toDocument(getSolrInputDocument(), req.getSchema(), isInPlaceUpdate(), ignoreNestedDocs);\n   }\n\n","sourceOld":"  /** Creates and returns a lucene Document to index.  Any changes made to the returned Document\n   * will not be reflected in the SolrInputDocument, or future calls to this method. This defaults\n   * to false for the inPlaceUpdate parameter of {@link #getLuceneDocument(boolean)}.\n   */\n   public Document getLuceneDocument() {\n     return getLuceneDocument(false);\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","sourceNew":"  /**\n   * Creates and returns a lucene Document to index.\n   * Nested documents, if found, will cause an exception to be thrown.  Call {@link #getLuceneDocsIfNested()} for that.\n   * Any changes made to the returned Document will not be reflected in the SolrInputDocument, or future calls to this\n   * method.\n   * Note that the behavior of this is sensitive to {@link #isInPlaceUpdate()}.\n   */\n   public Document getLuceneDocument() {\n     final boolean ignoreNestedDocs = false; // throw an exception if found\n     return DocumentBuilder.toDocument(getSolrInputDocument(), req.getSchema(), isInPlaceUpdate(), ignoreNestedDocs);\n   }\n\n","sourceOld":"  /** Creates and returns a lucene Document to index.  Any changes made to the returned Document\n   * will not be reflected in the SolrInputDocument, or future calls to this method. This defaults\n   * to false for the inPlaceUpdate parameter of {@link #getLuceneDocument(boolean)}.\n   */\n   public Document getLuceneDocument() {\n     return getLuceneDocument(false);\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa4f44656c8081bbc63325a83abdb025eafd5a2b","date":1543200469,"type":3,"author":"Moshe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","sourceNew":"  /**\n   * Creates and returns a lucene Document to index.\n   * Nested documents, if found, will cause an exception to be thrown.  Call {@link #getLuceneDocsIfNested()} for that.\n   * Any changes made to the returned Document will not be reflected in the SolrInputDocument, or future calls to this\n   * method.\n   * Note that the behavior of this is sensitive to {@link #isInPlaceUpdate()}.*/\n   public Document getLuceneDocument() {\n     final boolean ignoreNestedDocs = false; // throw an exception if found\n     SolrInputDocument solrInputDocument = getSolrInputDocument();\n     if (!isInPlaceUpdate() && getReq().getSchema().isUsableForChildDocs()) {\n       addRootField(solrInputDocument, getHashableId());\n     }\n     return DocumentBuilder.toDocument(solrInputDocument, req.getSchema(), isInPlaceUpdate(), ignoreNestedDocs);\n   }\n\n","sourceOld":"  /**\n   * Creates and returns a lucene Document to index.\n   * Nested documents, if found, will cause an exception to be thrown.  Call {@link #getLuceneDocsIfNested()} for that.\n   * Any changes made to the returned Document will not be reflected in the SolrInputDocument, or future calls to this\n   * method.\n   * Note that the behavior of this is sensitive to {@link #isInPlaceUpdate()}.\n   */\n   public Document getLuceneDocument() {\n     final boolean ignoreNestedDocs = false; // throw an exception if found\n     return DocumentBuilder.toDocument(getSolrInputDocument(), req.getSchema(), isInPlaceUpdate(), ignoreNestedDocs);\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07749612bed4eb54dd05255c1434c301133310c1","date":1554879779,"type":3,"author":"Moshe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/AddUpdateCommand#getLuceneDocument().mjava","sourceNew":"  /**\n   * Creates and returns a lucene Document to index.\n   * Nested documents, if found, will cause an exception to be thrown.  Call {@link #getLuceneDocsIfNested()} for that.\n   * Any changes made to the returned Document will not be reflected in the SolrInputDocument, or future calls to this\n   * method.\n   * Note that the behavior of this is sensitive to {@link #isInPlaceUpdate()}.*/\n   public Document getLuceneDocument() {\n     final boolean ignoreNestedDocs = false; // throw an exception if found\n     SolrInputDocument solrInputDocument = getSolrInputDocument();\n     if (!isInPlaceUpdate() && getReq().getSchema().isUsableForChildDocs()) {\n       addRootField(solrInputDocument, getRootIdUsingRouteParam());\n     }\n     return DocumentBuilder.toDocument(solrInputDocument, req.getSchema(), isInPlaceUpdate(), ignoreNestedDocs);\n   }\n\n","sourceOld":"  /**\n   * Creates and returns a lucene Document to index.\n   * Nested documents, if found, will cause an exception to be thrown.  Call {@link #getLuceneDocsIfNested()} for that.\n   * Any changes made to the returned Document will not be reflected in the SolrInputDocument, or future calls to this\n   * method.\n   * Note that the behavior of this is sensitive to {@link #isInPlaceUpdate()}.*/\n   public Document getLuceneDocument() {\n     final boolean ignoreNestedDocs = false; // throw an exception if found\n     SolrInputDocument solrInputDocument = getSolrInputDocument();\n     if (!isInPlaceUpdate() && getReq().getSchema().isUsableForChildDocs()) {\n       addRootField(solrInputDocument, getHashableId());\n     }\n     return DocumentBuilder.toDocument(solrInputDocument, req.getSchema(), isInPlaceUpdate(), ignoreNestedDocs);\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["671279fa1676e7f2755c2745a25abd77a169f992"],"671279fa1676e7f2755c2745a25abd77a169f992":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aa4f44656c8081bbc63325a83abdb025eafd5a2b":["c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["415bbbe7da8065dd3c477bdc3c703c6425622998","c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["671279fa1676e7f2755c2745a25abd77a169f992","415bbbe7da8065dd3c477bdc3c703c6425622998"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"07749612bed4eb54dd05255c1434c301133310c1":["aa4f44656c8081bbc63325a83abdb025eafd5a2b"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["415bbbe7da8065dd3c477bdc3c703c6425622998"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["07749612bed4eb54dd05255c1434c301133310c1"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["415bbbe7da8065dd3c477bdc3c703c6425622998","c5ce7c704ca874aa623a99f2669737b52ec71cfc"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","598b5d23aa7c9732bf473c21a9cd309c44599394","c5ce7c704ca874aa623a99f2669737b52ec71cfc","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"671279fa1676e7f2755c2745a25abd77a169f992":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"aa4f44656c8081bbc63325a83abdb025eafd5a2b":["07749612bed4eb54dd05255c1434c301133310c1"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["671279fa1676e7f2755c2745a25abd77a169f992"],"07749612bed4eb54dd05255c1434c301133310c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["aa4f44656c8081bbc63325a83abdb025eafd5a2b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}