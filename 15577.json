{"path":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer#lesser(PhrasePositions,PhrasePositions).mjava","commits":[{"id":"2eaa5d4d2618a012373ae4574ebb6563933aa9f6","date":1331337973,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer#lesser(PhrasePositions,PhrasePositions).mjava","pathOld":"/dev/null","sourceNew":"  /** compare two pps, but only by position and offset */\n  private PhrasePositions lesser(PhrasePositions pp, PhrasePositions pp2) {\n    if (pp.position < pp2.position ||\n        (pp.position == pp2.position && pp.offset < pp2.offset)) {\n      return pp;\n    }\n    return pp2;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer#lesser(PhrasePositions,PhrasePositions).mjava","pathOld":"/dev/null","sourceNew":"  /** compare two pps, but only by position and offset */\n  private PhrasePositions lesser(PhrasePositions pp, PhrasePositions pp2) {\n    if (pp.position < pp2.position ||\n        (pp.position == pp2.position && pp.offset < pp2.offset)) {\n      return pp;\n    }\n    return pp2;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b11b9d5eaf9707760ca5151530830a825197023","date":1525941319,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#lesser(PhrasePositions,PhrasePositions).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer#lesser(PhrasePositions,PhrasePositions).mjava","sourceNew":"  /** compare two pps, but only by position and offset */\n  private PhrasePositions lesser(PhrasePositions pp, PhrasePositions pp2) {\n    if (pp.position < pp2.position ||\n        (pp.position == pp2.position && pp.offset < pp2.offset)) {\n      return pp;\n    }\n    return pp2;\n  }\n\n","sourceOld":"  /** compare two pps, but only by position and offset */\n  private PhrasePositions lesser(PhrasePositions pp, PhrasePositions pp2) {\n    if (pp.position < pp2.position ||\n        (pp.position == pp2.position && pp.offset < pp2.offset)) {\n      return pp;\n    }\n    return pp2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2eaa5d4d2618a012373ae4574ebb6563933aa9f6"],"2eaa5d4d2618a012373ae4574ebb6563933aa9f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3b11b9d5eaf9707760ca5151530830a825197023":["2eaa5d4d2618a012373ae4574ebb6563933aa9f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b11b9d5eaf9707760ca5151530830a825197023"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"2eaa5d4d2618a012373ae4574ebb6563933aa9f6":["38e3b736c7ca086d61b7dbb841c905ee115490da","3b11b9d5eaf9707760ca5151530830a825197023"],"3b11b9d5eaf9707760ca5151530830a825197023":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","2eaa5d4d2618a012373ae4574ebb6563933aa9f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}