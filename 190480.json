{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","commits":[{"id":"2ec08217282b5e9df023dcdff55c745ff68b1c7d","date":1359392781,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setCodec(getCodec());\n    conf.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d8cfa5f35ad55b831a4a78a03de723602870d47","date":1359393260,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setCodec(getCodec());\n    conf.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"003dc2cb64b06ce8caea28156505feb3c5059ba2","date":1359688932,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"/dev/null","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a7bf5332d569e3d07c4b248462f5d212e26e9af","date":1376929683,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (codecSupportsDocsWithField(\"dv\")) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12774649e77a6efccc3502c735c2893b52af6d6","date":1376964312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (codecSupportsDocsWithField(\"dv\")) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"487204058e79506a6ddba0065cfff810bc15b06a","date":1378216488,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField(\"dv\")) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"820c994610cafbde5892c00924bdf69fffaaf38f","date":1378227060,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField(\"dv\")) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.shutdown();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.shutdown();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.shutdown();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    dv.get(1, scratch);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.shutdown();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.shutdown();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.shutdown();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad2a673349939e48652bf304cccf673c3412198f","date":1409585169,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (codecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (codecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (defaultCodecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":["820c994610cafbde5892c00924bdf69fffaaf38f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(0, dv.nextDoc());\n    BytesRef scratch = dv.lookupOrd(dv.ordValue());\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    assertEquals(NO_MORE_DOCS, dv.nextDoc());\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (codecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(0, dv.nextDoc());\n    BytesRef scratch = dv.lookupOrd(dv.ordValue());\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    assertEquals(NO_MORE_DOCS, dv.nextDoc());\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (codecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testMissingSortedBytes().mjava","sourceNew":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(0, dv.nextDoc());\n    BytesRef scratch = dv.lookupOrd(dv.ordValue());\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    assertEquals(NO_MORE_DOCS, dv.nextDoc());\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMissingSortedBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(analyzer);\n    conf.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    // 2nd doc missing the DV field\n    iwriter.addDocument(new Document());\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    BytesRef scratch = dv.lookupOrd(dv.getOrd(0));\n    assertEquals(new BytesRef(\"hello world 2\"), scratch);\n    if (codecSupportsDocsWithField()) {\n      assertEquals(-1, dv.getOrd(1));\n    }\n    scratch = dv.get(1);\n    assertEquals(new BytesRef(\"\"), scratch);\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["d4d69c535930b5cce125cff868d40f6373dc27d4","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["d4d69c535930b5cce125cff868d40f6373dc27d4","d12774649e77a6efccc3502c735c2893b52af6d6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["d0ef034a4f10871667ae75181537775ddcf8ade4","ad2a673349939e48652bf304cccf673c3412198f"],"487204058e79506a6ddba0065cfff810bc15b06a":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","003dc2cb64b06ce8caea28156505feb3c5059ba2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"820c994610cafbde5892c00924bdf69fffaaf38f":["487204058e79506a6ddba0065cfff810bc15b06a"],"003dc2cb64b06ce8caea28156505feb3c5059ba2":["4d8cfa5f35ad55b831a4a78a03de723602870d47"],"d12774649e77a6efccc3502c735c2893b52af6d6":["1a7bf5332d569e3d07c4b248462f5d212e26e9af"],"1a7bf5332d569e3d07c4b248462f5d212e26e9af":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["820c994610cafbde5892c00924bdf69fffaaf38f"],"ad2a673349939e48652bf304cccf673c3412198f":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"4d8cfa5f35ad55b831a4a78a03de723602870d47":["2ec08217282b5e9df023dcdff55c745ff68b1c7d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"2ec08217282b5e9df023dcdff55c745ff68b1c7d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","487204058e79506a6ddba0065cfff810bc15b06a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","1a7bf5332d569e3d07c4b248462f5d212e26e9af"],"487204058e79506a6ddba0065cfff810bc15b06a":["820c994610cafbde5892c00924bdf69fffaaf38f"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","2ec08217282b5e9df023dcdff55c745ff68b1c7d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","ad2a673349939e48652bf304cccf673c3412198f"],"d12774649e77a6efccc3502c735c2893b52af6d6":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"003dc2cb64b06ce8caea28156505feb3c5059ba2":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"820c994610cafbde5892c00924bdf69fffaaf38f":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"1a7bf5332d569e3d07c4b248462f5d212e26e9af":["d12774649e77a6efccc3502c735c2893b52af6d6"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"ad2a673349939e48652bf304cccf673c3412198f":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4d8cfa5f35ad55b831a4a78a03de723602870d47":["003dc2cb64b06ce8caea28156505feb3c5059ba2"],"2ec08217282b5e9df023dcdff55c745ff68b1c7d":["4d8cfa5f35ad55b831a4a78a03de723602870d47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}