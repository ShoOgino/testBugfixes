{"path":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","commits":[{"id":"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656","date":1383680488,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(int docID) {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(int docID) throws IOException {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(int docID) {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(int docID) throws IOException {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(int docID) {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(int docID) throws IOException {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(int docID) {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a80a37ae73034270b57bfd57a44f8fcadc952fa0","date":1515440719,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","sourceNew":"  @Override\n  public void accumulate(int docID) throws IOException {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(int docID) throws IOException {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","sourceNew":"  @Override\n  public void accumulate(int docID) throws IOException {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(int docID) throws IOException {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":4,"author":"Mike Drob","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/EnumStatsValues[StatsValuesFactory]#accumulate(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void accumulate(int docID) throws IOException {\n    if (values.exists(docID)) {\n      Integer intValue = (Integer) values.objectVal(docID);\n      String stringValue = values.strVal(docID);\n      EnumFieldValue enumFieldValue = new EnumFieldValue(intValue, stringValue);\n      accumulate(enumFieldValue, 1);\n    } else {\n      missing();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["567c8d957d62e7e7bcf2ac9e7fb9bacb03182656","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["567c8d957d62e7e7bcf2ac9e7fb9bacb03182656"],"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["567c8d957d62e7e7bcf2ac9e7fb9bacb03182656","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["b94236357aaa22b76c10629851fe4e376e0cea82"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["b94236357aaa22b76c10629851fe4e376e0cea82","a80a37ae73034270b57bfd57a44f8fcadc952fa0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["567c8d957d62e7e7bcf2ac9e7fb9bacb03182656"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}