{"path":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/DocumentsPanelProvider.DocumentsTableModel#flags(org.apache.lucene.luke.models.documents.DocumentField).mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/DocumentsPanelProvider.DocumentsTableModel#flags(org.apache.lucene.luke.models.documents.DocumentField).mjava","pathOld":"/dev/null","sourceNew":"    private static String flags(org.apache.lucene.luke.models.documents.DocumentField f) {\n      StringBuilder sb = new StringBuilder();\n      // index options\n      if (f.getIdxOptions() == null || f.getIdxOptions() == IndexOptions.NONE) {\n        sb.append(\"-----\");\n      } else {\n        sb.append(\"I\");\n        switch (f.getIdxOptions()) {\n          case DOCS:\n            sb.append(\"d---\");\n            break;\n          case DOCS_AND_FREQS:\n            sb.append(\"df--\");\n            break;\n          case DOCS_AND_FREQS_AND_POSITIONS:\n            sb.append(\"dfp-\");\n            break;\n          case DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS:\n            sb.append(\"dfpo\");\n            break;\n          default:\n            sb.append(\"----\");\n        }\n      }\n      // has norm?\n      if (f.hasNorms()) {\n        sb.append(\"N\");\n      } else {\n        sb.append(\"-\");\n      }\n      // has payloads?\n      if (f.hasPayloads()) {\n        sb.append(\"P\");\n      } else {\n        sb.append(\"-\");\n      }\n      // stored?\n      if (f.isStored()) {\n        sb.append(\"S\");\n      } else {\n        sb.append(\"-\");\n      }\n      // binary?\n      if (f.getBinaryValue() != null) {\n        sb.append(\"B\");\n      } else {\n        sb.append(\"-\");\n      }\n      // numeric?\n      if (f.getNumericValue() == null) {\n        sb.append(\"----\");\n      } else {\n        sb.append(\"#\");\n        // try faking it\n        Number numeric = f.getNumericValue();\n        if (numeric instanceof Integer) {\n          sb.append(\"i32\");\n        } else if (numeric instanceof Long) {\n          sb.append(\"i64\");\n        } else if (numeric instanceof Float) {\n          sb.append(\"f32\");\n        } else if (numeric instanceof Double) {\n          sb.append(\"f64\");\n        } else if (numeric instanceof Short) {\n          sb.append(\"i16\");\n        } else if (numeric instanceof Byte) {\n          sb.append(\"i08\");\n        } else if (numeric instanceof BigDecimal) {\n          sb.append(\"b^d\");\n        } else if (numeric instanceof BigInteger) {\n          sb.append(\"b^i\");\n        } else {\n          sb.append(\"???\");\n        }\n      }\n      // has term vector?\n      if (f.hasTermVectors()) {\n        sb.append(\"V\");\n      } else {\n        sb.append(\"-\");\n      }\n      // doc values\n      if (f.getDvType() == null || f.getDvType() == DocValuesType.NONE) {\n        sb.append(\"-------\");\n      } else {\n        sb.append(\"D\");\n        switch (f.getDvType()) {\n          case NUMERIC:\n            sb.append(\"number\");\n            break;\n          case BINARY:\n            sb.append(\"binary\");\n            break;\n          case SORTED:\n            sb.append(\"sorted\");\n            break;\n          case SORTED_NUMERIC:\n            sb.append(\"srtnum\");\n            break;\n          case SORTED_SET:\n            sb.append(\"srtset\");\n            break;\n          default:\n            sb.append(\"??????\");\n        }\n      }\n      // point values\n      if (f.getPointDimensionCount() == 0) {\n        sb.append(\"----\");\n      } else {\n        sb.append(\"T\");\n        sb.append(f.getPointNumBytes());\n        sb.append(\"/\");\n        sb.append(f.getPointDimensionCount());\n      }\n      return sb.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f554f2d9b5456248ab6467b9d4f6015686797a6c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}