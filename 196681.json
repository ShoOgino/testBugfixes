{"path":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","pathOld":"src/java/org/apache/lucene/index/FieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  final void close() throws IOException {\n    if (!closed) {\n      if (fieldsStream != null) {\n        fieldsStream.close();\n      }\n      if (isOriginal) {\n        if (cloneableFieldsStream != null) {\n          cloneableFieldsStream.close();\n        }\n        if (cloneableIndexStream != null) {\n          cloneableIndexStream.close();\n        }\n      }\n      if (indexStream != null) {\n        indexStream.close();\n      }\n      fieldsStreamTL.close();\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  final void close() throws IOException {\n    if (!closed) {\n      if (fieldsStream != null) {\n        fieldsStream.close();\n      }\n      if (isOriginal) {\n        if (cloneableFieldsStream != null) {\n          cloneableFieldsStream.close();\n        }\n        if (cloneableIndexStream != null) {\n          cloneableIndexStream.close();\n        }\n      }\n      if (indexStream != null) {\n        indexStream.close();\n      }\n      fieldsStreamTL.close();\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","date":1295759448,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (fieldsStream != null) {\n        fieldsStream.close();\n      }\n      if (isOriginal) {\n        if (cloneableFieldsStream != null) {\n          cloneableFieldsStream.close();\n        }\n        if (cloneableIndexStream != null) {\n          cloneableIndexStream.close();\n        }\n      }\n      if (indexStream != null) {\n        indexStream.close();\n      }\n      fieldsStreamTL.close();\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  final void close() throws IOException {\n    if (!closed) {\n      if (fieldsStream != null) {\n        fieldsStream.close();\n      }\n      if (isOriginal) {\n        if (cloneableFieldsStream != null) {\n          cloneableFieldsStream.close();\n        }\n        if (cloneableIndexStream != null) {\n          cloneableIndexStream.close();\n        }\n      }\n      if (indexStream != null) {\n        indexStream.close();\n      }\n      fieldsStreamTL.close();\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (fieldsStream != null) {\n        fieldsStream.close();\n      }\n      if (isOriginal) {\n        if (cloneableFieldsStream != null) {\n          cloneableFieldsStream.close();\n        }\n        if (cloneableIndexStream != null) {\n          cloneableIndexStream.close();\n        }\n      }\n      if (indexStream != null) {\n        indexStream.close();\n      }\n      fieldsStreamTL.close();\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  final void close() throws IOException {\n    if (!closed) {\n      if (fieldsStream != null) {\n        fieldsStream.close();\n      }\n      if (isOriginal) {\n        if (cloneableFieldsStream != null) {\n          cloneableFieldsStream.close();\n        }\n        if (cloneableIndexStream != null) {\n          cloneableIndexStream.close();\n        }\n      }\n      if (indexStream != null) {\n        indexStream.close();\n      }\n      fieldsStreamTL.close();\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (fieldsStream != null) {\n        fieldsStream.close();\n      }\n      if (isOriginal) {\n        if (cloneableFieldsStream != null) {\n          cloneableFieldsStream.close();\n        }\n        if (cloneableIndexStream != null) {\n          cloneableIndexStream.close();\n        }\n      }\n      if (indexStream != null) {\n        indexStream.close();\n      }\n      fieldsStreamTL.close();\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  final void close() throws IOException {\n    if (!closed) {\n      if (fieldsStream != null) {\n        fieldsStream.close();\n      }\n      if (isOriginal) {\n        if (cloneableFieldsStream != null) {\n          cloneableFieldsStream.close();\n        }\n        if (cloneableIndexStream != null) {\n          cloneableIndexStream.close();\n        }\n      }\n      if (indexStream != null) {\n        indexStream.close();\n      }\n      fieldsStreamTL.close();\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c61ee18b40abd78015c77a335ad05ff77899a8d0","date":1310043002,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (isOriginal) {\n        IOUtils.closeSafely(false, fieldsStream, indexStream, fieldsStreamTL, cloneableFieldsStream, cloneableIndexStream);\n      } else {\n        IOUtils.closeSafely(false, fieldsStream, indexStream, fieldsStreamTL);\n      }\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (fieldsStream != null) {\n        fieldsStream.close();\n      }\n      if (isOriginal) {\n        if (cloneableFieldsStream != null) {\n          cloneableFieldsStream.close();\n        }\n        if (cloneableIndexStream != null) {\n          cloneableIndexStream.close();\n        }\n      }\n      if (indexStream != null) {\n        indexStream.close();\n      }\n      fieldsStreamTL.close();\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (isOriginal) {\n        IOUtils.closeSafely(false, fieldsStream, indexStream, fieldsStreamTL, cloneableFieldsStream, cloneableIndexStream);\n      } else {\n        IOUtils.closeSafely(false, fieldsStream, indexStream, fieldsStreamTL);\n      }\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (fieldsStream != null) {\n        fieldsStream.close();\n      }\n      if (isOriginal) {\n        if (cloneableFieldsStream != null) {\n          cloneableFieldsStream.close();\n        }\n        if (cloneableIndexStream != null) {\n          cloneableIndexStream.close();\n        }\n      }\n      if (indexStream != null) {\n        indexStream.close();\n      }\n      fieldsStreamTL.close();\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (isOriginal) {\n        IOUtils.closeSafely(false, fieldsStream, indexStream, fieldsStreamTL, cloneableFieldsStream, cloneableIndexStream);\n      } else {\n        IOUtils.closeSafely(false, fieldsStream, indexStream, fieldsStreamTL);\n      }\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (fieldsStream != null) {\n        fieldsStream.close();\n      }\n      if (isOriginal) {\n        if (cloneableFieldsStream != null) {\n          cloneableFieldsStream.close();\n        }\n        if (cloneableIndexStream != null) {\n          cloneableIndexStream.close();\n        }\n      }\n      if (indexStream != null) {\n        indexStream.close();\n      }\n      fieldsStreamTL.close();\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (isOriginal) {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL, cloneableFieldsStream, cloneableIndexStream);\n      } else {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL);\n      }\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (isOriginal) {\n        IOUtils.closeSafely(false, fieldsStream, indexStream, fieldsStreamTL, cloneableFieldsStream, cloneableIndexStream);\n      } else {\n        IOUtils.closeSafely(false, fieldsStream, indexStream, fieldsStreamTL);\n      }\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b1110660886afcc62f57e9af901cd3f5dd294bc","date":1317830374,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (isOriginal) {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL, cloneableFieldsStream, cloneableIndexStream);\n      } else {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL);\n      }\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (isOriginal) {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL, cloneableFieldsStream, cloneableIndexStream);\n      } else {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL);\n      }\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["c61ee18b40abd78015c77a335ad05ff77899a8d0"],"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1291e4568eb7d9463d751627596ef14baf4c1603":["b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","c61ee18b40abd78015c77a335ad05ff77899a8d0"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","c61ee18b40abd78015c77a335ad05ff77899a8d0"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9454a6510e2db155fb01faa5c049b06ece95fab9","b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b1110660886afcc62f57e9af901cd3f5dd294bc":["24230fe54121f9be9d85f2c2067536296785e421"],"c61ee18b40abd78015c77a335ad05ff77899a8d0":["b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b1110660886afcc62f57e9af901cd3f5dd294bc"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["9454a6510e2db155fb01faa5c049b06ece95fab9","b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["4b1110660886afcc62f57e9af901cd3f5dd294bc"],"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","29ef99d61cda9641b6250bf9567329a6e65f901d","c61ee18b40abd78015c77a335ad05ff77899a8d0","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4b1110660886afcc62f57e9af901cd3f5dd294bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c61ee18b40abd78015c77a335ad05ff77899a8d0":["24230fe54121f9be9d85f2c2067536296785e421","1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","29ef99d61cda9641b6250bf9567329a6e65f901d","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}