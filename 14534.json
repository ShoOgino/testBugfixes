{"path":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#refinePivotFacets(ResponseBuilder,ShardRequest).mjava","commits":[{"id":"92751ba9273251eab6a2e379ec42a1697a32ff96","date":1407954233,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#refinePivotFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"/dev/null","sourceNew":"  private void refinePivotFacets(ResponseBuilder rb, ShardRequest sreq) {\n    // This is after the shard has returned the refinement request\n    FacetInfo fi = rb._facetInfo;\n    for (ShardResponse srsp : sreq.responses) {\n      \n      int shardNumber = rb.getShardNum(srsp.getShard());\n      \n      NamedList facetCounts = (NamedList) srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      \n      @SuppressWarnings(\"unchecked\")\n      NamedList<List<NamedList<Object>>> pivotFacetResponsesFromShard \n        = (NamedList<List<NamedList<Object>>>) facetCounts.get(PIVOT_KEY);\n\n      if (null == pivotFacetResponsesFromShard) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"No pivot refinement response from shard: \" + srsp.getShard());\n      }\n      \n      for (Entry<String,List<NamedList<Object>>> pivotFacetResponseFromShard : pivotFacetResponsesFromShard) {\n        PivotFacet masterPivotFacet = fi.pivotFacets.get(pivotFacetResponseFromShard.getKey());\n        masterPivotFacet.mergeResponseFromShard(shardNumber, rb, pivotFacetResponseFromShard.getValue());  \n        masterPivotFacet.removeAllRefinementsForShard(shardNumber);\n      }\n    }\n    \n    if (allPivotFacetsAreFullyRefined(fi)) {\n      for (Entry<String,PivotFacet> pf : fi.pivotFacets) {\n        pf.getValue().queuePivotRefinementRequests();\n      }\n      reQueuePivotFacetShardRequests(rb);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e","date":1596664368,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#refinePivotFacets(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent#refinePivotFacets(ResponseBuilder,ShardRequest).mjava","sourceNew":"  private void refinePivotFacets(ResponseBuilder rb, ShardRequest sreq) {\n    // This is after the shard has returned the refinement request\n    FacetInfo fi = rb._facetInfo;\n    for (ShardResponse srsp : sreq.responses) {\n      \n      int shardNumber = rb.getShardNum(srsp.getShard());\n      \n      NamedList facetCounts = (NamedList) srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      \n      @SuppressWarnings(\"unchecked\")\n      NamedList<List<NamedList<Object>>> pivotFacetResponsesFromShard \n        = (NamedList<List<NamedList<Object>>>) facetCounts.get(PIVOT_KEY);\n\n      if (null == pivotFacetResponsesFromShard) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"No pivot refinement response from shard: \" + srsp.getShard());\n      }\n      \n      for (Entry<String,List<NamedList<Object>>> pivotFacetResponseFromShard : pivotFacetResponsesFromShard) {\n        PivotFacet aggregatedPivotFacet = fi.pivotFacets.get(pivotFacetResponseFromShard.getKey());\n        aggregatedPivotFacet.mergeResponseFromShard(shardNumber, rb, pivotFacetResponseFromShard.getValue());\n        aggregatedPivotFacet.removeAllRefinementsForShard(shardNumber);\n      }\n    }\n    \n    if (allPivotFacetsAreFullyRefined(fi)) {\n      for (Entry<String,PivotFacet> pf : fi.pivotFacets) {\n        pf.getValue().queuePivotRefinementRequests();\n      }\n      reQueuePivotFacetShardRequests(rb);\n    }\n  }\n\n","sourceOld":"  private void refinePivotFacets(ResponseBuilder rb, ShardRequest sreq) {\n    // This is after the shard has returned the refinement request\n    FacetInfo fi = rb._facetInfo;\n    for (ShardResponse srsp : sreq.responses) {\n      \n      int shardNumber = rb.getShardNum(srsp.getShard());\n      \n      NamedList facetCounts = (NamedList) srsp.getSolrResponse().getResponse().get(\"facet_counts\");\n      \n      @SuppressWarnings(\"unchecked\")\n      NamedList<List<NamedList<Object>>> pivotFacetResponsesFromShard \n        = (NamedList<List<NamedList<Object>>>) facetCounts.get(PIVOT_KEY);\n\n      if (null == pivotFacetResponsesFromShard) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                                \"No pivot refinement response from shard: \" + srsp.getShard());\n      }\n      \n      for (Entry<String,List<NamedList<Object>>> pivotFacetResponseFromShard : pivotFacetResponsesFromShard) {\n        PivotFacet masterPivotFacet = fi.pivotFacets.get(pivotFacetResponseFromShard.getKey());\n        masterPivotFacet.mergeResponseFromShard(shardNumber, rb, pivotFacetResponseFromShard.getValue());  \n        masterPivotFacet.removeAllRefinementsForShard(shardNumber);\n      }\n    }\n    \n    if (allPivotFacetsAreFullyRefined(fi)) {\n      for (Entry<String,PivotFacet> pf : fi.pivotFacets) {\n        pf.getValue().queuePivotRefinementRequests();\n      }\n      reQueuePivotFacetShardRequests(rb);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["92751ba9273251eab6a2e379ec42a1697a32ff96"],"92751ba9273251eab6a2e379ec42a1697a32ff96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"]},"commit2Childs":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"92751ba9273251eab6a2e379ec42a1697a32ff96":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["92751ba9273251eab6a2e379ec42a1697a32ff96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}