{"path":"src/java/org/apache/lucene/analysis/Token#hashCode().mjava","commits":[{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#hashCode().mjava","pathOld":"/dev/null","sourceNew":"  public int hashCode() {\n    initTermBuffer();\n    int code = termLength;\n    code = code * 31 + startOffset;\n    code = code * 31 + endOffset;\n    code = code * 31 + flags;\n    code = code * 31 + positionIncrement;\n    code = code * 31 + type.hashCode();\n    code = (payload == null ? code : code * 31 + payload.hashCode());\n    code = code * 31 + ArrayUtil.hashCode(termBuffer, 0, termLength);\n    return code;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#hashCode().mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    initTermBuffer();\n    int code = termLength;\n    code = code * 31 + startOffset;\n    code = code * 31 + endOffset;\n    code = code * 31 + flags;\n    code = code * 31 + positionIncrement;\n    code = code * 31 + type.hashCode();\n    code = (payload == null ? code : code * 31 + payload.hashCode());\n    code = code * 31 + ArrayUtil.hashCode(termBuffer, 0, termLength);\n    return code;\n  }\n\n","sourceOld":"  public int hashCode() {\n    initTermBuffer();\n    int code = termLength;\n    code = code * 31 + startOffset;\n    code = code * 31 + endOffset;\n    code = code * 31 + flags;\n    code = code * 31 + positionIncrement;\n    code = code * 31 + type.hashCode();\n    code = (payload == null ? code : code * 31 + payload.hashCode());\n    code = code * 31 + ArrayUtil.hashCode(termBuffer, 0, termLength);\n    return code;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66dab5a56cf3f9a3724b15a119a30fd77cbcb662","date":1268038828,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#hashCode().mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    int code = super.hashCode();\n    code = code * 31 + startOffset;\n    code = code * 31 + endOffset;\n    code = code * 31 + flags;\n    code = code * 31 + positionIncrement;\n    if (type != null)\n      code = code * 31 + type.hashCode();\n    if (payload != null)\n      code = code * 31 + payload.hashCode();\n    return code;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    initTermBuffer();\n    int code = termLength;\n    code = code * 31 + startOffset;\n    code = code * 31 + endOffset;\n    code = code * 31 + flags;\n    code = code * 31 + positionIncrement;\n    code = code * 31 + type.hashCode();\n    code = (payload == null ? code : code * 31 + payload.hashCode());\n    code = code * 31 + ArrayUtil.hashCode(termBuffer, 0, termLength);\n    return code;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/Token#hashCode().mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    int code = super.hashCode();\n    code = code * 31 + startOffset;\n    code = code * 31 + endOffset;\n    code = code * 31 + flags;\n    code = code * 31 + positionIncrement;\n    if (type != null)\n      code = code * 31 + type.hashCode();\n    if (payload != null)\n      code = code * 31 + payload.hashCode();\n    return code;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    int code = super.hashCode();\n    code = code * 31 + startOffset;\n    code = code * 31 + endOffset;\n    code = code * 31 + flags;\n    code = code * 31 + positionIncrement;\n    if (type != null)\n      code = code * 31 + type.hashCode();\n    if (payload != null)\n      code = code * 31 + payload.hashCode();\n    return code;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["8a9e385641d717e641408d8fbbc62be8fc766357"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"8a9e385641d717e641408d8fbbc62be8fc766357":["66dab5a56cf3f9a3724b15a119a30fd77cbcb662"],"66dab5a56cf3f9a3724b15a119a30fd77cbcb662":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}