{"path":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","commits":[{"id":"d678d05c645583cb2ee5c2d5565fba91462466ed","date":1132608924,"type":1,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","sourceNew":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(\n                                              new SimpleAnalyzer());\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    Query query = QueryParser.parse(\"partnum:Q36 AND SPACE\",\n                                    \"description\",\n                                    analyzer);\n\n    Hits hits = searcher.search(query);\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length());\n  }\n\n","sourceOld":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(\n                                              new SimpleAnalyzer());\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    Query query = QueryParser.parse(\"partnum:Q36 AND SPACE\",\n                                    \"description\",\n                                    analyzer);\n\n    Hits hits = searcher.search(query);\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"578f9b3279798e8411852fdd01ddf5cdf6b6365b","date":1132609586,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","sourceNew":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(new SimpleAnalyzer());\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    QueryParser queryParser = new QueryParser(\"description\", analyzer);\n    Query query = queryParser.parse(\"partnum:Q36 AND SPACE\");\n\n    Hits hits = searcher.search(query);\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length());\n  }\n\n","sourceOld":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(\n                                              new SimpleAnalyzer());\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    Query query = QueryParser.parse(\"partnum:Q36 AND SPACE\",\n                                    \"description\",\n                                    analyzer);\n\n    Hits hits = searcher.search(query);\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","sourceNew":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(new SimpleAnalyzer());\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    QueryParser queryParser = new QueryParser(\"description\", analyzer);\n    Query query = queryParser.parse(\"partnum:Q36 AND SPACE\");\n\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length);\n  }\n\n","sourceOld":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(new SimpleAnalyzer());\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    QueryParser queryParser = new QueryParser(\"description\", analyzer);\n    Query query = queryParser.parse(\"partnum:Q36 AND SPACE\");\n\n    Hits hits = searcher.search(query);\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","sourceNew":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(new SimpleAnalyzer());\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    QueryParser queryParser = new QueryParser(Version.LUCENE_CURRENT, \"description\", analyzer);\n    Query query = queryParser.parse(\"partnum:Q36 AND SPACE\");\n\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length);\n  }\n\n","sourceOld":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(new SimpleAnalyzer());\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    QueryParser queryParser = new QueryParser(\"description\", analyzer);\n    Query query = queryParser.parse(\"partnum:Q36 AND SPACE\");\n\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","sourceNew":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(new SimpleAnalyzer(Version.LUCENE_CURRENT));\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    QueryParser queryParser = new QueryParser(Version.LUCENE_CURRENT, \"description\", analyzer);\n    Query query = queryParser.parse(\"partnum:Q36 AND SPACE\");\n\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length);\n  }\n\n","sourceOld":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(new SimpleAnalyzer());\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    QueryParser queryParser = new QueryParser(Version.LUCENE_CURRENT, \"description\", analyzer);\n    Query query = queryParser.parse(\"partnum:Q36 AND SPACE\");\n\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","sourceNew":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(new SimpleAnalyzer(TEST_VERSION_CURRENT));\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    QueryParser queryParser = new QueryParser(TEST_VERSION_CURRENT, \"description\", analyzer);\n    Query query = queryParser.parse(\"partnum:Q36 AND SPACE\");\n\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length);\n  }\n\n","sourceOld":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(new SimpleAnalyzer(Version.LUCENE_CURRENT));\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    QueryParser queryParser = new QueryParser(Version.LUCENE_CURRENT, \"description\", analyzer);\n    Query query = queryParser.parse(\"partnum:Q36 AND SPACE\");\n\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestKeywordAnalyzer#testPerFieldAnalyzer().mjava","sourceNew":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(new SimpleAnalyzer(TEST_VERSION_CURRENT));\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    QueryParser queryParser = new QueryParser(TEST_VERSION_CURRENT, \"description\", analyzer);\n    Query query = queryParser.parse(\"partnum:Q36 AND SPACE\");\n\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length);\n  }\n\n","sourceOld":"  public void testPerFieldAnalyzer() throws Exception {\n    PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(new SimpleAnalyzer(TEST_VERSION_CURRENT));\n    analyzer.addAnalyzer(\"partnum\", new KeywordAnalyzer());\n\n    QueryParser queryParser = new QueryParser(TEST_VERSION_CURRENT, \"description\", analyzer);\n    Query query = queryParser.parse(\"partnum:Q36 AND SPACE\");\n\n    ScoreDoc[] hits = searcher.search(query, null, 1000).scoreDocs;\n    assertEquals(\"Q36 kept as-is\",\n              \"+partnum:Q36 +space\", query.toString(\"description\"));\n    assertEquals(\"doc found!\", 1, hits.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"578f9b3279798e8411852fdd01ddf5cdf6b6365b":["d678d05c645583cb2ee5c2d5565fba91462466ed"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["ba1116b3450a9c1642c89445d131b37344055245"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["578f9b3279798e8411852fdd01ddf5cdf6b6365b"],"d678d05c645583cb2ee5c2d5565fba91462466ed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"ba1116b3450a9c1642c89445d131b37344055245":["5af07783dbc171e26a694c4f7d735e30c2769faa"]},"commit2Childs":{"578f9b3279798e8411852fdd01ddf5cdf6b6365b":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d678d05c645583cb2ee5c2d5565fba91462466ed"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["ba1116b3450a9c1642c89445d131b37344055245"],"d678d05c645583cb2ee5c2d5565fba91462466ed":["578f9b3279798e8411852fdd01ddf5cdf6b6365b"],"ba1116b3450a9c1642c89445d131b37344055245":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}