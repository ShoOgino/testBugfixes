{"path":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int,PointValues,String).mjava","commits":[{"id":"c9ee4c03e3ee986704eeeb45c571d001905a6430","date":1462194267,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int,PointValues,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Create a {@link DocIdSetBuilder} instance that is optimized for\n   *  accumulating docs that match the given {@link PointValues}. */\n  public DocIdSetBuilder(int maxDoc, PointValues values, String field) throws IOException {\n    this(maxDoc, values.getDocCount(field), values.size(field));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30540ec27130887a9372c159e8fe971200f37727","date":1462223109,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int,PointValues,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Create a {@link DocIdSetBuilder} instance that is optimized for\n   *  accumulating docs that match the given {@link PointValues}. */\n  public DocIdSetBuilder(int maxDoc, PointValues values, String field) throws IOException {\n    this(maxDoc, values.getDocCount(field), values.size(field));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int,PointValues,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Create a {@link DocIdSetBuilder} instance that is optimized for\n   *  accumulating docs that match the given {@link PointValues}. */\n  public DocIdSetBuilder(int maxDoc, PointValues values, String field) throws IOException {\n    this(maxDoc, values.getDocCount(field), values.size(field));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"367f57e2ee85b7f7e28cfe73370a22cf67624f65","date":1476778467,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int,PointValues,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int,PointValues,String).mjava","sourceNew":"  /** Create a {@link DocIdSetBuilder} instance that is optimized for\n   *  accumulating docs that match the given {@link PointValues}. */\n  public DocIdSetBuilder(int maxDoc, PointValues values, String field) throws IOException {\n    this(maxDoc, values.getDocCount(), values.size());\n  }\n\n","sourceOld":"  /** Create a {@link DocIdSetBuilder} instance that is optimized for\n   *  accumulating docs that match the given {@link PointValues}. */\n  public DocIdSetBuilder(int maxDoc, PointValues values, String field) throws IOException {\n    this(maxDoc, values.getDocCount(field), values.size(field));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int,PointValues,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#DocIdSetBuilder(int,PointValues,String).mjava","sourceNew":"  /** Create a {@link DocIdSetBuilder} instance that is optimized for\n   *  accumulating docs that match the given {@link PointValues}. */\n  public DocIdSetBuilder(int maxDoc, PointValues values, String field) throws IOException {\n    this(maxDoc, values.getDocCount(), values.size());\n  }\n\n","sourceOld":"  /** Create a {@link DocIdSetBuilder} instance that is optimized for\n   *  accumulating docs that match the given {@link PointValues}. */\n  public DocIdSetBuilder(int maxDoc, PointValues values, String field) throws IOException {\n    this(maxDoc, values.getDocCount(field), values.size(field));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c9ee4c03e3ee986704eeeb45c571d001905a6430":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["30540ec27130887a9372c159e8fe971200f37727"],"30540ec27130887a9372c159e8fe971200f37727":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c9ee4c03e3ee986704eeeb45c571d001905a6430"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["55b50463286869f584cf849d1587a0fcd54d1dfa","367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","30540ec27130887a9372c159e8fe971200f37727"]},"commit2Childs":{"c9ee4c03e3ee986704eeeb45c571d001905a6430":["30540ec27130887a9372c159e8fe971200f37727"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9ee4c03e3ee986704eeeb45c571d001905a6430","30540ec27130887a9372c159e8fe971200f37727","55b50463286869f584cf849d1587a0fcd54d1dfa"],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"30540ec27130887a9372c159e8fe971200f37727":["367f57e2ee85b7f7e28cfe73370a22cf67624f65","55b50463286869f584cf849d1587a0fcd54d1dfa"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"55b50463286869f584cf849d1587a0fcd54d1dfa":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}