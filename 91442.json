{"path":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testHyphenationCompoundWordsDA().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testHyphenationCompoundWordsDA().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testHyphenationCompoundWordsDA().mjava","sourceNew":"  public void testHyphenationCompoundWordsDA() throws Exception {\n    String[] dict = { \"læse\", \"hest\" };\n\n    Reader reader = getHyphenationReader();\n\n    HyphenationTree hyphenator = HyphenationCompoundWordTokenFilter\n        .getHyphenationTree(reader);\n\n    HyphenationCompoundWordTokenFilter tf = new HyphenationCompoundWordTokenFilter(TEST_VERSION_CURRENT, \n        new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"min veninde som er lidt af en læsehest\")), hyphenator,\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n    assertTokenStreamContents(tf, \n        new String[] { \"min\", \"veninde\", \"som\", \"er\", \"lidt\", \"af\", \"en\", \"læsehest\", \"læse\", \"hest\" },\n        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }\n    );\n  }\n\n","sourceOld":"  public void testHyphenationCompoundWordsDA() throws Exception {\n    String[] dict = { \"læse\", \"hest\" };\n\n    Reader reader = getHyphenationReader();\n\n    HyphenationTree hyphenator = HyphenationCompoundWordTokenFilter\n        .getHyphenationTree(reader);\n\n    HyphenationCompoundWordTokenFilter tf = new HyphenationCompoundWordTokenFilter(TEST_VERSION_CURRENT, \n        new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"min veninde som er lidt af en læsehest\")), hyphenator,\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n    assertTokenStreamContents(tf, \n        new String[] { \"min\", \"veninde\", \"som\", \"er\", \"lidt\", \"af\", \"en\", \"læsehest\", \"læse\", \"hest\" },\n        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testHyphenationCompoundWordsDA().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testHyphenationCompoundWordsDA().mjava","sourceNew":"  public void testHyphenationCompoundWordsDA() throws Exception {\n    String[] dict = { \"læse\", \"hest\" };\n\n    Reader reader = getHyphenationReader();\n\n    HyphenationTree hyphenator = HyphenationCompoundWordTokenFilter\n        .getHyphenationTree(reader);\n\n    HyphenationCompoundWordTokenFilter tf = new HyphenationCompoundWordTokenFilter(TEST_VERSION_CURRENT, \n        new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"min veninde som er lidt af en læsehest\")), hyphenator,\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n    assertTokenStreamContents(tf, \n        new String[] { \"min\", \"veninde\", \"som\", \"er\", \"lidt\", \"af\", \"en\", \"læsehest\", \"læse\", \"hest\" },\n        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }\n    );\n  }\n\n","sourceOld":"  public void testHyphenationCompoundWordsDA() throws Exception {\n    String[] dict = { \"læse\", \"hest\" };\n\n    Reader reader = getHyphenationReader();\n\n    HyphenationTree hyphenator = HyphenationCompoundWordTokenFilter\n        .getHyphenationTree(reader);\n\n    HyphenationCompoundWordTokenFilter tf = new HyphenationCompoundWordTokenFilter(TEST_VERSION_CURRENT, \n        new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\n            \"min veninde som er lidt af en læsehest\")), hyphenator,\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n    assertTokenStreamContents(tf, \n        new String[] { \"min\", \"veninde\", \"som\", \"er\", \"lidt\", \"af\", \"en\", \"læsehest\", \"læse\", \"hest\" },\n        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0 }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}