{"path":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","commits":[{"id":"05f4c28bc6a6df30868753f35eb802cbff28ce5c","date":1469068146,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c738d774d160362ecfdc9887a5fa4beb421872b","date":1469112991,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7825da0fed0bd08a466fec72f7c6a18a2abb303d","date":1471466888,"type":6,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestDoubleRangeFieldQueries.DoubleRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7825da0fed0bd08a466fec72f7c6a18a2abb303d","date":1471466888,"type":6,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestFloatRangeFieldQueries.FloatRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7825da0fed0bd08a466fec72f7c6a18a2abb303d","date":1471466888,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestIntRangeFieldQueries.IntRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7825da0fed0bd08a466fec72f7c6a18a2abb303d","date":1471466888,"type":6,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":6,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestDoubleRangeFieldQueries.DoubleRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":6,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestFloatRangeFieldQueries.FloatRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestIntRangeFieldQueries.IntRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":6,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":6,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestDoubleRangeFieldQueries.DoubleRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":6,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestFloatRangeFieldQueries.FloatRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestIntRangeFieldQueries.IntRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":6,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#toString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/BaseRangeFieldQueryTestCase.Box#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      StringBuilder b = new StringBuilder();\n      b.append(\"Box(\");\n      b.append(min[0]);\n      b.append(\" TO \");\n      b.append(max[0]);\n      for (int d=1; d<min.length; ++d) {\n        b.append(\", \");\n        b.append(min[d]);\n        b.append(\" TO \");\n        b.append(max[d]);\n      }\n      b.append(\")\");\n\n      return b.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c738d774d160362ecfdc9887a5fa4beb421872b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","05f4c28bc6a6df30868753f35eb802cbff28ce5c"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["3c738d774d160362ecfdc9887a5fa4beb421872b","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"7825da0fed0bd08a466fec72f7c6a18a2abb303d":["3c738d774d160362ecfdc9887a5fa4beb421872b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05f4c28bc6a6df30868753f35eb802cbff28ce5c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["3c738d774d160362ecfdc9887a5fa4beb421872b","7825da0fed0bd08a466fec72f7c6a18a2abb303d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403d05f7f8d69b65659157eff1bc1d2717f04c66"]},"commit2Childs":{"3c738d774d160362ecfdc9887a5fa4beb421872b":["403d05f7f8d69b65659157eff1bc1d2717f04c66","7825da0fed0bd08a466fec72f7c6a18a2abb303d","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7825da0fed0bd08a466fec72f7c6a18a2abb303d":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3c738d774d160362ecfdc9887a5fa4beb421872b","05f4c28bc6a6df30868753f35eb802cbff28ce5c"],"05f4c28bc6a6df30868753f35eb802cbff28ce5c":["3c738d774d160362ecfdc9887a5fa4beb421872b"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}