{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilterFactory#parseType(String).mjava","commits":[{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilterFactory#parseType(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory#parseType(String).mjava","sourceNew":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return LOWER;\n    else if (s.equals(\"UPPER\"))\n      return UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","sourceOld":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return LOWER;\n    else if (s.equals(\"UPPER\"))\n      return UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilterFactory#parseType(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory#parseType(String).mjava","sourceNew":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return LOWER;\n    else if (s.equals(\"UPPER\"))\n      return UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","sourceOld":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return LOWER;\n    else if (s.equals(\"UPPER\"))\n      return UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilterFactory#parseType(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory#parseType(String).mjava","sourceNew":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return LOWER;\n    else if (s.equals(\"UPPER\"))\n      return UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","sourceOld":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return LOWER;\n    else if (s.equals(\"UPPER\"))\n      return UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilterFactory#parseType(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/WordDelimiterFilterFactory#parseType(String).mjava","sourceNew":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return LOWER;\n    else if (s.equals(\"UPPER\"))\n      return UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","sourceOld":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return LOWER;\n    else if (s.equals(\"UPPER\"))\n      return UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilterFactory#parseType(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilterFactory#parseType(String).mjava","sourceNew":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.LOWER;\n    else if (s.equals(\"UPPER\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","sourceOld":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return LOWER;\n    else if (s.equals(\"UPPER\"))\n      return UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilterFactory#parseType(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilterFactory#parseType(String).mjava","sourceNew":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return LOWER;\n    else if (s.equals(\"UPPER\"))\n      return UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","sourceOld":"  private Byte parseType(String s) {\n    if (s.equals(\"LOWER\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.LOWER;\n    else if (s.equals(\"UPPER\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.UPPER;\n    else if (s.equals(\"ALPHA\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.ALPHA;\n    else if (s.equals(\"DIGIT\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.DIGIT;\n    else if (s.equals(\"ALPHANUM\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.ALPHANUM;\n    else if (s.equals(\"SUBWORD_DELIM\"))\n      return org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter.SUBWORD_DELIM;\n    else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"]},"commit2Childs":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}