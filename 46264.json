{"path":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","commits":[{"id":"8797b4584f9c10520b8f985903790413b682f776","date":1288950293,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    Field f = newField(\"field\", \"abcd the\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n    OffsetAttribute offsetAtt = dpEnum.attributes().getAttribute(OffsetAttribute.class);\n    assertNotNull(offsetAtt);\n    assertEquals(2, termsEnum.totalTermFreq());\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, offsetAtt.startOffset());\n    assertEquals(4, offsetAtt.endOffset());\n\n    dpEnum.nextPosition();\n    assertEquals(9, offsetAtt.startOffset());\n    assertEquals(13, offsetAtt.endOffset());\n    assertEquals(DocsEnum.NO_MORE_DOCS, dpEnum.nextDoc());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermVectorOffsetInfo[] termOffsets = ((TermPositionVector) r.getTermFreqVector(0, \"field\")).getOffsets(0);\n    assertEquals(2, termOffsets.length);\n    assertEquals(0, termOffsets[0].getStartOffset());\n    assertEquals(4, termOffsets[0].getEndOffset());\n    assertEquals(9, termOffsets[1].getStartOffset());\n    assertEquals(13, termOffsets[1].getEndOffset());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n    OffsetAttribute offsetAtt = dpEnum.attributes().getAttribute(OffsetAttribute.class);\n    assertNotNull(offsetAtt);\n    assertEquals(2, termsEnum.totalTermFreq());\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, offsetAtt.startOffset());\n    assertEquals(4, offsetAtt.endOffset());\n\n    dpEnum.nextPosition();\n    assertEquals(9, offsetAtt.startOffset());\n    assertEquals(13, offsetAtt.endOffset());\n    assertEquals(DocsEnum.NO_MORE_DOCS, dpEnum.nextDoc());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n    OffsetAttribute offsetAtt = dpEnum.attributes().getAttribute(OffsetAttribute.class);\n    assertNotNull(offsetAtt);\n    assertEquals(2, termsEnum.totalTermFreq());\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, offsetAtt.startOffset());\n    assertEquals(4, offsetAtt.endOffset());\n\n    dpEnum.nextPosition();\n    assertEquals(9, offsetAtt.startOffset());\n    assertEquals(13, offsetAtt.endOffset());\n    assertEquals(DocsEnum.NO_MORE_DOCS, dpEnum.nextDoc());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n    OffsetAttribute offsetAtt = dpEnum.attributes().getAttribute(OffsetAttribute.class);\n    assertNotNull(offsetAtt);\n    assertEquals(2, termsEnum.totalTermFreq());\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, offsetAtt.startOffset());\n    assertEquals(4, offsetAtt.endOffset());\n\n    dpEnum.nextPosition();\n    assertEquals(9, offsetAtt.startOffset());\n    assertEquals(13, offsetAtt.endOffset());\n    assertEquals(DocsEnum.NO_MORE_DOCS, dpEnum.nextDoc());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n    OffsetAttribute offsetAtt = dpEnum.attributes().getAttribute(OffsetAttribute.class);\n    assertNotNull(offsetAtt);\n    assertEquals(2, termsEnum.totalTermFreq());\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, offsetAtt.startOffset());\n    assertEquals(4, offsetAtt.endOffset());\n\n    dpEnum.nextPosition();\n    assertEquals(9, offsetAtt.startOffset());\n    assertEquals(13, offsetAtt.endOffset());\n    assertEquals(DocsEnum.NO_MORE_DOCS, dpEnum.nextDoc());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n    OffsetAttribute offsetAtt = dpEnum.attributes().getAttribute(OffsetAttribute.class);\n    assertNotNull(offsetAtt);\n    assertEquals(2, termsEnum.totalTermFreq());\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, offsetAtt.startOffset());\n    assertEquals(4, offsetAtt.endOffset());\n\n    dpEnum.nextPosition();\n    assertEquals(9, offsetAtt.startOffset());\n    assertEquals(13, offsetAtt.endOffset());\n    assertEquals(DocsEnum.NO_MORE_DOCS, dpEnum.nextDoc());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir, true);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n    OffsetAttribute offsetAtt = dpEnum.attributes().getAttribute(OffsetAttribute.class);\n    assertNotNull(offsetAtt);\n    assertEquals(2, termsEnum.totalTermFreq());\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, offsetAtt.startOffset());\n    assertEquals(4, offsetAtt.endOffset());\n\n    dpEnum.nextPosition();\n    assertEquals(9, offsetAtt.startOffset());\n    assertEquals(13, offsetAtt.endOffset());\n    assertEquals(DocsEnum.NO_MORE_DOCS, dpEnum.nextDoc());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n    assertEquals(2, termsEnum.totalTermFreq());\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    dpEnum.nextPosition();\n    assertEquals(9, dpEnum.startOffset());\n    assertEquals(13, dpEnum.endOffset());\n    assertEquals(DocsEnum.NO_MORE_DOCS, dpEnum.nextDoc());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null);\n    OffsetAttribute offsetAtt = dpEnum.attributes().getAttribute(OffsetAttribute.class);\n    assertNotNull(offsetAtt);\n    assertEquals(2, termsEnum.totalTermFreq());\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, offsetAtt.startOffset());\n    assertEquals(4, offsetAtt.endOffset());\n\n    dpEnum.nextPosition();\n    assertEquals(9, offsetAtt.startOffset());\n    assertEquals(13, offsetAtt.endOffset());\n    assertEquals(DocsEnum.NO_MORE_DOCS, dpEnum.nextDoc());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTermVectorsWriter#testEndOffsetPositionStopFilter().mjava","sourceNew":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n    assertEquals(2, termsEnum.totalTermFreq());\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    dpEnum.nextPosition();\n    assertEquals(9, dpEnum.startOffset());\n    assertEquals(13, dpEnum.endOffset());\n    assertEquals(DocsEnum.NO_MORE_DOCS, dpEnum.nextDoc());\n\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1448\n  public void testEndOffsetPositionStopFilter() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true)));\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(true);\n    customType.setStoreTermVectorOffsets(true);\n    Field f = newField(\"field\", \"abcd the\", customType);\n    doc.add(f);\n    doc.add(f);\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader r = IndexReader.open(dir);\n    TermsEnum termsEnum = r.getTermVectors(0).terms(\"field\").iterator(null);\n    assertNotNull(termsEnum.next());\n    DocsAndPositionsEnum dpEnum = termsEnum.docsAndPositions(null, null, true);\n    assertEquals(2, termsEnum.totalTermFreq());\n\n    assertTrue(dpEnum.nextDoc() != DocsEnum.NO_MORE_DOCS);\n    dpEnum.nextPosition();\n    assertEquals(0, dpEnum.startOffset());\n    assertEquals(4, dpEnum.endOffset());\n\n    dpEnum.nextPosition();\n    assertEquals(9, dpEnum.startOffset());\n    assertEquals(13, dpEnum.endOffset());\n    assertEquals(DocsEnum.NO_MORE_DOCS, dpEnum.nextDoc());\n\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["3cc749c053615f5871f3b95715fe292f34e70a53","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8797b4584f9c10520b8f985903790413b682f776"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["85a883878c0af761245ab048babc63d099f835f3","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"3cc749c053615f5871f3b95715fe292f34e70a53":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3cc749c053615f5871f3b95715fe292f34e70a53"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8797b4584f9c10520b8f985903790413b682f776"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["8797b4584f9c10520b8f985903790413b682f776"],"8797b4584f9c10520b8f985903790413b682f776":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["8797b4584f9c10520b8f985903790413b682f776","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["3cc749c053615f5871f3b95715fe292f34e70a53","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3615ce4a1f785ae1b779244de52c6a7d99227e60"]},"commit2Childs":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85a883878c0af761245ab048babc63d099f835f3":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"8797b4584f9c10520b8f985903790413b682f776":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","8797b4584f9c10520b8f985903790413b682f776"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","31f025ae60076ae95274433f3fe8e6ace2857a87"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3cc749c053615f5871f3b95715fe292f34e70a53"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}