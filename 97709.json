{"path":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toSuggesterResult(NamedList[NamedList]).mjava","commits":[{"id":"7f2e96099703c24c0c63d27806ba7020626b649b","date":1385214372,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toSuggesterResult(NamedList[NamedList]).mjava","pathOld":"/dev/null","sourceNew":"  /** Convert NamedList (suggester response) to {@link SuggesterResult} */\n  private SuggesterResult toSuggesterResult(NamedList<NamedList> suggesterRespNamedList) {\n    SuggesterResult result = new SuggesterResult();\n    if (suggesterRespNamedList == null) {\n      return result;\n    }\n    NamedList suggestions = (NamedList) suggesterRespNamedList.get(SuggesterResultLabels.SUGGESTIONS);\n    if (suggestions != null) {\n      // for each token\n      for(int i = 0; i < suggestions.size() ; i++) {\n        String tokenString = suggestions.getName(i);\n        List<LookupResult> lookupResults = new ArrayList<>();\n        NamedList suggestion = (NamedList) suggestions.getVal(i);\n        // for each suggestion\n        for (int j = 0; j < suggestion.size(); j++) {\n          String property = suggestion.getName(j);\n          if (property.equals(SuggesterResultLabels.SUGGESTION)) {\n            NamedList suggestionEntry = (NamedList) suggestion.getVal(j);\n            String term = (String) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_TERM);\n            long weight = (long) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_WEIGHT);\n            String payload = (String) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_PAYLOAD);\n            LookupResult res = new LookupResult(new CharsRef(term), weight, new BytesRef(payload));\n            lookupResults.add(res);\n          }\n          result.add(tokenString, lookupResults);\n        }\n      }\n    } \n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62b8732cb451168644d19e4d6e4fcf7b07bafc3d","date":1385219983,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toSuggesterResult(NamedList[NamedList]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toSuggesterResult(NamedList[NamedList]).mjava","sourceNew":"  /** Convert NamedList (suggester response) to {@link SuggesterResult} */\n  private SuggesterResult toSuggesterResult(NamedList<NamedList> suggesterRespNamedList) {\n    SuggesterResult result = new SuggesterResult();\n    if (suggesterRespNamedList == null) {\n      return result;\n    }\n    NamedList suggestions = (NamedList) suggesterRespNamedList.get(SuggesterResultLabels.SUGGESTIONS);\n    if (suggestions != null) {\n      // for each token\n      for(int i = 0; i < suggestions.size() ; i++) {\n        String tokenString = suggestions.getName(i);\n        List<LookupResult> lookupResults = new ArrayList<LookupResult>();\n        NamedList suggestion = (NamedList) suggestions.getVal(i);\n        // for each suggestion\n        for (int j = 0; j < suggestion.size(); j++) {\n          String property = suggestion.getName(j);\n          if (property.equals(SuggesterResultLabels.SUGGESTION)) {\n            NamedList suggestionEntry = (NamedList) suggestion.getVal(j);\n            String term = (String) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_TERM);\n            Long weight = (Long) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_WEIGHT);\n            String payload = (String) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_PAYLOAD);\n            LookupResult res = new LookupResult(new CharsRef(term), weight, new BytesRef(payload));\n            lookupResults.add(res);\n          }\n          result.add(tokenString, lookupResults);\n        }\n      }\n    } \n    return result;\n  }\n\n","sourceOld":"  /** Convert NamedList (suggester response) to {@link SuggesterResult} */\n  private SuggesterResult toSuggesterResult(NamedList<NamedList> suggesterRespNamedList) {\n    SuggesterResult result = new SuggesterResult();\n    if (suggesterRespNamedList == null) {\n      return result;\n    }\n    NamedList suggestions = (NamedList) suggesterRespNamedList.get(SuggesterResultLabels.SUGGESTIONS);\n    if (suggestions != null) {\n      // for each token\n      for(int i = 0; i < suggestions.size() ; i++) {\n        String tokenString = suggestions.getName(i);\n        List<LookupResult> lookupResults = new ArrayList<>();\n        NamedList suggestion = (NamedList) suggestions.getVal(i);\n        // for each suggestion\n        for (int j = 0; j < suggestion.size(); j++) {\n          String property = suggestion.getName(j);\n          if (property.equals(SuggesterResultLabels.SUGGESTION)) {\n            NamedList suggestionEntry = (NamedList) suggestion.getVal(j);\n            String term = (String) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_TERM);\n            long weight = (long) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_WEIGHT);\n            String payload = (String) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_PAYLOAD);\n            LookupResult res = new LookupResult(new CharsRef(term), weight, new BytesRef(payload));\n            lookupResults.add(res);\n          }\n          result.add(tokenString, lookupResults);\n        }\n      }\n    } \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf2ccf302186b563c9549824a4d45db1e8cf8a0d","date":1387322051,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toSuggesterResult(NamedList[NamedList[Object]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#toSuggesterResult(NamedList[NamedList]).mjava","sourceNew":"  /** Convert NamedList (suggester response) to {@link SuggesterResult} */\n  private SuggesterResult toSuggesterResult(NamedList<NamedList<Object>> suggestions) {\n    SuggesterResult result = new SuggesterResult();\n    if (suggestions == null) {\n      return result;\n    }\n    // for each token\n    for(int i = 0; i < suggestions.size() ; i++) {\n      String tokenString = suggestions.getName(i);\n      List<LookupResult> lookupResults = new ArrayList<LookupResult>();\n      NamedList<Object> suggestion = (NamedList<Object>) suggestions.getVal(i);\n      // for each suggestion\n      for (int j = 0; j < suggestion.size(); j++) {\n        String property = suggestion.getName(j);\n        if (property.equals(SuggesterResultLabels.SUGGESTIONS)) {\n          @SuppressWarnings(\"unchecked\")\n          List<NamedList<Object>> suggestionEntries = (List<NamedList<Object>>) suggestion.getVal(j);\n          for(NamedList<Object> suggestionEntry : suggestionEntries) {\n            String term = (String) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_TERM);\n            Long weight = (Long) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_WEIGHT);\n            String payload = (String) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_PAYLOAD);\n            LookupResult res = new LookupResult(new CharsRef(term), weight, new BytesRef(payload));\n            lookupResults.add(res);\n          }\n        }\n        result.add(tokenString, lookupResults);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  /** Convert NamedList (suggester response) to {@link SuggesterResult} */\n  private SuggesterResult toSuggesterResult(NamedList<NamedList> suggesterRespNamedList) {\n    SuggesterResult result = new SuggesterResult();\n    if (suggesterRespNamedList == null) {\n      return result;\n    }\n    NamedList suggestions = (NamedList) suggesterRespNamedList.get(SuggesterResultLabels.SUGGESTIONS);\n    if (suggestions != null) {\n      // for each token\n      for(int i = 0; i < suggestions.size() ; i++) {\n        String tokenString = suggestions.getName(i);\n        List<LookupResult> lookupResults = new ArrayList<LookupResult>();\n        NamedList suggestion = (NamedList) suggestions.getVal(i);\n        // for each suggestion\n        for (int j = 0; j < suggestion.size(); j++) {\n          String property = suggestion.getName(j);\n          if (property.equals(SuggesterResultLabels.SUGGESTION)) {\n            NamedList suggestionEntry = (NamedList) suggestion.getVal(j);\n            String term = (String) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_TERM);\n            Long weight = (Long) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_WEIGHT);\n            String payload = (String) suggestionEntry.get(SuggesterResultLabels.SUGGESTION_PAYLOAD);\n            LookupResult res = new LookupResult(new CharsRef(term), weight, new BytesRef(payload));\n            lookupResults.add(res);\n          }\n          result.add(tokenString, lookupResults);\n        }\n      }\n    } \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"62b8732cb451168644d19e4d6e4fcf7b07bafc3d":["7f2e96099703c24c0c63d27806ba7020626b649b"],"7f2e96099703c24c0c63d27806ba7020626b649b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bf2ccf302186b563c9549824a4d45db1e8cf8a0d":["62b8732cb451168644d19e4d6e4fcf7b07bafc3d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bf2ccf302186b563c9549824a4d45db1e8cf8a0d"]},"commit2Childs":{"62b8732cb451168644d19e4d6e4fcf7b07bafc3d":["bf2ccf302186b563c9549824a4d45db1e8cf8a0d"],"7f2e96099703c24c0c63d27806ba7020626b649b":["62b8732cb451168644d19e4d6e4fcf7b07bafc3d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f2e96099703c24c0c63d27806ba7020626b649b"],"bf2ccf302186b563c9549824a4d45db1e8cf8a0d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}