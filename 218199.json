{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#LBHttpSolrClient(Builder).mjava","commits":[{"id":"c07dc645ff236a7d51da2a5ef49a948dfbf8610c","date":1498242650,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#LBHttpSolrClient(Builder).mjava","pathOld":"/dev/null","sourceNew":"  protected LBHttpSolrClient(Builder builder) {\n    this.clientIsInternal = builder.httpClient == null;\n    this.httpSolrClientBuilder = builder.httpSolrClientBuilder;\n    this.httpClient = builder.httpClient == null ? constructClient(builder.baseSolrUrls.toArray(new String[builder.baseSolrUrls.size()])) : builder.httpClient;\n    \n    this.parser = builder.responseParser;\n\n    if (! builder.baseSolrUrls.isEmpty()) {\n      for (String s : builder.baseSolrUrls) {\n        ServerWrapper wrapper = new ServerWrapper(makeSolrClient(s));\n        aliveServers.put(wrapper.getKey(), wrapper);\n      }\n    }\n    updateAliveList();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#LBHttpSolrClient(Builder).mjava","pathOld":"/dev/null","sourceNew":"  protected LBHttpSolrClient(Builder builder) {\n    this.clientIsInternal = builder.httpClient == null;\n    this.httpSolrClientBuilder = builder.httpSolrClientBuilder;\n    this.httpClient = builder.httpClient == null ? constructClient(builder.baseSolrUrls.toArray(new String[builder.baseSolrUrls.size()])) : builder.httpClient;\n    \n    this.parser = builder.responseParser;\n\n    if (! builder.baseSolrUrls.isEmpty()) {\n      for (String s : builder.baseSolrUrls) {\n        ServerWrapper wrapper = new ServerWrapper(makeSolrClient(s));\n        aliveServers.put(wrapper.getKey(), wrapper);\n      }\n    }\n    updateAliveList();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#LBHttpSolrClient(Builder).mjava","pathOld":"/dev/null","sourceNew":"  protected LBHttpSolrClient(Builder builder) {\n    this.clientIsInternal = builder.httpClient == null;\n    this.httpSolrClientBuilder = builder.httpSolrClientBuilder;\n    this.httpClient = builder.httpClient == null ? constructClient(builder.baseSolrUrls.toArray(new String[builder.baseSolrUrls.size()])) : builder.httpClient;\n    \n    this.parser = builder.responseParser;\n\n    if (! builder.baseSolrUrls.isEmpty()) {\n      for (String s : builder.baseSolrUrls) {\n        ServerWrapper wrapper = new ServerWrapper(makeSolrClient(s));\n        aliveServers.put(wrapper.getKey(), wrapper);\n      }\n    }\n    updateAliveList();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43d1e498704edd2bba13548a189eed4dfccff11b","date":1499143458,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#LBHttpSolrClient(Builder).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#LBHttpSolrClient(Builder).mjava","sourceNew":"  protected LBHttpSolrClient(Builder builder) {\n    this.clientIsInternal = builder.httpClient == null;\n    this.httpSolrClientBuilder = builder.httpSolrClientBuilder;\n    this.httpClient = builder.httpClient == null ? constructClient(builder.baseSolrUrls.toArray(new String[builder.baseSolrUrls.size()])) : builder.httpClient;\n    this.connectionTimeout = builder.connectionTimeoutMillis;\n    this.soTimeout = builder.socketTimeoutMillis;    \n    this.parser = builder.responseParser;\n\n    if (! builder.baseSolrUrls.isEmpty()) {\n      for (String s : builder.baseSolrUrls) {\n        ServerWrapper wrapper = new ServerWrapper(makeSolrClient(s));\n        aliveServers.put(wrapper.getKey(), wrapper);\n      }\n    }\n    updateAliveList();\n  }\n\n","sourceOld":"  protected LBHttpSolrClient(Builder builder) {\n    this.clientIsInternal = builder.httpClient == null;\n    this.httpSolrClientBuilder = builder.httpSolrClientBuilder;\n    this.httpClient = builder.httpClient == null ? constructClient(builder.baseSolrUrls.toArray(new String[builder.baseSolrUrls.size()])) : builder.httpClient;\n    \n    this.parser = builder.responseParser;\n\n    if (! builder.baseSolrUrls.isEmpty()) {\n      for (String s : builder.baseSolrUrls) {\n        ServerWrapper wrapper = new ServerWrapper(makeSolrClient(s));\n        aliveServers.put(wrapper.getKey(), wrapper);\n      }\n    }\n    updateAliveList();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ea161f828a3a7a6eb9410a431aecda6d7ab1065","date":1499213384,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#LBHttpSolrClient(Builder).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#LBHttpSolrClient(Builder).mjava","sourceNew":"  protected LBHttpSolrClient(Builder builder) {\n    this.clientIsInternal = builder.httpClient == null;\n    this.httpSolrClientBuilder = builder.httpSolrClientBuilder;\n    this.httpClient = builder.httpClient == null ? constructClient(builder.baseSolrUrls.toArray(new String[builder.baseSolrUrls.size()])) : builder.httpClient;\n    this.connectionTimeout = builder.connectionTimeoutMillis;\n    this.soTimeout = builder.socketTimeoutMillis;    \n    this.parser = builder.responseParser;\n\n    if (! builder.baseSolrUrls.isEmpty()) {\n      for (String s : builder.baseSolrUrls) {\n        ServerWrapper wrapper = new ServerWrapper(makeSolrClient(s));\n        aliveServers.put(wrapper.getKey(), wrapper);\n      }\n    }\n    updateAliveList();\n  }\n\n","sourceOld":"  protected LBHttpSolrClient(Builder builder) {\n    this.clientIsInternal = builder.httpClient == null;\n    this.httpSolrClientBuilder = builder.httpSolrClientBuilder;\n    this.httpClient = builder.httpClient == null ? constructClient(builder.baseSolrUrls.toArray(new String[builder.baseSolrUrls.size()])) : builder.httpClient;\n    \n    this.parser = builder.responseParser;\n\n    if (! builder.baseSolrUrls.isEmpty()) {\n      for (String s : builder.baseSolrUrls) {\n        ServerWrapper wrapper = new ServerWrapper(makeSolrClient(s));\n        aliveServers.put(wrapper.getKey(), wrapper);\n      }\n    }\n    updateAliveList();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#LBHttpSolrClient(Builder).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#LBHttpSolrClient(Builder).mjava","sourceNew":"  protected LBHttpSolrClient(Builder builder) {\n    super(builder.baseSolrUrls);\n    this.clientIsInternal = builder.httpClient == null;\n    this.httpSolrClientBuilder = builder.httpSolrClientBuilder;\n    this.httpClient = builder.httpClient == null ? constructClient(builder.baseSolrUrls.toArray(new String[builder.baseSolrUrls.size()])) : builder.httpClient;\n    this.connectionTimeout = builder.connectionTimeoutMillis;\n    this.soTimeout = builder.socketTimeoutMillis;    \n    this.parser = builder.responseParser;\n    for (String baseUrl: builder.baseSolrUrls) {\n      urlToClient.put(baseUrl, makeSolrClient(baseUrl));\n    }\n  }\n\n","sourceOld":"  protected LBHttpSolrClient(Builder builder) {\n    this.clientIsInternal = builder.httpClient == null;\n    this.httpSolrClientBuilder = builder.httpSolrClientBuilder;\n    this.httpClient = builder.httpClient == null ? constructClient(builder.baseSolrUrls.toArray(new String[builder.baseSolrUrls.size()])) : builder.httpClient;\n    this.connectionTimeout = builder.connectionTimeoutMillis;\n    this.soTimeout = builder.socketTimeoutMillis;    \n    this.parser = builder.responseParser;\n\n    if (! builder.baseSolrUrls.isEmpty()) {\n      for (String s : builder.baseSolrUrls) {\n        ServerWrapper wrapper = new ServerWrapper(makeSolrClient(s));\n        aliveServers.put(wrapper.getKey(), wrapper);\n      }\n    }\n    updateAliveList();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"43d1e498704edd2bba13548a189eed4dfccff11b":["28288370235ed02234a64753cdbf0c6ec096304a"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["43d1e498704edd2bba13548a189eed4dfccff11b"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","43d1e498704edd2bba13548a189eed4dfccff11b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"c07dc645ff236a7d51da2a5ef49a948dfbf8610c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"43d1e498704edd2bba13548a189eed4dfccff11b":["1a77e5e21cbd575a8240b0e3926164f15295f4e8","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"28288370235ed02234a64753cdbf0c6ec096304a":["43d1e498704edd2bba13548a189eed4dfccff11b"],"c07dc645ff236a7d51da2a5ef49a948dfbf8610c":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2ea161f828a3a7a6eb9410a431aecda6d7ab1065","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}