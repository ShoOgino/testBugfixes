{"path":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermEnum#termCompare(Term).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermEnum#termCompare(Term).mjava","pathOld":"src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermEnum#termCompare(Term).mjava","sourceNew":"    /**\n     * Compares if current upper bound is reached.\n     * In contrast to {@link FilteredTermEnum}, a return value\n     * of <code>false</code> ends iterating the current enum\n     * and forwards to the next sub-range.\n     */\n    @Override\n    protected boolean termCompare(Term term) {\n      return (term.field() == field && term.text().compareTo(currentUpperBound) <= 0);\n    }\n\n","sourceOld":"    /**\n     * Compares if current upper bound is reached.\n     * In contrast to {@link FilteredTermEnum}, a return value\n     * of <code>false</code> ends iterating the current enum\n     * and forwards to the next sub-range.\n     */\n    @Override\n    protected boolean termCompare(Term term) {\n      return (term.field() == field && term.text().compareTo(currentUpperBound) <= 0);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery.NumericRangeTermEnum#termCompare(Term).mjava","sourceNew":null,"sourceOld":"    /**\n     * Compares if current upper bound is reached.\n     * In contrast to {@link FilteredTermEnum}, a return value\n     * of <code>false</code> ends iterating the current enum\n     * and forwards to the next sub-range.\n     */\n    @Override\n    protected boolean termCompare(Term term) {\n      return (term.field() == field && term.text().compareTo(currentUpperBound) <= 0);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}