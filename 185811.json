{"path":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"989d940c4bf402188f4f0ae13736836885227383","date":1412263633,"type":6,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40CompoundWriter.DirectCFSIndexOutput#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"989d940c4bf402188f4f0ae13736836885227383","date":1412263633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40CompoundWriter.DirectCFSIndexOutput#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"989d940c4bf402188f4f0ae13736836885227383":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","989d940c4bf402188f4f0ae13736836885227383"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"]},"commit2Childs":{"989d940c4bf402188f4f0ae13736836885227383":["9bb9a29a5e71a90295f175df8919802993142c9a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["989d940c4bf402188f4f0ae13736836885227383","9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}