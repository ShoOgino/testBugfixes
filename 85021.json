{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#StorageCoreController(Directory).mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#StorageCoreController(Directory).mjava","pathOld":"/dev/null","sourceNew":"    private StorageCoreController(final Directory dir) throws IOException, StorageException { \n        synchronized (StorageCoreController.class) { \n            try{ \n                this.idGenerator = new IDGenerator(10); \n            }catch (Exception e) { \n                throw new StorageException(\"Can't create ID Generator\",e); \n            } \n             \n            boolean createNewStorage = false; \n             \n            if(dir == null){ \n            this.configurator = StorageConfigurator.getStorageConfigurator(); \n            String storageDirPath = this.configurator.getStorageDirectory(); \n            File storeDir = new File(storageDirPath); \n            File storageLog = new File(storeDir.getAbsolutePath()+System.getProperty(\"file.separator\")+STORAGELOG); \n            try{ \n            if(storeDir.isDirectory() && !storageLog.exists()){ \n                 \n                if(createLuceneStorageLog(storeDir)){ \n                    this.storageDir = FSDirectory.getDirectory(storeDir,true); \n                    createNewStorage = true; \n                } \n                else \n                    throw new StorageException(\"could not create storage log file in \"+storageDirPath); \n                 \n            }else \n                this.storageDir = FSDirectory.getDirectory(storeDir,false); \n            }catch (IOException e) { \n                storageLog.delete(); \n                throw e; \n            } \n            this.indexOptimizeInterval = this.configurator.getIndexOptimizeInterval(); \n            this.storageBufferSize = this.configurator.getStorageBufferSize() < DEFAULT_STORAGE_BUFFER_SIZE?DEFAULT_STORAGE_BUFFER_SIZE:this.configurator.getStorageBufferSize(); \n            this.storagePersistFactor = this.configurator.getStoragepersistFactor() < DEFAULT_STORAGE_PERSIST_FACTOR? DEFAULT_STORAGE_PERSIST_FACTOR:this.configurator.getStoragepersistFactor(); \n             \n            } \n            else \n                this.storageDir = dir; \n             \n            this.currentBuffer = new StorageBuffer(this.storageBufferSize); \n            this.modifier = createStorageModifier(createNewStorage); \n            this.searcher = new IndexSearcher(this.storageDir); \n             \n \n            GDataServerRegistry.getRegistry().registerStorage(this);// TODO reverse dependency here \n            \n                 \n             \n     } \n         \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#StorageCoreController(Directory).mjava","sourceNew":null,"sourceOld":"    private StorageCoreController(final Directory dir) throws IOException, StorageException { \n        synchronized (StorageCoreController.class) { \n            try{ \n                this.idGenerator = new IDGenerator(10); \n            }catch (Exception e) { \n                throw new StorageException(\"Can't create ID Generator\",e); \n            } \n             \n            boolean createNewStorage = false; \n             \n            if(dir == null){ \n            this.configurator = StorageConfigurator.getStorageConfigurator(); \n            String storageDirPath = this.configurator.getStorageDirectory(); \n            File storeDir = new File(storageDirPath); \n            File storageLog = new File(storeDir.getAbsolutePath()+System.getProperty(\"file.separator\")+STORAGELOG); \n            try{ \n            if(storeDir.isDirectory() && !storageLog.exists()){ \n                 \n                if(createLuceneStorageLog(storeDir)){ \n                    this.storageDir = FSDirectory.getDirectory(storeDir,true); \n                    createNewStorage = true; \n                } \n                else \n                    throw new StorageException(\"could not create storage log file in \"+storageDirPath); \n                 \n            }else \n                this.storageDir = FSDirectory.getDirectory(storeDir,false); \n            }catch (IOException e) { \n                storageLog.delete(); \n                throw e; \n            } \n            this.indexOptimizeInterval = this.configurator.getIndexOptimizeInterval(); \n            this.storageBufferSize = this.configurator.getStorageBufferSize() < DEFAULT_STORAGE_BUFFER_SIZE?DEFAULT_STORAGE_BUFFER_SIZE:this.configurator.getStorageBufferSize(); \n            this.storagePersistFactor = this.configurator.getStoragepersistFactor() < DEFAULT_STORAGE_PERSIST_FACTOR? DEFAULT_STORAGE_PERSIST_FACTOR:this.configurator.getStoragepersistFactor(); \n             \n            } \n            else \n                this.storageDir = dir; \n             \n            this.currentBuffer = new StorageBuffer(this.storageBufferSize); \n            this.modifier = createStorageModifier(createNewStorage); \n            this.searcher = new IndexSearcher(this.storageDir); \n             \n \n            GDataServerRegistry.getRegistry().registerStorage(this);// TODO reverse dependency here \n            \n                 \n             \n     } \n         \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"52754a40a1550056d5637c8992b4076b5ed77328":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}