{"path":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsPhrase().mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsPhrase().mjava","pathOld":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsPhrase().mjava","sourceNew":"\tpublic void testGetBestFragmentsPhrase() throws Exception\n\t{\n\t\tdoSearching(\"\\\"John Kennedy\\\"\");\n\t\tdoStandardHighlights();\n\t\t//Currently highlights \"John\" and \"Kennedy\" separately\n\t\tassertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\", numHighlights == 2);\n\t}\n\n","sourceOld":"\tpublic void testGetBestFragmentsPhrase() throws Exception\n\t{\n\t\tdoSearching(\"\\\"John Kennedy\\\"\");\n\t\tdoStandardHighlights();\n\t\t//Currently highlights \"John\" and \"Kennedy\" separately\n\t\tassertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\", numHighlights == 2);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296b8b38a87feb478921f77834a2302dfe77641c","date":1209506838,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsPhrase().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsPhrase().mjava","sourceNew":"  public void testGetBestFragmentsPhrase() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      public void run() throws Exception {\n        numHighlights = 0;\n        doSearching(\"\\\"John Kennedy\\\"\");\n        doStandardHighlights(analyzer, hits, query, HighlighterTest.this);\n        // Currently highlights \"John\" and \"Kennedy\" separately\n        assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n            numHighlights == 2);\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"\tpublic void testGetBestFragmentsPhrase() throws Exception\n\t{\n\t\tdoSearching(\"\\\"John Kennedy\\\"\");\n\t\tdoStandardHighlights();\n\t\t//Currently highlights \"John\" and \"Kennedy\" separately\n\t\tassertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\", numHighlights == 2);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f148c02ddd6ba981c65ca685d0e56c3a98368e1","date":1254892102,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsPhrase().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsPhrase().mjava","sourceNew":"  public void testGetBestFragmentsPhrase() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      public void run() throws Exception {\n        numHighlights = 0;\n        doSearching(\"\\\"John Kennedy\\\"\");\n        doStandardHighlights(analyzer, searcher, hits, query, HighlighterTest.this);\n        // Currently highlights \"John\" and \"Kennedy\" separately\n        assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n            numHighlights == 2);\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"  public void testGetBestFragmentsPhrase() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      public void run() throws Exception {\n        numHighlights = 0;\n        doSearching(\"\\\"John Kennedy\\\"\");\n        doStandardHighlights(analyzer, hits, query, HighlighterTest.this);\n        // Currently highlights \"John\" and \"Kennedy\" separately\n        assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n            numHighlights == 2);\n      }\n    };\n\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsPhrase().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsPhrase().mjava","sourceNew":"  public void testGetBestFragmentsPhrase() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        numHighlights = 0;\n        doSearching(\"\\\"John Kennedy\\\"\");\n        doStandardHighlights(analyzer, searcher, hits, query, HighlighterTest.this);\n        // Currently highlights \"John\" and \"Kennedy\" separately\n        assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n            numHighlights == 2);\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"  public void testGetBestFragmentsPhrase() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      public void run() throws Exception {\n        numHighlights = 0;\n        doSearching(\"\\\"John Kennedy\\\"\");\n        doStandardHighlights(analyzer, searcher, hits, query, HighlighterTest.this);\n        // Currently highlights \"John\" and \"Kennedy\" separately\n        assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n            numHighlights == 2);\n      }\n    };\n\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsPhrase().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testGetBestFragmentsPhrase().mjava","sourceNew":"  public void testGetBestFragmentsPhrase() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        numHighlights = 0;\n        doSearching(\"\\\"John Kennedy\\\"\");\n        doStandardHighlights(analyzer, searcher, hits, query, HighlighterTest.this);\n        // Currently highlights \"John\" and \"Kennedy\" separately\n        assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n            numHighlights == 2);\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"  public void testGetBestFragmentsPhrase() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        numHighlights = 0;\n        doSearching(\"\\\"John Kennedy\\\"\");\n        doStandardHighlights(analyzer, searcher, hits, query, HighlighterTest.this);\n        // Currently highlights \"John\" and \"Kennedy\" separately\n        assertTrue(\"Failed to find correct number of highlights \" + numHighlights + \" found\",\n            numHighlights == 2);\n      }\n    };\n\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["296b8b38a87feb478921f77834a2302dfe77641c"],"296b8b38a87feb478921f77834a2302dfe77641c":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["296b8b38a87feb478921f77834a2302dfe77641c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"296b8b38a87feb478921f77834a2302dfe77641c":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}