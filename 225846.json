{"path":"solr/core/src/java/org/apache/solr/handler/SortingResponseWriter[ExportWriter].SortDoc#lessThan(Object).mjava","commits":[{"id":"50f05d6b69cfaabd51b5d26cba4e3122f51fff83","date":1478603228,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SortingResponseWriter[ExportWriter].SortDoc#lessThan(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.SortDoc#lessThan(Object).mjava","sourceNew":"    public boolean lessThan(Object o) {\n      if(docId == -1) {\n        return true;\n      }\n\n      SortDoc sd = (SortDoc)o;\n      SortValue[] sortValues1 = sd.sortValues;\n      for(int i=0; i<sortValues.length; i++) {\n        int comp = sortValues[i].compareTo(sortValues1[i]);\n        if(comp < 0) {\n          return true;\n        } if(comp > 0) {\n          return false;\n        }\n      }\n      return docId+docBase < sd.docId+sd.docBase;\n    }\n\n","sourceOld":"    public boolean lessThan(Object o) {\n      if(docId == -1) {\n        return true;\n      }\n\n      SortDoc sd = (SortDoc)o;\n      SortValue[] sortValues1 = sd.sortValues;\n      for(int i=0; i<sortValues.length; i++) {\n        int comp = sortValues[i].compareTo(sortValues1[i]);\n        if(comp < 0) {\n          return true;\n        } if(comp > 0) {\n          return false;\n        }\n      }\n      return docId+docBase < sd.docId+sd.docBase;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbb7f1f4cf1e9a820364c090bb7e9a590f351339","date":1478603266,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ExportWriter.SortDoc#lessThan(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SortingResponseWriter[ExportWriter].SortDoc#lessThan(Object).mjava","sourceNew":"    public boolean lessThan(Object o) {\n      if(docId == -1) {\n        return true;\n      }\n\n      SortDoc sd = (SortDoc)o;\n      SortValue[] sortValues1 = sd.sortValues;\n      for(int i=0; i<sortValues.length; i++) {\n        int comp = sortValues[i].compareTo(sortValues1[i]);\n        if(comp < 0) {\n          return true;\n        } if(comp > 0) {\n          return false;\n        }\n      }\n      return docId+docBase < sd.docId+sd.docBase;\n    }\n\n","sourceOld":"    public boolean lessThan(Object o) {\n      if(docId == -1) {\n        return true;\n      }\n\n      SortDoc sd = (SortDoc)o;\n      SortValue[] sortValues1 = sd.sortValues;\n      for(int i=0; i<sortValues.length; i++) {\n        int comp = sortValues[i].compareTo(sortValues1[i]);\n        if(comp < 0) {\n          return true;\n        } if(comp > 0) {\n          return false;\n        }\n      }\n      return docId+docBase < sd.docId+sd.docBase;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cbb7f1f4cf1e9a820364c090bb7e9a590f351339":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cbb7f1f4cf1e9a820364c090bb7e9a590f351339"]},"commit2Childs":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["cbb7f1f4cf1e9a820364c090bb7e9a590f351339"],"cbb7f1f4cf1e9a820364c090bb7e9a590f351339":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}