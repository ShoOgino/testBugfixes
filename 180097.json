{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataResponse.FormatWriter.HTMLFormatWriter#generateOutputFormat(BaseFeed,HttpServletResponse).mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataResponse.FormatWriter.HTMLFormatWriter#generateOutputFormat(BaseFeed,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/GDataResponse.FormatWriter.HTMLFormatWriter#generateOutputFormat(BaseFeed,HttpServletResponse).mjava","sourceNew":"            @Override\n            void generateOutputFormat(BaseFeed feed, final HttpServletResponse response) throws IOException {\n                Templates template = this.service.getTransformTemplate();\n                response.setContentType(CONTENT_TYPE);\n                if(template == null){\n                    sendNotAvailable(response);\n                    return;\n                }\n                StringWriter writer = new StringWriter();\n                XmlWriter xmlWriter = new XmlWriter(writer);\n                feed.generateAtom(xmlWriter,this.service.getExtensionProfile());\n                try {\n                    writeHtml(template,response.getWriter(),writer);\n                } catch (TransformerException e) {\n                 LOG.error(\"Can not transform feed for service \"+this.service.getName(),e);\n                 sendNotAvailable(response);\n                    \n                }\n            }\n\n","sourceOld":"            @Override\n            void generateOutputFormat(BaseFeed feed, final HttpServletResponse response) throws IOException {\n                Templates template = this.service.getTransformTemplate();\n                response.setContentType(CONTENT_TYPE);\n                if(template == null){\n                    sendNotAvailable(response);\n                    return;\n                }\n                StringWriter writer = new StringWriter();\n                XmlWriter xmlWriter = new XmlWriter(writer);\n                feed.generateAtom(xmlWriter,this.service.getExtensionProfile());\n                try {\n                    writeHtml(template,response.getWriter(),writer);\n                } catch (TransformerException e) {\n                 LOG.error(\"Can not transform feed for service \"+this.service.getName(),e);\n                 sendNotAvailable(response);\n                    \n                }\n            }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/GDataResponse.FormatWriter.HTMLFormatWriter#generateOutputFormat(BaseFeed,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataResponse.FormatWriter.HTMLFormatWriter#generateOutputFormat(BaseFeed,HttpServletResponse).mjava","sourceNew":"            @Override\n            void generateOutputFormat(BaseFeed feed, final HttpServletResponse response) throws IOException {\n                Templates template = this.service.getTransformTemplate();\n                response.setContentType(CONTENT_TYPE);\n                if(template == null){\n                    sendNotAvailable(response);\n                    return;\n                }\n                StringWriter writer = new StringWriter();\n                XmlWriter xmlWriter = new XmlWriter(writer);\n                feed.generateAtom(xmlWriter,this.service.getExtensionProfile());\n                try {\n                    writeHtml(template,response.getWriter(),writer);\n                } catch (TransformerException e) {\n                 LOG.error(\"Can not transform feed for service \"+this.service.getName(),e);\n                 sendNotAvailable(response);\n                    \n                }\n            }\n\n","sourceOld":"            @Override\n            void generateOutputFormat(BaseFeed feed, final HttpServletResponse response) throws IOException {\n                Templates template = this.service.getTransformTemplate();\n                response.setContentType(CONTENT_TYPE);\n                if(template == null){\n                    sendNotAvailable(response);\n                    return;\n                }\n                StringWriter writer = new StringWriter();\n                XmlWriter xmlWriter = new XmlWriter(writer);\n                feed.generateAtom(xmlWriter,this.service.getExtensionProfile());\n                try {\n                    writeHtml(template,response.getWriter(),writer);\n                } catch (TransformerException e) {\n                 LOG.error(\"Can not transform feed for service \"+this.service.getName(),e);\n                 sendNotAvailable(response);\n                    \n                }\n            }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}