{"path":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,SolrInfoBean,MetricRegistry,String).mjava","commits":[{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,SolrInfoBean,MetricRegistry,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,MetricRegistry,String).mjava","sourceNew":"  /**\n   * Returns an instrumented wrapper over the given executor service.\n   */\n  public static ExecutorService instrumentedExecutorService(ExecutorService delegate, SolrInfoBean info, MetricRegistry metricRegistry, String scope)  {\n    if (info != null && info.getMetricNames() != null) {\n      info.getMetricNames().add(MetricRegistry.name(scope, \"submitted\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"running\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"completed\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"duration\"));\n    }\n    return new InstrumentedExecutorService(delegate, metricRegistry, scope);\n  }\n\n","sourceOld":"  /**\n   * Returns an instrumented wrapper over the given executor service.\n   */\n  public static ExecutorService instrumentedExecutorService(ExecutorService delegate, MetricRegistry metricRegistry, String scope)  {\n    return new InstrumentedExecutorService(delegate, metricRegistry, scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,SolrInfoBean,MetricRegistry,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns an instrumented wrapper over the given executor service.\n   */\n  public static ExecutorService instrumentedExecutorService(ExecutorService delegate, SolrInfoBean info, MetricRegistry metricRegistry, String scope)  {\n    if (info != null && info.getMetricNames() != null) {\n      info.getMetricNames().add(MetricRegistry.name(scope, \"submitted\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"running\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"completed\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"duration\"));\n    }\n    return new InstrumentedExecutorService(delegate, metricRegistry, scope);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c2af5a711bd6e2d33e0221ced0f47ac596ed275","date":1572877903,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,SolrInfoBean,MetricRegistry,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/stats/MetricUtils#instrumentedExecutorService(ExecutorService,SolrInfoBean,MetricRegistry,String).mjava","sourceNew":"  /**\n   * Returns an instrumented wrapper over the given executor service.\n   */\n  public static ExecutorService instrumentedExecutorService(ExecutorService delegate, SolrInfoBean info, MetricRegistry metricRegistry, String scope)  {\n    if (info != null && info.getSolrMetricsContext() != null) {\n      info.getSolrMetricsContext().registerMetricName(MetricRegistry.name(scope, \"submitted\"));\n      info.getSolrMetricsContext().registerMetricName(MetricRegistry.name(scope, \"running\"));\n      info.getSolrMetricsContext().registerMetricName(MetricRegistry.name(scope, \"completed\"));\n      info.getSolrMetricsContext().registerMetricName(MetricRegistry.name(scope, \"duration\"));\n    }\n    return new InstrumentedExecutorService(delegate, metricRegistry, scope);\n  }\n\n","sourceOld":"  /**\n   * Returns an instrumented wrapper over the given executor service.\n   */\n  public static ExecutorService instrumentedExecutorService(ExecutorService delegate, SolrInfoBean info, MetricRegistry metricRegistry, String scope)  {\n    if (info != null && info.getMetricNames() != null) {\n      info.getMetricNames().add(MetricRegistry.name(scope, \"submitted\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"running\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"completed\"));\n      info.getMetricNames().add(MetricRegistry.name(scope, \"duration\"));\n    }\n    return new InstrumentedExecutorService(delegate, metricRegistry, scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["816521ebaad5add9cb96bb88c577394e2938c40b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}