{"path":"solr/core/src/java/org/apache/solr/logging/log4j2/Log4j2Watcher#toSolrDocument(LogEvent).mjava","commits":[{"id":"93baf46bd12096e0de407258b3b32cfaaf58e448","date":1522030569,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j2/Log4j2Watcher#toSolrDocument(LogEvent).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SolrDocument toSolrDocument(LogEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeMillis()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLoggerName());\n    Message message = event.getMessage();\n    doc.setField(\"message\", message.getFormattedMessage());\n    Throwable t = message.getThrowable();\n    if (t != null)\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t));\n\n    Map<String,String> contextMap = event.getContextMap();\n    if (contextMap != null) {\n      for (String key : contextMap.keySet())\n        doc.setField(key, contextMap.get(key));\n    }\n\n    if (!doc.containsKey(\"core\"))\n      doc.setField(\"core\", \"\"); // avoids an ugly \"undefined\" column in the UI\n\n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6","date":1522059649,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j2/Log4j2Watcher#toSolrDocument(LogEvent).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SolrDocument toSolrDocument(LogEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeMillis()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLoggerName());\n    Message message = event.getMessage();\n    doc.setField(\"message\", message.getFormattedMessage());\n    Throwable t = message.getThrowable();\n    if (t != null)\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t));\n\n    Map<String,String> contextMap = event.getContextMap();\n    if (contextMap != null) {\n      for (String key : contextMap.keySet())\n        doc.setField(key, contextMap.get(key));\n    }\n\n    if (!doc.containsKey(\"core\"))\n      doc.setField(\"core\", \"\"); // avoids an ugly \"undefined\" column in the UI\n\n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f97fc3d287be2a8d7f513f0de3249b50dda47299","date":1568378558,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/logging/log4j2/Log4j2Watcher#toSolrDocument(LogEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/logging/log4j2/Log4j2Watcher#toSolrDocument(LogEvent).mjava","sourceNew":"  @Override\n  public SolrDocument toSolrDocument(LogEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeMillis()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLoggerName());\n    Message message = event.getMessage();\n    doc.setField(\"message\", message.getFormattedMessage());\n    Throwable t = message.getThrowable();\n    if (t != null)\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t));\n\n    Map<String,String> contextMap = event.getContextMap();\n    if (contextMap != null) {\n      for (Map.Entry<String, String> entry : contextMap.entrySet())\n        doc.setField(entry.getKey(), entry.getValue());\n    }\n\n    if (!doc.containsKey(\"core\"))\n      doc.setField(\"core\", \"\"); // avoids an ugly \"undefined\" column in the UI\n\n    return doc;\n  }\n\n","sourceOld":"  @Override\n  public SolrDocument toSolrDocument(LogEvent event) {\n    SolrDocument doc = new SolrDocument();\n    doc.setField(\"time\", new Date(event.getTimeMillis()));\n    doc.setField(\"level\", event.getLevel().toString());\n    doc.setField(\"logger\", event.getLoggerName());\n    Message message = event.getMessage();\n    doc.setField(\"message\", message.getFormattedMessage());\n    Throwable t = message.getThrowable();\n    if (t != null)\n      doc.setField(\"trace\", Throwables.getStackTraceAsString(t));\n\n    Map<String,String> contextMap = event.getContextMap();\n    if (contextMap != null) {\n      for (String key : contextMap.keySet())\n        doc.setField(key, contextMap.get(key));\n    }\n\n    if (!doc.containsKey(\"core\"))\n      doc.setField(\"core\", \"\"); // avoids an ugly \"undefined\" column in the UI\n\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"93baf46bd12096e0de407258b3b32cfaaf58e448":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f97fc3d287be2a8d7f513f0de3249b50dda47299":["f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f97fc3d287be2a8d7f513f0de3249b50dda47299"],"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93baf46bd12096e0de407258b3b32cfaaf58e448"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["93baf46bd12096e0de407258b3b32cfaaf58e448","f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"93baf46bd12096e0de407258b3b32cfaaf58e448":["f67a921f6ec5ab488ce397cf05f95fcd8ce631b6"],"f97fc3d287be2a8d7f513f0de3249b50dda47299":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f67a921f6ec5ab488ce397cf05f95fcd8ce631b6":["f97fc3d287be2a8d7f513f0de3249b50dda47299"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}