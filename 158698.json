{"path":"src/java/org/apache/solr/schema/ExternalFileField#init(IndexSchema,Map[String,String]).mjava","commits":[{"id":"7d6b8491b15b391062b53404b4af3c8f18924090","date":1193061194,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/ExternalFileField#init(IndexSchema,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    restrictProps(SORT_MISSING_FIRST | SORT_MISSING_LAST);\n    String ftypeS = getArg(\"valType\", args);\n    if (ftypeS!=null) {\n      ftype = schema.getFieldTypes().get(ftypeS);\n      if (ftype==null || !(ftype instanceof FloatField)) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Only float (FloatField) is currently supported as external field type.  got \" + ftypeS);\n      }\n    }   \n    keyFieldName = args.remove(\"keyField\");\n    String defValS = args.remove(\"defVal\");\n    defVal = defValS==null ? 0 : Float.parseFloat(defValS);\n    this.schema = schema;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/ExternalFileField#init(IndexSchema,Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/schema/ExternalFileField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    restrictProps(SORT_MISSING_FIRST | SORT_MISSING_LAST);\n    String ftypeS = getArg(\"valType\", args);\n    if (ftypeS!=null) {\n      ftype = schema.getFieldTypes().get(ftypeS);\n      if (ftype==null || !(ftype instanceof FloatField)) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Only float (FloatField) is currently supported as external field type.  got \" + ftypeS);\n      }\n    }   \n    keyFieldName = args.remove(\"keyField\");\n    String defValS = args.remove(\"defVal\");\n    defVal = defValS==null ? 0 : Float.parseFloat(defValS);\n    this.schema = schema;\n  }\n\n","sourceOld":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    restrictProps(SORT_MISSING_FIRST | SORT_MISSING_LAST);\n    String ftypeS = getArg(\"valType\", args);\n    if (ftypeS!=null) {\n      ftype = schema.getFieldTypes().get(ftypeS);\n      if (ftype==null || !(ftype instanceof FloatField)) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Only float (FloatField) is currently supported as external field type.  got \" + ftypeS);\n      }\n    }   \n    keyFieldName = args.remove(\"keyField\");\n    String defValS = args.remove(\"defVal\");\n    defVal = defValS==null ? 0 : Float.parseFloat(defValS);\n    this.schema = schema;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7d6b8491b15b391062b53404b4af3c8f18924090":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["7d6b8491b15b391062b53404b4af3c8f18924090"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["7d6b8491b15b391062b53404b4af3c8f18924090"],"7d6b8491b15b391062b53404b4af3c8f18924090":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}