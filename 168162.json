{"path":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","commits":[{"id":"be20f9fed1d3edcb1c84abcc39df87a90fab22df","date":1275590285,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random,\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random,\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01","date":1286712181,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(new Field(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb378f8bdee16a26810e086303a4a86b4930ea12","date":1296410797,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w);\n    w.close();\n    IndexSearcher s = new IndexSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"090a0320e4de4a3674376aef96b9701f47564f86","date":1308707325,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2","04f07771a2a7dd3a395700665ed839c3dae2def2","04f07771a2a7dd3a395700665ed839c3dae2def2","04f07771a2a7dd3a395700665ed839c3dae2def2","04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0e7c2454a6a8237bfd0e953f5b940838408c9055","date":1323649300,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    s.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0e7c2454a6a8237bfd0e953f5b940838408c9055"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["1509f151d7692d84fae414b2b799ac06ba60fcb4","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"2553b00f699380c64959ccb27991289aae87be2e":["a3776dccca01c11e7046323cfad46a3b4a471233","090a0320e4de4a3674376aef96b9701f47564f86"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"eb378f8bdee16a26810e086303a4a86b4930ea12":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["f2c5f0cb44df114db4228c8f77861714b5cabaea","090a0320e4de4a3674376aef96b9701f47564f86"],"090a0320e4de4a3674376aef96b9701f47564f86":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["eb378f8bdee16a26810e086303a4a86b4930ea12"],"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["790e1fde4caa765b3faaad3fbcd25c6973450336","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["090a0320e4de4a3674376aef96b9701f47564f86"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"132903c28af3aa6f67284b78de91c0f0a99488c2":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"962d04139994fce5193143ef35615499a9a96d78":[],"2553b00f699380c64959ccb27991289aae87be2e":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"eb378f8bdee16a26810e086303a4a86b4930ea12":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"090a0320e4de4a3674376aef96b9701f47564f86":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","eb378f8bdee16a26810e086303a4a86b4930ea12","29ef99d61cda9641b6250bf9567329a6e65f901d"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","d083e83f225b11e5fdd900e83d26ddb385b6955c","090a0320e4de4a3674376aef96b9701f47564f86","a3776dccca01c11e7046323cfad46a3b4a471233"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":["2553b00f699380c64959ccb27991289aae87be2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}