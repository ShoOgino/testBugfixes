{"path":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","commits":[{"id":"e5974da97d735dd78f13f46406caf64c9448e4f4","date":1343143368,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","pathOld":"/dev/null","sourceNew":"  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<S>(clazz, Thread.currentThread().getContextClassLoader());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","pathOld":"/dev/null","sourceNew":"  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<S>(clazz, Thread.currentThread().getContextClassLoader());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","pathOld":"/dev/null","sourceNew":"  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<S>(clazz, Thread.currentThread().getContextClassLoader());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","pathOld":"/dev/null","sourceNew":"  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<S>(clazz, Thread.currentThread().getContextClassLoader());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","sourceNew":"  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<>(clazz, Thread.currentThread().getContextClassLoader());\n  }\n\n","sourceOld":"  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<S>(clazz, Thread.currentThread().getContextClassLoader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efd7fea401304261e24e90e24fecaf6a091aa23d","date":1449320129,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","sourceNew":"  /** Creates a new SPI iterator to lookup services of type {@code clazz} using the context classloader. */\n  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<>(clazz, Thread.currentThread().getContextClassLoader());\n  }\n\n","sourceOld":"  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<>(clazz, Thread.currentThread().getContextClassLoader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c876aba909b05165f3d290e26b5a4121214f553","date":1449340310,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","sourceNew":"  /** Creates a new SPI iterator to lookup services of type {@code clazz} using the context classloader. */\n  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    ClassLoader cl = Thread.currentThread().getContextClassLoader();\n    if (cl == null) {\n      cl = clazz.getClassLoader();\n    }\n    return new SPIClassIterator<>(clazz, cl);\n  }\n\n","sourceOld":"  /** Creates a new SPI iterator to lookup services of type {@code clazz} using the context classloader. */\n  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<>(clazz, Thread.currentThread().getContextClassLoader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409fbcbea5146d19c121f029071d605b1b68bb25","date":1497969834,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","sourceNew":"  /** Creates a new SPI iterator to lookup services of type {@code clazz} using\n   * the same {@link ClassLoader} as the argument. */\n  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<>(clazz,\n        Objects.requireNonNull(clazz.getClassLoader(), () -> clazz + \" has no classloader.\"));\n  }\n\n","sourceOld":"  /** Creates a new SPI iterator to lookup services of type {@code clazz} using the context classloader. */\n  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    ClassLoader cl = Thread.currentThread().getContextClassLoader();\n    if (cl == null) {\n      cl = clazz.getClassLoader();\n    }\n    return new SPIClassIterator<>(clazz, cl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","sourceNew":"  /** Creates a new SPI iterator to lookup services of type {@code clazz} using\n   * the same {@link ClassLoader} as the argument. */\n  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<>(clazz,\n        Objects.requireNonNull(clazz.getClassLoader(), () -> clazz + \" has no classloader.\"));\n  }\n\n","sourceOld":"  /** Creates a new SPI iterator to lookup services of type {@code clazz} using the context classloader. */\n  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    ClassLoader cl = Thread.currentThread().getContextClassLoader();\n    if (cl == null) {\n      cl = clazz.getClassLoader();\n    }\n    return new SPIClassIterator<>(clazz, cl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","sourceNew":"  /** Creates a new SPI iterator to lookup services of type {@code clazz} using\n   * the same {@link ClassLoader} as the argument. */\n  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<>(clazz,\n        Objects.requireNonNull(clazz.getClassLoader(), () -> clazz + \" has no classloader.\"));\n  }\n\n","sourceOld":"  /** Creates a new SPI iterator to lookup services of type {@code clazz} using the context classloader. */\n  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    ClassLoader cl = Thread.currentThread().getContextClassLoader();\n    if (cl == null) {\n      cl = clazz.getClassLoader();\n    }\n    return new SPIClassIterator<>(clazz, cl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32694fa3bbb984d3054955e48d946708e16110ff","date":1585155816,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/SPIClassIterator#[S]_get(Class[S]).mjava","sourceNew":null,"sourceOld":"  /** Creates a new SPI iterator to lookup services of type {@code clazz} using\n   * the same {@link ClassLoader} as the argument. */\n  public static <S> SPIClassIterator<S> get(Class<S> clazz) {\n    return new SPIClassIterator<>(clazz,\n        Objects.requireNonNull(clazz.getClassLoader(), () -> clazz + \" has no classloader.\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"e5974da97d735dd78f13f46406caf64c9448e4f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e5974da97d735dd78f13f46406caf64c9448e4f4"],"28288370235ed02234a64753cdbf0c6ec096304a":["1c876aba909b05165f3d290e26b5a4121214f553","409fbcbea5146d19c121f029071d605b1b68bb25"],"efd7fea401304261e24e90e24fecaf6a091aa23d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"32694fa3bbb984d3054955e48d946708e16110ff":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"1c876aba909b05165f3d290e26b5a4121214f553":["efd7fea401304261e24e90e24fecaf6a091aa23d"],"409fbcbea5146d19c121f029071d605b1b68bb25":["1c876aba909b05165f3d290e26b5a4121214f553"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["1c876aba909b05165f3d290e26b5a4121214f553","409fbcbea5146d19c121f029071d605b1b68bb25"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["32694fa3bbb984d3054955e48d946708e16110ff"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["efd7fea401304261e24e90e24fecaf6a091aa23d"],"e5974da97d735dd78f13f46406caf64c9448e4f4":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"28288370235ed02234a64753cdbf0c6ec096304a":["32694fa3bbb984d3054955e48d946708e16110ff"],"efd7fea401304261e24e90e24fecaf6a091aa23d":["1c876aba909b05165f3d290e26b5a4121214f553"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"32694fa3bbb984d3054955e48d946708e16110ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e5974da97d735dd78f13f46406caf64c9448e4f4","5a1a22b1ad88b436661458df567f3fdb446392a4","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"1c876aba909b05165f3d290e26b5a4121214f553":["28288370235ed02234a64753cdbf0c6ec096304a","409fbcbea5146d19c121f029071d605b1b68bb25","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"409fbcbea5146d19c121f029071d605b1b68bb25":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}