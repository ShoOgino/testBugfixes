{"path":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","commits":[{"id":"e3a908bacd530957eaa6d2dfebdd534afd9ac60e","date":1327209646,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","pathOld":"/dev/null","sourceNew":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(Reader reader) {\n        return new LegacyHTMLStripCharFilter(CharReader.get(new BufferedReader(reader)));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random, analyzer, numRounds);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["56584ae6fa4912e4dd6e818a7da3799cf807234f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"579dc30b5d3235c34cda518b2b6018d71a61879c","date":1327235122,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","pathOld":"/dev/null","sourceNew":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(Reader reader) {\n        return new LegacyHTMLStripCharFilter(CharReader.get(new BufferedReader(reader)));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random, analyzer, numRounds);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","pathOld":"/dev/null","sourceNew":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(Reader reader) {\n        return new LegacyHTMLStripCharFilter(CharReader.get(new BufferedReader(reader)));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random, analyzer, numRounds);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","sourceNew":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(Reader reader) {\n        return new LegacyHTMLStripCharFilter(CharReader.get(new BufferedReader(reader)));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","sourceOld":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(Reader reader) {\n        return new LegacyHTMLStripCharFilter(CharReader.get(new BufferedReader(reader)));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random, analyzer, numRounds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56584ae6fa4912e4dd6e818a7da3799cf807234f","date":1339586560,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","sourceNew":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new LegacyHTMLStripCharFilter(CharReader.get(new BufferedReader(reader)));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","sourceOld":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(Reader reader) {\n        return new LegacyHTMLStripCharFilter(CharReader.get(new BufferedReader(reader)));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","bugFix":["e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","sourceNew":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new LegacyHTMLStripCharFilter(new BufferedReader(reader));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","sourceOld":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new LegacyHTMLStripCharFilter(CharReader.get(new BufferedReader(reader)));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","sourceNew":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new LegacyHTMLStripCharFilter(new BufferedReader(reader));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","sourceOld":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new LegacyHTMLStripCharFilter(CharReader.get(new BufferedReader(reader)));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","sourceNew":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new LegacyHTMLStripCharFilter(new BufferedReader(reader));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","sourceOld":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new LegacyHTMLStripCharFilter(CharReader.get(new BufferedReader(reader)));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","sourceNew":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new LegacyHTMLStripCharFilter(new BufferedReader(reader));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","sourceOld":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new LegacyHTMLStripCharFilter(new BufferedReader(reader));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fc9f4a33c8fefeb1260aea04273a36b0d32378e","date":1421852764,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testRandom().mjava","sourceNew":null,"sourceOld":"  @Ignore(\"broken offsets: see LUCENE-2208\")\n  public void testRandom() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new LegacyHTMLStripCharFilter(new BufferedReader(reader));\n      }\n    };\n    \n    int numRounds = RANDOM_MULTIPLIER * 10000;\n    checkRandomData(random(), analyzer, numRounds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"aba371508186796cc6151d8223a5b4e16d02e26e":["56584ae6fa4912e4dd6e818a7da3799cf807234f","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["56584ae6fa4912e4dd6e818a7da3799cf807234f"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["fc706b1e03a539d44d99998108feb684bb44cbb2"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["56584ae6fa4912e4dd6e818a7da3799cf807234f","fc706b1e03a539d44d99998108feb684bb44cbb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"56584ae6fa4912e4dd6e818a7da3799cf807234f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"e3a908bacd530957eaa6d2dfebdd534afd9ac60e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"579dc30b5d3235c34cda518b2b6018d71a61879c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"]},"commit2Childs":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fc706b1e03a539d44d99998108feb684bb44cbb2":["aba371508186796cc6151d8223a5b4e16d02e26e","ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","e3a908bacd530957eaa6d2dfebdd534afd9ac60e","579dc30b5d3235c34cda518b2b6018d71a61879c"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"56584ae6fa4912e4dd6e818a7da3799cf807234f":["aba371508186796cc6151d8223a5b4e16d02e26e","fc706b1e03a539d44d99998108feb684bb44cbb2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"e3a908bacd530957eaa6d2dfebdd534afd9ac60e":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","629c38c4ae4e303d0617e05fbfe508140b32f0a3","579dc30b5d3235c34cda518b2b6018d71a61879c"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["56584ae6fa4912e4dd6e818a7da3799cf807234f"],"579dc30b5d3235c34cda518b2b6018d71a61879c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","579dc30b5d3235c34cda518b2b6018d71a61879c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}