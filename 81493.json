{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReaderReopen#modifyIndex(int,Directory).mjava","sourceNew":null,"sourceOld":"  static void modifyIndex(int i, Directory dir) throws IOException {\n    switch (i) {\n      case 0: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.deleteDocuments(new Term(\"field2\", \"a11\"));\n        w.deleteDocuments(new Term(\"field2\", \"b30\"));\n        w.close();\n        break;\n      }\n      case 1: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(4, \"field1\", 123);\n        reader.setNorm(44, \"field2\", 222);\n        reader.setNorm(44, \"field4\", 22);\n        reader.close();\n        break;\n      }\n      case 2: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.optimize();\n        w.close();\n        break;\n      }\n      case 3: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.optimize();\n        w.addDocument(createDocument(102, 4));\n        w.addDocument(createDocument(103, 4));\n        w.close();\n        break;\n      }\n      case 4: {\n        IndexReader reader = IndexReader.open(dir, false);\n        reader.setNorm(5, \"field1\", 123);\n        reader.setNorm(55, \"field2\", 222);\n        reader.close();\n        break;\n      }\n      case 5: {\n        IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.addDocument(createDocument(101, 4));\n        w.close();\n        break;\n      }\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}