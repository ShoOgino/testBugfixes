{"path":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","commits":[{"id":"4f11ea4f58f7fefe4a8c99ee19b3c388d7f98d60","date":1321493601,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","pathOld":"/dev/null","sourceNew":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getVersion());\n\n    new Thread() {\n      @Override\n      public void run() {\n        createSnapshot(indexCommit, numberToKeep, replicationHandler);\n      }\n    }.start();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c01638f4dd94981c1d3d52c4f7991246a5a24aba","date":1327876712,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","sourceNew":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getGeneration());\n\n    new Thread() {\n      @Override\n      public void run() {\n        createSnapshot(indexCommit, numberToKeep, replicationHandler);\n      }\n    }.start();\n  }\n\n","sourceOld":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getVersion());\n\n    new Thread() {\n      @Override\n      public void run() {\n        createSnapshot(indexCommit, numberToKeep, replicationHandler);\n      }\n    }.start();\n  }\n\n","bugFix":["4f11ea4f58f7fefe4a8c99ee19b3c388d7f98d60"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","sourceNew":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getGeneration());\n\n    new Thread() {\n      @Override\n      public void run() {\n        createSnapshot(indexCommit, numberToKeep, replicationHandler);\n      }\n    }.start();\n  }\n\n","sourceOld":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getVersion());\n\n    new Thread() {\n      @Override\n      public void run() {\n        createSnapshot(indexCommit, numberToKeep, replicationHandler);\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","sourceNew":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getGeneration());\n\n    new Thread() {\n      @Override\n      public void run() {\n        createSnapshot(indexCommit, numberToKeep, replicationHandler);\n      }\n    }.start();\n  }\n\n","sourceOld":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getVersion());\n\n    new Thread() {\n      @Override\n      public void run() {\n        createSnapshot(indexCommit, numberToKeep, replicationHandler);\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c","date":1399457549,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","sourceNew":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getGeneration());\n\n    new Thread() {\n      @Override\n      public void run() {\n        if(snapshotName != null) {\n          createSnapshot(indexCommit, replicationHandler);\n        } else {\n          deleteOldBackups(numberToKeep);\n          createSnapshot(indexCommit, replicationHandler);\n        }\n      }\n    }.start();\n  }\n\n","sourceOld":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getGeneration());\n\n    new Thread() {\n      @Override\n      public void run() {\n        createSnapshot(indexCommit, numberToKeep, replicationHandler);\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d430d59b42be8455e21334e887dea80642775691","date":1423733834,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","sourceNew":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getGeneration());\n\n    new Thread() {\n      @Override\n      public void run() {\n        if(snapshotName != null) {\n          createSnapshot(indexCommit, replicationHandler);\n        } else {\n          createSnapshot(indexCommit, replicationHandler);\n          deleteOldBackups(numberToKeep);\n        }\n      }\n    }.start();\n  }\n\n","sourceOld":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getGeneration());\n\n    new Thread() {\n      @Override\n      public void run() {\n        if(snapshotName != null) {\n          createSnapshot(indexCommit, replicationHandler);\n        } else {\n          deleteOldBackups(numberToKeep);\n          createSnapshot(indexCommit, replicationHandler);\n        }\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5c99ad021f3da085fcb66220598a8f91dc5e453","date":1462242046,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","sourceNew":null,"sourceOld":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getGeneration());\n\n    new Thread() {\n      @Override\n      public void run() {\n        if(snapshotName != null) {\n          createSnapshot(indexCommit, replicationHandler);\n        } else {\n          createSnapshot(indexCommit, replicationHandler);\n          deleteOldBackups(numberToKeep);\n        }\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c7a21395bae9e2f61aeb639f47aaca771c426ed","date":1462255690,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","sourceNew":null,"sourceOld":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getGeneration());\n\n    new Thread() {\n      @Override\n      public void run() {\n        if(snapshotName != null) {\n          createSnapshot(indexCommit, replicationHandler);\n        } else {\n          createSnapshot(indexCommit, replicationHandler);\n          deleteOldBackups(numberToKeep);\n        }\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#createSnapAsync(IndexCommit,int,ReplicationHandler).mjava","sourceNew":null,"sourceOld":"  void createSnapAsync(final IndexCommit indexCommit, final int numberToKeep, final ReplicationHandler replicationHandler) {\n    replicationHandler.core.getDeletionPolicy().saveCommitPoint(indexCommit.getGeneration());\n\n    new Thread() {\n      @Override\n      public void run() {\n        if(snapshotName != null) {\n          createSnapshot(indexCommit, replicationHandler);\n        } else {\n          createSnapshot(indexCommit, replicationHandler);\n          deleteOldBackups(numberToKeep);\n        }\n      }\n    }.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c5c99ad021f3da085fcb66220598a8f91dc5e453":["d430d59b42be8455e21334e887dea80642775691"],"d430d59b42be8455e21334e887dea80642775691":["a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c"],"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["4f11ea4f58f7fefe4a8c99ee19b3c388d7f98d60"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["4f11ea4f58f7fefe4a8c99ee19b3c388d7f98d60","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"1c7a21395bae9e2f61aeb639f47aaca771c426ed":["d430d59b42be8455e21334e887dea80642775691","c5c99ad021f3da085fcb66220598a8f91dc5e453"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4f11ea4f58f7fefe4a8c99ee19b3c388d7f98d60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5b6fdfce35d0adb18836cf8711abe487a934df33":["4f11ea4f58f7fefe4a8c99ee19b3c388d7f98d60","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c7a21395bae9e2f61aeb639f47aaca771c426ed"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["d430d59b42be8455e21334e887dea80642775691","1c7a21395bae9e2f61aeb639f47aaca771c426ed"]},"commit2Childs":{"c5c99ad021f3da085fcb66220598a8f91dc5e453":["1c7a21395bae9e2f61aeb639f47aaca771c426ed"],"d430d59b42be8455e21334e887dea80642775691":["c5c99ad021f3da085fcb66220598a8f91dc5e453","1c7a21395bae9e2f61aeb639f47aaca771c426ed","55b50463286869f584cf849d1587a0fcd54d1dfa"],"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"1c7a21395bae9e2f61aeb639f47aaca771c426ed":["cd5edd1f2b162a5cfa08efd17851a07373a96817","55b50463286869f584cf849d1587a0fcd54d1dfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4f11ea4f58f7fefe4a8c99ee19b3c388d7f98d60"],"4f11ea4f58f7fefe4a8c99ee19b3c388d7f98d60":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c":["d430d59b42be8455e21334e887dea80642775691"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"55b50463286869f584cf849d1587a0fcd54d1dfa":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817","55b50463286869f584cf849d1587a0fcd54d1dfa"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}