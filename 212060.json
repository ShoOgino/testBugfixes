{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","commits":[{"id":"03e17b020972a0d6e8d6823f545571a66646a167","date":1547847724,"type":1,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","sourceNew":"  @Override\n  public NormsProducer getMergeInstance() throws IOException {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public NormsProducer getMergeInstance() throws IOException {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":1,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","sourceNew":"  @Override\n  public NormsProducer getMergeInstance() throws IOException {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public NormsProducer getMergeInstance() throws IOException {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbc046116d49cd3d0c50f7169cabaa295bc23a4a","date":1552989114,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","sourceNew":"  @Override\n  public NormsProducer getMergeInstance() {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public NormsProducer getMergeInstance() throws IOException {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57cb6df494f10aeb3fab477b1ce4a9187455a227","date":1574155024,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene70/Lucene70NormsProducer#getMergeInstance().mjava","sourceNew":null,"sourceOld":"  @Override\n  public NormsProducer getMergeInstance() {\n    Lucene70NormsProducer clone;\n    try {\n      clone = (Lucene70NormsProducer) super.clone();\n    } catch (CloneNotSupportedException e) {\n      // cannot happen\n      throw new RuntimeException(e);\n    }\n    clone.data = data.clone();\n    clone.dataInputs = new HashMap<>();\n    clone.disiInputs = new HashMap<>();\n    clone.merging = true;\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e17b020972a0d6e8d6823f545571a66646a167":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","03e17b020972a0d6e8d6823f545571a66646a167"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["03e17b020972a0d6e8d6823f545571a66646a167"],"57cb6df494f10aeb3fab477b1ce4a9187455a227":["dbc046116d49cd3d0c50f7169cabaa295bc23a4a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57cb6df494f10aeb3fab477b1ce4a9187455a227"]},"commit2Childs":{"03e17b020972a0d6e8d6823f545571a66646a167":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","dbc046116d49cd3d0c50f7169cabaa295bc23a4a"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03e17b020972a0d6e8d6823f545571a66646a167","c89f1ef80a9432f4eabaeda9a1e135cd72e60836"],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["57cb6df494f10aeb3fab477b1ce4a9187455a227"],"57cb6df494f10aeb3fab477b1ce4a9187455a227":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}