{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/TestNGramFilters#testEdgeNGramFilter3().mjava","commits":[{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/TestNGramFilters#testEdgeNGramFilter3().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestNGramFilters#testEdgeNGramFilter3().mjava","sourceNew":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"side\", \"back\");\n    EdgeNGramFilterFactory factory = new EdgeNGramFilterFactory();\n    factory.init(args);\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","sourceOld":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"side\", \"back\");\n    EdgeNGramFilterFactory factory = new EdgeNGramFilterFactory();\n    factory.init(args);\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/TestNGramFilters#testEdgeNGramFilter3().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestNGramFilters#testEdgeNGramFilter3().mjava","sourceNew":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"side\", \"back\");\n    EdgeNGramFilterFactory factory = new EdgeNGramFilterFactory();\n    factory.init(args);\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","sourceOld":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"side\", \"back\");\n    EdgeNGramFilterFactory factory = new EdgeNGramFilterFactory();\n    factory.init(args);\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/TestNGramFilters#testEdgeNGramFilter3().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestNGramFilters#testEdgeNGramFilter3().mjava","sourceNew":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"side\", \"back\");\n    EdgeNGramFilterFactory factory = new EdgeNGramFilterFactory();\n    factory.init(args);\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","sourceOld":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"side\", \"back\");\n    EdgeNGramFilterFactory factory = new EdgeNGramFilterFactory();\n    factory.init(args);\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/TestNGramFilters#testEdgeNGramFilter3().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestNGramFilters#testEdgeNGramFilter3().mjava","sourceNew":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"side\", \"back\");\n    EdgeNGramFilterFactory factory = new EdgeNGramFilterFactory();\n    factory.init(args);\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","sourceOld":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"side\", \"back\");\n    EdgeNGramFilterFactory factory = new EdgeNGramFilterFactory();\n    factory.init(args);\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/TestNGramFilters#testEdgeNGramFilter3().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/TestNGramFilters#testEdgeNGramFilter3().mjava","sourceNew":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"EdgeNGram\",\n        \"side\", \"back\").create(stream);\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","sourceOld":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"side\", \"back\");\n    EdgeNGramFilterFactory factory = new EdgeNGramFilterFactory();\n    factory.init(args);\n    TokenStream stream = factory.create(new MockTokenizer(reader, MockTokenizer.WHITESPACE, false));\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"523c1863d7ec17e9a5067cef7e233c388f8ab263","date":1367931848,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/TestNGramFilters#testEdgeNGramFilter3().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/TestNGramFilters#testEdgeNGramFilter3().mjava","sourceNew":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"EdgeNGram\", Version.LUCENE_43,\n        \"side\", \"back\").create(stream);\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","sourceOld":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"EdgeNGram\",\n        \"side\", \"back\").create(stream);\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7567347acd9579d742a2ffd4feb1a32062fb1bc3","date":1367935406,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/TestNGramFilters#testEdgeNGramFilter3().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test EdgeNGramFilterFactory with side option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"ready\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"EdgeNGram\", Version.LUCENE_43,\n        \"side\", \"back\").create(stream);\n    assertTokenStreamContents(stream, \n        new String[] { \"y\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9160b6a1bfd5be8bda2af57a9ce9d0946795b445","date":1583584360,"type":0,"author":"Paul Pazderski","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/TestNGramFilters#testEdgeNGramFilter3().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test EdgeNGramFilterFactory with preserve option\n   */\n  public void testEdgeNGramFilter3() throws Exception {\n    Reader reader = new StringReader(\"test\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"EdgeNGram\",\n        \"minGramSize\", \"1\",\n        \"maxGramSize\", \"2\",\n        \"preserveOriginal\", \"true\").create(stream);\n    assertTokenStreamContents(stream, \n        new String[] { \"t\", \"te\", \"test\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"523c1863d7ec17e9a5067cef7e233c388f8ab263":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"9160b6a1bfd5be8bda2af57a9ce9d0946795b445":["7567347acd9579d742a2ffd4feb1a32062fb1bc3"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9160b6a1bfd5be8bda2af57a9ce9d0946795b445"],"7567347acd9579d742a2ffd4feb1a32062fb1bc3":["523c1863d7ec17e9a5067cef7e233c388f8ab263"]},"commit2Childs":{"523c1863d7ec17e9a5067cef7e233c388f8ab263":["7567347acd9579d742a2ffd4feb1a32062fb1bc3"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["523c1863d7ec17e9a5067cef7e233c388f8ab263"],"9160b6a1bfd5be8bda2af57a9ce9d0946795b445":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"7567347acd9579d742a2ffd4feb1a32062fb1bc3":["9160b6a1bfd5be8bda2af57a9ce9d0946795b445"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}