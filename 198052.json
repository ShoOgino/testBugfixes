{"path":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.PayloadChecker#collectLeaf(PostingsEnum,int,Term).mjava","commits":[{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.PayloadChecker#collectLeaf(PostingsEnum,int,Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/SpanPayloadCheckQuery.PayloadChecker#collectLeaf(PostingsEnum,int,Term).mjava","sourceNew":"    @Override\n    public void collectLeaf(PostingsEnum postings, int position, Term term) throws IOException {\n      if (!matches)\n        return;\n      if (upto >= payloadToMatch.size()) {\n        matches = false;\n        return;\n      }\n      BytesRef payload = postings.getPayload();\n      if (payloadToMatch.get(upto) == null) {\n        matches = payload == null;\n        upto++;\n        return;\n      }\n      if (payload == null) {\n        matches = false;\n        upto++;\n        return;\n      }\n      matches = payloadToMatch.get(upto).bytesEquals(payload);\n      upto++;\n    }\n\n","sourceOld":"    @Override\n    public void collectLeaf(PostingsEnum postings, int position, Term term) throws IOException {\n      if (!matches)\n        return;\n      if (upto >= payloadToMatch.size()) {\n        matches = false;\n        return;\n      }\n      BytesRef payload = postings.getPayload();\n      if (payloadToMatch.get(upto) == null) {\n        matches = payload == null;\n        upto++;\n        return;\n      }\n      if (payload == null) {\n        matches = false;\n        upto++;\n        return;\n      }\n      matches = payloadToMatch.get(upto).bytesEquals(payload);\n      upto++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"]},"commit2Childs":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}