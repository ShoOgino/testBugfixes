{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","commits":[{"id":"28bce66b0b769a7827b1f4df30b3f50a2ed6c355","date":1347720564,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","pathOld":"/dev/null","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new TwoDoublesStrategy(ctx, \"twodoubles\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6bc1e76fdb8a9952244528f098da956d2f52acec","date":1348348531,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new TwoDoublesStrategy(ctx, \"twodoubles\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":["aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4","aaa4203f9b7fbc832b95b0ab5f986b81cd12aae4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1068799b5537c6408504cf7e15cb90ba57491440","date":1392577122,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new SerializedDVStrategy(ctx, \"serialized\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new SerializedDVStrategy(ctx, \"serialized\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<Object[]>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new SerializedDVStrategy(ctx, \"serialized\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9d3854546d75fdc5a4c3b13d0c67b6b331185945","date":1429762111,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new PackedQuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_packedquad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new SerializedDVStrategy(ctx, \"serialized\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new SerializedDVStrategy(ctx, \"serialized\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e","date":1447833002,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","sourceNew":"  @ParametersFactory(argumentFormatting = \"strategy=%s\")\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new PackedQuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_packedquad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new SerializedDVStrategy(ctx, \"serialized\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    grid = new PackedQuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_packedquad\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    strategy = new SerializedDVStrategy(ctx, \"serialized\");\n    ctorArgs.add(new Object[]{new Param(strategy)});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","sourceNew":"  @ParametersFactory(argumentFormatting = \"strategy=%s\")\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new PackedQuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_packedquad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new SerializedDVStrategy(ctx, \"serialized\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory(argumentFormatting = \"strategy=%s\")\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new PackedQuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_packedquad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new SerializedDVStrategy(ctx, \"serialized\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#parameters().mjava","sourceNew":"  @ParametersFactory(argumentFormatting = \"strategy=%s\")\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new PackedQuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_packedquad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new SerializedDVStrategy(ctx, \"serialized\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    return ctorArgs;\n  }\n\n","sourceOld":"  @ParametersFactory(argumentFormatting = \"strategy=%s\")\n  public static Iterable<Object[]> parameters() {\n    List<Object[]> ctorArgs = new ArrayList<>();\n\n    SpatialContext ctx = SpatialContext.GEO;\n    SpatialPrefixTree grid;\n    SpatialStrategy strategy;\n\n    grid = new QuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_quad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new GeohashPrefixTree(ctx,12);\n    strategy = new TermQueryPrefixTreeStrategy(grid, \"termquery_geohash\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    grid = new PackedQuadPrefixTree(ctx,25);\n    strategy = new RecursivePrefixTreeStrategy(grid, \"recursive_packedquad\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new PointVectorStrategy(ctx, \"pointvector\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new BBoxStrategy(ctx, \"bbox\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    strategy = new SerializedDVStrategy(ctx, \"serialized\");\n    ctorArgs.add(new Object[]{strategy.getFieldName(), strategy});\n\n    return ctorArgs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1068799b5537c6408504cf7e15cb90ba57491440":["6bc1e76fdb8a9952244528f098da956d2f52acec"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["1068799b5537c6408504cf7e15cb90ba57491440"],"af2638813028b254a88b418ebeafb541afb49653":["7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e","112d77ac8d3e10a362516ad834c9a11d35c94234"],"6bc1e76fdb8a9952244528f098da956d2f52acec":["28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"9d3854546d75fdc5a4c3b13d0c67b6b331185945":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e"],"7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e":["9d3854546d75fdc5a4c3b13d0c67b6b331185945"],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"1068799b5537c6408504cf7e15cb90ba57491440":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["9d3854546d75fdc5a4c3b13d0c67b6b331185945"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6bc1e76fdb8a9952244528f098da956d2f52acec":["1068799b5537c6408504cf7e15cb90ba57491440"],"9d3854546d75fdc5a4c3b13d0c67b6b331185945":["7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"7fbf11f45e0e41ca74d33bbf10dbd839f4f43e5e":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["6bc1e76fdb8a9952244528f098da956d2f52acec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}