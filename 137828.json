{"path":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter#beforeClassBaseTestRangeFilter().mjava","commits":[{"id":"150488c1317972164a9a824be05b1ba2ba0fc68c","date":1284316090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter#beforeClassBaseTestRangeFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassBaseTestRangeFilter() throws Exception {\n    Random random = newStaticRandom(BaseTestRangeFilter.class);\n    signedIndexDir = new TestIndex(random, Integer.MAX_VALUE, Integer.MIN_VALUE, true);\n    unsignedIndexDir = new TestIndex(random, Integer.MAX_VALUE, 0, false);\n    signedIndexReader = build(random, signedIndexDir);\n    unsignedIndexReader = build(random, unsignedIndexDir);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    signedIndexDir = new TestIndex(random, Integer.MAX_VALUE, Integer.MIN_VALUE, true);\n    unsignedIndexDir = new TestIndex(random, Integer.MAX_VALUE, 0, false);\n    signedIndexReader = build(random, signedIndexDir);\n    unsignedIndexReader = build(random, unsignedIndexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f9dba8ffba48fba97d7a90fd45f6da87ba55736","date":1285244347,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter#beforeClassBaseTestRangeFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter#beforeClassBaseTestRangeFilter().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassBaseTestRangeFilter() throws Exception {\n    signedIndexDir = new TestIndex(random, Integer.MAX_VALUE, Integer.MIN_VALUE, true);\n    unsignedIndexDir = new TestIndex(random, Integer.MAX_VALUE, 0, false);\n    signedIndexReader = build(random, signedIndexDir);\n    unsignedIndexReader = build(random, unsignedIndexDir);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassBaseTestRangeFilter() throws Exception {\n    Random random = newStaticRandom(BaseTestRangeFilter.class);\n    signedIndexDir = new TestIndex(random, Integer.MAX_VALUE, Integer.MIN_VALUE, true);\n    unsignedIndexDir = new TestIndex(random, Integer.MAX_VALUE, 0, false);\n    signedIndexReader = build(random, signedIndexDir);\n    unsignedIndexReader = build(random, unsignedIndexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter#beforeClassBaseTestRangeFilter().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClassBaseTestRangeFilter() throws Exception {\n    signedIndexDir = new TestIndex(random, Integer.MAX_VALUE, Integer.MIN_VALUE, true);\n    unsignedIndexDir = new TestIndex(random, Integer.MAX_VALUE, 0, false);\n    signedIndexReader = build(random, signedIndexDir);\n    unsignedIndexReader = build(random, unsignedIndexDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5cdad9e745f40d1e174b382bb7d664ca53d9138","date":1310498637,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter#beforeClassBaseTestRangeFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter#beforeClassBaseTestRangeFilter().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassBaseTestRangeFilter() throws Exception {\n    maxId = atLeast(500);\n    signedIndexDir = new TestIndex(random, Integer.MAX_VALUE, Integer.MIN_VALUE, true);\n    unsignedIndexDir = new TestIndex(random, Integer.MAX_VALUE, 0, false);\n    signedIndexReader = build(random, signedIndexDir);\n    unsignedIndexReader = build(random, unsignedIndexDir);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassBaseTestRangeFilter() throws Exception {\n    signedIndexDir = new TestIndex(random, Integer.MAX_VALUE, Integer.MIN_VALUE, true);\n    unsignedIndexDir = new TestIndex(random, Integer.MAX_VALUE, 0, false);\n    signedIndexReader = build(random, signedIndexDir);\n    unsignedIndexReader = build(random, unsignedIndexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/BaseTestRangeFilter#beforeClassBaseTestRangeFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter#beforeClassBaseTestRangeFilter().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassBaseTestRangeFilter() throws Exception {\n    maxId = atLeast(500);\n    signedIndexDir = new TestIndex(random, Integer.MAX_VALUE, Integer.MIN_VALUE, true);\n    unsignedIndexDir = new TestIndex(random, Integer.MAX_VALUE, 0, false);\n    signedIndexReader = build(random, signedIndexDir);\n    unsignedIndexReader = build(random, unsignedIndexDir);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassBaseTestRangeFilter() throws Exception {\n    maxId = atLeast(500);\n    signedIndexDir = new TestIndex(random, Integer.MAX_VALUE, Integer.MIN_VALUE, true);\n    unsignedIndexDir = new TestIndex(random, Integer.MAX_VALUE, 0, false);\n    signedIndexReader = build(random, signedIndexDir);\n    unsignedIndexReader = build(random, unsignedIndexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5cdad9e745f40d1e174b382bb7d664ca53d9138":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a5cdad9e745f40d1e174b382bb7d664ca53d9138"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"150488c1317972164a9a824be05b1ba2ba0fc68c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["150488c1317972164a9a824be05b1ba2ba0fc68c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"a5cdad9e745f40d1e174b382bb7d664ca53d9138":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","150488c1317972164a9a824be05b1ba2ba0fc68c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"150488c1317972164a9a824be05b1ba2ba0fc68c":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["a5cdad9e745f40d1e174b382bb7d664ca53d9138","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}