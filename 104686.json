{"path":"solr/core/src/test/org/apache/solr/cloud/VMParamsZkACLAndCredentialsProvidersTest#doTest(SolrZkClient,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","commits":[{"id":"20be168d828ac40d262f85364d02f15b491dd88b","date":1469725145,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/VMParamsZkACLAndCredentialsProvidersTest#doTest(SolrZkClient,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/VMParamsZkACLAndCredentialsProvidersTest#doTest(SolrZkClient,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  protected static void doTest(\n      SolrZkClient zkClient,\n      boolean getData, boolean list, boolean create, boolean setData, boolean delete,\n      boolean secureGet, boolean secureList, boolean secureCreate, boolean secureSet, boolean secureDelete) throws Exception {\n    doTest(zkClient, \"/protectedCreateNode\", getData, list, create, setData, delete);\n    doTest(zkClient, \"/protectedMakePathNode\", getData, list, create, setData, delete);\n    doTest(zkClient, \"/unprotectedCreateNode\", true, true, true, true, delete);\n    doTest(zkClient, \"/unprotectedMakePathNode\", true, true, true, true, delete);\n    doTest(zkClient, SecurityAwareZkACLProvider.SECURITY_ZNODE_PATH, secureGet, secureList, secureCreate, secureSet, secureDelete);\n  }\n\n","sourceOld":"  protected static void doTest(SolrZkClient zkClient, boolean getData, boolean list, boolean create, boolean setData, boolean delete) throws Exception {\n    doTest(zkClient, \"/protectedCreateNode\", getData, list, create, setData, delete);\n    doTest(zkClient, \"/protectedMakePathNode\", getData, list, create, setData, delete);\n    doTest(zkClient, \"/unprotectedCreateNode\", true, true, true, true, delete);\n    doTest(zkClient, \"/unprotectedMakePathNode\", true, true, true, true, delete);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/VMParamsZkACLAndCredentialsProvidersTest#doTest(SolrZkClient,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  protected static void doTest(\n      SolrZkClient zkClient,\n      boolean getData, boolean list, boolean create, boolean setData, boolean delete,\n      boolean secureGet, boolean secureList, boolean secureCreate, boolean secureSet, boolean secureDelete) throws Exception {\n    doTest(zkClient, \"/protectedCreateNode\", getData, list, create, setData, delete);\n    doTest(zkClient, \"/protectedMakePathNode\", getData, list, create, setData, delete);\n    doTest(zkClient, \"/unprotectedCreateNode\", true, true, true, true, delete);\n    doTest(zkClient, \"/unprotectedMakePathNode\", true, true, true, true, delete);\n    doTest(zkClient, SecurityAwareZkACLProvider.SECURITY_ZNODE_PATH, secureGet, secureList, secureCreate, secureSet, secureDelete);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/VMParamsZkACLAndCredentialsProvidersTest#doTest(SolrZkClient,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  protected static void doTest(\n      SolrZkClient zkClient,\n      boolean getData, boolean list, boolean create, boolean setData, boolean delete,\n      boolean secureGet, boolean secureList, boolean secureCreate, boolean secureSet, boolean secureDelete) throws Exception {\n    doTest(zkClient, \"/protectedCreateNode\", getData, list, create, setData, delete);\n    doTest(zkClient, \"/protectedMakePathNode\", getData, list, create, setData, delete);\n    doTest(zkClient, \"/unprotectedCreateNode\", true, true, true, true, delete);\n    doTest(zkClient, \"/unprotectedMakePathNode\", true, true, true, true, delete);\n    doTest(zkClient, SecurityAwareZkACLProvider.SECURITY_ZNODE_PATH, secureGet, secureList, secureCreate, secureSet, secureDelete);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20be168d828ac40d262f85364d02f15b491dd88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","20be168d828ac40d262f85364d02f15b491dd88b"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","20be168d828ac40d262f85364d02f15b491dd88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20be168d828ac40d262f85364d02f15b491dd88b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20be168d828ac40d262f85364d02f15b491dd88b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"20be168d828ac40d262f85364d02f15b491dd88b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}