{"path":"backwards/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testHangOnClose().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testHangOnClose().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1270\n  public void testHangOnClose() throws IOException {\n\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMergePolicy(new LogByteSizeMergePolicy(writer));\n    writer.setMaxBufferedDocs(5);\n    writer.setUseCompoundFile(false);\n    writer.setMergeFactor(100);\n\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    for(int i=0;i<60;i++)\n      writer.addDocument(doc);\n    writer.setMaxBufferedDocs(200);\n    Document doc2 = new Document();\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    for(int i=0;i<10;i++)\n      writer.addDocument(doc2);\n    writer.close();\n\n    Directory dir2 = new MockRAMDirectory();\n    writer = new IndexWriter(dir2, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    LogByteSizeMergePolicy lmp = new LogByteSizeMergePolicy(writer);\n    lmp.setMinMergeMB(0.0001);\n    writer.setMergePolicy(lmp);\n    writer.setMergeFactor(4);\n    writer.setUseCompoundFile(false);\n    writer.setMergeScheduler(new SerialMergeScheduler());\n    writer.addIndexesNoOptimize(new Directory[] {dir});\n    writer.close();\n    dir.close();\n    dir2.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testHangOnClose().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testHangOnClose().mjava","sourceNew":"  // LUCENE-1270\n  public void testHangOnClose() throws IOException {\n\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMergePolicy(new LogByteSizeMergePolicy(writer));\n    writer.setMaxBufferedDocs(5);\n    writer.setUseCompoundFile(false);\n    writer.setMergeFactor(100);\n\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    for(int i=0;i<60;i++)\n      writer.addDocument(doc);\n    writer.setMaxBufferedDocs(200);\n    Document doc2 = new Document();\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    for(int i=0;i<10;i++)\n      writer.addDocument(doc2);\n    writer.close();\n\n    Directory dir2 = new MockRAMDirectory();\n    writer = new IndexWriter(dir2, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    LogByteSizeMergePolicy lmp = new LogByteSizeMergePolicy(writer);\n    lmp.setMinMergeMB(0.0001);\n    writer.setMergePolicy(lmp);\n    writer.setMergeFactor(4);\n    writer.setUseCompoundFile(false);\n    writer.setMergeScheduler(new SerialMergeScheduler());\n    writer.addIndexesNoOptimize(new Directory[] {dir});\n    writer.close();\n    dir.close();\n    dir2.close();\n  }\n\n","sourceOld":"  // LUCENE-1270\n  public void testHangOnClose() throws IOException {\n\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    writer.setMergePolicy(new LogByteSizeMergePolicy(writer));\n    writer.setMaxBufferedDocs(5);\n    writer.setUseCompoundFile(false);\n    writer.setMergeFactor(100);\n\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    for(int i=0;i<60;i++)\n      writer.addDocument(doc);\n    writer.setMaxBufferedDocs(200);\n    Document doc2 = new Document();\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    doc2.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.NO));\n    for(int i=0;i<10;i++)\n      writer.addDocument(doc2);\n    writer.close();\n\n    Directory dir2 = new MockRAMDirectory();\n    writer = new IndexWriter(dir2, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    LogByteSizeMergePolicy lmp = new LogByteSizeMergePolicy(writer);\n    lmp.setMinMergeMB(0.0001);\n    writer.setMergePolicy(lmp);\n    writer.setMergeFactor(4);\n    writer.setUseCompoundFile(false);\n    writer.setMergeScheduler(new SerialMergeScheduler());\n    writer.addIndexesNoOptimize(new Directory[] {dir});\n    writer.close();\n    dir.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}