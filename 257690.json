{"path":"lucene/core/src/java/org/apache/lucene/util/graph/GraphTokenStreamFiniteStrings#getTerms(String,int).mjava","commits":[{"id":"7e0d75d7d3cda2b33e79d0eb0e716169cebec4db","date":1486463279,"type":0,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/graph/GraphTokenStreamFiniteStrings#getTerms(String,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the list of terms that start at the provided state\n   */\n  public Term[] getTerms(String field, int state) {\n    int numT = det.initTransition(state, transition);\n    List<Term> terms = new ArrayList<> ();\n    for (int i = 0; i < numT; i++) {\n      det.getNextTransition(transition);\n      for (int id = transition.min; id <= transition.max; id++) {\n        Term term = new Term(field, idToTerm.get(id));\n        terms.add(term);\n      }\n    }\n    return terms.toArray(new Term[terms.size()]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1183e4d02ec8307ffca25b9879752bea1822f1","date":1563533185,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/graph/GraphTokenStreamFiniteStrings#getTerms(String,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/graph/GraphTokenStreamFiniteStrings#getTerms(String,int).mjava","sourceNew":"  /**\n   * Returns the list of terms that start at the provided state\n   */\n  public Term[] getTerms(String field, int state) {\n    return getTerms(state).stream()\n        .map(s -> new Term(field, s.addAttribute(TermToBytesRefAttribute.class).getBytesRef()))\n        .toArray(Term[]::new);\n  }\n\n","sourceOld":"  /**\n   * Returns the list of terms that start at the provided state\n   */\n  public Term[] getTerms(String field, int state) {\n    int numT = det.initTransition(state, transition);\n    List<Term> terms = new ArrayList<> ();\n    for (int i = 0; i < numT; i++) {\n      det.getNextTransition(transition);\n      for (int id = transition.min; id <= transition.max; id++) {\n        Term term = new Term(field, idToTerm.get(id));\n        terms.add(term);\n      }\n    }\n    return terms.toArray(new Term[terms.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2a1183e4d02ec8307ffca25b9879752bea1822f1":["7e0d75d7d3cda2b33e79d0eb0e716169cebec4db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a1183e4d02ec8307ffca25b9879752bea1822f1"],"7e0d75d7d3cda2b33e79d0eb0e716169cebec4db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e0d75d7d3cda2b33e79d0eb0e716169cebec4db"],"2a1183e4d02ec8307ffca25b9879752bea1822f1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7e0d75d7d3cda2b33e79d0eb0e716169cebec4db":["2a1183e4d02ec8307ffca25b9879752bea1822f1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}