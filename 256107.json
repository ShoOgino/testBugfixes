{"path":"src/test/org/apache/lucene/store/MockRAMDirectory#maybeThrowIOException().mjava","commits":[{"id":"eeefd99c477417e5c7c574228461ebafe92469d4","date":1166460329,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMDirectory#maybeThrowIOException().mjava","pathOld":"/dev/null","sourceNew":"  void maybeThrowIOException() throws IOException {\n    if (randomIOExceptionRate > 0.0) {\n      int number = Math.abs(randomState.nextInt() % 1000);\n      if (number < randomIOExceptionRate*1000) {\n        throw new IOException(\"a random IOException\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abd5d0ae26eed0e7cbbbbed19f6480fe16055e9b","date":1184336627,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMDirectory#maybeThrowIOException().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMDirectory#maybeThrowIOException().mjava","sourceNew":"  void maybeThrowIOException() throws IOException {\n    maybeThrowDeterministicException();\n    if (randomIOExceptionRate > 0.0) {\n      int number = Math.abs(randomState.nextInt() % 1000);\n      if (number < randomIOExceptionRate*1000) {\n        throw new IOException(\"a random IOException\");\n      }\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOException() throws IOException {\n    if (randomIOExceptionRate > 0.0) {\n      int number = Math.abs(randomState.nextInt() % 1000);\n      if (number < randomIOExceptionRate*1000) {\n        throw new IOException(\"a random IOException\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["83bbb041887bbef07b8a98d08a0e1713ce137039"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"83bbb041887bbef07b8a98d08a0e1713ce137039","date":1200330381,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMDirectory#maybeThrowIOException().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMDirectory#maybeThrowIOException().mjava","sourceNew":"  void maybeThrowIOException() throws IOException {\n    if (randomIOExceptionRate > 0.0) {\n      int number = Math.abs(randomState.nextInt() % 1000);\n      if (number < randomIOExceptionRate*1000) {\n        throw new IOException(\"a random IOException\");\n      }\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOException() throws IOException {\n    maybeThrowDeterministicException();\n    if (randomIOExceptionRate > 0.0) {\n      int number = Math.abs(randomState.nextInt() % 1000);\n      if (number < randomIOExceptionRate*1000) {\n        throw new IOException(\"a random IOException\");\n      }\n    }\n  }\n\n","bugFix":["abd5d0ae26eed0e7cbbbbed19f6480fe16055e9b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/MockRAMDirectory#maybeThrowIOException().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMDirectory#maybeThrowIOException().mjava","sourceNew":"  void maybeThrowIOException() throws IOException {\n    if (randomIOExceptionRate > 0.0) {\n      int number = Math.abs(randomState.nextInt() % 1000);\n      if (number < randomIOExceptionRate*1000) {\n        throw new IOException(\"a random IOException\");\n      }\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOException() throws IOException {\n    if (randomIOExceptionRate > 0.0) {\n      int number = Math.abs(randomState.nextInt() % 1000);\n      if (number < randomIOExceptionRate*1000) {\n        throw new IOException(\"a random IOException\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"83bbb041887bbef07b8a98d08a0e1713ce137039":["abd5d0ae26eed0e7cbbbbed19f6480fe16055e9b"],"eeefd99c477417e5c7c574228461ebafe92469d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"abd5d0ae26eed0e7cbbbbed19f6480fe16055e9b":["eeefd99c477417e5c7c574228461ebafe92469d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["83bbb041887bbef07b8a98d08a0e1713ce137039"]},"commit2Childs":{"83bbb041887bbef07b8a98d08a0e1713ce137039":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"eeefd99c477417e5c7c574228461ebafe92469d4":["abd5d0ae26eed0e7cbbbbed19f6480fe16055e9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeefd99c477417e5c7c574228461ebafe92469d4"],"abd5d0ae26eed0e7cbbbbed19f6480fe16055e9b":["83bbb041887bbef07b8a98d08a0e1713ce137039"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}