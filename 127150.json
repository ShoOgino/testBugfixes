{"path":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfoPerCommit info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfoPerCommit info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34c293e9c1585a07c0532058631196bcd9a6cbfe","date":1341849837,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfoPerCommit info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfoPerCommit info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfoPerCommit info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfoPerCommit info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfoPerCommit info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\");\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfoPerCommit info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentCommitInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentInfoPerCommit info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e6d6f6217dc04f29ee177d2837147dd47627787","date":1429543326,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#listSegments().mjava","sourceNew":"  @SuppressForbidden(reason = \"System.out required: command line tool\")\n  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentCommitInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","sourceOld":"  public void listSegments() throws IOException {\n    DecimalFormat formatter = new DecimalFormat(\"###,###.###\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n    for (int x = 0; x < infos.size(); x++) {\n      SegmentCommitInfo info = infos.info(x);\n      String sizeStr = formatter.format(info.sizeInBytes());\n      System.out.println(info.info.name + \" \" + sizeStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e6d6f6217dc04f29ee177d2837147dd47627787":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["34c293e9c1585a07c0532058631196bcd9a6cbfe"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["b89678825b68eccaf09e6ab71675fc0b0af1e099","9d153abcf92dc5329d98571a8c3035df9bd80648"],"34c293e9c1585a07c0532058631196bcd9a6cbfe":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","34c293e9c1585a07c0532058631196bcd9a6cbfe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e6d6f6217dc04f29ee177d2837147dd47627787"],"46d8ada1fff8d18cb197c38c7983225162599948":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","34c293e9c1585a07c0532058631196bcd9a6cbfe"]},"commit2Childs":{"7e6d6f6217dc04f29ee177d2837147dd47627787":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["7e6d6f6217dc04f29ee177d2837147dd47627787"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["34c293e9c1585a07c0532058631196bcd9a6cbfe","fe33227f6805edab2036cbb80645cc4e2d1fa424","46d8ada1fff8d18cb197c38c7983225162599948"],"34c293e9c1585a07c0532058631196bcd9a6cbfe":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","fe33227f6805edab2036cbb80645cc4e2d1fa424","46d8ada1fff8d18cb197c38c7983225162599948"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}