{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#maxgaps(int,IntervalsSource).mjava","commits":[{"id":"ff275d3941a30f2db7c9278444015f412b835254","date":1544435249,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#maxgaps(int,IntervalsSource).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create an {@link IntervalsSource} that filters a sub-source by its gaps\n   * @param gaps        the maximum number of gaps in the sub-source to filter\n   * @param subSource   the sub-source to filter\n   */\n  public static IntervalsSource maxgaps(int gaps, IntervalsSource subSource) {\n    return new FilteredIntervalsSource(\"MAXGAPS/\" + gaps, subSource) {\n      @Override\n      protected boolean accept(IntervalIterator it) {\n        return it.gaps() <= gaps;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde","date":1553685823,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#maxgaps(int,IntervalsSource).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#maxgaps(int,IntervalsSource).mjava","sourceNew":"  /**\n   * Create an {@link IntervalsSource} that filters a sub-source by its gaps\n   * @param gaps        the maximum number of gaps in the sub-source to filter\n   * @param subSource   the sub-source to filter\n   */\n  public static IntervalsSource maxgaps(int gaps, IntervalsSource subSource) {\n    return FilteredIntervalsSource.maxGaps(subSource, gaps);\n  }\n\n","sourceOld":"  /**\n   * Create an {@link IntervalsSource} that filters a sub-source by its gaps\n   * @param gaps        the maximum number of gaps in the sub-source to filter\n   * @param subSource   the sub-source to filter\n   */\n  public static IntervalsSource maxgaps(int gaps, IntervalsSource subSource) {\n    return new FilteredIntervalsSource(\"MAXGAPS/\" + gaps, subSource) {\n      @Override\n      protected boolean accept(IntervalIterator it) {\n        return it.gaps() <= gaps;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/Intervals#maxgaps(int,IntervalsSource).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#maxgaps(int,IntervalsSource).mjava","sourceNew":"  /**\n   * Create an {@link IntervalsSource} that filters a sub-source by its gaps\n   * @param gaps        the maximum number of gaps in the sub-source to filter\n   * @param subSource   the sub-source to filter\n   */\n  public static IntervalsSource maxgaps(int gaps, IntervalsSource subSource) {\n    return FilteredIntervalsSource.maxGaps(subSource, gaps);\n  }\n\n","sourceOld":"  /**\n   * Create an {@link IntervalsSource} that filters a sub-source by its gaps\n   * @param gaps        the maximum number of gaps in the sub-source to filter\n   * @param subSource   the sub-source to filter\n   */\n  public static IntervalsSource maxgaps(int gaps, IntervalsSource subSource) {\n    return FilteredIntervalsSource.maxGaps(subSource, gaps);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"],"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["ff275d3941a30f2db7c9278444015f412b835254"],"ff275d3941a30f2db7c9278444015f412b835254":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"ff275d3941a30f2db7c9278444015f412b835254":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff275d3941a30f2db7c9278444015f412b835254"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}