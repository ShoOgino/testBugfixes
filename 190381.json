{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","sourceNew":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.valueOf(weight.image).floatValue();\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","sourceOld":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.valueOf(weight.image).floatValue();\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","date":1489572490,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","sourceNew":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.parseFloat(weight.image);\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","sourceOld":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.valueOf(weight.image).floatValue();\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55e0b3830b94d1abce4e32e98cfc875d5b14e76f","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","sourceNew":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.parseFloat(weight.image);\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","sourceOld":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.valueOf(weight.image).floatValue();\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","sourceNew":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.parseFloat(weight.image);\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","sourceOld":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.valueOf(weight.image).floatValue();\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5de502b5478255493125e7e801411ba17a6682ec","date":1490974101,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","sourceNew":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.parseFloat(weight.image);\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(BOOST_ERROR_MESSAGE + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(BOOST_ERROR_MESSAGE + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","sourceOld":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.parseFloat(weight.image);\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f20fd35e3055a0c5b387df0b986a68d65d86441","date":1491045405,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","sourceNew":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.parseFloat(weight.image);\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(BOOST_ERROR_MESSAGE + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(BOOST_ERROR_MESSAGE + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","sourceOld":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.parseFloat(weight.image);\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4bf8c857cdf9b9be903cae84ef15985ad090a05","date":1600342158,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","sourceNew":"  final public void OptionalWeights(SrndQuery q) throws ParseException {Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {\n      case CARAT:{\n        ;\n        break;\n        }\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\nfloat f;\n      try {\n        f = Float.parseFloat(weight.image);\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(BOOST_ERROR_MESSAGE + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(BOOST_ERROR_MESSAGE + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n}\n\n","sourceOld":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.parseFloat(weight.image);\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(BOOST_ERROR_MESSAGE + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(BOOST_ERROR_MESSAGE + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5de502b5478255493125e7e801411ba17a6682ec":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"6f20fd35e3055a0c5b387df0b986a68d65d86441":["ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["5de502b5478255493125e7e801411ba17a6682ec"],"ab68488225b6a6c357dda72ed11dedca9914a192":["b89678825b68eccaf09e6ab71675fc0b0af1e099","55e0b3830b94d1abce4e32e98cfc875d5b14e76f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"]},"commit2Childs":{"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["5de502b5478255493125e7e801411ba17a6682ec"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","55e0b3830b94d1abce4e32e98cfc875d5b14e76f","ab68488225b6a6c357dda72ed11dedca9914a192"],"5de502b5478255493125e7e801411ba17a6682ec":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"6f20fd35e3055a0c5b387df0b986a68d65d86441":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab68488225b6a6c357dda72ed11dedca9914a192":["6f20fd35e3055a0c5b387df0b986a68d65d86441"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6f20fd35e3055a0c5b387df0b986a68d65d86441","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}