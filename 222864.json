{"path":"lucene/monitor/src/java/org/apache/lucene/monitor/QueryTree#conjunction(List[Function[TermWeightor,QueryTree]],TermWeightor).mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/QueryTree#conjunction(List[Function[TermWeightor,QueryTree]],TermWeightor).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a conjunction of a set of child nodes\n   */\n  public static QueryTree conjunction(List<Function<TermWeightor, QueryTree>> children, TermWeightor weightor) {\n    if (children.size() == 0) {\n      throw new IllegalArgumentException(\"Cannot build a conjunction with no children\");\n    }\n    if (children.size() == 1) {\n      return children.get(0).apply(weightor);\n    }\n    List<QueryTree> qt = children.stream()\n        .map(f -> f.apply(weightor)).collect(Collectors.toList());\n    List<QueryTree> restricted = qt.stream().filter(t -> t.weight() > 0).collect(Collectors.toList());\n    if (restricted.size() == 0) {\n      // all children are ANY, so just return the first one\n      return qt.get(0);\n    }\n    return new ConjunctionQueryTree(qt);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}