{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/FileUtils#fullyDelete(File).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/FileUtils#fullyDelete(File).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/FileUtils#fullyDelete(File).mjava","sourceNew":"  /**\n   * Delete files and directories, even if non-empty.\n   *\n   * @param dir file or directory\n   * @return true on success, false if no or part of files have been deleted\n   * @throws java.io.IOException\n   */\n  public static boolean fullyDelete(File dir) throws IOException {\n    if (dir == null || !dir.exists()) return false;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (int i = 0; i < contents.length; i++) {\n        if (contents[i].isFile()) {\n          if (!contents[i].delete()) {\n            return false;\n          }\n        } else {\n          if (!fullyDelete(contents[i])) {\n            return false;\n          }\n        }\n      }\n    }\n    return dir.delete();\n  }\n\n","sourceOld":"  /**\n   * Delete files and directories, even if non-empty.\n   *\n   * @param dir file or directory\n   * @return true on success, false if no or part of files have been deleted\n   * @throws java.io.IOException\n   */\n  public static boolean fullyDelete(File dir) throws IOException {\n    if (dir == null || !dir.exists()) return false;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (int i = 0; i < contents.length; i++) {\n        if (contents[i].isFile()) {\n          if (!contents[i].delete()) {\n            return false;\n          }\n        } else {\n          if (!fullyDelete(contents[i])) {\n            return false;\n          }\n        }\n      }\n    }\n    return dir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/FileUtils#fullyDelete(File).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/FileUtils#fullyDelete(File).mjava","sourceNew":"  /**\n   * Delete files and directories, even if non-empty.\n   *\n   * @param dir file or directory\n   * @return true on success, false if no or part of files have been deleted\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static boolean fullyDelete(File dir) throws IOException {\n    if (dir == null || !dir.exists()) return false;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (int i = 0; i < contents.length; i++) {\n        if (contents[i].isFile()) {\n          if (!contents[i].delete()) {\n            return false;\n          }\n        } else {\n          if (!fullyDelete(contents[i])) {\n            return false;\n          }\n        }\n      }\n    }\n    return dir.delete();\n  }\n\n","sourceOld":"  /**\n   * Delete files and directories, even if non-empty.\n   *\n   * @param dir file or directory\n   * @return true on success, false if no or part of files have been deleted\n   * @throws java.io.IOException\n   */\n  public static boolean fullyDelete(File dir) throws IOException {\n    if (dir == null || !dir.exists()) return false;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (int i = 0; i < contents.length; i++) {\n        if (contents[i].isFile()) {\n          if (!contents[i].delete()) {\n            return false;\n          }\n        } else {\n          if (!fullyDelete(contents[i])) {\n            return false;\n          }\n        }\n      }\n    }\n    return dir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/FileUtils#fullyDelete(File).mjava","sourceNew":null,"sourceOld":"  /**\n   * Delete files and directories, even if non-empty.\n   *\n   * @param dir file or directory\n   * @return true on success, false if no or part of files have been deleted\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static boolean fullyDelete(File dir) throws IOException {\n    if (dir == null || !dir.exists()) return false;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (int i = 0; i < contents.length; i++) {\n        if (contents[i].isFile()) {\n          if (!contents[i].delete()) {\n            return false;\n          }\n        } else {\n          if (!fullyDelete(contents[i])) {\n            return false;\n          }\n        }\n      }\n    }\n    return dir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cbc3688252d4a8045d69a164236b2cf87b721f17"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}