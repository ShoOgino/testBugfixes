{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testBasic().mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(config.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    FacetsCollector c = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"value=4 childCount=3\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"value=1 childCount=1\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    DrillDownQuery q = new DrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(config.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"value=4 childCount=3\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"value=1 childCount=1\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56d44586f4c409c6c6c5942b9f0227df806b7300","date":1386027853,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(config.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    FacetsCollector c = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"dim=a path=[] value=4 childCount=3\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"dim=b path=[] value=1 childCount=1\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    DrillDownQuery q = new DrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(config.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    FacetsCollector c = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"value=4 childCount=3\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"value=1 childCount=1\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    DrillDownQuery q = new DrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestSortedSetDocValuesFacets#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(config.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    FacetsCollector c = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"dim=a path=[] value=4 childCount=3\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"dim=b path=[] value=1 childCount=1\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    DrillDownQuery q = new DrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    assumeTrue(\"Test requires SortedSetDV support\", defaultCodecSupportsSortedSet());\n    Directory dir = newDirectory();\n\n    FacetsConfig config = new FacetsConfig();\n    config.setMultiValued(\"a\", true);\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"bar\"));\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"zoo\"));\n    doc.add(new SortedSetDocValuesFacetField(\"b\", \"baz\"));\n    writer.addDocument(config.build(doc));\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new SortedSetDocValuesFacetField(\"a\", \"foo\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // Per-top-reader state:\n    SortedSetDocValuesReaderState state = new SortedSetDocValuesReaderState(searcher.getIndexReader());\n    \n    FacetsCollector c = new FacetsCollector();\n\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    SortedSetDocValuesFacetCounts facets = new SortedSetDocValuesFacetCounts(state, c);\n\n    assertEquals(\"dim=a path=[] value=4 childCount=3\\n  foo (2)\\n  bar (1)\\n  zoo (1)\\n\", facets.getTopChildren(10, \"a\").toString());\n    assertEquals(\"dim=b path=[] value=1 childCount=1\\n  baz (1)\\n\", facets.getTopChildren(10, \"b\").toString());\n\n    // DrillDown:\n    DrillDownQuery q = new DrillDownQuery(config);\n    q.add(\"a\", \"foo\");\n    q.add(\"b\", \"baz\");\n    TopDocs hits = searcher.search(q, 1);\n    assertEquals(1, hits.totalHits);\n\n    IOUtils.close(writer, searcher.getIndexReader(), dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["21d36d0db865f7b84026b447bec653469a6e66df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"56d44586f4c409c6c6c5942b9f0227df806b7300":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":["56d44586f4c409c6c6c5942b9f0227df806b7300"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}