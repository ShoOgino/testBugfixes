{"path":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil#getPorterStemmerAnalyzer(Analyzer).mjava","commits":[{"id":"ea82415927cafd7c8b8bceca08f31a63db1cbdde","date":1133588579,"type":0,"author":"Wolfgang Hoschek","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil#getPorterStemmerAnalyzer(Analyzer).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Returns an English stemming analyzer that stems tokens from the\n\t * underlying child analyzer according to the Porter stemming algorithm. The\n\t * child analyzer must deliver tokens in lower case for the stemmer to work\n\t * properly.\n\t * <p>\n\t * Background: Stemming reduces token terms to their linguistic root form\n\t * e.g. reduces \"fishing\" and \"fishes\" to \"fish\", \"family\" and \"families\" to\n\t * \"famili\", as well as \"complete\" and \"completion\" to \"complet\". Note that\n\t * the root form is not necessarily a meaningful word in itself, and that\n\t * this is not a bug but rather a feature, if you lean back and think about\n\t * fuzzy word matching for a bit.\n\t * <p>\n\t * See the Lucene contrib packages for stemmers (and stop words) for German,\n\t * Russian and many more languages.\n\t * \n\t * @param child\n\t *            the underlying child analyzer\n\t * @return an analyzer wrapper\n\t */\n\tpublic static Analyzer getPorterStemmerAnalyzer(final Analyzer child) {\n\t\t\n\t\tif (child == null) \n\t\t\tthrow new IllegalArgumentException(\"child analyzer must not be null\");\n\t\n\t\treturn new Analyzer() {\n\t\t\tpublic TokenStream tokenStream(String fieldName, Reader reader) {\n\t\t\t\treturn new PorterStemFilter(\n\t\t\t\t\t\tchild.tokenStream(fieldName, reader));\n// \t\t\t\t/* PorterStemFilter and SnowballFilter have the same behaviour, \n// \t\t\t\tbut PorterStemFilter is much faster. */\n//\t\t\t\treturn new org.apache.lucene.analysis.snowball.SnowballFilter(\n//\t\t\t\t\t\tchild.tokenStream(fieldName, reader), \"English\");\n\t\t\t}\n\t\t};\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f68e24227d5556d33ee6d586fd9010cd9ff8bec","date":1150091176,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil#getPorterStemmerAnalyzer(Analyzer).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil#getPorterStemmerAnalyzer(Analyzer).mjava","sourceNew":"  /**\n   * Returns an English stemming analyzer that stems tokens from the\n   * underlying child analyzer according to the Porter stemming algorithm. The\n   * child analyzer must deliver tokens in lower case for the stemmer to work\n   * properly.\n   * <p>\n   * Background: Stemming reduces token terms to their linguistic root form\n   * e.g. reduces \"fishing\" and \"fishes\" to \"fish\", \"family\" and \"families\" to\n   * \"famili\", as well as \"complete\" and \"completion\" to \"complet\". Note that\n   * the root form is not necessarily a meaningful word in itself, and that\n   * this is not a bug but rather a feature, if you lean back and think about\n   * fuzzy word matching for a bit.\n   * <p>\n   * See the Lucene contrib packages for stemmers (and stop words) for German,\n   * Russian and many more languages.\n   * \n   * @param child\n   *            the underlying child analyzer\n   * @return an analyzer wrapper\n   */\n  public static Analyzer getPorterStemmerAnalyzer(final Analyzer child) {\n    \n    if (child == null) \n      throw new IllegalArgumentException(\"child analyzer must not be null\");\n  \n    return new Analyzer() {\n      public TokenStream tokenStream(String fieldName, Reader reader) {\n        return new PorterStemFilter(\n            child.tokenStream(fieldName, reader));\n//        /* PorterStemFilter and SnowballFilter have the same behaviour, \n//        but PorterStemFilter is much faster. */\n//        return new org.apache.lucene.analysis.snowball.SnowballFilter(\n//            child.tokenStream(fieldName, reader), \"English\");\n      }\n    };\n  }\n\n","sourceOld":"\t/**\n\t * Returns an English stemming analyzer that stems tokens from the\n\t * underlying child analyzer according to the Porter stemming algorithm. The\n\t * child analyzer must deliver tokens in lower case for the stemmer to work\n\t * properly.\n\t * <p>\n\t * Background: Stemming reduces token terms to their linguistic root form\n\t * e.g. reduces \"fishing\" and \"fishes\" to \"fish\", \"family\" and \"families\" to\n\t * \"famili\", as well as \"complete\" and \"completion\" to \"complet\". Note that\n\t * the root form is not necessarily a meaningful word in itself, and that\n\t * this is not a bug but rather a feature, if you lean back and think about\n\t * fuzzy word matching for a bit.\n\t * <p>\n\t * See the Lucene contrib packages for stemmers (and stop words) for German,\n\t * Russian and many more languages.\n\t * \n\t * @param child\n\t *            the underlying child analyzer\n\t * @return an analyzer wrapper\n\t */\n\tpublic static Analyzer getPorterStemmerAnalyzer(final Analyzer child) {\n\t\t\n\t\tif (child == null) \n\t\t\tthrow new IllegalArgumentException(\"child analyzer must not be null\");\n\t\n\t\treturn new Analyzer() {\n\t\t\tpublic TokenStream tokenStream(String fieldName, Reader reader) {\n\t\t\t\treturn new PorterStemFilter(\n\t\t\t\t\t\tchild.tokenStream(fieldName, reader));\n// \t\t\t\t/* PorterStemFilter and SnowballFilter have the same behaviour, \n// \t\t\t\tbut PorterStemFilter is much faster. */\n//\t\t\t\treturn new org.apache.lucene.analysis.snowball.SnowballFilter(\n//\t\t\t\t\t\tchild.tokenStream(fieldName, reader), \"English\");\n\t\t\t}\n\t\t};\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d68e5c46e6a5ebdf4dafec4a123344092b915cc0","date":1256752193,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/wordnet/src/java/org/apache/lucene/wordnet/AnalyzerUtil#getPorterStemmerAnalyzer(Analyzer).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil#getPorterStemmerAnalyzer(Analyzer).mjava","sourceNew":"  /**\n   * Returns an English stemming analyzer that stems tokens from the\n   * underlying child analyzer according to the Porter stemming algorithm. The\n   * child analyzer must deliver tokens in lower case for the stemmer to work\n   * properly.\n   * <p>\n   * Background: Stemming reduces token terms to their linguistic root form\n   * e.g. reduces \"fishing\" and \"fishes\" to \"fish\", \"family\" and \"families\" to\n   * \"famili\", as well as \"complete\" and \"completion\" to \"complet\". Note that\n   * the root form is not necessarily a meaningful word in itself, and that\n   * this is not a bug but rather a feature, if you lean back and think about\n   * fuzzy word matching for a bit.\n   * <p>\n   * See the Lucene contrib packages for stemmers (and stop words) for German,\n   * Russian and many more languages.\n   * \n   * @param child\n   *            the underlying child analyzer\n   * @return an analyzer wrapper\n   */\n  public static Analyzer getPorterStemmerAnalyzer(final Analyzer child) {\n    \n    if (child == null) \n      throw new IllegalArgumentException(\"child analyzer must not be null\");\n  \n    return new Analyzer() {\n      public TokenStream tokenStream(String fieldName, Reader reader) {\n        return new PorterStemFilter(\n            child.tokenStream(fieldName, reader));\n//        /* PorterStemFilter and SnowballFilter have the same behaviour, \n//        but PorterStemFilter is much faster. */\n//        return new org.apache.lucene.analysis.snowball.SnowballFilter(\n//            child.tokenStream(fieldName, reader), \"English\");\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Returns an English stemming analyzer that stems tokens from the\n   * underlying child analyzer according to the Porter stemming algorithm. The\n   * child analyzer must deliver tokens in lower case for the stemmer to work\n   * properly.\n   * <p>\n   * Background: Stemming reduces token terms to their linguistic root form\n   * e.g. reduces \"fishing\" and \"fishes\" to \"fish\", \"family\" and \"families\" to\n   * \"famili\", as well as \"complete\" and \"completion\" to \"complet\". Note that\n   * the root form is not necessarily a meaningful word in itself, and that\n   * this is not a bug but rather a feature, if you lean back and think about\n   * fuzzy word matching for a bit.\n   * <p>\n   * See the Lucene contrib packages for stemmers (and stop words) for German,\n   * Russian and many more languages.\n   * \n   * @param child\n   *            the underlying child analyzer\n   * @return an analyzer wrapper\n   */\n  public static Analyzer getPorterStemmerAnalyzer(final Analyzer child) {\n    \n    if (child == null) \n      throw new IllegalArgumentException(\"child analyzer must not be null\");\n  \n    return new Analyzer() {\n      public TokenStream tokenStream(String fieldName, Reader reader) {\n        return new PorterStemFilter(\n            child.tokenStream(fieldName, reader));\n//        /* PorterStemFilter and SnowballFilter have the same behaviour, \n//        but PorterStemFilter is much faster. */\n//        return new org.apache.lucene.analysis.snowball.SnowballFilter(\n//            child.tokenStream(fieldName, reader), \"English\");\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ea82415927cafd7c8b8bceca08f31a63db1cbdde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["ea82415927cafd7c8b8bceca08f31a63db1cbdde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"]},"commit2Childs":{"ea82415927cafd7c8b8bceca08f31a63db1cbdde":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea82415927cafd7c8b8bceca08f31a63db1cbdde"],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}