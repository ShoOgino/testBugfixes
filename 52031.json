{"path":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","commits":[{"id":"a18711620bacf3c16e79b9d43a62ec0dfbdeffac","date":1133544735,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","pathOld":"/dev/null","sourceNew":"  // setup the index\n  public void setUp () throws IOException {\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.optimize();\n    writer.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5657b669e16b843aac69f0ba7e89def1f93f6ea0","date":1164163669,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  public void setUp () throws IOException {\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","sourceOld":"  // setup the index\n  public void setUp () throws IOException {\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.optimize();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"290c401c31db375e771805c3ba7ac5f64c7370dc","date":1192034795,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","sourceOld":"  // setup the index\n  public void setUp () throws IOException {\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","bugFix":["a18711620bacf3c16e79b9d43a62ec0dfbdeffac"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","sourceOld":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","sourceOld":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.UN_TOKENIZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0ccb38525d59e4082f912797fe4d0a7d9bead43","date":1245100309,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestRAMDirectory#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/store/TestRAMDirectory#setUp().mjava","sourceNew":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","sourceOld":"  // setup the index\n  public void setUp () throws Exception {\n    super.setUp();\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    if (tempDir == null)\n      throw new IOException(\"java.io.tmpdir undefined, cannot run test\");\n    indexDir = new File(tempDir, \"RAMDirIndex\");\n    \n    IndexWriter writer  = new IndexWriter(indexDir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    // add some documents\n    Document doc = null;\n    for (int i = 0; i < docsToAdd; i++) {\n      doc = new Document();\n      doc.add(new Field(\"content\", English.intToEnglish(i).trim(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    assertEquals(docsToAdd, writer.docCount());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"290c401c31db375e771805c3ba7ac5f64c7370dc":["5657b669e16b843aac69f0ba7e89def1f93f6ea0"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"5657b669e16b843aac69f0ba7e89def1f93f6ea0":["a18711620bacf3c16e79b9d43a62ec0dfbdeffac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0ccb38525d59e4082f912797fe4d0a7d9bead43"],"f0ccb38525d59e4082f912797fe4d0a7d9bead43":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"a18711620bacf3c16e79b9d43a62ec0dfbdeffac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a18711620bacf3c16e79b9d43a62ec0dfbdeffac"],"290c401c31db375e771805c3ba7ac5f64c7370dc":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["f0ccb38525d59e4082f912797fe4d0a7d9bead43"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"5657b669e16b843aac69f0ba7e89def1f93f6ea0":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"a18711620bacf3c16e79b9d43a62ec0dfbdeffac":["5657b669e16b843aac69f0ba7e89def1f93f6ea0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f0ccb38525d59e4082f912797fe4d0a7d9bead43":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}