{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotClusterStateProvider#SnapshotClusterStateProvider(ClusterStateProvider).mjava","commits":[{"id":"edf5b262a72d10530eb2f01dc8f19060355b213e","date":1557765866,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotClusterStateProvider#SnapshotClusterStateProvider(ClusterStateProvider).mjava","pathOld":"/dev/null","sourceNew":"  public SnapshotClusterStateProvider(ClusterStateProvider other) throws Exception {\n    liveNodes = Collections.unmodifiableSet(new HashSet<>(other.getLiveNodes()));\n    ClusterState otherState = other.getClusterState();\n    clusterState = new ClusterState(otherState.getZNodeVersion(), liveNodes, otherState.getCollectionsMap());\n    clusterProperties = new HashMap<>(other.getClusterProperties());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7211cffa9ca30fcd9ff33fb1059543d95773b8b1","date":1566595888,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotClusterStateProvider#SnapshotClusterStateProvider(ClusterStateProvider).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotClusterStateProvider#SnapshotClusterStateProvider(ClusterStateProvider).mjava","sourceNew":"  public SnapshotClusterStateProvider(ClusterStateProvider other) throws Exception {\n    liveNodes = Set.copyOf(other.getLiveNodes());\n    ClusterState otherState = other.getClusterState();\n    clusterState = new ClusterState(otherState.getZNodeVersion(), liveNodes, otherState.getCollectionsMap());\n    clusterProperties = new HashMap<>(other.getClusterProperties());\n  }\n\n","sourceOld":"  public SnapshotClusterStateProvider(ClusterStateProvider other) throws Exception {\n    liveNodes = Collections.unmodifiableSet(new HashSet<>(other.getLiveNodes()));\n    ClusterState otherState = other.getClusterState();\n    clusterState = new ClusterState(otherState.getZNodeVersion(), liveNodes, otherState.getCollectionsMap());\n    clusterProperties = new HashMap<>(other.getClusterProperties());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ad9c35f926b4bf8da0336d1300efc709c8d5a56","date":1591729157,"type":3,"author":"murblanc","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotClusterStateProvider#SnapshotClusterStateProvider(ClusterStateProvider).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotClusterStateProvider#SnapshotClusterStateProvider(ClusterStateProvider).mjava","sourceNew":"  public SnapshotClusterStateProvider(ClusterStateProvider other) throws Exception {\n    liveNodes = Set.copyOf(other.getLiveNodes());\n    ClusterState otherState = other.getClusterState();\n    clusterState = new ClusterState(liveNodes, otherState.getCollectionsMap());\n    clusterProperties = new HashMap<>(other.getClusterProperties());\n  }\n\n","sourceOld":"  public SnapshotClusterStateProvider(ClusterStateProvider other) throws Exception {\n    liveNodes = Set.copyOf(other.getLiveNodes());\n    ClusterState otherState = other.getClusterState();\n    clusterState = new ClusterState(otherState.getZNodeVersion(), liveNodes, otherState.getCollectionsMap());\n    clusterProperties = new HashMap<>(other.getClusterProperties());\n  }\n\n","bugFix":["edf5b262a72d10530eb2f01dc8f19060355b213e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SnapshotClusterStateProvider#SnapshotClusterStateProvider(ClusterStateProvider).mjava","sourceNew":null,"sourceOld":"  public SnapshotClusterStateProvider(ClusterStateProvider other) throws Exception {\n    liveNodes = Set.copyOf(other.getLiveNodes());\n    ClusterState otherState = other.getClusterState();\n    clusterState = new ClusterState(liveNodes, otherState.getCollectionsMap());\n    clusterProperties = new HashMap<>(other.getClusterProperties());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["7211cffa9ca30fcd9ff33fb1059543d95773b8b1"],"3f504512a03d978990cbff30db0522b354e846db":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"7211cffa9ca30fcd9ff33fb1059543d95773b8b1":["edf5b262a72d10530eb2f01dc8f19060355b213e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"edf5b262a72d10530eb2f01dc8f19060355b213e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7211cffa9ca30fcd9ff33fb1059543d95773b8b1":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["edf5b262a72d10530eb2f01dc8f19060355b213e"],"edf5b262a72d10530eb2f01dc8f19060355b213e":["7211cffa9ca30fcd9ff33fb1059543d95773b8b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}