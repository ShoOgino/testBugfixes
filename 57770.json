{"path":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testCommit().mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testCommit().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testCommit().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.commit(boolean)'\n     */\n    public void testCommit() throws IOException {\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n         iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        this.indexer.updateDocument(iDoc);\n        this.indexer.updateDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        IndexEventListenerStub evListener = new IndexEventListenerStub();\n        this.indexer.registerIndexEventListener(evListener);\n        assertEquals(1,this.indexer.docsAdded.get());\n        assertEquals(1,this.indexer.docsDeleted.get());\n        assertEquals(2,this.indexer.docsUpdated.get());\n        assertEquals(0,evListener.getCalledCount());\n        this.indexer.commit(true);\n        this.indexer.commit(false);\n        assertEquals(1,evListener.getCalledCount());\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(0,this.indexer.docsDeleted.get());\n        assertEquals(0,this.indexer.docsUpdated.get());\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.commit(boolean)'\n     */\n    public void testCommit() throws IOException {\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n         iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        this.indexer.updateDocument(iDoc);\n        this.indexer.updateDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        IndexEventListenerStub evListener = new IndexEventListenerStub();\n        this.indexer.registerIndexEventListener(evListener);\n        assertEquals(1,this.indexer.docsAdded.get());\n        assertEquals(1,this.indexer.docsDeleted.get());\n        assertEquals(2,this.indexer.docsUpdated.get());\n        assertEquals(0,evListener.getCalledCount());\n        this.indexer.commit(true);\n        this.indexer.commit(false);\n        assertEquals(1,evListener.getCalledCount());\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(0,this.indexer.docsDeleted.get());\n        assertEquals(0,this.indexer.docsUpdated.get());\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testCommit().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testCommit().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.commit(boolean)'\n     */\n    public void testCommit() throws IOException {\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n         iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        this.indexer.updateDocument(iDoc);\n        this.indexer.updateDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        IndexEventListenerStub evListener = new IndexEventListenerStub();\n        this.indexer.registerIndexEventListener(evListener);\n        assertEquals(1,this.indexer.docsAdded.get());\n        assertEquals(1,this.indexer.docsDeleted.get());\n        assertEquals(2,this.indexer.docsUpdated.get());\n        assertEquals(0,evListener.getCalledCount());\n        this.indexer.commit(true);\n        this.indexer.commit(false);\n        assertEquals(1,evListener.getCalledCount());\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(0,this.indexer.docsDeleted.get());\n        assertEquals(0,this.indexer.docsUpdated.get());\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.commit(boolean)'\n     */\n    public void testCommit() throws IOException {\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n         iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        this.indexer.updateDocument(iDoc);\n        this.indexer.updateDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        IndexEventListenerStub evListener = new IndexEventListenerStub();\n        this.indexer.registerIndexEventListener(evListener);\n        assertEquals(1,this.indexer.docsAdded.get());\n        assertEquals(1,this.indexer.docsDeleted.get());\n        assertEquals(2,this.indexer.docsUpdated.get());\n        assertEquals(0,evListener.getCalledCount());\n        this.indexer.commit(true);\n        this.indexer.commit(false);\n        assertEquals(1,evListener.getCalledCount());\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(0,this.indexer.docsDeleted.get());\n        assertEquals(0,this.indexer.docsUpdated.get());\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}