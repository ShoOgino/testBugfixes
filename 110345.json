{"path":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","commits":[{"id":"b5a7546047ccde828684837fc8c2f6db49454355","date":1177870170,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"<add><doc><field ...\" );\n   * \n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( SolrParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( 400, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( 400, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4439516f0669ef593008d799c7b83af0758fddfb","date":1178043368,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   * \n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( SolrParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( 400, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( 400, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"<add><doc><field ...\" );\n   * \n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( SolrParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( 400, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( 400, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   * \n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( SolrParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   * \n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( SolrParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( 400, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( 400, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef","date":1185993405,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   * \n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   * \n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( SolrParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7","date":1189312484,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   * \n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"abbfb3ad1f90df8ebf4751c8e72b2756ace50699","date":1190497478,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( core, params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"49dc1be603322293d22546b2141ddcbc37a96014","date":1204339989,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = null;\n    try {\n      req = parser.buildRequestFrom( core, params, streams );\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      core.execute( handler, req, rsp );\n      if( rsp.getException() != null ) {\n        throw rsp.getException();\n      }\n      \n      // Now write it out\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      StringWriter out = new StringWriter();\n      responseWriter.write(out, req, rsp);\n      return out.toString();\n    } finally {\n      if (req != null) {\n        req.close();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = parser.buildRequestFrom( core, params, streams );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute( handler, req, rsp );\n    if( rsp.getException() != null ) {\n      throw rsp.getException();\n    }\n    \n    // Now write it out\n    QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n    StringWriter out = new StringWriter();\n    responseWriter.write(out, req, rsp);\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/DirectSolrConnection#request(String,String).mjava","sourceNew":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = null;\n    try {\n      req = parser.buildRequestFrom( core, params, streams );\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      core.execute( handler, req, rsp );\n      if( rsp.getException() != null ) {\n        throw rsp.getException();\n      }\n      \n      // Now write it out\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      StringWriter out = new StringWriter();\n      responseWriter.write(out, req, rsp);\n      return out.toString();\n    } finally {\n      if (req != null) {\n        req.close();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * For example:\n   * \n   * String json = solr.request( \"/select?qt=dismax&wt=json&q=...\", null );\n   * String xml = solr.request( \"/update\", \"&lt;add><doc><field ...\" );\n   */\n  public String request( String pathAndParams, String body ) throws Exception\n  {\n    String path = null;\n    SolrParams params = null;\n    int idx = pathAndParams.indexOf( '?' );\n    if( idx > 0 ) {\n      path = pathAndParams.substring( 0, idx );\n      params = SolrRequestParsers.parseQueryString( pathAndParams.substring(idx+1) );\n    }\n    else {\n      path= pathAndParams;\n      params = new MapSolrParams( new HashMap<String, String>() );\n    }\n    \n    // Extract the handler from the path or params\n    SolrRequestHandler handler = core.getRequestHandler( path );\n    if( handler == null ) {\n      if( \"/select\".equals( path ) || \"/select/\".equalsIgnoreCase( path) ) {\n        String qt = params.get( CommonParams.QT );\n        handler = core.getRequestHandler( qt );\n        if( handler == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+qt);\n        }\n      }\n    }\n    if( handler == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"unknown handler: \"+path );\n    }\n    \n    // Make a stream for the 'body' content\n    List<ContentStream> streams = new ArrayList<ContentStream>( 1 );\n    if( body != null && body.length() > 0 ) {\n      streams.add( new ContentStreamBase.StringStream( body ) );\n    }\n    \n    SolrQueryRequest req = null;\n    try {\n      req = parser.buildRequestFrom( core, params, streams );\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      core.execute( handler, req, rsp );\n      if( rsp.getException() != null ) {\n        throw rsp.getException();\n      }\n      \n      // Now write it out\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      StringWriter out = new StringWriter();\n      responseWriter.write(out, req, rsp);\n      return out.toString();\n    } finally {\n      if (req != null) {\n        req.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"b5a7546047ccde828684837fc8c2f6db49454355":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4439516f0669ef593008d799c7b83af0758fddfb":["b5a7546047ccde828684837fc8c2f6db49454355"],"49dc1be603322293d22546b2141ddcbc37a96014":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["49dc1be603322293d22546b2141ddcbc37a96014"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["4439516f0669ef593008d799c7b83af0758fddfb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"b5a7546047ccde828684837fc8c2f6db49454355":["4439516f0669ef593008d799c7b83af0758fddfb"],"4439516f0669ef593008d799c7b83af0758fddfb":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"49dc1be603322293d22546b2141ddcbc37a96014":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["b5a7546047ccde828684837fc8c2f6db49454355"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["49dc1be603322293d22546b2141ddcbc37a96014"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}