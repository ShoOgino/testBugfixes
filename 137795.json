{"path":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#testSearchLongestPhrase().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#testSearchLongestPhrase().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#testSearchLongestPhrase().mjava","sourceNew":"  public void testSearchLongestPhrase() throws Exception {\n    make1d1fIndex( \"d a b d c a b c\" );\n\n    BooleanQuery query = new BooleanQuery();\n    query.add( pqF( \"a\", \"b\" ), Occur.SHOULD );\n    query.add( pqF( \"a\", \"b\", \"c\" ), Occur.SHOULD );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    assertEquals( 2, fpl.phraseList.size() );\n    assertEquals( \"ab(1.0)((2,5))\", fpl.phraseList.get( 0 ).toString() );\n    assertEquals( \"abc(1.0)((10,15))\", fpl.phraseList.get( 1 ).toString() );\n  }\n\n","sourceOld":"  public void testSearchLongestPhrase() throws Exception {\n    make1d1fIndex( \"d a b d c a b c\" );\n\n    BooleanQuery query = new BooleanQuery();\n    query.add( pqF( \"a\", \"b\" ), Occur.SHOULD );\n    query.add( pqF( \"a\", \"b\", \"c\" ), Occur.SHOULD );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    assertEquals( 2, fpl.phraseList.size() );\n    assertEquals( \"ab(1.0)((2,5))\", fpl.phraseList.get( 0 ).toString() );\n    assertEquals( \"abc(1.0)((10,15))\", fpl.phraseList.get( 1 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#testSearchLongestPhrase().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/FieldPhraseListTest#testSearchLongestPhrase().mjava","sourceNew":"  public void testSearchLongestPhrase() throws Exception {\n    make1d1fIndex( \"d a b d c a b c\" );\n\n    BooleanQuery.Builder query = new BooleanQuery.Builder();\n    query.add( pqF( \"a\", \"b\" ), Occur.SHOULD );\n    query.add( pqF( \"a\", \"b\", \"c\" ), Occur.SHOULD );\n    FieldQuery fq = new FieldQuery( query.build(), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    assertEquals( 2, fpl.phraseList.size() );\n    assertEquals( \"ab(1.0)((2,5))\", fpl.phraseList.get( 0 ).toString() );\n    assertEquals( \"abc(1.0)((10,15))\", fpl.phraseList.get( 1 ).toString() );\n  }\n\n","sourceOld":"  public void testSearchLongestPhrase() throws Exception {\n    make1d1fIndex( \"d a b d c a b c\" );\n\n    BooleanQuery query = new BooleanQuery();\n    query.add( pqF( \"a\", \"b\" ), Occur.SHOULD );\n    query.add( pqF( \"a\", \"b\", \"c\" ), Occur.SHOULD );\n    FieldQuery fq = new FieldQuery( query, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    assertEquals( 2, fpl.phraseList.size() );\n    assertEquals( \"ab(1.0)((2,5))\", fpl.phraseList.get( 0 ).toString() );\n    assertEquals( \"abc(1.0)((10,15))\", fpl.phraseList.get( 1 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}