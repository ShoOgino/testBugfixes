{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","sourceNew":"  /** Creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes)),\n                                      taxoReader);\n    taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","sourceOld":"  /** Creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes)),\n                                      taxoReader);\n    taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","sourceNew":"  /** Creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes)),\n                                      taxoReader);\n    taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","sourceOld":"  /** Creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes)),\n                                      taxoReader);\n    taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d47a51687a906464022060653be52ed62dfa2c18","date":1391087530,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","sourceNew":"  /** Creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes)), taxoReader);\n    this.taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","sourceOld":"  /** Creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes)),\n                                      taxoReader);\n    taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0dfae671422e7453a9199aa320f91427cd80d60","date":1427895926,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","sourceNew":"  /** Creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes), null), taxoReader);\n    this.taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","sourceOld":"  /** Creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes)), taxoReader);\n    this.taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c924d4069ef5a5bc479a493befe0121aada6896","date":1427901860,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","sourceNew":"  /** Creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes), null), taxoReader);\n    this.taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","sourceOld":"  /** Creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes)), taxoReader);\n    this.taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","sourceNew":"  /** Expert: creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers, controlling whether deletes should be applied. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes), null), taxoReader);\n    this.taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","sourceOld":"  /** Creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes), null), taxoReader);\n    this.taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","sourceNew":"  /** Expert: creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers, controlling whether deletes should be applied. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes, false), null), taxoReader);\n    this.taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","sourceOld":"  /** Expert: creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers, controlling whether deletes should be applied. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes), null), taxoReader);\n    this.taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/SearcherTaxonomyManager#SearcherTaxonomyManager(IndexWriter,boolean,SearcherFactory,DirectoryTaxonomyWriter).mjava","sourceNew":"  /** Expert: creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers, controlling whether deletes should be applied. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes, false), null), taxoReader);\n    this.taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","sourceOld":"  /** Expert: creates near-real-time searcher and taxonomy reader\n   *  from the corresponding writers, controlling whether deletes should be applied. */\n  public SearcherTaxonomyManager(IndexWriter writer, boolean applyAllDeletes, SearcherFactory searcherFactory, DirectoryTaxonomyWriter taxoWriter) throws IOException {\n    if (searcherFactory == null) {\n      searcherFactory = new SearcherFactory();\n    }\n    this.searcherFactory = searcherFactory;\n    this.taxoWriter = taxoWriter;\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    current = new SearcherAndTaxonomy(SearcherManager.getSearcher(searcherFactory, DirectoryReader.open(writer, applyAllDeletes), null), taxoReader);\n    this.taxoEpoch = taxoWriter.getTaxonomyEpoch();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e0dfae671422e7453a9199aa320f91427cd80d60":["d47a51687a906464022060653be52ed62dfa2c18"],"d47a51687a906464022060653be52ed62dfa2c18":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"2a1862266772deb28cdcb7d996b64d2177022687":["e0dfae671422e7453a9199aa320f91427cd80d60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"68496c2200e559fb7802f7575427b7a482659afb":["2a1862266772deb28cdcb7d996b64d2177022687","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["2a1862266772deb28cdcb7d996b64d2177022687"],"0c924d4069ef5a5bc479a493befe0121aada6896":["d47a51687a906464022060653be52ed62dfa2c18","e0dfae671422e7453a9199aa320f91427cd80d60"]},"commit2Childs":{"e0dfae671422e7453a9199aa320f91427cd80d60":["2a1862266772deb28cdcb7d996b64d2177022687","0c924d4069ef5a5bc479a493befe0121aada6896"],"d47a51687a906464022060653be52ed62dfa2c18":["e0dfae671422e7453a9199aa320f91427cd80d60","0c924d4069ef5a5bc479a493befe0121aada6896"],"2a1862266772deb28cdcb7d996b64d2177022687":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["d47a51687a906464022060653be52ed62dfa2c18"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"0c924d4069ef5a5bc479a493befe0121aada6896":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","0c924d4069ef5a5bc479a493befe0121aada6896"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}