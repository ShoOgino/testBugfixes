{"path":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","commits":[{"id":"f6e3376a314fcc2b31bc46d399c2ff23552b78d6","date":1325780477,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      IndexReader reader = fieldToReader.get(field);\n      values = reader == null ? null : MultiDocValues.getNormDocValues(reader, field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      AtomicIndexReader reader = fieldToReader.get(field);\n      values = reader == null ? null : reader.normValues(field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      IndexReader reader = fieldToReader.get(field);\n      values = reader == null ? null : MultiDocValues.getNormDocValues(reader, field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      AtomicReader reader = fieldToReader.get(field);\n      values = reader == null ? null : reader.normValues(field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      AtomicIndexReader reader = fieldToReader.get(field);\n      values = reader == null ? null : reader.normValues(field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      AtomicReader reader = fieldToReader.get(field);\n      values = reader == null ? null : reader.normValues(field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      IndexReader reader = fieldToReader.get(field);\n      values = reader == null ? null : MultiDocValues.getNormDocValues(reader, field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b","date":1328624680,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","sourceNew":null,"sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      AtomicReader reader = fieldToReader.get(field);\n      values = reader == null ? null : reader.normValues(field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08b385e33541f6749e71618c9ab36fad908a7ed0","date":1328629771,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      AtomicReader reader = fieldToReader.get(field);\n      values = reader == null ? null : reader.normValues(field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#normValues(String).mjava","sourceNew":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      AtomicReader reader = fieldToReader.get(field);\n      values = reader == null ? null : reader.normValues(field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","sourceOld":"  // TODO: I suspect this is completely untested!!!!!\n  @Override\n  public synchronized DocValues normValues(String field) throws IOException {\n    DocValues values = normsCache.get(field);\n    if (values == null) {\n      AtomicReader reader = fieldToReader.get(field);\n      values = reader == null ? null : reader.normValues(field);\n      normsCache.put(field, values);\n    } \n    return values;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6","da6d5ac19a80d65b1e864251f155d30960353b7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"]},"commit2Childs":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}