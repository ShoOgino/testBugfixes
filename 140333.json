{"path":"solr/core/src/java/org/apache/solr/cloud/overseer/ClusterStateMutator#getAssignedCoreNodeName(ClusterState,ZkNodeProps).mjava","commits":[{"id":"24a5da2a0d397ff29f3de8f6cf451d3412c2509a","date":1417276391,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ClusterStateMutator#getAssignedCoreNodeName(ClusterState,ZkNodeProps).mjava","pathOld":"/dev/null","sourceNew":"  public static String getAssignedCoreNodeName(ClusterState state, ZkNodeProps message) {\n    Collection<Slice> slices = state.getSlices(message.getStr(ZkStateReader.COLLECTION_PROP));\n    if (slices != null) {\n      for (Slice slice : slices) {\n        for (Replica replica : slice.getReplicas()) {\n          String nodeName = replica.getStr(ZkStateReader.NODE_NAME_PROP);\n          String core = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          String msgNodeName = message.getStr(ZkStateReader.NODE_NAME_PROP);\n          String msgCore = message.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          if (nodeName.equals(msgNodeName) && core.equals(msgCore)) {\n            return replica.getName();\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04c8df3f10a676c3de5dbf390f17a2de2d45cacd","date":1461615626,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ClusterStateMutator#getAssignedCoreNodeName(DocCollection,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ClusterStateMutator#getAssignedCoreNodeName(ClusterState,ZkNodeProps).mjava","sourceNew":"  public static String getAssignedCoreNodeName(DocCollection collection, String forNodeName, String forCoreName) {\n    Collection<Slice> slices = collection != null ? collection.getSlices() : null;\n    if (slices != null) {\n      for (Slice slice : slices) {\n        for (Replica replica : slice.getReplicas()) {\n          String nodeName = replica.getStr(ZkStateReader.NODE_NAME_PROP);\n          String core = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          if (nodeName.equals(forNodeName) && core.equals(forCoreName)) {\n            return replica.getName();\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String getAssignedCoreNodeName(ClusterState state, ZkNodeProps message) {\n    Collection<Slice> slices = state.getSlices(message.getStr(ZkStateReader.COLLECTION_PROP));\n    if (slices != null) {\n      for (Slice slice : slices) {\n        for (Replica replica : slice.getReplicas()) {\n          String nodeName = replica.getStr(ZkStateReader.NODE_NAME_PROP);\n          String core = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          String msgNodeName = message.getStr(ZkStateReader.NODE_NAME_PROP);\n          String msgCore = message.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          if (nodeName.equals(msgNodeName) && core.equals(msgCore)) {\n            return replica.getName();\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ClusterStateMutator#getAssignedCoreNodeName(DocCollection,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ClusterStateMutator#getAssignedCoreNodeName(ClusterState,ZkNodeProps).mjava","sourceNew":"  public static String getAssignedCoreNodeName(DocCollection collection, String forNodeName, String forCoreName) {\n    Collection<Slice> slices = collection != null ? collection.getSlices() : null;\n    if (slices != null) {\n      for (Slice slice : slices) {\n        for (Replica replica : slice.getReplicas()) {\n          String nodeName = replica.getStr(ZkStateReader.NODE_NAME_PROP);\n          String core = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          if (nodeName.equals(forNodeName) && core.equals(forCoreName)) {\n            return replica.getName();\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String getAssignedCoreNodeName(ClusterState state, ZkNodeProps message) {\n    Collection<Slice> slices = state.getSlices(message.getStr(ZkStateReader.COLLECTION_PROP));\n    if (slices != null) {\n      for (Slice slice : slices) {\n        for (Replica replica : slice.getReplicas()) {\n          String nodeName = replica.getStr(ZkStateReader.NODE_NAME_PROP);\n          String core = replica.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          String msgNodeName = message.getStr(ZkStateReader.NODE_NAME_PROP);\n          String msgCore = message.getStr(ZkStateReader.CORE_NAME_PROP);\n\n          if (nodeName.equals(msgNodeName) && core.equals(msgCore)) {\n            return replica.getName();\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a","04c8df3f10a676c3de5dbf390f17a2de2d45cacd"],"04c8df3f10a676c3de5dbf390f17a2de2d45cacd":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"]},"commit2Childs":{"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","04c8df3f10a676c3de5dbf390f17a2de2d45cacd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"04c8df3f10a676c3de5dbf390f17a2de2d45cacd":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}