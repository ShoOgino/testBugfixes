{"path":"lucene/core/src/java/org/apache/lucene/util/BytesRef#append(BytesRef).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRef#append(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BytesRef#append(BytesRef).mjava","sourceNew":"  /**\n   * Appends the bytes from the given {@link BytesRef}\n   * <p>\n   * NOTE: if this would exceed the array size, this method creates a \n   * new reference array.\n   */\n  public void append(BytesRef other) {\n    int newLen = length + other.length;\n    if (bytes.length < newLen) {\n      byte[] newBytes = new byte[newLen];\n      System.arraycopy(bytes, offset, newBytes, 0, length);\n      offset = 0;\n      bytes = newBytes;\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, length+offset, other.length);\n    length = newLen;\n  }\n\n","sourceOld":"  /**\n   * Appends the bytes from the given {@link BytesRef}\n   * <p>\n   * NOTE: if this would exceed the array size, this method creates a \n   * new reference array.\n   */\n  public void append(BytesRef other) {\n    int newLen = length + other.length;\n    if (bytes.length < newLen) {\n      byte[] newBytes = new byte[newLen];\n      System.arraycopy(bytes, offset, newBytes, 0, length);\n      offset = 0;\n      bytes = newBytes;\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, length+offset, other.length);\n    length = newLen;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57","date":1338306244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRef#append(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRef#append(BytesRef).mjava","sourceNew":"  /**\n   * Appends the bytes from the given {@link BytesRef}\n   * <p>\n   * NOTE: if this would exceed the array size, this method creates a \n   * new reference array.\n   */\n  public void append(BytesRef other) {\n    int newLen = length + other.length;\n    if (bytes.length - offset < newLen) {\n      byte[] newBytes = new byte[newLen];\n      System.arraycopy(bytes, offset, newBytes, 0, length);\n      offset = 0;\n      bytes = newBytes;\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, length+offset, other.length);\n    length = newLen;\n  }\n\n","sourceOld":"  /**\n   * Appends the bytes from the given {@link BytesRef}\n   * <p>\n   * NOTE: if this would exceed the array size, this method creates a \n   * new reference array.\n   */\n  public void append(BytesRef other) {\n    int newLen = length + other.length;\n    if (bytes.length < newLen) {\n      byte[] newBytes = new byte[newLen];\n      System.arraycopy(bytes, offset, newBytes, 0, length);\n      offset = 0;\n      bytes = newBytes;\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, length+offset, other.length);\n    length = newLen;\n  }\n\n","bugFix":["627ce218a5a68018115c2deb6559b41e3665b8ab"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRef#append(BytesRef).mjava","sourceNew":null,"sourceOld":"  /**\n   * Appends the bytes from the given {@link BytesRef}\n   * <p>\n   * NOTE: if this would exceed the array size, this method creates a \n   * new reference array.\n   */\n  public void append(BytesRef other) {\n    int newLen = length + other.length;\n    if (bytes.length - offset < newLen) {\n      byte[] newBytes = new byte[newLen];\n      System.arraycopy(bytes, offset, newBytes, 0, length);\n      offset = 0;\n      bytes = newBytes;\n    }\n    System.arraycopy(other.bytes, other.offset, bytes, length+offset, other.length);\n    length = newLen;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57"],"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}