{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","commits":[{"id":"8a093d23e938d132b81b5f2de3d6b168afe3608e","date":1455076308,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","sourceNew":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final GeoRect bbox) {\n    super(field, termEncoding, bbox.minLon, bbox.minLat, bbox.maxLon, bbox.maxLat);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n  }\n\n","sourceOld":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final GeoRect bbox) {\n    super(field, termEncoding, bbox.minLon, bbox.minLat, bbox.maxLon, bbox.maxLat);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","sourceNew":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final GeoRect bbox) {\n    super(field, termEncoding, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n  }\n\n","sourceOld":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final GeoRect bbox) {\n    super(field, termEncoding, bbox.minLon, bbox.minLat, bbox.maxLon, bbox.maxLat);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32cebcc2128763561399e79a5415bfdfe8a7a5b1","date":1458683229,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","sourceNew":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final GeoRect bbox) {\n    super(field, termEncoding, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n\n    // unless our box is crazy, we can use this bound\n    // to reject edge cases faster in postFilter()\n    if (bbox.maxLon - centerLon < 90 && centerLon - bbox.minLon < 90) {\n      maxPartialDistance = Math.max(SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, distanceQuery.centerLat, bbox.maxLon),\n                                    SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, bbox.maxLat, centerLon));\n    } else {\n      maxPartialDistance = Double.POSITIVE_INFINITY;\n    }\n  }\n\n","sourceOld":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final GeoRect bbox) {\n    super(field, termEncoding, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86fcb04ff2d63aad8754270211d5fc084d3526b9","date":1459278881,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","sourceNew":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final GeoRect bbox) {\n    super(field, termEncoding, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n\n    // unless our box is crazy, we can use this bound\n    // to reject edge cases faster in postFilter()\n    if (bbox.maxLon - centerLon < 90 && centerLon - bbox.minLon < 90) {\n      maxPartialDistance = Math.max(SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, distanceQuery.centerLat, bbox.maxLon),\n                                    SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, bbox.maxLat, centerLon));\n    } else {\n      maxPartialDistance = Double.POSITIVE_INFINITY;\n    }\n    axisLat = GeoUtils.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","sourceOld":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final GeoRect bbox) {\n    super(field, termEncoding, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n\n    // unless our box is crazy, we can use this bound\n    // to reject edge cases faster in postFilter()\n    if (bbox.maxLon - centerLon < 90 && centerLon - bbox.minLon < 90) {\n      maxPartialDistance = Math.max(SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, distanceQuery.centerLat, bbox.maxLon),\n                                    SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, bbox.maxLat, centerLon));\n    } else {\n      maxPartialDistance = Double.POSITIVE_INFINITY;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43ddc1b7a872fafd838d3f3129984ca661e29b36","date":1459526591,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","sourceNew":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final GeoRect bbox) {\n    super(field, termEncoding, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n\n    // unless our box is crazy, we can use this bound\n    // to reject edge cases faster in postFilter()\n    if (bbox.maxLon - centerLon < 90 && centerLon - bbox.minLon < 90) {\n      maxPartialDistance = Math.max(SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, distanceQuery.centerLat, bbox.maxLon),\n                                    SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, bbox.maxLat, centerLon));\n    } else {\n      maxPartialDistance = Double.POSITIVE_INFINITY;\n    }\n    axisLat = GeoRect.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","sourceOld":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final GeoRect bbox) {\n    super(field, termEncoding, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n\n    // unless our box is crazy, we can use this bound\n    // to reject edge cases faster in postFilter()\n    if (bbox.maxLon - centerLon < 90 && centerLon - bbox.minLon < 90) {\n      maxPartialDistance = Math.max(SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, distanceQuery.centerLat, bbox.maxLon),\n                                    SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, bbox.maxLat, centerLon));\n    } else {\n      maxPartialDistance = Double.POSITIVE_INFINITY;\n    }\n    axisLat = GeoUtils.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","date":1459623422,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,Rectangle).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl#GeoPointDistanceQueryImpl(String,TermEncoding,GeoPointDistanceQuery,double,GeoRect).mjava","sourceNew":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final Rectangle bbox) {\n    super(field, termEncoding, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n\n    // unless our box is crazy, we can use this bound\n    // to reject edge cases faster in postFilter()\n    if (bbox.maxLon - centerLon < 90 && centerLon - bbox.minLon < 90) {\n      maxPartialDistance = Math.max(SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, distanceQuery.centerLat, bbox.maxLon),\n                                    SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, bbox.maxLat, centerLon));\n    } else {\n      maxPartialDistance = Double.POSITIVE_INFINITY;\n    }\n    axisLat = Rectangle.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","sourceOld":"  GeoPointDistanceQueryImpl(final String field, final TermEncoding termEncoding, final GeoPointDistanceQuery q,\n                            final double centerLonUnwrapped, final GeoRect bbox) {\n    super(field, termEncoding, bbox.minLat, bbox.maxLat, bbox.minLon, bbox.maxLon);\n    distanceQuery = q;\n    centerLon = centerLonUnwrapped;\n\n    // unless our box is crazy, we can use this bound\n    // to reject edge cases faster in postFilter()\n    if (bbox.maxLon - centerLon < 90 && centerLon - bbox.minLon < 90) {\n      maxPartialDistance = Math.max(SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, distanceQuery.centerLat, bbox.maxLon),\n                                    SloppyMath.haversinSortKey(distanceQuery.centerLat, centerLon, bbox.maxLat, centerLon));\n    } else {\n      maxPartialDistance = Double.POSITIVE_INFINITY;\n    }\n    axisLat = GeoRect.axisLat(distanceQuery.centerLat, distanceQuery.radiusMeters);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec996bf2daff09d61a876319e8fae4aebbea58e3":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["43ddc1b7a872fafd838d3f3129984ca661e29b36"],"43ddc1b7a872fafd838d3f3129984ca661e29b36":["86fcb04ff2d63aad8754270211d5fc084d3526b9"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"32cebcc2128763561399e79a5415bfdfe8a7a5b1":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"86fcb04ff2d63aad8754270211d5fc084d3526b9":["32cebcc2128763561399e79a5415bfdfe8a7a5b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"]},"commit2Childs":{"ec996bf2daff09d61a876319e8fae4aebbea58e3":["32cebcc2128763561399e79a5415bfdfe8a7a5b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43ddc1b7a872fafd838d3f3129984ca661e29b36":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"32cebcc2128763561399e79a5415bfdfe8a7a5b1":["86fcb04ff2d63aad8754270211d5fc084d3526b9"],"86fcb04ff2d63aad8754270211d5fc084d3526b9":["43ddc1b7a872fafd838d3f3129984ca661e29b36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}