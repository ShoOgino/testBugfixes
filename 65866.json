{"path":"src/test-deprecated/org/apache/lucene/document/TestDocument#testGetValuesForIndexedDocument().mjava","commits":[{"id":"5b5461affe637a07375542c763a4805300802be8","date":1102270918,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test-deprecated/org/apache/lucene/document/TestDocument#testGetValuesForIndexedDocument().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Tests {@link Document#getValues()} method for a Document retrieved from\n     * an index.\n     *\n     * @throws Exception on error\n     */\n    public void testGetValuesForIndexedDocument() throws Exception\n    {\n        RAMDirectory dir = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true);\n        writer.addDocument(makeDocumentWithFields());\n        writer.close();\n\n        Searcher searcher = new IndexSearcher(dir);\n\n\t// search for something that does exists\n\tQuery query = new TermQuery(new Term(\"keyword\", \"test1\"));\n\n\t// ensure that queries return expected results without DateFilter first\n        Hits hits = searcher.search(query);\n\tassertEquals(1, hits.length());\n\n        try\n        {\n            doAssert(hits.doc(0), true);\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace(System.err);\n            System.err.print(\"\\n\");\n        }\n        finally\n        {\n            searcher.close();\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test-deprecated/org/apache/lucene/document/TestDocument#testGetValuesForIndexedDocument().mjava","sourceNew":null,"sourceOld":"    /**\n     * Tests {@link Document#getValues()} method for a Document retrieved from\n     * an index.\n     *\n     * @throws Exception on error\n     */\n    public void testGetValuesForIndexedDocument() throws Exception\n    {\n        RAMDirectory dir = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true);\n        writer.addDocument(makeDocumentWithFields());\n        writer.close();\n\n        Searcher searcher = new IndexSearcher(dir);\n\n\t// search for something that does exists\n\tQuery query = new TermQuery(new Term(\"keyword\", \"test1\"));\n\n\t// ensure that queries return expected results without DateFilter first\n        Hits hits = searcher.search(query);\n\tassertEquals(1, hits.length());\n\n        try\n        {\n            doAssert(hits.doc(0), true);\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace(System.err);\n            System.err.print(\"\\n\");\n        }\n        finally\n        {\n            searcher.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b5461affe637a07375542c763a4805300802be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["5b5461affe637a07375542c763a4805300802be8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"5b5461affe637a07375542c763a4805300802be8":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b5461affe637a07375542c763a4805300802be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}