{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","sourceNew":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(new Field(\"field1\", sb.toString(), Store.YES, Index.ANALYZED));\n    doc.add(new Field(\"fielda\", sb.toString(), Store.YES, Index.NOT_ANALYZED_NO_NORMS));\n    doc.add(new Field(\"fieldb\", sb.toString(), Store.YES, Index.NO));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), sb.toString(), Store.YES, Index.ANALYZED));\n    }\n    return doc;\n  }\n\n","sourceOld":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(new Field(\"field1\", sb.toString(), Store.YES, Index.ANALYZED));\n    doc.add(new Field(\"fielda\", sb.toString(), Store.YES, Index.NOT_ANALYZED_NO_NORMS));\n    doc.add(new Field(\"fieldb\", sb.toString(), Store.YES, Index.NO));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), sb.toString(), Store.YES, Index.ANALYZED));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","sourceNew":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    FieldType customType2 = new FieldType(TextField.TYPE_STORED);\n    customType2.setTokenized(false);\n    customType2.setOmitNorms(true);\n    FieldType customType3 = new FieldType();\n    customType3.setStored(true);\n    doc.add(new Field(\"field1\", TextField.TYPE_STORED, sb.toString()));\n    doc.add(new Field(\"fielda\", customType2, sb.toString()));\n    doc.add(new Field(\"fieldb\", customType3, sb.toString()));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), TextField.TYPE_STORED, sb.toString()));\n    }\n    return doc;\n  }\n\n","sourceOld":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    doc.add(new Field(\"field1\", sb.toString(), Store.YES, Index.ANALYZED));\n    doc.add(new Field(\"fielda\", sb.toString(), Store.YES, Index.NOT_ANALYZED_NO_NORMS));\n    doc.add(new Field(\"fieldb\", sb.toString(), Store.YES, Index.NO));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), sb.toString(), Store.YES, Index.ANALYZED));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","sourceNew":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    FieldType customType2 = new FieldType(TextField.TYPE_STORED);\n    customType2.setTokenized(false);\n    customType2.setOmitNorms(true);\n    FieldType customType3 = new FieldType();\n    customType3.setStored(true);\n    doc.add(new Field(\"field1\", sb.toString(), TextField.TYPE_STORED));\n    doc.add(new Field(\"fielda\", sb.toString(), customType2));\n    doc.add(new Field(\"fieldb\", sb.toString(), customType3));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), sb.toString(), TextField.TYPE_STORED));\n    }\n    return doc;\n  }\n\n","sourceOld":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    FieldType customType2 = new FieldType(TextField.TYPE_STORED);\n    customType2.setTokenized(false);\n    customType2.setOmitNorms(true);\n    FieldType customType3 = new FieldType();\n    customType3.setStored(true);\n    doc.add(new Field(\"field1\", TextField.TYPE_STORED, sb.toString()));\n    doc.add(new Field(\"fielda\", customType2, sb.toString()));\n    doc.add(new Field(\"fieldb\", customType3, sb.toString()));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), TextField.TYPE_STORED, sb.toString()));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#createDocument(int,int).mjava","sourceNew":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    FieldType customType2 = new FieldType(TextField.TYPE_STORED);\n    customType2.setTokenized(false);\n    customType2.setOmitNorms(true);\n    FieldType customType3 = new FieldType();\n    customType3.setStored(true);\n    doc.add(new Field(\"field1\", sb.toString(), TextField.TYPE_STORED));\n    doc.add(new Field(\"fielda\", sb.toString(), customType2));\n    doc.add(new Field(\"fieldb\", sb.toString(), customType3));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), sb.toString(), TextField.TYPE_STORED));\n    }\n    return doc;\n  }\n\n","sourceOld":"  public static Document createDocument(int n, int numFields) {\n    StringBuilder sb = new StringBuilder();\n    Document doc = new Document();\n    sb.append(\"a\");\n    sb.append(n);\n    FieldType customType2 = new FieldType(TextField.TYPE_STORED);\n    customType2.setTokenized(false);\n    customType2.setOmitNorms(true);\n    FieldType customType3 = new FieldType();\n    customType3.setStored(true);\n    doc.add(new Field(\"field1\", sb.toString(), TextField.TYPE_STORED));\n    doc.add(new Field(\"fielda\", sb.toString(), customType2));\n    doc.add(new Field(\"fieldb\", sb.toString(), customType3));\n    sb.append(\" b\");\n    sb.append(n);\n    for (int i = 1; i < numFields; i++) {\n      doc.add(new Field(\"field\" + (i+1), sb.toString(), TextField.TYPE_STORED));\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}