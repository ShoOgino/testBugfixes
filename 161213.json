{"path":"contrib/regex/src/test/org/apache/lucene/search/regex/TestRegexQuery#testMatchAll().mjava","commits":[{"id":"b7b0870e151fc391d0ff7ebc31be598385fa23d8","date":1249063376,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/regex/src/test/org/apache/lucene/search/regex/TestRegexQuery#testMatchAll().mjava","pathOld":"/dev/null","sourceNew":"  public void testMatchAll() throws Exception {\n    TermEnum terms = new RegexQuery(new Term(FN, \"jum.\")).getEnum(searcher.getIndexReader());\n    // no term should match\n    assertNull(terms.term());\n    assertFalse(terms.next());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81907bc456336ff18fd17ca1c5a64747ebb74414","date":1260280040,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/regex/src/test/org/apache/lucene/search/regex/TestRegexQuery#testMatchAll().mjava","pathOld":"contrib/regex/src/test/org/apache/lucene/search/regex/TestRegexQuery#testMatchAll().mjava","sourceNew":"  public void testMatchAll() throws Exception {\n    TermEnum terms = new RegexQuery(new Term(FN, \"jum.\")).getEnum(searcher.getIndexReader());\n    // no term should match\n    assertFalse(terms.next());\n  }\n\n","sourceOld":"  public void testMatchAll() throws Exception {\n    TermEnum terms = new RegexQuery(new Term(FN, \"jum.\")).getEnum(searcher.getIndexReader());\n    // no term should match\n    assertNull(terms.term());\n    assertFalse(terms.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bef892377c73ffecd4a2b3fa223017630a4f51f","date":1260285561,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/regex/src/test/org/apache/lucene/search/regex/TestRegexQuery#testMatchAll().mjava","pathOld":"contrib/regex/src/test/org/apache/lucene/search/regex/TestRegexQuery#testMatchAll().mjava","sourceNew":"  public void testMatchAll() throws Exception {\n    TermEnum terms = new RegexQuery(new Term(FN, \"jum.\")).getEnum(searcher.getIndexReader());\n    // no term should match\n    assertNull(terms.term());\n    assertFalse(terms.next());\n  }\n\n","sourceOld":"  public void testMatchAll() throws Exception {\n    TermEnum terms = new RegexQuery(new Term(FN, \"jum.\")).getEnum(searcher.getIndexReader());\n    // no term should match\n    assertFalse(terms.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/regex/src/test/org/apache/lucene/search/regex/TestRegexQuery#testMatchAll().mjava","pathOld":"contrib/regex/src/test/org/apache/lucene/search/regex/TestRegexQuery#testMatchAll().mjava","sourceNew":"  public void testMatchAll() throws Exception {\n    TermEnum terms = new RegexQuery(new Term(FN, \"jum.\")).getEnum(searcher.getIndexReader());\n    // no term should match\n    assertNull(terms.term());\n    assertFalse(terms.next());\n  }\n\n","sourceOld":"  public void testMatchAll() throws Exception {\n    TermEnum terms = new RegexQuery(new Term(FN, \"jum.\")).getEnum(searcher.getIndexReader());\n    // no term should match\n    assertNull(terms.term());\n    assertFalse(terms.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"81907bc456336ff18fd17ca1c5a64747ebb74414":["b7b0870e151fc391d0ff7ebc31be598385fa23d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7b0870e151fc391d0ff7ebc31be598385fa23d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3bef892377c73ffecd4a2b3fa223017630a4f51f":["81907bc456336ff18fd17ca1c5a64747ebb74414"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3bef892377c73ffecd4a2b3fa223017630a4f51f"]},"commit2Childs":{"81907bc456336ff18fd17ca1c5a64747ebb74414":["3bef892377c73ffecd4a2b3fa223017630a4f51f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7b0870e151fc391d0ff7ebc31be598385fa23d8"],"b7b0870e151fc391d0ff7ebc31be598385fa23d8":["81907bc456336ff18fd17ca1c5a64747ebb74414"],"3bef892377c73ffecd4a2b3fa223017630a4f51f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}