{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ModeEvaluator#doWork(Object).mjava","commits":[{"id":"f7052a30e794b71229411425f0b5c985a1d49d4d","date":1506534783,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ModeEvaluator#doWork(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is null\", constructingFactory.getFunctionName(getClass())));\n    }\n    else if(value instanceof List){\n      List<Number> c = (List<Number>) value;\n      double[] data = new double[c.size()];\n      for(int i=0; i< c.size(); i++) {\n        data[i] = c.get(i).doubleValue();\n      }\n\n      double[] mode = StatUtils.mode(data);\n      List<Number> l = new ArrayList();\n      for(double d : mode) {\n        l.add(d);\n      }\n\n      return l;\n    }\n    else{\n      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is not a collection, instead a %s was found\", constructingFactory.getFunctionName(getClass()), value.getClass().getSimpleName()));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ModeEvaluator#doWork(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is null\", constructingFactory.getFunctionName(getClass())));\n    }\n    else if(value instanceof List){\n      List<Number> c = (List<Number>) value;\n      double[] data = new double[c.size()];\n      for(int i=0; i< c.size(); i++) {\n        data[i] = c.get(i).doubleValue();\n      }\n\n      double[] mode = StatUtils.mode(data);\n      List<Number> l = new ArrayList();\n      for(double d : mode) {\n        l.add(d);\n      }\n\n      return l;\n    }\n    else{\n      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is not a collection, instead a %s was found\", constructingFactory.getFunctionName(getClass()), value.getClass().getSimpleName()));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885","date":1591579911,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ModeEvaluator#doWork(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ModeEvaluator#doWork(Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is null\", constructingFactory.getFunctionName(getClass())));\n    }\n    else if(value instanceof List){\n      @SuppressWarnings({\"unchecked\"})\n      List<Number> c = (List<Number>) value;\n      double[] data = new double[c.size()];\n      for(int i=0; i< c.size(); i++) {\n        data[i] = c.get(i).doubleValue();\n      }\n\n      double[] mode = StatUtils.mode(data);\n      List<Number> l = new ArrayList<>();\n      for(double d : mode) {\n        l.add(d);\n      }\n\n      return l;\n    }\n    else{\n      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is not a collection, instead a %s was found\", constructingFactory.getFunctionName(getClass()), value.getClass().getSimpleName()));\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value) throws IOException{\n    if(null == value){\n      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is null\", constructingFactory.getFunctionName(getClass())));\n    }\n    else if(value instanceof List){\n      List<Number> c = (List<Number>) value;\n      double[] data = new double[c.size()];\n      for(int i=0; i< c.size(); i++) {\n        data[i] = c.get(i).doubleValue();\n      }\n\n      double[] mode = StatUtils.mode(data);\n      List<Number> l = new ArrayList();\n      for(double d : mode) {\n        l.add(d);\n      }\n\n      return l;\n    }\n    else{\n      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is not a collection, instead a %s was found\", constructingFactory.getFunctionName(getClass()), value.getClass().getSimpleName()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["f7052a30e794b71229411425f0b5c985a1d49d4d"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f7052a30e794b71229411425f0b5c985a1d49d4d"],"f7052a30e794b71229411425f0b5c985a1d49d4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885"]},"commit2Childs":{"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"f7052a30e794b71229411425f0b5c985a1d49d4d":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885","6240b74b884c5587f2a4062dd27d6c32bf228889"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6240b74b884c5587f2a4062dd27d6c32bf228889","f7052a30e794b71229411425f0b5c985a1d49d4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}