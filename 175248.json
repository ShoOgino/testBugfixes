{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#testEscapeSolrQueryFunction().mjava","commits":[{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":1,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#testEscapeSolrQueryFunction().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEvaluatorBag#testEscapeSolrQueryFunction().mjava","sourceNew":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolver resolver = new VariableResolver();    \n    Map<String,Object> m= new HashMap<String,Object>();\n    m.put(\"query\",\"c:t\");\n    resolver.setEvaluators(new DataImporter().getEvaluators(Collections.<Map<String,String>>emptyList()));\n    \n    resolver.addNamespace(\"e\",m);\n    String s = resolver\n            .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n    org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n    \n  }\n\n","sourceOld":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolverImpl resolver = new VariableResolverImpl();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    \n    Map m= new HashMap();\n    m.put(\"query\",\"c:t\");\n    resolver.addNamespace(\"dataimporter.functions\", EvaluatorBag\n            .getFunctionsNamespace(Collections.EMPTY_LIST, null, resolver));\n    resolver.addNamespace(\"e\",m);\n    String s = resolver\n            .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n    org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#testEscapeSolrQueryFunction().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolver resolver = new VariableResolver();    \n    Map<String,Object> m= new HashMap<String,Object>();\n    m.put(\"query\",\"c:t\");\n    resolver.setEvaluators(new DataImporter().getEvaluators(Collections.<Map<String,String>>emptyList()));\n    \n    resolver.addNamespace(\"e\",m);\n    String s = resolver\n            .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n    org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#testEscapeSolrQueryFunction().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#testEscapeSolrQueryFunction().mjava","sourceNew":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolver resolver = new VariableResolver();    \n    Map<String,Object> m= new HashMap<>();\n    m.put(\"query\",\"c:t\");\n    resolver.setEvaluators(new DataImporter().getEvaluators(Collections.<Map<String,String>>emptyList()));\n    \n    resolver.addNamespace(\"e\",m);\n    String s = resolver\n            .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n    org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n    \n  }\n\n","sourceOld":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolver resolver = new VariableResolver();    \n    Map<String,Object> m= new HashMap<String,Object>();\n    m.put(\"query\",\"c:t\");\n    resolver.setEvaluators(new DataImporter().getEvaluators(Collections.<Map<String,String>>emptyList()));\n    \n    resolver.addNamespace(\"e\",m);\n    String s = resolver\n            .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n    org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#testEscapeSolrQueryFunction().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testEscapeSolrQueryFunction() {\n    final VariableResolver resolver = new VariableResolver();    \n    Map<String,Object> m= new HashMap<>();\n    m.put(\"query\",\"c:t\");\n    resolver.setEvaluators(new DataImporter().getEvaluators(Collections.<Map<String,String>>emptyList()));\n    \n    resolver.addNamespace(\"e\",m);\n    String s = resolver\n            .replaceTokens(\"${dataimporter.functions.escapeQueryChars(e.query)}\");\n    org.junit.Assert.assertEquals(\"c\\\\:t\", s);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7c7b0ae5716b6c2044195a818e9ae58205175659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}