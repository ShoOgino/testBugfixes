{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","sourceNew":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisfied.\n   *\n   * <p>\n   * By default no optional clauses are necessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified number of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independent of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","sourceOld":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisfied.\n   *\n   * <p>\n   * By default no optional clauses are necessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified number of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independent of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery#setMinimumNumberShouldMatch(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Specifies a minimum number of the optional BooleanClauses\n   * which must be satisfied.\n   *\n   * <p>\n   * By default no optional clauses are necessary for a match\n   * (unless there are no required clauses).  If this method is used,\n   * then the specified number of clauses is required.\n   * </p>\n   * <p>\n   * Use of this method is totally independent of specifying that\n   * any specific clauses are required (or prohibited).  This number will\n   * only be compared against the number of matching optional clauses.\n   * </p>\n   *\n   * @param min the number of optional clauses that must match\n   */\n  public void setMinimumNumberShouldMatch(int min) {\n    this.minNrShouldMatch = min;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}