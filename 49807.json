{"path":"solr/core/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<Object>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<Object>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findMonitorDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n      for (ThreadInfo ti : tinfos) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n    tids = tmbean.getAllThreadIds();\n    tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n    for (ThreadInfo ti : tinfos) {\n      lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<Object>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<Object>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findMonitorDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n      for (ThreadInfo ti : tinfos) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n    tids = tmbean.getAllThreadIds();\n    tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n    for (ThreadInfo ti : tinfos) {\n      lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<Object>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<Object>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findMonitorDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n      for (ThreadInfo ti : tinfos) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n    tids = tmbean.getAllThreadIds();\n    tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n    for (ThreadInfo ti : tinfos) {\n      lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<Object>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<Object>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findMonitorDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n      for (ThreadInfo ti : tinfos) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n    tids = tmbean.getAllThreadIds();\n    tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n    for (ThreadInfo ti : tinfos) {\n      lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<Object>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<Object>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findMonitorDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n      for (ThreadInfo ti : tinfos) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n    tids = tmbean.getAllThreadIds();\n    tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n    for (ThreadInfo ti : tinfos) {\n      lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<Object>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<Object>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findMonitorDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n      for (ThreadInfo ti : tinfos) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n    tids = tmbean.getAllThreadIds();\n    tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n    for (ThreadInfo ti : tinfos) {\n      lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"184f2355716feb946846cf7dacd85770f47bccb7","date":1329734046,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<Object>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<Object>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findMonitorDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n      for (ThreadInfo ti : tinfos) {\n        if (ti != null) {\n          lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n        }\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n    tids = tmbean.getAllThreadIds();\n    tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n    for (ThreadInfo ti : tinfos) {\n      if (ti != null) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<Object>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<Object>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findMonitorDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n      for (ThreadInfo ti : tinfos) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n    tids = tmbean.getAllThreadIds();\n    tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n    for (ThreadInfo ti : tinfos) {\n      lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":["2070bf73ffa1039a505000f99ea245884ff19e11"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findMonitorDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<>();\n      for (ThreadInfo ti : tinfos) {\n        if (ti != null) {\n          lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n        }\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n    tids = tmbean.getAllThreadIds();\n    tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<>();\n    for (ThreadInfo ti : tinfos) {\n      if (ti != null) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<Object>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<Object>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findMonitorDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n      for (ThreadInfo ti : tinfos) {\n        if (ti != null) {\n          lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n        }\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n    tids = tmbean.getAllThreadIds();\n    tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<SimpleOrderedMap<Object>>();\n    for (ThreadInfo ti : tinfos) {\n      if (ti != null) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43773b467552e527b377ad41ba33808922816e42","date":1594321982,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/ThreadDumpHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<>();\n      for (ThreadInfo ti : tinfos) {\n        if (ti != null) {\n          lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n        }\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n\n    tinfos = tmbean.dumpAllThreads(true, true);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<>();\n    for (ThreadInfo ti : tinfos) {\n      if (ti != null) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException \n  {    \n    SimpleOrderedMap<Object> system = new SimpleOrderedMap<>();\n    rsp.add( \"system\", system );\n\n    ThreadMXBean tmbean = ManagementFactory.getThreadMXBean();\n    \n    // Thread Count\n    SimpleOrderedMap<Object> nl = new SimpleOrderedMap<>();\n    nl.add( \"current\",tmbean.getThreadCount() );\n    nl.add( \"peak\", tmbean.getPeakThreadCount() );\n    nl.add( \"daemon\", tmbean.getDaemonThreadCount() );\n    system.add( \"threadCount\", nl );\n    \n    // Deadlocks\n    ThreadInfo[] tinfos;\n    long[] tids = tmbean.findMonitorDeadlockedThreads();\n    if (tids != null) {\n      tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n      NamedList<SimpleOrderedMap<Object>> lst = new NamedList<>();\n      for (ThreadInfo ti : tinfos) {\n        if (ti != null) {\n          lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n        }\n      }\n      system.add( \"deadlocks\", lst );\n    }\n    \n    // Now show all the threads....\n    tids = tmbean.getAllThreadIds();\n    tinfos = tmbean.getThreadInfo(tids, Integer.MAX_VALUE);\n    NamedList<SimpleOrderedMap<Object>> lst = new NamedList<>();\n    for (ThreadInfo ti : tinfos) {\n      if (ti != null) {\n        lst.add( \"thread\", getThreadInfo( ti, tmbean ) );\n      }\n    }\n    system.add( \"threadDump\", lst );\n    rsp.setHttpCaching(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["184f2355716feb946846cf7dacd85770f47bccb7"],"184f2355716feb946846cf7dacd85770f47bccb7":["c26f00b574427b55127e869b935845554afde1fa"],"43773b467552e527b377ad41ba33808922816e42":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43773b467552e527b377ad41ba33808922816e42"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["43773b467552e527b377ad41ba33808922816e42"],"184f2355716feb946846cf7dacd85770f47bccb7":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"43773b467552e527b377ad41ba33808922816e42":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["184f2355716feb946846cf7dacd85770f47bccb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}