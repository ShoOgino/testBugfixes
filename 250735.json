{"path":"lucene/src/java/org/apache/lucene/codecs/MultiLevelSkipListWriter#writeSkip(IndexOutput).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/MultiLevelSkipListWriter#writeSkip(IndexOutput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/MultiLevelSkipListWriter#writeSkip(IndexOutput).mjava","sourceNew":"  /**\n   * Writes the buffered skip lists to the given output.\n   * \n   * @param output the IndexOutput the skip lists shall be written to \n   * @return the pointer the skip list starts\n   */\n  public long writeSkip(IndexOutput output) throws IOException {\n    long skipPointer = output.getFilePointer();\n    //System.out.println(\"skipper.writeSkip fp=\" + skipPointer);\n    if (skipBuffer == null || skipBuffer.length == 0) return skipPointer;\n    \n    for (int level = numberOfSkipLevels - 1; level > 0; level--) {\n      long length = skipBuffer[level].getFilePointer();\n      if (length > 0) {\n        output.writeVLong(length);\n        skipBuffer[level].writeTo(output);\n      }\n    }\n    skipBuffer[0].writeTo(output);\n    \n    return skipPointer;\n  }\n\n","sourceOld":"  /**\n   * Writes the buffered skip lists to the given output.\n   * \n   * @param output the IndexOutput the skip lists shall be written to \n   * @return the pointer the skip list starts\n   */\n  public long writeSkip(IndexOutput output) throws IOException {\n    long skipPointer = output.getFilePointer();\n    //System.out.println(\"skipper.writeSkip fp=\" + skipPointer);\n    if (skipBuffer == null || skipBuffer.length == 0) return skipPointer;\n    \n    for (int level = numberOfSkipLevels - 1; level > 0; level--) {\n      long length = skipBuffer[level].getFilePointer();\n      if (length > 0) {\n        output.writeVLong(length);\n        skipBuffer[level].writeTo(output);\n      }\n    }\n    skipBuffer[0].writeTo(output);\n    \n    return skipPointer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListWriter#writeSkip(IndexOutput).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/MultiLevelSkipListWriter#writeSkip(IndexOutput).mjava","sourceNew":"  /**\n   * Writes the buffered skip lists to the given output.\n   * \n   * @param output the IndexOutput the skip lists shall be written to \n   * @return the pointer the skip list starts\n   */\n  public long writeSkip(IndexOutput output) throws IOException {\n    long skipPointer = output.getFilePointer();\n    //System.out.println(\"skipper.writeSkip fp=\" + skipPointer);\n    if (skipBuffer == null || skipBuffer.length == 0) return skipPointer;\n    \n    for (int level = numberOfSkipLevels - 1; level > 0; level--) {\n      long length = skipBuffer[level].getFilePointer();\n      if (length > 0) {\n        output.writeVLong(length);\n        skipBuffer[level].writeTo(output);\n      }\n    }\n    skipBuffer[0].writeTo(output);\n    \n    return skipPointer;\n  }\n\n","sourceOld":"  /**\n   * Writes the buffered skip lists to the given output.\n   * \n   * @param output the IndexOutput the skip lists shall be written to \n   * @return the pointer the skip list starts\n   */\n  public long writeSkip(IndexOutput output) throws IOException {\n    long skipPointer = output.getFilePointer();\n    //System.out.println(\"skipper.writeSkip fp=\" + skipPointer);\n    if (skipBuffer == null || skipBuffer.length == 0) return skipPointer;\n    \n    for (int level = numberOfSkipLevels - 1; level > 0; level--) {\n      long length = skipBuffer[level].getFilePointer();\n      if (length > 0) {\n        output.writeVLong(length);\n        skipBuffer[level].writeTo(output);\n      }\n    }\n    skipBuffer[0].writeTo(output);\n    \n    return skipPointer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}