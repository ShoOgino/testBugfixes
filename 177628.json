{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","commits":[{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#doTest().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","sourceOld":"  @Override\n  public void doTest() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e7761210febbbf9eb64d86512126e718181aec9","date":1467828397,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d","date":1467828398,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n\n\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n\n\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\");\n    index(id, 21, \"b_t\", \"snake spider shark\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53","date":1490757519,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4302dfeb5d01c940f69c48bec27f03ad8828668","date":1490873946,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb88a28fb92adce0607c5b28f8f1cce9e3171639","date":1492689807,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake, ant, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake, ant, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"351efe6fdecf9af62134d37ec2582e4a0331a4dc","date":1498149096,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    \n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake, ant, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake, ant, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    \n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake, ant, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake, ant, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    \n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake, ant, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake, ant, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acc205c9a28b75ff49ea105240dd87c1a9687342","date":1503604483,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    \n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    \n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake, ant, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82873e945a4c6bea4384112b77e7ee51832428e5","date":1503643945,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    \n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    \n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake, ant, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    \n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    \n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra, ant, bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2, 3, 1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake, zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake, ant, zebra\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"732612b6dfa6c27159008ab835dd5d39db3f7ef8","date":1555964772,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    \n    Random random = random();\n    del(\"*:*\");\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    \n    del(\"*:*\");\n    index(id, 18, \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, 19, \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, 20, \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, 21, \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, 22, \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, 23, \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, 24, \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, 25, \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8998ebc47a334c61dfed58318c481a7d84e3eaeb","date":1560839882,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n\n    Random random = random();\n    del(\"*:*\");\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    \n    Random random = random();\n    del(\"*:*\");\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":["bb65c51348af9263e432c5a93cd98be0ca68ec3a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"09a152fdd1e91e2dc8949c867985ea649b2a0c37","date":1571422557,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n\n    Random random = random();\n    del(\"*:*\");\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n\n    // for date point field\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\");\n    // terms.ttf=true doesn't work for point fields\n    //query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n\n    Random random = random();\n    del(\"*:*\");\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"533b6470e7afe31373e3028544170749ea6b26d8","date":1571721038,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n\n    Random random = random();\n    del(\"*:*\");\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n\n    // TODO: SOLR-13403 fix distributed failure case\n    // for date point field\n    //query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\");\n    // terms.ttf=true doesn't work for point fields\n    //query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n\n    Random random = random();\n    del(\"*:*\");\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n\n    // for date point field\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\");\n    // terms.ttf=true doesn't work for point fields\n    //query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":["bb65c51348af9263e432c5a93cd98be0ca68ec3a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb65c51348af9263e432c5a93cd98be0ca68ec3a","date":1571891776,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    Random random = random();\n    del(\"*:*\");\n\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i_p\", \"1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i_p\");\n    del(\"*:*\");\n\n    // verify point field on empty index\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i_p\");\n\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n\n    // for date point field\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\");\n    // terms.ttf=true doesn't work for point fields\n    //query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n\n    Random random = random();\n    del(\"*:*\");\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n\n    // TODO: SOLR-13403 fix distributed failure case\n    // for date point field\n    //query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\");\n    // terms.ttf=true doesn't work for point fields\n    //query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":["8998ebc47a334c61dfed58318c481a7d84e3eaeb","533b6470e7afe31373e3028544170749ea6b26d8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"213e062dd7cfdd10e8df198b43616cb99b0c4fdd","date":1600693537,"type":3,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    Random random = random();\n    del(\"*:*\");\n\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i_p\", \"1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_i_p\");\n    del(\"*:*\");\n\n    // verify point field on empty index\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_i_p\");\n\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n\n    // for date point field\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_date_p\");\n    // terms.ttf=true doesn't work for point fields\n    //query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_date_p\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    Random random = random();\n    del(\"*:*\");\n\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i_p\", \"1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i_p\");\n    del(\"*:*\");\n\n    // verify point field on empty index\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i_p\");\n\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n\n    // for date point field\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\");\n    // terms.ttf=true doesn't work for point fields\n    //query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms\", \"true\", \"terms.fl\", \"foo_date_p\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1bc79aa44ce8dfeb7ad9dda5b4f6b4926d003e0c","date":1600965744,"type":3,"author":"S N Munendra","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedTermsComponentTest#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    Random random = random();\n    del(\"*:*\");\n\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i_p\", \"1\");\n    query(\"qt\", \"/terms\", \"terms.fl\", \"foo_i_p\");\n    del(\"*:*\");\n\n    // verify point field on empty index\n    query(\"qt\", \"/terms\", \"terms.fl\", \"foo_i_p\");\n\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\",  \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\",  \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\",  \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\",  \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\",  \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\",  \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\",  \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\",  \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\",  \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\",  \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\",  \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\",  \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n\n    // for date point field\n    query(\"qt\", \"/terms\",  \"terms.fl\", \"foo_date_p\");\n    // terms.ttf=true doesn't work for point fields\n    //query(\"qt\", \"/terms\",  \"terms.fl\", \"foo_date_p\", \"terms.ttf\", \"true\");\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    Random random = random();\n    del(\"*:*\");\n\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i_p\", \"1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_i_p\");\n    del(\"*:*\");\n\n    // verify point field on empty index\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_i_p\");\n\n    index(id, random.nextInt(), \"b_t\", \"snake a,b spider shark snail slug seal\", \"foo_i\", \"1\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail slug\", \"foo_i\", \"2\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark snail\", \"foo_i\", \"3\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider shark\", \"foo_i\", \"2\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake spider\", \"c_t\", \"snake spider\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"snake\", \"c_t\", \"snake\", \"foo_date_p\", \"2014-03-15T12:00:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"ant zebra\", \"c_t\", \"ant zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    index(id, random.nextInt(), \"b_t\", \"zebra\", \"c_t\", \"zebra\", \"foo_date_p\", \"2015-01-03T14:30:00Z\");\n    commit();\n\n    handle.clear();\n    handle.put(\"terms\", UNORDERED);\n\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"b_t\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.lower\", \"s\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"sn\", \"terms.lower\", \"sn\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\");\n    // terms.sort\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.limit\", 5, \"terms.fl\", \"b_t\", \"terms.prefix\", \"s\", \"terms.lower\", \"s\", \"terms.upper\", \"sn\", \"terms.sort\", \"index\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"b_t\", \"terms.sort\", \"index\");\n    // terms.list\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra,ant,bad\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_i\", \"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_i\", \"terms.stats\", \"true\",\"terms.list\", \"2,3,1\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"b_t\", \"terms.list\", \"snake,zebra\", \"terms.ttf\", \"true\");\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"b_t\", \"terms.fl\", \"c_t\", \"terms.list\", \"snake,ant,zebra\", \"terms.ttf\", \"true\");\n\n    // for date point field\n    query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_date_p\");\n    // terms.ttf=true doesn't work for point fields\n    //query(\"qt\", \"/terms\", \"shards.qt\", \"/terms\", \"terms.fl\", \"foo_date_p\", \"terms.ttf\", \"true\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"351efe6fdecf9af62134d37ec2582e4a0331a4dc":["cb88a28fb92adce0607c5b28f8f1cce9e3171639"],"1bc79aa44ce8dfeb7ad9dda5b4f6b4926d003e0c":["213e062dd7cfdd10e8df198b43616cb99b0c4fdd"],"acc205c9a28b75ff49ea105240dd87c1a9687342":["28288370235ed02234a64753cdbf0c6ec096304a"],"abb23fcc2461782ab204e61213240feb77d355aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a4302dfeb5d01c940f69c48bec27f03ad8828668":["8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d"],"533b6470e7afe31373e3028544170749ea6b26d8":["09a152fdd1e91e2dc8949c867985ea649b2a0c37"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["e9017cf144952056066919f1ebc7897ff9bd71b1","351efe6fdecf9af62134d37ec2582e4a0331a4dc"],"28288370235ed02234a64753cdbf0c6ec096304a":["cb88a28fb92adce0607c5b28f8f1cce9e3171639","351efe6fdecf9af62134d37ec2582e4a0331a4dc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["abb23fcc2461782ab204e61213240feb77d355aa","8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d"],"82873e945a4c6bea4384112b77e7ee51832428e5":["28288370235ed02234a64753cdbf0c6ec096304a","acc205c9a28b75ff49ea105240dd87c1a9687342"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a4302dfeb5d01c940f69c48bec27f03ad8828668","cb88a28fb92adce0607c5b28f8f1cce9e3171639"],"213e062dd7cfdd10e8df198b43616cb99b0c4fdd":["bb65c51348af9263e432c5a93cd98be0ca68ec3a"],"732612b6dfa6c27159008ab835dd5d39db3f7ef8":["82873e945a4c6bea4384112b77e7ee51832428e5"],"cb88a28fb92adce0607c5b28f8f1cce9e3171639":["194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53"],"09a152fdd1e91e2dc8949c867985ea649b2a0c37":["8998ebc47a334c61dfed58318c481a7d84e3eaeb"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","82873e945a4c6bea4384112b77e7ee51832428e5"],"194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53":["8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb65c51348af9263e432c5a93cd98be0ca68ec3a":["533b6470e7afe31373e3028544170749ea6b26d8"],"8998ebc47a334c61dfed58318c481a7d84e3eaeb":["732612b6dfa6c27159008ab835dd5d39db3f7ef8"],"6e7761210febbbf9eb64d86512126e718181aec9":["abb23fcc2461782ab204e61213240feb77d355aa"],"8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d":["6e7761210febbbf9eb64d86512126e718181aec9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1bc79aa44ce8dfeb7ad9dda5b4f6b4926d003e0c"]},"commit2Childs":{"351efe6fdecf9af62134d37ec2582e4a0331a4dc":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"1bc79aa44ce8dfeb7ad9dda5b4f6b4926d003e0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"acc205c9a28b75ff49ea105240dd87c1a9687342":["82873e945a4c6bea4384112b77e7ee51832428e5"],"abb23fcc2461782ab204e61213240feb77d355aa":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","6e7761210febbbf9eb64d86512126e718181aec9"],"a4302dfeb5d01c940f69c48bec27f03ad8828668":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"533b6470e7afe31373e3028544170749ea6b26d8":["bb65c51348af9263e432c5a93cd98be0ca68ec3a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"28288370235ed02234a64753cdbf0c6ec096304a":["acc205c9a28b75ff49ea105240dd87c1a9687342","82873e945a4c6bea4384112b77e7ee51832428e5"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"82873e945a4c6bea4384112b77e7ee51832428e5":["732612b6dfa6c27159008ab835dd5d39db3f7ef8","3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1"],"213e062dd7cfdd10e8df198b43616cb99b0c4fdd":["1bc79aa44ce8dfeb7ad9dda5b4f6b4926d003e0c"],"cb88a28fb92adce0607c5b28f8f1cce9e3171639":["351efe6fdecf9af62134d37ec2582e4a0331a4dc","28288370235ed02234a64753cdbf0c6ec096304a","e9017cf144952056066919f1ebc7897ff9bd71b1"],"732612b6dfa6c27159008ab835dd5d39db3f7ef8":["8998ebc47a334c61dfed58318c481a7d84e3eaeb"],"09a152fdd1e91e2dc8949c867985ea649b2a0c37":["533b6470e7afe31373e3028544170749ea6b26d8"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53":["cb88a28fb92adce0607c5b28f8f1cce9e3171639"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["abb23fcc2461782ab204e61213240feb77d355aa"],"bb65c51348af9263e432c5a93cd98be0ca68ec3a":["213e062dd7cfdd10e8df198b43616cb99b0c4fdd"],"8998ebc47a334c61dfed58318c481a7d84e3eaeb":["09a152fdd1e91e2dc8949c867985ea649b2a0c37"],"6e7761210febbbf9eb64d86512126e718181aec9":["8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d"],"8b92f86e90a95b8fc860ddecd9470ffb89a9fa7d":["a4302dfeb5d01c940f69c48bec27f03ad8828668","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}