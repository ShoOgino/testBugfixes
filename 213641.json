{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#main(String[]).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * The main program for the Tokenizer class\n     *\n     * @param argv  The command line arguments\n     */\n    public static void main(String[] argv)\n    {\n        Tokenizer tok = new Tokenizer();\n        tok.setLinkHandler(\n            new LinkHandler()\n            {\n                int nr = 0;\n\n\n                public void handleLink(String link, boolean isFrame)\n                {\n                    System.out.println(\"found link \" + (++nr) + \": \" + link);\n                }\n                public void handleTitle(String title)\n                {\n                    System.out.println(\"found title \" + (++nr) + \": \" + title);\n                }\n\n\n                public void handleBase(String link)\n                {\n                    System.out.println(\"found base \" + (++nr) + \": \" + link);\n                }\n            });\n        try\n        {\n            tok.parse(new FileReader(\"C:\\\\witest.htm\"));\n            /*\n             *  \"<frame src=\\\\\"link1\\\"> </head>\" +\n             *  \"This is some Text\\n\" +\n             *  \"<a name=_sometest href='link2'>and this is... the link</a>\" +\n             *  \"<table width=234><base href=\\\"'link3'\\\">\"));\n             */\n        }\n        catch (Exception e)\n        {\n            System.out.println(\"Caught Exception: \" + e.getClass().getName());\n            e.printStackTrace();\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21b526e3e9974b2651365fbae52a976e6fc77aa4","date":1022108962,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#main(String[]).mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#main(String[]).mjava","sourceNew":"    /**\n     * The main program for the Tokenizer class\n     *\n     * @param argv  The command line arguments\n     */\n    public static void main(String[] argv)\n    {\n        Tokenizer tok = new Tokenizer();\n        tok.setLinkHandler(\n            new LinkHandler()\n            {\n                int nr = 0;\n\n\n                public void handleLink(String link, String anchor, boolean isFrame)\n                {\n                    System.out.println(\"found link \" + (++nr) + \": \" + link + \"; Text: \" + anchor);\n                }\n                public void handleTitle(String title)\n                {\n                    System.out.println(\"found title \" + (++nr) + \": \" + title);\n                }\n\n\n                public void handleBase(String link)\n                {\n                    System.out.println(\"found base \" + (++nr) + \": \" + link);\n                }\n            });\n        try\n        {\n            tok.parse(new FileReader(\"C:\\\\witest.htm\"));\n            /*\n             *  \"<frame src=\\\\\"link1\\\"> </head>\" +\n             *  \"This is some Text\\n\" +\n             *  \"<a name=_sometest href='link2'>and this is... the link</a>\" +\n             *  \"<table width=234><base href=\\\"'link3'\\\">\"));\n             */\n        }\n        catch (Exception e)\n        {\n            System.out.println(\"Caught Exception: \" + e.getClass().getName());\n            e.printStackTrace();\n        }\n    }\n\n","sourceOld":"    /**\n     * The main program for the Tokenizer class\n     *\n     * @param argv  The command line arguments\n     */\n    public static void main(String[] argv)\n    {\n        Tokenizer tok = new Tokenizer();\n        tok.setLinkHandler(\n            new LinkHandler()\n            {\n                int nr = 0;\n\n\n                public void handleLink(String link, boolean isFrame)\n                {\n                    System.out.println(\"found link \" + (++nr) + \": \" + link);\n                }\n                public void handleTitle(String title)\n                {\n                    System.out.println(\"found title \" + (++nr) + \": \" + title);\n                }\n\n\n                public void handleBase(String link)\n                {\n                    System.out.println(\"found base \" + (++nr) + \": \" + link);\n                }\n            });\n        try\n        {\n            tok.parse(new FileReader(\"C:\\\\witest.htm\"));\n            /*\n             *  \"<frame src=\\\\\"link1\\\"> </head>\" +\n             *  \"This is some Text\\n\" +\n             *  \"<a name=_sometest href='link2'>and this is... the link</a>\" +\n             *  \"<table width=234><base href=\\\"'link3'\\\">\"));\n             */\n        }\n        catch (Exception e)\n        {\n            System.out.println(\"Caught Exception: \" + e.getClass().getName());\n            e.printStackTrace();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#main(String[]).mjava","sourceNew":null,"sourceOld":"    /**\n     * The main program for the Tokenizer class\n     *\n     * @param argv  The command line arguments\n     */\n    public static void main(String[] argv)\n    {\n        Tokenizer tok = new Tokenizer();\n        tok.setLinkHandler(\n            new LinkHandler()\n            {\n                int nr = 0;\n\n\n                public void handleLink(String link, String anchor, boolean isFrame)\n                {\n                    System.out.println(\"found link \" + (++nr) + \": \" + link + \"; Text: \" + anchor);\n                }\n                public void handleTitle(String title)\n                {\n                    System.out.println(\"found title \" + (++nr) + \": \" + title);\n                }\n\n\n                public void handleBase(String link)\n                {\n                    System.out.println(\"found base \" + (++nr) + \": \" + link);\n                }\n            });\n        try\n        {\n            tok.parse(new FileReader(\"C:\\\\witest.htm\"));\n            /*\n             *  \"<frame src=\\\\\"link1\\\"> </head>\" +\n             *  \"This is some Text\\n\" +\n             *  \"<a name=_sometest href='link2'>and this is... the link</a>\" +\n             *  \"<table width=234><base href=\\\"'link3'\\\">\"));\n             */\n        }\n        catch (Exception e)\n        {\n            System.out.println(\"Caught Exception: \" + e.getClass().getName());\n            e.printStackTrace();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21b526e3e9974b2651365fbae52a976e6fc77aa4":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["21b526e3e9974b2651365fbae52a976e6fc77aa4"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"21b526e3e9974b2651365fbae52a976e6fc77aa4":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["21b526e3e9974b2651365fbae52a976e6fc77aa4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}