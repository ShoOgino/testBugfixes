{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets(String).mjava","commits":[{"id":"3685dcafc9195b0631414aa4d422f788479e62b7","date":1364492243,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets(String).mjava","pathOld":"/dev/null","sourceNew":"  private void testSimpleGroupedQueryRangeFacets(String facetLimit) {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    /* Testing facet.query using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"{!ex=dus}airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    /* Testing facet.range using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e135e47842b3fd6a4797b7e4787241b06817efa2","date":1429817254,"type":3,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets(String).mjava","sourceNew":"  private void testSimpleGroupedQueryRangeFacets(String facetLimit) {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    /* Testing facet.query using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"{!ex=dus}airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    /* Testing facet.range using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    \n    // repeat the same query using DV method. This is not supported and the query should use filter method instead\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\",\n            \"facet.range.method\", FacetRangeMethod.DV.toString()\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","sourceOld":"  private void testSimpleGroupedQueryRangeFacets(String facetLimit) {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    /* Testing facet.query using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"{!ex=dus}airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    /* Testing facet.range using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets(String).mjava","sourceNew":"  private void testSimpleGroupedQueryRangeFacets(String facetLimit) {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    /* Testing facet.query using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"{!ex=dus}airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    /* Testing facet.range using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    \n    // repeat the same query using DV method. This is not supported and the query should use filter method instead\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\",\n            \"facet.range.method\", FacetRangeMethod.DV.toString()\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","sourceOld":"  private void testSimpleGroupedQueryRangeFacets(String facetLimit) {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    /* Testing facet.query using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"{!ex=dus}airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    /* Testing facet.range using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    \n    // repeat the same query using DV method. This is not supported and the query should use filter method instead\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\",\n            \"facet.range.method\", FacetRangeMethod.DV.toString()\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets(String).mjava","sourceNew":"  private void testSimpleGroupedQueryRangeFacets(String facetLimit) {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    /* Testing facet.query using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"{!ex=dus}airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    /* Testing facet.range using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    \n    // repeat the same query using DV method. This is not supported and the query should use filter method instead\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\",\n            \"facet.range.method\", FacetRangeMethod.DV.toString()\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","sourceOld":"  private void testSimpleGroupedQueryRangeFacets(String facetLimit) {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    /* Testing facet.query using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"{!ex=dus}airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    /* Testing facet.range using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    \n    // repeat the same query using DV method. This is not supported and the query should use filter method instead\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\",\n            \"facet.range.method\", FacetRangeMethod.DV.toString()\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#testSimpleGroupedQueryRangeFacets(String).mjava","sourceNew":"  private void testSimpleGroupedQueryRangeFacets(String facetLimit) {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    /* Testing facet.query using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"{!ex=dus}airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    /* Testing facet.range using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    \n    // repeat the same query using DV method. This is not supported and the query should use filter method instead\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id_i1:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\",\n            \"facet.range.method\", FacetRangeMethod.DV.toString()\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","sourceOld":"  private void testSimpleGroupedQueryRangeFacets(String facetLimit) {\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']\"\n    );\n    /* Testing facet.query using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.query\", \"{!ex=dus}airport_s1:ams\"\n        ),\n        \"//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']\"\n    );\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    /* Testing facet.range using tagged filter query and exclusion */\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\"\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n    \n    // repeat the same query using DV method. This is not supported and the query should use filter method instead\n    assertQ(\n        req(\n            \"q\", \"*:*\",\n            \"fq\", \"id:[2000 TO 2004]\",\n            \"fq\", \"{!tag=dus}airport_s1:dus\",\n            \"group\", \"true\",\n            \"group.facet\", \"true\",\n            \"group.field\", \"hotel_s1\",\n            \"facet\", \"true\",\n            \"facet.limit\", facetLimit,\n            \"facet.range\", \"{!ex=dus}duration_i1\",\n            \"facet.range.start\", \"5\",\n            \"facet.range.end\", \"11\",\n            \"facet.range.gap\", \"1\",\n            \"facet.range.method\", FacetRangeMethod.DV.toString()\n        ),\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']\",\n        \"//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e135e47842b3fd6a4797b7e4787241b06817efa2":["3685dcafc9195b0631414aa4d422f788479e62b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["e135e47842b3fd6a4797b7e4787241b06817efa2"],"3685dcafc9195b0631414aa4d422f788479e62b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["e135e47842b3fd6a4797b7e4787241b06817efa2","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e135e47842b3fd6a4797b7e4787241b06817efa2","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"e135e47842b3fd6a4797b7e4787241b06817efa2":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3685dcafc9195b0631414aa4d422f788479e62b7"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"3685dcafc9195b0631414aa4d422f788479e62b7":["e135e47842b3fd6a4797b7e4787241b06817efa2"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}