{"path":"backwards/src/test/org/apache/lucene/index/TestFieldInfos#test().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestFieldInfos#test().mjava","pathOld":"/dev/null","sourceNew":"  public void test() throws IOException {\n    //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    fieldInfos.add(testDoc);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    RAMDirectory dir = new RAMDirectory();\n    String name = \"testFile\";\n    IndexOutput output = dir.createOutput(name);\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n    \n    try {\n      fieldInfos.write(output);\n      output.close();\n      assertTrue(output.length() > 0);\n      FieldInfos readIn = new FieldInfos(dir, name);\n      assertTrue(fieldInfos.size() == readIn.size());\n      FieldInfo info = readIn.fieldInfo(\"textField1\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == false);\n      assertTrue(info.omitNorms == false);\n\n      info = readIn.fieldInfo(\"textField2\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == true);\n      assertTrue(info.omitNorms == false);\n\n      info = readIn.fieldInfo(\"textField3\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == false);\n      assertTrue(info.omitNorms == true);\n\n      info = readIn.fieldInfo(\"omitNorms\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == false);\n      assertTrue(info.omitNorms == true);\n\n      dir.close();\n\n    } catch (IOException e) {\n      assertTrue(false);\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestFieldInfos#test().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestFieldInfos#test().mjava","sourceNew":"  public void test() throws IOException {\n    //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    fieldInfos.add(testDoc);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    RAMDirectory dir = new RAMDirectory();\n    String name = \"testFile\";\n    IndexOutput output = dir.createOutput(name);\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n    \n    try {\n      fieldInfos.write(output);\n      output.close();\n      assertTrue(output.length() > 0);\n      FieldInfos readIn = new FieldInfos(dir, name);\n      assertTrue(fieldInfos.size() == readIn.size());\n      FieldInfo info = readIn.fieldInfo(\"textField1\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == false);\n      assertTrue(info.omitNorms == false);\n\n      info = readIn.fieldInfo(\"textField2\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == true);\n      assertTrue(info.omitNorms == false);\n\n      info = readIn.fieldInfo(\"textField3\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == false);\n      assertTrue(info.omitNorms == true);\n\n      info = readIn.fieldInfo(\"omitNorms\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == false);\n      assertTrue(info.omitNorms == true);\n\n      dir.close();\n\n    } catch (IOException e) {\n      assertTrue(false);\n    }\n\n  }\n\n","sourceOld":"  public void test() throws IOException {\n    //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    fieldInfos.add(testDoc);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    RAMDirectory dir = new RAMDirectory();\n    String name = \"testFile\";\n    IndexOutput output = dir.createOutput(name);\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n    \n    try {\n      fieldInfos.write(output);\n      output.close();\n      assertTrue(output.length() > 0);\n      FieldInfos readIn = new FieldInfos(dir, name);\n      assertTrue(fieldInfos.size() == readIn.size());\n      FieldInfo info = readIn.fieldInfo(\"textField1\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == false);\n      assertTrue(info.omitNorms == false);\n\n      info = readIn.fieldInfo(\"textField2\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == true);\n      assertTrue(info.omitNorms == false);\n\n      info = readIn.fieldInfo(\"textField3\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == false);\n      assertTrue(info.omitNorms == true);\n\n      info = readIn.fieldInfo(\"omitNorms\");\n      assertTrue(info != null);\n      assertTrue(info.storeTermVector == false);\n      assertTrue(info.omitNorms == true);\n\n      dir.close();\n\n    } catch (IOException e) {\n      assertTrue(false);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}