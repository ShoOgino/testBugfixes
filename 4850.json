{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLongitudeSlice#GeoDegenerateLongitudeSlice(PlanetModel,double).mjava","commits":[{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLongitudeSlice#GeoDegenerateLongitudeSlice(PlanetModel,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLongitudeSlice#GeoDegenerateLongitudeSlice(double).mjava","sourceNew":"  /**\n   * Accepts only values in the following ranges: lon: {@code -PI -> PI}\n   */\n  public GeoDegenerateLongitudeSlice(final PlanetModel planetModel, final double longitude) {\n    super(planetModel);\n    // Argument checking\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n    this.longitude = longitude;\n\n    this.sinLongitude = Math.sin(longitude);\n    this.cosLongitude = Math.cos(longitude);\n\n    this.plane = new Plane(cosLongitude, sinLongitude);\n    // We need a bounding plane too, which is perpendicular to the longitude plane and sided so that the point (0.0, longitude) is inside.\n    this.interiorPoint = new GeoPoint(planetModel, 0.0, sinLongitude, 1.0, cosLongitude);\n    this.boundingPlane = new SidedPlane(interiorPoint, -sinLongitude, cosLongitude);\n    this.edgePoints = new GeoPoint[]{interiorPoint};\n    this.planePoints = new GeoPoint[]{planetModel.NORTH_POLE, planetModel.SOUTH_POLE};\n  }\n\n","sourceOld":"  /**\n   * Accepts only values in the following ranges: lon: {@code -PI -> PI}\n   */\n  public GeoDegenerateLongitudeSlice(final double longitude) {\n    // Argument checking\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n    this.longitude = longitude;\n\n    this.sinLongitude = Math.sin(longitude);\n    this.cosLongitude = Math.cos(longitude);\n\n    this.plane = new Plane(cosLongitude, sinLongitude);\n    // We need a bounding plane too, which is perpendicular to the longitude plane and sided so that the point (0.0, longitude) is inside.\n    this.interiorPoint = new GeoPoint(cosLongitude, sinLongitude, 0.0);\n    this.boundingPlane = new SidedPlane(interiorPoint, -sinLongitude, cosLongitude);\n    this.edgePoints = new GeoPoint[]{interiorPoint};\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":1,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLongitudeSlice#GeoDegenerateLongitudeSlice(PlanetModel,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLongitudeSlice#GeoDegenerateLongitudeSlice(double).mjava","sourceNew":"  /**\n   * Accepts only values in the following ranges: lon: {@code -PI -> PI}\n   */\n  public GeoDegenerateLongitudeSlice(final PlanetModel planetModel, final double longitude) {\n    super(planetModel);\n    // Argument checking\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n    this.longitude = longitude;\n\n    this.sinLongitude = Math.sin(longitude);\n    this.cosLongitude = Math.cos(longitude);\n\n    this.plane = new Plane(cosLongitude, sinLongitude);\n    // We need a bounding plane too, which is perpendicular to the longitude plane and sided so that the point (0.0, longitude) is inside.\n    this.interiorPoint = new GeoPoint(planetModel, 0.0, sinLongitude, 1.0, cosLongitude);\n    this.boundingPlane = new SidedPlane(interiorPoint, -sinLongitude, cosLongitude);\n    this.edgePoints = new GeoPoint[]{interiorPoint};\n    this.planePoints = new GeoPoint[]{planetModel.NORTH_POLE, planetModel.SOUTH_POLE};\n  }\n\n","sourceOld":"  /**\n   * Accepts only values in the following ranges: lon: {@code -PI -> PI}\n   */\n  public GeoDegenerateLongitudeSlice(final double longitude) {\n    // Argument checking\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n    this.longitude = longitude;\n\n    this.sinLongitude = Math.sin(longitude);\n    this.cosLongitude = Math.cos(longitude);\n\n    this.plane = new Plane(cosLongitude, sinLongitude);\n    // We need a bounding plane too, which is perpendicular to the longitude plane and sided so that the point (0.0, longitude) is inside.\n    this.interiorPoint = new GeoPoint(cosLongitude, sinLongitude, 0.0);\n    this.boundingPlane = new SidedPlane(interiorPoint, -sinLongitude, cosLongitude);\n    this.edgePoints = new GeoPoint[]{interiorPoint};\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoDegenerateLongitudeSlice#GeoDegenerateLongitudeSlice(PlanetModel,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoDegenerateLongitudeSlice#GeoDegenerateLongitudeSlice(PlanetModel,double).mjava","sourceNew":"  /**\n   * Accepts only values in the following ranges: lon: {@code -PI -> PI}\n   */\n  public GeoDegenerateLongitudeSlice(final PlanetModel planetModel, final double longitude) {\n    super(planetModel);\n    // Argument checking\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n    this.longitude = longitude;\n\n    this.sinLongitude = Math.sin(longitude);\n    this.cosLongitude = Math.cos(longitude);\n\n    this.plane = new Plane(cosLongitude, sinLongitude);\n    // We need a bounding plane too, which is perpendicular to the longitude plane and sided so that the point (0.0, longitude) is inside.\n    this.interiorPoint = new GeoPoint(planetModel, 0.0, sinLongitude, 1.0, cosLongitude);\n    this.boundingPlane = new SidedPlane(interiorPoint, -sinLongitude, cosLongitude);\n    this.edgePoints = new GeoPoint[]{interiorPoint};\n    this.planePoints = new GeoPoint[]{planetModel.NORTH_POLE, planetModel.SOUTH_POLE};\n  }\n\n","sourceOld":"  /**\n   * Accepts only values in the following ranges: lon: {@code -PI -> PI}\n   */\n  public GeoDegenerateLongitudeSlice(final PlanetModel planetModel, final double longitude) {\n    super(planetModel);\n    // Argument checking\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n    this.longitude = longitude;\n\n    this.sinLongitude = Math.sin(longitude);\n    this.cosLongitude = Math.cos(longitude);\n\n    this.plane = new Plane(cosLongitude, sinLongitude);\n    // We need a bounding plane too, which is perpendicular to the longitude plane and sided so that the point (0.0, longitude) is inside.\n    this.interiorPoint = new GeoPoint(planetModel, 0.0, sinLongitude, 1.0, cosLongitude);\n    this.boundingPlane = new SidedPlane(interiorPoint, -sinLongitude, cosLongitude);\n    this.edgePoints = new GeoPoint[]{interiorPoint};\n    this.planePoints = new GeoPoint[]{planetModel.NORTH_POLE, planetModel.SOUTH_POLE};\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["fec06d6753751ae302c7d35866763e6cb414112d"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"fec06d6753751ae302c7d35866763e6cb414112d":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}