{"path":"lucene/src/test/org/apache/lucene/store/MockDirectoryWrapper#sync(String).mjava","commits":[{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/MockDirectoryWrapper#sync(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/MockRAMDirectory#sync(String).mjava","sourceNew":"  @Deprecated\n  @Override\n  public void sync(String name) throws IOException {\n    maybeThrowDeterministicException();\n    if (crashed)\n      throw new IOException(\"cannot sync after crash\");\n    unSyncedFiles.remove(name);\n    delegate.sync(name);\n  }\n\n","sourceOld":"  @Deprecated\n  @Override\n  public void sync(String name) throws IOException {\n    sync(Collections.singleton(name));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53a31399f2471493d67b19a95c028a74e0113b6a","date":1289817072,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/MockDirectoryWrapper#sync(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/MockDirectoryWrapper#sync(String).mjava","sourceNew":"  @Deprecated\n  @Override\n  public void sync(String name) throws IOException {\n    maybeYield();\n    maybeThrowDeterministicException();\n    if (crashed)\n      throw new IOException(\"cannot sync after crash\");\n    unSyncedFiles.remove(name);\n    delegate.sync(name);\n  }\n\n","sourceOld":"  @Deprecated\n  @Override\n  public void sync(String name) throws IOException {\n    maybeThrowDeterministicException();\n    if (crashed)\n      throw new IOException(\"cannot sync after crash\");\n    unSyncedFiles.remove(name);\n    delegate.sync(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/MockDirectoryWrapper#sync(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/MockDirectoryWrapper#sync(String).mjava","sourceNew":"  @Deprecated\n  @Override\n  public void sync(String name) throws IOException {\n    maybeYield();\n    maybeThrowDeterministicException();\n    if (crashed)\n      throw new IOException(\"cannot sync after crash\");\n    unSyncedFiles.remove(name);\n    delegate.sync(name);\n  }\n\n","sourceOld":"  @Deprecated\n  @Override\n  public void sync(String name) throws IOException {\n    maybeThrowDeterministicException();\n    if (crashed)\n      throw new IOException(\"cannot sync after crash\");\n    unSyncedFiles.remove(name);\n    delegate.sync(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/store/MockDirectoryWrapper#sync(String).mjava","sourceNew":null,"sourceOld":"  @Deprecated\n  @Override\n  public void sync(String name) throws IOException {\n    maybeYield();\n    maybeThrowDeterministicException();\n    if (crashed)\n      throw new IOException(\"cannot sync after crash\");\n    unSyncedFiles.remove(name);\n    delegate.sync(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/store/MockDirectoryWrapper#sync(String).mjava","sourceNew":null,"sourceOld":"  @Deprecated\n  @Override\n  public void sync(String name) throws IOException {\n    maybeYield();\n    maybeThrowDeterministicException();\n    if (crashed)\n      throw new IOException(\"cannot sync after crash\");\n    unSyncedFiles.remove(name);\n    delegate.sync(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"53a31399f2471493d67b19a95c028a74e0113b6a":["a05409176bd65129d67a785ee70e881e238a9aef"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["a05409176bd65129d67a785ee70e881e238a9aef","53a31399f2471493d67b19a95c028a74e0113b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3bb13258feba31ab676502787ab2e1779f129b7a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["53a31399f2471493d67b19a95c028a74e0113b6a"]},"commit2Childs":{"53a31399f2471493d67b19a95c028a74e0113b6a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["3bb13258feba31ab676502787ab2e1779f129b7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a05409176bd65129d67a785ee70e881e238a9aef"],"a05409176bd65129d67a785ee70e881e238a9aef":["53a31399f2471493d67b19a95c028a74e0113b6a","9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}