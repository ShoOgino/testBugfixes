{"path":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestDatePointFieldRangeFacet(String,String).mjava","commits":[{"id":"daa9f76a48e97bb2d40fc67ecdaad33d166d596e","date":1488856307,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestDatePointFieldRangeFacet(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestDatePointFieldRangeFacet(String docValuesField, String nonDocValuesField) throws Exception {\n    String baseDate = \"1995-01-10T10:59:59Z\";\n    for (int i = 0; i < 10; i++) {\n      String date = String.format(Locale.ROOT, \"%s+%dDAYS\", baseDate, i);\n      assertU(adoc(\"id\", String.valueOf(i), docValuesField, date, nonDocValuesField, date));\n    }\n    assertU(commit());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).getType() instanceof PointField);\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\", \"facet.range.method\", \"dv\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n\n    assertFalse(h.getCore().getLatestSchema().getField(nonDocValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).getType() instanceof PointField);\n    // Range Faceting with method = filter should work\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\", \"facet.range.method\", \"filter\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n\n    // this should actually use filter method instead of dv\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\", \"facet.range.method\", \"dv\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e844d4f9ba6804f10747d7e51e83a9a8868c94","date":1500054875,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestDatePointFieldRangeFacet(String,String).mjava","sourceNew":null,"sourceOld":"  private void doTestDatePointFieldRangeFacet(String docValuesField, String nonDocValuesField) throws Exception {\n    String baseDate = \"1995-01-10T10:59:59Z\";\n    for (int i = 0; i < 10; i++) {\n      String date = String.format(Locale.ROOT, \"%s+%dDAYS\", baseDate, i);\n      assertU(adoc(\"id\", String.valueOf(i), docValuesField, date, nonDocValuesField, date));\n    }\n    assertU(commit());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).getType() instanceof PointField);\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\", \"facet.range.method\", \"dv\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n\n    assertFalse(h.getCore().getLatestSchema().getField(nonDocValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).getType() instanceof PointField);\n    // Range Faceting with method = filter should work\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\", \"facet.range.method\", \"filter\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n\n    // this should actually use filter method instead of dv\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\", \"facet.range.method\", \"dv\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaf90fc29510e72665ac7934f34c3d1c25efad64","date":1500354819,"type":4,"author":"Cao Manh Dat","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestPointFields#doTestDatePointFieldRangeFacet(String,String).mjava","sourceNew":null,"sourceOld":"  private void doTestDatePointFieldRangeFacet(String docValuesField, String nonDocValuesField) throws Exception {\n    String baseDate = \"1995-01-10T10:59:59Z\";\n    for (int i = 0; i < 10; i++) {\n      String date = String.format(Locale.ROOT, \"%s+%dDAYS\", baseDate, i);\n      assertU(adoc(\"id\", String.valueOf(i), docValuesField, date, nonDocValuesField, date));\n    }\n    assertU(commit());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(docValuesField).getType() instanceof PointField);\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", docValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\", \"facet.range.method\", \"dv\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + docValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n\n    assertFalse(h.getCore().getLatestSchema().getField(nonDocValuesField).hasDocValues());\n    assertTrue(h.getCore().getLatestSchema().getField(nonDocValuesField).getType() instanceof PointField);\n    // Range Faceting with method = filter should work\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\", \"facet.range.method\", \"filter\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n\n    // this should actually use filter method instead of dv\n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.range\", nonDocValuesField, \"facet.range.start\", \"1995-01-10T10:59:59Z-10DAYS\",\n        \"facet.range.end\", \"1995-01-10T10:59:59Z+10DAYS\", \"facet.range.gap\", \"+2DAYS\", \"facet.range.method\", \"dv\"),\n        \"//*[@numFound='10']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-10T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-12T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-14T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-16T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-18T10:59:59Z'][.='2']\",\n        \"//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='\" + nonDocValuesField + \"']/lst[@name='counts']/int[@name='1995-01-08T10:59:59Z'][.='0']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"daa9f76a48e97bb2d40fc67ecdaad33d166d596e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":["daa9f76a48e97bb2d40fc67ecdaad33d166d596e","17e844d4f9ba6804f10747d7e51e83a9a8868c94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e844d4f9ba6804f10747d7e51e83a9a8868c94":["daa9f76a48e97bb2d40fc67ecdaad33d166d596e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e844d4f9ba6804f10747d7e51e83a9a8868c94"]},"commit2Childs":{"daa9f76a48e97bb2d40fc67ecdaad33d166d596e":["aaf90fc29510e72665ac7934f34c3d1c25efad64","17e844d4f9ba6804f10747d7e51e83a9a8868c94"],"aaf90fc29510e72665ac7934f34c3d1c25efad64":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["daa9f76a48e97bb2d40fc67ecdaad33d166d596e"],"17e844d4f9ba6804f10747d7e51e83a9a8868c94":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aaf90fc29510e72665ac7934f34c3d1c25efad64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}