{"path":"lucene/core/src/java/org/apache/lucene/search/comparators/DocComparator.DocLeafComparator#updateIterator().mjava","commits":[{"id":"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241","date":1599588987,"type":0,"author":"Mayya Sharipova","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/comparators/DocComparator.DocLeafComparator#updateIterator().mjava","pathOld":"/dev/null","sourceNew":"        private void updateIterator() {\n            if (enableSkipping == false || hitsThresholdReached == false) return;\n            if (bottomValueSet) {\n                // since we've collected top N matches, we can early terminate\n                // Currently early termination on _doc is also implemented in TopFieldCollector, but this will be removed\n                // once all bulk scores uses collectors' iterators\n                competitiveIterator = DocIdSetIterator.empty();\n            } else if (topValueSet) {\n                // skip to the desired top doc\n                if (docBase + maxDoc <= minDoc) {\n                    competitiveIterator = DocIdSetIterator.empty(); // skip this segment\n                } else {\n                    int segmentMinDoc = Math.max(0, minDoc - docBase);\n                    competitiveIterator = new MinDocIterator(segmentMinDoc, maxDoc);\n                }\n            }\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e977a403f93a917f75266c88727eadb89e4f64fc","date":1600866583,"type":3,"author":"Mayya Sharipova","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/comparators/DocComparator.DocLeafComparator#updateIterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/comparators/DocComparator.DocLeafComparator#updateIterator().mjava","sourceNew":"        private void updateIterator() {\n            if (enableSkipping == false || hitsThresholdReached == false) return;\n            if (bottomValueSet) {\n                // since we've collected top N matches, we can early terminate\n                // Currently early termination on _doc is also implemented in TopFieldCollector, but this will be removed\n                // once all bulk scores uses collectors' iterators\n                competitiveIterator = DocIdSetIterator.empty();\n            } else if (topValueSet) {\n                // skip to the desired top doc\n                if (docBase + maxDoc <= minDoc) {\n                    competitiveIterator = DocIdSetIterator.empty(); // skip this segment\n                } else {\n                    int segmentMinDoc = Math.max(competitiveIterator.docID(), minDoc - docBase);\n                    competitiveIterator = new MinDocIterator(segmentMinDoc, maxDoc);\n                }\n            }\n        }\n\n","sourceOld":"        private void updateIterator() {\n            if (enableSkipping == false || hitsThresholdReached == false) return;\n            if (bottomValueSet) {\n                // since we've collected top N matches, we can early terminate\n                // Currently early termination on _doc is also implemented in TopFieldCollector, but this will be removed\n                // once all bulk scores uses collectors' iterators\n                competitiveIterator = DocIdSetIterator.empty();\n            } else if (topValueSet) {\n                // skip to the desired top doc\n                if (docBase + maxDoc <= minDoc) {\n                    competitiveIterator = DocIdSetIterator.empty(); // skip this segment\n                } else {\n                    int segmentMinDoc = Math.max(0, minDoc - docBase);\n                    competitiveIterator = new MinDocIterator(segmentMinDoc, maxDoc);\n                }\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e977a403f93a917f75266c88727eadb89e4f64fc":["e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e977a403f93a917f75266c88727eadb89e4f64fc"],"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e977a403f93a917f75266c88727eadb89e4f64fc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241"],"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241":["e977a403f93a917f75266c88727eadb89e4f64fc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}