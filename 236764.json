{"path":"lucene/backwards/src/test/org/apache/lucene/index/TestCrash#initIndex(MockRAMDirectory,boolean).mjava","commits":[{"id":"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9","date":1270985469,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestCrash#initIndex(MockRAMDirectory,boolean).mjava","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestCrash#initIndex(MockRAMDirectory).mjava","sourceNew":"  private IndexWriter initIndex(MockRAMDirectory dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n    //writer.setMaxBufferedDocs(2);\n    writer.setMaxBufferedDocs(10);\n    ((ConcurrentMergeScheduler) writer.getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(MockRAMDirectory dir) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n    //writer.setMaxBufferedDocs(2);\n    writer.setMaxBufferedDocs(10);\n    ((ConcurrentMergeScheduler) writer.getMergeScheduler()).setSuppressExceptions();\n\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10","date":1270996866,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestCrash#initIndex(MockRAMDirectory).mjava","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestCrash#initIndex(MockRAMDirectory,boolean).mjava","sourceNew":"  private IndexWriter initIndex(MockRAMDirectory dir) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n    //writer.setMaxBufferedDocs(2);\n    writer.setMaxBufferedDocs(10);\n    ((ConcurrentMergeScheduler) writer.getMergeScheduler()).setSuppressExceptions();\n\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(MockRAMDirectory dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n    //writer.setMaxBufferedDocs(2);\n    writer.setMaxBufferedDocs(10);\n    ((ConcurrentMergeScheduler) writer.getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4","date":1271167458,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestCrash#initIndex(MockRAMDirectory,boolean).mjava","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestCrash#initIndex(MockRAMDirectory).mjava","sourceNew":"  private IndexWriter initIndex(MockRAMDirectory dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n    //writer.setMaxBufferedDocs(2);\n    writer.setMaxBufferedDocs(10);\n    ((ConcurrentMergeScheduler) writer.getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(MockRAMDirectory dir) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n    //writer.setMaxBufferedDocs(2);\n    writer.setMaxBufferedDocs(10);\n    ((ConcurrentMergeScheduler) writer.getMergeScheduler()).setSuppressExceptions();\n\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/index/TestCrash#initIndex(MockRAMDirectory,boolean).mjava","sourceNew":null,"sourceOld":"  private IndexWriter initIndex(MockRAMDirectory dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n    //writer.setMaxBufferedDocs(2);\n    writer.setMaxBufferedDocs(10);\n    ((ConcurrentMergeScheduler) writer.getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}