{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40SkipListReader#readSkipData(int,IndexInput).mjava","commits":[{"id":"cfd7f00f3dbc4c50d336540f063493fc0f7d830f","date":1322850565,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40SkipListReader#readSkipData(int,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/DefaultSkipListReader#readSkipData(int,IndexInput).mjava","sourceNew":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    int delta;\n    if (currentFieldStoresPayloads) {\n      // the current field stores payloads.\n      // if the doc delta is odd then we have\n      // to read the current payload length\n      // because it differs from the length of the\n      // previous payload\n      delta = skipStream.readVInt();\n      if ((delta & 1) != 0) {\n        payloadLength[level] = skipStream.readVInt();\n      }\n      delta >>>= 1;\n    } else {\n      delta = skipStream.readVInt();\n    }\n    freqPointer[level] += skipStream.readVInt();\n    proxPointer[level] += skipStream.readVInt();\n    \n    return delta;\n  }\n\n","sourceOld":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    int delta;\n    if (currentFieldStoresPayloads) {\n      // the current field stores payloads.\n      // if the doc delta is odd then we have\n      // to read the current payload length\n      // because it differs from the length of the\n      // previous payload\n      delta = skipStream.readVInt();\n      if ((delta & 1) != 0) {\n        payloadLength[level] = skipStream.readVInt();\n      }\n      delta >>>= 1;\n    } else {\n      delta = skipStream.readVInt();\n    }\n    freqPointer[level] += skipStream.readVInt();\n    proxPointer[level] += skipStream.readVInt();\n    \n    return delta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListReader#readSkipData(int,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40SkipListReader#readSkipData(int,IndexInput).mjava","sourceNew":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    int delta;\n    if (currentFieldStoresPayloads) {\n      // the current field stores payloads.\n      // if the doc delta is odd then we have\n      // to read the current payload length\n      // because it differs from the length of the\n      // previous payload\n      delta = skipStream.readVInt();\n      if ((delta & 1) != 0) {\n        payloadLength[level] = skipStream.readVInt();\n      }\n      delta >>>= 1;\n    } else {\n      delta = skipStream.readVInt();\n    }\n    freqPointer[level] += skipStream.readVInt();\n    proxPointer[level] += skipStream.readVInt();\n    \n    return delta;\n  }\n\n","sourceOld":"  @Override\n  protected int readSkipData(int level, IndexInput skipStream) throws IOException {\n    int delta;\n    if (currentFieldStoresPayloads) {\n      // the current field stores payloads.\n      // if the doc delta is odd then we have\n      // to read the current payload length\n      // because it differs from the length of the\n      // previous payload\n      delta = skipStream.readVInt();\n      if ((delta & 1) != 0) {\n        payloadLength[level] = skipStream.readVInt();\n      }\n      delta >>>= 1;\n    } else {\n      delta = skipStream.readVInt();\n    }\n    freqPointer[level] += skipStream.readVInt();\n    proxPointer[level] += skipStream.readVInt();\n    \n    return delta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}