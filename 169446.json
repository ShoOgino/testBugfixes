{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/FuzzySet#createSetBasedOnQuality(int,float,HashFunction).mjava","commits":[{"id":"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30","date":1346918556,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/FuzzySet#createSetBasedOnQuality(int,float,HashFunction).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/FuzzySet#createSetBasedOnQuality(int,float,HashFunction).mjava","sourceNew":"  public static FuzzySet createSetBasedOnQuality(int maxNumUniqueValues, float desiredMaxSaturation, HashFunction hashFunction)\n  {\n      int setSize=getNearestSetSize(maxNumUniqueValues,desiredMaxSaturation);\n      return new FuzzySet(new FixedBitSet(setSize+1),setSize,hashFunction);\n  }\n\n","sourceOld":"  public static FuzzySet createSetBasedOnQuality(int maxNumUniqueValues, float desiredMaxSaturation, HashFunction hashFunction)\n  {\n      int setSize=getNearestSetSize(maxNumUniqueValues,desiredMaxSaturation);\n      return new FuzzySet(new FixedBitSet(setSize+1),setSize,hashFunction);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93e750bd74491320276b536b1d5a9864547c5059","date":1346919375,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/FuzzySet#createSetBasedOnQuality(int,float).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/FuzzySet#createSetBasedOnQuality(int,float,HashFunction).mjava","sourceNew":"  public static FuzzySet createSetBasedOnQuality(int maxNumUniqueValues, float desiredMaxSaturation)\n  {\n      int setSize=getNearestSetSize(maxNumUniqueValues,desiredMaxSaturation);\n      return new FuzzySet(new FixedBitSet(setSize+1),setSize, hashFunctionForVersion(VERSION_CURRENT));\n  }\n\n","sourceOld":"  public static FuzzySet createSetBasedOnQuality(int maxNumUniqueValues, float desiredMaxSaturation, HashFunction hashFunction)\n  {\n      int setSize=getNearestSetSize(maxNumUniqueValues,desiredMaxSaturation);\n      return new FuzzySet(new FixedBitSet(setSize+1),setSize,hashFunction);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93e750bd74491320276b536b1d5a9864547c5059"],"93e750bd74491320276b536b1d5a9864547c5059":["3f1361ca6e7d39bfd5cf15485d8843ea798bdd30"]},"commit2Childs":{"3f1361ca6e7d39bfd5cf15485d8843ea798bdd30":["93e750bd74491320276b536b1d5a9864547c5059"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f1361ca6e7d39bfd5cf15485d8843ea798bdd30"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"93e750bd74491320276b536b1d5a9864547c5059":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}