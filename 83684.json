{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer#createComponents(String).mjava","commits":[{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer#createComponents(String,Reader).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer(matchVersion);\n    // run the widthfilter first before bigramming, it sometimes combines characters.\n    TokenStream result = new CJKWidthFilter(source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new CJKBigramFilter(result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion, result, stopwords));\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(String fieldName,\n      Reader reader) {\n    final Tokenizer source = new StandardTokenizer(matchVersion, reader);\n    // run the widthfilter first before bigramming, it sometimes combines characters.\n    TokenStream result = new CJKWidthFilter(source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new CJKBigramFilter(result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion, result, stopwords));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer();\n    // run the widthfilter first before bigramming, it sometimes combines characters.\n    TokenStream result = new CJKWidthFilter(source);\n    result = new LowerCaseFilter(result);\n    result = new CJKBigramFilter(result);\n    return new TokenStreamComponents(source, new StopFilter(result, stopwords));\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer(matchVersion);\n    // run the widthfilter first before bigramming, it sometimes combines characters.\n    TokenStream result = new CJKWidthFilter(source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new CJKBigramFilter(result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion, result, stopwords));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer(matchVersion);\n    // run the widthfilter first before bigramming, it sometimes combines characters.\n    TokenStream result = new CJKWidthFilter(source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new CJKBigramFilter(result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion, result, stopwords));\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer();\n    // run the widthfilter first before bigramming, it sometimes combines characters.\n    TokenStream result = new CJKWidthFilter(source);\n    result = new LowerCaseFilter(result);\n    result = new CJKBigramFilter(result);\n    return new TokenStreamComponents(source, new StopFilter(result, stopwords));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer#createComponents(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer#createComponents(String).mjava","sourceNew":"  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer();\n    // run the widthfilter first before bigramming, it sometimes combines characters.\n    TokenStream result = new CJKWidthFilter(source);\n    result = new LowerCaseFilter(result);\n    result = new CJKBigramFilter(result);\n    return new TokenStreamComponents(source, new StopFilter(result, stopwords));\n  }\n\n","sourceOld":"  @Override\n  protected TokenStreamComponents createComponents(String fieldName) {\n    final Tokenizer source = new StandardTokenizer(matchVersion);\n    // run the widthfilter first before bigramming, it sometimes combines characters.\n    TokenStream result = new CJKWidthFilter(source);\n    result = new LowerCaseFilter(matchVersion, result);\n    result = new CJKBigramFilter(result);\n    return new TokenStreamComponents(source, new StopFilter(matchVersion, result, stopwords));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["379db3ad24c4f0214f30a122265a6d6be003a99d"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}