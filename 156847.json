{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersectionFailure1().mjava","commits":[{"id":"aee30f7d7f332597ff2830aff7397d714ff7be42","date":1460489833,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersectionFailure1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPolygonIntersectionFailure1() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    //[junit4]    > Throwable #1: java.lang.AssertionError: invalid hits for shape=GeoCompositeMembershipShape:\n    //{[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=1.538559019421765, lon=0.0([X=0.03215971057004023, Y=0.0, Z=0.9972473454662941])],\n    //[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])]], internalEdges={2}},\n    //GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])],\n    //[lat=-1.5707963267948966, lon=-2.2780601241431375([X=-3.9697069088211677E-17, Y=-4.644115432258393E-17, Z=-0.997762292022105])],\n    //[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])]], internalEdges={2}},\n    //GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])],\n    //[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])]], internalEdges={0, 2}}]}\n    \n    // Build the polygon\n    //[[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])],\n    //[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])],\n    //[lat=-1.5707963267948966, lon=-2.2780601241431375([X=-3.9697069088211677E-17, Y=-4.644115432258393E-17, Z=-0.997762292022105])],\n    //[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=1.538559019421765, lon=0.0([X=0.03215971057004023, Y=0.0, Z=0.9972473454662941])]]\n    List<GeoPoint> polyPoints = new ArrayList<>();\n    polyPoints.add(new GeoPoint(pm, -0.5516194571595735, 0.0));\n    polyPoints.add(new GeoPoint(pm, 0.0, -3.141592653589793));\n    polyPoints.add(new GeoPoint(pm, -1.5707963267948966, -2.2780601241431375));\n    polyPoints.add(new GeoPoint(pm, 0.2669499069140678, -0.31249902828113546));\n    polyPoints.add(new GeoPoint(pm, 1.538559019421765, 0.0));\n    // Make sure we catch the backtrack\n    boolean backtracks = false;\n    try {\n      GeoPolygonFactory.makeGeoPolygon(pm, polyPoints, 4, null);\n    } catch (IllegalArgumentException e) {\n      backtracks = true;\n    }\n    assertTrue(backtracks);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0a9b63eb861882e7ed417be6aaf858910cad7e0","date":1460530285,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersectionFailure1().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersectionFailure1().mjava","sourceNew":"  @Test\n  public void testPolygonIntersectionFailure1() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    //[junit4]    > Throwable #1: java.lang.AssertionError: invalid hits for shape=GeoCompositeMembershipShape:\n    //{[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=1.538559019421765, lon=0.0([X=0.03215971057004023, Y=0.0, Z=0.9972473454662941])],\n    //[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])]], internalEdges={2}},\n    //GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])],\n    //[lat=-1.5707963267948966, lon=-2.2780601241431375([X=-3.9697069088211677E-17, Y=-4.644115432258393E-17, Z=-0.997762292022105])],\n    //[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])]], internalEdges={2}},\n    //GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])],\n    //[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])]], internalEdges={0, 2}}]}\n    \n    // Build the polygon\n    //[[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])],\n    //[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])],\n    //[lat=-1.5707963267948966, lon=-2.2780601241431375([X=-3.9697069088211677E-17, Y=-4.644115432258393E-17, Z=-0.997762292022105])],\n    //[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=1.538559019421765, lon=0.0([X=0.03215971057004023, Y=0.0, Z=0.9972473454662941])]]\n    List<GeoPoint> polyPoints = new ArrayList<>();\n    polyPoints.add(new GeoPoint(pm, -0.5516194571595735, 0.0));\n    polyPoints.add(new GeoPoint(pm, 0.0, -3.141592653589793));\n    polyPoints.add(new GeoPoint(pm, -1.5707963267948966, -2.2780601241431375));\n    polyPoints.add(new GeoPoint(pm, 0.2669499069140678, -0.31249902828113546));\n    polyPoints.add(new GeoPoint(pm, 1.538559019421765, 0.0));\n    // Make sure we catch the backtrack\n    boolean backtracks = false;\n    try {\n      GeoPolygonFactory.makeGeoPolygon(pm, polyPoints, 4, null);\n    } catch (IllegalArgumentException e) {\n      backtracks = true;\n    }\n    assertTrue(backtracks);\n    \n    // Now make sure a legit poly with coplanar points works.\n    polyPoints.clear();\n    polyPoints.add(new GeoPoint(pm, -0.5516194571595735, 0.0));\n    polyPoints.add(new GeoPoint(pm, -1.5707963267948966, -2.2780601241431375));\n    polyPoints.add(new GeoPoint(pm, 0.2669499069140678, -0.31249902828113546));\n    polyPoints.add(new GeoPoint(pm, 1.538559019421765, 0.0));\n    GeoPolygonFactory.makeGeoPolygon(pm, polyPoints, 3, null);\n    \n  }\n\n","sourceOld":"  @Test\n  public void testPolygonIntersectionFailure1() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    //[junit4]    > Throwable #1: java.lang.AssertionError: invalid hits for shape=GeoCompositeMembershipShape:\n    //{[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=1.538559019421765, lon=0.0([X=0.03215971057004023, Y=0.0, Z=0.9972473454662941])],\n    //[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])]], internalEdges={2}},\n    //GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])],\n    //[lat=-1.5707963267948966, lon=-2.2780601241431375([X=-3.9697069088211677E-17, Y=-4.644115432258393E-17, Z=-0.997762292022105])],\n    //[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])]], internalEdges={2}},\n    //GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])],\n    //[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])]], internalEdges={0, 2}}]}\n    \n    // Build the polygon\n    //[[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])],\n    //[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])],\n    //[lat=-1.5707963267948966, lon=-2.2780601241431375([X=-3.9697069088211677E-17, Y=-4.644115432258393E-17, Z=-0.997762292022105])],\n    //[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=1.538559019421765, lon=0.0([X=0.03215971057004023, Y=0.0, Z=0.9972473454662941])]]\n    List<GeoPoint> polyPoints = new ArrayList<>();\n    polyPoints.add(new GeoPoint(pm, -0.5516194571595735, 0.0));\n    polyPoints.add(new GeoPoint(pm, 0.0, -3.141592653589793));\n    polyPoints.add(new GeoPoint(pm, -1.5707963267948966, -2.2780601241431375));\n    polyPoints.add(new GeoPoint(pm, 0.2669499069140678, -0.31249902828113546));\n    polyPoints.add(new GeoPoint(pm, 1.538559019421765, 0.0));\n    // Make sure we catch the backtrack\n    boolean backtracks = false;\n    try {\n      GeoPolygonFactory.makeGeoPolygon(pm, polyPoints, 4, null);\n    } catch (IllegalArgumentException e) {\n      backtracks = true;\n    }\n    assertTrue(backtracks);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"414425421ced68c7064f08c9da6a2c95399226d9","date":1460921822,"type":4,"author":"Karl Wright","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonIntersectionFailure1().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testPolygonIntersectionFailure1() {\n    final PlanetModel pm = PlanetModel.WGS84;\n    //[junit4]    > Throwable #1: java.lang.AssertionError: invalid hits for shape=GeoCompositeMembershipShape:\n    //{[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=1.538559019421765, lon=0.0([X=0.03215971057004023, Y=0.0, Z=0.9972473454662941])],\n    //[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])]], internalEdges={2}},\n    //GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])],\n    //[lat=-1.5707963267948966, lon=-2.2780601241431375([X=-3.9697069088211677E-17, Y=-4.644115432258393E-17, Z=-0.997762292022105])],\n    //[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])]], internalEdges={2}},\n    //GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    //[[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])],\n    //[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])]], internalEdges={0, 2}}]}\n    \n    // Build the polygon\n    //[[lat=-0.5516194571595735, lon=0.0([X=0.8518418310766115, Y=0.0, Z=-0.5241686363384119])],\n    //[lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])],\n    //[lat=-1.5707963267948966, lon=-2.2780601241431375([X=-3.9697069088211677E-17, Y=-4.644115432258393E-17, Z=-0.997762292022105])],\n    //[lat=0.2669499069140678, lon=-0.31249902828113546([X=0.9186752334433793, Y=-0.2968103450748192, Z=0.2640238502385029])],\n    //[lat=1.538559019421765, lon=0.0([X=0.03215971057004023, Y=0.0, Z=0.9972473454662941])]]\n    List<GeoPoint> polyPoints = new ArrayList<>();\n    polyPoints.add(new GeoPoint(pm, -0.5516194571595735, 0.0));\n    polyPoints.add(new GeoPoint(pm, 0.0, -3.141592653589793));\n    polyPoints.add(new GeoPoint(pm, -1.5707963267948966, -2.2780601241431375));\n    polyPoints.add(new GeoPoint(pm, 0.2669499069140678, -0.31249902828113546));\n    polyPoints.add(new GeoPoint(pm, 1.538559019421765, 0.0));\n    // Make sure we catch the backtrack\n    boolean backtracks = false;\n    try {\n      GeoPolygonFactory.makeGeoPolygon(pm, polyPoints, 4, null);\n    } catch (IllegalArgumentException e) {\n      backtracks = true;\n    }\n    assertTrue(backtracks);\n    \n    // Now make sure a legit poly with coplanar points works.\n    polyPoints.clear();\n    polyPoints.add(new GeoPoint(pm, -0.5516194571595735, 0.0));\n    polyPoints.add(new GeoPoint(pm, -1.5707963267948966, -2.2780601241431375));\n    polyPoints.add(new GeoPoint(pm, 0.2669499069140678, -0.31249902828113546));\n    polyPoints.add(new GeoPoint(pm, 1.538559019421765, 0.0));\n    GeoPolygonFactory.makeGeoPolygon(pm, polyPoints, 3, null);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"414425421ced68c7064f08c9da6a2c95399226d9":["d0a9b63eb861882e7ed417be6aaf858910cad7e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0a9b63eb861882e7ed417be6aaf858910cad7e0":["aee30f7d7f332597ff2830aff7397d714ff7be42"],"aee30f7d7f332597ff2830aff7397d714ff7be42":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["414425421ced68c7064f08c9da6a2c95399226d9"]},"commit2Childs":{"414425421ced68c7064f08c9da6a2c95399226d9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aee30f7d7f332597ff2830aff7397d714ff7be42"],"d0a9b63eb861882e7ed417be6aaf858910cad7e0":["414425421ced68c7064f08c9da6a2c95399226d9"],"aee30f7d7f332597ff2830aff7397d714ff7be42":["d0a9b63eb861882e7ed417be6aaf858910cad7e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}