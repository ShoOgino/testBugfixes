{"path":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestOtherFiles().mjava","commits":[{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void xxxtestOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = new FSDirectory(indexDir, null);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = new FSDirectory(indexDir, null);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = new FSDirectory(indexDir, null);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void xxxtestOtherFiles() throws Throwable {\n    File indexDir = new File(System.getProperty(\"tempDir\"), \"otherfiles\");\n    Directory dir = new FSDirectory(indexDir, null);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3215ae1377fc1ca1790921d75dd39cb764743b85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c482d1e63332617181729a225b215c452d8a79"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"09c482d1e63332617181729a225b215c452d8a79":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}