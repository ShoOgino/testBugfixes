{"path":"lucene/core/src/java/org/apache/lucene/document/StoredDocument#asIndexable().mjava","commits":[{"id":"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a","date":1341524239,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/StoredDocument#asIndexable().mjava","pathOld":"/dev/null","sourceNew":"  public Document asIndexable() {\n    Document doc = new Document();\n    \n    for (StorableField field : fields) {\n      Field newField = new Field(field.name(), field.fieldType());\n      \n      newField.fieldsData = field.stringValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.numericValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.binaryValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.readerValue();\n      \n      doc.add(newField);\n    }\n    \n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","date":1341839195,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/StoredDocument#asIndexable().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/StoredDocument#asIndexable().mjava","sourceNew":"  public Document asIndexable() {\n    Document doc = new Document();\n    \n    for (StorableField field : fields) {\n      Field newField = new Field(field.name(), (FieldType) field.fieldType());\n      \n      newField.fieldsData = field.stringValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.numericValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.binaryValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.readerValue();\n      \n      doc.add(newField);\n    }\n    \n    return doc;\n  }\n\n","sourceOld":"  public Document asIndexable() {\n    Document doc = new Document();\n    \n    for (StorableField field : fields) {\n      Field newField = new Field(field.name(), field.fieldType());\n      \n      newField.fieldsData = field.stringValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.numericValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.binaryValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.readerValue();\n      \n      doc.add(newField);\n    }\n    \n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409324b31a1419d7c05a38211168cf317e39be77","date":1344866765,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Document#Document(StoredDocument).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/StoredDocument#asIndexable().mjava","sourceNew":"  /**\n  * Creates a Document from StoredDocument so it that can be used e.g. for another\n  * round of indexing.\n  *\n  * @return a new instance of Document representation of this StoredDocument\n  */\n  public Document(StoredDocument storedDoc) {\n    for (StorableField field : storedDoc.getFields()) {\n      Field newField = new Field(field.name(), (FieldType) field.fieldType());\n     \n      newField.fieldsData = field.stringValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.numericValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.binaryValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.readerValue();\n     \n      add(newField);\n    }\n }\n\n","sourceOld":"  public Document asIndexable() {\n    Document doc = new Document();\n    \n    for (StorableField field : fields) {\n      Field newField = new Field(field.name(), (FieldType) field.fieldType());\n      \n      newField.fieldsData = field.stringValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.numericValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.binaryValue();\n      if (newField.fieldsData == null) \n        newField.fieldsData = field.readerValue();\n      \n      doc.add(newField);\n    }\n    \n    return doc;\n  }\n\n","bugFix":null,"bugIntro":["ca4cbe98ea0b116331982aa8fa63384da90b2b2c"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"409324b31a1419d7c05a38211168cf317e39be77":["8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"409324b31a1419d7c05a38211168cf317e39be77":[],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["409324b31a1419d7c05a38211168cf317e39be77"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["409324b31a1419d7c05a38211168cf317e39be77","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}