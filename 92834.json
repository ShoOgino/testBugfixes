{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","commits":[{"id":"441c188ff9fd7da36e0e4d8a9b51cebe63b31192","date":1384814749,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacets#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, new FacetsConfig(), c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, new FacetsConfig(), c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18085993942ab483c997b0cff727b33c9396f927","date":1384881194,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets;\n    if (random().nextBoolean()) {\n      facets = new FastTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n    } else {\n      OrdinalsReader ordsReader = new DocValuesOrdinalsReader();\n      if (random().nextBoolean()) {\n        ordsReader = new CachedOrdinalsReader(ordsReader);\n      }\n      facets = new TaxonomyFacetCounts(ordsReader, taxoReader, new FacetsConfig(), c);\n    }\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7554009c97f9365492660c1df175b6349f7ec05c","date":1384886154,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(doc);\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"006838107b0cd2051371f3470740d23ec91b1886","date":1384950816,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    taxoDir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce7aff7772c162c15d520e31af46c555f60d5c3b","date":1385135519,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae75def1e2525383b6e1397ed97c44387da9941c","date":1385249238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, new FacetsConfig());\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(builder.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f01616d06510fc630b6ef0ec324bdebc2fc49b3c","date":1385331328,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"a (3)\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"b (2)\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"c (1)\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testSparseFacets().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetCounts#testSparseFacets().mjava","sourceNew":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<FacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  // LUCENE-5333\n  public void testSparseFacets() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo2\"));\n    doc.add(new FacetField(\"b\", \"bar1\"));\n    writer.addDocument(config.build(doc));\n\n    if (random().nextBoolean()) {\n      writer.commit();\n    }\n\n    doc = new Document();\n    doc.add(new FacetField(\"a\", \"foo3\"));\n    doc.add(new FacetField(\"b\", \"bar2\"));\n    doc.add(new FacetField(\"c\", \"baz1\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleFacetsCollector c = new SimpleFacetsCollector();\n    searcher.search(new MatchAllDocsQuery(), c);    \n\n    Facets facets = getTaxonomyFacetCounts(taxoReader, new FacetsConfig(), c);\n\n    // Ask for top 10 labels for any dims that have counts:\n    List<SimpleFacetResult> results = facets.getAllDims(10);\n\n    assertEquals(3, results.size());\n    assertEquals(\"value=3 childCount=3\\n  foo1 (1)\\n  foo2 (1)\\n  foo3 (1)\\n\", results.get(0).toString());\n    assertEquals(\"value=2 childCount=2\\n  bar1 (1)\\n  bar2 (1)\\n\", results.get(1).toString());\n    assertEquals(\"value=1 childCount=1\\n  baz1 (1)\\n\", results.get(2).toString());\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"18085993942ab483c997b0cff727b33c9396f927":["441c188ff9fd7da36e0e4d8a9b51cebe63b31192"],"7554009c97f9365492660c1df175b6349f7ec05c":["18085993942ab483c997b0cff727b33c9396f927"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"ce7aff7772c162c15d520e31af46c555f60d5c3b":["006838107b0cd2051371f3470740d23ec91b1886"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["ae75def1e2525383b6e1397ed97c44387da9941c"],"006838107b0cd2051371f3470740d23ec91b1886":["7554009c97f9365492660c1df175b6349f7ec05c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae75def1e2525383b6e1397ed97c44387da9941c":["ce7aff7772c162c15d520e31af46c555f60d5c3b"],"441c188ff9fd7da36e0e4d8a9b51cebe63b31192":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"18085993942ab483c997b0cff727b33c9396f927":["7554009c97f9365492660c1df175b6349f7ec05c"],"7554009c97f9365492660c1df175b6349f7ec05c":["006838107b0cd2051371f3470740d23ec91b1886"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","441c188ff9fd7da36e0e4d8a9b51cebe63b31192"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"ce7aff7772c162c15d520e31af46c555f60d5c3b":["ae75def1e2525383b6e1397ed97c44387da9941c"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["21d36d0db865f7b84026b447bec653469a6e66df"],"006838107b0cd2051371f3470740d23ec91b1886":["ce7aff7772c162c15d520e31af46c555f60d5c3b"],"441c188ff9fd7da36e0e4d8a9b51cebe63b31192":["18085993942ab483c997b0cff727b33c9396f927"],"ae75def1e2525383b6e1397ed97c44387da9941c":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}