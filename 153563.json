{"path":"src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#init(PluginInfo).mjava","commits":[{"id":"6a7153c5cd4b2cd8054f8e46101442030d8a3c37","date":1253512682,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#init(PluginInfo).mjava","pathOld":"/dev/null","sourceNew":"  public void init(PluginInfo info) {\n    ArrayList<UpdateRequestProcessorFactory> list = new ArrayList<UpdateRequestProcessorFactory>();\n    for (PluginInfo child : info.children) {\n      if(\"processor\".equals(child.type)){\n        UpdateRequestProcessorFactory factory = solrCore.createInitInstance(child, UpdateRequestProcessorFactory.class, null,null);\n        list.add(factory);\n      }\n    }\n    if(list.isEmpty()){\n      throw new RuntimeException( \"updateRequestProcessorChain require at least one processor\");\n    }\n    chain = list.toArray(new UpdateRequestProcessorFactory[list.size()]); \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4a86efd508ea6ff321e7b4d46e74a74f48cfcb8","date":1253594290,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#init(PluginInfo).mjava","pathOld":"src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#init(PluginInfo).mjava","sourceNew":"  public void init(PluginInfo info) {\n    List<UpdateRequestProcessorFactory> list = solrCore.initPlugins(info.getChildren(\"processor\"),UpdateRequestProcessorFactory.class,null);\n    if(list.isEmpty()){\n      throw new RuntimeException( \"updateRequestProcessorChain require at least one processor\");\n    }\n    chain = list.toArray(new UpdateRequestProcessorFactory[list.size()]); \n  }\n\n","sourceOld":"  public void init(PluginInfo info) {\n    ArrayList<UpdateRequestProcessorFactory> list = new ArrayList<UpdateRequestProcessorFactory>();\n    for (PluginInfo child : info.children) {\n      if(\"processor\".equals(child.type)){\n        UpdateRequestProcessorFactory factory = solrCore.createInitInstance(child, UpdateRequestProcessorFactory.class, null,null);\n        list.add(factory);\n      }\n    }\n    if(list.isEmpty()){\n      throw new RuntimeException( \"updateRequestProcessorChain require at least one processor\");\n    }\n    chain = list.toArray(new UpdateRequestProcessorFactory[list.size()]); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#init(PluginInfo).mjava","pathOld":"src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#init(PluginInfo).mjava","sourceNew":"  public void init(PluginInfo info) {\n    List<UpdateRequestProcessorFactory> list = solrCore.initPlugins(info.getChildren(\"processor\"),UpdateRequestProcessorFactory.class,null);\n    if(list.isEmpty()){\n      throw new RuntimeException( \"updateRequestProcessorChain require at least one processor\");\n    }\n    chain = list.toArray(new UpdateRequestProcessorFactory[list.size()]); \n  }\n\n","sourceOld":"  public void init(PluginInfo info) {\n    List<UpdateRequestProcessorFactory> list = solrCore.initPlugins(info.getChildren(\"processor\"),UpdateRequestProcessorFactory.class,null);\n    if(list.isEmpty()){\n      throw new RuntimeException( \"updateRequestProcessorChain require at least one processor\");\n    }\n    chain = list.toArray(new UpdateRequestProcessorFactory[list.size()]); \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a7153c5cd4b2cd8054f8e46101442030d8a3c37":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"f4a86efd508ea6ff321e7b4d46e74a74f48cfcb8":["6a7153c5cd4b2cd8054f8e46101442030d8a3c37"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["f4a86efd508ea6ff321e7b4d46e74a74f48cfcb8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6a7153c5cd4b2cd8054f8e46101442030d8a3c37":["f4a86efd508ea6ff321e7b4d46e74a74f48cfcb8"],"f4a86efd508ea6ff321e7b4d46e74a74f48cfcb8":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["6a7153c5cd4b2cd8054f8e46101442030d8a3c37"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}