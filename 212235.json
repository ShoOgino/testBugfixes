{"path":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#testDefaultFieldValues().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#testDefaultFieldValues().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testDefaultFieldValues().mjava","sourceNew":"  @Test\n  public void testDefaultFieldValues() {\n    clearIndex();\n    lrf.args.put(CommonParams.VERSION,\"2.2\");\n    assertU(adoc(\"id\",  \"4055\",\n                 \"subject\", \"Hoss the Hoss man Hostetter\"));\n    assertU(adoc(\"id\",  \"4056\",\n                 \"intDefault\", \"4\",\n                 \"subject\", \"Some Other Guy\"));\n    assertU(adoc(\"id\",  \"4057\",\n                 \"multiDefault\", \"a\",\n                 \"multiDefault\", \"b\",\n                 \"subject\", \"The Dude\"));\n    assertU(commit());\n\n    assertQ(\"everthing should have recent timestamp\",\n            req(\"timestamp:[NOW-10MINUTES TO NOW]\")\n            ,\"*[count(//doc)=3]\"\n            ,\"//date[@name='timestamp']\"\n            );\n    \n    assertQ(\"2 docs should have the default for multiDefault\",\n            req(\"multiDefault:muLti-Default\")\n            ,\"*[count(//doc)=2]\"\n            ,\"//arr[@name='multiDefault']\"\n            );\n    assertQ(\"1 doc should have it's explicit multiDefault\",\n            req(\"multiDefault:a\")\n            ,\"*[count(//doc)=1]\"\n            );\n\n    assertQ(\"2 docs should have the default for intDefault\",\n            req(\"intDefault:42\")\n            ,\"*[count(//doc)=2]\"\n            );\n    assertQ(\"1 doc should have it's explicit intDefault\",\n            req(\"intDefault:[3 TO 5]\")\n            ,\"*[count(//doc)=1]\"\n            );\n    \n  }\n\n","sourceOld":"  @Test\n  public void testDefaultFieldValues() {\n    clearIndex();\n    lrf.args.put(CommonParams.VERSION,\"2.2\");\n    assertU(adoc(\"id\",  \"4055\",\n                 \"subject\", \"Hoss the Hoss man Hostetter\"));\n    assertU(adoc(\"id\",  \"4056\",\n                 \"intDefault\", \"4\",\n                 \"subject\", \"Some Other Guy\"));\n    assertU(adoc(\"id\",  \"4057\",\n                 \"multiDefault\", \"a\",\n                 \"multiDefault\", \"b\",\n                 \"subject\", \"The Dude\"));\n    assertU(commit());\n\n    assertQ(\"everthing should have recent timestamp\",\n            req(\"timestamp:[NOW-10MINUTES TO NOW]\")\n            ,\"*[count(//doc)=3]\"\n            ,\"//date[@name='timestamp']\"\n            );\n    \n    assertQ(\"2 docs should have the default for multiDefault\",\n            req(\"multiDefault:muLti-Default\")\n            ,\"*[count(//doc)=2]\"\n            ,\"//arr[@name='multiDefault']\"\n            );\n    assertQ(\"1 doc should have it's explicit multiDefault\",\n            req(\"multiDefault:a\")\n            ,\"*[count(//doc)=1]\"\n            );\n\n    assertQ(\"2 docs should have the default for intDefault\",\n            req(\"intDefault:42\")\n            ,\"*[count(//doc)=2]\"\n            );\n    assertQ(\"1 doc should have it's explicit intDefault\",\n            req(\"intDefault:[3 TO 5]\")\n            ,\"*[count(//doc)=1]\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#testDefaultFieldValues().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testDefaultFieldValues().mjava","sourceNew":"  @Test\n  public void testDefaultFieldValues() {\n    clearIndex();\n    lrf.args.put(CommonParams.VERSION,\"2.2\");\n    assertU(adoc(\"id\",  \"4055\",\n                 \"subject\", \"Hoss the Hoss man Hostetter\"));\n    assertU(adoc(\"id\",  \"4056\",\n                 \"intDefault\", \"4\",\n                 \"subject\", \"Some Other Guy\"));\n    assertU(adoc(\"id\",  \"4057\",\n                 \"multiDefault\", \"a\",\n                 \"multiDefault\", \"b\",\n                 \"subject\", \"The Dude\"));\n    assertU(commit());\n\n    assertQ(\"everthing should have recent timestamp\",\n            req(\"timestamp:[NOW-10MINUTES TO NOW]\")\n            ,\"*[count(//doc)=3]\"\n            ,\"//date[@name='timestamp']\"\n            );\n    \n    assertQ(\"2 docs should have the default for multiDefault\",\n            req(\"multiDefault:muLti-Default\")\n            ,\"*[count(//doc)=2]\"\n            ,\"//arr[@name='multiDefault']\"\n            );\n    assertQ(\"1 doc should have it's explicit multiDefault\",\n            req(\"multiDefault:a\")\n            ,\"*[count(//doc)=1]\"\n            );\n\n    assertQ(\"2 docs should have the default for intDefault\",\n            req(\"intDefault:42\")\n            ,\"*[count(//doc)=2]\"\n            );\n    assertQ(\"1 doc should have it's explicit intDefault\",\n            req(\"intDefault:[3 TO 5]\")\n            ,\"*[count(//doc)=1]\"\n            );\n    \n  }\n\n","sourceOld":"  @Test\n  public void testDefaultFieldValues() {\n    clearIndex();\n    lrf.args.put(CommonParams.VERSION,\"2.2\");\n    assertU(adoc(\"id\",  \"4055\",\n                 \"subject\", \"Hoss the Hoss man Hostetter\"));\n    assertU(adoc(\"id\",  \"4056\",\n                 \"intDefault\", \"4\",\n                 \"subject\", \"Some Other Guy\"));\n    assertU(adoc(\"id\",  \"4057\",\n                 \"multiDefault\", \"a\",\n                 \"multiDefault\", \"b\",\n                 \"subject\", \"The Dude\"));\n    assertU(commit());\n\n    assertQ(\"everthing should have recent timestamp\",\n            req(\"timestamp:[NOW-10MINUTES TO NOW]\")\n            ,\"*[count(//doc)=3]\"\n            ,\"//date[@name='timestamp']\"\n            );\n    \n    assertQ(\"2 docs should have the default for multiDefault\",\n            req(\"multiDefault:muLti-Default\")\n            ,\"*[count(//doc)=2]\"\n            ,\"//arr[@name='multiDefault']\"\n            );\n    assertQ(\"1 doc should have it's explicit multiDefault\",\n            req(\"multiDefault:a\")\n            ,\"*[count(//doc)=1]\"\n            );\n\n    assertQ(\"2 docs should have the default for intDefault\",\n            req(\"intDefault:42\")\n            ,\"*[count(//doc)=2]\"\n            );\n    assertQ(\"1 doc should have it's explicit intDefault\",\n            req(\"intDefault:[3 TO 5]\")\n            ,\"*[count(//doc)=1]\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#testDefaultFieldValues().mjava","pathOld":"solr/src/test/org/apache/solr/BasicFunctionalityTest#testDefaultFieldValues().mjava","sourceNew":"  @Test\n  public void testDefaultFieldValues() {\n    clearIndex();\n    lrf.args.put(CommonParams.VERSION,\"2.2\");\n    assertU(adoc(\"id\",  \"4055\",\n                 \"subject\", \"Hoss the Hoss man Hostetter\"));\n    assertU(adoc(\"id\",  \"4056\",\n                 \"intDefault\", \"4\",\n                 \"subject\", \"Some Other Guy\"));\n    assertU(adoc(\"id\",  \"4057\",\n                 \"multiDefault\", \"a\",\n                 \"multiDefault\", \"b\",\n                 \"subject\", \"The Dude\"));\n    assertU(commit());\n\n    assertQ(\"everthing should have recent timestamp\",\n            req(\"timestamp:[NOW-10MINUTES TO NOW]\")\n            ,\"*[count(//doc)=3]\"\n            ,\"//date[@name='timestamp']\"\n            );\n    \n    assertQ(\"2 docs should have the default for multiDefault\",\n            req(\"multiDefault:muLti-Default\")\n            ,\"*[count(//doc)=2]\"\n            ,\"//arr[@name='multiDefault']\"\n            );\n    assertQ(\"1 doc should have it's explicit multiDefault\",\n            req(\"multiDefault:a\")\n            ,\"*[count(//doc)=1]\"\n            );\n\n    assertQ(\"2 docs should have the default for intDefault\",\n            req(\"intDefault:42\")\n            ,\"*[count(//doc)=2]\"\n            );\n    assertQ(\"1 doc should have it's explicit intDefault\",\n            req(\"intDefault:[3 TO 5]\")\n            ,\"*[count(//doc)=1]\"\n            );\n    \n  }\n\n","sourceOld":"  @Test\n  public void testDefaultFieldValues() {\n    clearIndex();\n    lrf.args.put(CommonParams.VERSION,\"2.2\");\n    assertU(adoc(\"id\",  \"4055\",\n                 \"subject\", \"Hoss the Hoss man Hostetter\"));\n    assertU(adoc(\"id\",  \"4056\",\n                 \"intDefault\", \"4\",\n                 \"subject\", \"Some Other Guy\"));\n    assertU(adoc(\"id\",  \"4057\",\n                 \"multiDefault\", \"a\",\n                 \"multiDefault\", \"b\",\n                 \"subject\", \"The Dude\"));\n    assertU(commit());\n\n    assertQ(\"everthing should have recent timestamp\",\n            req(\"timestamp:[NOW-10MINUTES TO NOW]\")\n            ,\"*[count(//doc)=3]\"\n            ,\"//date[@name='timestamp']\"\n            );\n    \n    assertQ(\"2 docs should have the default for multiDefault\",\n            req(\"multiDefault:muLti-Default\")\n            ,\"*[count(//doc)=2]\"\n            ,\"//arr[@name='multiDefault']\"\n            );\n    assertQ(\"1 doc should have it's explicit multiDefault\",\n            req(\"multiDefault:a\")\n            ,\"*[count(//doc)=1]\"\n            );\n\n    assertQ(\"2 docs should have the default for intDefault\",\n            req(\"intDefault:42\")\n            ,\"*[count(//doc)=2]\"\n            );\n    assertQ(\"1 doc should have it's explicit intDefault\",\n            req(\"intDefault:[3 TO 5]\")\n            ,\"*[count(//doc)=1]\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#testDefaultFieldValues().mjava","pathOld":"solr/core/src/test/org/apache/solr/BasicFunctionalityTest#testDefaultFieldValues().mjava","sourceNew":"  @Test\n  public void testDefaultFieldValues() {\n    clearIndex();\n    lrf.args.put(CommonParams.VERSION,\"2.2\");\n    assertU(adoc(\"id\",  \"4055\",\n                 \"subject\", \"Hoss the Hoss man Hostetter\"));\n    assertU(adoc(\"id\",  \"4056\",\n                 \"intDefault\", \"4\",\n                 \"subject\", \"Some Other Guy\"));\n    assertU(adoc(\"id\",  \"4057\",\n                 \"multiDefault\", \"a\",\n                 \"multiDefault\", \"b\",\n                 \"subject\", \"The Dude\"));\n    assertU(commit());\n\n    assertQ(\"everthing should have recent timestamp\",\n            req(\"timestamp:[NOW-10MINUTES TO NOW]\")\n            ,\"*[count(//doc)=3]\"\n            ,\"//date[@name='timestamp']\"\n            );\n    \n    assertQ(\"2 docs should have the default for multiDefault\",\n            req(\"multiDefault:muLti-Default\")\n            ,\"*[count(//doc)=2]\"\n            ,\"//arr[@name='multiDefault']\"\n            );\n    assertQ(\"1 doc should have its explicit multiDefault\",\n            req(\"multiDefault:a\")\n            ,\"*[count(//doc)=1]\"\n            );\n\n    assertQ(\"2 docs should have the default for intDefault\",\n            req(\"intDefault:42\")\n            ,\"*[count(//doc)=2]\"\n            );\n    assertQ(\"1 doc should have its explicit intDefault\",\n            req(\"intDefault:[3 TO 5]\")\n            ,\"*[count(//doc)=1]\"\n            );\n    \n  }\n\n","sourceOld":"  @Test\n  public void testDefaultFieldValues() {\n    clearIndex();\n    lrf.args.put(CommonParams.VERSION,\"2.2\");\n    assertU(adoc(\"id\",  \"4055\",\n                 \"subject\", \"Hoss the Hoss man Hostetter\"));\n    assertU(adoc(\"id\",  \"4056\",\n                 \"intDefault\", \"4\",\n                 \"subject\", \"Some Other Guy\"));\n    assertU(adoc(\"id\",  \"4057\",\n                 \"multiDefault\", \"a\",\n                 \"multiDefault\", \"b\",\n                 \"subject\", \"The Dude\"));\n    assertU(commit());\n\n    assertQ(\"everthing should have recent timestamp\",\n            req(\"timestamp:[NOW-10MINUTES TO NOW]\")\n            ,\"*[count(//doc)=3]\"\n            ,\"//date[@name='timestamp']\"\n            );\n    \n    assertQ(\"2 docs should have the default for multiDefault\",\n            req(\"multiDefault:muLti-Default\")\n            ,\"*[count(//doc)=2]\"\n            ,\"//arr[@name='multiDefault']\"\n            );\n    assertQ(\"1 doc should have it's explicit multiDefault\",\n            req(\"multiDefault:a\")\n            ,\"*[count(//doc)=1]\"\n            );\n\n    assertQ(\"2 docs should have the default for intDefault\",\n            req(\"intDefault:42\")\n            ,\"*[count(//doc)=2]\"\n            );\n    assertQ(\"1 doc should have it's explicit intDefault\",\n            req(\"intDefault:[3 TO 5]\")\n            ,\"*[count(//doc)=1]\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}