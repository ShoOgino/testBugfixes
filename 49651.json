{"path":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/dict/UserDictionaryTest#testLookup().mjava","commits":[{"id":"98d45c1ff2c99694b6de2201175f9b8b8b27b597","date":1332757908,"type":1,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/dict/UserDictionaryTest#testLookup().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/dict/UserDictionaryTest#testLookup().mjava","sourceNew":"  @Test\n  public void testLookup() throws IOException {\n    UserDictionary dictionary = TestJapaneseTokenizer.readDict();\n    String s = \"関西国際空港に行った\";\n    int[][] dictionaryEntryResult = dictionary.lookup(s.toCharArray(), 0, s.length());\n    // Length should be three 関西, 国際, 空港\n    assertEquals(3, dictionaryEntryResult.length);\n    \n    // Test positions\n    assertEquals(0, dictionaryEntryResult[0][1]); // index of 関西\n    assertEquals(2, dictionaryEntryResult[1][1]); // index of 国際\n    assertEquals(4, dictionaryEntryResult[2][1]); // index of 空港\n    \n    // Test lengths\n    assertEquals(2, dictionaryEntryResult[0][2]); // length of 関西\n    assertEquals(2, dictionaryEntryResult[1][2]); // length of 国際\n    assertEquals(2, dictionaryEntryResult[2][2]); // length of 空港\n    \n    s = \"関西国際空港と関西国際空港に行った\";\n    int[][] dictionaryEntryResult2 = dictionary.lookup(s.toCharArray(), 0, s.length());\n    // Length should be six \n    assertEquals(6, dictionaryEntryResult2.length);\n  }\n\n","sourceOld":"  @Test\n  public void testLookup() throws IOException {\n    UserDictionary dictionary = TestKuromojiTokenizer.readDict();\n    String s = \"関西国際空港に行った\";\n    int[][] dictionaryEntryResult = dictionary.lookup(s.toCharArray(), 0, s.length());\n    // Length should be three 関西, 国際, 空港\n    assertEquals(3, dictionaryEntryResult.length);\n    \n    // Test positions\n    assertEquals(0, dictionaryEntryResult[0][1]); // index of 関西\n    assertEquals(2, dictionaryEntryResult[1][1]); // index of 国際\n    assertEquals(4, dictionaryEntryResult[2][1]); // index of 空港\n    \n    // Test lengths\n    assertEquals(2, dictionaryEntryResult[0][2]); // length of 関西\n    assertEquals(2, dictionaryEntryResult[1][2]); // length of 国際\n    assertEquals(2, dictionaryEntryResult[2][2]); // length of 空港\n    \n    s = \"関西国際空港と関西国際空港に行った\";\n    int[][] dictionaryEntryResult2 = dictionary.lookup(s.toCharArray(), 0, s.length());\n    // Length should be six \n    assertEquals(6, dictionaryEntryResult2.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/dict/UserDictionaryTest#testLookup().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/dict/UserDictionaryTest#testLookup().mjava","sourceNew":"  @Test\n  public void testLookup() throws IOException {\n    UserDictionary dictionary = TestJapaneseTokenizer.readDict();\n    String s = \"関西国際空港に行った\";\n    int[][] dictionaryEntryResult = dictionary.lookup(s.toCharArray(), 0, s.length());\n    // Length should be three 関西, 国際, 空港\n    assertEquals(3, dictionaryEntryResult.length);\n    \n    // Test positions\n    assertEquals(0, dictionaryEntryResult[0][1]); // index of 関西\n    assertEquals(2, dictionaryEntryResult[1][1]); // index of 国際\n    assertEquals(4, dictionaryEntryResult[2][1]); // index of 空港\n    \n    // Test lengths\n    assertEquals(2, dictionaryEntryResult[0][2]); // length of 関西\n    assertEquals(2, dictionaryEntryResult[1][2]); // length of 国際\n    assertEquals(2, dictionaryEntryResult[2][2]); // length of 空港\n    \n    s = \"関西国際空港と関西国際空港に行った\";\n    int[][] dictionaryEntryResult2 = dictionary.lookup(s.toCharArray(), 0, s.length());\n    // Length should be six \n    assertEquals(6, dictionaryEntryResult2.length);\n  }\n\n","sourceOld":"  @Test\n  public void testLookup() throws IOException {\n    UserDictionary dictionary = TestJapaneseTokenizer.readDict();\n    String s = \"関西国際空港に行った\";\n    int[][] dictionaryEntryResult = dictionary.lookup(s.toCharArray(), 0, s.length());\n    // Length should be three 関西, 国際, 空港\n    assertEquals(3, dictionaryEntryResult.length);\n    \n    // Test positions\n    assertEquals(0, dictionaryEntryResult[0][1]); // index of 関西\n    assertEquals(2, dictionaryEntryResult[1][1]); // index of 国際\n    assertEquals(4, dictionaryEntryResult[2][1]); // index of 空港\n    \n    // Test lengths\n    assertEquals(2, dictionaryEntryResult[0][2]); // length of 関西\n    assertEquals(2, dictionaryEntryResult[1][2]); // length of 国際\n    assertEquals(2, dictionaryEntryResult[2][2]); // length of 空港\n    \n    s = \"関西国際空港と関西国際空港に行った\";\n    int[][] dictionaryEntryResult2 = dictionary.lookup(s.toCharArray(), 0, s.length());\n    // Length should be six \n    assertEquals(6, dictionaryEntryResult2.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}