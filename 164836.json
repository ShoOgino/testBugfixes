{"path":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester.SeedPostings#SeedPostings(long,int,int,IndexOptions,boolean).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester.SeedPostings#SeedPostings(long,int,int,IndexOptions,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester.SeedPostings#SeedPostings(long,int,int,Bits,IndexOptions,boolean).mjava","sourceNew":"    public SeedPostings(long seed, int minDocFreq, int maxDocFreq, IndexOptions options, boolean allowPayloads) {\n      random = new Random(seed);\n      docRandom = new Random(random.nextLong());\n      docFreq = TestUtil.nextInt(random, minDocFreq, maxDocFreq);\n      this.allowPayloads = allowPayloads;\n\n      // TODO: more realistic to inversely tie this to numDocs:\n      maxDocSpacing = TestUtil.nextInt(random, 1, 100);\n\n      if (random.nextInt(10) == 7) {\n        // 10% of the time create big payloads:\n        payloadSize = 1 + random.nextInt(3);\n      } else {\n        payloadSize = 1 + random.nextInt(1);\n      }\n\n      fixedPayloads = random.nextBoolean();\n      byte[] payloadBytes = new byte[payloadSize];\n      payload = new BytesRef(payloadBytes);\n      doPositions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS.compareTo(options) <= 0;\n    }\n\n","sourceOld":"    public SeedPostings(long seed, int minDocFreq, int maxDocFreq, Bits liveDocs, IndexOptions options, boolean allowPayloads) {\n      random = new Random(seed);\n      docRandom = new Random(random.nextLong());\n      docFreq = TestUtil.nextInt(random, minDocFreq, maxDocFreq);\n      this.liveDocs = liveDocs;\n      this.allowPayloads = allowPayloads;\n\n      // TODO: more realistic to inversely tie this to numDocs:\n      maxDocSpacing = TestUtil.nextInt(random, 1, 100);\n\n      if (random.nextInt(10) == 7) {\n        // 10% of the time create big payloads:\n        payloadSize = 1 + random.nextInt(3);\n      } else {\n        payloadSize = 1 + random.nextInt(1);\n      }\n\n      fixedPayloads = random.nextBoolean();\n      byte[] payloadBytes = new byte[payloadSize];\n      payload = new BytesRef(payloadBytes);\n      this.options = options;\n      doPositions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS.compareTo(options) <= 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}