{"path":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#distribTearDown().mjava","commits":[{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#distribTearDown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#tearDown().mjava","sourceNew":"  @Override\n  public void distribTearDown() throws Exception {\n    super.distribTearDown();\n    if (commondCloudSolrClient != null) {\n      commondCloudSolrClient.shutdown();\n    }\n    if (otherCollectionClients != null) {\n      for (List<SolrClient> clientList : otherCollectionClients.values()) {\n        for (SolrClient client : clientList) {\n          client.shutdown();\n        }\n      }\n    }\n    otherCollectionClients = null;\n    List<Runnable> tasks = executor.shutdownNow();\n    assertTrue(tasks.isEmpty());\n\n    System.clearProperty(\"numShards\");\n    System.clearProperty(\"solr.xml.persist\");\n    \n    // insurance\n    DirectUpdateHandler2.commitOnClose = true;\n  }\n\n","sourceOld":"  @Override\n  public void tearDown() throws Exception {\n    super.tearDown();\n    if (commondCloudSolrClient != null) {\n      commondCloudSolrClient.shutdown();\n    }\n    if (otherCollectionClients != null) {\n      for (List<SolrClient> clientList : otherCollectionClients.values()) {\n        for (SolrClient client : clientList) {\n          client.shutdown();\n        }\n      }\n    }\n    otherCollectionClients = null;\n    List<Runnable> tasks = executor.shutdownNow();\n    assertTrue(tasks.isEmpty());\n    \n    System.clearProperty(\"numShards\");\n    System.clearProperty(\"zkHost\");\n    System.clearProperty(\"solr.xml.persist\");\n    \n    // insurance\n    DirectUpdateHandler2.commitOnClose = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#distribTearDown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#distribTearDown().mjava","sourceNew":"  @Override\n  public void distribTearDown() throws Exception {\n    super.distribTearDown();\n    if (commondCloudSolrClient != null) {\n      commondCloudSolrClient.close();\n    }\n    if (otherCollectionClients != null) {\n      for (List<SolrClient> clientList : otherCollectionClients.values()) {\n        IOUtils.close(clientList);\n      }\n    }\n    otherCollectionClients = null;\n    List<Runnable> tasks = executor.shutdownNow();\n    assertTrue(tasks.isEmpty());\n\n    System.clearProperty(\"numShards\");\n    System.clearProperty(\"solr.xml.persist\");\n    \n    // insurance\n    DirectUpdateHandler2.commitOnClose = true;\n  }\n\n","sourceOld":"  @Override\n  public void distribTearDown() throws Exception {\n    super.distribTearDown();\n    if (commondCloudSolrClient != null) {\n      commondCloudSolrClient.shutdown();\n    }\n    if (otherCollectionClients != null) {\n      for (List<SolrClient> clientList : otherCollectionClients.values()) {\n        for (SolrClient client : clientList) {\n          client.shutdown();\n        }\n      }\n    }\n    otherCollectionClients = null;\n    List<Runnable> tasks = executor.shutdownNow();\n    assertTrue(tasks.isEmpty());\n\n    System.clearProperty(\"numShards\");\n    System.clearProperty(\"solr.xml.persist\");\n    \n    // insurance\n    DirectUpdateHandler2.commitOnClose = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b","date":1432801743,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#distribTearDown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#distribTearDown().mjava","sourceNew":"  @Override\n  public void distribTearDown() throws Exception {\n    super.distribTearDown();\n    if (commondCloudSolrClient != null) {\n      commondCloudSolrClient.close();\n    }\n    if (otherCollectionClients != null) {\n      for (List<SolrClient> clientList : otherCollectionClients.values()) {\n        IOUtils.close(clientList);\n      }\n    }\n    otherCollectionClients = null;\n    List<Runnable> tasks = executor.shutdownNow();\n    assertTrue(tasks.isEmpty());\n  }\n\n","sourceOld":"  @Override\n  public void distribTearDown() throws Exception {\n    super.distribTearDown();\n    if (commondCloudSolrClient != null) {\n      commondCloudSolrClient.close();\n    }\n    if (otherCollectionClients != null) {\n      for (List<SolrClient> clientList : otherCollectionClients.values()) {\n        IOUtils.close(clientList);\n      }\n    }\n    otherCollectionClients = null;\n    List<Runnable> tasks = executor.shutdownNow();\n    assertTrue(tasks.isEmpty());\n\n    System.clearProperty(\"numShards\");\n    System.clearProperty(\"solr.xml.persist\");\n    \n    // insurance\n    DirectUpdateHandler2.commitOnClose = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"234afba21d42e6c527535c6aa11baba09a4771f3","date":1432825127,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#distribTearDown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest#distribTearDown().mjava","sourceNew":"  @Override\n  public void distribTearDown() throws Exception {\n    super.distribTearDown();\n    if (otherCollectionClients != null) {\n      for (List<SolrClient> clientList : otherCollectionClients.values()) {\n        IOUtils.close(clientList);\n      }\n    }\n    otherCollectionClients = null;\n    List<Runnable> tasks = executor.shutdownNow();\n    assertTrue(tasks.isEmpty());\n  }\n\n","sourceOld":"  @Override\n  public void distribTearDown() throws Exception {\n    super.distribTearDown();\n    if (commondCloudSolrClient != null) {\n      commondCloudSolrClient.close();\n    }\n    if (otherCollectionClients != null) {\n      for (List<SolrClient> clientList : otherCollectionClients.values()) {\n        IOUtils.close(clientList);\n      }\n    }\n    otherCollectionClients = null;\n    List<Runnable> tasks = executor.shutdownNow();\n    assertTrue(tasks.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"234afba21d42e6c527535c6aa11baba09a4771f3":["2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b"],"abb23fcc2461782ab204e61213240feb77d355aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["abb23fcc2461782ab204e61213240feb77d355aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["234afba21d42e6c527535c6aa11baba09a4771f3"]},"commit2Childs":{"2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b":["234afba21d42e6c527535c6aa11baba09a4771f3"],"234afba21d42e6c527535c6aa11baba09a4771f3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"abb23fcc2461782ab204e61213240feb77d355aa":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["abb23fcc2461782ab204e61213240feb77d355aa"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["2bf454e5dea7bb5bcf27f8332ded09afcc4b6a1b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}