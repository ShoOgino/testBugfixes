{"path":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","commits":[{"id":"2396be4785ec8ca6c942dff4d20c1c93dd03db6d","date":1333735663,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<ContentStream>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"QUERYHANDLER\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    assertEquals(\"Was: 1, Now: 2, Delta: 1\", stats.get(\"requests\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["3ecb9b383d69ce4e536736a6ae00852af68a48a5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","sourceNew":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"QUERYHANDLER\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    assertEquals(\"Was: 1, Now: 2, Delta: 1\", stats.get(\"requests\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<ContentStream>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"QUERYHANDLER\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    assertEquals(\"Was: 1, Now: 2, Delta: 1\", stats.get(\"requests\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fbe30a91ef129cf3467a1598f9a437af92cdde80","date":1403618032,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","sourceNew":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"QUERYHANDLER\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    assertEquals(\"Was: 1, Now: 2, Delta: 1\", stats.get(\"requests\"));\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"QUERYHANDLER\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"QUERYHANDLER\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    assertEquals(\"Was: 1, Now: 2, Delta: 1\", stats.get(\"requests\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9b10b88c8af8835e23b0d566418ef8397a7bb8ed","date":1484223252,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","sourceNew":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"ADMIN\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    assertEquals(\"Was: 1, Now: 2, Delta: 1\", stats.get(\"requests\"));\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"ADMIN\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"QUERYHANDLER\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    assertEquals(\"Was: 1, Now: 2, Delta: 1\", stats.get(\"requests\"));\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"QUERYHANDLER\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","sourceNew":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"ADMIN\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    assertEquals(\"Was: 1, Now: 2, Delta: 1\", stats.get(\"requests\"));\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"ADMIN\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"QUERYHANDLER\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    assertEquals(\"Was: 1, Now: 2, Delta: 1\", stats.get(\"requests\"));\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"QUERYHANDLER\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ecb9b383d69ce4e536736a6ae00852af68a48a5","date":1486747142,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","sourceNew":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"ADMIN\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    Pattern p = Pattern.compile(\"Was: (?<was>[0-9]+), Now: (?<now>[0-9]+), Delta: (?<delta>[0-9]+)\");\n    String response = stats.get(\"requests\").toString();\n    Matcher m = p.matcher(response);\n    if (!m.matches()) {\n      fail(\"Response did not match pattern: \" + response);\n    }\n\n    assertEquals(1, Integer.parseInt(m.group(\"delta\")));\n    int was = Integer.parseInt(m.group(\"was\"));\n    int now = Integer.parseInt(m.group(\"now\"));\n    assertEquals(1, now - was);\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"ADMIN\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"ADMIN\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    assertEquals(\"Was: 1, Now: 2, Delta: 1\", stats.get(\"requests\"));\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"ADMIN\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","bugFix":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","sourceNew":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n    ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n\n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n\n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"ADMIN\").get(\"/admin/mbeans\").get(\"stats\");\n\n    //System.out.println(\"stats:\"+stats);\n    Pattern p = Pattern.compile(\"Was: (?<was>[0-9]+), Now: (?<now>[0-9]+), Delta: (?<delta>[0-9]+)\");\n    String response = stats.get(\"ADMIN./admin/mbeans.requests\").toString();\n    Matcher m = p.matcher(response);\n    if (!m.matches()) {\n      fail(\"Response did not match pattern: \" + response);\n    }\n\n    assertEquals(1, Integer.parseInt(m.group(\"delta\")));\n    int was = Integer.parseInt(m.group(\"was\"));\n    int now = Integer.parseInt(m.group(\"now\"));\n    assertEquals(1, now - was);\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"ADMIN\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"ADMIN\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    Pattern p = Pattern.compile(\"Was: (?<was>[0-9]+), Now: (?<now>[0-9]+), Delta: (?<delta>[0-9]+)\");\n    String response = stats.get(\"requests\").toString();\n    Matcher m = p.matcher(response);\n    if (!m.matches()) {\n      fail(\"Response did not match pattern: \" + response);\n    }\n\n    assertEquals(1, Integer.parseInt(m.group(\"delta\")));\n    int was = Integer.parseInt(m.group(\"was\"));\n    int now = Integer.parseInt(m.group(\"now\"));\n    assertEquals(1, now - was);\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"ADMIN\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","sourceNew":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n    ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n\n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n\n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"ADMIN\").get(\"/admin/mbeans\").get(\"stats\");\n\n    //System.out.println(\"stats:\"+stats);\n    Pattern p = Pattern.compile(\"Was: (?<was>[0-9]+), Now: (?<now>[0-9]+), Delta: (?<delta>[0-9]+)\");\n    String response = stats.get(\"ADMIN./admin/mbeans.requests\").toString();\n    Matcher m = p.matcher(response);\n    if (!m.matches()) {\n      fail(\"Response did not match pattern: \" + response);\n    }\n\n    assertEquals(1, Integer.parseInt(m.group(\"delta\")));\n    int was = Integer.parseInt(m.group(\"was\"));\n    int now = Integer.parseInt(m.group(\"now\"));\n    assertEquals(1, now - was);\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"ADMIN\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n     ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n    \n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n    \n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"ADMIN\").get(\"/admin/mbeans\").get(\"stats\");\n    \n    //System.out.println(\"stats:\"+stats);\n    Pattern p = Pattern.compile(\"Was: (?<was>[0-9]+), Now: (?<now>[0-9]+), Delta: (?<delta>[0-9]+)\");\n    String response = stats.get(\"requests\").toString();\n    Matcher m = p.matcher(response);\n    if (!m.matches()) {\n      fail(\"Response did not match pattern: \" + response);\n    }\n\n    assertEquals(1, Integer.parseInt(m.group(\"delta\")));\n    int was = Integer.parseInt(m.group(\"was\"));\n    int now = Integer.parseInt(m.group(\"now\"));\n    assertEquals(1, now - was);\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"ADMIN\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/MBeansHandlerTest#testDiff().mjava","sourceNew":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n    ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n\n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n\n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList stats = (NamedList)diff.get(\"ADMIN\").get(\"/admin/mbeans\").get(\"stats\");\n\n    //System.out.println(\"stats:\"+stats);\n    Pattern p = Pattern.compile(\"Was: (?<was>[0-9]+), Now: (?<now>[0-9]+), Delta: (?<delta>[0-9]+)\");\n    String response = stats.get(\"ADMIN./admin/mbeans.requests\").toString();\n    Matcher m = p.matcher(response);\n    if (!m.matches()) {\n      fail(\"Response did not match pattern: \" + response);\n    }\n\n    assertEquals(1, Integer.parseInt(m.group(\"delta\")));\n    int was = Integer.parseInt(m.group(\"was\"));\n    int now = Integer.parseInt(m.group(\"now\"));\n    assertEquals(1, now - was);\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"ADMIN\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","sourceOld":"  @Test\n  public void testDiff() throws Exception {\n    String xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\"\n    ));\n    List<ContentStream> streams = new ArrayList<>();\n    streams.add(new ContentStreamBase.StringStream(xml));\n\n    LocalSolrQueryRequest req = lrf.makeRequest(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        CommonParams.WT,\"xml\",\n        \"diff\",\"true\");\n    req.setContentStreams(streams);\n\n    xml = h.query(req);\n    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);\n\n    // The stats bean for SolrInfoMBeanHandler\n    NamedList stats = (NamedList)diff.get(\"ADMIN\").get(\"/admin/mbeans\").get(\"stats\");\n\n    //System.out.println(\"stats:\"+stats);\n    Pattern p = Pattern.compile(\"Was: (?<was>[0-9]+), Now: (?<now>[0-9]+), Delta: (?<delta>[0-9]+)\");\n    String response = stats.get(\"ADMIN./admin/mbeans.requests\").toString();\n    Matcher m = p.matcher(response);\n    if (!m.matches()) {\n      fail(\"Response did not match pattern: \" + response);\n    }\n\n    assertEquals(1, Integer.parseInt(m.group(\"delta\")));\n    int was = Integer.parseInt(m.group(\"was\"));\n    int now = Integer.parseInt(m.group(\"now\"));\n    assertEquals(1, now - was);\n\n    xml = h.query(req(\n        CommonParams.QT,\"/admin/mbeans\",\n        \"stats\",\"true\",\n        \"key\",\"org.apache.solr.handler.admin.CollectionsHandler\"\n    ));\n    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);\n    assertNotNull( nl.get(\"ADMIN\").get(\"org.apache.solr.handler.admin.CollectionsHandler\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["3ecb9b383d69ce4e536736a6ae00852af68a48a5"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d"],"9b10b88c8af8835e23b0d566418ef8397a7bb8ed":["fbe30a91ef129cf3467a1598f9a437af92cdde80"],"fbe30a91ef129cf3467a1598f9a437af92cdde80":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2396be4785ec8ca6c942dff4d20c1c93dd03db6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["fbe30a91ef129cf3467a1598f9a437af92cdde80","9b10b88c8af8835e23b0d566418ef8397a7bb8ed"],"816521ebaad5add9cb96bb88c577394e2938c40b":["3ecb9b383d69ce4e536736a6ae00852af68a48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["816521ebaad5add9cb96bb88c577394e2938c40b"],"3ecb9b383d69ce4e536736a6ae00852af68a48a5":["9b10b88c8af8835e23b0d566418ef8397a7bb8ed"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["fbe30a91ef129cf3467a1598f9a437af92cdde80"],"9b10b88c8af8835e23b0d566418ef8397a7bb8ed":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","3ecb9b383d69ce4e536736a6ae00852af68a48a5"],"fbe30a91ef129cf3467a1598f9a437af92cdde80":["9b10b88c8af8835e23b0d566418ef8397a7bb8ed","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d"],"2396be4785ec8ca6c942dff4d20c1c93dd03db6d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["e98520789adb1d5ad05afb4956eca0944a929688"],"3ecb9b383d69ce4e536736a6ae00852af68a48a5":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}