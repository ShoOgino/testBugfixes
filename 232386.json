{"path":"solr/core/src/java/org/apache/solr/rest/SolrConfigRestApi#createInboundRoot().mjava","commits":[{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/SolrConfigRestApi#createInboundRoot().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /config\");\n    \n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered /config resources\n    RestManager restManager = \n        RestManager.getRestManager(SolrRequestInfo.getRequestInfo());\n    restManager.attachManagedResources(RestManager.CONFIG_BASE_PATH, router);    \n\n    log.info(\"createInboundRoot complete for /config\");\n\n    return router;\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/SolrConfigRestApi#createInboundRoot().mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/SolrConfigRestApi#createInboundRoot().mjava","sourceNew":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n/*\n    log.info(\"createInboundRoot started for /config\");\n    \n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered /config resources\n    RestManager restManager = \n        RestManager.getRestManager(SolrRequestInfo.getRequestInfo());\n    restManager.attachManagedResources(RestManager.CONFIG_BASE_PATH, router);    \n\n    log.info(\"createInboundRoot complete for /config\");\n\n    return router;*/\n    return null;\n  }  \n\n","sourceOld":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /config\");\n    \n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered /config resources\n    RestManager restManager = \n        RestManager.getRestManager(SolrRequestInfo.getRequestInfo());\n    restManager.attachManagedResources(RestManager.CONFIG_BASE_PATH, router);    \n\n    log.info(\"createInboundRoot complete for /config\");\n\n    return router;\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"858c0f62e7b20002e4d94702c510512fb6292988","date":1417427955,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/rest/SolrConfigRestApi#createInboundRoot().mjava","sourceNew":null,"sourceOld":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n/*\n    log.info(\"createInboundRoot started for /config\");\n    \n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered /config resources\n    RestManager restManager = \n        RestManager.getRestManager(SolrRequestInfo.getRequestInfo());\n    restManager.attachManagedResources(RestManager.CONFIG_BASE_PATH, router);    \n\n    log.info(\"createInboundRoot complete for /config\");\n\n    return router;*/\n    return null;\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"531fe719c7218235a679452eb3d137bfd8fc6af1":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"858c0f62e7b20002e4d94702c510512fb6292988":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["858c0f62e7b20002e4d94702c510512fb6292988"]},"commit2Childs":{"531fe719c7218235a679452eb3d137bfd8fc6af1":["858c0f62e7b20002e4d94702c510512fb6292988"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"858c0f62e7b20002e4d94702c510512fb6292988":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}