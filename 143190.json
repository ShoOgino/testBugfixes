{"path":"src/java/org/apache/lucene/index/TermBuffer#read(IndexInput,FieldInfos).mjava","commits":[{"id":"3778b73bb813f2d72a86f83c78f3fd5a988eb08c","date":1097251129,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermBuffer#read(IndexInput,FieldInfos).mjava","pathOld":"/dev/null","sourceNew":"  public final void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    int start = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = start + length;\n    setTextLength(totalLength);\n    input.readChars(this.text, start, length);\n    this.field = fieldInfos.fieldName(input.readVInt());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4","date":1206538765,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermBuffer#read(IndexInput,FieldInfos).mjava","pathOld":"src/java/org/apache/lucene/index/TermBuffer#read(IndexInput,FieldInfos).mjava","sourceNew":"  public final void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    int start = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = start + length;\n    if (preUTF8Strings) {\n      text.setLength(totalLength);\n      input.readChars(text.result, start, length);\n    } else {\n\n      if (dirty) {\n        // Fully convert all bytes since bytes is dirty\n        UnicodeUtil.UTF16toUTF8(text.result, 0, text.length, bytes);\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, 0, totalLength, text);\n        dirty = false;\n      } else {\n        // Incrementally convert only the UTF8 bytes that are new:\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, start, length, text);\n      }\n    }\n    this.field = fieldInfos.fieldName(input.readVInt());\n  }\n\n","sourceOld":"  public final void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    int start = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = start + length;\n    setTextLength(totalLength);\n    input.readChars(this.text, start, length);\n    this.field = fieldInfos.fieldName(input.readVInt());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermBuffer#read(IndexInput,FieldInfos).mjava","pathOld":"src/java/org/apache/lucene/index/TermBuffer#read(IndexInput,FieldInfos).mjava","sourceNew":"  public final void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    int start = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = start + length;\n    if (preUTF8Strings) {\n      text.setLength(totalLength);\n      input.readChars(text.result, start, length);\n    } else {\n\n      if (dirty) {\n        // Fully convert all bytes since bytes is dirty\n        UnicodeUtil.UTF16toUTF8(text.result, 0, text.length, bytes);\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, 0, totalLength, text);\n        dirty = false;\n      } else {\n        // Incrementally convert only the UTF8 bytes that are new:\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, start, length, text);\n      }\n    }\n    this.field = fieldInfos.fieldName(input.readVInt());\n  }\n\n","sourceOld":"  public final void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    int start = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = start + length;\n    if (preUTF8Strings) {\n      text.setLength(totalLength);\n      input.readChars(text.result, start, length);\n    } else {\n\n      if (dirty) {\n        // Fully convert all bytes since bytes is dirty\n        UnicodeUtil.UTF16toUTF8(text.result, 0, text.length, bytes);\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, 0, totalLength, text);\n        dirty = false;\n      } else {\n        // Incrementally convert only the UTF8 bytes that are new:\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, start, length, text);\n      }\n    }\n    this.field = fieldInfos.fieldName(input.readVInt());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3778b73bb813f2d72a86f83c78f3fd5a988eb08c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["3778b73bb813f2d72a86f83c78f3fd5a988eb08c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"]},"commit2Childs":{"3778b73bb813f2d72a86f83c78f3fd5a988eb08c":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3778b73bb813f2d72a86f83c78f3fd5a988eb08c"],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}