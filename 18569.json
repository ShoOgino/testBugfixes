{"path":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.ArrayIntList#toArray(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.ArrayIntList#toArray(int).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.ArrayIntList#toArray(int).mjava","sourceNew":"    public int[] toArray(int stride) {\n      int[] arr = new int[size() / stride];\n      if (stride == 1) {\n        System.arraycopy(elements, 0, arr, 0, size); // fast path\n      } else { \n        for (int i=0, j=0; j < size; i++, j += stride) arr[i] = elements[j];\n      }\n      return arr;\n    }\n\n","sourceOld":"    public int[] toArray(int stride) {\n      int[] arr = new int[size() / stride];\n      if (stride == 1) {\n        System.arraycopy(elements, 0, arr, 0, size); // fast path\n      } else { \n        for (int i=0, j=0; j < size; i++, j += stride) arr[i] = elements[j];\n      }\n      return arr;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bfa39296944e5fddc334aa89243d91f9cbb8367","date":1330973284,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.ArrayIntList#toArray(int).mjava","sourceNew":null,"sourceOld":"    public int[] toArray(int stride) {\n      int[] arr = new int[size() / stride];\n      if (stride == 1) {\n        System.arraycopy(elements, 0, arr, 0, size); // fast path\n      } else { \n        for (int i=0, j=0; j < size; i++, j += stride) arr[i] = elements[j];\n      }\n      return arr;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.ArrayIntList#toArray(int).mjava","sourceNew":null,"sourceOld":"    public int[] toArray(int stride) {\n      int[] arr = new int[size() / stride];\n      if (stride == 1) {\n        System.arraycopy(elements, 0, arr, 0, size); // fast path\n      } else { \n        for (int i=0, j=0; j < size; i++, j += stride) arr[i] = elements[j];\n      }\n      return arr;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["9454a6510e2db155fb01faa5c049b06ece95fab9","8bfa39296944e5fddc334aa89243d91f9cbb8367"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8bfa39296944e5fddc334aa89243d91f9cbb8367":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8bfa39296944e5fddc334aa89243d91f9cbb8367"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8bfa39296944e5fddc334aa89243d91f9cbb8367":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","8bfa39296944e5fddc334aa89243d91f9cbb8367"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}