{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","commits":[{"id":"901d103ab7c2eeae92b111fc91bb1b00580a3fd7","date":1422827173,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","sourceNew":"  final void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c02b804ab16489b95429791a2d8fb0e0728354d4","date":1436551798,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","sourceNew":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","sourceOld":"  final void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"122251c49e5a9fa95f056ea257ae3ab452099fc7","date":1464820065,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","sourceNew":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n  }\n\n","sourceOld":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","date":1464821470,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","sourceNew":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n  }\n\n","sourceOld":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6483e4260c08168709c02238ae083a51519a28dd","date":1465117546,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","sourceNew":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n  }\n\n","sourceOld":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","sourceNew":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n  }\n\n","sourceOld":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","sourceNew":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n  }\n\n","sourceOld":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b8498afacfc8322268ca0d659d274fcce08d557","date":1524577248,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#finishFullFlush(IndexWriter,boolean).mjava","sourceNew":"  void finishFullFlush(boolean success) {\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n  }\n\n","sourceOld":"  void finishFullFlush(IndexWriter indexWriter, boolean success) {\n    assert indexWriter.holdsFullFlushLock();\n    try {\n      if (infoStream.isEnabled(\"DW\")) {\n        infoStream.message(\"DW\", Thread.currentThread().getName() + \" finishFullFlush success=\" + success);\n      }\n      assert setFlushingDeleteQueue(null);\n      if (success) {\n        // Release the flush lock\n        flushControl.finishFullFlush();\n      } else {\n        flushControl.abortFullFlushes();\n\n      }\n    } finally {\n      pendingChangesInCurrentFullFlush = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":["9664831d785795f0f380fccc6db560efb979fdbb"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6b8498afacfc8322268ca0d659d274fcce08d557":["191128ac5b85671b1671e2c857437694283b6ebf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6483e4260c08168709c02238ae083a51519a28dd":["c02b804ab16489b95429791a2d8fb0e0728354d4","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"191128ac5b85671b1671e2c857437694283b6ebf":["c02b804ab16489b95429791a2d8fb0e0728354d4","6483e4260c08168709c02238ae083a51519a28dd"],"901d103ab7c2eeae92b111fc91bb1b00580a3fd7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":["c02b804ab16489b95429791a2d8fb0e0728354d4","122251c49e5a9fa95f056ea257ae3ab452099fc7"],"122251c49e5a9fa95f056ea257ae3ab452099fc7":["c02b804ab16489b95429791a2d8fb0e0728354d4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c02b804ab16489b95429791a2d8fb0e0728354d4","191128ac5b85671b1671e2c857437694283b6ebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6b8498afacfc8322268ca0d659d274fcce08d557"],"c02b804ab16489b95429791a2d8fb0e0728354d4":["901d103ab7c2eeae92b111fc91bb1b00580a3fd7"]},"commit2Childs":{"6b8498afacfc8322268ca0d659d274fcce08d557":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["901d103ab7c2eeae92b111fc91bb1b00580a3fd7"],"6483e4260c08168709c02238ae083a51519a28dd":["191128ac5b85671b1671e2c857437694283b6ebf"],"191128ac5b85671b1671e2c857437694283b6ebf":["6b8498afacfc8322268ca0d659d274fcce08d557","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"901d103ab7c2eeae92b111fc91bb1b00580a3fd7":["c02b804ab16489b95429791a2d8fb0e0728354d4"],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":["6483e4260c08168709c02238ae083a51519a28dd"],"122251c49e5a9fa95f056ea257ae3ab452099fc7":["b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"c02b804ab16489b95429791a2d8fb0e0728354d4":["6483e4260c08168709c02238ae083a51519a28dd","191128ac5b85671b1671e2c857437694283b6ebf","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","122251c49e5a9fa95f056ea257ae3ab452099fc7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}