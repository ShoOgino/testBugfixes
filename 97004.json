{"path":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testCreateAndManipulateCores().mjava","commits":[{"id":"2eea68c999cd25f09e15e71eb2fd57b17f5eca59","date":1371837918,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testCreateAndManipulateCores().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCreateAndManipulateCores() throws Exception {\n    CoreContainer cc = init(SOLR_XML_LOTS_SYSVARS, \"SystemVars1\", \"SystemVars2\", \"new_one\", \"new_two\");\n    try {\n      final CoreAdminHandler admin = new CoreAdminHandler(cc);\n      String instPathOne = new File(solrHomeDirectory, \"new_one\").getAbsolutePath();\n      SolrQueryResponse resp = new SolrQueryResponse();\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.CREATE.toString(),\n              CoreAdminParams.INSTANCE_DIR, instPathOne,\n              CoreAdminParams.NAME, \"new_one\"),\n              resp);\n      assertNull(\"Exception on create\", resp.getException());\n\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.CREATE.toString(),\n              CoreAdminParams.NAME, \"new_two\"),\n              resp);\n      assertNull(\"Exception on create\", resp.getException());\n\n      File persistXml1 = new File(solrHomeDirectory, \"create_man_1.xml\");\n      origContainedInPersist(cc, persistXml1);\n\n      // We know all the original data is in persist, now check for newly-created files.\n      String[] expressions = new  String[2];\n      String instHome = new File(solrHomeDirectory, \"new_one\").getAbsolutePath();\n      expressions[0] = \"/solr/cores/core[@name='new_one' and @instanceDir='\" + instHome + \"']\";\n      expressions[1] = \"/solr/cores/core[@name='new_two' and @instanceDir='new_two/']\";\n\n      assertXmlFile(persistXml1, expressions);\n\n      // Next, swap a created core and check\n      resp = new SolrQueryResponse();\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.SWAP.toString(),\n              CoreAdminParams.CORE, \"new_one\",\n              CoreAdminParams.OTHER, \"SystemVars2\"),\n              resp);\n      assertNull(\"Exception on swap\", resp.getException());\n\n      File persistXml2 = new File(solrHomeDirectory, \"create_man_2.xml\");\n\n      cc.persistFile(persistXml2);\n      String[] persistList = getAllNodes(persistXml2);\n      expressions = new String[persistList.length];\n\n      // Now manually change the names back and it should match exactly to the original XML.\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        String fromName = \"@name='new_one'\";\n        String toName = \"@name='SystemVars2'\";\n        if (persistList[idx].contains(fromName)) {\n          expressions[idx] = persistList[idx].replace(fromName, toName);\n        } else {\n          expressions[idx] = persistList[idx].replace(toName, fromName);\n        }\n      }\n\n      assertXmlFile(persistXml1, expressions);\n\n      // Then rename the other created core and check\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RENAME.toString(),\n              CoreAdminParams.CORE, \"new_two\",\n              CoreAdminParams.OTHER, \"RenamedCore\"),\n              resp);\n      assertNull(\"Exception on rename\", resp.getException());\n\n      File persistXml3 = new File(solrHomeDirectory, \"create_man_3.xml\");\n\n      // OK, Assure that if I change everything that has been renamed with the original value for the core, it matches\n      // the old list\n      cc.persistFile(persistXml3);\n      persistList = getAllNodes(persistXml3);\n      expressions = new String[persistList.length];\n\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        expressions[idx] = persistList[idx].replaceAll(\"RenamedCore\", \"new_two\");\n      }\n      assertXmlFile(persistXml2, expressions);\n\n      // Now the other way, If I replace the original name in the original XML file with \"RenamedCore\", does it match\n      // what was persisted?\n      persistList = getAllNodes(persistXml2);\n      expressions = new String[persistList.length];\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        // /solr/cores/core[@name='SystemVars1' and @collection='${collection:collection1}']\n        expressions[idx] = persistList[idx].replace(\"@name='new_two'\", \"@name='RenamedCore'\");\n      }\n      assertXmlFile(persistXml3, expressions);\n\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["93d43191616f4800cc497eccfb8b0fa6c644673b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93d43191616f4800cc497eccfb8b0fa6c644673b","date":1371875017,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testCreateAndManipulateCores().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testCreateAndManipulateCores().mjava","sourceNew":"  @Test\n  public void testCreateAndManipulateCores() throws Exception {\n    CoreContainer cc = init(SOLR_XML_LOTS_SYSVARS, \"SystemVars1\", \"SystemVars2\", \"new_one\", \"new_two\");\n    try {\n      final CoreAdminHandler admin = new CoreAdminHandler(cc);\n      String instPathOne = new File(solrHomeDirectory, \"new_one\").getAbsolutePath();\n      SolrQueryResponse resp = new SolrQueryResponse();\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.CREATE.toString(),\n              CoreAdminParams.INSTANCE_DIR, instPathOne,\n              CoreAdminParams.NAME, \"new_one\"),\n              resp);\n      assertNull(\"Exception on create\", resp.getException());\n\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.CREATE.toString(),\n              CoreAdminParams.NAME, \"new_two\"),\n              resp);\n      assertNull(\"Exception on create\", resp.getException());\n\n      File persistXml1 = new File(solrHomeDirectory, \"create_man_1.xml\");\n      origContainedInPersist(cc, persistXml1);\n\n      // We know all the original data is in persist, now check for newly-created files.\n      String[] expressions = new  String[2];\n      String instHome = new File(solrHomeDirectory, \"new_one\").getAbsolutePath();\n      expressions[0] = \"/solr/cores/core[@name='new_one' and @instanceDir='\" + instHome + \"']\";\n      expressions[1] = \"/solr/cores/core[@name='new_two' and @instanceDir='new_two\" + File.separator + \"']\";\n\n      assertXmlFile(persistXml1, expressions);\n\n      // Next, swap a created core and check\n      resp = new SolrQueryResponse();\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.SWAP.toString(),\n              CoreAdminParams.CORE, \"new_one\",\n              CoreAdminParams.OTHER, \"SystemVars2\"),\n              resp);\n      assertNull(\"Exception on swap\", resp.getException());\n\n      File persistXml2 = new File(solrHomeDirectory, \"create_man_2.xml\");\n\n      cc.persistFile(persistXml2);\n      String[] persistList = getAllNodes(persistXml2);\n      expressions = new String[persistList.length];\n\n      // Now manually change the names back and it should match exactly to the original XML.\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        String fromName = \"@name='new_one'\";\n        String toName = \"@name='SystemVars2'\";\n        if (persistList[idx].contains(fromName)) {\n          expressions[idx] = persistList[idx].replace(fromName, toName);\n        } else {\n          expressions[idx] = persistList[idx].replace(toName, fromName);\n        }\n      }\n\n      assertXmlFile(persistXml1, expressions);\n\n      // Then rename the other created core and check\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RENAME.toString(),\n              CoreAdminParams.CORE, \"new_two\",\n              CoreAdminParams.OTHER, \"RenamedCore\"),\n              resp);\n      assertNull(\"Exception on rename\", resp.getException());\n\n      File persistXml3 = new File(solrHomeDirectory, \"create_man_3.xml\");\n\n      // OK, Assure that if I change everything that has been renamed with the original value for the core, it matches\n      // the old list\n      cc.persistFile(persistXml3);\n      persistList = getAllNodes(persistXml3);\n      expressions = new String[persistList.length];\n\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        expressions[idx] = persistList[idx].replaceAll(\"RenamedCore\", \"new_two\");\n      }\n      assertXmlFile(persistXml2, expressions);\n\n      // Now the other way, If I replace the original name in the original XML file with \"RenamedCore\", does it match\n      // what was persisted?\n      persistList = getAllNodes(persistXml2);\n      expressions = new String[persistList.length];\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        // /solr/cores/core[@name='SystemVars1' and @collection='${collection:collection1}']\n        expressions[idx] = persistList[idx].replace(\"@name='new_two'\", \"@name='RenamedCore'\");\n      }\n      assertXmlFile(persistXml3, expressions);\n\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testCreateAndManipulateCores() throws Exception {\n    CoreContainer cc = init(SOLR_XML_LOTS_SYSVARS, \"SystemVars1\", \"SystemVars2\", \"new_one\", \"new_two\");\n    try {\n      final CoreAdminHandler admin = new CoreAdminHandler(cc);\n      String instPathOne = new File(solrHomeDirectory, \"new_one\").getAbsolutePath();\n      SolrQueryResponse resp = new SolrQueryResponse();\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.CREATE.toString(),\n              CoreAdminParams.INSTANCE_DIR, instPathOne,\n              CoreAdminParams.NAME, \"new_one\"),\n              resp);\n      assertNull(\"Exception on create\", resp.getException());\n\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.CREATE.toString(),\n              CoreAdminParams.NAME, \"new_two\"),\n              resp);\n      assertNull(\"Exception on create\", resp.getException());\n\n      File persistXml1 = new File(solrHomeDirectory, \"create_man_1.xml\");\n      origContainedInPersist(cc, persistXml1);\n\n      // We know all the original data is in persist, now check for newly-created files.\n      String[] expressions = new  String[2];\n      String instHome = new File(solrHomeDirectory, \"new_one\").getAbsolutePath();\n      expressions[0] = \"/solr/cores/core[@name='new_one' and @instanceDir='\" + instHome + \"']\";\n      expressions[1] = \"/solr/cores/core[@name='new_two' and @instanceDir='new_two/']\";\n\n      assertXmlFile(persistXml1, expressions);\n\n      // Next, swap a created core and check\n      resp = new SolrQueryResponse();\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.SWAP.toString(),\n              CoreAdminParams.CORE, \"new_one\",\n              CoreAdminParams.OTHER, \"SystemVars2\"),\n              resp);\n      assertNull(\"Exception on swap\", resp.getException());\n\n      File persistXml2 = new File(solrHomeDirectory, \"create_man_2.xml\");\n\n      cc.persistFile(persistXml2);\n      String[] persistList = getAllNodes(persistXml2);\n      expressions = new String[persistList.length];\n\n      // Now manually change the names back and it should match exactly to the original XML.\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        String fromName = \"@name='new_one'\";\n        String toName = \"@name='SystemVars2'\";\n        if (persistList[idx].contains(fromName)) {\n          expressions[idx] = persistList[idx].replace(fromName, toName);\n        } else {\n          expressions[idx] = persistList[idx].replace(toName, fromName);\n        }\n      }\n\n      assertXmlFile(persistXml1, expressions);\n\n      // Then rename the other created core and check\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RENAME.toString(),\n              CoreAdminParams.CORE, \"new_two\",\n              CoreAdminParams.OTHER, \"RenamedCore\"),\n              resp);\n      assertNull(\"Exception on rename\", resp.getException());\n\n      File persistXml3 = new File(solrHomeDirectory, \"create_man_3.xml\");\n\n      // OK, Assure that if I change everything that has been renamed with the original value for the core, it matches\n      // the old list\n      cc.persistFile(persistXml3);\n      persistList = getAllNodes(persistXml3);\n      expressions = new String[persistList.length];\n\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        expressions[idx] = persistList[idx].replaceAll(\"RenamedCore\", \"new_two\");\n      }\n      assertXmlFile(persistXml2, expressions);\n\n      // Now the other way, If I replace the original name in the original XML file with \"RenamedCore\", does it match\n      // what was persisted?\n      persistList = getAllNodes(persistXml2);\n      expressions = new String[persistList.length];\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        // /solr/cores/core[@name='SystemVars1' and @collection='${collection:collection1}']\n        expressions[idx] = persistList[idx].replace(\"@name='new_two'\", \"@name='RenamedCore'\");\n      }\n      assertXmlFile(persistXml3, expressions);\n\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n\n\n  }\n\n","bugFix":["2eea68c999cd25f09e15e71eb2fd57b17f5eca59"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testCreateAndManipulateCores().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testCreateAndManipulateCores() throws Exception {\n    CoreContainer cc = init(SOLR_XML_LOTS_SYSVARS, \"SystemVars1\", \"SystemVars2\", \"new_one\", \"new_two\");\n    try {\n      final CoreAdminHandler admin = new CoreAdminHandler(cc);\n      String instPathOne = new File(solrHomeDirectory, \"new_one\").getAbsolutePath();\n      SolrQueryResponse resp = new SolrQueryResponse();\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.CREATE.toString(),\n              CoreAdminParams.INSTANCE_DIR, instPathOne,\n              CoreAdminParams.NAME, \"new_one\"),\n              resp);\n      assertNull(\"Exception on create\", resp.getException());\n\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.CREATE.toString(),\n              CoreAdminParams.NAME, \"new_two\"),\n              resp);\n      assertNull(\"Exception on create\", resp.getException());\n\n      File persistXml1 = new File(solrHomeDirectory, \"create_man_1.xml\");\n      origContainedInPersist(cc, persistXml1);\n\n      // We know all the original data is in persist, now check for newly-created files.\n      String[] expressions = new  String[2];\n      String instHome = new File(solrHomeDirectory, \"new_one\").getAbsolutePath();\n      expressions[0] = \"/solr/cores/core[@name='new_one' and @instanceDir='\" + instHome + \"']\";\n      expressions[1] = \"/solr/cores/core[@name='new_two' and @instanceDir='new_two\" + File.separator + \"']\";\n\n      assertXmlFile(persistXml1, expressions);\n\n      // Next, swap a created core and check\n      resp = new SolrQueryResponse();\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.SWAP.toString(),\n              CoreAdminParams.CORE, \"new_one\",\n              CoreAdminParams.OTHER, \"SystemVars2\"),\n              resp);\n      assertNull(\"Exception on swap\", resp.getException());\n\n      File persistXml2 = new File(solrHomeDirectory, \"create_man_2.xml\");\n\n      cc.persistFile(persistXml2);\n      String[] persistList = getAllNodes(persistXml2);\n      expressions = new String[persistList.length];\n\n      // Now manually change the names back and it should match exactly to the original XML.\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        String fromName = \"@name='new_one'\";\n        String toName = \"@name='SystemVars2'\";\n        if (persistList[idx].contains(fromName)) {\n          expressions[idx] = persistList[idx].replace(fromName, toName);\n        } else {\n          expressions[idx] = persistList[idx].replace(toName, fromName);\n        }\n      }\n\n      assertXmlFile(persistXml1, expressions);\n\n      // Then rename the other created core and check\n      admin.handleRequestBody\n          (req(CoreAdminParams.ACTION,\n              CoreAdminParams.CoreAdminAction.RENAME.toString(),\n              CoreAdminParams.CORE, \"new_two\",\n              CoreAdminParams.OTHER, \"RenamedCore\"),\n              resp);\n      assertNull(\"Exception on rename\", resp.getException());\n\n      File persistXml3 = new File(solrHomeDirectory, \"create_man_3.xml\");\n\n      // OK, Assure that if I change everything that has been renamed with the original value for the core, it matches\n      // the old list\n      cc.persistFile(persistXml3);\n      persistList = getAllNodes(persistXml3);\n      expressions = new String[persistList.length];\n\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        expressions[idx] = persistList[idx].replaceAll(\"RenamedCore\", \"new_two\");\n      }\n      assertXmlFile(persistXml2, expressions);\n\n      // Now the other way, If I replace the original name in the original XML file with \"RenamedCore\", does it match\n      // what was persisted?\n      persistList = getAllNodes(persistXml2);\n      expressions = new String[persistList.length];\n      for (int idx = 0; idx < persistList.length; ++idx) {\n        // /solr/cores/core[@name='SystemVars1' and @collection='${collection:collection1}']\n        expressions[idx] = persistList[idx].replace(\"@name='new_two'\", \"@name='RenamedCore'\");\n      }\n      assertXmlFile(persistXml3, expressions);\n\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93d43191616f4800cc497eccfb8b0fa6c644673b":["2eea68c999cd25f09e15e71eb2fd57b17f5eca59"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["93d43191616f4800cc497eccfb8b0fa6c644673b"],"2eea68c999cd25f09e15e71eb2fd57b17f5eca59":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"]},"commit2Childs":{"93d43191616f4800cc497eccfb8b0fa6c644673b":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2eea68c999cd25f09e15e71eb2fd57b17f5eca59"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2eea68c999cd25f09e15e71eb2fd57b17f5eca59":["93d43191616f4800cc497eccfb8b0fa6c644673b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}