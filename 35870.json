{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader#checkIntegrity().mjava","commits":[{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader#checkIntegrity().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    if (version >= Lucene41PostingsWriter.VERSION_CHECKSUM) {\n      if (docIn != null) {\n        CodecUtil.checksumEntireFile(docIn);\n      }\n      if (posIn != null) {\n        CodecUtil.checksumEntireFile(posIn);\n      }\n      if (payIn != null) {\n        CodecUtil.checksumEntireFile(payIn);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader#checkIntegrity().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    if (version >= Lucene41PostingsWriter.VERSION_CHECKSUM) {\n      if (docIn != null) {\n        CodecUtil.checksumEntireFile(docIn);\n      }\n      if (posIn != null) {\n        CodecUtil.checksumEntireFile(posIn);\n      }\n      if (payIn != null) {\n        CodecUtil.checksumEntireFile(payIn);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader#checkIntegrity().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader#checkIntegrity().mjava","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    if (version >= Lucene41PostingsFormat.VERSION_CHECKSUM) {\n      if (docIn != null) {\n        CodecUtil.checksumEntireFile(docIn);\n      }\n      if (posIn != null) {\n        CodecUtil.checksumEntireFile(posIn);\n      }\n      if (payIn != null) {\n        CodecUtil.checksumEntireFile(payIn);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void checkIntegrity() throws IOException {\n    if (version >= Lucene41PostingsWriter.VERSION_CHECKSUM) {\n      if (docIn != null) {\n        CodecUtil.checksumEntireFile(docIn);\n      }\n      if (posIn != null) {\n        CodecUtil.checksumEntireFile(posIn);\n      }\n      if (payIn != null) {\n        CodecUtil.checksumEntireFile(payIn);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader#checkIntegrity().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41PostingsReader#checkIntegrity().mjava","sourceNew":"  @Override\n  public void checkIntegrity() throws IOException {\n    if (version >= Lucene41PostingsFormat.VERSION_CHECKSUM) {\n      if (docIn != null) {\n        CodecUtil.checksumEntireFile(docIn);\n      }\n      if (posIn != null) {\n        CodecUtil.checksumEntireFile(posIn);\n      }\n      if (payIn != null) {\n        CodecUtil.checksumEntireFile(payIn);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void checkIntegrity() throws IOException {\n    if (version >= Lucene41PostingsWriter.VERSION_CHECKSUM) {\n      if (docIn != null) {\n        CodecUtil.checksumEntireFile(docIn);\n      }\n      if (posIn != null) {\n        CodecUtil.checksumEntireFile(posIn);\n      }\n      if (payIn != null) {\n        CodecUtil.checksumEntireFile(payIn);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"99eb4a732d1a908f4636ace52928876136bf1896":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["1f3b037cd083286b2af89f96e768f85dcd8072d6","99eb4a732d1a908f4636ace52928876136bf1896"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","99eb4a732d1a908f4636ace52928876136bf1896","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"99eb4a732d1a908f4636ace52928876136bf1896":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}