{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","sourceNew":"  /**\n   * getPath() returns the path name of the category with the given\n   * ordinal. The path is returned as a new CategoryPath object - to\n   * reuse an existing object, use {@link #getPath(int, CategoryPath)}.\n   * <P>\n   * A null is returned if a category with the given ordinal does not exist. \n   */\n  public CategoryPath getPath(int ordinal) throws IOException;\n\n","sourceOld":"  /**\n   * getPath() returns the path name of the category with the given\n   * ordinal. The path is returned as a new CategoryPath object - to\n   * reuse an existing object, use {@link #getPath(int, CategoryPath)}.\n   * <P>\n   * A null is returned if a category with the given ordinal does not exist. \n   */\n  public CategoryPath getPath(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","sourceNew":"  /**\n   * Returns the path name of the category with the given ordinal. The path is\n   * returned as a new CategoryPath object - to reuse an existing object, use\n   * {@link #getPath(int, CategoryPath)}.\n   * \n   * @return a {@link CategoryPath} with the required path, or {@code null} if\n   *         the given ordinal is unknown to the taxonomy.\n   */\n  public abstract CategoryPath getPath(int ordinal) throws IOException;\n\n","sourceOld":"  /**\n   * getPath() returns the path name of the category with the given\n   * ordinal. The path is returned as a new CategoryPath object - to\n   * reuse an existing object, use {@link #getPath(int, CategoryPath)}.\n   * <P>\n   * A null is returned if a category with the given ordinal does not exist. \n   */\n  public CategoryPath getPath(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","sourceNew":"  /**\n   * Returns the path name of the category with the given ordinal. The path is\n   * returned as a new CategoryPath object - to reuse an existing object, use\n   * {@link #getPath(int, CategoryPath)}.\n   * \n   * @return a {@link CategoryPath} with the required path, or {@code null} if\n   *         the given ordinal is unknown to the taxonomy.\n   */\n  public abstract CategoryPath getPath(int ordinal) throws IOException;\n\n","sourceOld":"  /**\n   * getPath() returns the path name of the category with the given\n   * ordinal. The path is returned as a new CategoryPath object - to\n   * reuse an existing object, use {@link #getPath(int, CategoryPath)}.\n   * <P>\n   * A null is returned if a category with the given ordinal does not exist. \n   */\n  public CategoryPath getPath(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","date":1357499264,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","sourceNew":"  /** Returns the path name of the category with the given ordinal. */\n  public abstract CategoryPath getPath(int ordinal) throws IOException;\n\n","sourceOld":"  /**\n   * Returns the path name of the category with the given ordinal. The path is\n   * returned as a new CategoryPath object - to reuse an existing object, use\n   * {@link #getPath(int, CategoryPath)}.\n   * \n   * @return a {@link CategoryPath} with the required path, or {@code null} if\n   *         the given ordinal is unknown to the taxonomy.\n   */\n  public abstract CategoryPath getPath(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","sourceNew":"  /** Returns the path name of the category with the given ordinal. */\n  public abstract CategoryPath getPath(int ordinal) throws IOException;\n\n","sourceOld":"  /**\n   * Returns the path name of the category with the given ordinal. The path is\n   * returned as a new CategoryPath object - to reuse an existing object, use\n   * {@link #getPath(int, CategoryPath)}.\n   * \n   * @return a {@link CategoryPath} with the required path, or {@code null} if\n   *         the given ordinal is unknown to the taxonomy.\n   */\n  public abstract CategoryPath getPath(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","sourceNew":"  /** Returns the path name of the category with the given ordinal. */\n  public abstract FacetLabel getPath(int ordinal) throws IOException;\n\n","sourceOld":"  /** Returns the path name of the category with the given ordinal. */\n  public abstract CategoryPath getPath(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#getPath(int).mjava","sourceNew":"  /** Returns the path name of the category with the given ordinal. */\n  public abstract FacetLabel getPath(int ordinal) throws IOException;\n\n","sourceOld":"  /** Returns the path name of the category with the given ordinal. */\n  public abstract CategoryPath getPath(int ordinal) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","407687e67faf6e1f02a211ca078d8e3eed631027"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}