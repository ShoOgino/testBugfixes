{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getClusterProperties().mjava","commits":[{"id":"0544142c22eb88b6d8b3817f2e1190156aa4f9af","date":1551692505,"type":1,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getClusterProperties().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClusterStateProvider#getClusterProperties().mjava","sourceNew":"  @Override\n  public Map<String, Object> getClusterProperties() {\n    for (String nodeName : liveNodes) {\n      String baseUrl = Utils.getBaseUrlForNodeName(nodeName, urlScheme);\n      try (SolrClient client = getSolrClient(baseUrl)) {\n        Map<String, Object> clusterProperties = new HashMap<>();\n        fetchClusterState(client, null, clusterProperties);\n        return clusterProperties;\n      } catch (SolrServerException | HttpSolrClient.RemoteSolrException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from {} failed.\", baseUrl, e);\n      } catch (NotACollectionException e) {\n        // not possible! (we passed in null for collection so it can't be an alias)\n        throw new RuntimeException(\"null should never cause NotACollectionException in \" +\n            \"fetchClusterState() Please report this as a bug!\");\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes + \". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> getClusterProperties() {\n    for (String nodeName : liveNodes) {\n      try (HttpSolrClient client = new HttpSolrClient.Builder().\n          withBaseSolrUrl(Utils.getBaseUrlForNodeName(nodeName, urlScheme)).\n          withHttpClient(httpClient).build()) {\n        Map<String, Object> clusterProperties = new HashMap<>();\n        fetchClusterState(client, null, clusterProperties);\n        return clusterProperties;\n      } catch (SolrServerException | RemoteSolrException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from \" +\n            Utils.getBaseUrlForNodeName(nodeName, urlScheme) + \" failed.\", e);\n      } catch (NotACollectionException e) {\n        // not possible! (we passed in null for collection so it can't be an alias)\n        throw new RuntimeException(\"null should never cause NotACollectionException in \" +\n            \"fetchClusterState() Please report this as a bug!\");\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes + \". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getClusterProperties().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getClusterProperties().mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"deprecation\")\n  public Map<String, Object> getClusterProperties() {\n    for (String nodeName : liveNodes) {\n      String baseUrl = Utils.getBaseUrlForNodeName(nodeName, urlScheme);\n      try (SolrClient client = getSolrClient(baseUrl)) {\n        Map<String, Object> clusterProperties = new HashMap<>();\n        fetchClusterState(client, null, clusterProperties);\n        return clusterProperties;\n      } catch (SolrServerException | HttpSolrClient.RemoteSolrException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from {} failed.\", baseUrl, e);\n      } catch (NotACollectionException e) {\n        // not possible! (we passed in null for collection so it can't be an alias)\n        throw new RuntimeException(\"null should never cause NotACollectionException in \" +\n            \"fetchClusterState() Please report this as a bug!\");\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes + \". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> getClusterProperties() {\n    for (String nodeName : liveNodes) {\n      String baseUrl = Utils.getBaseUrlForNodeName(nodeName, urlScheme);\n      try (SolrClient client = getSolrClient(baseUrl)) {\n        Map<String, Object> clusterProperties = new HashMap<>();\n        fetchClusterState(client, null, clusterProperties);\n        return clusterProperties;\n      } catch (SolrServerException | HttpSolrClient.RemoteSolrException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from {} failed.\", baseUrl, e);\n      } catch (NotACollectionException e) {\n        // not possible! (we passed in null for collection so it can't be an alias)\n        throw new RuntimeException(\"null should never cause NotACollectionException in \" +\n            \"fetchClusterState() Please report this as a bug!\");\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes + \". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getClusterProperties().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getClusterProperties().mjava","sourceNew":"  @Override\n  public Map<String, Object> getClusterProperties() {\n    for (String nodeName : liveNodes) {\n      String baseUrl = Utils.getBaseUrlForNodeName(nodeName, urlScheme);\n      try (SolrClient client = getSolrClient(baseUrl)) {\n        Map<String, Object> clusterProperties = new HashMap<>();\n        fetchClusterState(client, null, clusterProperties);\n        return clusterProperties;\n      } catch (SolrServerException | HttpSolrClient.RemoteSolrException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from {} failed.\", baseUrl, e);\n      } catch (NotACollectionException e) {\n        // not possible! (we passed in null for collection so it can't be an alias)\n        throw new RuntimeException(\"null should never cause NotACollectionException in \" +\n            \"fetchClusterState() Please report this as a bug!\");\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes + \". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"deprecation\")\n  public Map<String, Object> getClusterProperties() {\n    for (String nodeName : liveNodes) {\n      String baseUrl = Utils.getBaseUrlForNodeName(nodeName, urlScheme);\n      try (SolrClient client = getSolrClient(baseUrl)) {\n        Map<String, Object> clusterProperties = new HashMap<>();\n        fetchClusterState(client, null, clusterProperties);\n        return clusterProperties;\n      } catch (SolrServerException | HttpSolrClient.RemoteSolrException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from {} failed.\", baseUrl, e);\n      } catch (NotACollectionException e) {\n        // not possible! (we passed in null for collection so it can't be an alias)\n        throw new RuntimeException(\"null should never cause NotACollectionException in \" +\n            \"fetchClusterState() Please report this as a bug!\");\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes + \". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db96734b79e26d948b59f68bd4564c4836a71acf","date":1585375566,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getClusterProperties().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseHttpClusterStateProvider#getClusterProperties().mjava","sourceNew":"  @Override\n  public Map<String, Object> getClusterProperties() {\n    for (String nodeName : liveNodes) {\n      String baseUrl = Utils.getBaseUrlForNodeName(nodeName, urlScheme);\n      try (SolrClient client = getSolrClient(baseUrl)) {\n        Map<String, Object> clusterProperties = new HashMap<>();\n        fetchClusterState(client, null, clusterProperties);\n        return clusterProperties;\n      } catch (SolrServerException | BaseHttpSolrClient.RemoteSolrException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from {} failed.\", baseUrl, e);\n      } catch (NotACollectionException e) {\n        // not possible! (we passed in null for collection so it can't be an alias)\n        throw new RuntimeException(\"null should never cause NotACollectionException in \" +\n            \"fetchClusterState() Please report this as a bug!\");\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes + \". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> getClusterProperties() {\n    for (String nodeName : liveNodes) {\n      String baseUrl = Utils.getBaseUrlForNodeName(nodeName, urlScheme);\n      try (SolrClient client = getSolrClient(baseUrl)) {\n        Map<String, Object> clusterProperties = new HashMap<>();\n        fetchClusterState(client, null, clusterProperties);\n        return clusterProperties;\n      } catch (SolrServerException | HttpSolrClient.RemoteSolrException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from {} failed.\", baseUrl, e);\n      } catch (NotACollectionException e) {\n        // not possible! (we passed in null for collection so it can't be an alias)\n        throw new RuntimeException(\"null should never cause NotACollectionException in \" +\n            \"fetchClusterState() Please report this as a bug!\");\n      }\n    }\n    throw new RuntimeException(\"Tried fetching cluster state using the node names we knew of, i.e. \" + liveNodes + \". However, \"\n        + \"succeeded in obtaining the cluster state from none of them.\"\n        + \"If you think your Solr cluster is up and is accessible,\"\n        + \" you could try re-creating a new CloudSolrClient using working\"\n        + \" solrUrl(s) or zkHost(s).\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"db96734b79e26d948b59f68bd4564c4836a71acf":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db96734b79e26d948b59f68bd4564c4836a71acf"]},"commit2Childs":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["db96734b79e26d948b59f68bd4564c4836a71acf"],"db96734b79e26d948b59f68bd4564c4836a71acf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}