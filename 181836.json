{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenNRTReaderOnCommit().mjava","commits":[{"id":"54d58aa833f7bfc07c8a1b2131760619f266c0c9","date":1409303733,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenNRTReaderOnCommit().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-5912: make sure when you reopen an NRT reader using a commit point, the SegmentReaders are in fact shared:\n  public void testReopenNRTReaderOnCommit() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.addDocument(new Document());\n\n    // Pull NRT reader; it has 1 segment:\n    DirectoryReader r1 = DirectoryReader.open(w, true);\n    assertEquals(1, r1.leaves().size());\n    w.addDocument(new Document());\n    w.commit();\n\n    List<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    assertEquals(1, commits.size());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r1, commits.get(0));\n    assertEquals(2, r2.leaves().size());\n\n    // Make sure we shared same instance of SegmentReader w/ first reader:\n    assertTrue(r1.leaves().get(0).reader() == r2.leaves().get(0).reader());\n    r1.close();\n    r2.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenNRTReaderOnCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testReopenNRTReaderOnCommit().mjava","sourceNew":"  // LUCENE-5912: make sure when you reopen an NRT reader using a commit point, the SegmentReaders are in fact shared:\n  public void testReopenNRTReaderOnCommit() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.addDocument(new Document());\n\n    // Pull NRT reader; it has 1 segment:\n    DirectoryReader r1 = DirectoryReader.open(w);\n    assertEquals(1, r1.leaves().size());\n    w.addDocument(new Document());\n    w.commit();\n\n    List<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    assertEquals(1, commits.size());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r1, commits.get(0));\n    assertEquals(2, r2.leaves().size());\n\n    // Make sure we shared same instance of SegmentReader w/ first reader:\n    assertTrue(r1.leaves().get(0).reader() == r2.leaves().get(0).reader());\n    r1.close();\n    r2.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5912: make sure when you reopen an NRT reader using a commit point, the SegmentReaders are in fact shared:\n  public void testReopenNRTReaderOnCommit() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    w.addDocument(new Document());\n\n    // Pull NRT reader; it has 1 segment:\n    DirectoryReader r1 = DirectoryReader.open(w, true);\n    assertEquals(1, r1.leaves().size());\n    w.addDocument(new Document());\n    w.commit();\n\n    List<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    assertEquals(1, commits.size());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r1, commits.get(0));\n    assertEquals(2, r2.leaves().size());\n\n    // Make sure we shared same instance of SegmentReader w/ first reader:\n    assertTrue(r1.leaves().get(0).reader() == r2.leaves().get(0).reader());\n    r1.close();\n    r2.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54d58aa833f7bfc07c8a1b2131760619f266c0c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a1862266772deb28cdcb7d996b64d2177022687":["54d58aa833f7bfc07c8a1b2131760619f266c0c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a1862266772deb28cdcb7d996b64d2177022687"]},"commit2Childs":{"54d58aa833f7bfc07c8a1b2131760619f266c0c9":["2a1862266772deb28cdcb7d996b64d2177022687"],"2a1862266772deb28cdcb7d996b64d2177022687":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54d58aa833f7bfc07c8a1b2131760619f266c0c9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}