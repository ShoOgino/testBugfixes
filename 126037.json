{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","sourceNew":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(d((6,7)))/1.0(0,100)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","sourceOld":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(d((6,7)))/1.0(0,100)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"765471a9091dc4cb586cf8db5ed0d9c40f534e8e","date":1285603829,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","sourceNew":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(d((9,10)))/1.0(3,103)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","sourceOld":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(d((6,7)))/1.0(0,100)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","sourceNew":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(d((9,10)))/1.0(3,103)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","sourceOld":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(d((6,7)))/1.0(0,100)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfd4f46d3dc08bd6050ea2d0e583743c0177ece7","date":1306553978,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","sourceNew":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( \"subInfos=(d((9,10)))/1.0(3,103)\", ffl.getFragInfos().get( 0 ).toString() );\n  }\n\n","sourceOld":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(d((9,10)))/1.0(3,103)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","sourceNew":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( \"subInfos=(d((9,10)))/1.0(3,103)\", ffl.getFragInfos().get( 0 ).toString() );\n  }\n\n","sourceOld":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(d((9,10)))/1.0(3,103)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","sourceNew":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( \"subInfos=(d((9,10)))/1.0(3,103)\", ffl.getFragInfos().get( 0 ).toString() );\n  }\n\n","sourceOld":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(d((9,10)))/1.0(3,103)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseShortMV().mjava","sourceNew":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( \"subInfos=(d((9,10)))/1.0(3,103)\", ffl.getFragInfos().get( 0 ).toString() );\n  }\n\n","sourceOld":"  public void test1PhraseShortMV() throws Exception {\n    makeIndexShortMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"d\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( \"subInfos=(d((9,10)))/1.0(3,103)\", ffl.getFragInfos().get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["bfd4f46d3dc08bd6050ea2d0e583743c0177ece7"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["765471a9091dc4cb586cf8db5ed0d9c40f534e8e","bfd4f46d3dc08bd6050ea2d0e583743c0177ece7"],"bfd4f46d3dc08bd6050ea2d0e583743c0177ece7":["765471a9091dc4cb586cf8db5ed0d9c40f534e8e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af","765471a9091dc4cb586cf8db5ed0d9c40f534e8e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"765471a9091dc4cb586cf8db5ed0d9c40f534e8e":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["765471a9091dc4cb586cf8db5ed0d9c40f534e8e","bfd4f46d3dc08bd6050ea2d0e583743c0177ece7"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","765471a9091dc4cb586cf8db5ed0d9c40f534e8e"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"bfd4f46d3dc08bd6050ea2d0e583743c0177ece7":["b89678825b68eccaf09e6ab71675fc0b0af1e099","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"765471a9091dc4cb586cf8db5ed0d9c40f534e8e":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","bfd4f46d3dc08bd6050ea2d0e583743c0177ece7","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}