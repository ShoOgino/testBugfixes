{"path":"solr/core/src/java/org/apache/solr/cloud/Assign#assignNode(String,ClusterState).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Assign#assignNode(String,ClusterState).mjava","pathOld":"/dev/null","sourceNew":"  public static String assignNode(String collection, ClusterState state) {\n    Map<String, Slice> sliceMap = state.getSlicesMap(collection);\n    if (sliceMap == null) {\n      return \"core_node1\";\n    }\n\n    int max = 0;\n    for (Slice slice : sliceMap.values()) {\n      for (Replica replica : slice.getReplicas()) {\n        Matcher m = COUNT.matcher(replica.getName());\n        if (m.matches()) {\n          max = Math.max(max, Integer.parseInt(m.group(1)));\n        }\n      }\n    }\n\n    return \"core_node\" + (max + 1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Assign#assignNode(String,ClusterState).mjava","pathOld":"/dev/null","sourceNew":"  public static String assignNode(String collection, ClusterState state) {\n    Map<String, Slice> sliceMap = state.getSlicesMap(collection);\n    if (sliceMap == null) {\n      return \"core_node1\";\n    }\n\n    int max = 0;\n    for (Slice slice : sliceMap.values()) {\n      for (Replica replica : slice.getReplicas()) {\n        Matcher m = COUNT.matcher(replica.getName());\n        if (m.matches()) {\n          max = Math.max(max, Integer.parseInt(m.group(1)));\n        }\n      }\n    }\n\n    return \"core_node\" + (max + 1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04c8df3f10a676c3de5dbf390f17a2de2d45cacd","date":1461615626,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Assign#assignNode(DocCollection).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Assign#assignNode(String,ClusterState).mjava","sourceNew":"  public static String assignNode(DocCollection collection) {\n    Map<String, Slice> sliceMap = collection != null ? collection.getSlicesMap() : null;\n    if (sliceMap == null) {\n      return \"core_node1\";\n    }\n\n    int max = 0;\n    for (Slice slice : sliceMap.values()) {\n      for (Replica replica : slice.getReplicas()) {\n        Matcher m = COUNT.matcher(replica.getName());\n        if (m.matches()) {\n          max = Math.max(max, Integer.parseInt(m.group(1)));\n        }\n      }\n    }\n\n    return \"core_node\" + (max + 1);\n  }\n\n","sourceOld":"  public static String assignNode(String collection, ClusterState state) {\n    Map<String, Slice> sliceMap = state.getSlicesMap(collection);\n    if (sliceMap == null) {\n      return \"core_node1\";\n    }\n\n    int max = 0;\n    for (Slice slice : sliceMap.values()) {\n      for (Replica replica : slice.getReplicas()) {\n        Matcher m = COUNT.matcher(replica.getName());\n        if (m.matches()) {\n          max = Math.max(max, Integer.parseInt(m.group(1)));\n        }\n      }\n    }\n\n    return \"core_node\" + (max + 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Assign#assignNode(DocCollection).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Assign#assignNode(String,ClusterState).mjava","sourceNew":"  public static String assignNode(DocCollection collection) {\n    Map<String, Slice> sliceMap = collection != null ? collection.getSlicesMap() : null;\n    if (sliceMap == null) {\n      return \"core_node1\";\n    }\n\n    int max = 0;\n    for (Slice slice : sliceMap.values()) {\n      for (Replica replica : slice.getReplicas()) {\n        Matcher m = COUNT.matcher(replica.getName());\n        if (m.matches()) {\n          max = Math.max(max, Integer.parseInt(m.group(1)));\n        }\n      }\n    }\n\n    return \"core_node\" + (max + 1);\n  }\n\n","sourceOld":"  public static String assignNode(String collection, ClusterState state) {\n    Map<String, Slice> sliceMap = state.getSlicesMap(collection);\n    if (sliceMap == null) {\n      return \"core_node1\";\n    }\n\n    int max = 0;\n    for (Slice slice : sliceMap.values()) {\n      for (Replica replica : slice.getReplicas()) {\n        Matcher m = COUNT.matcher(replica.getName());\n        if (m.matches()) {\n          max = Math.max(max, Integer.parseInt(m.group(1)));\n        }\n      }\n    }\n\n    return \"core_node\" + (max + 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["849494cf2f3a96af5c8c84995108ddd8456fcd04","04c8df3f10a676c3de5dbf390f17a2de2d45cacd"],"04c8df3f10a676c3de5dbf390f17a2de2d45cacd":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","f7f901826e47f75f810d7aae24b0455d21ea1fe2","04c8df3f10a676c3de5dbf390f17a2de2d45cacd"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"04c8df3f10a676c3de5dbf390f17a2de2d45cacd":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}