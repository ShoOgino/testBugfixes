{"path":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#handleIncompatibleValueType(FieldInfo,TypePromoter,TypePromoter).mjava","commits":[{"id":"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4","date":1318260487,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#handleIncompatibleValueType(FieldInfo,TypePromoter,TypePromoter).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Resolves a conflicts of incompatible {@link TypePromoter}s. The default\n   * implementation promotes incompatible types to\n   * {@link ValueType#BYTES_VAR_STRAIGHT} and preserves all values. If this\n   * method returns <code>null</code> all docvalues for the given\n   * {@link FieldInfo} are dropped and all values are lost.\n   * \n   * @param incomingPromoter\n   *          the incompatible incoming promoter\n   * @param currentPromoter\n   *          the current promoter\n   * @return a promoted {@link TypePromoter} or <code>null</code> iff this index\n   *         docvalues should be dropped for this field.\n   */\n  protected TypePromoter handleIncompatibleValueType(FieldInfo fieldInfo, TypePromoter incomingPromoter, TypePromoter currentPromoter) {\n    return TypePromoter.create(ValueType.BYTES_VAR_STRAIGHT, TypePromoter.VAR_TYPE_VALUE_SIZE);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23c3a6c2ecb0c99396936e72e8998df877ea9ad5","date":1323268151,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#handleIncompatibleValueType(FieldInfo,TypePromoter,TypePromoter).mjava","sourceNew":null,"sourceOld":"  /**\n   * Resolves a conflicts of incompatible {@link TypePromoter}s. The default\n   * implementation promotes incompatible types to\n   * {@link ValueType#BYTES_VAR_STRAIGHT} and preserves all values. If this\n   * method returns <code>null</code> all docvalues for the given\n   * {@link FieldInfo} are dropped and all values are lost.\n   * \n   * @param incomingPromoter\n   *          the incompatible incoming promoter\n   * @param currentPromoter\n   *          the current promoter\n   * @return a promoted {@link TypePromoter} or <code>null</code> iff this index\n   *         docvalues should be dropped for this field.\n   */\n  protected TypePromoter handleIncompatibleValueType(FieldInfo fieldInfo, TypePromoter incomingPromoter, TypePromoter currentPromoter) {\n    return TypePromoter.create(ValueType.BYTES_VAR_STRAIGHT, TypePromoter.VAR_TYPE_VALUE_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#handleIncompatibleValueType(FieldInfo,TypePromoter,TypePromoter).mjava","sourceNew":null,"sourceOld":"  /**\n   * Resolves a conflicts of incompatible {@link TypePromoter}s. The default\n   * implementation promotes incompatible types to\n   * {@link ValueType#BYTES_VAR_STRAIGHT} and preserves all values. If this\n   * method returns <code>null</code> all docvalues for the given\n   * {@link FieldInfo} are dropped and all values are lost.\n   * \n   * @param incomingPromoter\n   *          the incompatible incoming promoter\n   * @param currentPromoter\n   *          the current promoter\n   * @return a promoted {@link TypePromoter} or <code>null</code> iff this index\n   *         docvalues should be dropped for this field.\n   */\n  protected TypePromoter handleIncompatibleValueType(FieldInfo fieldInfo, TypePromoter incomingPromoter, TypePromoter currentPromoter) {\n    return TypePromoter.create(ValueType.BYTES_VAR_STRAIGHT, TypePromoter.VAR_TYPE_VALUE_SIZE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"23c3a6c2ecb0c99396936e72e8998df877ea9ad5":["32aca6bb0a6aa0a1813e7d035ac0e039f54269f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["32aca6bb0a6aa0a1813e7d035ac0e039f54269f4","23c3a6c2ecb0c99396936e72e8998df877ea9ad5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["32aca6bb0a6aa0a1813e7d035ac0e039f54269f4"],"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4":["23c3a6c2ecb0c99396936e72e8998df877ea9ad5","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"23c3a6c2ecb0c99396936e72e8998df877ea9ad5":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}