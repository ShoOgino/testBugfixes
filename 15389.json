{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/cz/TestCzechStemmer#testExceptions().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/cz/TestCzechStemmer#testExceptions().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechStemmer#testExceptions().mjava","sourceNew":"  /**\n   * Test some exceptional rules, implemented as rewrites.\n   */\n  public void testExceptions() throws IOException {\n    CzechAnalyzer cz = new CzechAnalyzer(TEST_VERSION_CURRENT);\n    \n    /* rewrite of št -> sk */\n    assertAnalyzesTo(cz, \"český\", new String[] { \"česk\" });\n    assertAnalyzesTo(cz, \"čeští\", new String[] { \"česk\" });\n    \n    /* rewrite of čt -> ck */\n    assertAnalyzesTo(cz, \"anglický\", new String[] { \"anglick\" });\n    assertAnalyzesTo(cz, \"angličtí\", new String[] { \"anglick\" });\n    \n    /* rewrite of z -> h */\n    assertAnalyzesTo(cz, \"kniha\", new String[] { \"knih\" });\n    assertAnalyzesTo(cz, \"knize\", new String[] { \"knih\" });\n    \n    /* rewrite of ž -> h */\n    assertAnalyzesTo(cz, \"mazat\", new String[] { \"mah\" });\n    assertAnalyzesTo(cz, \"mažu\", new String[] { \"mah\" });\n    \n    /* rewrite of c -> k */\n    assertAnalyzesTo(cz, \"kluk\", new String[] { \"kluk\" });\n    assertAnalyzesTo(cz, \"kluci\", new String[] { \"kluk\" });\n    assertAnalyzesTo(cz, \"klucích\", new String[] { \"kluk\" });\n    \n    /* rewrite of č -> k */\n    assertAnalyzesTo(cz, \"hezký\", new String[] { \"hezk\" });\n    assertAnalyzesTo(cz, \"hezčí\", new String[] { \"hezk\" });\n    \n    /* rewrite of *ů* -> *o* */\n    assertAnalyzesTo(cz, \"hůl\", new String[] { \"hol\" });\n    assertAnalyzesTo(cz, \"hole\", new String[] { \"hol\" });\n    \n    /* rewrite of e* -> * */\n    assertAnalyzesTo(cz, \"deska\", new String[] { \"desk\" });\n    assertAnalyzesTo(cz, \"desek\", new String[] { \"desk\" });\n  }\n\n","sourceOld":"  /**\n   * Test some exceptional rules, implemented as rewrites.\n   */\n  public void testExceptions() throws IOException {\n    CzechAnalyzer cz = new CzechAnalyzer(TEST_VERSION_CURRENT);\n    \n    /* rewrite of št -> sk */\n    assertAnalyzesTo(cz, \"český\", new String[] { \"česk\" });\n    assertAnalyzesTo(cz, \"čeští\", new String[] { \"česk\" });\n    \n    /* rewrite of čt -> ck */\n    assertAnalyzesTo(cz, \"anglický\", new String[] { \"anglick\" });\n    assertAnalyzesTo(cz, \"angličtí\", new String[] { \"anglick\" });\n    \n    /* rewrite of z -> h */\n    assertAnalyzesTo(cz, \"kniha\", new String[] { \"knih\" });\n    assertAnalyzesTo(cz, \"knize\", new String[] { \"knih\" });\n    \n    /* rewrite of ž -> h */\n    assertAnalyzesTo(cz, \"mazat\", new String[] { \"mah\" });\n    assertAnalyzesTo(cz, \"mažu\", new String[] { \"mah\" });\n    \n    /* rewrite of c -> k */\n    assertAnalyzesTo(cz, \"kluk\", new String[] { \"kluk\" });\n    assertAnalyzesTo(cz, \"kluci\", new String[] { \"kluk\" });\n    assertAnalyzesTo(cz, \"klucích\", new String[] { \"kluk\" });\n    \n    /* rewrite of č -> k */\n    assertAnalyzesTo(cz, \"hezký\", new String[] { \"hezk\" });\n    assertAnalyzesTo(cz, \"hezčí\", new String[] { \"hezk\" });\n    \n    /* rewrite of *ů* -> *o* */\n    assertAnalyzesTo(cz, \"hůl\", new String[] { \"hol\" });\n    assertAnalyzesTo(cz, \"hole\", new String[] { \"hol\" });\n    \n    /* rewrite of e* -> * */\n    assertAnalyzesTo(cz, \"deska\", new String[] { \"desk\" });\n    assertAnalyzesTo(cz, \"desek\", new String[] { \"desk\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/cz/TestCzechStemmer#testExceptions().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/cz/TestCzechStemmer#testExceptions().mjava","sourceNew":"  /**\n   * Test some exceptional rules, implemented as rewrites.\n   */\n  public void testExceptions() throws IOException {\n    CzechAnalyzer cz = new CzechAnalyzer(TEST_VERSION_CURRENT);\n    \n    /* rewrite of št -> sk */\n    assertAnalyzesTo(cz, \"český\", new String[] { \"česk\" });\n    assertAnalyzesTo(cz, \"čeští\", new String[] { \"česk\" });\n    \n    /* rewrite of čt -> ck */\n    assertAnalyzesTo(cz, \"anglický\", new String[] { \"anglick\" });\n    assertAnalyzesTo(cz, \"angličtí\", new String[] { \"anglick\" });\n    \n    /* rewrite of z -> h */\n    assertAnalyzesTo(cz, \"kniha\", new String[] { \"knih\" });\n    assertAnalyzesTo(cz, \"knize\", new String[] { \"knih\" });\n    \n    /* rewrite of ž -> h */\n    assertAnalyzesTo(cz, \"mazat\", new String[] { \"mah\" });\n    assertAnalyzesTo(cz, \"mažu\", new String[] { \"mah\" });\n    \n    /* rewrite of c -> k */\n    assertAnalyzesTo(cz, \"kluk\", new String[] { \"kluk\" });\n    assertAnalyzesTo(cz, \"kluci\", new String[] { \"kluk\" });\n    assertAnalyzesTo(cz, \"klucích\", new String[] { \"kluk\" });\n    \n    /* rewrite of č -> k */\n    assertAnalyzesTo(cz, \"hezký\", new String[] { \"hezk\" });\n    assertAnalyzesTo(cz, \"hezčí\", new String[] { \"hezk\" });\n    \n    /* rewrite of *ů* -> *o* */\n    assertAnalyzesTo(cz, \"hůl\", new String[] { \"hol\" });\n    assertAnalyzesTo(cz, \"hole\", new String[] { \"hol\" });\n    \n    /* rewrite of e* -> * */\n    assertAnalyzesTo(cz, \"deska\", new String[] { \"desk\" });\n    assertAnalyzesTo(cz, \"desek\", new String[] { \"desk\" });\n  }\n\n","sourceOld":"  /**\n   * Test some exceptional rules, implemented as rewrites.\n   */\n  public void testExceptions() throws IOException {\n    CzechAnalyzer cz = new CzechAnalyzer(TEST_VERSION_CURRENT);\n    \n    /* rewrite of št -> sk */\n    assertAnalyzesTo(cz, \"český\", new String[] { \"česk\" });\n    assertAnalyzesTo(cz, \"čeští\", new String[] { \"česk\" });\n    \n    /* rewrite of čt -> ck */\n    assertAnalyzesTo(cz, \"anglický\", new String[] { \"anglick\" });\n    assertAnalyzesTo(cz, \"angličtí\", new String[] { \"anglick\" });\n    \n    /* rewrite of z -> h */\n    assertAnalyzesTo(cz, \"kniha\", new String[] { \"knih\" });\n    assertAnalyzesTo(cz, \"knize\", new String[] { \"knih\" });\n    \n    /* rewrite of ž -> h */\n    assertAnalyzesTo(cz, \"mazat\", new String[] { \"mah\" });\n    assertAnalyzesTo(cz, \"mažu\", new String[] { \"mah\" });\n    \n    /* rewrite of c -> k */\n    assertAnalyzesTo(cz, \"kluk\", new String[] { \"kluk\" });\n    assertAnalyzesTo(cz, \"kluci\", new String[] { \"kluk\" });\n    assertAnalyzesTo(cz, \"klucích\", new String[] { \"kluk\" });\n    \n    /* rewrite of č -> k */\n    assertAnalyzesTo(cz, \"hezký\", new String[] { \"hezk\" });\n    assertAnalyzesTo(cz, \"hezčí\", new String[] { \"hezk\" });\n    \n    /* rewrite of *ů* -> *o* */\n    assertAnalyzesTo(cz, \"hůl\", new String[] { \"hol\" });\n    assertAnalyzesTo(cz, \"hole\", new String[] { \"hol\" });\n    \n    /* rewrite of e* -> * */\n    assertAnalyzesTo(cz, \"deska\", new String[] { \"desk\" });\n    assertAnalyzesTo(cz, \"desek\", new String[] { \"desk\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}