{"path":"lucene/test-framework/src/java/org/apache/lucene/geo/ShapeTestUtil#nextPolygon().mjava","commits":[{"id":"0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04","date":1582280790,"type":1,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/ShapeTestUtil#nextPolygon().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/ShapeTestUtil#nextPolygon().mjava","sourceNew":"  /** returns next pseudorandom polygon */\n  public static XYPolygon nextPolygon() {\n    Random random = random();\n    if (random.nextBoolean()) {\n      return surpriseMePolygon(random);\n    } else if (LuceneTestCase.TEST_NIGHTLY && random.nextInt(10) == 1) {\n      // this poly is slow to create ... only do it 10% of the time:\n      while (true) {\n        int gons = TestUtil.nextInt(random, 4, 500);\n        // So the poly can cover at most 50% of the earth's surface:\n        double radius = random.nextDouble() * 0.5 * Float.MAX_VALUE + 1.0;\n        try {\n          return createRegularPolygon(nextFloat(random), nextFloat(random), radius, gons);\n        } catch (IllegalArgumentException iae) {\n          // something went wrong, try again\n        }\n      }\n    }\n\n    XYRectangle box = nextBox(random);\n    if (random.nextBoolean()) {\n      // box\n      return boxPolygon(box);\n    } else {\n      // triangle\n      return trianglePolygon(box);\n    }\n  }\n\n","sourceOld":"  /** returns next pseudorandom polygon */\n  public static XYPolygon nextPolygon() {\n    Random random = random();\n    if (random.nextBoolean()) {\n      return surpriseMePolygon(random);\n    } else if (LuceneTestCase.TEST_NIGHTLY && random.nextInt(10) == 1) {\n      // this poly is slow to create ... only do it 10% of the time:\n      while (true) {\n        int gons = TestUtil.nextInt(random, 4, 500);\n        // So the poly can cover at most 50% of the earth's surface:\n        double radius = random.nextDouble() * 0.5 * Float.MAX_VALUE + 1.0;\n        try {\n          return createRegularPolygon(nextFloat(random), nextFloat(random), radius, gons);\n        } catch (IllegalArgumentException iae) {\n          // we tried to cross dateline or pole ... try again\n        }\n      }\n    }\n\n    XYRectangle box = nextBox(random);\n    if (random.nextBoolean()) {\n      // box\n      return boxPolygon(box);\n    } else {\n      // triangle\n      return trianglePolygon(box);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04"],"0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}