{"path":"src/test-deprecated/org/apache/lucene/util/TestPriorityQueue#testPQ(int).mjava","commits":[{"id":"5b5461affe637a07375542c763a4805300802be8","date":1102270918,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test-deprecated/org/apache/lucene/util/TestPriorityQueue#testPQ(int).mjava","pathOld":"/dev/null","sourceNew":"    public static void testPQ(int count)\n    {\n\tPriorityQueue pq = new IntegerQueue(count);\n\tRandom gen = new Random();\n\tint sum = 0, sum2 = 0;\n\n\tDate start = new Date();\n\n\tfor (int i = 0; i < count; i++)\n\t{\n\t    int next = gen.nextInt();\n\t    sum += next;\n\t    pq.put(new Integer(next));\n\t}\n\n\t//      Date end = new Date();\n\n\t//      System.out.print(((float)(end.getTime()-start.getTime()) / count) * 1000);\n\t//      System.out.println(\" microseconds/put\");\n\n\t//      start = new Date();\n\n\tint last = Integer.MIN_VALUE;\n\tfor (int i = 0; i < count; i++)\n\t{\n\t    Integer next = (Integer)pq.pop();\n\t    assertTrue(next.intValue() >= last);\n\t    last = next.intValue();\n\t    sum2 += last;\n\t}\n\n\tassertEquals(sum, sum2);\n\t//      end = new Date();\n\n\t//      System.out.print(((float)(end.getTime()-start.getTime()) / count) * 1000);\n\t//      System.out.println(\" microseconds/pop\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test-deprecated/org/apache/lucene/util/TestPriorityQueue#testPQ(int).mjava","sourceNew":null,"sourceOld":"    public static void testPQ(int count)\n    {\n\tPriorityQueue pq = new IntegerQueue(count);\n\tRandom gen = new Random();\n\tint sum = 0, sum2 = 0;\n\n\tDate start = new Date();\n\n\tfor (int i = 0; i < count; i++)\n\t{\n\t    int next = gen.nextInt();\n\t    sum += next;\n\t    pq.put(new Integer(next));\n\t}\n\n\t//      Date end = new Date();\n\n\t//      System.out.print(((float)(end.getTime()-start.getTime()) / count) * 1000);\n\t//      System.out.println(\" microseconds/put\");\n\n\t//      start = new Date();\n\n\tint last = Integer.MIN_VALUE;\n\tfor (int i = 0; i < count; i++)\n\t{\n\t    Integer next = (Integer)pq.pop();\n\t    assertTrue(next.intValue() >= last);\n\t    last = next.intValue();\n\t    sum2 += last;\n\t}\n\n\tassertEquals(sum, sum2);\n\t//      end = new Date();\n\n\t//      System.out.print(((float)(end.getTime()-start.getTime()) / count) * 1000);\n\t//      System.out.println(\" microseconds/pop\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b5461affe637a07375542c763a4805300802be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["5b5461affe637a07375542c763a4805300802be8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"5b5461affe637a07375542c763a4805300802be8":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b5461affe637a07375542c763a4805300802be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}