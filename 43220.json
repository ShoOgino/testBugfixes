{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = delegate.tokenStream(fieldName, reader);\n    HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(result, stopWords);\n    }\n    return result;\n  }\n\n","sourceOld":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = delegate.tokenStream(fieldName, reader);\n    HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(result, stopWords);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18359c8e12d55f66c27cfe7babe86283f06a6aa5","date":1250426225,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(result, stopWords);\n    }\n    return result;\n  }\n\n","sourceOld":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result = delegate.tokenStream(fieldName, reader);\n    HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(result, stopWords);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(false, result, stopWords);\n    }\n    return result;\n  }\n\n","sourceOld":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(result, stopWords);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                              result, stopWords);\n    }\n    return result;\n  }\n\n","sourceOld":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(false, result, stopWords);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                              result, stopWords);\n    }\n    return result;\n  }\n\n","sourceOld":"  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                              result, stopWords);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60cdc0e643184821eb066795a8791cd82559f46e","date":1257941914,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet<String> stopWords = stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                              result, stopWords);\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet stopWords = (HashSet) stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                              result, stopWords);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet<String> stopWords = stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet<String> stopWords = stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(StopFilter.getEnablePositionIncrementsVersionDefault(matchVersion),\n                              result, stopWords);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet<String> stopWords = stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public TokenStream tokenStream(String fieldName, Reader reader) {\n    TokenStream result;\n    try {\n      result = delegate.reusableTokenStream(fieldName, reader);\n    } catch (IOException e) {\n      result = delegate.tokenStream(fieldName, reader);\n    }\n    HashSet<String> stopWords = stopWordsPerField.get(fieldName);\n    if (stopWords != null) {\n      result = new StopFilter(matchVersion, result, stopWords);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60cdc0e643184821eb066795a8791cd82559f46e":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["ba1116b3450a9c1642c89445d131b37344055245"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["60cdc0e643184821eb066795a8791cd82559f46e"],"ba1116b3450a9c1642c89445d131b37344055245":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"]},"commit2Childs":{"60cdc0e643184821eb066795a8791cd82559f46e":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["18359c8e12d55f66c27cfe7babe86283f06a6aa5"],"18359c8e12d55f66c27cfe7babe86283f06a6aa5":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["60cdc0e643184821eb066795a8791cd82559f46e"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["ba1116b3450a9c1642c89445d131b37344055245"],"ba1116b3450a9c1642c89445d131b37344055245":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}