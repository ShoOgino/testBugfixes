{"path":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollateExtendedResultsWithJsonNl().mjava","commits":[{"id":"a56b3edca848faae113d4893e2864ede8549fdea","date":1484668551,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollateExtendedResultsWithJsonNl().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCollateExtendedResultsWithJsonNl() throws Exception {\n    final String q = \"documemtsss broens\";\n    final String jsonNl = \"map\";\n    final boolean collateExtendedResults = random().nextBoolean();\n    final List<String> testsList = new ArrayList<String>();\n    if (collateExtendedResults) {\n      testsList.add(\"/spellcheck/collations/collation/collationQuery=='document brown'\");\n      testsList.add(\"/spellcheck/collations/collation/hits==0\");\n      switch (jsonNl) {\n        case \"map\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/documemtsss=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/broens=='brown'\");\n          break;\n        default:\n          fail(\"unexpected json.nl choice: \"+jsonNl);\n          break;\n      }\n    } else {\n      testsList.add(\"/spellcheck/collations/collation=='document brown'\");\n    }\n    final String[] testsArray = new String[testsList.size()];\n    implTestCollateExtendedResultsWithJsonNl(q, jsonNl, collateExtendedResults, testsList.toArray(testsArray));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollateExtendedResultsWithJsonNl().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCollateExtendedResultsWithJsonNl() throws Exception {\n    final String q = \"documemtsss broens\";\n    final String jsonNl = \"map\";\n    final boolean collateExtendedResults = random().nextBoolean();\n    final List<String> testsList = new ArrayList<String>();\n    if (collateExtendedResults) {\n      testsList.add(\"/spellcheck/collations/collation/collationQuery=='document brown'\");\n      testsList.add(\"/spellcheck/collations/collation/hits==0\");\n      switch (jsonNl) {\n        case \"map\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/documemtsss=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/broens=='brown'\");\n          break;\n        default:\n          fail(\"unexpected json.nl choice: \"+jsonNl);\n          break;\n      }\n    } else {\n      testsList.add(\"/spellcheck/collations/collation=='document brown'\");\n    }\n    final String[] testsArray = new String[testsList.size()];\n    implTestCollateExtendedResultsWithJsonNl(q, jsonNl, collateExtendedResults, testsList.toArray(testsArray));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"862753d1e2f4853f389dcb115747661e7bc0e384","date":1485438193,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollateExtendedResultsWithJsonNl().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollateExtendedResultsWithJsonNl().mjava","sourceNew":"  @Test\n  public void testCollateExtendedResultsWithJsonNl() throws Exception {\n    final String q = \"documemtsss broens\";\n    final String jsonNl = (random().nextBoolean() ? \"map\" : \"arrntv\");\n    final boolean collateExtendedResults = random().nextBoolean();\n    final List<String> testsList = new ArrayList<String>();\n    if (collateExtendedResults) {\n      testsList.add(\"/spellcheck/collations/collation/collationQuery=='document brown'\");\n      testsList.add(\"/spellcheck/collations/collation/hits==0\");\n      switch (jsonNl) {\n        case \"arrntv\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/name=='documemtsss'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/type=='str'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/value=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/name=='broens'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/type=='str'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/value=='brown'\");\n          break;\n        case \"map\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/documemtsss=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/broens=='brown'\");\n          break;\n        default:\n          fail(\"unexpected json.nl choice: \"+jsonNl);\n          break;\n      }\n    } else {\n      testsList.add(\"/spellcheck/collations/collation=='document brown'\");\n    }\n    final String[] testsArray = new String[testsList.size()];\n    implTestCollateExtendedResultsWithJsonNl(q, jsonNl, collateExtendedResults, testsList.toArray(testsArray));\n  }\n\n","sourceOld":"  @Test\n  public void testCollateExtendedResultsWithJsonNl() throws Exception {\n    final String q = \"documemtsss broens\";\n    final String jsonNl = \"map\";\n    final boolean collateExtendedResults = random().nextBoolean();\n    final List<String> testsList = new ArrayList<String>();\n    if (collateExtendedResults) {\n      testsList.add(\"/spellcheck/collations/collation/collationQuery=='document brown'\");\n      testsList.add(\"/spellcheck/collations/collation/hits==0\");\n      switch (jsonNl) {\n        case \"map\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/documemtsss=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/broens=='brown'\");\n          break;\n        default:\n          fail(\"unexpected json.nl choice: \"+jsonNl);\n          break;\n      }\n    } else {\n      testsList.add(\"/spellcheck/collations/collation=='document brown'\");\n    }\n    final String[] testsArray = new String[testsList.size()];\n    implTestCollateExtendedResultsWithJsonNl(q, jsonNl, collateExtendedResults, testsList.toArray(testsArray));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollateExtendedResultsWithJsonNl().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollateExtendedResultsWithJsonNl().mjava","sourceNew":"  @Test\n  public void testCollateExtendedResultsWithJsonNl() throws Exception {\n    final String q = \"documemtsss broens\";\n    final String jsonNl = (random().nextBoolean() ? \"map\" : \"arrntv\");\n    final boolean collateExtendedResults = random().nextBoolean();\n    final List<String> testsList = new ArrayList<String>();\n    if (collateExtendedResults) {\n      testsList.add(\"/spellcheck/collations/collation/collationQuery=='document brown'\");\n      testsList.add(\"/spellcheck/collations/collation/hits==0\");\n      switch (jsonNl) {\n        case \"arrntv\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/name=='documemtsss'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/type=='str'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/value=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/name=='broens'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/type=='str'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/value=='brown'\");\n          break;\n        case \"map\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/documemtsss=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/broens=='brown'\");\n          break;\n        default:\n          fail(\"unexpected json.nl choice: \"+jsonNl);\n          break;\n      }\n    } else {\n      testsList.add(\"/spellcheck/collations/collation=='document brown'\");\n    }\n    final String[] testsArray = new String[testsList.size()];\n    implTestCollateExtendedResultsWithJsonNl(q, jsonNl, collateExtendedResults, testsList.toArray(testsArray));\n  }\n\n","sourceOld":"  @Test\n  public void testCollateExtendedResultsWithJsonNl() throws Exception {\n    final String q = \"documemtsss broens\";\n    final String jsonNl = \"map\";\n    final boolean collateExtendedResults = random().nextBoolean();\n    final List<String> testsList = new ArrayList<String>();\n    if (collateExtendedResults) {\n      testsList.add(\"/spellcheck/collations/collation/collationQuery=='document brown'\");\n      testsList.add(\"/spellcheck/collations/collation/hits==0\");\n      switch (jsonNl) {\n        case \"map\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/documemtsss=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/broens=='brown'\");\n          break;\n        default:\n          fail(\"unexpected json.nl choice: \"+jsonNl);\n          break;\n      }\n    } else {\n      testsList.add(\"/spellcheck/collations/collation=='document brown'\");\n    }\n    final String[] testsArray = new String[testsList.size()];\n    implTestCollateExtendedResultsWithJsonNl(q, jsonNl, collateExtendedResults, testsList.toArray(testsArray));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"374570062523b2011ca513a2276525ff3ddf222d","date":1494268002,"type":3,"author":"jdyer1","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollateExtendedResultsWithJsonNl().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollateExtendedResultsWithJsonNl().mjava","sourceNew":"  @Test\n  public void testCollateExtendedResultsWithJsonNl() throws Exception {\n    final String q = \"documemtsss broens\";\n    final String jsonNl = \"map\";\n    final boolean collateExtendedResults = random().nextBoolean();\n    final List<String> testsList = new ArrayList<String>();\n    if (collateExtendedResults) {\n      testsList.add(\"/spellcheck/collations/collation/collationQuery=='document brown'\");\n      testsList.add(\"/spellcheck/collations/collation/hits==0\");\n      switch (jsonNl) {\n        case \"map\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/documemtsss=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/broens=='brown'\");\n          break;\n        default:\n          fail(\"unexpected json.nl choice: \"+jsonNl);\n          break;\n      }\n    } else {\n      testsList.add(\"/spellcheck/collations/collation=='document brown'\");\n    }\n    final String[] testsArray = new String[testsList.size()];\n    implTestCollateExtendedResultsWithJsonNl(q, jsonNl, collateExtendedResults, testsList.toArray(testsArray));\n  }\n\n","sourceOld":"  @Test\n  public void testCollateExtendedResultsWithJsonNl() throws Exception {\n    final String q = \"documemtsss broens\";\n    final String jsonNl = (random().nextBoolean() ? \"map\" : \"arrntv\");\n    final boolean collateExtendedResults = random().nextBoolean();\n    final List<String> testsList = new ArrayList<String>();\n    if (collateExtendedResults) {\n      testsList.add(\"/spellcheck/collations/collation/collationQuery=='document brown'\");\n      testsList.add(\"/spellcheck/collations/collation/hits==0\");\n      switch (jsonNl) {\n        case \"arrntv\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/name=='documemtsss'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/type=='str'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/value=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/name=='broens'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/type=='str'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/value=='brown'\");\n          break;\n        case \"map\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/documemtsss=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/broens=='brown'\");\n          break;\n        default:\n          fail(\"unexpected json.nl choice: \"+jsonNl);\n          break;\n      }\n    } else {\n      testsList.add(\"/spellcheck/collations/collation=='document brown'\");\n    }\n    final String[] testsArray = new String[testsList.size()];\n    implTestCollateExtendedResultsWithJsonNl(q, jsonNl, collateExtendedResults, testsList.toArray(testsArray));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollateExtendedResultsWithJsonNl().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testCollateExtendedResultsWithJsonNl().mjava","sourceNew":"  @Test\n  public void testCollateExtendedResultsWithJsonNl() throws Exception {\n    final String q = \"documemtsss broens\";\n    final String jsonNl = \"map\";\n    final boolean collateExtendedResults = random().nextBoolean();\n    final List<String> testsList = new ArrayList<String>();\n    if (collateExtendedResults) {\n      testsList.add(\"/spellcheck/collations/collation/collationQuery=='document brown'\");\n      testsList.add(\"/spellcheck/collations/collation/hits==0\");\n      switch (jsonNl) {\n        case \"map\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/documemtsss=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/broens=='brown'\");\n          break;\n        default:\n          fail(\"unexpected json.nl choice: \"+jsonNl);\n          break;\n      }\n    } else {\n      testsList.add(\"/spellcheck/collations/collation=='document brown'\");\n    }\n    final String[] testsArray = new String[testsList.size()];\n    implTestCollateExtendedResultsWithJsonNl(q, jsonNl, collateExtendedResults, testsList.toArray(testsArray));\n  }\n\n","sourceOld":"  @Test\n  public void testCollateExtendedResultsWithJsonNl() throws Exception {\n    final String q = \"documemtsss broens\";\n    final String jsonNl = (random().nextBoolean() ? \"map\" : \"arrntv\");\n    final boolean collateExtendedResults = random().nextBoolean();\n    final List<String> testsList = new ArrayList<String>();\n    if (collateExtendedResults) {\n      testsList.add(\"/spellcheck/collations/collation/collationQuery=='document brown'\");\n      testsList.add(\"/spellcheck/collations/collation/hits==0\");\n      switch (jsonNl) {\n        case \"arrntv\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/name=='documemtsss'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/type=='str'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[0]/value=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/name=='broens'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/type=='str'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/[1]/value=='brown'\");\n          break;\n        case \"map\":\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/documemtsss=='document'\");\n          testsList.add(\"/spellcheck/collations/collation/misspellingsAndCorrections/broens=='brown'\");\n          break;\n        default:\n          fail(\"unexpected json.nl choice: \"+jsonNl);\n          break;\n      }\n    } else {\n      testsList.add(\"/spellcheck/collations/collation=='document brown'\");\n    }\n    final String[] testsArray = new String[testsList.size()];\n    implTestCollateExtendedResultsWithJsonNl(q, jsonNl, collateExtendedResults, testsList.toArray(testsArray));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"374570062523b2011ca513a2276525ff3ddf222d":["862753d1e2f4853f389dcb115747661e7bc0e384"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["862753d1e2f4853f389dcb115747661e7bc0e384","374570062523b2011ca513a2276525ff3ddf222d"],"862753d1e2f4853f389dcb115747661e7bc0e384":["a56b3edca848faae113d4893e2864ede8549fdea"],"a56b3edca848faae113d4893e2864ede8549fdea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["302d34f2c66e8d489ee13078305c330cbf67b226","862753d1e2f4853f389dcb115747661e7bc0e384"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["374570062523b2011ca513a2276525ff3ddf222d"],"302d34f2c66e8d489ee13078305c330cbf67b226":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a56b3edca848faae113d4893e2864ede8549fdea"]},"commit2Childs":{"374570062523b2011ca513a2276525ff3ddf222d":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"862753d1e2f4853f389dcb115747661e7bc0e384":["374570062523b2011ca513a2276525ff3ddf222d","e9017cf144952056066919f1ebc7897ff9bd71b1","598b5d23aa7c9732bf473c21a9cd309c44599394"],"a56b3edca848faae113d4893e2864ede8549fdea":["862753d1e2f4853f389dcb115747661e7bc0e384","302d34f2c66e8d489ee13078305c330cbf67b226"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a56b3edca848faae113d4893e2864ede8549fdea","302d34f2c66e8d489ee13078305c330cbf67b226"],"302d34f2c66e8d489ee13078305c330cbf67b226":["598b5d23aa7c9732bf473c21a9cd309c44599394"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}