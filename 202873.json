{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.LazyCollectionRef#get().mjava","commits":[{"id":"8bf04c3f77a2936f29948b9c0dd215d82d43f5cf","date":1440482195,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.LazyCollectionRef#get().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public DocCollection get() {\n      // TODO: consider limited caching\n      return getCollectionLive(ZkStateReader.this, collName);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9eee76c6a8ac63dd88a66571d553973ea0a1131","date":1480015269,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.LazyCollectionRef#get().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.LazyCollectionRef#get().mjava","sourceNew":"    @Override\n    public DocCollection get() {\n      gets.incrementAndGet();\n      // TODO: consider limited caching\n      return getCollectionLive(ZkStateReader.this, collName);\n    }\n\n","sourceOld":"    @Override\n    public DocCollection get() {\n      // TODO: consider limited caching\n      return getCollectionLive(ZkStateReader.this, collName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.LazyCollectionRef#get().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.LazyCollectionRef#get().mjava","sourceNew":"    @Override\n    public DocCollection get() {\n      gets.incrementAndGet();\n      // TODO: consider limited caching\n      return getCollectionLive(ZkStateReader.this, collName);\n    }\n\n","sourceOld":"    @Override\n    public DocCollection get() {\n      // TODO: consider limited caching\n      return getCollectionLive(ZkStateReader.this, collName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1d3b48c2588b3dcbb7f0c7d7682514f84e6e413","date":1519539873,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.LazyCollectionRef#get().mjava","sourceNew":null,"sourceOld":"    @Override\n    public DocCollection get() {\n      gets.incrementAndGet();\n      // TODO: consider limited caching\n      return getCollectionLive(ZkStateReader.this, collName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"727bb765ff2542275f6d31f67be18d7104bae148":["8bf04c3f77a2936f29948b9c0dd215d82d43f5cf","c9eee76c6a8ac63dd88a66571d553973ea0a1131"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8bf04c3f77a2936f29948b9c0dd215d82d43f5cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c1d3b48c2588b3dcbb7f0c7d7682514f84e6e413":["c9eee76c6a8ac63dd88a66571d553973ea0a1131"],"c9eee76c6a8ac63dd88a66571d553973ea0a1131":["8bf04c3f77a2936f29948b9c0dd215d82d43f5cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c1d3b48c2588b3dcbb7f0c7d7682514f84e6e413"]},"commit2Childs":{"727bb765ff2542275f6d31f67be18d7104bae148":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8bf04c3f77a2936f29948b9c0dd215d82d43f5cf"],"8bf04c3f77a2936f29948b9c0dd215d82d43f5cf":["727bb765ff2542275f6d31f67be18d7104bae148","c9eee76c6a8ac63dd88a66571d553973ea0a1131"],"c1d3b48c2588b3dcbb7f0c7d7682514f84e6e413":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9eee76c6a8ac63dd88a66571d553973ea0a1131":["727bb765ff2542275f6d31f67be18d7104bae148","c1d3b48c2588b3dcbb7f0c7d7682514f84e6e413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}