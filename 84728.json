{"path":"lucene/src/java/org/apache/lucene/index/CompositeReader#getSequentialSubReaders().mjava","commits":[{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeReader#getSequentialSubReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompositeIndexReader#getSequentialSubReaders().mjava","sourceNew":"  /** Expert: returns the sequential sub readers that this\n   *  reader is logically composed of. It contrast to previous\n   *  Lucene versions may not return null.\n   *  If this method returns an empty array, that means this\n   *  reader is a null reader (for example a MultiReader\n   *  that has no sub readers).\n   */\n  public abstract IndexReader[] getSequentialSubReaders();\n\n","sourceOld":"  /** Expert: returns the sequential sub readers that this\n   *  reader is logically composed of. It contrast to previous\n   *  Lucene versions may not return null.\n   *  If this method returns an empty array, that means this\n   *  reader is a null reader (for example a MultiReader\n   *  that has no sub readers).\n   */\n  public abstract IndexReader[] getSequentialSubReaders();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeReader#getSequentialSubReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#getSequentialSubReaders().mjava","sourceNew":"  /** Expert: returns the sequential sub readers that this\n   *  reader is logically composed of. It contrast to previous\n   *  Lucene versions may not return null.\n   *  If this method returns an empty array, that means this\n   *  reader is a null reader (for example a MultiReader\n   *  that has no sub readers).\n   */\n  public abstract IndexReader[] getSequentialSubReaders();\n\n","sourceOld":"  /** Expert: returns the sequential sub readers that this\n   *  reader is logically composed of. If this reader is not composed\n   *  of sequential child readers, it should return null.\n   *  If this method returns an empty array, that means this\n   *  reader is a null reader (for example a MultiReader\n   *  that has no sub readers).\n   */\n  public IndexReader[] getSequentialSubReaders() {\n    ensureOpen();\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CompositeReader#getSequentialSubReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompositeReader#getSequentialSubReaders().mjava","sourceNew":"  /** Expert: returns the sequential sub readers that this\n   *  reader is logically composed of. It contrast to previous\n   *  Lucene versions may not return null.\n   *  If this method returns an empty array, that means this\n   *  reader is a null reader (for example a MultiReader\n   *  that has no sub readers).\n   */\n  public abstract IndexReader[] getSequentialSubReaders();\n\n","sourceOld":"  /** Expert: returns the sequential sub readers that this\n   *  reader is logically composed of. It contrast to previous\n   *  Lucene versions may not return null.\n   *  If this method returns an empty array, that means this\n   *  reader is a null reader (for example a MultiReader\n   *  that has no sub readers).\n   */\n  public abstract IndexReader[] getSequentialSubReaders();\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"da6d5ac19a80d65b1e864251f155d30960353b7e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","da6d5ac19a80d65b1e864251f155d30960353b7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"da6d5ac19a80d65b1e864251f155d30960353b7e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da6d5ac19a80d65b1e864251f155d30960353b7e","5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}