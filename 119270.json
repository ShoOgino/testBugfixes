{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/query/SpatialArgsParser#parse(String,SpatialContext).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/query/SpatialArgsParser#parse(String,SpatialContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgsParser#parse(String,SpatialContext).mjava","sourceNew":"  /**\n   * Parses a string such as \"Intersects(ENVELOPE(-10,-8,22,20)) distErrPct=0.025\".\n   *\n   * @param v   The string to parse. Mandatory.\n   * @param ctx The spatial context. Mandatory.\n   * @return Not null.\n   * @throws IllegalArgumentException if the parameters don't make sense or an add-on parameter is unknown\n   * @throws ParseException If there is a problem parsing the string\n   * @throws InvalidShapeException When the coordinates are invalid for the shape\n   */\n  public SpatialArgs parse(String v, SpatialContext ctx) throws ParseException, InvalidShapeException {\n    int idx = v.indexOf('(');\n    int edx = v.lastIndexOf(')');\n\n    if (idx < 0 || idx > edx) {\n      throw new ParseException(\"missing parens: \" + v, -1);\n    }\n\n    SpatialOperation op = SpatialOperation.get(v.substring(0, idx).trim());\n\n    String body = v.substring(idx + 1, edx).trim();\n    if (body.length() < 1) {\n      throw new ParseException(\"missing body : \" + v, idx + 1);\n    }\n\n    Shape shape = parseShape(body, ctx);\n    SpatialArgs args = newSpatialArgs(op, shape);\n\n    if (v.length() > (edx + 1)) {\n      body = v.substring(edx + 1).trim();\n      if (body.length() > 0) {\n        Map<String, String> aa = parseMap(body);\n        readNameValuePairs(args, aa);\n        if (!aa.isEmpty()) {\n          throw new IllegalArgumentException(\"unused parameters: \" + aa);\n        }\n      }\n    }\n    args.validate();\n    return args;\n  }\n\n","sourceOld":"  /**\n   * Parses a string such as \"Intersects(ENVELOPE(-10,-8,22,20)) distErrPct=0.025\".\n   *\n   * @param v   The string to parse. Mandatory.\n   * @param ctx The spatial context. Mandatory.\n   * @return Not null.\n   * @throws IllegalArgumentException if the parameters don't make sense or an add-on parameter is unknown\n   * @throws ParseException If there is a problem parsing the string\n   * @throws InvalidShapeException When the coordinates are invalid for the shape\n   */\n  public SpatialArgs parse(String v, SpatialContext ctx) throws ParseException, InvalidShapeException {\n    int idx = v.indexOf('(');\n    int edx = v.lastIndexOf(')');\n\n    if (idx < 0 || idx > edx) {\n      throw new ParseException(\"missing parens: \" + v, -1);\n    }\n\n    SpatialOperation op = SpatialOperation.get(v.substring(0, idx).trim());\n\n    String body = v.substring(idx + 1, edx).trim();\n    if (body.length() < 1) {\n      throw new ParseException(\"missing body : \" + v, idx + 1);\n    }\n\n    Shape shape = parseShape(body, ctx);\n    SpatialArgs args = newSpatialArgs(op, shape);\n\n    if (v.length() > (edx + 1)) {\n      body = v.substring(edx + 1).trim();\n      if (body.length() > 0) {\n        Map<String, String> aa = parseMap(body);\n        readNameValuePairs(args, aa);\n        if (!aa.isEmpty()) {\n          throw new IllegalArgumentException(\"unused parameters: \" + aa);\n        }\n      }\n    }\n    args.validate();\n    return args;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/query/SpatialArgsParser#parse(String,SpatialContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgsParser#parse(String,SpatialContext).mjava","sourceNew":"  /**\n   * Parses a string such as \"Intersects(ENVELOPE(-10,-8,22,20)) distErrPct=0.025\".\n   *\n   * @param v   The string to parse. Mandatory.\n   * @param ctx The spatial context. Mandatory.\n   * @return Not null.\n   * @throws IllegalArgumentException if the parameters don't make sense or an add-on parameter is unknown\n   * @throws ParseException If there is a problem parsing the string\n   * @throws InvalidShapeException When the coordinates are invalid for the shape\n   */\n  public SpatialArgs parse(String v, SpatialContext ctx) throws ParseException, InvalidShapeException {\n    int idx = v.indexOf('(');\n    int edx = v.lastIndexOf(')');\n\n    if (idx < 0 || idx > edx) {\n      throw new ParseException(\"missing parens: \" + v, -1);\n    }\n\n    SpatialOperation op = SpatialOperation.get(v.substring(0, idx).trim());\n\n    String body = v.substring(idx + 1, edx).trim();\n    if (body.length() < 1) {\n      throw new ParseException(\"missing body : \" + v, idx + 1);\n    }\n\n    Shape shape = parseShape(body, ctx);\n    SpatialArgs args = newSpatialArgs(op, shape);\n\n    if (v.length() > (edx + 1)) {\n      body = v.substring(edx + 1).trim();\n      if (body.length() > 0) {\n        Map<String, String> aa = parseMap(body);\n        readNameValuePairs(args, aa);\n        if (!aa.isEmpty()) {\n          throw new IllegalArgumentException(\"unused parameters: \" + aa);\n        }\n      }\n    }\n    args.validate();\n    return args;\n  }\n\n","sourceOld":"  /**\n   * Parses a string such as \"Intersects(ENVELOPE(-10,-8,22,20)) distErrPct=0.025\".\n   *\n   * @param v   The string to parse. Mandatory.\n   * @param ctx The spatial context. Mandatory.\n   * @return Not null.\n   * @throws IllegalArgumentException if the parameters don't make sense or an add-on parameter is unknown\n   * @throws ParseException If there is a problem parsing the string\n   * @throws InvalidShapeException When the coordinates are invalid for the shape\n   */\n  public SpatialArgs parse(String v, SpatialContext ctx) throws ParseException, InvalidShapeException {\n    int idx = v.indexOf('(');\n    int edx = v.lastIndexOf(')');\n\n    if (idx < 0 || idx > edx) {\n      throw new ParseException(\"missing parens: \" + v, -1);\n    }\n\n    SpatialOperation op = SpatialOperation.get(v.substring(0, idx).trim());\n\n    String body = v.substring(idx + 1, edx).trim();\n    if (body.length() < 1) {\n      throw new ParseException(\"missing body : \" + v, idx + 1);\n    }\n\n    Shape shape = parseShape(body, ctx);\n    SpatialArgs args = newSpatialArgs(op, shape);\n\n    if (v.length() > (edx + 1)) {\n      body = v.substring(edx + 1).trim();\n      if (body.length() > 0) {\n        Map<String, String> aa = parseMap(body);\n        readNameValuePairs(args, aa);\n        if (!aa.isEmpty()) {\n          throw new IllegalArgumentException(\"unused parameters: \" + aa);\n        }\n      }\n    }\n    args.validate();\n    return args;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}