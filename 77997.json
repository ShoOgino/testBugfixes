{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#EntityRunner(DataConfig.Entity,EntityRunner).mjava","commits":[{"id":"65f4e997b946a4eadce22b758749046a63ba2eff","date":1263282580,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#EntityRunner(DataConfig.Entity,EntityRunner).mjava","pathOld":"/dev/null","sourceNew":"    public EntityRunner(DataConfig.Entity entity, EntityRunner parent) {\n      this.parent = parent;\n      this.entity = entity;\n      if (entity.proc == null) {\n        entityProcessor = new SqlEntityProcessor();\n      } else {\n        try {\n          entityProcessor = (EntityProcessor) loadClass(entity.proc, dataImporter.getCore())\n                  .newInstance();\n        } catch (Exception e) {\n          wrapAndThrow(SEVERE, e,\n                  \"Unable to load EntityProcessor implementation for entity:\" + entity.name);\n        } \n      }\n      int threads = 1;\n      if (entity.allAttributes.get(\"threads\") != null) {\n        threads = Integer.parseInt(entity.allAttributes.get(\"threads\"));\n      }\n      for (int i = 0; i < threads; i++) {\n        entityProcessorWrapper.add(new ThreadedEntityProcessorWrapper(entityProcessor, DocBuilder.this, this, getVariableResolver()));\n      }\n      context = new ThreadedContext(this, DocBuilder.this);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#EntityRunner(DataConfig.Entity,EntityRunner).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#EntityRunner(DataConfig.Entity,EntityRunner).mjava","sourceNew":"    public EntityRunner(DataConfig.Entity entity, EntityRunner parent) {\n      this.parent = parent;\n      this.entity = entity;\n      if (entity.proc == null) {\n        entityProcessor = new SqlEntityProcessor();\n      } else {\n        try {\n          entityProcessor = (EntityProcessor) loadClass(entity.proc, dataImporter.getCore())\n                  .newInstance();\n        } catch (Exception e) {\n          wrapAndThrow(SEVERE, e,\n                  \"Unable to load EntityProcessor implementation for entity:\" + entity.name);\n        } \n      }\n      int threads = 1;\n      if (entity.allAttributes.get(\"threads\") != null) {\n        threads = Integer.parseInt(entity.allAttributes.get(\"threads\"));\n      }\n      for (int i = 0; i < threads; i++) {\n        entityProcessorWrapper.add(new ThreadedEntityProcessorWrapper(entityProcessor, DocBuilder.this, this, getVariableResolver()));\n      }\n      context = new ThreadedContext(this, DocBuilder.this);\n    }\n\n","sourceOld":"    public EntityRunner(DataConfig.Entity entity, EntityRunner parent) {\n      this.parent = parent;\n      this.entity = entity;\n      if (entity.proc == null) {\n        entityProcessor = new SqlEntityProcessor();\n      } else {\n        try {\n          entityProcessor = (EntityProcessor) loadClass(entity.proc, dataImporter.getCore())\n                  .newInstance();\n        } catch (Exception e) {\n          wrapAndThrow(SEVERE, e,\n                  \"Unable to load EntityProcessor implementation for entity:\" + entity.name);\n        } \n      }\n      int threads = 1;\n      if (entity.allAttributes.get(\"threads\") != null) {\n        threads = Integer.parseInt(entity.allAttributes.get(\"threads\"));\n      }\n      for (int i = 0; i < threads; i++) {\n        entityProcessorWrapper.add(new ThreadedEntityProcessorWrapper(entityProcessor, DocBuilder.this, this, getVariableResolver()));\n      }\n      context = new ThreadedContext(this, DocBuilder.this);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65f4e997b946a4eadce22b758749046a63ba2eff":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["65f4e997b946a4eadce22b758749046a63ba2eff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"65f4e997b946a4eadce22b758749046a63ba2eff":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["65f4e997b946a4eadce22b758749046a63ba2eff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}