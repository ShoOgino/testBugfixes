{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","sourceNew":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","sourceNew":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ROOT, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","sourceNew":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ROOT, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","sourceNew":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ROOT, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","sourceNew":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ROOT, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ENGLISH, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","sourceNew":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        @Override\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ROOT, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ROOT, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#testConstructionTime().mjava","sourceNew":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        @Override\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ROOT, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Test construction time.\n   */\n  public void testConstructionTime() throws Exception {\n    System.err.println(\"-- construction time\");\n    for (final Class<? extends Lookup> cls : benchmarkClasses) {\n      BenchmarkResult result = measure(new Callable<Integer>() {\n        public Integer call() throws Exception {\n          final Lookup lookup = buildLookup(cls, dictionaryInput);          \n          return lookup.hashCode();\n        }\n      });\n\n      System.err.println(\n          String.format(Locale.ROOT, \"%-15s input: %d, time[ms]: %s\",\n              cls.getSimpleName(),\n              dictionaryInput.length,\n              result.average.toString()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["2acf500f78aa12b92e371fd89c719291986b6b90","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2acf500f78aa12b92e371fd89c719291986b6b90":["b89678825b68eccaf09e6ab71675fc0b0af1e099","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"7530de27b87b961b51f01bd1299b7004d46e8823":["2acf500f78aa12b92e371fd89c719291986b6b90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7530de27b87b961b51f01bd1299b7004d46e8823"],"46d8ada1fff8d18cb197c38c7983225162599948":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","7530de27b87b961b51f01bd1299b7004d46e8823","46d8ada1fff8d18cb197c38c7983225162599948"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}