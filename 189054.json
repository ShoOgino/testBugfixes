{"path":"src/test-deprecated/org/apache/lucene/document/TestDocument#doAssert(Document,boolean).mjava","commits":[{"id":"5b5461affe637a07375542c763a4805300802be8","date":1102270918,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test-deprecated/org/apache/lucene/document/TestDocument#doAssert(Document,boolean).mjava","pathOld":"/dev/null","sourceNew":"    private void doAssert(Document doc, boolean fromIndex)\n    {\n        String[] keywordFieldValues   = doc.getValues(\"keyword\");\n        String[] textFieldValues      = doc.getValues(\"text\");\n        String[] unindexedFieldValues = doc.getValues(\"unindexed\");\n        String[] unstoredFieldValues  = doc.getValues(\"unstored\");\n\n        assertTrue(keywordFieldValues.length   == 2);\n        assertTrue(textFieldValues.length      == 2);\n        assertTrue(unindexedFieldValues.length == 2);\n        // this test cannot work for documents retrieved from the index\n        // since unstored fields will obviously not be returned\n        if (! fromIndex)\n        {\n            assertTrue(unstoredFieldValues.length  == 2);\n        }\n\n        assertTrue(keywordFieldValues[0].equals(\"test1\"));\n        assertTrue(keywordFieldValues[1].equals(\"test2\"));\n        assertTrue(textFieldValues[0].equals(\"test1\"));\n        assertTrue(textFieldValues[1].equals(\"test2\"));\n        assertTrue(unindexedFieldValues[0].equals(\"test1\"));\n        assertTrue(unindexedFieldValues[1].equals(\"test2\"));\n        // this test cannot work for documents retrieved from the index\n        // since unstored fields will obviously not be returned\n        if (! fromIndex)\n        {\n            assertTrue(unstoredFieldValues[0].equals(\"test1\"));\n            assertTrue(unstoredFieldValues[1].equals(\"test2\"));\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test-deprecated/org/apache/lucene/document/TestDocument#doAssert(Document,boolean).mjava","sourceNew":null,"sourceOld":"    private void doAssert(Document doc, boolean fromIndex)\n    {\n        String[] keywordFieldValues   = doc.getValues(\"keyword\");\n        String[] textFieldValues      = doc.getValues(\"text\");\n        String[] unindexedFieldValues = doc.getValues(\"unindexed\");\n        String[] unstoredFieldValues  = doc.getValues(\"unstored\");\n\n        assertTrue(keywordFieldValues.length   == 2);\n        assertTrue(textFieldValues.length      == 2);\n        assertTrue(unindexedFieldValues.length == 2);\n        // this test cannot work for documents retrieved from the index\n        // since unstored fields will obviously not be returned\n        if (! fromIndex)\n        {\n            assertTrue(unstoredFieldValues.length  == 2);\n        }\n\n        assertTrue(keywordFieldValues[0].equals(\"test1\"));\n        assertTrue(keywordFieldValues[1].equals(\"test2\"));\n        assertTrue(textFieldValues[0].equals(\"test1\"));\n        assertTrue(textFieldValues[1].equals(\"test2\"));\n        assertTrue(unindexedFieldValues[0].equals(\"test1\"));\n        assertTrue(unindexedFieldValues[1].equals(\"test2\"));\n        // this test cannot work for documents retrieved from the index\n        // since unstored fields will obviously not be returned\n        if (! fromIndex)\n        {\n            assertTrue(unstoredFieldValues[0].equals(\"test1\"));\n            assertTrue(unstoredFieldValues[1].equals(\"test2\"));\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b5461affe637a07375542c763a4805300802be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["5b5461affe637a07375542c763a4805300802be8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"5b5461affe637a07375542c763a4805300802be8":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b5461affe637a07375542c763a4805300802be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}