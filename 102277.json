{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testDiskSpaceHint().mjava","commits":[{"id":"0b04413d237e43414609f041f50db04d553d686f","date":1515761310,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testDiskSpaceHint().mjava","pathOld":"/dev/null","sourceNew":"  public void testDiskSpaceHint() {\n\n    String dataproviderdata = \"{\" +\n        \"     liveNodes:[\" +\n        \"       '127.0.0.1:51078_solr',\" +\n        \"       '127.0.0.1:51147_solr'],\" +\n        \"     replicaInfo:{\" +\n        \"       '127.0.0.1:51147_solr':{},\" +\n        \"       '127.0.0.1:51078_solr':{testNodeAdded:{shard1:[\" +\n        \"             { core_node3 : { type : NRT}},\" +\n        \"             { core_node4 : { type : NRT}}]}}},\" +\n        \"     nodeValues:{\" +\n        \"       '127.0.0.1:51147_solr':{\" +\n        \"         node:'127.0.0.1:51147_solr',\" +\n        \"         cores:0,\" +\n        \"         freedisk : 100},\" +\n        \"       '127.0.0.1:51078_solr':{\" +\n        \"         node:'127.0.0.1:51078_solr',\" +\n        \"         cores:2,\" +\n        \"         freedisk:200}}}\";\n\n    String autoScalingjson = \"cluster-preferences:[\" +\n        \"       {minimize : cores}]\" +\n        \" cluster-policy:[{cores:'<10',node:'#ANY'},\" +\n        \"       {replica:'<2', shard:'#EACH',node:'#ANY'},\" +\n        \"       { nodeRole:overseer,replica:0}]}\";\n    Policy policy = new Policy((Map<String, Object>) Utils.fromJSONString(autoScalingjson));\n    Policy.Session session = policy.createSession(cloudManagerWithData(dataproviderdata));\n    Suggester suggester = session.getSuggester(CollectionParams.CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"))\n        .hint(Hint.MINFREEDISK, 150);\n    CollectionAdminRequest.AddReplica op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51078_solr\" , op.getNode());\n\n    suggester = session.getSuggester(CollectionParams.CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"));\n    op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51147_solr\" , op.getNode());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testDiskSpaceHint().mjava","pathOld":"/dev/null","sourceNew":"  public void testDiskSpaceHint() {\n\n    String dataproviderdata = \"{\" +\n        \"     liveNodes:[\" +\n        \"       '127.0.0.1:51078_solr',\" +\n        \"       '127.0.0.1:51147_solr'],\" +\n        \"     replicaInfo:{\" +\n        \"       '127.0.0.1:51147_solr':{},\" +\n        \"       '127.0.0.1:51078_solr':{testNodeAdded:{shard1:[\" +\n        \"             { core_node3 : { type : NRT}},\" +\n        \"             { core_node4 : { type : NRT}}]}}},\" +\n        \"     nodeValues:{\" +\n        \"       '127.0.0.1:51147_solr':{\" +\n        \"         node:'127.0.0.1:51147_solr',\" +\n        \"         cores:0,\" +\n        \"         freedisk : 100},\" +\n        \"       '127.0.0.1:51078_solr':{\" +\n        \"         node:'127.0.0.1:51078_solr',\" +\n        \"         cores:2,\" +\n        \"         freedisk:200}}}\";\n\n    String autoScalingjson = \"cluster-preferences:[\" +\n        \"       {minimize : cores}]\" +\n        \" cluster-policy:[{cores:'<10',node:'#ANY'},\" +\n        \"       {replica:'<2', shard:'#EACH',node:'#ANY'},\" +\n        \"       { nodeRole:overseer,replica:0}]}\";\n    Policy policy = new Policy((Map<String, Object>) Utils.fromJSONString(autoScalingjson));\n    Policy.Session session = policy.createSession(cloudManagerWithData(dataproviderdata));\n    Suggester suggester = session.getSuggester(CollectionParams.CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"))\n        .hint(Hint.MINFREEDISK, 150);\n    CollectionAdminRequest.AddReplica op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51078_solr\" , op.getNode());\n\n    suggester = session.getSuggester(CollectionParams.CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"));\n    op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51147_solr\" , op.getNode());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f0e33082a86447f4f2b59a1a5f69a310500276a","date":1519970482,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testDiskSpaceHint().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testDiskSpaceHint().mjava","sourceNew":"  public void testDiskSpaceHint() {\n\n    String dataproviderdata = \"{\" +\n        \"     liveNodes:[\" +\n        \"       '127.0.0.1:51078_solr',\" +\n        \"       '127.0.0.1:51147_solr'],\" +\n        \"     replicaInfo:{\" +\n        \"       '127.0.0.1:51147_solr':{},\" +\n        \"       '127.0.0.1:51078_solr':{testNodeAdded:{shard1:[\" +\n        \"             { core_node3 : { type : NRT}},\" +\n        \"             { core_node4 : { type : NRT}}]}}},\" +\n        \"     nodeValues:{\" +\n        \"       '127.0.0.1:51147_solr':{\" +\n        \"         node:'127.0.0.1:51147_solr',\" +\n        \"         cores:0,\" +\n        \"         freedisk : 100},\" +\n        \"       '127.0.0.1:51078_solr':{\" +\n        \"         node:'127.0.0.1:51078_solr',\" +\n        \"         cores:2,\" +\n        \"         freedisk:200}}}\";\n\n    String autoScalingjson = \"cluster-preferences:[\" +\n        \"       {minimize : cores}]\" +\n        \" cluster-policy:[{cores:'<10',node:'#ANY'},\" +\n        \"       {replica:'<2', shard:'#EACH',node:'#ANY'},\" +\n        \"       { nodeRole:overseer,replica:0}]}\";\n    Policy policy = new Policy((Map<String, Object>) Utils.fromJSONString(autoScalingjson));\n    Policy.Session session = policy.createSession(cloudManagerWithData(dataproviderdata));\n    Suggester suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"))\n        .hint(Hint.MINFREEDISK, 150);\n    CollectionAdminRequest.AddReplica op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51078_solr\", op.getNode());\n\n    suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"));\n    op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51147_solr\", op.getNode());\n  }\n\n","sourceOld":"  public void testDiskSpaceHint() {\n\n    String dataproviderdata = \"{\" +\n        \"     liveNodes:[\" +\n        \"       '127.0.0.1:51078_solr',\" +\n        \"       '127.0.0.1:51147_solr'],\" +\n        \"     replicaInfo:{\" +\n        \"       '127.0.0.1:51147_solr':{},\" +\n        \"       '127.0.0.1:51078_solr':{testNodeAdded:{shard1:[\" +\n        \"             { core_node3 : { type : NRT}},\" +\n        \"             { core_node4 : { type : NRT}}]}}},\" +\n        \"     nodeValues:{\" +\n        \"       '127.0.0.1:51147_solr':{\" +\n        \"         node:'127.0.0.1:51147_solr',\" +\n        \"         cores:0,\" +\n        \"         freedisk : 100},\" +\n        \"       '127.0.0.1:51078_solr':{\" +\n        \"         node:'127.0.0.1:51078_solr',\" +\n        \"         cores:2,\" +\n        \"         freedisk:200}}}\";\n\n    String autoScalingjson = \"cluster-preferences:[\" +\n        \"       {minimize : cores}]\" +\n        \" cluster-policy:[{cores:'<10',node:'#ANY'},\" +\n        \"       {replica:'<2', shard:'#EACH',node:'#ANY'},\" +\n        \"       { nodeRole:overseer,replica:0}]}\";\n    Policy policy = new Policy((Map<String, Object>) Utils.fromJSONString(autoScalingjson));\n    Policy.Session session = policy.createSession(cloudManagerWithData(dataproviderdata));\n    Suggester suggester = session.getSuggester(CollectionParams.CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"))\n        .hint(Hint.MINFREEDISK, 150);\n    CollectionAdminRequest.AddReplica op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51078_solr\" , op.getNode());\n\n    suggester = session.getSuggester(CollectionParams.CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"));\n    op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51147_solr\" , op.getNode());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5a27e78e3d29dee02bab19ded25336471e96882","date":1539677468,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testDiskSpaceHint().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testDiskSpaceHint().mjava","sourceNew":"  public void testDiskSpaceHint() {\n    String autoScalingjson = \"cluster-preferences:[\" +\n        \"       {minimize : cores}]\" +\n        \" cluster-policy:[{cores:'<10',node:'#ANY'},\" +\n        \"       {replica:'<2', shard:'#EACH',node:'#ANY'},\" +\n        \"       { nodeRole:overseer,replica:0}]}\";\n    Policy policy = new Policy((Map<String, Object>) Utils.fromJSONString(autoScalingjson));\n    Policy.Session session = policy.createSession(cloudManagerWithData((Map) loadFromResource(\"testDiskSpaceHint.json\")));\n    Suggester suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"))\n        .hint(Hint.MINFREEDISK, 150);\n    CollectionAdminRequest.AddReplica op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51078_solr\", op.getNode());\n\n    suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"));\n    op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51147_solr\", op.getNode());\n  }\n\n","sourceOld":"  public void testDiskSpaceHint() {\n\n    String dataproviderdata = \"{\" +\n        \"     liveNodes:[\" +\n        \"       '127.0.0.1:51078_solr',\" +\n        \"       '127.0.0.1:51147_solr'],\" +\n        \"     replicaInfo:{\" +\n        \"       '127.0.0.1:51147_solr':{},\" +\n        \"       '127.0.0.1:51078_solr':{testNodeAdded:{shard1:[\" +\n        \"             { core_node3 : { type : NRT}},\" +\n        \"             { core_node4 : { type : NRT}}]}}},\" +\n        \"     nodeValues:{\" +\n        \"       '127.0.0.1:51147_solr':{\" +\n        \"         node:'127.0.0.1:51147_solr',\" +\n        \"         cores:0,\" +\n        \"         freedisk : 100},\" +\n        \"       '127.0.0.1:51078_solr':{\" +\n        \"         node:'127.0.0.1:51078_solr',\" +\n        \"         cores:2,\" +\n        \"         freedisk:200}}}\";\n\n    String autoScalingjson = \"cluster-preferences:[\" +\n        \"       {minimize : cores}]\" +\n        \" cluster-policy:[{cores:'<10',node:'#ANY'},\" +\n        \"       {replica:'<2', shard:'#EACH',node:'#ANY'},\" +\n        \"       { nodeRole:overseer,replica:0}]}\";\n    Policy policy = new Policy((Map<String, Object>) Utils.fromJSONString(autoScalingjson));\n    Policy.Session session = policy.createSession(cloudManagerWithData(dataproviderdata));\n    Suggester suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"))\n        .hint(Hint.MINFREEDISK, 150);\n    CollectionAdminRequest.AddReplica op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51078_solr\", op.getNode());\n\n    suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"));\n    op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51147_solr\", op.getNode());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testDiskSpaceHint().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testDiskSpaceHint().mjava","sourceNew":"  public void testDiskSpaceHint() {\n    String autoScalingjson = \"cluster-preferences:[\" +\n        \"       {minimize : cores}]\" +\n        \" cluster-policy:[{cores:'<10',node:'#ANY'},\" +\n        \"       {replica:'<2', shard:'#EACH',node:'#ANY'},\" +\n        \"       { nodeRole:overseer,replica:0}]}\";\n    @SuppressWarnings({\"unchecked\"})\n    Policy policy = new Policy((Map<String, Object>) Utils.fromJSONString(autoScalingjson));\n    Policy.Session session = policy.createSession(cloudManagerWithData((Map) loadFromResource(\"testDiskSpaceHint.json\")));\n    Suggester suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"))\n        .hint(Hint.MINFREEDISK, 150);\n    CollectionAdminRequest.AddReplica op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51078_solr\", op.getNode());\n\n    suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"));\n    op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51147_solr\", op.getNode());\n  }\n\n","sourceOld":"  public void testDiskSpaceHint() {\n    String autoScalingjson = \"cluster-preferences:[\" +\n        \"       {minimize : cores}]\" +\n        \" cluster-policy:[{cores:'<10',node:'#ANY'},\" +\n        \"       {replica:'<2', shard:'#EACH',node:'#ANY'},\" +\n        \"       { nodeRole:overseer,replica:0}]}\";\n    Policy policy = new Policy((Map<String, Object>) Utils.fromJSONString(autoScalingjson));\n    Policy.Session session = policy.createSession(cloudManagerWithData((Map) loadFromResource(\"testDiskSpaceHint.json\")));\n    Suggester suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"))\n        .hint(Hint.MINFREEDISK, 150);\n    CollectionAdminRequest.AddReplica op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51078_solr\", op.getNode());\n\n    suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"));\n    op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51147_solr\", op.getNode());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/cloud/autoscaling/TestPolicy#testDiskSpaceHint().mjava","sourceNew":null,"sourceOld":"  public void testDiskSpaceHint() {\n    String autoScalingjson = \"cluster-preferences:[\" +\n        \"       {minimize : cores}]\" +\n        \" cluster-policy:[{cores:'<10',node:'#ANY'},\" +\n        \"       {replica:'<2', shard:'#EACH',node:'#ANY'},\" +\n        \"       { nodeRole:overseer,replica:0}]}\";\n    @SuppressWarnings({\"unchecked\"})\n    Policy policy = new Policy((Map<String, Object>) Utils.fromJSONString(autoScalingjson));\n    Policy.Session session = policy.createSession(cloudManagerWithData((Map) loadFromResource(\"testDiskSpaceHint.json\")));\n    Suggester suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"))\n        .hint(Hint.MINFREEDISK, 150);\n    CollectionAdminRequest.AddReplica op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51078_solr\", op.getNode());\n\n    suggester = session.getSuggester(CollectionAction.ADDREPLICA)\n        .hint(Hint.COLL_SHARD, new Pair<>(\"coll1\", \"shard1\"));\n    op = (CollectionAdminRequest.AddReplica) suggester.getSuggestion();\n\n    assertEquals(\"127.0.0.1:51147_solr\", op.getNode());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["f5a27e78e3d29dee02bab19ded25336471e96882"],"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0b04413d237e43414609f041f50db04d553d686f"],"0b04413d237e43414609f041f50db04d553d686f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["9ba1b632c041956c93c41aa1143d16a567014891"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9f0e33082a86447f4f2b59a1a5f69a310500276a":["b94236357aaa22b76c10629851fe4e376e0cea82"],"f5a27e78e3d29dee02bab19ded25336471e96882":["9f0e33082a86447f4f2b59a1a5f69a310500276a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["3f504512a03d978990cbff30db0522b354e846db"],"b94236357aaa22b76c10629851fe4e376e0cea82":["9f0e33082a86447f4f2b59a1a5f69a310500276a"],"0b04413d237e43414609f041f50db04d553d686f":["b94236357aaa22b76c10629851fe4e376e0cea82"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","0b04413d237e43414609f041f50db04d553d686f"],"9f0e33082a86447f4f2b59a1a5f69a310500276a":["f5a27e78e3d29dee02bab19ded25336471e96882"],"f5a27e78e3d29dee02bab19ded25336471e96882":["9ba1b632c041956c93c41aa1143d16a567014891"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}