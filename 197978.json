{"path":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","commits":[{"id":"3f74570911bfdb9f7b01948745dcd67c69676c0e","date":1181060975,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a hash code value for this object. */\n  public int hashCode() {\n    int valSrcHash = valSrcQuery==null ? 0 : valSrcQuery.hashCode();\n    return (getClass().hashCode() + subQuery.hashCode() + valSrcHash) ^ Float.floatToIntBits(getBoost());\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fe79450a321df64750e98df6442d2c4d30da52","date":1197527307,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object. */\n  public int hashCode() {\n    int valSrcHash = 0;\n    for (int i=0; i<valSrcQueries.length; i++) { //TODO simplify with Arrays.deepHashcode() once moving to Java 1.5\n      valSrcHash += valSrcQueries[i].hashCode();\n    }\n    return (getClass().hashCode() + subQuery.hashCode() + valSrcHash) ^ Float.floatToIntBits(getBoost());\n  }  \n\n","sourceOld":"  /** Returns a hash code value for this object. */\n  public int hashCode() {\n    int valSrcHash = valSrcQuery==null ? 0 : valSrcQuery.hashCode();\n    return (getClass().hashCode() + subQuery.hashCode() + valSrcHash) ^ Float.floatToIntBits(getBoost());\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"486cfd5a3f7481938475c113415d896f7a74a4a9","date":1256682581,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object. */\n  @Override\n  public int hashCode() {\n    int valSrcHash = 0;\n    for (int i=0; i<valSrcQueries.length; i++) { //TODO simplify with Arrays.deepHashcode() once moving to Java 1.5\n      valSrcHash += valSrcQueries[i].hashCode();\n    }\n    return (getClass().hashCode() + subQuery.hashCode() + valSrcHash) ^ Float.floatToIntBits(getBoost());\n  }  \n\n","sourceOld":"  /** Returns a hash code value for this object. */\n  public int hashCode() {\n    int valSrcHash = 0;\n    for (int i=0; i<valSrcQueries.length; i++) { //TODO simplify with Arrays.deepHashcode() once moving to Java 1.5\n      valSrcHash += valSrcQueries[i].hashCode();\n    }\n    return (getClass().hashCode() + subQuery.hashCode() + valSrcHash) ^ Float.floatToIntBits(getBoost());\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"feaf086f278a8afe69ae5147d0ef315af741d297","date":1256688442,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object. */\n  @Override\n  public int hashCode() {\n    return (getClass().hashCode() + subQuery.hashCode() + Arrays.deepHashCode(valSrcQueries))\n      ^ Float.floatToIntBits(getBoost());\n  }  \n\n","sourceOld":"  /** Returns a hash code value for this object. */\n  @Override\n  public int hashCode() {\n    int valSrcHash = 0;\n    for (int i=0; i<valSrcQueries.length; i++) { //TODO simplify with Arrays.deepHashcode() once moving to Java 1.5\n      valSrcHash += valSrcQueries[i].hashCode();\n    }\n    return (getClass().hashCode() + subQuery.hashCode() + valSrcHash) ^ Float.floatToIntBits(getBoost());\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed858aa9f438c5e8877aafa3cc17af8d68c2f009","date":1256714852,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object. */\n  @Override\n  public int hashCode() {\n    return (getClass().hashCode() + subQuery.hashCode() + Arrays.hashCode(valSrcQueries))\n      ^ Float.floatToIntBits(getBoost());\n  }  \n\n","sourceOld":"  /** Returns a hash code value for this object. */\n  @Override\n  public int hashCode() {\n    return (getClass().hashCode() + subQuery.hashCode() + Arrays.deepHashCode(valSrcQueries))\n      ^ Float.floatToIntBits(getBoost());\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"affefdda19991b74568e601456baad0c8e5c2f65","date":1266776825,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object. */\n  @Override\n  public int hashCode() {\n    return (getClass().hashCode() + subQuery.hashCode() + Arrays.hashCode(valSrcQueries))\n      ^ Float.floatToIntBits(getBoost()) ^ (strict ? 1234 : 4321);\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object. */\n  @Override\n  public int hashCode() {\n    return (getClass().hashCode() + subQuery.hashCode() + Arrays.hashCode(valSrcQueries))\n      ^ Float.floatToIntBits(getBoost());\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/function/CustomScoreQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object. */\n  @Override\n  public int hashCode() {\n    return (getClass().hashCode() + subQuery.hashCode() + Arrays.hashCode(valSrcQueries))\n      ^ Float.floatToIntBits(getBoost()) ^ (strict ? 1234 : 4321);\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object. */\n  @Override\n  public int hashCode() {\n    return (getClass().hashCode() + subQuery.hashCode() + Arrays.hashCode(valSrcQueries))\n      ^ Float.floatToIntBits(getBoost()) ^ (strict ? 1234 : 4321);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["89fe79450a321df64750e98df6442d2c4d30da52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3f74570911bfdb9f7b01948745dcd67c69676c0e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"affefdda19991b74568e601456baad0c8e5c2f65":["ed858aa9f438c5e8877aafa3cc17af8d68c2f009"],"89fe79450a321df64750e98df6442d2c4d30da52":["3f74570911bfdb9f7b01948745dcd67c69676c0e"],"ed858aa9f438c5e8877aafa3cc17af8d68c2f009":["feaf086f278a8afe69ae5147d0ef315af741d297"],"feaf086f278a8afe69ae5147d0ef315af741d297":["486cfd5a3f7481938475c113415d896f7a74a4a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["affefdda19991b74568e601456baad0c8e5c2f65"]},"commit2Childs":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["feaf086f278a8afe69ae5147d0ef315af741d297"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f74570911bfdb9f7b01948745dcd67c69676c0e"],"3f74570911bfdb9f7b01948745dcd67c69676c0e":["89fe79450a321df64750e98df6442d2c4d30da52"],"89fe79450a321df64750e98df6442d2c4d30da52":["486cfd5a3f7481938475c113415d896f7a74a4a9"],"affefdda19991b74568e601456baad0c8e5c2f65":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ed858aa9f438c5e8877aafa3cc17af8d68c2f009":["affefdda19991b74568e601456baad0c8e5c2f65"],"feaf086f278a8afe69ae5147d0ef315af741d297":["ed858aa9f438c5e8877aafa3cc17af8d68c2f009"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}