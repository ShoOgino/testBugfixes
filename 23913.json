{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addFixedSortedBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef],Iterable[Number],int).mjava","commits":[{"id":"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb","date":1359046870,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addFixedSortedBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef],Iterable[Number],int).mjava","pathOld":"/dev/null","sourceNew":"  private void addFixedSortedBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values, Iterable<Number> docToOrd, int length) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_FIXED_SORTED.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    /* values */\n    \n    data.writeInt(length);\n    int valueCount = 0;\n    for (BytesRef v : values) {\n      data.writeBytes(v.bytes, v.offset, v.length);\n      valueCount++;\n    }\n    \n    /* ordinals */\n    \n    index.writeInt(valueCount);\n    int maxDoc = state.segmentInfo.getDocCount();\n    assert valueCount > 0;\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(valueCount-1), PackedInts.DEFAULT);\n    for (Number n : docToOrd) {\n      w.add(n.longValue());\n    }\n    w.finish();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addFixedSortedBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef],Iterable[Number],int).mjava","pathOld":"/dev/null","sourceNew":"  private void addFixedSortedBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values, Iterable<Number> docToOrd, int length) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_FIXED_SORTED.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    /* values */\n    \n    data.writeInt(length);\n    int valueCount = 0;\n    for (BytesRef v : values) {\n      data.writeBytes(v.bytes, v.offset, v.length);\n      valueCount++;\n    }\n    \n    /* ordinals */\n    \n    index.writeInt(valueCount);\n    int maxDoc = state.segmentInfo.getDocCount();\n    assert valueCount > 0;\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(valueCount-1), PackedInts.DEFAULT);\n    for (Number n : docToOrd) {\n      w.add(n.longValue());\n    }\n    w.finish();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addFixedSortedBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef],Iterable[Number],int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addFixedSortedBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef],Iterable[Number],int).mjava","sourceNew":"  private void addFixedSortedBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values, Iterable<Number> docToOrd, int length) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_FIXED_SORTED.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    /* values */\n    \n    data.writeInt(length);\n    int valueCount = 0;\n    for (BytesRef v : values) {\n      data.writeBytes(v.bytes, v.offset, v.length);\n      valueCount++;\n    }\n    \n    /* ordinals */\n    \n    index.writeInt(valueCount);\n    int maxDoc = state.segmentInfo.getDocCount();\n    assert valueCount > 0;\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(valueCount-1), PackedInts.DEFAULT);\n    for (Number n : docToOrd) {\n      w.add(n.longValue());\n    }\n    w.finish();\n  }\n\n","sourceOld":"  private void addFixedSortedBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values, Iterable<Number> docToOrd, int length) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_FIXED_SORTED.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    /* values */\n    \n    data.writeInt(length);\n    int valueCount = 0;\n    for (BytesRef v : values) {\n      data.writeBytes(v.bytes, v.offset, v.length);\n      valueCount++;\n    }\n    \n    /* ordinals */\n    \n    index.writeInt(valueCount);\n    int maxDoc = state.segmentInfo.getDocCount();\n    assert valueCount > 0;\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(valueCount-1), PackedInts.DEFAULT);\n    for (Number n : docToOrd) {\n      w.add(n.longValue());\n    }\n    w.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addFixedSortedBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef],Iterable[Number],int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40DocValuesWriter#addFixedSortedBytesField(FieldInfo,IndexOutput,IndexOutput,Iterable[BytesRef],Iterable[Number],int).mjava","sourceNew":"  private void addFixedSortedBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values, Iterable<Number> docToOrd, int length) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_FIXED_SORTED.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    /* values */\n    \n    data.writeInt(length);\n    int valueCount = 0;\n    for (BytesRef v : values) {\n      data.writeBytes(v.bytes, v.offset, v.length);\n      valueCount++;\n    }\n    \n    /* ordinals */\n    \n    index.writeInt(valueCount);\n    int maxDoc = state.segmentInfo.getDocCount();\n    assert valueCount > 0;\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(valueCount-1), PackedInts.DEFAULT);\n    for (Number n : docToOrd) {\n      w.add(n.longValue());\n    }\n    w.finish();\n  }\n\n","sourceOld":"  private void addFixedSortedBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values, Iterable<Number> docToOrd, int length) throws IOException {\n    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_FIXED_SORTED.name());\n\n    CodecUtil.writeHeader(data, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_DAT,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    CodecUtil.writeHeader(index, \n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_CODEC_NAME_IDX,\n                          Lucene40DocValuesFormat.BYTES_FIXED_SORTED_VERSION_CURRENT);\n    \n    /* values */\n    \n    data.writeInt(length);\n    int valueCount = 0;\n    for (BytesRef v : values) {\n      data.writeBytes(v.bytes, v.offset, v.length);\n      valueCount++;\n    }\n    \n    /* ordinals */\n    \n    index.writeInt(valueCount);\n    int maxDoc = state.segmentInfo.getDocCount();\n    assert valueCount > 0;\n    final PackedInts.Writer w = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(valueCount-1), PackedInts.DEFAULT);\n    for (Number n : docToOrd) {\n      w.add(n.longValue());\n    }\n    w.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["d4d69c535930b5cce125cff868d40f6373dc27d4","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f5b43ddb6d3ea6e4dfe2103a0d75679caa01abb","d4d69c535930b5cce125cff868d40f6373dc27d4"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}