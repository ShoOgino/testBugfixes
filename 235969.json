{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#copySegmentAsIs(SegmentInfo,String,Map[String,String],Set[String]).mjava","commits":[{"id":"32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f","date":1306408552,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#copySegmentAsIs(SegmentInfo,String,Map[String,String],Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  /** Copies the segment files as-is into the IndexWriter's directory. */\n  private void copySegmentAsIs(SegmentInfo info, String segName,\n      Map<String, String> dsNames, Set<String> dsFilesCopied)\n      throws IOException {\n    // Determine if the doc store of this segment needs to be copied. It's\n    // only relevant for segments that share doc store with others,\n    // because the DS might have been copied already, in which case we\n    // just want to update the DS name of this SegmentInfo.\n    // NOTE: pre-3x segments include a null DSName if they don't share doc\n    // store. The following code ensures we don't accidentally insert\n    // 'null' to the map.\n    String dsName = info.getDocStoreSegment();\n    final String newDsName;\n    if (dsName != null) {\n      if (dsNames.containsKey(dsName)) {\n        newDsName = dsNames.get(dsName);\n      } else {\n        dsNames.put(dsName, segName);\n        newDsName = segName;\n      }\n    } else {\n      newDsName = segName;\n    }\n    \n    // Copy the segment files\n    for (String file: info.files()) {\n      final String newFileName;\n      if (IndexFileNames.isDocStoreFile(file)) {\n        newFileName = newDsName + IndexFileNames.stripSegmentName(file);\n        if (dsFilesCopied.contains(newFileName)) {\n          continue;\n        }\n        dsFilesCopied.add(newFileName);\n      } else {\n        newFileName = segName + IndexFileNames.stripSegmentName(file);\n      }\n      \n      assert !directory.fileExists(newFileName): \"file \\\"\" + newFileName + \"\\\" already exists\";\n      info.dir.copy(directory, file, newFileName);\n    }\n    \n    info.setDocStore(info.getDocStoreOffset(), newDsName, info.getDocStoreIsCompoundFile());\n    info.dir = directory;\n    info.name = segName;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#copySegmentAsIs(SegmentInfo,String,Map[String,String],Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  /** Copies the segment files as-is into the IndexWriter's directory. */\n  private void copySegmentAsIs(SegmentInfo info, String segName,\n      Map<String, String> dsNames, Set<String> dsFilesCopied)\n      throws IOException {\n    // Determine if the doc store of this segment needs to be copied. It's\n    // only relevant for segments that share doc store with others,\n    // because the DS might have been copied already, in which case we\n    // just want to update the DS name of this SegmentInfo.\n    // NOTE: pre-3x segments include a null DSName if they don't share doc\n    // store. The following code ensures we don't accidentally insert\n    // 'null' to the map.\n    String dsName = info.getDocStoreSegment();\n    final String newDsName;\n    if (dsName != null) {\n      if (dsNames.containsKey(dsName)) {\n        newDsName = dsNames.get(dsName);\n      } else {\n        dsNames.put(dsName, segName);\n        newDsName = segName;\n      }\n    } else {\n      newDsName = segName;\n    }\n    \n    // Copy the segment files\n    for (String file: info.files()) {\n      final String newFileName;\n      if (IndexFileNames.isDocStoreFile(file)) {\n        newFileName = newDsName + IndexFileNames.stripSegmentName(file);\n        if (dsFilesCopied.contains(newFileName)) {\n          continue;\n        }\n        dsFilesCopied.add(newFileName);\n      } else {\n        newFileName = segName + IndexFileNames.stripSegmentName(file);\n      }\n      \n      assert !directory.fileExists(newFileName): \"file \\\"\" + newFileName + \"\\\" already exists\";\n      info.dir.copy(directory, file, newFileName);\n    }\n    \n    info.setDocStore(info.getDocStoreOffset(), newDsName, info.getDocStoreIsCompoundFile());\n    info.dir = directory;\n    info.name = segName;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#copySegmentAsIs(SegmentInfo,String,Map[String,String],Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  /** Copies the segment files as-is into the IndexWriter's directory. */\n  private void copySegmentAsIs(SegmentInfo info, String segName,\n      Map<String, String> dsNames, Set<String> dsFilesCopied)\n      throws IOException {\n    // Determine if the doc store of this segment needs to be copied. It's\n    // only relevant for segments that share doc store with others,\n    // because the DS might have been copied already, in which case we\n    // just want to update the DS name of this SegmentInfo.\n    // NOTE: pre-3x segments include a null DSName if they don't share doc\n    // store. The following code ensures we don't accidentally insert\n    // 'null' to the map.\n    String dsName = info.getDocStoreSegment();\n    final String newDsName;\n    if (dsName != null) {\n      if (dsNames.containsKey(dsName)) {\n        newDsName = dsNames.get(dsName);\n      } else {\n        dsNames.put(dsName, segName);\n        newDsName = segName;\n      }\n    } else {\n      newDsName = segName;\n    }\n    \n    // Copy the segment files\n    for (String file: info.files()) {\n      final String newFileName;\n      if (IndexFileNames.isDocStoreFile(file)) {\n        newFileName = newDsName + IndexFileNames.stripSegmentName(file);\n        if (dsFilesCopied.contains(newFileName)) {\n          continue;\n        }\n        dsFilesCopied.add(newFileName);\n      } else {\n        newFileName = segName + IndexFileNames.stripSegmentName(file);\n      }\n      \n      assert !directory.fileExists(newFileName): \"file \\\"\" + newFileName + \"\\\" already exists\";\n      info.dir.copy(directory, file, newFileName);\n    }\n    \n    info.setDocStore(info.getDocStoreOffset(), newDsName, info.getDocStoreIsCompoundFile());\n    info.dir = directory;\n    info.name = segName;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#copySegmentAsIs(SegmentInfo,String,Map[String,String],Set[String],IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#copySegmentAsIs(SegmentInfo,String,Map[String,String],Set[String]).mjava","sourceNew":"  /** Copies the segment files as-is into the IndexWriter's directory. */\n  private void copySegmentAsIs(SegmentInfo info, String segName,\n      Map<String, String> dsNames, Set<String> dsFilesCopied, IOContext context)\n      throws IOException {\n    // Determine if the doc store of this segment needs to be copied. It's\n    // only relevant for segments that share doc store with others,\n    // because the DS might have been copied already, in which case we\n    // just want to update the DS name of this SegmentInfo.\n    // NOTE: pre-3x segments include a null DSName if they don't share doc\n    // store. The following code ensures we don't accidentally insert\n    // 'null' to the map.\n    String dsName = info.getDocStoreSegment();\n    final String newDsName;\n    if (dsName != null) {\n      if (dsNames.containsKey(dsName)) {\n        newDsName = dsNames.get(dsName);\n      } else {\n        dsNames.put(dsName, segName);\n        newDsName = segName;\n      }\n    } else {\n      newDsName = segName;\n    }\n    \n    // Copy the segment files\n    for (String file: info.files()) {\n      final String newFileName;\n      if (IndexFileNames.isDocStoreFile(file)) {\n        newFileName = newDsName + IndexFileNames.stripSegmentName(file);\n        if (dsFilesCopied.contains(newFileName)) {\n          continue;\n        }\n        dsFilesCopied.add(newFileName);\n      } else {\n        newFileName = segName + IndexFileNames.stripSegmentName(file);\n      }\n      \n      assert !directory.fileExists(newFileName): \"file \\\"\" + newFileName + \"\\\" already exists\";\n      info.dir.copy(directory, file, newFileName, context);\n    }\n    \n    info.setDocStore(info.getDocStoreOffset(), newDsName, info.getDocStoreIsCompoundFile());\n    info.dir = directory;\n    info.name = segName;\n  }\n\n","sourceOld":"  /** Copies the segment files as-is into the IndexWriter's directory. */\n  private void copySegmentAsIs(SegmentInfo info, String segName,\n      Map<String, String> dsNames, Set<String> dsFilesCopied)\n      throws IOException {\n    // Determine if the doc store of this segment needs to be copied. It's\n    // only relevant for segments that share doc store with others,\n    // because the DS might have been copied already, in which case we\n    // just want to update the DS name of this SegmentInfo.\n    // NOTE: pre-3x segments include a null DSName if they don't share doc\n    // store. The following code ensures we don't accidentally insert\n    // 'null' to the map.\n    String dsName = info.getDocStoreSegment();\n    final String newDsName;\n    if (dsName != null) {\n      if (dsNames.containsKey(dsName)) {\n        newDsName = dsNames.get(dsName);\n      } else {\n        dsNames.put(dsName, segName);\n        newDsName = segName;\n      }\n    } else {\n      newDsName = segName;\n    }\n    \n    // Copy the segment files\n    for (String file: info.files()) {\n      final String newFileName;\n      if (IndexFileNames.isDocStoreFile(file)) {\n        newFileName = newDsName + IndexFileNames.stripSegmentName(file);\n        if (dsFilesCopied.contains(newFileName)) {\n          continue;\n        }\n        dsFilesCopied.add(newFileName);\n      } else {\n        newFileName = segName + IndexFileNames.stripSegmentName(file);\n      }\n      \n      assert !directory.fileExists(newFileName): \"file \\\"\" + newFileName + \"\\\" already exists\";\n      info.dir.copy(directory, file, newFileName);\n    }\n    \n    info.setDocStore(info.getDocStoreOffset(), newDsName, info.getDocStoreIsCompoundFile());\n    info.dir = directory;\n    info.name = segName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#copySegmentAsIs(SegmentInfo,String,Map[String,String],Set[String],IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#copySegmentAsIs(SegmentInfo,String,Map[String,String],Set[String]).mjava","sourceNew":"  /** Copies the segment files as-is into the IndexWriter's directory. */\n  private void copySegmentAsIs(SegmentInfo info, String segName,\n      Map<String, String> dsNames, Set<String> dsFilesCopied, IOContext context)\n      throws IOException {\n    // Determine if the doc store of this segment needs to be copied. It's\n    // only relevant for segments that share doc store with others,\n    // because the DS might have been copied already, in which case we\n    // just want to update the DS name of this SegmentInfo.\n    // NOTE: pre-3x segments include a null DSName if they don't share doc\n    // store. The following code ensures we don't accidentally insert\n    // 'null' to the map.\n    String dsName = info.getDocStoreSegment();\n    final String newDsName;\n    if (dsName != null) {\n      if (dsNames.containsKey(dsName)) {\n        newDsName = dsNames.get(dsName);\n      } else {\n        dsNames.put(dsName, segName);\n        newDsName = segName;\n      }\n    } else {\n      newDsName = segName;\n    }\n    \n    // Copy the segment files\n    for (String file: info.files()) {\n      final String newFileName;\n      if (IndexFileNames.isDocStoreFile(file)) {\n        newFileName = newDsName + IndexFileNames.stripSegmentName(file);\n        if (dsFilesCopied.contains(newFileName)) {\n          continue;\n        }\n        dsFilesCopied.add(newFileName);\n      } else {\n        newFileName = segName + IndexFileNames.stripSegmentName(file);\n      }\n      \n      assert !directory.fileExists(newFileName): \"file \\\"\" + newFileName + \"\\\" already exists\";\n      info.dir.copy(directory, file, newFileName, context);\n    }\n    \n    info.setDocStore(info.getDocStoreOffset(), newDsName, info.getDocStoreIsCompoundFile());\n    info.dir = directory;\n    info.name = segName;\n  }\n\n","sourceOld":"  /** Copies the segment files as-is into the IndexWriter's directory. */\n  private void copySegmentAsIs(SegmentInfo info, String segName,\n      Map<String, String> dsNames, Set<String> dsFilesCopied)\n      throws IOException {\n    // Determine if the doc store of this segment needs to be copied. It's\n    // only relevant for segments that share doc store with others,\n    // because the DS might have been copied already, in which case we\n    // just want to update the DS name of this SegmentInfo.\n    // NOTE: pre-3x segments include a null DSName if they don't share doc\n    // store. The following code ensures we don't accidentally insert\n    // 'null' to the map.\n    String dsName = info.getDocStoreSegment();\n    final String newDsName;\n    if (dsName != null) {\n      if (dsNames.containsKey(dsName)) {\n        newDsName = dsNames.get(dsName);\n      } else {\n        dsNames.put(dsName, segName);\n        newDsName = segName;\n      }\n    } else {\n      newDsName = segName;\n    }\n    \n    // Copy the segment files\n    for (String file: info.files()) {\n      final String newFileName;\n      if (IndexFileNames.isDocStoreFile(file)) {\n        newFileName = newDsName + IndexFileNames.stripSegmentName(file);\n        if (dsFilesCopied.contains(newFileName)) {\n          continue;\n        }\n        dsFilesCopied.add(newFileName);\n      } else {\n        newFileName = segName + IndexFileNames.stripSegmentName(file);\n      }\n      \n      assert !directory.fileExists(newFileName): \"file \\\"\" + newFileName + \"\\\" already exists\";\n      info.dir.copy(directory, file, newFileName);\n    }\n    \n    info.setDocStore(info.getDocStoreOffset(), newDsName, info.getDocStoreIsCompoundFile());\n    info.dir = directory;\n    info.name = segName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#copySegmentAsIs(SegmentInfo,String,Map[String,String],Set[String],IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#copySegmentAsIs(SegmentInfo,String,Map[String,String],Set[String]).mjava","sourceNew":"  /** Copies the segment files as-is into the IndexWriter's directory. */\n  private void copySegmentAsIs(SegmentInfo info, String segName,\n      Map<String, String> dsNames, Set<String> dsFilesCopied, IOContext context)\n      throws IOException {\n    // Determine if the doc store of this segment needs to be copied. It's\n    // only relevant for segments that share doc store with others,\n    // because the DS might have been copied already, in which case we\n    // just want to update the DS name of this SegmentInfo.\n    // NOTE: pre-3x segments include a null DSName if they don't share doc\n    // store. The following code ensures we don't accidentally insert\n    // 'null' to the map.\n    String dsName = info.getDocStoreSegment();\n    final String newDsName;\n    if (dsName != null) {\n      if (dsNames.containsKey(dsName)) {\n        newDsName = dsNames.get(dsName);\n      } else {\n        dsNames.put(dsName, segName);\n        newDsName = segName;\n      }\n    } else {\n      newDsName = segName;\n    }\n    \n    // Copy the segment files\n    for (String file: info.files()) {\n      final String newFileName;\n      if (IndexFileNames.isDocStoreFile(file)) {\n        newFileName = newDsName + IndexFileNames.stripSegmentName(file);\n        if (dsFilesCopied.contains(newFileName)) {\n          continue;\n        }\n        dsFilesCopied.add(newFileName);\n      } else {\n        newFileName = segName + IndexFileNames.stripSegmentName(file);\n      }\n      \n      assert !directory.fileExists(newFileName): \"file \\\"\" + newFileName + \"\\\" already exists\";\n      info.dir.copy(directory, file, newFileName, context);\n    }\n    \n    info.setDocStore(info.getDocStoreOffset(), newDsName, info.getDocStoreIsCompoundFile());\n    info.dir = directory;\n    info.name = segName;\n  }\n\n","sourceOld":"  /** Copies the segment files as-is into the IndexWriter's directory. */\n  private void copySegmentAsIs(SegmentInfo info, String segName,\n      Map<String, String> dsNames, Set<String> dsFilesCopied)\n      throws IOException {\n    // Determine if the doc store of this segment needs to be copied. It's\n    // only relevant for segments that share doc store with others,\n    // because the DS might have been copied already, in which case we\n    // just want to update the DS name of this SegmentInfo.\n    // NOTE: pre-3x segments include a null DSName if they don't share doc\n    // store. The following code ensures we don't accidentally insert\n    // 'null' to the map.\n    String dsName = info.getDocStoreSegment();\n    final String newDsName;\n    if (dsName != null) {\n      if (dsNames.containsKey(dsName)) {\n        newDsName = dsNames.get(dsName);\n      } else {\n        dsNames.put(dsName, segName);\n        newDsName = segName;\n      }\n    } else {\n      newDsName = segName;\n    }\n    \n    // Copy the segment files\n    for (String file: info.files()) {\n      final String newFileName;\n      if (IndexFileNames.isDocStoreFile(file)) {\n        newFileName = newDsName + IndexFileNames.stripSegmentName(file);\n        if (dsFilesCopied.contains(newFileName)) {\n          continue;\n        }\n        dsFilesCopied.add(newFileName);\n      } else {\n        newFileName = segName + IndexFileNames.stripSegmentName(file);\n      }\n      \n      assert !directory.fileExists(newFileName): \"file \\\"\" + newFileName + \"\\\" already exists\";\n      info.dir.copy(directory, file, newFileName);\n    }\n    \n    info.setDocStore(info.getDocStoreOffset(), newDsName, info.getDocStoreIsCompoundFile());\n    info.dir = directory;\n    info.name = segName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f"]},"commit2Childs":{"32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","ddc4c914be86e34b54f70023f45a60fa7f04e929","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["32dd6d3e87d9e4f05e3e9de40bebf1ff1482771f","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}