{"path":"lucene/core/src/java/org/apache/lucene/geo/Tessellator#pointInPolygon(List[Triangle],double,double).mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Tessellator#pointInPolygon(List[Triangle],double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/geo/Tessellator#pointInPolygon(List[Triangle],double,double).mjava","sourceNew":"  /** Brute force compute if a point is in the polygon by traversing entire triangulation\n   * todo: speed this up using either binary tree or prefix coding (filtering by bounding box of triangle)\n   **/\n  public static final boolean pointInPolygon(final List<Triangle> tessellation, double lat, double lon) {\n    // each triangle\n    for (int i = 0; i < tessellation.size(); ++i) {\n      if (tessellation.get(i).containsPoint(lat, lon)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  /** Brute force compute if a point is in the polygon by traversing entire triangulation\n   * todo: speed this up using either binary tree or prefix coding (filtering by bounding box of triangle)\n   **/\n  public static final boolean pointInPolygon(final List<Triangle> tessellation, double lat, double lon) {\n    // each triangle\n    for (int i = 0; i < tessellation.size(); ++i) {\n      if (tessellation.get(i).containsPoint(lat, lon)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}