{"path":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#autoCreateSystemColl().mjava","commits":[{"id":"a44383d1bc1b3dfe9db7b05ecda8951270911aab","date":1486011386,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#autoCreateSystemColl().mjava","pathOld":"/dev/null","sourceNew":"  protected void autoCreateSystemColl() throws Exception {\n    if (SYSTEM_COLL.equals(corename) && \"POST\".equals(req.getMethod()) && !cores.getZkController().getClusterState().hasCollection(SYSTEM_COLL)) {\n      log.info(\"Going to auto-create .system collection\");\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      String repFactor = String.valueOf(Math.min(3, cores.getZkController().getClusterState().getLiveNodes().size()));\n      cores.getCollectionsHandler().handleRequestBody(new LocalSolrQueryRequest(null,\n          new ModifiableSolrParams()\n              .add(ACTION, CREATE.toString())\n              .add( NAME, SYSTEM_COLL)\n              .add(REPLICATION_FACTOR, repFactor)), rsp);\n      if (rsp.getValues().get(\"success\") == null) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not auto-create .system collection: \"+ Utils.toJSONString(rsp.getValues()));\n      }\n      TimeOut timeOut = new TimeOut(3, TimeUnit.SECONDS);\n      for (; ; ) {\n        if (cores.getZkController().getClusterState().getCollectionOrNull(SYSTEM_COLL) != null) {\n          break;\n        } else {\n          if (timeOut.hasTimedOut()) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not find .system collection even after 3 seconds\");\n          }\n          Thread.sleep(50);\n        }\n      }\n\n      action = RETRY;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee750b40d46c97f5211190d360670a9d5584a762","date":1486021535,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#autoCreateSystemColl(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/HttpSolrCall#autoCreateSystemColl().mjava","sourceNew":"  protected void autoCreateSystemColl(String corename) throws Exception {\n    if (SYSTEM_COLL.equals(corename) && \"POST\".equals(req.getMethod()) && !cores.getZkController().getClusterState().hasCollection(SYSTEM_COLL)) {\n      log.info(\"Going to auto-create .system collection\");\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      String repFactor = String.valueOf(Math.min(3, cores.getZkController().getClusterState().getLiveNodes().size()));\n      cores.getCollectionsHandler().handleRequestBody(new LocalSolrQueryRequest(null,\n          new ModifiableSolrParams()\n              .add(ACTION, CREATE.toString())\n              .add( NAME, SYSTEM_COLL)\n              .add(REPLICATION_FACTOR, repFactor)), rsp);\n      if (rsp.getValues().get(\"success\") == null) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not auto-create .system collection: \"+ Utils.toJSONString(rsp.getValues()));\n      }\n      TimeOut timeOut = new TimeOut(3, TimeUnit.SECONDS);\n      for (; ; ) {\n        if (cores.getZkController().getClusterState().getCollectionOrNull(SYSTEM_COLL) != null) {\n          break;\n        } else {\n          if (timeOut.hasTimedOut()) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not find .system collection even after 3 seconds\");\n          }\n          Thread.sleep(50);\n        }\n      }\n\n      action = RETRY;\n    }\n  }\n\n","sourceOld":"  protected void autoCreateSystemColl() throws Exception {\n    if (SYSTEM_COLL.equals(corename) && \"POST\".equals(req.getMethod()) && !cores.getZkController().getClusterState().hasCollection(SYSTEM_COLL)) {\n      log.info(\"Going to auto-create .system collection\");\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      String repFactor = String.valueOf(Math.min(3, cores.getZkController().getClusterState().getLiveNodes().size()));\n      cores.getCollectionsHandler().handleRequestBody(new LocalSolrQueryRequest(null,\n          new ModifiableSolrParams()\n              .add(ACTION, CREATE.toString())\n              .add( NAME, SYSTEM_COLL)\n              .add(REPLICATION_FACTOR, repFactor)), rsp);\n      if (rsp.getValues().get(\"success\") == null) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not auto-create .system collection: \"+ Utils.toJSONString(rsp.getValues()));\n      }\n      TimeOut timeOut = new TimeOut(3, TimeUnit.SECONDS);\n      for (; ; ) {\n        if (cores.getZkController().getClusterState().getCollectionOrNull(SYSTEM_COLL) != null) {\n          break;\n        } else {\n          if (timeOut.hasTimedOut()) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not find .system collection even after 3 seconds\");\n          }\n          Thread.sleep(50);\n        }\n      }\n\n      action = RETRY;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a44383d1bc1b3dfe9db7b05ecda8951270911aab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee750b40d46c97f5211190d360670a9d5584a762":["a44383d1bc1b3dfe9db7b05ecda8951270911aab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee750b40d46c97f5211190d360670a9d5584a762"]},"commit2Childs":{"a44383d1bc1b3dfe9db7b05ecda8951270911aab":["ee750b40d46c97f5211190d360670a9d5584a762"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a44383d1bc1b3dfe9db7b05ecda8951270911aab"],"ee750b40d46c97f5211190d360670a9d5584a762":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}