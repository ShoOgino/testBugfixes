{"path":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#PayloadNearQuery(SpanQuery[],int,boolean,PayloadFunction).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#PayloadNearQuery(SpanQuery[],int,boolean,PayloadFunction).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#PayloadNearQuery(SpanQuery[],int,boolean,PayloadFunction).mjava","sourceNew":"  public PayloadNearQuery(SpanQuery[] clauses, int slop, boolean inOrder,\n      PayloadFunction function) {\n    super(clauses, slop, inOrder);\n    fieldName = clauses[0].getField(); // all clauses must have same field\n    this.function = function;\n  }\n\n","sourceOld":"  public PayloadNearQuery(SpanQuery[] clauses, int slop, boolean inOrder,\n      PayloadFunction function) {\n    super(clauses, slop, inOrder);\n    fieldName = clauses[0].getField(); // all clauses must have same field\n    this.function = function;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaa8203c0525e91bf87759d14591ba3ff26dfa7f","date":1430913024,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#PayloadNearQuery(SpanQuery[],int,boolean,PayloadFunction).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#PayloadNearQuery(SpanQuery[],int,boolean,PayloadFunction).mjava","sourceNew":"  public PayloadNearQuery(SpanQuery[] clauses, int slop, boolean inOrder,\n      PayloadFunction function) {\n    super(clauses, slop, inOrder);\n    this.fieldName = Objects.requireNonNull(clauses[0].getField(), \"all clauses must have same non null field\");\n    this.function = Objects.requireNonNull(function);\n  }\n\n","sourceOld":"  public PayloadNearQuery(SpanQuery[] clauses, int slop, boolean inOrder,\n      PayloadFunction function) {\n    super(clauses, slop, inOrder);\n    fieldName = clauses[0].getField(); // all clauses must have same field\n    this.function = function;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73561ba4c64c1aea2ba4b3873f80b9b2a2946816","date":1438618499,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadNearQuery#PayloadNearQuery(SpanQuery[],int,boolean,PayloadFunction).mjava","sourceNew":null,"sourceOld":"  public PayloadNearQuery(SpanQuery[] clauses, int slop, boolean inOrder,\n      PayloadFunction function) {\n    super(clauses, slop, inOrder);\n    this.fieldName = Objects.requireNonNull(clauses[0].getField(), \"all clauses must have same non null field\");\n    this.function = Objects.requireNonNull(function);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73561ba4c64c1aea2ba4b3873f80b9b2a2946816":["aaa8203c0525e91bf87759d14591ba3ff26dfa7f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"aaa8203c0525e91bf87759d14591ba3ff26dfa7f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73561ba4c64c1aea2ba4b3873f80b9b2a2946816"]},"commit2Childs":{"73561ba4c64c1aea2ba4b3873f80b9b2a2946816":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["aaa8203c0525e91bf87759d14591ba3ff26dfa7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"aaa8203c0525e91bf87759d14591ba3ff26dfa7f":["73561ba4c64c1aea2ba4b3873f80b9b2a2946816"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}