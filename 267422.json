{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putText(Map[String,Object],String,String,boolean).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putText(Map[String,Object],String,String,boolean).mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    private void putText(Map<String, Object> values, String value,\n                         String fieldName, boolean multiValued) {\n      if (multiValued) {\n        List<String> v = (List<String>) values.get(fieldName);\n        if (v == null) {\n          v = new ArrayList<String>();\n          values.put(fieldName, v);\n        }\n        v.add(value);\n      } else {\n        values.put(fieldName, value);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949","date":1252931993,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putText(Map[String,Object],String,String,boolean).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putText(Map[String,Object],String,String,boolean).mjava","sourceNew":"    /**Handle multivalued fields by adding List<String>\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void putText(Map<String, Object> values, String value,\n                         String fieldName, boolean multiValued) {\n      if (multiValued) {\n        List<String> v = (List<String>) values.get(fieldName);\n        if (v == null) {\n          v = new ArrayList<String>();\n          values.put(fieldName, v);\n        }\n        v.add(value);\n      } else {\n        values.put(fieldName, value);\n      }\n    }\n\n","sourceOld":"    @SuppressWarnings(\"unchecked\")\n    private void putText(Map<String, Object> values, String value,\n                         String fieldName, boolean multiValued) {\n      if (multiValued) {\n        List<String> v = (List<String>) values.get(fieldName);\n        if (v == null) {\n          v = new ArrayList<String>();\n          values.put(fieldName, v);\n        }\n        v.add(value);\n      } else {\n        values.put(fieldName, value);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b14ccda0bdb398cf86bc3804e1c136a615dbd89b","date":1253269935,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putText(Map[String,Object],String,String,boolean).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putText(Map[String,Object],String,String,boolean).mjava","sourceNew":"    /**\n     * Add the field name and text into the values Map. If it is a non multivalued field, then the text\n     * is simply placed in the object portion of the Map. If it is a\n     * multivalued field then the text is pushed onto a List which is\n     * the object portion of the Map.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void putText(Map<String, Object> values, String value,\n                         String fieldName, boolean multiValued) {\n      if (multiValued) {\n        List<String> v = (List<String>) values.get(fieldName);\n        if (v == null) {\n          v = new ArrayList<String>();\n          values.put(fieldName, v);\n        }\n        v.add(value);\n      } else {\n        values.put(fieldName, value);\n      }\n    }\n\n","sourceOld":"    /**Handle multivalued fields by adding List<String>\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void putText(Map<String, Object> values, String value,\n                         String fieldName, boolean multiValued) {\n      if (multiValued) {\n        List<String> v = (List<String>) values.get(fieldName);\n        if (v == null) {\n          v = new ArrayList<String>();\n          values.put(fieldName, v);\n        }\n        v.add(value);\n      } else {\n        values.put(fieldName, value);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f2a93a28913071a0b713be1d4b8a1181388d550","date":1254814948,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putText(Map[String,Object],String,String,boolean).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putText(Map[String,Object],String,String,boolean).mjava","sourceNew":"    /**\n     * Add the field name and text into the values Map. If it is a non\n     * multivalued field, then the text is simply placed in the object\n     * portion of the Map. If it is a multivalued field then the text is\n     * pushed onto a List which is the object portion of the Map.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void putText(Map<String, Object> values, String value,\n                         String fieldName, boolean multiValued) {\n      if (multiValued) {\n        List<String> v = (List<String>) values.get(fieldName);\n        if (v == null) {\n          v = new ArrayList<String>();\n          values.put(fieldName, v);\n        }\n        v.add(value);\n      } else {\n        values.put(fieldName, value);\n      }\n    }\n\n","sourceOld":"    /**\n     * Add the field name and text into the values Map. If it is a non multivalued field, then the text\n     * is simply placed in the object portion of the Map. If it is a\n     * multivalued field then the text is pushed onto a List which is\n     * the object portion of the Map.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void putText(Map<String, Object> values, String value,\n                         String fieldName, boolean multiValued) {\n      if (multiValued) {\n        List<String> v = (List<String>) values.get(fieldName);\n        if (v == null) {\n          v = new ArrayList<String>();\n          values.put(fieldName, v);\n        }\n        v.add(value);\n      } else {\n        values.put(fieldName, value);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putText(Map[String,Object],String,String,boolean).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putText(Map[String,Object],String,String,boolean).mjava","sourceNew":"    /**\n     * Add the field name and text into the values Map. If it is a non\n     * multivalued field, then the text is simply placed in the object\n     * portion of the Map. If it is a multivalued field then the text is\n     * pushed onto a List which is the object portion of the Map.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void putText(Map<String, Object> values, String value,\n                         String fieldName, boolean multiValued) {\n      if (multiValued) {\n        List<String> v = (List<String>) values.get(fieldName);\n        if (v == null) {\n          v = new ArrayList<String>();\n          values.put(fieldName, v);\n        }\n        v.add(value);\n      } else {\n        values.put(fieldName, value);\n      }\n    }\n\n","sourceOld":"    /**\n     * Add the field name and text into the values Map. If it is a non\n     * multivalued field, then the text is simply placed in the object\n     * portion of the Map. If it is a multivalued field then the text is\n     * pushed onto a List which is the object portion of the Map.\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void putText(Map<String, Object> values, String value,\n                         String fieldName, boolean multiValued) {\n      if (multiValued) {\n        List<String> v = (List<String>) values.get(fieldName);\n        if (v == null) {\n          v = new ArrayList<String>();\n          values.put(fieldName, v);\n        }\n        v.add(value);\n      } else {\n        values.put(fieldName, value);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["7f2a93a28913071a0b713be1d4b8a1181388d550"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7f2a93a28913071a0b713be1d4b8a1181388d550":["b14ccda0bdb398cf86bc3804e1c136a615dbd89b"],"b14ccda0bdb398cf86bc3804e1c136a615dbd89b":["cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949"]},"commit2Childs":{"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949":["b14ccda0bdb398cf86bc3804e1c136a615dbd89b"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"7f2a93a28913071a0b713be1d4b8a1181388d550":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b14ccda0bdb398cf86bc3804e1c136a615dbd89b":["7f2a93a28913071a0b713be1d4b8a1181388d550"]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}