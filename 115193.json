{"path":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#collectTermContext(IndexReader,List[LeafReaderContext],TermContext[],Term[]).mjava","commits":[{"id":"6e7761210febbbf9eb64d86512126e718181aec9","date":1467828397,"type":0,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#collectTermContext(IndexReader,List[LeafReaderContext],TermContext[],Term[]).mjava","pathOld":"/dev/null","sourceNew":"  private void collectTermContext(IndexReader reader,\n                                 List<LeafReaderContext> leaves, TermContext[] contextArray,\n                                 Term[] queryTerms) throws IOException {\n    TermsEnum termsEnum = null;\n    for (LeafReaderContext context : leaves) {\n      final Fields fields = context.reader().fields();\n      for (int i = 0; i < queryTerms.length; i++) {\n        Term term = queryTerms[i];\n        TermContext termContext = contextArray[i];\n        final Terms terms = fields.terms(term.field());\n        if (terms == null) {\n          // field does not exist\n          continue;\n        }\n        termsEnum = terms.iterator();\n        assert termsEnum != null;\n\n        if (termsEnum == TermsEnum.EMPTY) continue;\n        if (termsEnum.seekExact(term.bytes())) {\n          if (termContext == null) {\n            contextArray[i] = new TermContext(reader.getContext(),\n                termsEnum.termState(), context.ord, termsEnum.docFreq(),\n                termsEnum.totalTermFreq());\n          } else {\n            termContext.register(termsEnum.termState(), context.ord,\n                termsEnum.docFreq(), termsEnum.totalTermFreq());\n          }\n\n        }\n\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#collectTermContext(IndexReader,List[LeafReaderContext],TermContext[],Term[]).mjava","pathOld":"/dev/null","sourceNew":"  private void collectTermContext(IndexReader reader,\n                                 List<LeafReaderContext> leaves, TermContext[] contextArray,\n                                 Term[] queryTerms) throws IOException {\n    TermsEnum termsEnum = null;\n    for (LeafReaderContext context : leaves) {\n      final Fields fields = context.reader().fields();\n      for (int i = 0; i < queryTerms.length; i++) {\n        Term term = queryTerms[i];\n        TermContext termContext = contextArray[i];\n        final Terms terms = fields.terms(term.field());\n        if (terms == null) {\n          // field does not exist\n          continue;\n        }\n        termsEnum = terms.iterator();\n        assert termsEnum != null;\n\n        if (termsEnum == TermsEnum.EMPTY) continue;\n        if (termsEnum.seekExact(term.bytes())) {\n          if (termContext == null) {\n            contextArray[i] = new TermContext(reader.getContext(),\n                termsEnum.termState(), context.ord, termsEnum.docFreq(),\n                termsEnum.totalTermFreq());\n          } else {\n            termContext.register(termsEnum.termState(), context.ord,\n                termsEnum.docFreq(), termsEnum.totalTermFreq());\n          }\n\n        }\n\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53","date":1490757519,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#collectTermContext(IndexReaderContext,TermContext[],Term[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#collectTermContext(IndexReader,List[LeafReaderContext],TermContext[],Term[]).mjava","sourceNew":"  private void collectTermContext(IndexReaderContext topReaderContext, TermContext[] contextArray, Term[] queryTerms)\n      throws IOException {\n    TermsEnum termsEnum = null;\n    for (LeafReaderContext context : topReaderContext.leaves()) {\n      final Fields fields = context.reader().fields();\n      for (int i = 0; i < queryTerms.length; i++) {\n        Term term = queryTerms[i];\n        final Terms terms = fields.terms(term.field());\n        if (terms == null) {\n          // field does not exist\n          continue;\n        }\n        termsEnum = terms.iterator();\n        assert termsEnum != null;\n\n        if (termsEnum == TermsEnum.EMPTY) continue;\n\n        TermContext termContext = contextArray[i];\n        if (termsEnum.seekExact(term.bytes())) {\n          if (termContext == null) {\n            termContext = new TermContext(topReaderContext);\n            contextArray[i] = termContext;\n          }\n          termContext.accumulateStatistics(termsEnum.docFreq(), termsEnum.totalTermFreq());\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void collectTermContext(IndexReader reader,\n                                 List<LeafReaderContext> leaves, TermContext[] contextArray,\n                                 Term[] queryTerms) throws IOException {\n    TermsEnum termsEnum = null;\n    for (LeafReaderContext context : leaves) {\n      final Fields fields = context.reader().fields();\n      for (int i = 0; i < queryTerms.length; i++) {\n        Term term = queryTerms[i];\n        TermContext termContext = contextArray[i];\n        final Terms terms = fields.terms(term.field());\n        if (terms == null) {\n          // field does not exist\n          continue;\n        }\n        termsEnum = terms.iterator();\n        assert termsEnum != null;\n\n        if (termsEnum == TermsEnum.EMPTY) continue;\n        if (termsEnum.seekExact(term.bytes())) {\n          if (termContext == null) {\n            contextArray[i] = new TermContext(reader.getContext(),\n                termsEnum.termState(), context.ord, termsEnum.docFreq(),\n                termsEnum.totalTermFreq());\n          } else {\n            termContext.register(termsEnum.termState(), context.ord,\n                termsEnum.docFreq(), termsEnum.totalTermFreq());\n          }\n\n        }\n\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4302dfeb5d01c940f69c48bec27f03ad8828668","date":1490873946,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#collectTermContext(IndexReaderContext,TermContext[],Term[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/TermsComponent#collectTermContext(IndexReader,List[LeafReaderContext],TermContext[],Term[]).mjava","sourceNew":"  private void collectTermContext(IndexReaderContext topReaderContext, TermContext[] contextArray, Term[] queryTerms)\n      throws IOException {\n    TermsEnum termsEnum = null;\n    for (LeafReaderContext context : topReaderContext.leaves()) {\n      final Fields fields = context.reader().fields();\n      for (int i = 0; i < queryTerms.length; i++) {\n        Term term = queryTerms[i];\n        final Terms terms = fields.terms(term.field());\n        if (terms == null) {\n          // field does not exist\n          continue;\n        }\n        termsEnum = terms.iterator();\n        assert termsEnum != null;\n\n        if (termsEnum == TermsEnum.EMPTY) continue;\n\n        TermContext termContext = contextArray[i];\n        if (termsEnum.seekExact(term.bytes())) {\n          if (termContext == null) {\n            termContext = new TermContext(topReaderContext);\n            contextArray[i] = termContext;\n          }\n          termContext.accumulateStatistics(termsEnum.docFreq(), termsEnum.totalTermFreq());\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void collectTermContext(IndexReader reader,\n                                 List<LeafReaderContext> leaves, TermContext[] contextArray,\n                                 Term[] queryTerms) throws IOException {\n    TermsEnum termsEnum = null;\n    for (LeafReaderContext context : leaves) {\n      final Fields fields = context.reader().fields();\n      for (int i = 0; i < queryTerms.length; i++) {\n        Term term = queryTerms[i];\n        TermContext termContext = contextArray[i];\n        final Terms terms = fields.terms(term.field());\n        if (terms == null) {\n          // field does not exist\n          continue;\n        }\n        termsEnum = terms.iterator();\n        assert termsEnum != null;\n\n        if (termsEnum == TermsEnum.EMPTY) continue;\n        if (termsEnum.seekExact(term.bytes())) {\n          if (termContext == null) {\n            contextArray[i] = new TermContext(reader.getContext(),\n                termsEnum.termState(), context.ord, termsEnum.docFreq(),\n                termsEnum.totalTermFreq());\n          } else {\n            termContext.register(termsEnum.termState(), context.ord,\n                termsEnum.docFreq(), termsEnum.totalTermFreq());\n          }\n\n        }\n\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53":["6e7761210febbbf9eb64d86512126e718181aec9"],"a4302dfeb5d01c940f69c48bec27f03ad8828668":["6e7761210febbbf9eb64d86512126e718181aec9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6e7761210febbbf9eb64d86512126e718181aec9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e7761210febbbf9eb64d86512126e718181aec9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53"]},"commit2Childs":{"194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a4302dfeb5d01c940f69c48bec27f03ad8828668":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e7761210febbbf9eb64d86512126e718181aec9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6e7761210febbbf9eb64d86512126e718181aec9":["194ca6939cf04fa69e4bbcaf0fed482ae1f5fa53","a4302dfeb5d01c940f69c48bec27f03ad8828668","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a4302dfeb5d01c940f69c48bec27f03ad8828668","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}