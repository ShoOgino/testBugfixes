{"path":"lucene/src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","pathOld":"src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","sourceNew":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), Similarity.getDefault(), doc);\n  }\n\n","sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), Similarity.getDefault(), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f8e68717c68517265937c911e1ce9f25750247","date":1274071103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","sourceNew":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), Similarity.getDefault(), doc);\n  }\n\n","sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), Similarity.getDefault(), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9325c7ff9928fabe81c28553b41fc7aa57dfab","date":1295896411,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","sourceNew":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), Similarity.getDefault(), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","sourceNew":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), Similarity.getDefault(), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","sourceNew":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","sourceNew":null,"sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), Similarity.getDefault(), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/DocHelper#writeDoc(Directory,Document).mjava","sourceNew":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","sourceOld":"  /**\n   * Writes the document to the directory using a segment\n   * named \"test\"; returns the SegmentInfo describing the new\n   * segment \n   * @param dir\n   * @param doc\n   * @throws IOException\n   */ \n  public static SegmentInfo writeDoc(Directory dir, Document doc) throws IOException\n  {\n    return writeDoc(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), null, doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["c7f8e68717c68517265937c911e1ce9f25750247"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["c7f8e68717c68517265937c911e1ce9f25750247","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7f8e68717c68517265937c911e1ce9f25750247":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["c7f8e68717c68517265937c911e1ce9f25750247","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"]},"commit2Childs":{"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c7f8e68717c68517265937c911e1ce9f25750247":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab","29ef99d61cda9641b6250bf9567329a6e65f901d","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c7f8e68717c68517265937c911e1ce9f25750247"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}