{"path":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(String,String,Node).mjava","commits":[{"id":"29633c90dc51f05e4bbfe2e9f1991cdeee08b2d1","date":1183450581,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(String,String,Node).mjava","pathOld":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(String,String,Map[String,String],Node).mjava","sourceNew":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( String name, String className, Node node ) throws Exception\n  {\n    return (T) Config.newInstance( className, getDefaultPackages() );\n  }\n\n","sourceOld":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\" arg1=\"val1\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param params - the parameters specified in the XML.  In the example above,\n   * this would be a map containing [name=name1, class=solr.ClassName, arg1=val1]\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( String name, String className, Map<String,String> params, Node node ) throws Exception\n  {\n    return (T) Config.newInstance( className, getDefaultPackages() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(SolrCore,String,String,Node).mjava","pathOld":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(String,String,Node).mjava","sourceNew":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( SolrCore core, String name, String className, Node node ) throws Exception\n  {\n    if (core != null)\n      return (T) core.createInstance(className, null, \"plug-in\");\n    return (T) Config.newInstance( className, getDefaultPackages() );\n  }\n\n","sourceOld":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( String name, String className, Node node ) throws Exception\n  {\n    return (T) Config.newInstance( className, getDefaultPackages() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["29633c90dc51f05e4bbfe2e9f1991cdeee08b2d1"],"29633c90dc51f05e4bbfe2e9f1991cdeee08b2d1":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":[],"29633c90dc51f05e4bbfe2e9f1991cdeee08b2d1":["6d6338c87060be5f66757a94945975f3bbd377a9"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["29633c90dc51f05e4bbfe2e9f1991cdeee08b2d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6d6338c87060be5f66757a94945975f3bbd377a9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}