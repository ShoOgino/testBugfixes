{"path":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random, dir, name);\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random, dir, name);\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random(), dir, name);\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random, dir, name);\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55eeb2534cd53d2a985669829df942468ebf5314","date":1354409119,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  // nocommit put this back!  this test fails because the\n  // old codec does not have a SimpleNorms impl...\n  @Ignore(\"nocommit put me back\")\n  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random(), dir, name);\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random(), dir, name);\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e865135253d3ad47840f06992c7c801e3fd71907","date":1359057708,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random(), dir, name);\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // nocommit put this back!  this test fails because the\n  // old codec does not have a SimpleNorms impl...\n  @Ignore(\"nocommit put me back\")\n  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random(), dir, name);\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random(), dir, name);\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random(), dir, name);\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testIndexOldIndex().mjava","sourceNew":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random(), dir, name);\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testIndexOldIndex() throws IOException {\n    for (String name : oldNames) {\n      if (VERBOSE) {\n        System.out.println(\"TEST: oldName=\" + name);\n      }\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n      changeIndexWithAdds(random(), dir, name);\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"55eeb2534cd53d2a985669829df942468ebf5314":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"e865135253d3ad47840f06992c7c801e3fd71907":["55eeb2534cd53d2a985669829df942468ebf5314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["4cc45c615dbb82bf79d5f9550286098367874fbf","55eeb2534cd53d2a985669829df942468ebf5314","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"55eeb2534cd53d2a985669829df942468ebf5314":["e865135253d3ad47840f06992c7c801e3fd71907"],"e865135253d3ad47840f06992c7c801e3fd71907":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["e865135253d3ad47840f06992c7c801e3fd71907","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}