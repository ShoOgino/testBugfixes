{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/RectIntersectionTestHelper#intersectRects(Rectangle,Rectangle).mjava","commits":[{"id":"8fc7b597b2d21a932a857539efde49f09ec86ba0","date":1429537254,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/RectIntersectionTestHelper#intersectRects(Rectangle,Rectangle).mjava","pathOld":"/dev/null","sourceNew":"  private Rectangle intersectRects(Rectangle r1, Rectangle r2) {\n    assert r1.relate(r2).intersects();\n    final double minX, maxX;\n    if (r1.relateXRange(r2.getMinX(),r2.getMinX()).intersects()) {\n      minX = r2.getMinX();\n    } else {\n      minX = r1.getMinX();\n    }\n    if (r1.relateXRange(r2.getMaxX(),r2.getMaxX()).intersects()) {\n      maxX = r2.getMaxX();\n    } else {\n      maxX = r1.getMaxX();\n    }\n    final double minY, maxY;\n    if (r1.relateYRange(r2.getMinY(),r2.getMinY()).intersects()) {\n      minY = r2.getMinY();\n    } else {\n      minY = r1.getMinY();\n    }\n    if (r1.relateYRange(r2.getMaxY(),r2.getMaxY()).intersects()) {\n      maxY = r2.getMaxY();\n    } else {\n      maxY = r1.getMaxY();\n    }\n    return ctx.makeRectangle(minX, maxX, minY, maxY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/RectIntersectionTestHelper#intersectRects(Rectangle,Rectangle).mjava","pathOld":"/dev/null","sourceNew":"  private Rectangle intersectRects(Rectangle r1, Rectangle r2) {\n    assert r1.relate(r2).intersects();\n    final double minX, maxX;\n    if (r1.relateXRange(r2.getMinX(),r2.getMinX()).intersects()) {\n      minX = r2.getMinX();\n    } else {\n      minX = r1.getMinX();\n    }\n    if (r1.relateXRange(r2.getMaxX(),r2.getMaxX()).intersects()) {\n      maxX = r2.getMaxX();\n    } else {\n      maxX = r1.getMaxX();\n    }\n    final double minY, maxY;\n    if (r1.relateYRange(r2.getMinY(),r2.getMinY()).intersects()) {\n      minY = r2.getMinY();\n    } else {\n      minY = r1.getMinY();\n    }\n    if (r1.relateYRange(r2.getMaxY(),r2.getMaxY()).intersects()) {\n      maxY = r2.getMaxY();\n    } else {\n      maxY = r1.getMaxY();\n    }\n    return ctx.makeRectangle(minX, maxX, minY, maxY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf5e612561242a48ae4523531000b80864f864cf","date":1442976403,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/RectIntersectionTestHelper#intersectRects(Rectangle,Rectangle).mjava","sourceNew":null,"sourceOld":"  private Rectangle intersectRects(Rectangle r1, Rectangle r2) {\n    assert r1.relate(r2).intersects();\n    final double minX, maxX;\n    if (r1.relateXRange(r2.getMinX(),r2.getMinX()).intersects()) {\n      minX = r2.getMinX();\n    } else {\n      minX = r1.getMinX();\n    }\n    if (r1.relateXRange(r2.getMaxX(),r2.getMaxX()).intersects()) {\n      maxX = r2.getMaxX();\n    } else {\n      maxX = r1.getMaxX();\n    }\n    final double minY, maxY;\n    if (r1.relateYRange(r2.getMinY(),r2.getMinY()).intersects()) {\n      minY = r2.getMinY();\n    } else {\n      minY = r1.getMinY();\n    }\n    if (r1.relateYRange(r2.getMaxY(),r2.getMaxY()).intersects()) {\n      maxY = r2.getMaxY();\n    } else {\n      maxY = r1.getMaxY();\n    }\n    return ctx.makeRectangle(minX, maxX, minY, maxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8fc7b597b2d21a932a857539efde49f09ec86ba0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bf5e612561242a48ae4523531000b80864f864cf":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8fc7b597b2d21a932a857539efde49f09ec86ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bf5e612561242a48ae4523531000b80864f864cf"]},"commit2Childs":{"8fc7b597b2d21a932a857539efde49f09ec86ba0":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fc7b597b2d21a932a857539efde49f09ec86ba0","c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"bf5e612561242a48ae4523531000b80864f864cf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["bf5e612561242a48ae4523531000b80864f864cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}