{"path":"lucene/core/src/java/org/apache/lucene/util/CollectionUtil#[T]_introSort(List[T],Comparator[#-super-T]).mjava","commits":[{"id":"dcc555744b1a581a4beccd0b75f8d3fe49735a2f","date":1367588265,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CollectionUtil#[T]_introSort(List[T],Comparator[#-super-T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/CollectionUtil#[T]_mergeSort(List[T],Comparator[#-super-T]).mjava","sourceNew":"  /**\n   * Sorts the given random access {@link List} using the {@link Comparator}.\n   * The list must implement {@link RandomAccess}. This method uses the intro sort\n   * algorithm, but falls back to insertion sort for small lists.\n   * @throws IllegalArgumentException if list is e.g. a linked list without random access.\n   */\n  public static <T> void introSort(List<T> list, Comparator<? super T> comp) {\n    final int size = list.size();\n    if (size <= 1) return;\n    new ListIntroSorter<>(list, comp).sort(0, size);\n  }\n\n","sourceOld":"  /**\n   * Sorts the given random access {@link List} using the {@link Comparator}.\n   * The list must implement {@link RandomAccess}. This method uses the merge sort\n   * algorithm, but falls back to insertion sort for small lists.\n   * @throws IllegalArgumentException if list is e.g. a linked list without random access.\n   */\n  public static <T> void mergeSort(List<T> list, Comparator<? super T> comp) {\n    final int size = list.size();\n    if (size <= 1) return;\n    getMergeSorter(list, comp).mergeSort(0, size-1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dcc555744b1a581a4beccd0b75f8d3fe49735a2f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dcc555744b1a581a4beccd0b75f8d3fe49735a2f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dcc555744b1a581a4beccd0b75f8d3fe49735a2f"],"dcc555744b1a581a4beccd0b75f8d3fe49735a2f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}