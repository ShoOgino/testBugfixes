{"path":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","commits":[{"id":"901a50ac0a5d082fcdd15805491ef4b2d686907a","date":1358167485,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","sourceNew":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        if (isIndexInfoNeeded) {\n          RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n          try {\n            SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n            long size = getIndexSize(core);\n            indexInfo.add(\"sizeInBytes\", size);\n            indexInfo.add(\"size\", NumberUtils.readableSize(size));\n            info.add(\"index\", indexInfo);\n          } finally {\n            searcher.decref();\n          }\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n          long size = getIndexSize(core);\n          indexInfo.add(\"sizeInBytes\", size);\n          indexInfo.add(\"size\", NumberUtils.readableSize(size));\n          info.add(\"index\", indexInfo);\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","sourceNew":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        if (isIndexInfoNeeded) {\n          RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n          try {\n            SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n            long size = getIndexSize(core);\n            indexInfo.add(\"sizeInBytes\", size);\n            indexInfo.add(\"size\", NumberUtils.readableSize(size));\n            info.add(\"index\", indexInfo);\n          } finally {\n            searcher.decref();\n          }\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n          long size = getIndexSize(core);\n          indexInfo.add(\"sizeInBytes\", size);\n          indexInfo.add(\"size\", NumberUtils.readableSize(size));\n          info.add(\"index\", indexInfo);\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(\"name\", desc.getName());\n        info.add(\"isDefaultCore\", desc.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      SolrCore core = cores.getCore(cname);\n      if (core != null) {\n        try {\n          info.add(\"name\", core.getName());\n          info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        } finally {\n          core.close();\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        if (isIndexInfoNeeded) {\n          RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n          try {\n            SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n            long size = getIndexSize(core);\n            indexInfo.add(\"sizeInBytes\", size);\n            indexInfo.add(\"size\", NumberUtils.readableSize(size));\n            info.add(\"index\", indexInfo);\n          } finally {\n            searcher.decref();\n          }\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(\"name\", desc.getName());\n        info.add(\"isDefaultCore\", desc.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      SolrCore core = cores.getCore(cname);\n      if (core != null) {\n        try {\n          info.add(\"name\", core.getName());\n          info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        } finally {\n          core.close();\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(\"name\", desc.getName());\n        info.add(\"isDefaultCore\", desc.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      SolrCore core = cores.getCore(cname);\n      if (core != null) {\n        try {\n          info.add(\"name\", core.getName());\n          info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        } finally {\n          core.close();\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e332392bbbdd01cb69ad6a89051f483cda38e15e","date":1395758779,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(\"name\", desc.getName());\n        info.add(\"isDefaultCore\", desc.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(\"name\", core.getName());\n          info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(\"name\", desc.getName());\n        info.add(\"isDefaultCore\", desc.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      SolrCore core = cores.getCore(cname);\n      if (core != null) {\n        try {\n          info.add(\"name\", core.getName());\n          info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        } finally {\n          core.close();\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(\"name\", desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(\"name\", core.getName());\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(\"name\", desc.getName());\n        info.add(\"isDefaultCore\", desc.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(\"name\", core.getName());\n          info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1390137e395d2f07f9ba5b8c43d293befe84d563","date":1427947685,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(\"name\", desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(\"name\", core.getName());\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(\"name\", desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(\"name\", core.getName());\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", new Date(core.getStartTime()));\n          info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05","date":1446751515,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (coreContainer.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (coreContainer.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (coreContainer.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0876236f0bd8be403747120d248bdd42b75a96","date":1451844229,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","sourceNew":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (cores.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Returns the core status for a particular core.\n   * @param cores - the enclosing core container\n   * @param cname - the core to return\n   * @param isIndexInfoNeeded - add what may be expensive index information. NOT returned if the core is not loaded\n   * @return - a named list of key/value pairs from the core.\n   * @throws IOException - LukeRequestHandler can throw an I/O exception\n   */\n  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded)  throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<>();\n\n    if (!cores.isLoaded(cname)) { // Lazily-loaded core, fill in what we can.\n      // It would be a real mistake to load the cores just to get the status\n      CoreDescriptor desc = cores.getUnloadedCoreDescriptor(cname);\n      if (desc != null) {\n        info.add(NAME, desc.getName());\n        info.add(\"instanceDir\", desc.getInstanceDir());\n        // None of the following are guaranteed to be present in a not-yet-loaded core.\n        String tmp = desc.getDataDir();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"dataDir\", tmp);\n        tmp = desc.getConfigName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"config\", tmp);\n        tmp = desc.getSchemaName();\n        if (StringUtils.isNotBlank(tmp)) info.add(\"schema\", tmp);\n        info.add(\"isLoaded\", \"false\");\n      }\n    } else {\n      try (SolrCore core = cores.getCore(cname)) {\n        if (core != null) {\n          info.add(NAME, core.getName());\n          info.add(\"instanceDir\", core.getResourceLoader().getInstancePath().toString());\n          info.add(\"dataDir\", normalizePath(core.getDataDir()));\n          info.add(\"config\", core.getConfigResource());\n          info.add(\"schema\", core.getSchemaResource());\n          info.add(\"startTime\", core.getStartTimeStamp());\n          info.add(\"uptime\", core.getUptimeMs());\n          if (coreContainer.isZooKeeperAware()) {\n            info.add(\"lastPublished\", core.getCoreDescriptor().getCloudDescriptor().getLastPublished().toString().toLowerCase(Locale.ROOT));\n          }\n          if (isIndexInfoNeeded) {\n            RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n            try {\n              SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n              long size = getIndexSize(core);\n              indexInfo.add(\"sizeInBytes\", size);\n              indexInfo.add(\"size\", NumberUtils.readableSize(size));\n              info.add(\"index\", indexInfo);\n            } finally {\n              searcher.decref();\n            }\n          }\n        }\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a837c064b67fa63a9394136e31218b908cdcf783"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","901a50ac0a5d082fcdd15805491ef4b2d686907a"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"fa0876236f0bd8be403747120d248bdd42b75a96":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"901a50ac0a5d082fcdd15805491ef4b2d686907a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","1390137e395d2f07f9ba5b8c43d293befe84d563"],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"a837c064b67fa63a9394136e31218b908cdcf783":["901a50ac0a5d082fcdd15805491ef4b2d686907a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa0876236f0bd8be403747120d248bdd42b75a96"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["1390137e395d2f07f9ba5b8c43d293befe84d563","d2638f781be724518ff6c2263d14a48cf6e68017"],"fa0876236f0bd8be403747120d248bdd42b75a96":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"901a50ac0a5d082fcdd15805491ef4b2d686907a":["8917bfede3b4ca30f4305c1e391e9218959cd723","a837c064b67fa63a9394136e31218b908cdcf783"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["fa0876236f0bd8be403747120d248bdd42b75a96"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["d2638f781be724518ff6c2263d14a48cf6e68017","bcf9886c8ff537aafde14de48ebf744f5673f08b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8917bfede3b4ca30f4305c1e391e9218959cd723","901a50ac0a5d082fcdd15805491ef4b2d686907a"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05"],"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"a837c064b67fa63a9394136e31218b908cdcf783":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}