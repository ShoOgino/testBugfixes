{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","sourceNew":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.version == segmentInfos.version) + \" DW changes: \" + docWriter.anyChanges() + \" BD changes: \"+bufferedDeletesStream.any());\n\n    }\n    return infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any();\n  }\n\n","sourceOld":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.version == segmentInfos.version) + \" DW changes: \" + docWriter.anyChanges() + \" BD changes: \"+bufferedDeletesStream.any());\n\n    }\n    return infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3af8c90c5e965a1a8011e827ab59de734c7dfb79","date":1368108782,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","sourceNew":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.version == segmentInfos.version) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedDeletesStream.any());\n    }\n    return infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any();\n  }\n\n","sourceOld":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.version == segmentInfos.version) + \" DW changes: \" + docWriter.anyChanges() + \" BD changes: \"+bufferedDeletesStream.any());\n\n    }\n    return infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any();\n  }\n\n","bugFix":["06584e6e98d592b34e1329b384182f368d2025e8","a1c3710e755dc60691ac0d7fe23c9fcba0537bdc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","sourceNew":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.version == segmentInfos.version) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n    }\n    return infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedUpdatesStream.any();\n  }\n\n","sourceOld":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.version == segmentInfos.version) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedDeletesStream.any());\n    }\n    return infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52fec7e0b4cecd2051ad26c460c05f37729a292a","date":1416864388,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","sourceNew":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    boolean isCurrent = infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedUpdatesStream.any();\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.version == segmentInfos.version) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","sourceOld":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.version == segmentInfos.version) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n    }\n    return infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedUpdatesStream.any();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","sourceNew":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    boolean isCurrent = infos.getVersion() == segmentInfos.getVersion() && !docWriter.anyChanges() && !bufferedUpdatesStream.any();\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.getVersion() == segmentInfos.getVersion()) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","sourceOld":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    boolean isCurrent = infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedUpdatesStream.any();\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.version == segmentInfos.version) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","sourceNew":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    boolean isCurrent = infos.getVersion() == segmentInfos.getVersion() && !docWriter.anyChanges() && !bufferedUpdatesStream.any();\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.getVersion() == segmentInfos.getVersion()) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","sourceOld":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    boolean isCurrent = infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedUpdatesStream.any();\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.version == segmentInfos.version) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","sourceNew":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    ensureOpen();\n    boolean isCurrent = infos.getVersion() == segmentInfos.getVersion()\n      && docWriter.anyChanges() == false\n      && bufferedUpdatesStream.any() == false\n      && readerPool.anyChanges() == false;\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.getVersion() == segmentInfos.getVersion()) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","sourceOld":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    boolean isCurrent = infos.getVersion() == segmentInfos.getVersion() && !docWriter.anyChanges() && !bufferedUpdatesStream.any();\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.getVersion() == segmentInfos.getVersion()) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","sourceNew":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    ensureOpen();\n    boolean isCurrent = infos.getVersion() == segmentInfos.getVersion()\n      && docWriter.anyChanges() == false\n      && bufferedUpdatesStream.any() == false\n      && readerPool.anyChanges() == false;\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.getVersion() == segmentInfos.getVersion()) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","sourceOld":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    boolean isCurrent = infos.getVersion() == segmentInfos.getVersion() && !docWriter.anyChanges() && !bufferedUpdatesStream.any();\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.getVersion() == segmentInfos.getVersion()) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","sourceNew":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    ensureOpen();\n    boolean isCurrent = infos.getVersion() == segmentInfos.getVersion()\n      && docWriter.anyChanges() == false\n      && bufferedUpdatesStream.any() == false\n      && readerPool.anyChanges() == false;\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.getVersion() == segmentInfos.getVersion()) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","sourceOld":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n    ensureOpen();\n    boolean isCurrent = infos.getVersion() == segmentInfos.getVersion() && !docWriter.anyChanges() && !bufferedUpdatesStream.any();\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.getVersion() == segmentInfos.getVersion()) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1926100d9b67becc9701c54266fee3ba7878a5f0","date":1524472150,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#nrtIsCurrent(SegmentInfos).mjava","sourceNew":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    ensureOpen();\n    boolean isCurrent = infos.getVersion() == segmentInfos.getVersion()\n      && docWriter.anyChanges() == false\n      && bufferedUpdatesStream.any() == false\n      && readerPool.anyDocValuesChanges() == false;\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.getVersion() == segmentInfos.getVersion()) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","sourceOld":"  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    ensureOpen();\n    boolean isCurrent = infos.getVersion() == segmentInfos.getVersion()\n      && docWriter.anyChanges() == false\n      && bufferedUpdatesStream.any() == false\n      && readerPool.anyChanges() == false;\n    if (infoStream.isEnabled(\"IW\")) {\n      if (isCurrent == false) {\n        infoStream.message(\"IW\", \"nrtIsCurrent: infoVersion matches: \" + (infos.getVersion() == segmentInfos.getVersion()) + \"; DW changes: \" + docWriter.anyChanges() + \"; BD changes: \"+ bufferedUpdatesStream.any());\n      }\n    }\n    return isCurrent;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["3af8c90c5e965a1a8011e827ab59de734c7dfb79"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["68496c2200e559fb7802f7575427b7a482659afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3af8c90c5e965a1a8011e827ab59de734c7dfb79":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"68496c2200e559fb7802f7575427b7a482659afb":["52fec7e0b4cecd2051ad26c460c05f37729a292a","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"1926100d9b67becc9701c54266fee3ba7878a5f0":["28288370235ed02234a64753cdbf0c6ec096304a"],"52fec7e0b4cecd2051ad26c460c05f37729a292a":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["68496c2200e559fb7802f7575427b7a482659afb","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["68496c2200e559fb7802f7575427b7a482659afb","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1926100d9b67becc9701c54266fee3ba7878a5f0"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["52fec7e0b4cecd2051ad26c460c05f37729a292a"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["52fec7e0b4cecd2051ad26c460c05f37729a292a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3af8c90c5e965a1a8011e827ab59de734c7dfb79"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3af8c90c5e965a1a8011e827ab59de734c7dfb79":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"68496c2200e559fb7802f7575427b7a482659afb":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"1926100d9b67becc9701c54266fee3ba7878a5f0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"52fec7e0b4cecd2051ad26c460c05f37729a292a":["68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["1926100d9b67becc9701c54266fee3ba7878a5f0"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}