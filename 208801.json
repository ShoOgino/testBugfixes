{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","commits":[{"id":"02e8faf10211a6fbcdd8675af75977da20199190","date":1340393829,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","pathOld":"/dev/null","sourceNew":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy());\n\n    // Start false:\n    ((LogMergePolicy) iwc.getMergePolicy()).setUseCompoundFile(false); \n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    // Change to true:\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setNoCFSRatio(1.0);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    for(String file : dir.listAll()) {\n      // frq file should be stuck into CFS\n      assertFalse(file.endsWith(\".frq\"));\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","pathOld":"/dev/null","sourceNew":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy());\n\n    // Start false:\n    ((LogMergePolicy) iwc.getMergePolicy()).setUseCompoundFile(false); \n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    // Change to true:\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setNoCFSRatio(1.0);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    for(String file : dir.listAll()) {\n      // frq file should be stuck into CFS\n      assertFalse(file.endsWith(\".frq\"));\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7b103c0ed2ba7edf422d1ccb5489815dc6acb84","date":1345973500,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","sourceNew":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n\n    // Start false:\n    ((LogMergePolicy) iwc.getMergePolicy()).setUseCompoundFile(false); \n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    LogMergePolicy lmp = ((LogMergePolicy) w.getConfig().getMergePolicy());\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    for(String file : dir.listAll()) {\n      // frq file should be stuck into CFS\n      assertFalse(file.endsWith(\".frq\"));\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy());\n\n    // Start false:\n    ((LogMergePolicy) iwc.getMergePolicy()).setUseCompoundFile(false); \n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    // Change to true:\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setNoCFSRatio(1.0);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    for(String file : dir.listAll()) {\n      // frq file should be stuck into CFS\n      assertFalse(file.endsWith(\".frq\"));\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a18af0b40c5bc15970bfe2d9e1c1ee80e6a5e88","date":1345974595,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","sourceNew":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n\n    // Start false:\n    ((LogMergePolicy) iwc.getMergePolicy()).setUseCompoundFile(false); \n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    // Change to true:\n    LogMergePolicy lmp = ((LogMergePolicy) w.getConfig().getMergePolicy());\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n    lmp.setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    for(String file : dir.listAll()) {\n      // frq file should be stuck into CFS\n      assertFalse(file.endsWith(\".frq\"));\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n\n    // Start false:\n    ((LogMergePolicy) iwc.getMergePolicy()).setUseCompoundFile(false); \n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    LogMergePolicy lmp = ((LogMergePolicy) w.getConfig().getMergePolicy());\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    for(String file : dir.listAll()) {\n      // frq file should be stuck into CFS\n      assertFalse(file.endsWith(\".frq\"));\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","sourceNew":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n\n    // Start false:\n    ((LogMergePolicy) iwc.getMergePolicy()).setUseCompoundFile(false); \n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    // Change to true:\n    LogMergePolicy lmp = ((LogMergePolicy) w.getConfig().getMergePolicy());\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n    lmp.setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    for(String file : dir.listAll()) {\n      // frq file should be stuck into CFS\n      assertFalse(file.endsWith(\".frq\"));\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy());\n\n    // Start false:\n    ((LogMergePolicy) iwc.getMergePolicy()).setUseCompoundFile(false); \n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    // Change to true:\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setNoCFSRatio(1.0);\n    ((LogMergePolicy) w.getConfig().getMergePolicy()).setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    for(String file : dir.listAll()) {\n      // frq file should be stuck into CFS\n      assertFalse(file.endsWith(\".frq\"));\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","sourceNew":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n\n    // Start false:\n    iwc.getMergePolicy().setNoCFSRatio(0.0); \n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    // Change to true:\n    MergePolicy lmp = w.getConfig().getMergePolicy();\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    for(String file : dir.listAll()) {\n      // frq file should be stuck into CFS\n      assertFalse(file.endsWith(\".frq\"));\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n\n    // Start false:\n    ((LogMergePolicy) iwc.getMergePolicy()).setUseCompoundFile(false); \n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    // Change to true:\n    LogMergePolicy lmp = ((LogMergePolicy) w.getConfig().getMergePolicy());\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n    lmp.setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    for(String file : dir.listAll()) {\n      // frq file should be stuck into CFS\n      assertFalse(file.endsWith(\".frq\"));\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"501124000f86b463f647e940ad3b4e02046fe183","date":1371207329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","sourceNew":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n    // Start false:\n    iwc.setUseCompoundFile(false); \n    iwc.getMergePolicy().setNoCFSRatio(0.0d);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Change to true:\n    w.getConfig().setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    assertTrue(\"Expected CFS after commit\", w.newestSegment().info.getUseCompoundFile());\n    \n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.forceMerge(1);\n    w.commit();\n   \n    // no compound files after merge\n    assertFalse(\"Expected Non-CFS after merge\", w.newestSegment().info.getUseCompoundFile());\n    \n    MergePolicy lmp = w.getConfig().getMergePolicy();\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n    \n    w.addDocument(doc);\n    w.forceMerge(1);\n    w.commit();\n    assertTrue(\"Expected CFS after merge\", w.newestSegment().info.getUseCompoundFile());\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n\n    // Start false:\n    iwc.getMergePolicy().setNoCFSRatio(0.0); \n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    // Change to true:\n    MergePolicy lmp = w.getConfig().getMergePolicy();\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    for(String file : dir.listAll()) {\n      // frq file should be stuck into CFS\n      assertFalse(file.endsWith(\".frq\"));\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","sourceNew":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n    // Start false:\n    iwc.setUseCompoundFile(false); \n    iwc.getMergePolicy().setNoCFSRatio(0.0d);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Change to true:\n    w.getConfig().setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    assertTrue(\"Expected CFS after commit\", w.newestSegment().info.getUseCompoundFile());\n    \n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.forceMerge(1);\n    w.commit();\n   \n    // no compound files after merge\n    assertFalse(\"Expected Non-CFS after merge\", w.newestSegment().info.getUseCompoundFile());\n    \n    MergePolicy lmp = w.getConfig().getMergePolicy();\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n    \n    w.addDocument(doc);\n    w.forceMerge(1);\n    w.commit();\n    assertTrue(\"Expected CFS after merge\", w.newestSegment().info.getUseCompoundFile());\n    w.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n    // Start false:\n    iwc.setUseCompoundFile(false); \n    iwc.getMergePolicy().setNoCFSRatio(0.0d);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Change to true:\n    w.getConfig().setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    assertTrue(\"Expected CFS after commit\", w.newestSegment().info.getUseCompoundFile());\n    \n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.forceMerge(1);\n    w.commit();\n   \n    // no compound files after merge\n    assertFalse(\"Expected Non-CFS after merge\", w.newestSegment().info.getUseCompoundFile());\n    \n    MergePolicy lmp = w.getConfig().getMergePolicy();\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n    \n    w.addDocument(doc);\n    w.forceMerge(1);\n    w.commit();\n    assertTrue(\"Expected CFS after merge\", w.newestSegment().info.getUseCompoundFile());\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testLiveChangeToCFS().mjava","sourceNew":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n    // Start false:\n    iwc.setUseCompoundFile(false); \n    iwc.getMergePolicy().setNoCFSRatio(0.0d);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Change to true:\n    w.getConfig().setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    assertTrue(\"Expected CFS after commit\", w.newestSegment().info.getUseCompoundFile());\n    \n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.forceMerge(1);\n    w.commit();\n   \n    // no compound files after merge\n    assertFalse(\"Expected Non-CFS after merge\", w.newestSegment().info.getUseCompoundFile());\n    \n    MergePolicy lmp = w.getConfig().getMergePolicy();\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n    \n    w.addDocument(doc);\n    w.forceMerge(1);\n    w.commit();\n    assertTrue(\"Expected CFS after merge\", w.newestSegment().info.getUseCompoundFile());\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLiveChangeToCFS() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setMergePolicy(newLogMergePolicy(true));\n    // Start false:\n    iwc.setUseCompoundFile(false); \n    iwc.getMergePolicy().setNoCFSRatio(0.0d);\n    IndexWriter w = new IndexWriter(dir, iwc);\n    // Change to true:\n    w.getConfig().setUseCompoundFile(true);\n\n    Document doc = new Document();\n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    assertTrue(\"Expected CFS after commit\", w.newestSegment().info.getUseCompoundFile());\n    \n    doc.add(newStringField(\"field\", \"foo\", Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    w.forceMerge(1);\n    w.commit();\n   \n    // no compound files after merge\n    assertFalse(\"Expected Non-CFS after merge\", w.newestSegment().info.getUseCompoundFile());\n    \n    MergePolicy lmp = w.getConfig().getMergePolicy();\n    lmp.setNoCFSRatio(1.0);\n    lmp.setMaxCFSSegmentSizeMB(Double.POSITIVE_INFINITY);\n    \n    w.addDocument(doc);\n    w.forceMerge(1);\n    w.commit();\n    assertTrue(\"Expected CFS after merge\", w.newestSegment().info.getUseCompoundFile());\n    w.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a18af0b40c5bc15970bfe2d9e1c1ee80e6a5e88":["e7b103c0ed2ba7edf422d1ccb5489815dc6acb84"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["9a18af0b40c5bc15970bfe2d9e1c1ee80e6a5e88"],"e7b103c0ed2ba7edf422d1ccb5489815dc6acb84":["02e8faf10211a6fbcdd8675af75977da20199190"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02e8faf10211a6fbcdd8675af75977da20199190"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"501124000f86b463f647e940ad3b4e02046fe183":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"02e8faf10211a6fbcdd8675af75977da20199190":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["501124000f86b463f647e940ad3b4e02046fe183"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["02e8faf10211a6fbcdd8675af75977da20199190","9a18af0b40c5bc15970bfe2d9e1c1ee80e6a5e88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"9a18af0b40c5bc15970bfe2d9e1c1ee80e6a5e88":["088a7ef694fd43d5d9a4d200c4005865f773d1e7","05a14b2611ead08655a2b2bdc61632eb31316e57"],"e7b103c0ed2ba7edf422d1ccb5489815dc6acb84":["9a18af0b40c5bc15970bfe2d9e1c1ee80e6a5e88"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["501124000f86b463f647e940ad3b4e02046fe183"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe33227f6805edab2036cbb80645cc4e2d1fa424","02e8faf10211a6fbcdd8675af75977da20199190"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"501124000f86b463f647e940ad3b4e02046fe183":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"02e8faf10211a6fbcdd8675af75977da20199190":["e7b103c0ed2ba7edf422d1ccb5489815dc6acb84","fe33227f6805edab2036cbb80645cc4e2d1fa424","05a14b2611ead08655a2b2bdc61632eb31316e57"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}