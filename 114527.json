{"path":"lucene/src/java/org/apache/lucene/index/codecs/perfield/PerFieldPostingsFormat.VisitPerFieldFile#VisitPerFieldFile(Directory,String,String).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/perfield/PerFieldPostingsFormat.VisitPerFieldFile#VisitPerFieldFile(Directory,String,String).mjava","pathOld":"/dev/null","sourceNew":"    public VisitPerFieldFile(Directory dir, String segmentName, String outerSegmentSuffix) throws IOException {\n      final String mapFileName = IndexFileNames.segmentFileName(segmentName, outerSegmentSuffix, PER_FIELD_EXTENSION);\n      final IndexInput in = dir.openInput(mapFileName, IOContext.READONCE);\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(in, PER_FIELD_NAME, VERSION_START, VERSION_LATEST);\n\n        // Read format name -> format id\n        final int formatCount = in.readVInt();\n        for(int formatIDX=0;formatIDX<formatCount;formatIDX++) {\n          final String segmentSuffix = in.readString();\n          final String formatName = in.readString();\n          PostingsFormat postingsFormat = PostingsFormat.forName(formatName);\n          //System.out.println(\"do lookup \" + formatName + \" -> \" + postingsFormat);\n          if (postingsFormat == null) {\n            throw new IllegalStateException(\"unable to lookup PostingsFormat for name=\\\"\" + formatName + \"\\\": got null\");\n          }\n\n          // Better be defined, because it was defined\n          // during indexing:\n          visitOneFormat(segmentSuffix, postingsFormat);\n        }\n\n        // Read field name -> format name\n        final int fieldCount = in.readVInt();\n        for(int fieldIDX=0;fieldIDX<fieldCount;fieldIDX++) {\n          final String fieldName = in.readString();\n          final String formatName = in.readString();\n          visitOneField(fieldName, PostingsFormat.forName(formatName));\n        }\n\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        } else {\n          IOUtils.close(in);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.VisitPerFieldFile#VisitPerFieldFile(Directory,String,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/perfield/PerFieldPostingsFormat.VisitPerFieldFile#VisitPerFieldFile(Directory,String,String).mjava","sourceNew":"    public VisitPerFieldFile(Directory dir, String segmentName, String outerSegmentSuffix) throws IOException {\n      final String mapFileName = IndexFileNames.segmentFileName(segmentName, outerSegmentSuffix, PER_FIELD_EXTENSION);\n      final IndexInput in = dir.openInput(mapFileName, IOContext.READONCE);\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(in, PER_FIELD_NAME, VERSION_START, VERSION_LATEST);\n\n        // Read format name -> format id\n        final int formatCount = in.readVInt();\n        for(int formatIDX=0;formatIDX<formatCount;formatIDX++) {\n          final String segmentSuffix = in.readString();\n          final String formatName = in.readString();\n          PostingsFormat postingsFormat = PostingsFormat.forName(formatName);\n          //System.out.println(\"do lookup \" + formatName + \" -> \" + postingsFormat);\n          if (postingsFormat == null) {\n            throw new IllegalStateException(\"unable to lookup PostingsFormat for name=\\\"\" + formatName + \"\\\": got null\");\n          }\n\n          // Better be defined, because it was defined\n          // during indexing:\n          visitOneFormat(segmentSuffix, postingsFormat);\n        }\n\n        // Read field name -> format name\n        final int fieldCount = in.readVInt();\n        for(int fieldIDX=0;fieldIDX<fieldCount;fieldIDX++) {\n          final String fieldName = in.readString();\n          final String formatName = in.readString();\n          visitOneField(fieldName, PostingsFormat.forName(formatName));\n        }\n\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        } else {\n          IOUtils.close(in);\n        }\n      }\n    }\n\n","sourceOld":"    public VisitPerFieldFile(Directory dir, String segmentName, String outerSegmentSuffix) throws IOException {\n      final String mapFileName = IndexFileNames.segmentFileName(segmentName, outerSegmentSuffix, PER_FIELD_EXTENSION);\n      final IndexInput in = dir.openInput(mapFileName, IOContext.READONCE);\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(in, PER_FIELD_NAME, VERSION_START, VERSION_LATEST);\n\n        // Read format name -> format id\n        final int formatCount = in.readVInt();\n        for(int formatIDX=0;formatIDX<formatCount;formatIDX++) {\n          final String segmentSuffix = in.readString();\n          final String formatName = in.readString();\n          PostingsFormat postingsFormat = PostingsFormat.forName(formatName);\n          //System.out.println(\"do lookup \" + formatName + \" -> \" + postingsFormat);\n          if (postingsFormat == null) {\n            throw new IllegalStateException(\"unable to lookup PostingsFormat for name=\\\"\" + formatName + \"\\\": got null\");\n          }\n\n          // Better be defined, because it was defined\n          // during indexing:\n          visitOneFormat(segmentSuffix, postingsFormat);\n        }\n\n        // Read field name -> format name\n        final int fieldCount = in.readVInt();\n        for(int fieldIDX=0;fieldIDX<fieldCount;fieldIDX++) {\n          final String fieldName = in.readString();\n          final String formatName = in.readString();\n          visitOneField(fieldName, PostingsFormat.forName(formatName));\n        }\n\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        } else {\n          IOUtils.close(in);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}