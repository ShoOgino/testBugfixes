{"path":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","commits":[{"id":"dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d","date":1450976696,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  BlockJoinFieldFacetAccumulator(String fieldName, SolrIndexSearcher searcher) throws IOException {\n    this.fieldName = fieldName;\n    schemaField = searcher.getSchema().getField(fieldName);\n    fieldType = schemaField.getType();\n    ordinalMap = null;\n    if (schemaField.multiValued()) {\n      topSSDV = searcher.getLeafReader().getSortedSetDocValues(fieldName);\n      if (topSSDV instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues) topSSDV).mapping;\n      }\n    } else {\n      SortedDocValues single = searcher.getLeafReader().getSortedDocValues(fieldName);\n      topSSDV = single == null ? null : DocValues.singleton(single);// npe friendly code\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues) single).mapping;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","sourceNew":"  BlockJoinFieldFacetAccumulator(String fieldName, SolrIndexSearcher searcher) throws IOException {\n    this.fieldName = fieldName;\n    schemaField = searcher.getSchema().getField(fieldName);\n    fieldType = schemaField.getType();\n    ordinalMap = null;\n    if (schemaField.multiValued()) {\n      topSSDV = searcher.getLeafReader().getSortedSetDocValues(fieldName);\n      if (topSSDV instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues) topSSDV).mapping;\n      }\n    } else {\n      SortedDocValues single = searcher.getLeafReader().getSortedDocValues(fieldName);\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues) single).mapping;\n      }\n      if (single != null) {\n        topSSDV = DocValues.singleton(single);\n      }\n    }\n  }\n\n","sourceOld":"  BlockJoinFieldFacetAccumulator(String fieldName, SolrIndexSearcher searcher) throws IOException {\n    this.fieldName = fieldName;\n    schemaField = searcher.getSchema().getField(fieldName);\n    fieldType = schemaField.getType();\n    ordinalMap = null;\n    if (schemaField.multiValued()) {\n      topSSDV = searcher.getLeafReader().getSortedSetDocValues(fieldName);\n      if (topSSDV instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues) topSSDV).mapping;\n      }\n    } else {\n      SortedDocValues single = searcher.getLeafReader().getSortedDocValues(fieldName);\n      topSSDV = single == null ? null : DocValues.singleton(single);// npe friendly code\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues) single).mapping;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","sourceNew":"  BlockJoinFieldFacetAccumulator(String fieldName, SolrIndexSearcher searcher) throws IOException {\n    this.fieldName = fieldName;\n    schemaField = searcher.getSchema().getField(fieldName);\n    fieldType = schemaField.getType();\n    ordinalMap = null;\n    if (schemaField.multiValued()) {\n      topSSDV = searcher.getLeafReader().getSortedSetDocValues(fieldName);\n      if (topSSDV instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues) topSSDV).mapping;\n      }\n    } else {\n      SortedDocValues single = searcher.getLeafReader().getSortedDocValues(fieldName);\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues) single).mapping;\n      }\n      if (single != null) {\n        topSSDV = DocValues.singleton(single);\n      }\n    }\n  }\n\n","sourceOld":"  BlockJoinFieldFacetAccumulator(String fieldName, SolrIndexSearcher searcher) throws IOException {\n    this.fieldName = fieldName;\n    schemaField = searcher.getSchema().getField(fieldName);\n    fieldType = schemaField.getType();\n    ordinalMap = null;\n    if (schemaField.multiValued()) {\n      topSSDV = searcher.getLeafReader().getSortedSetDocValues(fieldName);\n      if (topSSDV instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues) topSSDV).mapping;\n      }\n    } else {\n      SortedDocValues single = searcher.getLeafReader().getSortedDocValues(fieldName);\n      topSSDV = single == null ? null : DocValues.singleton(single);// npe friendly code\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues) single).mapping;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e07c409cff8701e4dc3d45934b021a949a5a8822","date":1475694629,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","sourceNew":"  BlockJoinFieldFacetAccumulator(String fieldName, SolrIndexSearcher searcher) throws IOException {\n    this.fieldName = fieldName;\n    schemaField = searcher.getSchema().getField(fieldName);\n    fieldType = schemaField.getType();\n    ordinalMap = null;\n    if (schemaField.multiValued()) {\n      topSSDV = searcher.getSlowAtomicReader().getSortedSetDocValues(fieldName);\n      if (topSSDV instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues) topSSDV).mapping;\n      }\n    } else {\n      SortedDocValues single = searcher.getSlowAtomicReader().getSortedDocValues(fieldName);\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues) single).mapping;\n      }\n      if (single != null) {\n        topSSDV = DocValues.singleton(single);\n      }\n    }\n  }\n\n","sourceOld":"  BlockJoinFieldFacetAccumulator(String fieldName, SolrIndexSearcher searcher) throws IOException {\n    this.fieldName = fieldName;\n    schemaField = searcher.getSchema().getField(fieldName);\n    fieldType = schemaField.getType();\n    ordinalMap = null;\n    if (schemaField.multiValued()) {\n      topSSDV = searcher.getLeafReader().getSortedSetDocValues(fieldName);\n      if (topSSDV instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues) topSSDV).mapping;\n      }\n    } else {\n      SortedDocValues single = searcher.getLeafReader().getSortedDocValues(fieldName);\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues) single).mapping;\n      }\n      if (single != null) {\n        topSSDV = DocValues.singleton(single);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","sourceNew":"  BlockJoinFieldFacetAccumulator(String fieldName, SolrIndexSearcher searcher) throws IOException {\n    this.fieldName = fieldName;\n    schemaField = searcher.getSchema().getField(fieldName);\n    fieldType = schemaField.getType();\n    ordinalMap = null;\n    if (schemaField.multiValued()) {\n      topSSDV = searcher.getSlowAtomicReader().getSortedSetDocValues(fieldName);\n      if (topSSDV instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues) topSSDV).mapping;\n      }\n    } else {\n      SortedDocValues single = searcher.getSlowAtomicReader().getSortedDocValues(fieldName);\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues) single).mapping;\n      }\n      if (single != null) {\n        topSSDV = DocValues.singleton(single);\n      }\n    }\n  }\n\n","sourceOld":"  BlockJoinFieldFacetAccumulator(String fieldName, SolrIndexSearcher searcher) throws IOException {\n    this.fieldName = fieldName;\n    schemaField = searcher.getSchema().getField(fieldName);\n    fieldType = schemaField.getType();\n    ordinalMap = null;\n    if (schemaField.multiValued()) {\n      topSSDV = searcher.getLeafReader().getSortedSetDocValues(fieldName);\n      if (topSSDV instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues) topSSDV).mapping;\n      }\n    } else {\n      SortedDocValues single = searcher.getLeafReader().getSortedDocValues(fieldName);\n      topSSDV = single == null ? null : DocValues.singleton(single);// npe friendly code\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues) single).mapping;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00a778ad8ad6c2c04607538d2f36fee001239eef","date":1576657013,"type":4,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","sourceNew":null,"sourceOld":"  BlockJoinFieldFacetAccumulator(String fieldName, SolrIndexSearcher searcher) throws IOException {\n    this.fieldName = fieldName;\n    schemaField = searcher.getSchema().getField(fieldName);\n    fieldType = schemaField.getType();\n    ordinalMap = null;\n    if (schemaField.multiValued()) {\n      topSSDV = searcher.getSlowAtomicReader().getSortedSetDocValues(fieldName);\n      if (topSSDV instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues) topSSDV).mapping;\n      }\n    } else {\n      SortedDocValues single = searcher.getSlowAtomicReader().getSortedDocValues(fieldName);\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues) single).mapping;\n      }\n      if (single != null) {\n        topSSDV = DocValues.singleton(single);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"246314af59d76a47fccc31e9494eefee01ec9c00","date":1576657955,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinFieldFacetAccumulator#BlockJoinFieldFacetAccumulator(String,SolrIndexSearcher).mjava","sourceNew":null,"sourceOld":"  BlockJoinFieldFacetAccumulator(String fieldName, SolrIndexSearcher searcher) throws IOException {\n    this.fieldName = fieldName;\n    schemaField = searcher.getSchema().getField(fieldName);\n    fieldType = schemaField.getType();\n    ordinalMap = null;\n    if (schemaField.multiValued()) {\n      topSSDV = searcher.getSlowAtomicReader().getSortedSetDocValues(fieldName);\n      if (topSSDV instanceof MultiDocValues.MultiSortedSetDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedSetDocValues) topSSDV).mapping;\n      }\n    } else {\n      SortedDocValues single = searcher.getSlowAtomicReader().getSortedDocValues(fieldName);\n      if (single instanceof MultiDocValues.MultiSortedDocValues) {\n        ordinalMap = ((MultiDocValues.MultiSortedDocValues) single).mapping;\n      }\n      if (single != null) {\n        topSSDV = DocValues.singleton(single);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"246314af59d76a47fccc31e9494eefee01ec9c00":["e07c409cff8701e4dc3d45934b021a949a5a8822","00a778ad8ad6c2c04607538d2f36fee001239eef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d"],"dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e07c409cff8701e4dc3d45934b021a949a5a8822":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"00a778ad8ad6c2c04607538d2f36fee001239eef":["e07c409cff8701e4dc3d45934b021a949a5a8822"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d","e07c409cff8701e4dc3d45934b021a949a5a8822"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["00a778ad8ad6c2c04607538d2f36fee001239eef"]},"commit2Childs":{"246314af59d76a47fccc31e9494eefee01ec9c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["e07c409cff8701e4dc3d45934b021a949a5a8822"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e07c409cff8701e4dc3d45934b021a949a5a8822":["246314af59d76a47fccc31e9494eefee01ec9c00","00a778ad8ad6c2c04607538d2f36fee001239eef","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"00a778ad8ad6c2c04607538d2f36fee001239eef":["246314af59d76a47fccc31e9494eefee01ec9c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["246314af59d76a47fccc31e9494eefee01ec9c00","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}