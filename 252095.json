{"path":"lucene/src/java/org/apache/lucene/index/DocFieldProcessorPerField#addField(IndexableField).mjava","commits":[{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessorPerField#addField(IndexableField).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessorPerField#addField(Fieldable).mjava","sourceNew":"  public void addField(IndexableField field) {\n    if (fieldCount == fields.length) {\n      int newSize = ArrayUtil.oversize(fieldCount + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      IndexableField[] newArray = new IndexableField[newSize];\n      System.arraycopy(fields, 0, newArray, 0, fieldCount);\n      fields = newArray;\n    }\n\n    fields[fieldCount++] = field;\n  }\n\n","sourceOld":"  public void addField(Fieldable field) {\n    if (fieldCount == fields.length) {\n      int newSize = ArrayUtil.oversize(fieldCount + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      Fieldable[] newArray = new Fieldable[newSize];\n      System.arraycopy(fields, 0, newArray, 0, fieldCount);\n      fields = newArray;\n    }\n\n    fields[fieldCount++] = field;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocFieldProcessorPerField#addField(IndexableField).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessorPerField#addField(IndexableField).mjava","sourceNew":"  public void addField(IndexableField field) {\n    if (fieldCount == fields.length) {\n      int newSize = ArrayUtil.oversize(fieldCount + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      IndexableField[] newArray = new IndexableField[newSize];\n      System.arraycopy(fields, 0, newArray, 0, fieldCount);\n      fields = newArray;\n    }\n\n    fields[fieldCount++] = field;\n  }\n\n","sourceOld":"  public void addField(IndexableField field) {\n    if (fieldCount == fields.length) {\n      int newSize = ArrayUtil.oversize(fieldCount + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      IndexableField[] newArray = new IndexableField[newSize];\n      System.arraycopy(fields, 0, newArray, 0, fieldCount);\n      fields = newArray;\n    }\n\n    fields[fieldCount++] = field;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}