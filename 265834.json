{"path":"src/java/org/apache/solr/search/function/DocValues#getRangeScorer(IndexReader,String,String,boolean,boolean).mjava","commits":[{"id":"c0d9871701755df956b8bb5e417776dacc7dc1f2","date":1237846124,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/DocValues#getRangeScorer(IndexReader,String,String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public ValueSourceScorer getRangeScorer(IndexReader reader, String lowerVal, String upperVal, boolean includeLower, boolean includeUpper) {\n    float lower;\n    float upper;\n\n    if (lowerVal == null) {\n      lower = Float.NEGATIVE_INFINITY;\n    } else {\n      lower = Float.parseFloat(lowerVal);\n    }\n    if (upperVal == null) {\n      upper = Float.POSITIVE_INFINITY;\n    } else {\n      upper = Float.parseFloat(upperVal);\n    }\n\n    final float l = lower;\n    final float u = upper;\n\n    if (includeLower && includeUpper) {\n      return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal >= l && docVal <= u;\n        }\n      };\n    }\n    else if (includeLower && !includeUpper) {\n       return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal >= l && docVal < u;\n        }\n      };\n    }\n    else if (!includeLower && includeUpper) {\n       return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal > l && docVal <= u;\n        }\n      };\n    }\n    else {\n       return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal > l && docVal < u;\n        }\n      };\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5639d0d5bffb5076883b28d9b3329fbd52812137","5639d0d5bffb5076883b28d9b3329fbd52812137","5639d0d5bffb5076883b28d9b3329fbd52812137","5639d0d5bffb5076883b28d9b3329fbd52812137"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/DocValues#getRangeScorer(IndexReader,String,String,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/search/function/DocValues#getRangeScorer(IndexReader,String,String,boolean,boolean).mjava","sourceNew":"  public ValueSourceScorer getRangeScorer(IndexReader reader, String lowerVal, String upperVal, boolean includeLower, boolean includeUpper) {\n    float lower;\n    float upper;\n\n    if (lowerVal == null) {\n      lower = Float.NEGATIVE_INFINITY;\n    } else {\n      lower = Float.parseFloat(lowerVal);\n    }\n    if (upperVal == null) {\n      upper = Float.POSITIVE_INFINITY;\n    } else {\n      upper = Float.parseFloat(upperVal);\n    }\n\n    final float l = lower;\n    final float u = upper;\n\n    if (includeLower && includeUpper) {\n      return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal >= l && docVal <= u;\n        }\n      };\n    }\n    else if (includeLower && !includeUpper) {\n       return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal >= l && docVal < u;\n        }\n      };\n    }\n    else if (!includeLower && includeUpper) {\n       return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal > l && docVal <= u;\n        }\n      };\n    }\n    else {\n       return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal > l && docVal < u;\n        }\n      };\n    }\n  }\n\n","sourceOld":"  public ValueSourceScorer getRangeScorer(IndexReader reader, String lowerVal, String upperVal, boolean includeLower, boolean includeUpper) {\n    float lower;\n    float upper;\n\n    if (lowerVal == null) {\n      lower = Float.NEGATIVE_INFINITY;\n    } else {\n      lower = Float.parseFloat(lowerVal);\n    }\n    if (upperVal == null) {\n      upper = Float.POSITIVE_INFINITY;\n    } else {\n      upper = Float.parseFloat(upperVal);\n    }\n\n    final float l = lower;\n    final float u = upper;\n\n    if (includeLower && includeUpper) {\n      return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal >= l && docVal <= u;\n        }\n      };\n    }\n    else if (includeLower && !includeUpper) {\n       return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal >= l && docVal < u;\n        }\n      };\n    }\n    else if (!includeLower && includeUpper) {\n       return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal > l && docVal <= u;\n        }\n      };\n    }\n    else {\n       return new ValueSourceScorer(reader, this) {\n        @Override\n        public boolean matchesValue(int doc) {\n          float docVal = floatVal(doc);\n          return docVal > l && docVal < u;\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c0d9871701755df956b8bb5e417776dacc7dc1f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0d9871701755df956b8bb5e417776dacc7dc1f2":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c0d9871701755df956b8bb5e417776dacc7dc1f2"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"c0d9871701755df956b8bb5e417776dacc7dc1f2":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}