{"path":"solr/core/src/java/org/apache/solr/schema/EnumFieldType#createFields(SchemaField,Object).mjava","commits":[{"id":"54ad8c9e9210e008dc7b8ad5a037ff20879150ea","date":1501889566,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumFieldType#createFields(SchemaField,Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if ( ! sf.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n          getClass().getSimpleName() + \" requires docValues=\\\"true\\\".\");\n    }\n    final IndexableField field = createField(sf, value);\n    final List<IndexableField> fields = new ArrayList<>();\n    fields.add(field);\n    final long longValue = field.numericValue().longValue();\n    if (sf.multiValued()) {\n      fields.add(new SortedNumericDocValuesField(sf.getName(), longValue));\n    } else {\n      fields.add(new NumericDocValuesField(sf.getName(), longValue));\n    }\n    return fields;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumFieldType#createFields(SchemaField,Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if ( ! sf.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n          getClass().getSimpleName() + \" requires docValues=\\\"true\\\".\");\n    }\n    final IndexableField field = createField(sf, value);\n    final List<IndexableField> fields = new ArrayList<>();\n    fields.add(field);\n    final long longValue = field.numericValue().longValue();\n    if (sf.multiValued()) {\n      fields.add(new SortedNumericDocValuesField(sf.getName(), longValue));\n    } else {\n      fields.add(new NumericDocValuesField(sf.getName(), longValue));\n    }\n    return fields;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54ad8c9e9210e008dc7b8ad5a037ff20879150ea"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}