{"path":"solr/core/src/test/org/apache/solr/cloud/ForceLeaderTest#getNumberOfActiveReplicas(ClusterState,String,String).mjava","commits":[{"id":"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05","date":1446751515,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ForceLeaderTest#getNumberOfActiveReplicas(ClusterState,String,String).mjava","pathOld":"/dev/null","sourceNew":"  protected int getNumberOfActiveReplicas(ClusterState clusterState, String collection, String sliceId) {\n    int numActiveReplicas = 0;\n    // Assert all replicas are active\n    for (Replica rep : clusterState.getSlice(collection, sliceId).getReplicas()) {\n      if (rep.getState().equals(State.ACTIVE)) {\n        numActiveReplicas++;\n      }\n    }\n    return numActiveReplicas;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["344b0840364d990b29b97467bfcc766ff8325d11"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"344b0840364d990b29b97467bfcc766ff8325d11","date":1501574100,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ForceLeaderTest#getNumberOfActiveReplicas(ClusterState,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ForceLeaderTest#getNumberOfActiveReplicas(ClusterState,String,String).mjava","sourceNew":"  protected int getNumberOfActiveReplicas(ClusterState clusterState, String collection, String sliceId) {\n    int numActiveReplicas = 0;\n    // Assert all replicas are active\n    for (Replica rep : clusterState.getCollection(collection).getSlice(sliceId).getReplicas()) {\n      if (rep.getState().equals(State.ACTIVE)) {\n        numActiveReplicas++;\n      }\n    }\n    return numActiveReplicas;\n  }\n\n","sourceOld":"  protected int getNumberOfActiveReplicas(ClusterState clusterState, String collection, String sliceId) {\n    int numActiveReplicas = 0;\n    // Assert all replicas are active\n    for (Replica rep : clusterState.getSlice(collection, sliceId).getReplicas()) {\n      if (rep.getState().equals(State.ACTIVE)) {\n        numActiveReplicas++;\n      }\n    }\n    return numActiveReplicas;\n  }\n\n","bugFix":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ForceLeaderTest#getNumberOfActiveReplicas(ClusterState,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ForceLeaderTest#getNumberOfActiveReplicas(ClusterState,String,String).mjava","sourceNew":"  protected int getNumberOfActiveReplicas(ClusterState clusterState, String collection, String sliceId) {\n    int numActiveReplicas = 0;\n    // Assert all replicas are active\n    for (Replica rep : clusterState.getCollection(collection).getSlice(sliceId).getReplicas()) {\n      if (rep.getState().equals(State.ACTIVE)) {\n        numActiveReplicas++;\n      }\n    }\n    return numActiveReplicas;\n  }\n\n","sourceOld":"  protected int getNumberOfActiveReplicas(ClusterState clusterState, String collection, String sliceId) {\n    int numActiveReplicas = 0;\n    // Assert all replicas are active\n    for (Replica rep : clusterState.getSlice(collection, sliceId).getReplicas()) {\n      if (rep.getState().equals(State.ACTIVE)) {\n        numActiveReplicas++;\n      }\n    }\n    return numActiveReplicas;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23899910c6ea46c4aff96056cfae91d3e31b262a","date":1522788117,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ForceLeaderTest#getNumberOfActiveReplicas(ClusterState,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ForceLeaderTest#getNumberOfActiveReplicas(ClusterState,String,String).mjava","sourceNew":"  private int getNumberOfActiveReplicas(ClusterState clusterState, String collection, String sliceId) {\n    int numActiveReplicas = 0;\n    // Assert all replicas are active\n    for (Replica rep : clusterState.getCollection(collection).getSlice(sliceId).getReplicas()) {\n      if (rep.getState().equals(State.ACTIVE)) {\n        numActiveReplicas++;\n      }\n    }\n    return numActiveReplicas;\n  }\n\n","sourceOld":"  protected int getNumberOfActiveReplicas(ClusterState clusterState, String collection, String sliceId) {\n    int numActiveReplicas = 0;\n    // Assert all replicas are active\n    for (Replica rep : clusterState.getCollection(collection).getSlice(sliceId).getReplicas()) {\n      if (rep.getState().equals(State.ACTIVE)) {\n        numActiveReplicas++;\n      }\n    }\n    return numActiveReplicas;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05","344b0840364d990b29b97467bfcc766ff8325d11"],"344b0840364d990b29b97467bfcc766ff8325d11":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23899910c6ea46c4aff96056cfae91d3e31b262a":["344b0840364d990b29b97467bfcc766ff8325d11"],"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23899910c6ea46c4aff96056cfae91d3e31b262a"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"344b0840364d990b29b97467bfcc766ff8325d11":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","23899910c6ea46c4aff96056cfae91d3e31b262a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05"],"23899910c6ea46c4aff96056cfae91d3e31b262a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","344b0840364d990b29b97467bfcc766ff8325d11"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}