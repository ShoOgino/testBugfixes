{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","commits":[{"id":"8a093d23e938d132b81b5f2de3d6b168afe3608e","date":1455076308,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":"  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLon, final double minLat, final double maxLon, final double maxLat) {\n    this.field = field;\n    this.minLon = minLon;\n    this.minLat = minLat;\n    this.maxLon = maxLon;\n    this.maxLat = maxLat;\n    this.termEncoding = termEncoding;\n  }\n\n","sourceOld":"  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLon, final double minLat, final double maxLon, final double maxLat) {\n    this.field = field;\n    this.minLon = minLon;\n    this.minLat = minLat;\n    this.maxLon = maxLon;\n    this.maxLat = maxLat;\n    this.termEncoding = termEncoding;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLon, final double minLat, final double maxLon, final double maxLat) {\n    this.field = field;\n    this.minLon = minLon;\n    this.minLat = minLat;\n    this.maxLon = maxLon;\n    this.maxLat = maxLat;\n    this.termEncoding = termEncoding;\n  }\n\n","sourceOld":"  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLon, final double minLat, final double maxLon, final double maxLat) {\n    this.field = field;\n    this.minLon = minLon;\n    this.minLat = minLat;\n    this.maxLon = maxLon;\n    this.maxLat = maxLat;\n    this.termEncoding = termEncoding;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLon, final double minLat, final double maxLon, final double maxLat) {\n    this.field = field;\n    this.minLon = minLon;\n    this.minLat = minLat;\n    this.maxLon = maxLon;\n    this.maxLat = maxLat;\n    this.termEncoding = termEncoding;\n  }\n\n","sourceOld":"  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLon, final double minLat, final double maxLon, final double maxLat) {\n    this.field = field;\n    this.minLon = minLon;\n    this.minLat = minLat;\n    this.maxLon = maxLon;\n    this.maxLat = maxLat;\n    this.termEncoding = termEncoding;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLat, final double maxLat, final double minLon, final double maxLon) {\n    this.field = field;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.termEncoding = termEncoding;\n  }\n\n","sourceOld":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLon, final double minLat, final double maxLon, final double maxLat) {\n    this.field = field;\n    this.minLon = minLon;\n    this.minLat = minLat;\n    this.maxLon = maxLon;\n    this.maxLat = maxLat;\n    this.termEncoding = termEncoding;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6c59bc551f4e523ce6a321280cc6733424fb824","date":1458837690,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLat, final double maxLat, final double minLon, final double maxLon) {\n    if (field == null) {\n      throw new IllegalArgumentException(\"field cannot be null\");\n    }\n    if (termEncoding == null) {\n      throw new IllegalArgumentException(\"termEncoding cannot be null\");\n    }\n    if (GeoUtils.isValidLat(minLat) == false) {\n      throw new IllegalArgumentException(\"invalid minimum latitude: \" + minLat + \", must be -90 to 90\");\n    }\n    if (GeoUtils.isValidLat(maxLat) == false) {\n      throw new IllegalArgumentException(\"invalid maximum latitude: \" + maxLat + \", must be -90 to 90\");\n    }\n    if (GeoUtils.isValidLon(minLon) == false) {\n      throw new IllegalArgumentException(\"invalid minimum longitude: \" + minLon + \", must be -180 to 180\");\n    }\n    if (GeoUtils.isValidLon(maxLon) == false) {\n      throw new IllegalArgumentException(\"invalid maximum longitude: \" + maxLon + \", must be -180 to 180\");\n    }\n    this.field = field;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.termEncoding = termEncoding;\n  }\n\n","sourceOld":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLat, final double maxLat, final double minLon, final double maxLon) {\n    this.field = field;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.termEncoding = termEncoding;\n  }\n\n","bugFix":null,"bugIntro":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0da288484d638cec72e8fc33363e4c0532d35ff0","date":1459115234,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLat, final double maxLat, final double minLon, final double maxLon) {\n    if (field == null) {\n      throw new IllegalArgumentException(\"field cannot be null\");\n    }\n    if (termEncoding == null) {\n      throw new IllegalArgumentException(\"termEncoding cannot be null\");\n    }\n    GeoUtils.checkLatitude(minLat);\n    GeoUtils.checkLatitude(maxLat);\n    GeoUtils.checkLongitude(minLon);\n    GeoUtils.checkLongitude(maxLon);\n    this.field = field;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.termEncoding = termEncoding;\n  }\n\n","sourceOld":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLat, final double maxLat, final double minLon, final double maxLon) {\n    if (field == null) {\n      throw new IllegalArgumentException(\"field cannot be null\");\n    }\n    if (termEncoding == null) {\n      throw new IllegalArgumentException(\"termEncoding cannot be null\");\n    }\n    if (GeoUtils.isValidLat(minLat) == false) {\n      throw new IllegalArgumentException(\"invalid minimum latitude: \" + minLat + \", must be -90 to 90\");\n    }\n    if (GeoUtils.isValidLat(maxLat) == false) {\n      throw new IllegalArgumentException(\"invalid maximum latitude: \" + maxLat + \", must be -90 to 90\");\n    }\n    if (GeoUtils.isValidLon(minLon) == false) {\n      throw new IllegalArgumentException(\"invalid minimum longitude: \" + minLon + \", must be -180 to 180\");\n    }\n    if (GeoUtils.isValidLon(maxLon) == false) {\n      throw new IllegalArgumentException(\"invalid maximum longitude: \" + maxLon + \", must be -180 to 180\");\n    }\n    this.field = field;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.termEncoding = termEncoding;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad0d09e969f4763b0df4230f8e3f74357872a4e4","date":1459188769,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLat, final double maxLat, final double minLon, final double maxLon) {\n    if (field == null) {\n      throw new IllegalArgumentException(\"field must not be null\");\n    }\n    if (termEncoding == null) {\n      throw new IllegalArgumentException(\"termEncoding must not be null\");\n    }\n    GeoUtils.checkLatitude(minLat);\n    GeoUtils.checkLatitude(maxLat);\n    GeoUtils.checkLongitude(minLon);\n    GeoUtils.checkLongitude(maxLon);\n    this.field = field;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.termEncoding = termEncoding;\n  }\n\n","sourceOld":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLat, final double maxLat, final double minLon, final double maxLon) {\n    if (field == null) {\n      throw new IllegalArgumentException(\"field cannot be null\");\n    }\n    if (termEncoding == null) {\n      throw new IllegalArgumentException(\"termEncoding cannot be null\");\n    }\n    GeoUtils.checkLatitude(minLat);\n    GeoUtils.checkLatitude(maxLat);\n    GeoUtils.checkLongitude(minLon);\n    GeoUtils.checkLongitude(maxLon);\n    this.field = field;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.termEncoding = termEncoding;\n  }\n\n","bugFix":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be46ccf1a05985ba9fec84cb8674b607a23d5442","date":1465576866,"type":4,"author":"Nicholas Knize","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLat, final double maxLat, final double minLon, final double maxLon) {\n    if (field == null) {\n      throw new IllegalArgumentException(\"field must not be null\");\n    }\n    if (termEncoding == null) {\n      throw new IllegalArgumentException(\"termEncoding must not be null\");\n    }\n    GeoUtils.checkLatitude(minLat);\n    GeoUtils.checkLatitude(maxLat);\n    GeoUtils.checkLongitude(minLon);\n    GeoUtils.checkLongitude(maxLon);\n    this.field = field;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.termEncoding = termEncoding;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointInBBoxQuery#GeoPointInBBoxQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types that fall within a\n   * defined bounding box. Accepts optional {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding} parameter\n   */\n  public GeoPointInBBoxQuery(final String field, final TermEncoding termEncoding, final double minLat, final double maxLat, final double minLon, final double maxLon) {\n    if (field == null) {\n      throw new IllegalArgumentException(\"field must not be null\");\n    }\n    if (termEncoding == null) {\n      throw new IllegalArgumentException(\"termEncoding must not be null\");\n    }\n    GeoUtils.checkLatitude(minLat);\n    GeoUtils.checkLatitude(maxLat);\n    GeoUtils.checkLongitude(minLon);\n    GeoUtils.checkLongitude(maxLon);\n    this.field = field;\n    this.minLat = minLat;\n    this.maxLat = maxLat;\n    this.minLon = minLon;\n    this.maxLon = maxLon;\n    this.termEncoding = termEncoding;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["8a093d23e938d132b81b5f2de3d6b168afe3608e","112d77ac8d3e10a362516ad834c9a11d35c94234"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["af2638813028b254a88b418ebeafb541afb49653"],"0da288484d638cec72e8fc33363e4c0532d35ff0":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["0da288484d638cec72e8fc33363e4c0532d35ff0"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"be46ccf1a05985ba9fec84cb8674b607a23d5442":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ad0d09e969f4763b0df4230f8e3f74357872a4e4","be46ccf1a05985ba9fec84cb8674b607a23d5442"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["be46ccf1a05985ba9fec84cb8674b607a23d5442"],"d6c59bc551f4e523ce6a321280cc6733424fb824":["ec996bf2daff09d61a876319e8fae4aebbea58e3"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"0da288484d638cec72e8fc33363e4c0532d35ff0":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["be46ccf1a05985ba9fec84cb8674b607a23d5442","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"be46ccf1a05985ba9fec84cb8674b607a23d5442":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d6c59bc551f4e523ce6a321280cc6733424fb824":["0da288484d638cec72e8fc33363e4c0532d35ff0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}