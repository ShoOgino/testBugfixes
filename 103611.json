{"path":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(docStoreSegment, IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(docStoreSegment, IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(docStoreSegment, IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(docStoreSegment, IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(docStoreSegment, IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(docStoreSegment, IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(docStoreSegment, IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(docStoreSegment, IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(docStoreSegment, IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":["5ef87af8c7bd0f8429622b83aa74202383f2e757"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"833a7987bc1c94455fde83e3311f72bddedcfb93","date":1279951470,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String segment = docWriter.getSegment();\n\n      if (segment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ef87af8c7bd0f8429622b83aa74202383f2e757","date":1280262785,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String segment = docWriter.getSegment();\n\n      if (segment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String segment = docWriter.getSegment();\n\n      if (segment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":["5350389bf83287111f7760b9e3db3af8e3648474","775efee7f959e0dd3df7960b93767d9e00b78751","6c18273ea5b3974d2f30117f46f1ae416c28f727"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e1cbd7e289dc1243c7a59e1a83d078163a147fe","date":1292268032,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n\n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      hasVectors = true;\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      hasVectors = true;\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n\n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      hasVectors = true;\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      hasVectors = true;\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(docStoreSegment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(idxName);\n      docWriter.addOpenFile(fldName);\n      docWriter.addOpenFile(docName);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      hasVectors = true;\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String segment = docWriter.getSegment();\n\n      if (segment == null)\n        return;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      String idxName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_INDEX_EXTENSION);\n      String docName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      String fldName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      tvx = docWriter.directory.createOutput(idxName);\n      tvd = docWriter.directory.createOutput(docName);\n      tvf = docWriter.directory.createOutput(fldName);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba55720b69e79b42960ddcde40c19fe27049f5ad","date":1298394897,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      hasVectors = true;\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      hasVectors = true;\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      hasVectors = true;\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      hasVectors = true;\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n      tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n      tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        IOContext context = new IOContext(Context.FLUSH);\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6f9be74ca7baaef11857ad002cad40419979516","date":1309449808,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        IOContext context = new IOContext(Context.FLUSH);\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION));\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION));\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION));\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeSafely(true, tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":null,"sourceOld":"  private final void initTermVectorsWriter() throws IOException {\n    if (tvx == null) {\n      boolean success = false;\n      try {\n        IOContext context = new IOContext(new FlushInfo(docWriter.getNumDocsInRAM(), docWriter.bytesUsed()));\n        // If we hit an exception while init'ing the term\n        // vector output files, we must abort this segment\n        // because those files will be in an unknown\n        // state:\n        tvx = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_INDEX_EXTENSION), context);\n        tvd = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), context);\n        tvf = docWriter.directory.createOutput(IndexFileNames.segmentFileName(docWriter.getSegment(), \"\", IndexFileNames.VECTORS_FIELDS_EXTENSION), context);\n\n        tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(tvx, tvd, tvf);\n        }\n      }\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"efb7a19703a037c29e30440260d393500febc1f4":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"3cc749c053615f5871f3b95715fe292f34e70a53":["24230fe54121f9be9d85f2c2067536296785e421"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","ba55720b69e79b42960ddcde40c19fe27049f5ad"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["efb7a19703a037c29e30440260d393500febc1f4"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5ef87af8c7bd0f8429622b83aa74202383f2e757","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","efb7a19703a037c29e30440260d393500febc1f4"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6f9be74ca7baaef11857ad002cad40419979516":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["833a7987bc1c94455fde83e3311f72bddedcfb93"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["efb7a19703a037c29e30440260d393500febc1f4","b6f9be74ca7baaef11857ad002cad40419979516"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"7e1cbd7e289dc1243c7a59e1a83d078163a147fe":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"ba55720b69e79b42960ddcde40c19fe27049f5ad":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["6c18273ea5b3974d2f30117f46f1ae416c28f727"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["135621f3a0670a9394eb563224a3b76cc4dddc0f","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["3cc749c053615f5871f3b95715fe292f34e70a53"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["833a7987bc1c94455fde83e3311f72bddedcfb93"],"efb7a19703a037c29e30440260d393500febc1f4":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","ddc4c914be86e34b54f70023f45a60fa7f04e929","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["efb7a19703a037c29e30440260d393500febc1f4","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["b6f9be74ca7baaef11857ad002cad40419979516"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ba55720b69e79b42960ddcde40c19fe27049f5ad"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["6c18273ea5b3974d2f30117f46f1ae416c28f727","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b6f9be74ca7baaef11857ad002cad40419979516":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["24230fe54121f9be9d85f2c2067536296785e421","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a3776dccca01c11e7046323cfad46a3b4a471233"],"7e1cbd7e289dc1243c7a59e1a83d078163a147fe":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"ba55720b69e79b42960ddcde40c19fe27049f5ad":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["5ef87af8c7bd0f8429622b83aa74202383f2e757"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}