{"path":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetsWithNestedObjects#testUniqueBlock().mjava","commits":[{"id":"79a29c6bd3f9ceeff3a351a23029546d12b66034","date":1525195155,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetsWithNestedObjects#testUniqueBlock().mjava","pathOld":"/dev/null","sourceNew":"  public void testUniqueBlock() throws Exception {\n    final Client client = Client.localClient();\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n    client.testJQ(params(p, \"q\", \"{!parent tag=top which=type_s:book v=$childquery}\"\n        , \"childquery\", \"comment_t:*\"\n        , \"fl\", \"id\", \"fl\" , \"title_t\" \n        , \"json.facet\", \"{\" +\n            \"  types: {\" +\n            \"    domain: { blockChildren:\\\"type_s:book\\\"\" +  \n             \"            },\" +\n            \"    type:terms,\" +\n            \"    field:type_s,\"\n            + \"  limit:-1,\" +\n            \"    facet: {\" +\n            \"           in_books: \\\"uniqueBlock(_root_)\\\" }\"+//}},\" +\n            \"  }\" +\n        \"}\" )\n\n        , \"response=={numFound:2,start:0,docs:[]}\"\n        , \"facets=={ count:2,\" +\n            \"types:{\" +\n            \"    buckets:[ {val:review,    count:5, in_books:2} ]}\" +\n            \"}\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"952363820b4b19866405197065083f25808fa7bb","date":1580645735,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetsWithNestedObjects#testUniqueBlock().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetsWithNestedObjects#testUniqueBlock().mjava","sourceNew":"  public void testUniqueBlock() throws Exception {\n    final Client client = Client.localClient();\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    // unique block using field and query logic\n    client.testJQ(params(p, \"q\", \"{!parent tag=top which=type_s:book v=$childquery}\"\n        , \"childquery\", \"comment_t:*\"\n        , \"fl\", \"id\", \"fl\" , \"title_t\"\n        , \"root\", \"_root_\"\n        , \"parentQuery\", \"type_s:book\"\n        , \"json.facet\", \"{\" +\n            \"  types: {\" +\n            \"    domain: { blockChildren:\\\"type_s:book\\\"\" +\n            \"            },\" +\n            \"    type:terms,\" +\n            \"    field:type_s,\" +\n            \"    limit:-1,\" +\n            \"    facet: {\" +\n            \"           in_books1: \\\"uniqueBlock(_root_)\\\",\" + // field logic\n            \"           in_books2: \\\"uniqueBlock($root)\\\",\" + // field reference logic\n            \"           via_query1:\\\"uniqueBlock({!v=type_s:book})\\\", \" + // query logic\n            \"           via_query2:\\\"uniqueBlock({!v=$parentQuery})\\\" ,\" + // query reference logic\n            \"           partial_query:\\\"uniqueBlock({!v=cat_s:fantasy})\\\" ,\" + // first doc hit only, never count afterwards\n            \"           query_no_match:\\\"uniqueBlock({!v=cat_s:horor})\\\" }\" +\n            \"  }\" +\n            \"}\" )\n\n        , \"response=={numFound:2,start:0,docs:[]}\"\n        , \"facets=={ count:2,\" +\n            \"types:{\" +\n            \"    buckets:[ {val:review, count:5, in_books1:2, in_books2:2, \"\n            + \"                                  via_query1:2, via_query2:2, \"\n            + \"                                  partial_query:1, query_no_match:0} ]}\" +\n            \"}\"\n    );\n  }\n\n","sourceOld":"  public void testUniqueBlock() throws Exception {\n    final Client client = Client.localClient();\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n    client.testJQ(params(p, \"q\", \"{!parent tag=top which=type_s:book v=$childquery}\"\n        , \"childquery\", \"comment_t:*\"\n        , \"fl\", \"id\", \"fl\" , \"title_t\" \n        , \"json.facet\", \"{\" +\n            \"  types: {\" +\n            \"    domain: { blockChildren:\\\"type_s:book\\\"\" +  \n             \"            },\" +\n            \"    type:terms,\" +\n            \"    field:type_s,\"\n            + \"  limit:-1,\" +\n            \"    facet: {\" +\n            \"           in_books: \\\"uniqueBlock(_root_)\\\" }\"+//}},\" +\n            \"  }\" +\n        \"}\" )\n\n        , \"response=={numFound:2,start:0,docs:[]}\"\n        , \"facets=={ count:2,\" +\n            \"types:{\" +\n            \"    buckets:[ {val:review,    count:5, in_books:2} ]}\" +\n            \"}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"640ded7811e1b7d29236a5e2934ec3cd266a8199","date":1588973147,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetsWithNestedObjects#testUniqueBlock().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetsWithNestedObjects#testUniqueBlock().mjava","sourceNew":"  public void testUniqueBlock() throws Exception {\n    final Client client = Client.localClient();\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    // unique block using field and query logic\n    client.testJQ(params(p, \"q\", \"{!parent tag=top which=type_s:book v=$childquery}\"\n        , \"childquery\", \"comment_t:*\"\n        , \"fl\", \"id\", \"fl\" , \"title_t\"\n        , \"root\", \"_root_\"\n        , \"parentQuery\", \"type_s:book\"\n        , \"json.facet\", \"{\" +\n            \"  types: {\" +\n            \"    domain: { blockChildren:\\\"type_s:book\\\"\" +\n            \"            },\" +\n            \"    type:terms,\" +\n            \"    field:type_s,\" +\n            \"    limit:-1,\" +\n            \"    facet: {\" +\n            \"           in_books1: \\\"uniqueBlock(_root_)\\\",\" + // field logic\n            \"           in_books2: \\\"uniqueBlock($root)\\\",\" + // field reference logic\n            \"           via_query1:\\\"uniqueBlock({!v=type_s:book})\\\", \" + // query logic\n            \"           via_query2:\\\"uniqueBlock({!v=$parentQuery})\\\" ,\" + // query reference logic\n            \"           partial_query:\\\"uniqueBlock({!v=cat_s:fantasy})\\\" ,\" + // first doc hit only, never count afterwards\n            \"           query_no_match:\\\"uniqueBlock({!v=cat_s:horor})\\\" }\" +\n            \"  }\" +\n            \"}\" )\n\n        , \"response=={numFound:2,start:0,'numFoundExact':true,docs:[]}\"\n        , \"facets=={ count:2,\" +\n            \"types:{\" +\n            \"    buckets:[ {val:review, count:5, in_books1:2, in_books2:2, \"\n            + \"                                  via_query1:2, via_query2:2, \"\n            + \"                                  partial_query:1, query_no_match:0} ]}\" +\n            \"}\"\n    );\n  }\n\n","sourceOld":"  public void testUniqueBlock() throws Exception {\n    final Client client = Client.localClient();\n    ModifiableSolrParams p = params(\"rows\",\"0\");\n\n    // unique block using field and query logic\n    client.testJQ(params(p, \"q\", \"{!parent tag=top which=type_s:book v=$childquery}\"\n        , \"childquery\", \"comment_t:*\"\n        , \"fl\", \"id\", \"fl\" , \"title_t\"\n        , \"root\", \"_root_\"\n        , \"parentQuery\", \"type_s:book\"\n        , \"json.facet\", \"{\" +\n            \"  types: {\" +\n            \"    domain: { blockChildren:\\\"type_s:book\\\"\" +\n            \"            },\" +\n            \"    type:terms,\" +\n            \"    field:type_s,\" +\n            \"    limit:-1,\" +\n            \"    facet: {\" +\n            \"           in_books1: \\\"uniqueBlock(_root_)\\\",\" + // field logic\n            \"           in_books2: \\\"uniqueBlock($root)\\\",\" + // field reference logic\n            \"           via_query1:\\\"uniqueBlock({!v=type_s:book})\\\", \" + // query logic\n            \"           via_query2:\\\"uniqueBlock({!v=$parentQuery})\\\" ,\" + // query reference logic\n            \"           partial_query:\\\"uniqueBlock({!v=cat_s:fantasy})\\\" ,\" + // first doc hit only, never count afterwards\n            \"           query_no_match:\\\"uniqueBlock({!v=cat_s:horor})\\\" }\" +\n            \"  }\" +\n            \"}\" )\n\n        , \"response=={numFound:2,start:0,docs:[]}\"\n        , \"facets=={ count:2,\" +\n            \"types:{\" +\n            \"    buckets:[ {val:review, count:5, in_books1:2, in_books2:2, \"\n            + \"                                  via_query1:2, via_query2:2, \"\n            + \"                                  partial_query:1, query_no_match:0} ]}\" +\n            \"}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["952363820b4b19866405197065083f25808fa7bb"],"952363820b4b19866405197065083f25808fa7bb":["79a29c6bd3f9ceeff3a351a23029546d12b66034"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"79a29c6bd3f9ceeff3a351a23029546d12b66034":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["640ded7811e1b7d29236a5e2934ec3cd266a8199"]},"commit2Childs":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"952363820b4b19866405197065083f25808fa7bb":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["79a29c6bd3f9ceeff3a351a23029546d12b66034"],"79a29c6bd3f9ceeff3a351a23029546d12b66034":["952363820b4b19866405197065083f25808fa7bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}