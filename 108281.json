{"path":"lucene/src/java/org/apache/lucene/store/Directory#sync(Collection[String]).mjava","commits":[{"id":"e4b4e97a5e8ab5b96cc56c561131d720c756756b","date":1269362401,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#sync(Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Ensure that any writes to these files are moved to\n   * stable storage.  Lucene uses this to properly commit\n   * changes to the index, to prevent a machine/OS crash\n   * from corrupting the index.<br/>\n   * <br/>\n   * NOTE: Clients may call this method for same files over\n   * and over again, so some impls might optimize for that.\n   * For other impls the operation can be a noop, for various\n   * reasons.\n   */\n  public void sync(Collection<String> names) throws IOException { // TODO 4.0 make me abstract\n    for (String name : names)\n      sync(name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#sync(Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#sync(Collection[String]).mjava","sourceNew":"  /**\n   * Ensure that any writes to these files are moved to\n   * stable storage.  Lucene uses this to properly commit\n   * changes to the index, to prevent a machine/OS crash\n   * from corrupting the index.<br/>\n   * <br/>\n   * NOTE: Clients may call this method for same files over\n   * and over again, so some impls might optimize for that.\n   * For other impls the operation can be a noop, for various\n   * reasons.\n   */\n  public abstract void sync(Collection<String> names) throws IOException;\n\n","sourceOld":"  /**\n   * Ensure that any writes to these files are moved to\n   * stable storage.  Lucene uses this to properly commit\n   * changes to the index, to prevent a machine/OS crash\n   * from corrupting the index.<br/>\n   * <br/>\n   * NOTE: Clients may call this method for same files over\n   * and over again, so some impls might optimize for that.\n   * For other impls the operation can be a noop, for various\n   * reasons.\n   */\n  public void sync(Collection<String> names) throws IOException { // TODO 4.0 make me abstract\n    for (String name : names)\n      sync(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#sync(Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#sync(Collection[String]).mjava","sourceNew":"  /**\n   * Ensure that any writes to these files are moved to\n   * stable storage.  Lucene uses this to properly commit\n   * changes to the index, to prevent a machine/OS crash\n   * from corrupting the index.<br/>\n   * <br/>\n   * NOTE: Clients may call this method for same files over\n   * and over again, so some impls might optimize for that.\n   * For other impls the operation can be a noop, for various\n   * reasons.\n   */\n  public abstract void sync(Collection<String> names) throws IOException;\n\n","sourceOld":"  /**\n   * Ensure that any writes to these files are moved to\n   * stable storage.  Lucene uses this to properly commit\n   * changes to the index, to prevent a machine/OS crash\n   * from corrupting the index.<br/>\n   * <br/>\n   * NOTE: Clients may call this method for same files over\n   * and over again, so some impls might optimize for that.\n   * For other impls the operation can be a noop, for various\n   * reasons.\n   */\n  public void sync(Collection<String> names) throws IOException { // TODO 4.0 make me abstract\n    for (String name : names)\n      sync(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#sync(Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#sync(Collection[String]).mjava","sourceNew":"  /**\n   * Ensure that any writes to these files are moved to\n   * stable storage.  Lucene uses this to properly commit\n   * changes to the index, to prevent a machine/OS crash\n   * from corrupting the index.<br/>\n   * <br/>\n   * NOTE: Clients may call this method for same files over\n   * and over again, so some impls might optimize for that.\n   * For other impls the operation can be a noop, for various\n   * reasons.\n   */\n  public abstract void sync(Collection<String> names) throws IOException;\n\n","sourceOld":"  /**\n   * Ensure that any writes to these files are moved to\n   * stable storage.  Lucene uses this to properly commit\n   * changes to the index, to prevent a machine/OS crash\n   * from corrupting the index.<br/>\n   * <br/>\n   * NOTE: Clients may call this method for same files over\n   * and over again, so some impls might optimize for that.\n   * For other impls the operation can be a noop, for various\n   * reasons.\n   */\n  public void sync(Collection<String> names) throws IOException { // TODO 4.0 make me abstract\n    for (String name : names)\n      sync(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#sync(Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#sync(Collection[String]).mjava","sourceNew":"  /**\n   * Ensure that any writes to these files are moved to\n   * stable storage.  Lucene uses this to properly commit\n   * changes to the index, to prevent a machine/OS crash\n   * from corrupting the index.<br/>\n   * <br/>\n   * NOTE: Clients may call this method for same files over\n   * and over again, so some impls might optimize for that.\n   * For other impls the operation can be a noop, for various\n   * reasons.\n   */\n  public abstract void sync(Collection<String> names) throws IOException;\n\n","sourceOld":"  /**\n   * Ensure that any writes to these files are moved to\n   * stable storage.  Lucene uses this to properly commit\n   * changes to the index, to prevent a machine/OS crash\n   * from corrupting the index.<br/>\n   * <br/>\n   * NOTE: Clients may call this method for same files over\n   * and over again, so some impls might optimize for that.\n   * For other impls the operation can be a noop, for various\n   * reasons.\n   */\n  public abstract void sync(Collection<String> names) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e4b4e97a5e8ab5b96cc56c561131d720c756756b","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["e4b4e97a5e8ab5b96cc56c561131d720c756756b","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["e4b4e97a5e8ab5b96cc56c561131d720c756756b"],"e4b4e97a5e8ab5b96cc56c561131d720c756756b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4b4e97a5e8ab5b96cc56c561131d720c756756b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"e4b4e97a5e8ab5b96cc56c561131d720c756756b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}