{"path":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","commits":[{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      //System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsOut.getFilePointer()));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      //System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsOut.getFilePointer()));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"/dev/null","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7bb4e4e4a6b66f262115066bbc28b9859f54747e","date":1305657437,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f2bf10c11daad40c1e46fabd0d414c19a3e605b","date":1310410393,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1,\n                                     0, 0, true,\n                                     fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.FSTFieldWriter#FSTFieldWriter(FieldInfo,long).mjava","sourceNew":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","sourceOld":"    public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOException {\n      this.fieldInfo = fieldInfo;\n      fstOutputs = PositiveIntOutputs.getSingleton(true);\n      fstBuilder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, fstOutputs);\n      indexStart = out.getFilePointer();\n      ////System.out.println(\"VGW: field=\" + fieldInfo.name);\n\n      // Always put empty string in\n      fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));\n      startTermsFilePointer = termsFilePointer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c3a8a449466c1ff7ce2274fe73dab487256964b4":["29ef99d61cda9641b6250bf9567329a6e65f901d","7bb4e4e4a6b66f262115066bbc28b9859f54747e"],"a3776dccca01c11e7046323cfad46a3b4a471233":["b1add9ddc0005b07550d4350720aac22dc9886b3","7bb4e4e4a6b66f262115066bbc28b9859f54747e"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4f2bf10c11daad40c1e46fabd0d414c19a3e605b":["7bb4e4e4a6b66f262115066bbc28b9859f54747e"],"7bb4e4e4a6b66f262115066bbc28b9859f54747e":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["4f2bf10c11daad40c1e46fabd0d414c19a3e605b"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"4f2bf10c11daad40c1e46fabd0d414c19a3e605b":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"7bb4e4e4a6b66f262115066bbc28b9859f54747e":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","4f2bf10c11daad40c1e46fabd0d414c19a3e605b"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","7bb4e4e4a6b66f262115066bbc28b9859f54747e","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}