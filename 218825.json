{"path":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#updateNumericDocValue(String,int,Long).mjava","commits":[{"id":"e072d0b1fc19e0533d8ce432eed245196bca6fde","date":1379265112,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#updateNumericDocValue(String,int,Long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Updates the numeric doc value of {@code docID} under {@code field} to the\n   * given {@code value}.\n   */\n  public synchronized void updateNumericDocValue(String field, int docID, Long value) {\n    assert Thread.holdsLock(writer);\n    assert docID >= 0 && docID < reader.maxDoc() : \"out of bounds: docid=\" + docID + \" maxDoc=\" + reader.maxDoc() + \" seg=\" + info.info.name + \" docCount=\" + info.info.getDocCount();\n    Map<Integer,Long> updates = numericUpdates.get(field);\n    if (updates == null) {\n      updates = new HashMap<Integer,Long>();\n      numericUpdates.put(field, updates);\n    }\n    updates.put(docID, value);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1bae040fd1d5e03e0d8d695a9c25cf4f402e7ffe","date":1381909398,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#updateNumericDocValue(String,int,Long).mjava","sourceNew":null,"sourceOld":"  /**\n   * Updates the numeric doc value of {@code docID} under {@code field} to the\n   * given {@code value}.\n   */\n  public synchronized void updateNumericDocValue(String field, int docID, Long value) {\n    assert Thread.holdsLock(writer);\n    assert docID >= 0 && docID < reader.maxDoc() : \"out of bounds: docid=\" + docID + \" maxDoc=\" + reader.maxDoc() + \" seg=\" + info.info.name + \" docCount=\" + info.info.getDocCount();\n    Map<Integer,Long> updates = numericUpdates.get(field);\n    if (updates == null) {\n      updates = new HashMap<Integer,Long>();\n      numericUpdates.put(field, updates);\n    }\n    updates.put(docID, value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1bae040fd1d5e03e0d8d695a9c25cf4f402e7ffe":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1bae040fd1d5e03e0d8d695a9c25cf4f402e7ffe"]},"commit2Childs":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["1bae040fd1d5e03e0d8d695a9c25cf4f402e7ffe"],"1bae040fd1d5e03e0d8d695a9c25cf4f402e7ffe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}