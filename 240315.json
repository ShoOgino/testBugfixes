{"path":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n\n    // Java 1.6\n    addGetterIfAvaliable( os, \"systemLoadAverage\", info );\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info );\n    addGetterIfAvaliable( os, \"processCpuTime\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"ulimit\", execute( \"ulimit -n\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {} // ignore\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n\n    // Java 1.6\n    addGetterIfAvaliable( os, \"systemLoadAverage\", info );\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info );\n    addGetterIfAvaliable( os, \"processCpuTime\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"ulimit\", execute( \"ulimit -n\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {} // ignore\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n\n    // Java 1.6\n    addGetterIfAvaliable( os, \"systemLoadAverage\", info );\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info );\n    addGetterIfAvaliable( os, \"processCpuTime\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"ulimit\", execute( \"ulimit -n\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {} // ignore\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n\n    // Java 1.6\n    addGetterIfAvaliable( os, \"systemLoadAverage\", info );\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info );\n    addGetterIfAvaliable( os, \"processCpuTime\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"ulimit\", execute( \"ulimit -n\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {} // ignore\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n\n    // Java 1.6\n    addGetterIfAvaliable( os, \"systemLoadAverage\", info );\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info );\n    addGetterIfAvaliable( os, \"processCpuTime\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"ulimit\", execute( \"ulimit -n\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {} // ignore\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n\n    // Java 1.6\n    addGetterIfAvaliable( os, \"systemLoadAverage\", info );\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info );\n    addGetterIfAvaliable( os, \"processCpuTime\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"ulimit\", execute( \"ulimit -n\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {} // ignore\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46beaf42026a3243140badeb63dddffc563f59a5","date":1330028304,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"ulimit\", execute( \"ulimit -n\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {} // ignore\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n\n    // Java 1.6\n    addGetterIfAvaliable( os, \"systemLoadAverage\", info );\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info );\n    addGetterIfAvaliable( os, \"processCpuTime\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"ulimit\", execute( \"ulimit -n\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {} // ignore\n    return info;\n  }\n\n","bugFix":["2070bf73ffa1039a505000f99ea245884ff19e11"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6eed6a4605d9a188a53ad2a5a217ea50a409c7cf","date":1331032094,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"ulimit\", execute( \"ulimit -n\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {} // ignore\n    return info;\n  }\n\n","bugFix":["2070bf73ffa1039a505000f99ea245884ff19e11"],"bugIntro":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n\n    // Java 1.6\n    addGetterIfAvaliable( os, \"systemLoadAverage\", info );\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info );\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info );\n    addGetterIfAvaliable( os, \"processCpuTime\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"ulimit\", execute( \"ulimit -n\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {} // ignore\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","bugFix":["2070bf73ffa1039a505000f99ea245884ff19e11","d4e43054891cc560e3263228457adcf713377815"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() throws Exception \n  {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ENGLISH).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2","date":1389633998,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Throwable ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","bugFix":["6eed6a4605d9a188a53ad2a5a217ea50a409c7cf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<Object>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1390137e395d2f07f9ba5b8c43d293befe84d563","date":1427947685,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName());\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName());\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add( \"name\", os.getName() );\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6e9ab08ae693306679064ab40d807dff0cee360","date":1442055283,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName());\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // This is a public Oracle/OpenJDK extension, but may not be in other JDKs:\n    // com.sun.management.OperatingSystemMXBean\n    try {\n      Class<?> intf = Class.forName(\"com.sun.management.OperatingSystemMXBean\");\n      addGetterIfAvaliable( os, intf, \"committedVirtualMemorySize\", info);\n      addGetterIfAvaliable( os, intf, \"freePhysicalMemorySize\", info);\n      addGetterIfAvaliable( os, intf, \"freeSwapSpaceSize\", info);\n      addGetterIfAvaliable( os, intf, \"processCpuTime\", info);\n      addGetterIfAvaliable( os, intf, \"totalPhysicalMemorySize\", info);\n      addGetterIfAvaliable( os, intf, \"totalSwapSpaceSize\", info);\n    } catch (Exception e) {\n      // ignore\n    }\n\n    // This is a public Oracle/OpenJDK extension, but may not be in other JDKs:\n    // com.sun.management.UnixOperatingSystemMXBean\n    try {\n      Class<?> intf = Class.forName(\"com.sun.management.UnixOperatingSystemMXBean\");\n      addGetterIfAvaliable( os, intf, \"openFileDescriptorCount\", info );\n      addGetterIfAvaliable( os, intf, \"maxFileDescriptorCount\", info );\n    } catch (Exception e) {\n      // ignore\n    }\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    } catch( Exception ex ) {\n      log.warn(\"Unable to execute command line tools.\", ex);\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName());\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // com.sun.management.OperatingSystemMXBean\n    addGetterIfAvaliable( os, \"committedVirtualMemorySize\", info);\n    addGetterIfAvaliable( os, \"freePhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"freeSwapSpaceSize\", info);\n    addGetterIfAvaliable( os, \"processCpuTime\", info);\n    addGetterIfAvaliable( os, \"totalPhysicalMemorySize\", info);\n    addGetterIfAvaliable( os, \"totalSwapSpaceSize\", info);\n\n    // com.sun.management.UnixOperatingSystemMXBean\n    addGetterIfAvaliable( os, \"openFileDescriptorCount\", info );\n    addGetterIfAvaliable( os, \"maxFileDescriptorCount\", info );\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c20612f60b4b835c6e149e308e54b7677328dc18","date":1442062343,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName());\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // This is a public Oracle/OpenJDK extension, but may not be in other JDKs:\n    // com.sun.management.OperatingSystemMXBean\n    try {\n      final Class<? extends PlatformManagedObject> intf = Class.forName(\"com.sun.management.OperatingSystemMXBean\")\n          .asSubclass(PlatformManagedObject.class);\n      final PlatformManagedObject bean = ManagementFactory.getPlatformMXBean(intf);\n      if (bean != null) {\n        addMXBeanProperty( bean, intf, \"committedVirtualMemorySize\", info);\n        addMXBeanProperty( bean, intf, \"freePhysicalMemorySize\", info);\n        addMXBeanProperty( bean, intf, \"freeSwapSpaceSize\", info);\n        addMXBeanProperty( bean, intf, \"processCpuTime\", info);\n        addMXBeanProperty( bean, intf, \"totalPhysicalMemorySize\", info);\n        addMXBeanProperty( bean, intf, \"totalSwapSpaceSize\", info);\n      }\n    } catch (Exception e) {\n      // ignore\n    }\n\n    // This is a public Oracle/OpenJDK extension, but may not be in other JDKs:\n    // com.sun.management.UnixOperatingSystemMXBean\n    try {\n      final Class<? extends PlatformManagedObject> intf = Class.forName(\"com.sun.management.UnixOperatingSystemMXBean\")\n          .asSubclass(PlatformManagedObject.class);\n      final PlatformManagedObject bean = ManagementFactory.getPlatformMXBean(intf);\n      if (bean != null) {\n        addMXBeanProperty( bean, intf, \"openFileDescriptorCount\", info );\n        addMXBeanProperty( bean, intf, \"maxFileDescriptorCount\", info );\n      }\n    } catch (Exception e) {\n      // ignore\n    }\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    } catch( Exception ex ) {\n      log.warn(\"Unable to execute command line tools.\", ex);\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName());\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // This is a public Oracle/OpenJDK extension, but may not be in other JDKs:\n    // com.sun.management.OperatingSystemMXBean\n    try {\n      Class<?> intf = Class.forName(\"com.sun.management.OperatingSystemMXBean\");\n      addGetterIfAvaliable( os, intf, \"committedVirtualMemorySize\", info);\n      addGetterIfAvaliable( os, intf, \"freePhysicalMemorySize\", info);\n      addGetterIfAvaliable( os, intf, \"freeSwapSpaceSize\", info);\n      addGetterIfAvaliable( os, intf, \"processCpuTime\", info);\n      addGetterIfAvaliable( os, intf, \"totalPhysicalMemorySize\", info);\n      addGetterIfAvaliable( os, intf, \"totalSwapSpaceSize\", info);\n    } catch (Exception e) {\n      // ignore\n    }\n\n    // This is a public Oracle/OpenJDK extension, but may not be in other JDKs:\n    // com.sun.management.UnixOperatingSystemMXBean\n    try {\n      Class<?> intf = Class.forName(\"com.sun.management.UnixOperatingSystemMXBean\");\n      addGetterIfAvaliable( os, intf, \"openFileDescriptorCount\", info );\n      addGetterIfAvaliable( os, intf, \"maxFileDescriptorCount\", info );\n    } catch (Exception e) {\n      // ignore\n    }\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    } catch( Exception ex ) {\n      log.warn(\"Unable to execute command line tools.\", ex);\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"edf06a1f218b34af81f604e43ed82d79916c7d86","date":1442080534,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName()); // add at least this one\n    try {\n      // add remaining ones dynamically using Java Beans API\n      addMXBeanProperties(os, OperatingSystemMXBean.class, info);\n    } catch (IntrospectionException | ReflectiveOperationException e) {\n      log.warn(\"Unable to fetch properties of OperatingSystemMXBean.\", e);\n    }\n\n    // There are some additional beans we want to add (not available on all JVMs):\n    for (String clazz : Arrays.asList(\n        \"com.sun.management.OperatingSystemMXBean\",\n        \"com.sun.management.UnixOperatingSystemMXBean\", \n        \"com.ibm.lang.management.OperatingSystemMXBean\"\n    )) {\n      try {\n        final Class<? extends PlatformManagedObject> intf = Class.forName(clazz)\n            .asSubclass(PlatformManagedObject.class);\n        addMXBeanProperties(os, intf, info);\n      } catch (ClassNotFoundException e) {\n        // ignore\n      } catch (IntrospectionException | ReflectiveOperationException e) {\n        log.warn(\"Unable to fetch properties of JVM-specific OperatingSystemMXBean.\", e);\n      }\n    }\n\n    // Try some command line things:\n    try { \n      if (!Constants.WINDOWS) {\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    } catch( Exception ex ) {\n      log.warn(\"Unable to execute command line tools to get operating system properties.\", ex);\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName());\n    info.add( \"version\", os.getVersion() );\n    info.add( \"arch\", os.getArch() );\n    info.add( \"systemLoadAverage\", os.getSystemLoadAverage());\n\n    // This is a public Oracle/OpenJDK extension, but may not be in other JDKs:\n    // com.sun.management.OperatingSystemMXBean\n    try {\n      final Class<? extends PlatformManagedObject> intf = Class.forName(\"com.sun.management.OperatingSystemMXBean\")\n          .asSubclass(PlatformManagedObject.class);\n      final PlatformManagedObject bean = ManagementFactory.getPlatformMXBean(intf);\n      if (bean != null) {\n        addMXBeanProperty( bean, intf, \"committedVirtualMemorySize\", info);\n        addMXBeanProperty( bean, intf, \"freePhysicalMemorySize\", info);\n        addMXBeanProperty( bean, intf, \"freeSwapSpaceSize\", info);\n        addMXBeanProperty( bean, intf, \"processCpuTime\", info);\n        addMXBeanProperty( bean, intf, \"totalPhysicalMemorySize\", info);\n        addMXBeanProperty( bean, intf, \"totalSwapSpaceSize\", info);\n      }\n    } catch (Exception e) {\n      // ignore\n    }\n\n    // This is a public Oracle/OpenJDK extension, but may not be in other JDKs:\n    // com.sun.management.UnixOperatingSystemMXBean\n    try {\n      final Class<? extends PlatformManagedObject> intf = Class.forName(\"com.sun.management.UnixOperatingSystemMXBean\")\n          .asSubclass(PlatformManagedObject.class);\n      final PlatformManagedObject bean = ManagementFactory.getPlatformMXBean(intf);\n      if (bean != null) {\n        addMXBeanProperty( bean, intf, \"openFileDescriptorCount\", info );\n        addMXBeanProperty( bean, intf, \"maxFileDescriptorCount\", info );\n      }\n    } catch (Exception e) {\n      // ignore\n    }\n\n    try { \n      if( !os.getName().toLowerCase(Locale.ROOT).startsWith( \"windows\" ) ) {\n        // Try some command line things\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    } catch( Exception ex ) {\n      log.warn(\"Unable to execute command line tools.\", ex);\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName()); // add at least this one\n    // add remaining ones dynamically using Java Beans API\n    // also those from JVM implementation-specific classes\n    MetricUtils.addMXBeanMetrics(os, MetricUtils.OS_MXBEAN_CLASSES, null, (name, metric) -> {\n      if (info.get(name) == null) {\n        info.add(name, ((Gauge) metric).getValue());\n      }\n    });\n\n    // Try some command line things:\n    try { \n      if (!Constants.WINDOWS) {\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    } catch( Exception ex ) {\n      log.warn(\"Unable to execute command line tools to get operating system properties.\", ex);\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName()); // add at least this one\n    try {\n      // add remaining ones dynamically using Java Beans API\n      addMXBeanProperties(os, OperatingSystemMXBean.class, info);\n    } catch (IntrospectionException | ReflectiveOperationException e) {\n      log.warn(\"Unable to fetch properties of OperatingSystemMXBean.\", e);\n    }\n\n    // There are some additional beans we want to add (not available on all JVMs):\n    for (String clazz : Arrays.asList(\n        \"com.sun.management.OperatingSystemMXBean\",\n        \"com.sun.management.UnixOperatingSystemMXBean\", \n        \"com.ibm.lang.management.OperatingSystemMXBean\"\n    )) {\n      try {\n        final Class<? extends PlatformManagedObject> intf = Class.forName(clazz)\n            .asSubclass(PlatformManagedObject.class);\n        addMXBeanProperties(os, intf, info);\n      } catch (ClassNotFoundException e) {\n        // ignore\n      } catch (IntrospectionException | ReflectiveOperationException e) {\n        log.warn(\"Unable to fetch properties of JVM-specific OperatingSystemMXBean.\", e);\n      }\n    }\n\n    // Try some command line things:\n    try { \n      if (!Constants.WINDOWS) {\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    } catch( Exception ex ) {\n      log.warn(\"Unable to execute command line tools to get operating system properties.\", ex);\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName()); // add at least this one\n    // add remaining ones dynamically using Java Beans API\n    // also those from JVM implementation-specific classes\n    MetricUtils.addMXBeanMetrics(os, MetricUtils.OS_MXBEAN_CLASSES, null, (name, metric) -> {\n      if (info.get(name) == null) {\n        info.add(name, ((Gauge) metric).getValue());\n      }\n    });\n\n    // Try some command line things:\n    try { \n      if (!Constants.WINDOWS) {\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    } catch( Exception ex ) {\n      log.warn(\"Unable to execute command line tools to get operating system properties.\", ex);\n    } \n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName()); // add at least this one\n    try {\n      // add remaining ones dynamically using Java Beans API\n      addMXBeanProperties(os, OperatingSystemMXBean.class, info);\n    } catch (IntrospectionException | ReflectiveOperationException e) {\n      log.warn(\"Unable to fetch properties of OperatingSystemMXBean.\", e);\n    }\n\n    // There are some additional beans we want to add (not available on all JVMs):\n    for (String clazz : Arrays.asList(\n        \"com.sun.management.OperatingSystemMXBean\",\n        \"com.sun.management.UnixOperatingSystemMXBean\", \n        \"com.ibm.lang.management.OperatingSystemMXBean\"\n    )) {\n      try {\n        final Class<? extends PlatformManagedObject> intf = Class.forName(clazz)\n            .asSubclass(PlatformManagedObject.class);\n        addMXBeanProperties(os, intf, info);\n      } catch (ClassNotFoundException e) {\n        // ignore\n      } catch (IntrospectionException | ReflectiveOperationException e) {\n        log.warn(\"Unable to fetch properties of JVM-specific OperatingSystemMXBean.\", e);\n      }\n    }\n\n    // Try some command line things:\n    try { \n      if (!Constants.WINDOWS) {\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    } catch( Exception ex ) {\n      log.warn(\"Unable to execute command line tools to get operating system properties.\", ex);\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8c7b2ce545e86aaf1ab6f90537c1343aa787401","date":1576677787,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName()); // add at least this one\n    // add remaining ones dynamically using Java Beans API\n    // also those from JVM implementation-specific classes\n    MetricUtils.addMXBeanMetrics(os, MetricUtils.OS_MXBEAN_CLASSES, null, (name, metric) -> {\n      if (info.get(name) == null) {\n        info.add(name, ((Gauge) metric).getValue());\n      }\n    });\n\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName()); // add at least this one\n    // add remaining ones dynamically using Java Beans API\n    // also those from JVM implementation-specific classes\n    MetricUtils.addMXBeanMetrics(os, MetricUtils.OS_MXBEAN_CLASSES, null, (name, metric) -> {\n      if (info.get(name) == null) {\n        info.add(name, ((Gauge) metric).getValue());\n      }\n    });\n\n    // Try some command line things:\n    try { \n      if (!Constants.WINDOWS) {\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    } catch( Exception ex ) {\n      log.warn(\"Unable to execute command line tools to get operating system properties.\", ex);\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c66470e527299cc148ad0b3441d08dfb7cb9e03","date":1576859740,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#getSystemInfo().mjava","sourceNew":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName()); // add at least this one\n    // add remaining ones dynamically using Java Beans API\n    // also those from JVM implementation-specific classes\n    MetricUtils.addMXBeanMetrics(os, MetricUtils.OS_MXBEAN_CLASSES, null, (name, metric) -> {\n      if (info.get(name) == null) {\n        info.add(name, ((Gauge) metric).getValue());\n      }\n    });\n\n    return info;\n  }\n\n","sourceOld":"  /**\n   * Get system info\n   */\n  public static SimpleOrderedMap<Object> getSystemInfo() {\n    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();\n    \n    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n    info.add(NAME, os.getName()); // add at least this one\n    // add remaining ones dynamically using Java Beans API\n    // also those from JVM implementation-specific classes\n    MetricUtils.addMXBeanMetrics(os, MetricUtils.OS_MXBEAN_CLASSES, null, (name, metric) -> {\n      if (info.get(name) == null) {\n        info.add(name, ((Gauge) metric).getValue());\n      }\n    });\n\n    // Try some command line things:\n    try { \n      if (!Constants.WINDOWS) {\n        info.add( \"uname\",  execute( \"uname -a\" ) );\n        info.add( \"uptime\", execute( \"uptime\" ) );\n      }\n    } catch( Exception ex ) {\n      log.warn(\"Unable to execute command line tools to get operating system properties.\", ex);\n    } \n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["edf06a1f218b34af81f604e43ed82d79916c7d86"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"6eed6a4605d9a188a53ad2a5a217ea50a409c7cf":["46beaf42026a3243140badeb63dddffc563f59a5"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","6eed6a4605d9a188a53ad2a5a217ea50a409c7cf"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"2acf500f78aa12b92e371fd89c719291986b6b90":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":["816521ebaad5add9cb96bb88c577394e2938c40b","e8c7b2ce545e86aaf1ab6f90537c1343aa787401"],"816521ebaad5add9cb96bb88c577394e2938c40b":["edf06a1f218b34af81f604e43ed82d79916c7d86"],"46d8ada1fff8d18cb197c38c7983225162599948":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","2acf500f78aa12b92e371fd89c719291986b6b90"],"c20612f60b4b835c6e149e308e54b7677328dc18":["f6e9ab08ae693306679064ab40d807dff0cee360"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"46beaf42026a3243140badeb63dddffc563f59a5":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["6eed6a4605d9a188a53ad2a5a217ea50a409c7cf","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","1390137e395d2f07f9ba5b8c43d293befe84d563"],"e8c7b2ce545e86aaf1ab6f90537c1343aa787401":["816521ebaad5add9cb96bb88c577394e2938c40b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["6eed6a4605d9a188a53ad2a5a217ea50a409c7cf"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["2acf500f78aa12b92e371fd89c719291986b6b90"],"edf06a1f218b34af81f604e43ed82d79916c7d86":["c20612f60b4b835c6e149e308e54b7677328dc18"],"f6e9ab08ae693306679064ab40d807dff0cee360":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8c7b2ce545e86aaf1ab6f90537c1343aa787401"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["1390137e395d2f07f9ba5b8c43d293befe84d563","d2638f781be724518ff6c2263d14a48cf6e68017"],"6eed6a4605d9a188a53ad2a5a217ea50a409c7cf":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"c26f00b574427b55127e869b935845554afde1fa":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","46beaf42026a3243140badeb63dddffc563f59a5"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","e8c7b2ce545e86aaf1ab6f90537c1343aa787401"],"46d8ada1fff8d18cb197c38c7983225162599948":[],"c20612f60b4b835c6e149e308e54b7677328dc18":["edf06a1f218b34af81f604e43ed82d79916c7d86"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"46beaf42026a3243140badeb63dddffc563f59a5":["6eed6a4605d9a188a53ad2a5a217ea50a409c7cf"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["d2638f781be724518ff6c2263d14a48cf6e68017","f6e9ab08ae693306679064ab40d807dff0cee360"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"e8c7b2ce545e86aaf1ab6f90537c1343aa787401":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"edf06a1f218b34af81f604e43ed82d79916c7d86":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"f6e9ab08ae693306679064ab40d807dff0cee360":["c20612f60b4b835c6e149e308e54b7677328dc18"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","4c66470e527299cc148ad0b3441d08dfb7cb9e03","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","d2638f781be724518ff6c2263d14a48cf6e68017","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}