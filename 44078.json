{"path":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#getVariables(String,Map[String,Resolved]).mjava","commits":[{"id":"89ae495191648c27a6ed94d2ace7e34b763a535c","date":1476855250,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#getVariables(String,Map[String,Resolved]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public static List<String> getVariables(String template, Map<String, Resolved> cache) {\n    Resolved r = getResolved(template, cache);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<>(r.variables);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bca807fcb2fa11c40a0c929d869a16376c24932b","date":1476974181,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#getVariables(String,Cache[String,Resolved]).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#getVariables(String,Map[String,Resolved]).mjava","sourceNew":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public static List<String> getVariables(String template, Cache<String, Resolved> cache) {\n    Resolved r = getResolved(template, cache);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<>(r.variables);\n  }\n\n","sourceOld":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public static List<String> getVariables(String template, Map<String, Resolved> cache) {\n    Resolved r = getResolved(template, cache);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<>(r.variables);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#getVariables(String,Map[String,Resolved]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public static List<String> getVariables(String template, Map<String, Resolved> cache) {\n    Resolved r = getResolved(template, cache);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<>(r.variables);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#getVariables(String,Cache[String,Resolved]).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TemplateUpdateProcessorFactory#getVariables(String,Map[String,Resolved]).mjava","sourceNew":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public static List<String> getVariables(String template, Cache<String, Resolved> cache) {\n    Resolved r = getResolved(template, cache);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<>(r.variables);\n  }\n\n","sourceOld":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public static List<String> getVariables(String template, Map<String, Resolved> cache) {\n    Resolved r = getResolved(template, cache);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<>(r.variables);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","bca807fcb2fa11c40a0c929d869a16376c24932b"],"bca807fcb2fa11c40a0c929d869a16376c24932b":["89ae495191648c27a6ed94d2ace7e34b763a535c"],"89ae495191648c27a6ed94d2ace7e34b763a535c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89ae495191648c27a6ed94d2ace7e34b763a535c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bca807fcb2fa11c40a0c929d869a16376c24932b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89ae495191648c27a6ed94d2ace7e34b763a535c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"bca807fcb2fa11c40a0c929d869a16376c24932b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"89ae495191648c27a6ed94d2ace7e34b763a535c":["bca807fcb2fa11c40a0c929d869a16376c24932b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}