{"path":"solr/core/src/java/org/apache/solr/response/transform/SubQueryAugmenter[SubQueryAugmenterFactory].DocRowParams#getParams(String).mjava","commits":[{"id":"561c2351baf6dd64061addef891359954c1a7faa","date":1462788487,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/SubQueryAugmenter[SubQueryAugmenterFactory].DocRowParams#getParams(String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String[] getParams(String param) {\n      \n      final Collection<Object> vals = mapToDocField(param);\n      \n      if (vals != null) {\n        StringBuilder rez = new StringBuilder();\n        int i = 0;\n        for (Iterator iterator = vals.iterator(); iterator.hasNext();) {\n          Object object = (Object) iterator.next();\n          rez.append(convertFieldValue(object));\n          if (iterator.hasNext()) {\n            rez.append(separator);\n          }\n        } \n        return new String[]{rez.toString()};\n      }\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e66a459d38c1c4a2f97128433dab546f683a9fed","date":1462873476,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/SubQueryAugmenter[SubQueryAugmenterFactory].DocRowParams#getParams(String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String[] getParams(String param) {\n      \n      final Collection<Object> vals = mapToDocField(param);\n      \n      if (vals != null) {\n        StringBuilder rez = new StringBuilder();\n        int i = 0;\n        for (Iterator iterator = vals.iterator(); iterator.hasNext();) {\n          Object object = (Object) iterator.next();\n          rez.append(convertFieldValue(object));\n          if (iterator.hasNext()) {\n            rez.append(separator);\n          }\n        } \n        return new String[]{rez.toString()};\n      }\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/SubQueryAugmenter[SubQueryAugmenterFactory].DocRowParams#getParams(String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String[] getParams(String param) {\n      \n      final Collection<Object> vals = mapToDocField(param);\n      \n      if (vals != null) {\n        StringBuilder rez = new StringBuilder();\n        int i = 0;\n        for (Iterator iterator = vals.iterator(); iterator.hasNext();) {\n          Object object = (Object) iterator.next();\n          rez.append(convertFieldValue(object));\n          if (iterator.hasNext()) {\n            rez.append(separator);\n          }\n        } \n        return new String[]{rez.toString()};\n      }\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16bac49f6115a1b41829c30623e001005ebb7ad7","date":1475239647,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/SubQueryAugmenter[SubQueryAugmenterFactory].DocRowParams#getParams(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/SubQueryAugmenter[SubQueryAugmenterFactory].DocRowParams#getParams(String).mjava","sourceNew":"    @Override\n    public String[] getParams(String param) {\n      \n      final Collection<Object> vals = mapToDocField(param);\n      \n      if (vals != null) {\n        StringBuilder rez = new StringBuilder();\n        for (Iterator iterator = vals.iterator(); iterator.hasNext();) {\n          Object object = (Object) iterator.next();\n          rez.append(convertFieldValue(object));\n          if (iterator.hasNext()) {\n            rez.append(separator);\n          }\n        } \n        return new String[]{rez.toString()};\n      }\n      return null;\n    }\n\n","sourceOld":"    @Override\n    public String[] getParams(String param) {\n      \n      final Collection<Object> vals = mapToDocField(param);\n      \n      if (vals != null) {\n        StringBuilder rez = new StringBuilder();\n        int i = 0;\n        for (Iterator iterator = vals.iterator(); iterator.hasNext();) {\n          Object object = (Object) iterator.next();\n          rez.append(convertFieldValue(object));\n          if (iterator.hasNext()) {\n            rez.append(separator);\n          }\n        } \n        return new String[]{rez.toString()};\n      }\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/SubQueryAugmenter[SubQueryAugmenterFactory].DocRowParams#getParams(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/SubQueryAugmenter[SubQueryAugmenterFactory].DocRowParams#getParams(String).mjava","sourceNew":"    @Override\n    public String[] getParams(String param) {\n      \n      final Collection<Object> vals = mapToDocField(param);\n      \n      if (vals != null) {\n        StringBuilder rez = new StringBuilder();\n        for (Iterator iterator = vals.iterator(); iterator.hasNext();) {\n          Object object = (Object) iterator.next();\n          rez.append(convertFieldValue(object));\n          if (iterator.hasNext()) {\n            rez.append(separator);\n          }\n        } \n        return new String[]{rez.toString()};\n      }\n      return null;\n    }\n\n","sourceOld":"    @Override\n    public String[] getParams(String param) {\n      \n      final Collection<Object> vals = mapToDocField(param);\n      \n      if (vals != null) {\n        StringBuilder rez = new StringBuilder();\n        int i = 0;\n        for (Iterator iterator = vals.iterator(); iterator.hasNext();) {\n          Object object = (Object) iterator.next();\n          rez.append(convertFieldValue(object));\n          if (iterator.hasNext()) {\n            rez.append(separator);\n          }\n        } \n        return new String[]{rez.toString()};\n      }\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/SubQueryAugmenter[SubQueryAugmenterFactory].DocRowParams#getParams(String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public String[] getParams(String param) {\n      \n      final Collection<Object> vals = mapToDocField(param);\n      \n      if (vals != null) {\n        StringBuilder rez = new StringBuilder();\n        for (Iterator iterator = vals.iterator(); iterator.hasNext();) {\n          Object object = (Object) iterator.next();\n          rez.append(convertFieldValue(object));\n          if (iterator.hasNext()) {\n            rez.append(separator);\n          }\n        } \n        return new String[]{rez.toString()};\n      }\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/SubQueryAugmenter[SubQueryAugmenterFactory].DocRowParams#getParams(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/SubQueryAugmenter[SubQueryAugmenterFactory].DocRowParams#getParams(String).mjava","sourceNew":"    @Override\n    public String[] getParams(String param) {\n      \n      final Collection<Object> vals = mapToDocField(param);\n      \n      if (vals != null) {\n        StringBuilder rez = new StringBuilder();\n        for (@SuppressWarnings({\"rawtypes\"})Iterator iterator = vals.iterator(); iterator.hasNext();) {\n          Object object = iterator.next();\n          rez.append(convertFieldValue(object));\n          if (iterator.hasNext()) {\n            rez.append(separator);\n          }\n        } \n        return new String[]{rez.toString()};\n      }\n      return null;\n    }\n\n","sourceOld":"    @Override\n    public String[] getParams(String param) {\n      \n      final Collection<Object> vals = mapToDocField(param);\n      \n      if (vals != null) {\n        StringBuilder rez = new StringBuilder();\n        for (Iterator iterator = vals.iterator(); iterator.hasNext();) {\n          Object object = (Object) iterator.next();\n          rez.append(convertFieldValue(object));\n          if (iterator.hasNext()) {\n            rez.append(separator);\n          }\n        } \n        return new String[]{rez.toString()};\n      }\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"16bac49f6115a1b41829c30623e001005ebb7ad7":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["d470c8182e92b264680e34081b75e70a9f2b3c89","16bac49f6115a1b41829c30623e001005ebb7ad7"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"e66a459d38c1c4a2f97128433dab546f683a9fed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","561c2351baf6dd64061addef891359954c1a7faa"],"561c2351baf6dd64061addef891359954c1a7faa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","561c2351baf6dd64061addef891359954c1a7faa"]},"commit2Childs":{"16bac49f6115a1b41829c30623e001005ebb7ad7":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e66a459d38c1c4a2f97128433dab546f683a9fed","561c2351baf6dd64061addef891359954c1a7faa","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["06a8891f085f71282bb3ece1b1732b68f07813a3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e66a459d38c1c4a2f97128433dab546f683a9fed":[],"561c2351baf6dd64061addef891359954c1a7faa":["e66a459d38c1c4a2f97128433dab546f683a9fed","d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["16bac49f6115a1b41829c30623e001005ebb7ad7","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e66a459d38c1c4a2f97128433dab546f683a9fed","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}