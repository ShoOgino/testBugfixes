{"path":"lucene/src/java/org/apache/lucene/analysis/Tokenizer#close().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":2,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/Tokenizer#close().mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/Tokenizer#close().mjava","sourceNew":"  /** By default, closes the input Reader. */\n  @Override\n  public void close() throws IOException {\n    input.close();\n  }\n\n","sourceOld":"  /** By default, closes the input Reader. */\n  @Override\n  public void close() throws IOException {\n    input.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94f22e8ded82086fdbf9c490b0bb0f2d8165fc40","date":1270818726,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/Tokenizer#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/Tokenizer#close().mjava","sourceNew":"  /** By default, closes the input Reader. */\n  @Override\n  public void close() throws IOException {\n    if (input != null) {\n      input.close();\n      // LUCENE-2387: don't hold onto Reader after close, so\n      // GC can reclaim\n      input = null;\n    }\n  }\n\n","sourceOld":"  /** By default, closes the input Reader. */\n  @Override\n  public void close() throws IOException {\n    input.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Tokenizer#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/Tokenizer#close().mjava","sourceNew":"  /** By default, closes the input Reader. */\n  @Override\n  public void close() throws IOException {\n    if (input != null) {\n      input.close();\n      // LUCENE-2387: don't hold onto Reader after close, so\n      // GC can reclaim\n      input = null;\n    }\n  }\n\n","sourceOld":"  /** By default, closes the input Reader. */\n  @Override\n  public void close() throws IOException {\n    if (input != null) {\n      input.close();\n      // LUCENE-2387: don't hold onto Reader after close, so\n      // GC can reclaim\n      input = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"94f22e8ded82086fdbf9c490b0bb0f2d8165fc40":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["94f22e8ded82086fdbf9c490b0bb0f2d8165fc40"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"94f22e8ded82086fdbf9c490b0bb0f2d8165fc40":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["94f22e8ded82086fdbf9c490b0bb0f2d8165fc40"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}