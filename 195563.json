{"path":"src/java/org/apache/lucene/index/DirectoryIndexReader#isCurrent().mjava","commits":[{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryIndexReader#isCurrent().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Check whether this IndexReader is still using the\n   * current (i.e., most recently committed) version of the\n   * index.  If a writer has committed any changes to the\n   * index since this reader was opened, this will return\n   * <code>false</code>, in which case you must open a new\n   * IndexReader in order to see the changes.  See the\n   * description of the <a href=\"IndexWriter.html#autoCommit\"><code>autoCommit</code></a>\n   * flag which controls when the {@link IndexWriter}\n   * actually commits changes to the index.\n   * \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public boolean isCurrent() throws CorruptIndexException, IOException {\n    ensureOpen();\n    return SegmentInfos.readCurrentVersion(directory) == segmentInfos.getVersion();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryReader#isCurrent().mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryIndexReader#isCurrent().mjava","sourceNew":"  /**\n   * Check whether this IndexReader is still using the current (i.e., most recently committed) version of the index.  If\n   * a writer has committed any changes to the index since this reader was opened, this will return <code>false</code>,\n   * in which case you must open a new IndexReader in order to see the changes.  See the description of the <a\n   * href=\"IndexWriter.html#autoCommit\"><code>autoCommit</code></a> flag which controls when the {@link IndexWriter}\n   * actually commits changes to the index.\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException           if there is a low-level IO error\n   */\n  public boolean isCurrent() throws CorruptIndexException, IOException {\n    ensureOpen();\n    return SegmentInfos.readCurrentVersion(directory) == segmentInfos.getVersion();\n  }\n\n","sourceOld":"  /**\n   * Check whether this IndexReader is still using the\n   * current (i.e., most recently committed) version of the\n   * index.  If a writer has committed any changes to the\n   * index since this reader was opened, this will return\n   * <code>false</code>, in which case you must open a new\n   * IndexReader in order to see the changes.  See the\n   * description of the <a href=\"IndexWriter.html#autoCommit\"><code>autoCommit</code></a>\n   * flag which controls when the {@link IndexWriter}\n   * actually commits changes to the index.\n   * \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public boolean isCurrent() throws CorruptIndexException, IOException {\n    ensureOpen();\n    return SegmentInfos.readCurrentVersion(directory) == segmentInfos.getVersion();\n  }\n\n","bugFix":null,"bugIntro":["537382020d6797489b93fa8aeb62495d5018b0ba"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"125b5699f11b58d9be0820c6ce8b1648812902e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"]},"commit2Childs":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"125b5699f11b58d9be0820c6ce8b1648812902e8":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}