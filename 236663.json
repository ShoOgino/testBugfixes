{"path":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","commits":[{"id":"8be580b58bcc650d428f3f22de81cadcf51d650a","date":1325279655,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Directory create(String path) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newFSDirectory(new File(path));\n    // Somehow removing unref'd files in Solr tests causes\n    // problems... there's some interaction w/\n    // CachingDirectoryFactory.  Once we track down where Solr\n    // isn't closing an IW, we can re-enable this:\n    dir.setAssertNoUnrefencedFilesOnClose(false);\n    return dir;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d19974432be9aed28ee7dca73bdf01d139e763a9","b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d19974432be9aed28ee7dca73bdf01d139e763a9","date":1342822166,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","sourceNew":"  @Override\n  public Directory create(String path) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // Somehow removing unref'd files in Solr tests causes\n    // problems... there's some interaction w/\n    // CachingDirectoryFactory.  Once we track down where Solr\n    // isn't closing an IW, we can re-enable this:\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","sourceOld":"  @Override\n  public Directory create(String path) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newFSDirectory(new File(path));\n    // Somehow removing unref'd files in Solr tests causes\n    // problems... there's some interaction w/\n    // CachingDirectoryFactory.  Once we track down where Solr\n    // isn't closing an IW, we can re-enable this:\n    dir.setAssertNoUnrefencedFilesOnClose(false);\n    return dir;\n  }\n\n","bugFix":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","sourceNew":"  @Override\n  public Directory create(String path) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // Somehow removing unref'd files in Solr tests causes\n    // problems... there's some interaction w/\n    // CachingDirectoryFactory.  Once we track down where Solr\n    // isn't closing an IW, we can re-enable this:\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","sourceOld":"  @Override\n  public Directory create(String path) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newFSDirectory(new File(path));\n    // Somehow removing unref'd files in Solr tests causes\n    // problems... there's some interaction w/\n    // CachingDirectoryFactory.  Once we track down where Solr\n    // isn't closing an IW, we can re-enable this:\n    dir.setAssertNoUnrefencedFilesOnClose(false);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","sourceNew":"  @Override\n  public Directory create(String path) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // Somehow removing unref'd files in Solr tests causes\n    // problems... there's some interaction w/\n    // CachingDirectoryFactory.  Once we track down where Solr\n    // isn't closing an IW, we can re-enable this:\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","sourceOld":"  @Override\n  public Directory create(String path) throws IOException {\n    MockDirectoryWrapper dir = LuceneTestCase.newFSDirectory(new File(path));\n    // Somehow removing unref'd files in Solr tests causes\n    // problems... there's some interaction w/\n    // CachingDirectoryFactory.  Once we track down where Solr\n    // isn't closing an IW, we can re-enable this:\n    dir.setAssertNoUnrefencedFilesOnClose(false);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469","date":1345037674,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","sourceNew":"  @Override\n  public Directory create(String path) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // we can't currently do this check because of how\n    // Solr has to reboot a new Directory sometimes when replicating\n    // or rolling back - the old directory is closed and the following\n    // test assumes it can open an IndexWriter when that happens - we\n    // have a new Directory for the same dir and still an open IW at \n    // this point\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","sourceOld":"  @Override\n  public Directory create(String path) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // Somehow removing unref'd files in Solr tests causes\n    // problems... there's some interaction w/\n    // CachingDirectoryFactory.  Once we track down where Solr\n    // isn't closing an IW, we can re-enable this:\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","bugFix":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","sourceNew":"  @Override\n  public Directory create(String path) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // we can't currently do this check because of how\n    // Solr has to reboot a new Directory sometimes when replicating\n    // or rolling back - the old directory is closed and the following\n    // test assumes it can open an IndexWriter when that happens - we\n    // have a new Directory for the same dir and still an open IW at \n    // this point\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","sourceOld":"  @Override\n  public Directory create(String path) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // Somehow removing unref'd files in Solr tests causes\n    // problems... there's some interaction w/\n    // CachingDirectoryFactory.  Once we track down where Solr\n    // isn't closing an IW, we can re-enable this:\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","sourceNew":"  @Override\n  public Directory create(String path) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // we can't currently do this check because of how\n    // Solr has to reboot a new Directory sometimes when replicating\n    // or rolling back - the old directory is closed and the following\n    // test assumes it can open an IndexWriter when that happens - we\n    // have a new Directory for the same dir and still an open IW at \n    // this point\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","sourceOld":"  @Override\n  public Directory create(String path) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // Somehow removing unref'd files in Solr tests causes\n    // problems... there's some interaction w/\n    // CachingDirectoryFactory.  Once we track down where Solr\n    // isn't closing an IW, we can re-enable this:\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674","date":1358098706,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String,DirContext).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","sourceNew":"  @Override\n  public Directory create(String path, DirContext dirContext) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // we can't currently do this check because of how\n    // Solr has to reboot a new Directory sometimes when replicating\n    // or rolling back - the old directory is closed and the following\n    // test assumes it can open an IndexWriter when that happens - we\n    // have a new Directory for the same dir and still an open IW at \n    // this point\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","sourceOld":"  @Override\n  public Directory create(String path) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // we can't currently do this check because of how\n    // Solr has to reboot a new Directory sometimes when replicating\n    // or rolling back - the old directory is closed and the following\n    // test assumes it can open an IndexWriter when that happens - we\n    // have a new Directory for the same dir and still an open IW at \n    // this point\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String,DirContext).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory#create(String).mjava","sourceNew":"  @Override\n  public Directory create(String path, DirContext dirContext) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // we can't currently do this check because of how\n    // Solr has to reboot a new Directory sometimes when replicating\n    // or rolling back - the old directory is closed and the following\n    // test assumes it can open an IndexWriter when that happens - we\n    // have a new Directory for the same dir and still an open IW at \n    // this point\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","sourceOld":"  @Override\n  public Directory create(String path) throws IOException {\n    Directory dir = LuceneTestCase.newFSDirectory(new File(path));\n    // we can't currently do this check because of how\n    // Solr has to reboot a new Directory sometimes when replicating\n    // or rolling back - the old directory is closed and the following\n    // test assumes it can open an IndexWriter when that happens - we\n    // have a new Directory for the same dir and still an open IW at \n    // this point\n    if (dir instanceof MockDirectoryWrapper) {\n      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);\n    }\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["8be580b58bcc650d428f3f22de81cadcf51d650a","d19974432be9aed28ee7dca73bdf01d139e763a9"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["aba371508186796cc6151d8223a5b4e16d02e26e","b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"d19974432be9aed28ee7dca73bdf01d139e763a9":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469","1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674":["b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8be580b58bcc650d428f3f22de81cadcf51d650a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["8be580b58bcc650d428f3f22de81cadcf51d650a","d19974432be9aed28ee7dca73bdf01d139e763a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674"],"b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469":["d19974432be9aed28ee7dca73bdf01d139e763a9"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":["616c1830142ff5c1ddedec1ed898733b73c8e23b"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"d19974432be9aed28ee7dca73bdf01d139e763a9":["aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["aba371508186796cc6151d8223a5b4e16d02e26e","d19974432be9aed28ee7dca73bdf01d139e763a9","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469":["616c1830142ff5c1ddedec1ed898733b73c8e23b","8917bfede3b4ca30f4305c1e391e9218959cd723","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","1eda2abfda9da3ca2bc5c5872d6b8c0f4948f674"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","8917bfede3b4ca30f4305c1e391e9218959cd723","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}