{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/Compressor#compress(byte[],int,int,DataOutput).mjava","commits":[{"id":"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69","date":1352818449,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/Compressor#compress(byte[],int,int,DataOutput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/Compressor#compress(byte[],int,int,DataOutput).mjava","sourceNew":"  /**\n   * Compress bytes into <code>out</code>. It it the responsibility of the\n   * compressor to add all necessary information so that a {@link Decompressor}\n   * will know when to stop decompressing bytes from the stream.\n   */\n  public abstract void compress(byte[] bytes, int off, int len, DataOutput out) throws IOException;\n\n","sourceOld":"  /**\n   * Compress bytes into <code>out</code>. It it the responsibility of the\n   * compressor to add all necessary information so that a {@link Decompressor}\n   * will know when to stop decompressing bytes from the stream.\n   */\n  public abstract void compress(byte[] bytes, int off, int len, DataOutput out) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/Compressor#compress(byte[],int,int,DataOutput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/Compressor#compress(byte[],int,int,DataOutput).mjava","sourceNew":"  /**\n   * Compress bytes into <code>out</code>. It it the responsibility of the\n   * compressor to add all necessary information so that a {@link Decompressor}\n   * will know when to stop decompressing bytes from the stream.\n   */\n  public abstract void compress(byte[] bytes, int off, int len, DataOutput out) throws IOException;\n\n","sourceOld":"  /**\n   * Compress bytes into <code>out</code>. It it the responsibility of the\n   * compressor to add all necessary information so that a {@link Decompressor}\n   * will know when to stop decompressing bytes from the stream.\n   */\n  public abstract void compress(byte[] bytes, int off, int len, DataOutput out) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a","date":1550036130,"type":3,"author":"Bruno P. Kinoshita","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/Compressor#compress(byte[],int,int,DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/Compressor#compress(byte[],int,int,DataOutput).mjava","sourceNew":"  /**\n   * Compress bytes into <code>out</code>. It is the responsibility of the\n   * compressor to add all necessary information so that a {@link Decompressor}\n   * will know when to stop decompressing bytes from the stream.\n   */\n  public abstract void compress(byte[] bytes, int off, int len, DataOutput out) throws IOException;\n\n","sourceOld":"  /**\n   * Compress bytes into <code>out</code>. It it the responsibility of the\n   * compressor to add all necessary information so that a {@link Decompressor}\n   * will know when to stop decompressing bytes from the stream.\n   */\n  public abstract void compress(byte[] bytes, int off, int len, DataOutput out) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a":["5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69"],"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a"]},"commit2Childs":{"d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69":["d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5e04b732c631a77cbbd25b6ce43c2a8abb1e9e69","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}