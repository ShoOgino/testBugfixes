{"path":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseLongMVB().mjava","commits":[{"id":"e98504e7801e45bcc2d9c1237525b316d24b1aee","date":1249236463,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseLongMVB().mjava","pathOld":"/dev/null","sourceNew":"  public void test1PhraseLongMVB() throws Exception {\n    makeIndexLongMVB();\n\n    FieldQuery fq = new FieldQuery( pqF( \"sp\", \"pe\", \"ee\", \"ed\" ), true, true ); // \"speed\" -(2gram)-> \"sp\",\"pe\",\"ee\",\"ed\"\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(sppeeeed((88,93)))/1.0(82,182)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseLongMVB().mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilderTest#test1PhraseLongMVB().mjava","sourceNew":"  public void test1PhraseLongMVB() throws Exception {\n    makeIndexLongMVB();\n\n    FieldQuery fq = new FieldQuery( pqF( \"sp\", \"pe\", \"ee\", \"ed\" ), true, true ); // \"speed\" -(2gram)-> \"sp\",\"pe\",\"ee\",\"ed\"\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(sppeeeed((88,93)))/1.0(82,182)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","sourceOld":"  public void test1PhraseLongMVB() throws Exception {\n    makeIndexLongMVB();\n\n    FieldQuery fq = new FieldQuery( pqF( \"sp\", \"pe\", \"ee\", \"ed\" ), true, true ); // \"speed\" -(2gram)-> \"sp\",\"pe\",\"ee\",\"ed\"\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    assertEquals( 1, ffl.fragInfos.size() );\n    assertEquals( \"subInfos=(sppeeeed((88,93)))/1.0(82,182)\", ffl.fragInfos.get( 0 ).toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e98504e7801e45bcc2d9c1237525b316d24b1aee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e98504e7801e45bcc2d9c1237525b316d24b1aee"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e98504e7801e45bcc2d9c1237525b316d24b1aee"],"e98504e7801e45bcc2d9c1237525b316d24b1aee":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}