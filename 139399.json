{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#writeMap(EntryWriter).mjava","commits":[{"id":"ef7c0ae2232b955007fc003318142c3bdb0e5e8c","date":1515055559,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(\"hints\", (MapWriter) ew1 -> hints.forEach((hint, o) -> ew1.putNoEx(hint.toString(), o)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(\"hints\", (MapWriter) ew1 -> hints.forEach((hint, o) -> ew1.putNoEx(hint.toString(), o)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f0e33082a86447f4f2b59a1a5f69a310500276a","date":1519970482,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(\"action\", String.valueOf(getAction()));\n    ew.put(\"hints\", (MapWriter) ew1 -> hints.forEach((hint, o) -> ew1.putNoEx(hint.toString(), o)));\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(\"hints\", (MapWriter) ew1 -> hints.forEach((hint, o) -> ew1.putNoEx(hint.toString(), o)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#writeMap(EntryWriter).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    ew.put(\"action\", String.valueOf(getAction()));\n    ew.put(\"hints\", (MapWriter) ew1 -> hints.forEach((hint, o) -> ew1.putNoEx(hint.toString(), o)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ef7c0ae2232b955007fc003318142c3bdb0e5e8c"],"3f504512a03d978990cbff30db0522b354e846db":["9f0e33082a86447f4f2b59a1a5f69a310500276a"],"ef7c0ae2232b955007fc003318142c3bdb0e5e8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9f0e33082a86447f4f2b59a1a5f69a310500276a":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["9f0e33082a86447f4f2b59a1a5f69a310500276a"],"ef7c0ae2232b955007fc003318142c3bdb0e5e8c":["b94236357aaa22b76c10629851fe4e376e0cea82"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","ef7c0ae2232b955007fc003318142c3bdb0e5e8c"],"9f0e33082a86447f4f2b59a1a5f69a310500276a":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}