{"path":"lucene/src/java/org/apache/lucene/index/TypePromoter#create(Type,int).mjava","commits":[{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TypePromoter#create(Type,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/TypePromoter#create(ValueType,int).mjava","sourceNew":"  /**\n   * Creates a new {@link TypePromoter} for the given type and size per value.\n   * \n   * @param type\n   *          the {@link Type} to create the promoter for\n   * @param valueSize\n   *          the size per value in bytes or <code>-1</code> iff the types have\n   *          variable length.\n   * @return a new {@link TypePromoter}\n   */\n  public static TypePromoter create(Type type, int valueSize) {\n    if (type == null) {\n      return null;\n    }\n    switch (type) {\n    case BYTES_FIXED_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_DEREF, valueSize);\n    case BYTES_FIXED_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_SORTED, valueSize);\n    case BYTES_FIXED_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_STRAIGHT, valueSize);\n    case BYTES_VAR_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_DEREF, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_SORTED, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    case FIXED_INTS_16:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_16_BIT, valueSize);\n    case FIXED_INTS_32:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_32_BIT, valueSize);\n    case FIXED_INTS_64:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_64_BIT, valueSize);\n    case FIXED_INTS_8:\n      return new TypePromoter(type, IS_INT | IS_FIXED | IS_STRAIGHT | IS_8_BIT,\n          valueSize);\n    case FLOAT_32:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_32_BIT, valueSize);\n    case FLOAT_64:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_64_BIT, valueSize);\n    case VAR_INTS:\n      return new TypePromoter(type, IS_INT | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    default:\n      throw new IllegalStateException();\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TypePromoter} for the given type and size per value.\n   * \n   * @param type\n   *          the {@link ValueType} to create the promoter for\n   * @param valueSize\n   *          the size per value in bytes or <code>-1</code> iff the types have\n   *          variable length.\n   * @return a new {@link TypePromoter}\n   */\n  public static TypePromoter create(ValueType type, int valueSize) {\n    if (type == null) {\n      return null;\n    }\n    switch (type) {\n    case BYTES_FIXED_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_DEREF, valueSize);\n    case BYTES_FIXED_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_SORTED, valueSize);\n    case BYTES_FIXED_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_STRAIGHT, valueSize);\n    case BYTES_VAR_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_DEREF, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_SORTED, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    case FIXED_INTS_16:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_16_BIT, valueSize);\n    case FIXED_INTS_32:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_32_BIT, valueSize);\n    case FIXED_INTS_64:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_64_BIT, valueSize);\n    case FIXED_INTS_8:\n      return new TypePromoter(type, IS_INT | IS_FIXED | IS_STRAIGHT | IS_8_BIT,\n          valueSize);\n    case FLOAT_32:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_32_BIT, valueSize);\n    case FLOAT_64:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_64_BIT, valueSize);\n    case VAR_INTS:\n      return new TypePromoter(type, IS_INT | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    default:\n      throw new IllegalStateException();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TypePromoter#create(Type,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/TypePromoter#create(ValueType,int).mjava","sourceNew":"  /**\n   * Creates a new {@link TypePromoter} for the given type and size per value.\n   * \n   * @param type\n   *          the {@link Type} to create the promoter for\n   * @param valueSize\n   *          the size per value in bytes or <code>-1</code> iff the types have\n   *          variable length.\n   * @return a new {@link TypePromoter}\n   */\n  public static TypePromoter create(Type type, int valueSize) {\n    if (type == null) {\n      return null;\n    }\n    switch (type) {\n    case BYTES_FIXED_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_DEREF, valueSize);\n    case BYTES_FIXED_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_SORTED, valueSize);\n    case BYTES_FIXED_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_STRAIGHT, valueSize);\n    case BYTES_VAR_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_DEREF, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_SORTED, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    case FIXED_INTS_16:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_16_BIT, valueSize);\n    case FIXED_INTS_32:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_32_BIT, valueSize);\n    case FIXED_INTS_64:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_64_BIT, valueSize);\n    case FIXED_INTS_8:\n      return new TypePromoter(type, IS_INT | IS_FIXED | IS_STRAIGHT | IS_8_BIT,\n          valueSize);\n    case FLOAT_32:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_32_BIT, valueSize);\n    case FLOAT_64:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_64_BIT, valueSize);\n    case VAR_INTS:\n      return new TypePromoter(type, IS_INT | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    default:\n      throw new IllegalStateException();\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TypePromoter} for the given type and size per value.\n   * \n   * @param type\n   *          the {@link ValueType} to create the promoter for\n   * @param valueSize\n   *          the size per value in bytes or <code>-1</code> iff the types have\n   *          variable length.\n   * @return a new {@link TypePromoter}\n   */\n  public static TypePromoter create(ValueType type, int valueSize) {\n    if (type == null) {\n      return null;\n    }\n    switch (type) {\n    case BYTES_FIXED_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_DEREF, valueSize);\n    case BYTES_FIXED_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_SORTED, valueSize);\n    case BYTES_FIXED_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_STRAIGHT, valueSize);\n    case BYTES_VAR_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_DEREF, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_SORTED, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    case FIXED_INTS_16:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_16_BIT, valueSize);\n    case FIXED_INTS_32:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_32_BIT, valueSize);\n    case FIXED_INTS_64:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_64_BIT, valueSize);\n    case FIXED_INTS_8:\n      return new TypePromoter(type, IS_INT | IS_FIXED | IS_STRAIGHT | IS_8_BIT,\n          valueSize);\n    case FLOAT_32:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_32_BIT, valueSize);\n    case FLOAT_64:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_64_BIT, valueSize);\n    case VAR_INTS:\n      return new TypePromoter(type, IS_INT | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    default:\n      throw new IllegalStateException();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TypePromoter#create(Type,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TypePromoter#create(Type,int).mjava","sourceNew":"  /**\n   * Creates a new {@link TypePromoter} for the given type and size per value.\n   * \n   * @param type\n   *          the {@link Type} to create the promoter for\n   * @param valueSize\n   *          the size per value in bytes or <code>-1</code> iff the types have\n   *          variable length.\n   * @return a new {@link TypePromoter}\n   */\n  public static TypePromoter create(Type type, int valueSize) {\n    if (type == null) {\n      return null;\n    }\n    switch (type) {\n    case BYTES_FIXED_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_DEREF, valueSize);\n    case BYTES_FIXED_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_SORTED, valueSize);\n    case BYTES_FIXED_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_STRAIGHT, valueSize);\n    case BYTES_VAR_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_DEREF, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_SORTED, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    case FIXED_INTS_16:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_16_BIT, valueSize);\n    case FIXED_INTS_32:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_32_BIT, valueSize);\n    case FIXED_INTS_64:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_64_BIT, valueSize);\n    case FIXED_INTS_8:\n      return new TypePromoter(type, IS_INT | IS_FIXED | IS_STRAIGHT | IS_8_BIT,\n          valueSize);\n    case FLOAT_32:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_32_BIT, valueSize);\n    case FLOAT_64:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_64_BIT, valueSize);\n    case VAR_INTS:\n      return new TypePromoter(type, IS_INT | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    default:\n      throw new IllegalStateException();\n    }\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TypePromoter} for the given type and size per value.\n   * \n   * @param type\n   *          the {@link Type} to create the promoter for\n   * @param valueSize\n   *          the size per value in bytes or <code>-1</code> iff the types have\n   *          variable length.\n   * @return a new {@link TypePromoter}\n   */\n  public static TypePromoter create(Type type, int valueSize) {\n    if (type == null) {\n      return null;\n    }\n    switch (type) {\n    case BYTES_FIXED_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_DEREF, valueSize);\n    case BYTES_FIXED_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_SORTED, valueSize);\n    case BYTES_FIXED_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_FIXED | IS_STRAIGHT, valueSize);\n    case BYTES_VAR_DEREF:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_DEREF, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_SORTED:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_SORTED, VAR_TYPE_VALUE_SIZE);\n    case BYTES_VAR_STRAIGHT:\n      return new TypePromoter(type, IS_BYTE | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    case FIXED_INTS_16:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_16_BIT, valueSize);\n    case FIXED_INTS_32:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_32_BIT, valueSize);\n    case FIXED_INTS_64:\n      return new TypePromoter(type,\n          IS_INT | IS_FIXED | IS_STRAIGHT | IS_64_BIT, valueSize);\n    case FIXED_INTS_8:\n      return new TypePromoter(type, IS_INT | IS_FIXED | IS_STRAIGHT | IS_8_BIT,\n          valueSize);\n    case FLOAT_32:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_32_BIT, valueSize);\n    case FLOAT_64:\n      return new TypePromoter(type, IS_FLOAT | IS_FIXED | IS_STRAIGHT\n          | IS_64_BIT, valueSize);\n    case VAR_INTS:\n      return new TypePromoter(type, IS_INT | IS_VAR | IS_STRAIGHT, VAR_TYPE_VALUE_SIZE);\n    default:\n      throw new IllegalStateException();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}