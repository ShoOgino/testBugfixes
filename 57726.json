{"path":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#setDefaultOperator(Operator).mjava","commits":[{"id":"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a","date":1114594353,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#setDefaultOperator(Operator).mjava","pathOld":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#setDefaultOperator(Operator).mjava","sourceNew":"  /**\n   * Sets the boolean operator of the QueryParser.\n   * In default mode (<code>OR_OPERATOR</code>) terms without any modifiers\n   * are considered optional: for example <code>capital of Hungary</code> is equal to\n   * <code>capital OR of OR Hungary</code>.<br/>\n   * In <code>AND_OPERATOR</code> mode terms are considered to be in conjuction: the\n   * above mentioned query is parsed as <code>capital AND of AND Hungary</code>\n   */\n  public void setDefaultOperator(Operator op) {\n    this.operator = op;\n  }\n\n","sourceOld":"  /**\n   * Sets the boolean operator of the QueryParser.\n   * In default mode (<code>OR_OPERATOR</code>) terms without any modifiers\n   * are considered optional: for example <code>capital of Hungary</code> is equal to\n   * <code>capital OR of OR Hungary</code>.<br/>\n   * In <code>AND_OPERATOR</code> mode terms are considered to be in conjuction: the\n   * above mentioned query is parsed as <code>capital AND of AND Hungary</code>\n   */\n  public void setDefaultOperator(Operator op) {\n    this.operator = op;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#setDefaultOperator(Operator).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#setDefaultOperator(Operator).mjava","sourceNew":"  /**\n   * Sets the boolean operator of the QueryParser.\n   * In default mode (<code>OR_OPERATOR</code>) terms without any modifiers\n   * are considered optional: for example <code>capital of Hungary</code> is equal to\n   * <code>capital OR of OR Hungary</code>.<br/>\n   * In <code>AND_OPERATOR</code> mode terms are considered to be in conjuction: the\n   * above mentioned query is parsed as <code>capital AND of AND Hungary</code>\n   */\n  public void setDefaultOperator(Operator op) {\n    this.operator = op;\n  }\n\n","sourceOld":"  /**\n   * Sets the boolean operator of the QueryParser.\n   * In default mode (<code>OR_OPERATOR</code>) terms without any modifiers\n   * are considered optional: for example <code>capital of Hungary</code> is equal to\n   * <code>capital OR of OR Hungary</code>.<br/>\n   * In <code>AND_OPERATOR</code> mode terms are considered to be in conjuction: the\n   * above mentioned query is parsed as <code>capital AND of AND Hungary</code>\n   */\n  public void setDefaultOperator(Operator op) {\n    this.operator = op;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"],"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"]},"commit2Childs":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}