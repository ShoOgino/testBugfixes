{"path":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#deleteAllConfigSets().mjava","commits":[{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#deleteAllConfigSets().mjava","pathOld":"/dev/null","sourceNew":"  public void deleteAllConfigSets() throws SolrServerException, IOException {\n\n    List<String> configSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();\n\n    for (String configSet : configSetNames) {\n      if (configSet.equals(\"_default\")) {\n        continue;\n      }\n      new ConfigSetAdminRequest.Delete()\n          .setConfigSetName(configSet)\n          .process(solrClient);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7612891097d4751617c396cdd7a092833799147","date":1600707827,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#deleteAllConfigSets().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#deleteAllConfigSets().mjava","sourceNew":"  public void deleteAllConfigSets() throws Exception {\n\n    List<String> configSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();\n\n    for (String configSet : configSetNames) {\n      if (configSet.equals(\"_default\")) {\n        continue;\n      }\n      try {\n        // cleanup any property before removing the configset\n        getZkClient().delete(ZkConfigManager.CONFIGS_ZKNODE + \"/\" + configSet + \"/\" + DEFAULT_FILENAME, -1, true);\n      } catch (KeeperException.NoNodeException nne) { }\n      new ConfigSetAdminRequest.Delete()\n          .setConfigSetName(configSet)\n          .process(solrClient);\n    }\n  }\n\n","sourceOld":"  public void deleteAllConfigSets() throws SolrServerException, IOException {\n\n    List<String> configSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();\n\n    for (String configSet : configSetNames) {\n      if (configSet.equals(\"_default\")) {\n        continue;\n      }\n      new ConfigSetAdminRequest.Delete()\n          .setConfigSetName(configSet)\n          .process(solrClient);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7612891097d4751617c396cdd7a092833799147":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7612891097d4751617c396cdd7a092833799147"]},"commit2Childs":{"c7612891097d4751617c396cdd7a092833799147":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["c7612891097d4751617c396cdd7a092833799147"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}