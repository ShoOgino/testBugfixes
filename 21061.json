{"path":"solr/core/src/java/org/apache/solr/cloud/Assign#buildCoreName(DistribStateManager,DocCollection,String,Replica.Type,boolean).mjava","commits":[{"id":"85212dad4ed576c7f7e6c165ee19e597b7b4efc8","date":1507997740,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Assign#buildCoreName(DistribStateManager,DocCollection,String,Replica.Type,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Assign#buildCoreName(SolrZkClient,DocCollection,String,Replica.Type,boolean).mjava","sourceNew":"  public static String buildCoreName(DistribStateManager stateManager, DocCollection collection, String shard, Replica.Type type, boolean newCollection) {\n    Slice slice = collection.getSlice(shard);\n    int defaultValue = defaultCounterValue(collection, newCollection);\n    int replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n    String coreName = buildCoreName(collection.getName(), shard, type, replicaNum);\n    while (existCoreName(coreName, slice)) {\n      replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n      coreName = buildCoreName(collection.getName(), shard, type, replicaNum);\n    }\n    return coreName;\n  }\n\n","sourceOld":"  public static String buildCoreName(SolrZkClient zkClient, DocCollection collection, String shard, Replica.Type type, boolean newCollection) {\n    Slice slice = collection.getSlice(shard);\n    int defaultValue = defaultCounterValue(collection, newCollection);\n    int replicaNum = incAndGetId(zkClient, collection.getName(), defaultValue);\n    String coreName = buildCoreName(collection.getName(), shard, type, replicaNum);\n    while (existCoreName(coreName, slice)) {\n      replicaNum = incAndGetId(zkClient, collection.getName(), defaultValue);\n      coreName = buildCoreName(collection.getName(), shard, type, replicaNum);\n    }\n    return coreName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Assign#buildSolrCoreName(DistribStateManager,DocCollection,String,Replica.Type,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Assign#buildCoreName(DistribStateManager,DocCollection,String,Replica.Type,boolean).mjava","sourceNew":"  public static String buildSolrCoreName(DistribStateManager stateManager, DocCollection collection, String shard, Replica.Type type, boolean newCollection) {\n    Slice slice = collection.getSlice(shard);\n    int defaultValue = defaultCounterValue(collection, newCollection);\n    int replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n    String coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    while (existCoreName(coreName, slice)) {\n      replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n      coreName = buildSolrCoreName(collection.getName(), shard, type, replicaNum);\n    }\n    return coreName;\n  }\n\n","sourceOld":"  public static String buildCoreName(DistribStateManager stateManager, DocCollection collection, String shard, Replica.Type type, boolean newCollection) {\n    Slice slice = collection.getSlice(shard);\n    int defaultValue = defaultCounterValue(collection, newCollection);\n    int replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n    String coreName = buildCoreName(collection.getName(), shard, type, replicaNum);\n    while (existCoreName(coreName, slice)) {\n      replicaNum = incAndGetId(stateManager, collection.getName(), defaultValue);\n      coreName = buildCoreName(collection.getName(), shard, type, replicaNum);\n    }\n    return coreName;\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}