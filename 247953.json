{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","commits":[{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,IndexReader[],Bits).mjava","sourceNew":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean());\n  }\n\n","sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, IndexReader[] readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers[random().nextInt(readers.length)];\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","sourceNew":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean());\n  }\n\n","bugFix":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","sourceNew":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","sourceNew":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ced66195b26fdb1f77ee00e2a77ec6918dedd766","date":1344948886,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[AtomicReaderContext],Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","sourceNew":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<AtomicReaderContext> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = readers.get(random().nextInt(readers.size())).reader();\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[AtomicReaderContext],Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","sourceNew":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<AtomicReaderContext> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = readers.get(random().nextInt(readers.size())).reader();\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c188105a9aae04f56c24996f98f8333fc825d2e","date":1345031914,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[AtomicReaderContext],Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","sourceNew":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<AtomicReaderContext> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = readers.get(random().nextInt(readers.size())).reader();\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c93396a1df03720cb20e2c2f513a6fa59b21e4c","date":1345032673,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[AtomicReaderContext],Bits).mjava","sourceNew":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<AtomicReaderContext> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = readers.get(random().nextInt(readers.size())).reader();\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[AtomicReaderContext],Bits).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene40/TestReuseDocsEnum#randomDocsEnum(String,BytesRef,List[#-extends-AtomicReader],Bits).mjava","sourceNew":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<AtomicReaderContext> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = readers.get(random().nextInt(readers.size())).reader();\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","sourceOld":"  public DocsEnum randomDocsEnum(String field, BytesRef term, List<? extends AtomicReader> readers, Bits bits) throws IOException {\n    if (random().nextInt(10) == 0) {\n      return null;\n    }\n    AtomicReader indexReader = (AtomicReader) readers.get(random().nextInt(readers.size()));\n    return indexReader.termDocsEnum(bits, field, term, random().nextBoolean() ? DocsEnum.FLAG_FREQS : 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c188105a9aae04f56c24996f98f8333fc825d2e":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c","ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","02331260bb246364779cb6f04919ca47900d01bb"],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["3c188105a9aae04f56c24996f98f8333fc825d2e"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","02331260bb246364779cb6f04919ca47900d01bb"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["d6f074e73200c07d54f242d3880a8da5a35ff97b","ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"ced66195b26fdb1f77ee00e2a77ec6918dedd766":["02331260bb246364779cb6f04919ca47900d01bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"02331260bb246364779cb6f04919ca47900d01bb":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"]},"commit2Childs":{"3c188105a9aae04f56c24996f98f8333fc825d2e":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","02331260bb246364779cb6f04919ca47900d01bb"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["3c188105a9aae04f56c24996f98f8333fc825d2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["b05c56a41b733e02a189c48895922b5bd8c7f3d1"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"ced66195b26fdb1f77ee00e2a77ec6918dedd766":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"02331260bb246364779cb6f04919ca47900d01bb":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}