{"path":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","commits":[{"id":"d4769bdea5a853f1841c485bc1fd9d79cb7022fc","date":1292168168,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","pathOld":"/dev/null","sourceNew":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n\n    if (current.length == 0) {\n      final T output = fst.getEmptyOutput();\n      if (output != null) {\n        if (!didEmpty) {\n          current.length = 0;\n          lastFinal = true;\n          result.output = output;\n          didEmpty = true;\n          return result;\n        } else {\n          lastFinal = false;\n        }\n      }\n      if (fst.noNodes()) {\n        return null;\n      }\n      fst.readFirstArc(fst.getStartNode(), getArc(0));\n      push();\n    } else if (lastFinal) {\n      lastFinal = false;\n      assert current.length > 0;\n      // resume pushing\n      fst.readFirstArc(arcs[current.length-1].target, getArc(current.length));\n      push();\n    } else {\n      //System.out.println(\"    pop/push\");\n      pop();\n      if (current.length == 0) {\n        // enum done\n        return null;\n      } else {\n        current.length--;\n        fst.readNextArc(arcs[current.length]);\n        push();\n      }\n    }\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","pathOld":"/dev/null","sourceNew":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n\n    if (current.length == 0) {\n      final T output = fst.getEmptyOutput();\n      if (output != null) {\n        if (!didEmpty) {\n          current.length = 0;\n          lastFinal = true;\n          result.output = output;\n          didEmpty = true;\n          return result;\n        } else {\n          lastFinal = false;\n        }\n      }\n      if (fst.noNodes()) {\n        return null;\n      }\n      fst.readFirstArc(fst.getStartNode(), getArc(0));\n      push();\n    } else if (lastFinal) {\n      lastFinal = false;\n      assert current.length > 0;\n      // resume pushing\n      fst.readFirstArc(arcs[current.length-1].target, getArc(current.length));\n      push();\n    } else {\n      //System.out.println(\"    pop/push\");\n      pop();\n      if (current.length == 0) {\n        // enum done\n        return null;\n      } else {\n        current.length--;\n        fst.readNextArc(arcs[current.length]);\n        push();\n      }\n    }\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","pathOld":"/dev/null","sourceNew":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n\n    if (current.length == 0) {\n      final T output = fst.getEmptyOutput();\n      if (output != null) {\n        if (!didEmpty) {\n          current.length = 0;\n          lastFinal = true;\n          result.output = output;\n          didEmpty = true;\n          return result;\n        } else {\n          lastFinal = false;\n        }\n      }\n      if (fst.noNodes()) {\n        return null;\n      }\n      fst.readFirstArc(fst.getStartNode(), getArc(0));\n      push();\n    } else if (lastFinal) {\n      lastFinal = false;\n      assert current.length > 0;\n      // resume pushing\n      fst.readFirstArc(arcs[current.length-1].target, getArc(current.length));\n      push();\n    } else {\n      //System.out.println(\"    pop/push\");\n      pop();\n      if (current.length == 0) {\n        // enum done\n        return null;\n      } else {\n        current.length--;\n        fst.readNextArc(arcs[current.length]);\n        push();\n      }\n    }\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","sourceNew":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n    doNext();\n    return setResult();\n  }\n\n","sourceOld":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n\n    if (current.length == 0) {\n      final T output = fst.getEmptyOutput();\n      if (output != null) {\n        if (!didEmpty) {\n          current.length = 0;\n          lastFinal = true;\n          result.output = output;\n          didEmpty = true;\n          return result;\n        } else {\n          lastFinal = false;\n        }\n      }\n      if (fst.noNodes()) {\n        return null;\n      }\n      fst.readFirstArc(fst.getStartNode(), getArc(0));\n      push();\n    } else if (lastFinal) {\n      lastFinal = false;\n      assert current.length > 0;\n      // resume pushing\n      fst.readFirstArc(arcs[current.length-1].target, getArc(current.length));\n      push();\n    } else {\n      //System.out.println(\"    pop/push\");\n      pop();\n      if (current.length == 0) {\n        // enum done\n        return null;\n      } else {\n        current.length--;\n        fst.readNextArc(arcs[current.length]);\n        push();\n      }\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","sourceNew":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n    doNext();\n    return setResult();\n  }\n\n","sourceOld":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n\n    if (current.length == 0) {\n      final T output = fst.getEmptyOutput();\n      if (output != null) {\n        if (!didEmpty) {\n          current.length = 0;\n          lastFinal = true;\n          result.output = output;\n          didEmpty = true;\n          return result;\n        } else {\n          lastFinal = false;\n        }\n      }\n      if (fst.noNodes()) {\n        return null;\n      }\n      fst.readFirstArc(fst.getStartNode(), getArc(0));\n      push();\n    } else if (lastFinal) {\n      lastFinal = false;\n      assert current.length > 0;\n      // resume pushing\n      fst.readFirstArc(arcs[current.length-1].target, getArc(current.length));\n      push();\n    } else {\n      //System.out.println(\"    pop/push\");\n      pop();\n      if (current.length == 0) {\n        // enum done\n        return null;\n      } else {\n        current.length--;\n        fst.readNextArc(arcs[current.length]);\n        push();\n      }\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","sourceNew":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n    doNext();\n    return setResult();\n  }\n\n","sourceOld":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n\n    if (current.length == 0) {\n      final T output = fst.getEmptyOutput();\n      if (output != null) {\n        if (!didEmpty) {\n          current.length = 0;\n          lastFinal = true;\n          result.output = output;\n          didEmpty = true;\n          return result;\n        } else {\n          lastFinal = false;\n        }\n      }\n      if (fst.noNodes()) {\n        return null;\n      }\n      fst.readFirstArc(fst.getStartNode(), getArc(0));\n      push();\n    } else if (lastFinal) {\n      lastFinal = false;\n      assert current.length > 0;\n      // resume pushing\n      fst.readFirstArc(arcs[current.length-1].target, getArc(current.length));\n      push();\n    } else {\n      //System.out.println(\"    pop/push\");\n      pop();\n      if (current.length == 0) {\n        // enum done\n        return null;\n      } else {\n        current.length--;\n        fst.readNextArc(arcs[current.length]);\n        push();\n      }\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/IntsRefFSTEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","sourceNew":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n    doNext();\n    return setResult();\n  }\n\n","sourceOld":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n    doNext();\n    return setResult();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/IntsRefFSTEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","sourceNew":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n    doNext();\n    return setResult();\n  }\n\n","sourceOld":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n    doNext();\n    return setResult();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/IntsRefFSTEnum#next().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/IntsRefFSTEnum#next().mjava","sourceNew":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n    doNext();\n    return setResult();\n  }\n\n","sourceOld":"  public InputOutput<T> next() throws IOException {\n    //System.out.println(\"  enum.next\");\n    doNext();\n    return setResult();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","56da903869515527852ee21ea7ef7bfe414cd40d"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["56da903869515527852ee21ea7ef7bfe414cd40d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["56da903869515527852ee21ea7ef7bfe414cd40d","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"56da903869515527852ee21ea7ef7bfe414cd40d":["d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56da903869515527852ee21ea7ef7bfe414cd40d"],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["70ad682703b8585f5d0a637efec044d57ec05efb","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","8be6e1e4fbbc94d90b78f175c03ff389b6949373","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["70ad682703b8585f5d0a637efec044d57ec05efb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["56da903869515527852ee21ea7ef7bfe414cd40d","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}