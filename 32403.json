{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestHierarchicalDocBuilder#assertSearch(Query,String,String...).mjava","commits":[{"id":"5238b7e551c27d6d8b882878a8f8b114bd79f1b5","date":1421397215,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestHierarchicalDocBuilder#assertSearch(Query,String,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertSearch(Query query, String field, String... values) throws IOException {\n    /* The limit of search queue is doubled to catch the error in case when for some reason there are more docs than expected  */\n    SolrIndexSearcher searcher = req.getSearcher();\n    TopDocs result = searcher.search(query, values.length * 2);\n    assertEquals(values.length, result.totalHits);\n    List<String> actualValues = new ArrayList<String>();\n    for (int index = 0; index < values.length; ++index) {\n      StoredDocument doc = searcher.doc(result.scoreDocs[index].doc);\n      actualValues.add(doc.get(field));\n    }\n    \n    for (String expectedValue: values) {\n      boolean removed = actualValues.remove(expectedValue);\n      if (!removed) {\n        fail(\"Search result does not contain expected values\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestHierarchicalDocBuilder#assertSearch(Query,String,String...).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestHierarchicalDocBuilder#assertSearch(Query,String,String...).mjava","sourceNew":"  private void assertSearch(Query query, String field, String... values) throws IOException {\n    /* The limit of search queue is doubled to catch the error in case when for some reason there are more docs than expected  */\n    SolrIndexSearcher searcher = req.getSearcher();\n    TopDocs result = searcher.search(query, values.length * 2);\n    assertEquals(values.length, result.totalHits);\n    List<String> actualValues = new ArrayList<String>();\n    for (int index = 0; index < values.length; ++index) {\n      Document doc = searcher.doc(result.scoreDocs[index].doc);\n      actualValues.add(doc.get(field));\n    }\n    \n    for (String expectedValue: values) {\n      boolean removed = actualValues.remove(expectedValue);\n      if (!removed) {\n        fail(\"Search result does not contain expected values\");\n      }\n    }\n  }\n\n","sourceOld":"  private void assertSearch(Query query, String field, String... values) throws IOException {\n    /* The limit of search queue is doubled to catch the error in case when for some reason there are more docs than expected  */\n    SolrIndexSearcher searcher = req.getSearcher();\n    TopDocs result = searcher.search(query, values.length * 2);\n    assertEquals(values.length, result.totalHits);\n    List<String> actualValues = new ArrayList<String>();\n    for (int index = 0; index < values.length; ++index) {\n      StoredDocument doc = searcher.doc(result.scoreDocs[index].doc);\n      actualValues.add(doc.get(field));\n    }\n    \n    for (String expectedValue: values) {\n      boolean removed = actualValues.remove(expectedValue);\n      if (!removed) {\n        fail(\"Search result does not contain expected values\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestHierarchicalDocBuilder#assertSearch(Query,String,String...).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestHierarchicalDocBuilder#assertSearch(Query,String,String...).mjava","sourceNew":"  private void assertSearch(Query query, String field, String... values) throws IOException {\n    /* The limit of search queue is doubled to catch the error in case when for some reason there are more docs than expected  */\n    SolrIndexSearcher searcher = req.getSearcher();\n    TopDocs result = searcher.search(query, values.length * 2);\n    assertEquals(values.length, result.totalHits.value);\n    List<String> actualValues = new ArrayList<String>();\n    for (int index = 0; index < values.length; ++index) {\n      Document doc = searcher.doc(result.scoreDocs[index].doc);\n      actualValues.add(doc.get(field));\n    }\n    \n    for (String expectedValue: values) {\n      boolean removed = actualValues.remove(expectedValue);\n      if (!removed) {\n        fail(\"Search result does not contain expected values\");\n      }\n    }\n  }\n\n","sourceOld":"  private void assertSearch(Query query, String field, String... values) throws IOException {\n    /* The limit of search queue is doubled to catch the error in case when for some reason there are more docs than expected  */\n    SolrIndexSearcher searcher = req.getSearcher();\n    TopDocs result = searcher.search(query, values.length * 2);\n    assertEquals(values.length, result.totalHits);\n    List<String> actualValues = new ArrayList<String>();\n    for (int index = 0; index < values.length; ++index) {\n      Document doc = searcher.doc(result.scoreDocs[index].doc);\n      actualValues.add(doc.get(field));\n    }\n    \n    for (String expectedValue: values) {\n      boolean removed = actualValues.remove(expectedValue);\n      if (!removed) {\n        fail(\"Search result does not contain expected values\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestHierarchicalDocBuilder#assertSearch(Query,String,String...).mjava","sourceNew":null,"sourceOld":"  private void assertSearch(Query query, String field, String... values) throws IOException {\n    /* The limit of search queue is doubled to catch the error in case when for some reason there are more docs than expected  */\n    SolrIndexSearcher searcher = req.getSearcher();\n    TopDocs result = searcher.search(query, values.length * 2);\n    assertEquals(values.length, result.totalHits.value);\n    List<String> actualValues = new ArrayList<String>();\n    for (int index = 0; index < values.length; ++index) {\n      Document doc = searcher.doc(result.scoreDocs[index].doc);\n      actualValues.add(doc.get(field));\n    }\n    \n    for (String expectedValue: values) {\n      boolean removed = actualValues.remove(expectedValue);\n      if (!removed) {\n        fail(\"Search result does not contain expected values\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"5238b7e551c27d6d8b882878a8f8b114bd79f1b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["5238b7e551c27d6d8b882878a8f8b114bd79f1b5"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5238b7e551c27d6d8b882878a8f8b114bd79f1b5":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5238b7e551c27d6d8b882878a8f8b114bd79f1b5"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}