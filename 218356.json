{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","commits":[{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiDocMaker.Parser#next().mjava","sourceNew":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","sourceOld":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa4b66eb16ead894fa7130904af6ecf34331f050","date":1258198413,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","sourceNew":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n            throw new ThreadInterruptedException(ie);\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","sourceOld":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#next().mjava","sourceNew":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n            throw new ThreadInterruptedException(ie);\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","sourceOld":"    String[] next() throws NoMoreDataException {\n      if (t == null) {\n        threadDone = false;\n        t = new Thread(this);\n        t.setDaemon(true);\n        t.start();\n      }\n      String[] result;\n      synchronized(this){\n        while(tuple == null && nmde == null && !threadDone) {\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n            throw new ThreadInterruptedException(ie);\n          }\n        }\n        if (nmde != null) {\n          // Set to null so we will re-start thread in case\n          // we are re-used:\n          t = null;\n          throw nmde;\n        }\n        if (t != null && threadDone) {\n          // The thread has exited yet did not hit end of\n          // data, so this means it hit an exception.  We\n          // throw NoMorDataException here to force\n          // benchmark to stop the current alg:\n          throw new NoMoreDataException();\n        }\n        result = tuple;\n        tuple = null;\n        notify();\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"aa4b66eb16ead894fa7130904af6ecf34331f050":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["aa4b66eb16ead894fa7130904af6ecf34331f050"]},"commit2Childs":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["aa4b66eb16ead894fa7130904af6ecf34331f050"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"aa4b66eb16ead894fa7130904af6ecf34331f050":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}