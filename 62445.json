{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#lengthNorm(FieldInvertState).mjava","commits":[{"id":"953ba6667d987c58964da9cad38c2d9d61cca920","date":1352255075,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#lengthNorm(FieldInvertState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#computeNorm(FieldInvertState,Norm).mjava","sourceNew":"  /** Implemented as\n   *  <code>state.getBoost()*lengthNorm(numTerms)</code>, where\n   *  <code>numTerms</code> is {@link FieldInvertState#getLength()} if {@link\n   *  #setDiscountOverlaps} is false, else it's {@link\n   *  FieldInvertState#getLength()} - {@link\n   *  FieldInvertState#getNumOverlap()}.\n   *\n   *  @lucene.experimental */\n  @Override\n  public float lengthNorm(FieldInvertState state) {\n    final int numTerms;\n    if (discountOverlaps)\n      numTerms = state.getLength() - state.getNumOverlap();\n    else\n      numTerms = state.getLength();\n   return state.getBoost() * ((float) (1.0 / Math.sqrt(numTerms)));\n  }\n\n","sourceOld":"  /** Implemented as\n   *  <code>state.getBoost()*lengthNorm(numTerms)</code>, where\n   *  <code>numTerms</code> is {@link FieldInvertState#getLength()} if {@link\n   *  #setDiscountOverlaps} is false, else it's {@link\n   *  FieldInvertState#getLength()} - {@link\n   *  FieldInvertState#getNumOverlap()}.\n   *\n   *  @lucene.experimental */\n  @Override\n  public void computeNorm(FieldInvertState state, Norm norm) {\n    final int numTerms;\n    if (discountOverlaps)\n      numTerms = state.getLength() - state.getNumOverlap();\n    else\n      numTerms = state.getLength();\n    norm.setByte(encodeNormValue(state.getBoost() * ((float) (1.0 / Math.sqrt(numTerms)))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"093bee2f43dd0978e7612911b8dc617eb01180ef","date":1412028154,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#lengthNorm(FieldInvertState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#lengthNorm(FieldInvertState).mjava","sourceNew":"  /** Implemented as\n   *  <code>state.getBoost()*lengthNorm(numTerms)</code>, where\n   *  <code>numTerms</code> is {@link FieldInvertState#getLength()} if {@link\n   *  #setDiscountOverlaps} is false, else it's {@link\n   *  FieldInvertState#getLength()} - {@link\n   *  FieldInvertState#getNumOverlap()}.\n   *\n   *  @lucene.experimental */\n  @Override\n  public float lengthNorm(FieldInvertState state) {\n    final int numTerms;\n    if (discountOverlaps)\n      numTerms = state.getLength() - state.getNumOverlap();\n    else\n      numTerms = state.getLength();\n    return state.getBoost() * ((float) (1.0 / Math.sqrt(numTerms)));\n  }\n\n","sourceOld":"  /** Implemented as\n   *  <code>state.getBoost()*lengthNorm(numTerms)</code>, where\n   *  <code>numTerms</code> is {@link FieldInvertState#getLength()} if {@link\n   *  #setDiscountOverlaps} is false, else it's {@link\n   *  FieldInvertState#getLength()} - {@link\n   *  FieldInvertState#getNumOverlap()}.\n   *\n   *  @lucene.experimental */\n  @Override\n  public float lengthNorm(FieldInvertState state) {\n    final int numTerms;\n    if (discountOverlaps)\n      numTerms = state.getLength() - state.getNumOverlap();\n    else\n      numTerms = state.getLength();\n   return state.getBoost() * ((float) (1.0 / Math.sqrt(numTerms)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#lengthNorm(FieldInvertState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#lengthNorm(FieldInvertState).mjava","sourceNew":"  /** Implemented as\n   *  <code>state.getBoost()*lengthNorm(numTerms)</code>, where\n   *  <code>numTerms</code> is {@link FieldInvertState#getLength()} if {@link\n   *  #setDiscountOverlaps} is false, else it's {@link\n   *  FieldInvertState#getLength()} - {@link\n   *  FieldInvertState#getNumOverlap()}.\n   *\n   *  @lucene.experimental */\n  @Override\n  public float lengthNorm(FieldInvertState state) {\n    final int numTerms;\n    if (discountOverlaps)\n      numTerms = state.getLength() - state.getNumOverlap();\n    else\n      numTerms = state.getLength();\n    return state.getBoost() * ((float) (1.0 / Math.sqrt(numTerms)));\n  }\n\n","sourceOld":"  /** Implemented as\n   *  <code>state.getBoost()*lengthNorm(numTerms)</code>, where\n   *  <code>numTerms</code> is {@link FieldInvertState#getLength()} if {@link\n   *  #setDiscountOverlaps} is false, else it's {@link\n   *  FieldInvertState#getLength()} - {@link\n   *  FieldInvertState#getNumOverlap()}.\n   *\n   *  @lucene.experimental */\n  @Override\n  public float lengthNorm(FieldInvertState state) {\n    final int numTerms;\n    if (discountOverlaps)\n      numTerms = state.getLength() - state.getNumOverlap();\n    else\n      numTerms = state.getLength();\n   return state.getBoost() * ((float) (1.0 / Math.sqrt(numTerms)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/ClassicSimilarity#lengthNorm(FieldInvertState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity#lengthNorm(FieldInvertState).mjava","sourceNew":"  /** Implemented as\n   *  <code>state.getBoost()*lengthNorm(numTerms)</code>, where\n   *  <code>numTerms</code> is {@link FieldInvertState#getLength()} if {@link\n   *  #setDiscountOverlaps} is false, else it's {@link\n   *  FieldInvertState#getLength()} - {@link\n   *  FieldInvertState#getNumOverlap()}.\n   *\n   *  @lucene.experimental */\n  @Override\n  public float lengthNorm(FieldInvertState state) {\n    final int numTerms;\n    if (discountOverlaps)\n      numTerms = state.getLength() - state.getNumOverlap();\n    else\n      numTerms = state.getLength();\n    return state.getBoost() * ((float) (1.0 / Math.sqrt(numTerms)));\n  }\n\n","sourceOld":"  /** Implemented as\n   *  <code>state.getBoost()*lengthNorm(numTerms)</code>, where\n   *  <code>numTerms</code> is {@link FieldInvertState#getLength()} if {@link\n   *  #setDiscountOverlaps} is false, else it's {@link\n   *  FieldInvertState#getLength()} - {@link\n   *  FieldInvertState#getNumOverlap()}.\n   *\n   *  @lucene.experimental */\n  @Override\n  public float lengthNorm(FieldInvertState state) {\n    final int numTerms;\n    if (discountOverlaps)\n      numTerms = state.getLength() - state.getNumOverlap();\n    else\n      numTerms = state.getLength();\n    return state.getBoost() * ((float) (1.0 / Math.sqrt(numTerms)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"093bee2f43dd0978e7612911b8dc617eb01180ef":["953ba6667d987c58964da9cad38c2d9d61cca920"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"953ba6667d987c58964da9cad38c2d9d61cca920":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["953ba6667d987c58964da9cad38c2d9d61cca920","093bee2f43dd0978e7612911b8dc617eb01180ef"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["093bee2f43dd0978e7612911b8dc617eb01180ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81d0720146de53dd3a4a023d2a3d1089d86d748d"]},"commit2Childs":{"093bee2f43dd0978e7612911b8dc617eb01180ef":["d9a47902d6207303f5ed3e7aaca62ca33433af66","81d0720146de53dd3a4a023d2a3d1089d86d748d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["953ba6667d987c58964da9cad38c2d9d61cca920"],"953ba6667d987c58964da9cad38c2d9d61cca920":["093bee2f43dd0978e7612911b8dc617eb01180ef","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}