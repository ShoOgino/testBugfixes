{"path":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createDocument(String,int,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createDocument(String,int,int).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createDocument(String,int,int).mjava","sourceNew":"  private static Document createDocument(String text, int ng1, int ng2) {\n    Document doc = new Document();\n    // the word field is never queried on... its indexed so it can be quickly\n    // checked for rebuild (and stored for retrieval). Doesn't need norms or TF/pos\n    Field f = new Field(F_WORD, text, StringField.TYPE_STORED);\n    doc.add(f); // orig term\n    addGram(text, doc, ng1, ng2);\n    return doc;\n  }\n\n","sourceOld":"  private static Document createDocument(String text, int ng1, int ng2) {\n    Document doc = new Document();\n    // the word field is never queried on... its indexed so it can be quickly\n    // checked for rebuild (and stored for retrieval). Doesn't need norms or TF/pos\n    Field f = new Field(F_WORD, text, StringField.TYPE_STORED);\n    doc.add(f); // orig term\n    addGram(text, doc, ng1, ng2);\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createDocument(String,int,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createDocument(String,int,int).mjava","sourceNew":"  private static Document createDocument(String text, int ng1, int ng2) {\n    Document doc = new Document();\n    // the word field is never queried on... its indexed so it can be quickly\n    // checked for rebuild (and stored for retrieval). Doesn't need norms or TF/pos\n    Field f = new StringField(F_WORD, text, Field.Store.YES);\n    doc.add(f); // orig term\n    addGram(text, doc, ng1, ng2);\n    return doc;\n  }\n\n","sourceOld":"  private static Document createDocument(String text, int ng1, int ng2) {\n    Document doc = new Document();\n    // the word field is never queried on... its indexed so it can be quickly\n    // checked for rebuild (and stored for retrieval). Doesn't need norms or TF/pos\n    Field f = new Field(F_WORD, text, StringField.TYPE_STORED);\n    doc.add(f); // orig term\n    addGram(text, doc, ng1, ng2);\n    return doc;\n  }\n\n","bugFix":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createDocument(String,int,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createDocument(String,int,int).mjava","sourceNew":"  private static Document createDocument(String text, int ng1, int ng2) {\n    Document doc = new Document();\n    // the word field is never queried on... its indexed so it can be quickly\n    // checked for rebuild (and stored for retrieval). Doesn't need norms or TF/pos\n    Field f = new StringField(F_WORD, text, Field.Store.YES);\n    doc.add(f); // orig term\n    addGram(text, doc, ng1, ng2);\n    return doc;\n  }\n\n","sourceOld":"  private static Document createDocument(String text, int ng1, int ng2) {\n    Document doc = new Document();\n    // the word field is never queried on... its indexed so it can be quickly\n    // checked for rebuild (and stored for retrieval). Doesn't need norms or TF/pos\n    Field f = new StringField(F_WORD, text, Field.Store.YES);\n    doc.add(f); // orig term\n    addGram(text, doc, ng1, ng2);\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createDocument(String,int,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createDocument(String,int,int).mjava","sourceNew":"  private static Document createDocument(String text, int ng1, int ng2) {\n    Document doc = new Document();\n    // the word field is never queried on... its indexed so it can be quickly\n    // checked for rebuild (and stored for retrieval). Doesn't need norms or TF/pos\n    Field f = new StringField(F_WORD, text, Field.Store.YES);\n    doc.add(f); // orig term\n    addGram(text, doc, ng1, ng2);\n    return doc;\n  }\n\n","sourceOld":"  private static Document createDocument(String text, int ng1, int ng2) {\n    Document doc = new Document();\n    // the word field is never queried on... its indexed so it can be quickly\n    // checked for rebuild (and stored for retrieval). Doesn't need norms or TF/pos\n    Field f = new StringField(F_WORD, text, Field.Store.YES);\n    doc.add(f); // orig term\n    addGram(text, doc, ng1, ng2);\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createDocument(String,int,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createDocument(String,int,int).mjava","sourceNew":"  private static Document createDocument(String text, int ng1, int ng2) {\n    Document doc = new Document();\n    // the word field is never queried on... it's indexed so it can be quickly\n    // checked for rebuild (and stored for retrieval). Doesn't need norms or TF/pos\n    Field f = new StringField(F_WORD, text, Field.Store.YES);\n    doc.add(f); // orig term\n    addGram(text, doc, ng1, ng2);\n    return doc;\n  }\n\n","sourceOld":"  private static Document createDocument(String text, int ng1, int ng2) {\n    Document doc = new Document();\n    // the word field is never queried on... its indexed so it can be quickly\n    // checked for rebuild (and stored for retrieval). Doesn't need norms or TF/pos\n    Field f = new StringField(F_WORD, text, Field.Store.YES);\n    doc.add(f); // orig term\n    addGram(text, doc, ng1, ng2);\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}