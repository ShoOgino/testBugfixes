{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree.Iterator#up().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree.Iterator#up().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree.Iterator#up().mjava","sourceNew":"    /**\n     * traverse upwards\n     */\n    private int up() {\n      Item i = new Item();\n      int res = 0;\n\n      if (ns.empty()) {\n        return -1;\n      }\n\n      if (cur != 0 && sc[cur] == 0) {\n        return lo[cur];\n      }\n\n      boolean climb = true;\n\n      while (climb) {\n        i = ns.pop();\n        i.child++;\n        switch (i.child) {\n          case 1:\n            if (sc[i.parent] != 0) {\n              res = eq[i.parent];\n              ns.push(i.clone());\n              ks.append(sc[i.parent]);\n            } else {\n              i.child++;\n              ns.push(i.clone());\n              res = hi[i.parent];\n            }\n            climb = false;\n            break;\n\n          case 2:\n            res = hi[i.parent];\n            ns.push(i.clone());\n            if (ks.length() > 0) {\n              ks.setLength(ks.length() - 1); // pop\n            }\n            climb = false;\n            break;\n\n          default:\n            if (ns.empty()) {\n              return -1;\n            }\n            climb = true;\n            break;\n        }\n      }\n      return res;\n    }\n\n","sourceOld":"    /**\n     * traverse upwards\n     */\n    private int up() {\n      Item i = new Item();\n      int res = 0;\n\n      if (ns.empty()) {\n        return -1;\n      }\n\n      if (cur != 0 && sc[cur] == 0) {\n        return lo[cur];\n      }\n\n      boolean climb = true;\n\n      while (climb) {\n        i = ns.pop();\n        i.child++;\n        switch (i.child) {\n          case 1:\n            if (sc[i.parent] != 0) {\n              res = eq[i.parent];\n              ns.push(i.clone());\n              ks.append(sc[i.parent]);\n            } else {\n              i.child++;\n              ns.push(i.clone());\n              res = hi[i.parent];\n            }\n            climb = false;\n            break;\n\n          case 2:\n            res = hi[i.parent];\n            ns.push(i.clone());\n            if (ks.length() > 0) {\n              ks.setLength(ks.length() - 1); // pop\n            }\n            climb = false;\n            break;\n\n          default:\n            if (ns.empty()) {\n              return -1;\n            }\n            climb = true;\n            break;\n        }\n      }\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}