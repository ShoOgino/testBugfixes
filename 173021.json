{"path":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = new File(TEMP_DIR, HdfsDirectory.class.getName() + \"-\" + System.currentTimeMillis());\n    rm(file);\n    file.mkdirs();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\"));\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = new File(TEMP_DIR, HdfsDirectory.class.getName() + \"-\" + System.currentTimeMillis());\n    rm(file);\n    file.mkdirs();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\"));\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\"));\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = new File(TEMP_DIR, HdfsDirectory.class.getName() + \"-\" + System.currentTimeMillis());\n    rm(file);\n    file.mkdirs();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\"));\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = new File(dataDir, HdfsDirectory.class.getName() + \"-\" + System.currentTimeMillis());\n    rm(file);\n    file.mkdirs();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\"));\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = new File(TEMP_DIR, HdfsDirectory.class.getName() + \"-\" + System.currentTimeMillis());\n    rm(file);\n    file.mkdirs();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\"));\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\"));\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\"));\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\"));\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = new File(dataDir, HdfsDirectory.class.getName() + \"-\" + System.currentTimeMillis());\n    rm(file);\n    file.mkdirs();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\"));\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\"));\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c058cf6636d4738330f52c3b56f52c0aa8fcc9","date":1479205115,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n\n    if (random().nextBoolean()) {\n      Metrics metrics = new Metrics();\n      int blockSize = 8192;\n      int slabSize = blockSize * 32768;\n      long totalMemory = 2 * slabSize;\n      BlockCache blockCache = new BlockCache(metrics, true, totalMemory, slabSize, blockSize);\n      BlockDirectoryCache cache = new BlockDirectoryCache(blockCache, \"/collection1\", metrics, true);\n      directory = new BlockDirectory(\"test\", dir, cache, null, true, false);\n    } else {\n      directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    }\n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","bugFix":null,"bugIntro":["e2bf1b3a0c359b90bd8fd7254c44d28e6887c962"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"21019aa828c8c9b0153877543a8b3f200bf2ca19","date":1479224450,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n\n    if (random().nextBoolean()) {\n      Metrics metrics = new Metrics();\n      int blockSize = 8192;\n      int slabSize = blockSize * 32768;\n      long totalMemory = 2 * slabSize;\n      BlockCache blockCache = new BlockCache(metrics, true, totalMemory, slabSize, blockSize);\n      BlockDirectoryCache cache = new BlockDirectoryCache(blockCache, \"/collection1\", metrics, true);\n      directory = new BlockDirectory(\"test\", dir, cache, null, true, false);\n    } else {\n      directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    }\n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n    directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3dc3a264df0764958b41674928fb4de15a0a977","date":1479225941,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n\n    if (random().nextBoolean()) {\n      Metrics metrics = new Metrics();\n      int blockSize = 8192;\n      int slabSize = blockSize * 32768;\n      long totalMemory = 1 * slabSize;\n      BlockCache blockCache = new BlockCache(metrics, true, totalMemory, slabSize, blockSize);\n      BlockDirectoryCache cache = new BlockDirectoryCache(blockCache, \"/collection1\", metrics, true);\n      directory = new BlockDirectory(\"test\", dir, cache, null, true, false);\n    } else {\n      directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    }\n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n\n    if (random().nextBoolean()) {\n      Metrics metrics = new Metrics();\n      int blockSize = 8192;\n      int slabSize = blockSize * 32768;\n      long totalMemory = 2 * slabSize;\n      BlockCache blockCache = new BlockCache(metrics, true, totalMemory, slabSize, blockSize);\n      BlockDirectoryCache cache = new BlockDirectoryCache(blockCache, \"/collection1\", metrics, true);\n      directory = new BlockDirectory(\"test\", dir, cache, null, true, false);\n    } else {\n      directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    }\n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a1ef55e1fff7ff44354432770ad8bc19be1fcc75","date":1479266056,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n\n    if (random().nextBoolean()) {\n      Metrics metrics = new Metrics();\n      int blockSize = 8192;\n      int slabSize = blockSize * 32768;\n      long totalMemory = 1 * slabSize;\n      BlockCache blockCache = new BlockCache(metrics, true, totalMemory, slabSize, blockSize);\n      BlockDirectoryCache cache = new BlockDirectoryCache(blockCache, \"/collection1\", metrics, true);\n      directory = new BlockDirectory(\"test\", dir, cache, null, true, false);\n    } else {\n      directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    }\n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n\n    if (random().nextBoolean()) {\n      Metrics metrics = new Metrics();\n      int blockSize = 8192;\n      int slabSize = blockSize * 32768;\n      long totalMemory = 2 * slabSize;\n      BlockCache blockCache = new BlockCache(metrics, true, totalMemory, slabSize, blockSize);\n      BlockDirectoryCache cache = new BlockDirectoryCache(blockCache, \"/collection1\", metrics, true);\n      directory = new BlockDirectory(\"test\", dir, cache, null, true, false);\n    } else {\n      directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    }\n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e2bf1b3a0c359b90bd8fd7254c44d28e6887c962","date":1479309101,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n\n    if (random().nextBoolean()) {\n      Metrics metrics = new Metrics();\n      int blockSize = 8192;\n      int slabSize = blockSize * 16384;\n      long totalMemory = 1 * slabSize;\n      BlockCache blockCache = new BlockCache(metrics, true, totalMemory, slabSize, blockSize);\n      BlockDirectoryCache cache = new BlockDirectoryCache(blockCache, \"/collection1\", metrics, true);\n      directory = new BlockDirectory(\"test\", dir, cache, null, true, false);\n    } else {\n      directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    }\n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n\n    if (random().nextBoolean()) {\n      Metrics metrics = new Metrics();\n      int blockSize = 8192;\n      int slabSize = blockSize * 32768;\n      long totalMemory = 1 * slabSize;\n      BlockCache blockCache = new BlockCache(metrics, true, totalMemory, slabSize, blockSize);\n      BlockDirectoryCache cache = new BlockDirectoryCache(blockCache, \"/collection1\", metrics, true);\n      directory = new BlockDirectory(\"test\", dir, cache, null, true, false);\n    } else {\n      directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    }\n    random = random();\n  }\n\n","bugFix":["e1c058cf6636d4738330f52c3b56f52c0aa8fcc9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e859e664a65796dadf8aaf65db6f66f3a885368","date":1479487334,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n\n    if (random().nextBoolean()) {\n      Metrics metrics = new Metrics();\n      int blockSize = 8192;\n      int slabSize = blockSize * 16384;\n      long totalMemory = 1 * slabSize;\n      BlockCache blockCache = new BlockCache(metrics, true, totalMemory, slabSize, blockSize);\n      BlockDirectoryCache cache = new BlockDirectoryCache(blockCache, \"/collection1\", metrics, true);\n      directory = new BlockDirectory(\"test\", dir, cache, null, true, false);\n    } else {\n      directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    }\n    random = random();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    file = createTempDir().toFile();\n    FSDirectory dir = FSDirectory.open(new File(file, \"base\").toPath());\n    mapperCache = new MapperCache();\n\n    if (random().nextBoolean()) {\n      Metrics metrics = new Metrics();\n      int blockSize = 8192;\n      int slabSize = blockSize * 32768;\n      long totalMemory = 1 * slabSize;\n      BlockCache blockCache = new BlockCache(metrics, true, totalMemory, slabSize, blockSize);\n      BlockDirectoryCache cache = new BlockDirectoryCache(blockCache, \"/collection1\", metrics, true);\n      directory = new BlockDirectory(\"test\", dir, cache, null, true, false);\n    } else {\n      directory = new BlockDirectory(\"test\", dir, mapperCache, null, true, true);\n    }\n    random = random();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"21019aa828c8c9b0153877543a8b3f200bf2ca19":["f4abec28b874149a7223e32cc7a01704c27790de","e1c058cf6636d4738330f52c3b56f52c0aa8fcc9"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"e2bf1b3a0c359b90bd8fd7254c44d28e6887c962":["b3dc3a264df0764958b41674928fb4de15a0a977"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b3dc3a264df0764958b41674928fb4de15a0a977":["e1c058cf6636d4738330f52c3b56f52c0aa8fcc9"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"e1c058cf6636d4738330f52c3b56f52c0aa8fcc9":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":["21019aa828c8c9b0153877543a8b3f200bf2ca19","b3dc3a264df0764958b41674928fb4de15a0a977"],"2e859e664a65796dadf8aaf65db6f66f3a885368":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75","e2bf1b3a0c359b90bd8fd7254c44d28e6887c962"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e2bf1b3a0c359b90bd8fd7254c44d28e6887c962"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"21019aa828c8c9b0153877543a8b3f200bf2ca19":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"f4abec28b874149a7223e32cc7a01704c27790de":["21019aa828c8c9b0153877543a8b3f200bf2ca19","e1c058cf6636d4738330f52c3b56f52c0aa8fcc9"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d0d579490a72f2e6297eaa648940611234c57cf1","1416f9d09d016a6894cd17e1caac137dad2bba59"],"e2bf1b3a0c359b90bd8fd7254c44d28e6887c962":["2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b3dc3a264df0764958b41674928fb4de15a0a977":["e2bf1b3a0c359b90bd8fd7254c44d28e6887c962","a1ef55e1fff7ff44354432770ad8bc19be1fcc75"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"e1c058cf6636d4738330f52c3b56f52c0aa8fcc9":["21019aa828c8c9b0153877543a8b3f200bf2ca19","b3dc3a264df0764958b41674928fb4de15a0a977"],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":["2e859e664a65796dadf8aaf65db6f66f3a885368"],"2e859e664a65796dadf8aaf65db6f66f3a885368":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}