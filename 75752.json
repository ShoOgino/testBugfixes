{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","commits":[{"id":"ba1e7de64990e3928b90142a52fb92eeff556475","date":1503713257,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45c28dbb559366e1f4ef8077346552bfb3f7ecf6","date":1503738439,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bbe7f5e9d90420c7fc8cd235dd8fb33fa9befe54","date":1512439781,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).boxed().collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).boxed().collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator#doWork(Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).boxed().collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["bbe7f5e9d90420c7fc8cd235dd8fb33fa9befe54"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["bbe7f5e9d90420c7fc8cd235dd8fb33fa9befe54","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"bbe7f5e9d90420c7fc8cd235dd8fb33fa9befe54":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ba1e7de64990e3928b90142a52fb92eeff556475"],"ba1e7de64990e3928b90142a52fb92eeff556475":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["bbe7f5e9d90420c7fc8cd235dd8fb33fa9befe54","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["628903f37b6c442da0d390db1c6af9a0e74d41a7"]},"commit2Childs":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"bbe7f5e9d90420c7fc8cd235dd8fb33fa9befe54":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","45c28dbb559366e1f4ef8077346552bfb3f7ecf6","ba1e7de64990e3928b90142a52fb92eeff556475"],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","bbe7f5e9d90420c7fc8cd235dd8fb33fa9befe54"],"ba1e7de64990e3928b90142a52fb92eeff556475":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}