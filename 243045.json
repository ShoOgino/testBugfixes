{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#meetsAllBounds(Vector,Membership[]).mjava","commits":[{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#meetsAllBounds(Vector,Membership[]).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#meetsAllBounds(Vector,Membership[]).mjava","sourceNew":"  /**\n   * Check if a vector meets the provided bounds.\n   * @param p is the vector.\n   * @param bounds are the bounds.\n   * @return true if the vector describes a point within the bounds.\n   */\n  protected static boolean meetsAllBounds(final Vector p, final Membership[] bounds) {\n    return meetsAllBounds(p.x, p.y, p.z, bounds);\n  }\n\n","sourceOld":"  /**\n   * Check if a vector meets the provided bounds.\n   * @param p is the vector.\n   * @param bounds are the bounds.\n   * @return true if the vector describes a point within the bounds.\n   */\n  protected static boolean meetsAllBounds(final Vector p, final Membership[] bounds) {\n    return meetsAllBounds(p.x, p.y, p.z, bounds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5864f13b0b1ae08430bed46d2fcbc5f5c7005195","date":1460068279,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#meetsAllBounds(Vector,Membership[]).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#meetsAllBounds(Vector,Membership[]).mjava","sourceNew":"  /**\n   * Check if a vector meets the provided bounds.\n   * @param p is the vector.\n   * @param bounds are the bounds.\n   * @return true if the vector describes a point within the bounds.\n   */\n  private static boolean meetsAllBounds(final Vector p, final Membership[] bounds) {\n    return meetsAllBounds(p.x, p.y, p.z, bounds);\n  }\n\n","sourceOld":"  /**\n   * Check if a vector meets the provided bounds.\n   * @param p is the vector.\n   * @param bounds are the bounds.\n   * @return true if the vector describes a point within the bounds.\n   */\n  protected static boolean meetsAllBounds(final Vector p, final Membership[] bounds) {\n    return meetsAllBounds(p.x, p.y, p.z, bounds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5864f13b0b1ae08430bed46d2fcbc5f5c7005195":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4e444678504caf66a8060b1d514383aa4feac0c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5864f13b0b1ae08430bed46d2fcbc5f5c7005195"]},"commit2Childs":{"5864f13b0b1ae08430bed46d2fcbc5f5c7005195":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e444678504caf66a8060b1d514383aa4feac0c"],"b4e444678504caf66a8060b1d514383aa4feac0c":["5864f13b0b1ae08430bed46d2fcbc5f5c7005195"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}