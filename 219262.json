{"path":"lucene/src/java/org/apache/lucene/index/AtomicReader#docValues(String).mjava","commits":[{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/AtomicReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/AtomicIndexReader#docValues(String).mjava","sourceNew":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link DocValues} for such a reader,\n   * use {@link MultiDocValues#getDocValues(IndexReader,String)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","sourceOld":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link DocValues} for such a reader,\n   * use {@link MultiDocValues#getDocValues(IndexReader,String)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d4eabaae1326fe4c79e878164a5de1a6bff9fa6","date":1327932787,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/AtomicReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/AtomicReader#docValues(String).mjava","sourceNew":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","sourceOld":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link DocValues} for such a reader,\n   * use {@link MultiDocValues#getDocValues(IndexReader,String)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/AtomicReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","sourceNew":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","sourceOld":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link DocValues} for such a reader,\n   * use {@link MultiDocValues#getDocValues(IndexReader,String)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/AtomicReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/AtomicReader#docValues(String).mjava","sourceNew":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","sourceOld":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8d4eabaae1326fe4c79e878164a5de1a6bff9fa6":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8d4eabaae1326fe4c79e878164a5de1a6bff9fa6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"8d4eabaae1326fe4c79e878164a5de1a6bff9fa6":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["8d4eabaae1326fe4c79e878164a5de1a6bff9fa6"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da6d5ac19a80d65b1e864251f155d30960353b7e","5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}