{"path":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","commits":[{"id":"c15a75016387504d70a40cba6e9314b8885307f0","date":1397542349,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    File path = createTempDir(\"testsubdir\");\n    Directory fsDir = null;\n    try {\n      path.mkdirs();\n      new File(path, \"subdir\").mkdirs();\n      fsDir = newFSDirectory(path);\n      assertEquals(0, new RAMDirectory(fsDir, newIOContext(random())).listAll().length);\n    } finally {\n      TestUtil.rm(path);\n      IOUtils.close(fsDir);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17","302be0cc5e6a28ebcebcac98aa81a92be2e94370"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","sourceNew":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    File path = createTempDir(\"testsubdir\");\n    Directory fsDir = null;\n    try {\n      path.mkdirs();\n      new File(path, \"subdir\").mkdirs();\n      fsDir = newFSDirectory(path);\n      assertEquals(0, new RAMDirectory(fsDir, newIOContext(random())).listAll().length);\n    } finally {\n      IOUtils.close(fsDir);\n      IOUtils.rm(path);\n    }\n  }\n\n","sourceOld":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    File path = createTempDir(\"testsubdir\");\n    Directory fsDir = null;\n    try {\n      path.mkdirs();\n      new File(path, \"subdir\").mkdirs();\n      fsDir = newFSDirectory(path);\n      assertEquals(0, new RAMDirectory(fsDir, newIOContext(random())).listAll().length);\n    } finally {\n      TestUtil.rm(path);\n      IOUtils.close(fsDir);\n    }\n  }\n\n","bugFix":["c15a75016387504d70a40cba6e9314b8885307f0"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","sourceNew":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    Directory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = newFSDirectory(path);\n      assertEquals(0, new RAMDirectory(fsDir, newIOContext(random())).listAll().length);\n    } finally {\n      IOUtils.close(fsDir);\n      IOUtils.rm(path);\n    }\n  }\n\n","sourceOld":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    File path = createTempDir(\"testsubdir\");\n    Directory fsDir = null;\n    try {\n      path.mkdirs();\n      new File(path, \"subdir\").mkdirs();\n      fsDir = newFSDirectory(path);\n      assertEquals(0, new RAMDirectory(fsDir, newIOContext(random())).listAll().length);\n    } finally {\n      IOUtils.close(fsDir);\n      IOUtils.rm(path);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"302be0cc5e6a28ebcebcac98aa81a92be2e94370","date":1423848654,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","sourceNew":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      assertEquals(0, new RAMDirectory(fsDir, newIOContext(random())).listAll().length);\n    } finally {\n      IOUtils.close(fsDir);\n      IOUtils.rm(path);\n    }\n  }\n\n","sourceOld":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    Directory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = newFSDirectory(path);\n      assertEquals(0, new RAMDirectory(fsDir, newIOContext(random())).listAll().length);\n    } finally {\n      IOUtils.close(fsDir);\n      IOUtils.rm(path);\n    }\n  }\n\n","bugFix":["c15a75016387504d70a40cba6e9314b8885307f0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22989c36ff05c657df26dd3377b37c9ad35859bc","date":1424477375,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","sourceNew":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      RAMDirectory ramDir = new RAMDirectory(fsDir, newIOContext(random()));\n      List<String> files = Arrays.asList(ramDir.listAll());\n      assertFalse(files.contains(\"subdir\"));\n    } finally {\n      IOUtils.close(fsDir);\n      IOUtils.rm(path);\n    }\n  }\n\n","sourceOld":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      assertEquals(0, new RAMDirectory(fsDir, newIOContext(random())).listAll().length);\n    } finally {\n      IOUtils.close(fsDir);\n      IOUtils.rm(path);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","sourceNew":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      RAMDirectory ramDir = new RAMDirectory(fsDir, newIOContext(random()));\n      List<String> files = Arrays.asList(ramDir.listAll());\n      assertFalse(files.contains(\"subdir\"));\n    } finally {\n      IOUtils.close(fsDir);\n    }\n  }\n\n","sourceOld":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      RAMDirectory ramDir = new RAMDirectory(fsDir, newIOContext(random()));\n      List<String> files = Arrays.asList(ramDir.listAll());\n      assertFalse(files.contains(\"subdir\"));\n    } finally {\n      IOUtils.close(fsDir);\n      IOUtils.rm(path);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","sourceNew":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      RAMDirectory ramDir = new RAMDirectory(fsDir, newIOContext(random()));\n      List<String> files = Arrays.asList(ramDir.listAll());\n      assertFalse(files.contains(\"subdir\"));\n    } finally {\n      IOUtils.close(fsDir);\n    }\n  }\n\n","sourceOld":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      RAMDirectory ramDir = new RAMDirectory(fsDir, newIOContext(random()));\n      List<String> files = Arrays.asList(ramDir.listAll());\n      assertFalse(files.contains(\"subdir\"));\n    } finally {\n      IOUtils.close(fsDir);\n      IOUtils.rm(path);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","sourceNew":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      RAMDirectory ramDir = new RAMDirectory(fsDir, newIOContext(random()));\n      List<String> files = Arrays.asList(ramDir.listAll());\n      assertFalse(files.contains(\"subdir\"));\n    } finally {\n      IOUtils.close(fsDir);\n    }\n  }\n\n","sourceOld":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      RAMDirectory ramDir = new RAMDirectory(fsDir, newIOContext(random()));\n      List<String> files = Arrays.asList(ramDir.listAll());\n      assertFalse(files.contains(\"subdir\"));\n    } finally {\n      IOUtils.close(fsDir);\n      IOUtils.rm(path);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","sourceNew":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      RAMDirectory ramDir = new RAMDirectory(fsDir, newIOContext(random()));\n      List<String> files = Arrays.asList(ramDir.listAll());\n      assertFalse(files.contains(\"subdir\"));\n    } finally {\n      IOUtils.close(fsDir);\n    }\n  }\n\n","sourceOld":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      RAMDirectory ramDir = new RAMDirectory(fsDir, newIOContext(random()));\n      List<String> files = Arrays.asList(ramDir.listAll());\n      assertFalse(files.contains(\"subdir\"));\n    } finally {\n      IOUtils.close(fsDir);\n      IOUtils.rm(path);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409da428f28953cf35fddd5c9ff5c7e4f5439863","date":1547556145,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testCopySubdir().mjava","sourceNew":null,"sourceOld":"  // LUCENE-1468\n  public void testCopySubdir() throws Throwable {\n    Path path = createTempDir(\"testsubdir\");\n    FSDirectory fsDir = null;\n    try {\n      Files.createDirectory(path.resolve(\"subdir\"));\n      fsDir = new SimpleFSDirectory(path);\n      RAMDirectory ramDir = new RAMDirectory(fsDir, newIOContext(random()));\n      List<String> files = Arrays.asList(ramDir.listAll());\n      assertFalse(files.contains(\"subdir\"));\n    } finally {\n      IOUtils.close(fsDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["5a207d19eac354d649c3f0e2cce070017c78125e"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["c15a75016387504d70a40cba6e9314b8885307f0"],"5a207d19eac354d649c3f0e2cce070017c78125e":["22989c36ff05c657df26dd3377b37c9ad35859bc","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["22989c36ff05c657df26dd3377b37c9ad35859bc","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["22989c36ff05c657df26dd3377b37c9ad35859bc","b470f36a9372c97283360b1304eacbde22df6c0d"],"c15a75016387504d70a40cba6e9314b8885307f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["302be0cc5e6a28ebcebcac98aa81a92be2e94370"],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"302be0cc5e6a28ebcebcac98aa81a92be2e94370":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"409da428f28953cf35fddd5c9ff5c7e4f5439863":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"5a207d19eac354d649c3f0e2cce070017c78125e":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c15a75016387504d70a40cba6e9314b8885307f0"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"c15a75016387504d70a40cba6e9314b8885307f0":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"f4abec28b874149a7223e32cc7a01704c27790de":["302be0cc5e6a28ebcebcac98aa81a92be2e94370"],"302be0cc5e6a28ebcebcac98aa81a92be2e94370":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}