{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","commits":[{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean omitNorms, boolean storePayloads,\n                                IndexOptions indexOptions, DocValues.Type docValuesType, DocValues.Type normType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, omitNorms, storePayloads, indexOptions, docValuesType, normType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean omitNorms, boolean storePayloads,\n                                IndexOptions indexOptions, DocValues.Type docValuesType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, omitNorms, storePayloads, indexOptions, docValuesType);\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean omitNorms, boolean storePayloads,\n                                IndexOptions indexOptions, DocValues.Type docValuesType, DocValues.Type normType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, omitNorms, storePayloads, indexOptions, docValuesType, normType);\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean omitNorms, boolean storePayloads,\n                                IndexOptions indexOptions, DocValues.Type docValuesType, DocValues.Type normType) {\n    // don't check modifiable here since we use that to initially build up FIs\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, omitNorms, storePayloads, indexOptions, docValuesType, normType);\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}