{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testEmptyString().mjava","commits":[{"id":"6f39ae26126a88ee050e14ab738bb6c6d0dad877","date":1478516006,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testEmptyString().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyString() throws Exception {\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int initState = q.createState();\n    q.setAccept(initState, true);\n    try {\n      q.finish();\n      fail(\"did not hit exc\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testEmptyString().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyString() throws Exception {\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int initState = q.createState();\n    q.setAccept(initState, true);\n    try {\n      q.finish();\n      fail(\"did not hit exc\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd8a7e622c1138188be79e193b1dc52f3f0889a5","date":1564419078,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testEmptyString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testEmptyString().mjava","sourceNew":"  public void testEmptyString() throws Exception {\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int initState = q.createState();\n    q.setAccept(initState, true);\n    expectThrows(IllegalStateException.class, q::finish);\n  }\n\n","sourceOld":"  public void testEmptyString() throws Exception {\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int initState = q.createState();\n    q.setAccept(initState, true);\n    try {\n      q.finish();\n      fail(\"did not hit exc\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testEmptyString().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testEmptyString().mjava","sourceNew":"  public void testEmptyString() throws Exception {\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int initState = q.createState();\n    q.setAccept(initState, true);\n    expectThrows(IllegalStateException.class, q::finish);\n  }\n\n","sourceOld":"  public void testEmptyString() throws Exception {\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int initState = q.createState();\n    q.setAccept(initState, true);\n    try {\n      q.finish();\n      fail(\"did not hit exc\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6f39ae26126a88ee050e14ab738bb6c6d0dad877":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd8a7e622c1138188be79e193b1dc52f3f0889a5":["6f39ae26126a88ee050e14ab738bb6c6d0dad877"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6f39ae26126a88ee050e14ab738bb6c6d0dad877"],"f8061ddd97f3352007d927dae445884a6f3d857b":["6f39ae26126a88ee050e14ab738bb6c6d0dad877","cd8a7e622c1138188be79e193b1dc52f3f0889a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cd8a7e622c1138188be79e193b1dc52f3f0889a5"]},"commit2Childs":{"6f39ae26126a88ee050e14ab738bb6c6d0dad877":["cd8a7e622c1138188be79e193b1dc52f3f0889a5","199dfa410f1fdbfd3294106b04096cce5ed34b21","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd8a7e622c1138188be79e193b1dc52f3f0889a5":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6f39ae26126a88ee050e14ab738bb6c6d0dad877","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}