{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","sourceNew":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","sourceOld":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","sourceNew":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","sourceOld":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","sourceNew":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","sourceOld":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/QualityQueriesFinder#main(String[]).mjava","sourceNew":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(Paths.get(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","sourceOld":"  /**\n   * @param args {index-dir}\n   * @throws IOException  if cannot access the index.\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length<1) {\n      System.err.println(\"Usage: java QualityQueriesFinder <index-dir>\");\n      System.exit(1);\n    }\n    QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(new File(args[0])));\n    String q[] = qqf.bestQueries(\"body\",20);\n    for (int i=0; i<q.length; i++) {\n      System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f4abec28b874149a7223e32cc7a01704c27790de":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}