{"path":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansUnordered#NearSpansUnordered(int,List[Spans]).mjava","commits":[{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansUnordered#NearSpansUnordered(int,List[Spans]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansUnordered#NearSpansUnordered(SpanWeight,int,List[Spans],Similarity.SimScorer).mjava","sourceNew":"  public NearSpansUnordered(int allowedSlop, List<Spans> subSpans)\n  throws IOException {\n    super(subSpans);\n\n    this.subSpanCells = new ArrayList<>(subSpans.size());\n    for (Spans subSpan : subSpans) { // sub spans in query order\n      this.subSpanCells.add(new SpansCell(subSpan));\n    }\n    spanPositionQueue = new SpanPositionQueue(subSpans.size());\n    singleCellToPositionQueue(); // -1 startPosition/endPosition also at doc -1\n    this.allowedSlop = allowedSlop;\n  }\n\n","sourceOld":"  public NearSpansUnordered(SpanWeight weight, int allowedSlop, List<Spans> subSpans, Similarity.SimScorer simScorer)\n  throws IOException {\n    super(subSpans, weight, simScorer);\n\n    this.subSpanCells = new ArrayList<>(subSpans.size());\n    for (Spans subSpan : subSpans) { // sub spans in query order\n      this.subSpanCells.add(new SpansCell(subSpan));\n    }\n    spanPositionQueue = new SpanPositionQueue(subSpans.size());\n    singleCellToPositionQueue(); // -1 startPosition/endPosition also at doc -1\n    this.allowedSlop = allowedSlop;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c990a47b19c00b21c409e8feb9c273df34d31fc","date":1488461424,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansUnordered#NearSpansUnordered(int,List[Spans]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansUnordered#NearSpansUnordered(int,List[Spans]).mjava","sourceNew":"  public NearSpansUnordered(int allowedSlop, List<Spans> subSpans)\n  throws IOException {\n    super(subSpans);\n\n    this.allowedSlop = allowedSlop;\n    this.spanWindow = new SpanTotalLengthEndPositionWindow();\n  }\n\n","sourceOld":"  public NearSpansUnordered(int allowedSlop, List<Spans> subSpans)\n  throws IOException {\n    super(subSpans);\n\n    this.subSpanCells = new ArrayList<>(subSpans.size());\n    for (Spans subSpan : subSpans) { // sub spans in query order\n      this.subSpanCells.add(new SpansCell(subSpan));\n    }\n    spanPositionQueue = new SpanPositionQueue(subSpans.size());\n    singleCellToPositionQueue(); // -1 startPosition/endPosition also at doc -1\n    this.allowedSlop = allowedSlop;\n  }\n\n","bugFix":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1c990a47b19c00b21c409e8feb9c273df34d31fc":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c990a47b19c00b21c409e8feb9c273df34d31fc"]},"commit2Childs":{"1c990a47b19c00b21c409e8feb9c273df34d31fc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["1c990a47b19c00b21c409e8feb9c273df34d31fc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}