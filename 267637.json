{"path":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec,CodecProvider).mjava","commits":[{"id":"182cfc5b92d5da17fd74fc41c8091ed157d80ff4","date":1290263949,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec,CodecProvider).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec).mjava","sourceNew":"  private static void swapCodec(Codec c, CodecProvider cp) {\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","sourceOld":"  private static void swapCodec(Codec c) {\n    final CodecProvider cp = CodecProvider.getDefault();\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec,CodecProvider).mjava","pathOld":"/dev/null","sourceNew":"  private static void swapCodec(Codec c, CodecProvider cp) {\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec,CodecProvider).mjava","pathOld":"/dev/null","sourceNew":"  private static void swapCodec(Codec c, CodecProvider cp) {\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec,CodecProvider).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec,CodecProvider).mjava","sourceNew":"  private static void swapCodec(Codec c, CodecProvider cp) {\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","sourceOld":"  private static void swapCodec(Codec c, CodecProvider cp) {\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec,CodecProvider).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec,CodecProvider).mjava","sourceNew":"  private static void swapCodec(Codec c, CodecProvider cp) {\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","sourceOld":"  private static void swapCodec(Codec c, CodecProvider cp) {\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec,CodecProvider).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#swapCodec(Codec,CodecProvider).mjava","sourceNew":"  private static void swapCodec(Codec c, CodecProvider cp) {\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","sourceOld":"  private static void swapCodec(Codec c, CodecProvider cp) {\n    Codec prior = null;\n    try {\n      prior = cp.lookup(c.name);\n    } catch (IllegalArgumentException iae) {\n    }\n    if (prior != null) {\n      cp.unregister(prior);\n    }\n    cp.register(c);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182cfc5b92d5da17fd74fc41c8091ed157d80ff4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","182cfc5b92d5da17fd74fc41c8091ed157d80ff4"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"3bb13258feba31ab676502787ab2e1779f129b7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","182cfc5b92d5da17fd74fc41c8091ed157d80ff4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["182cfc5b92d5da17fd74fc41c8091ed157d80ff4"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["182cfc5b92d5da17fd74fc41c8091ed157d80ff4","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"182cfc5b92d5da17fd74fc41c8091ed157d80ff4":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}