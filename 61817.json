{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","commits":[{"id":"9df4073b2d570d1060d0619e51430efbb26db976","date":1392581114,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","pathOld":"/dev/null","sourceNew":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( _TestUtil.alwaysDocValuesFormat(new Lucene45DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","sourceNew":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.alwaysDocValuesFormat(new Lucene45DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","sourceOld":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( _TestUtil.alwaysDocValuesFormat(new Lucene45DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","bugFix":null,"bugIntro":["f0106fc8bd579fa78caf3372887b2d50907b5635"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f0106fc8bd579fa78caf3372887b2d50907b5635","date":1402916839,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","sourceNew":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.alwaysDocValuesFormat(new Lucene49DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","sourceOld":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.alwaysDocValuesFormat(new Lucene45DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","bugFix":["6613659748fe4411a7dcf85266e55db1f95f7315"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","sourceNew":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.alwaysDocValuesFormat(new Lucene49DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","sourceOld":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.alwaysDocValuesFormat(new Lucene45DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","sourceNew":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.alwaysDocValuesFormat(new Lucene49DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","sourceOld":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, LuceneTestCase.TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.alwaysDocValuesFormat(new Lucene49DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793","date":1408030244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","sourceNew":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.alwaysDocValuesFormat(new Lucene410DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","sourceOld":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.alwaysDocValuesFormat(new Lucene49DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"941b7027a51547b0a38d711bc08ec354f9e2e4a7","date":1411394279,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","sourceNew":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.getDefaultCodec());\n    return indexWriterConfig;\n  }\n\n","sourceOld":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.alwaysDocValuesFormat(new Lucene410DocValuesFormat()));;\n    return indexWriterConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIWConfig(Random,Analyzer).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","sourceNew":"  protected IndexWriterConfig newIWConfig(Random random, Analyzer analyzer) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, analyzer);\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.getDefaultCodec());\n    return indexWriterConfig;\n  }\n\n","sourceOld":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.getDefaultCodec());\n    return indexWriterConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/SpatialTestCase#newIndexWriterConfig(Random).mjava","sourceNew":null,"sourceOld":"  protected IndexWriterConfig newIndexWriterConfig(Random random) {\n    final IndexWriterConfig indexWriterConfig = LuceneTestCase.newIndexWriterConfig(random, new MockAnalyzer(random));\n    //TODO can we randomly choose a doc-values supported format?\n    if (needsDocValues())\n      indexWriterConfig.setCodec( TestUtil.getDefaultCodec());\n    return indexWriterConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["941b7027a51547b0a38d711bc08ec354f9e2e4a7","a56958d7f71a28824f20031ffbb2e13502a0274e"],"6613659748fe4411a7dcf85266e55db1f95f7315":["9df4073b2d570d1060d0619e51430efbb26db976"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f0106fc8bd579fa78caf3372887b2d50907b5635"],"f0106fc8bd579fa78caf3372887b2d50907b5635":["6613659748fe4411a7dcf85266e55db1f95f7315"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["941b7027a51547b0a38d711bc08ec354f9e2e4a7"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["6613659748fe4411a7dcf85266e55db1f95f7315","f0106fc8bd579fa78caf3372887b2d50907b5635"],"9df4073b2d570d1060d0619e51430efbb26db976":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"941b7027a51547b0a38d711bc08ec354f9e2e4a7":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"6613659748fe4411a7dcf85266e55db1f95f7315":["f0106fc8bd579fa78caf3372887b2d50907b5635","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9df4073b2d570d1060d0619e51430efbb26db976"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"],"f0106fc8bd579fa78caf3372887b2d50907b5635":["d0ef034a4f10871667ae75181537775ddcf8ade4","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["941b7027a51547b0a38d711bc08ec354f9e2e4a7"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"9df4073b2d570d1060d0619e51430efbb26db976":["6613659748fe4411a7dcf85266e55db1f95f7315"],"941b7027a51547b0a38d711bc08ec354f9e2e4a7":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}