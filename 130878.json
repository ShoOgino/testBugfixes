{"path":"lucene/backwards/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","pathOld":"backwards/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      assert docStoreSegment != null;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      tvx = docWriter.directory.createOutput(docStoreSegment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      tvd = docWriter.directory.createOutput(docStoreSegment +  \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      tvf = docWriter.directory.createOutput(docStoreSegment +  \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(docStoreSegment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      docWriter.addOpenFile(docStoreSegment + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      docWriter.addOpenFile(docStoreSegment + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n\n      lastDocID = 0;\n    }\n  }\n\n","sourceOld":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      assert docStoreSegment != null;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      tvx = docWriter.directory.createOutput(docStoreSegment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      tvd = docWriter.directory.createOutput(docStoreSegment +  \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      tvf = docWriter.directory.createOutput(docStoreSegment +  \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(docStoreSegment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      docWriter.addOpenFile(docStoreSegment + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      docWriter.addOpenFile(docStoreSegment + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/TermVectorsTermsWriter#initTermVectorsWriter().mjava","sourceNew":null,"sourceOld":"  synchronized void initTermVectorsWriter() throws IOException {        \n    if (tvx == null) {\n      \n      final String docStoreSegment = docWriter.getDocStoreSegment();\n\n      if (docStoreSegment == null)\n        return;\n\n      assert docStoreSegment != null;\n\n      // If we hit an exception while init'ing the term\n      // vector output files, we must abort this segment\n      // because those files will be in an unknown\n      // state:\n      tvx = docWriter.directory.createOutput(docStoreSegment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      tvd = docWriter.directory.createOutput(docStoreSegment +  \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n      tvf = docWriter.directory.createOutput(docStoreSegment +  \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      \n      tvx.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvd.writeInt(TermVectorsReader.FORMAT_CURRENT);\n      tvf.writeInt(TermVectorsReader.FORMAT_CURRENT);\n\n      docWriter.addOpenFile(docStoreSegment + \".\" + IndexFileNames.VECTORS_INDEX_EXTENSION);\n      docWriter.addOpenFile(docStoreSegment + \".\" + IndexFileNames.VECTORS_FIELDS_EXTENSION);\n      docWriter.addOpenFile(docStoreSegment + \".\" + IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);\n\n      lastDocID = 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}