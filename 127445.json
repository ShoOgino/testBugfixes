{"path":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testSimpleCase().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testSimpleCase().mjava","pathOld":"src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new WhitespaceAnalyzer(TEST_VERSION_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testSimpleCase().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexesNoOptimize#testSimpleCase().mjava","sourceNew":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexes(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","sourceOld":"  public void testSimpleCase() throws IOException {\n    // main directory\n    Directory dir = new RAMDirectory();\n    // two auxiliary directories\n    Directory aux = new RAMDirectory();\n    Directory aux2 = new RAMDirectory();\n\n    IndexWriter writer = null;\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer())\n        .setOpenMode(OpenMode.CREATE));\n    // add 100 documents\n    addDocs(writer, 100);\n    assertEquals(100, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    writer = newWriter(aux, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundFile(false); // use one without a compound file\n    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setUseCompoundDocStore(false); // use one without a compound file\n    // add 40 documents in separate files\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    writer = newWriter(aux2, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE));\n    // add 40 documents in compound files\n    addDocs2(writer, 50);\n    assertEquals(50, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(100, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux, aux2 });\n    assertEquals(190, writer.maxDoc());\n    writer.close();\n    _TestUtil.checkIndex(dir);\n\n    // make sure the old index is correct\n    verifyNumDocs(aux, 40);\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 190);\n\n    // now add another set in.\n    Directory aux3 = new RAMDirectory();\n    writer = newWriter(aux3, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    // add 40 documents\n    addDocs(writer, 40);\n    assertEquals(40, writer.maxDoc());\n    writer.close();\n\n    // test doc count before segments are merged/index is optimized\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(190, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux3 });\n    assertEquals(230, writer.maxDoc());\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now optimize it.\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    writer.optimize();\n    writer.close();\n\n    // make sure the new index is correct\n    verifyNumDocs(dir, 230);\n\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 180);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 50);\n\n    // now add a single document\n    Directory aux4 = new RAMDirectory();\n    writer = newWriter(aux4, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    addDocs2(writer, 1);\n    writer.close();\n\n    writer = newWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n    assertEquals(230, writer.maxDoc());\n    writer.addIndexesNoOptimize(new Directory[] { aux4 });\n    assertEquals(231, writer.maxDoc());\n    writer.close();\n\n    verifyNumDocs(dir, 231);\n\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 51);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["d572389229127c297dd1fa5ce4758e1cec41e799"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7ab99e8c71442b92c320e218141dee04a9b91ce8":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d572389229127c297dd1fa5ce4758e1cec41e799":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["d572389229127c297dd1fa5ce4758e1cec41e799"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}