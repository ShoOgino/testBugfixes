{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","commits":[{"id":"cb53c8e9da2afe33252ee698dda412264252cfa7","date":1418531581,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(LevelledValue).mjava","sourceNew":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected int getNumSubCells(LevelledValue lv) {\n    int cmp = comparePrefixLV(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefixLV(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","sourceNew":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","sourceOld":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/DateRangePrefixTree#getNumSubCells(UnitNRShape).mjava","sourceNew":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","sourceOld":"  @Override\n  public int getNumSubCells(UnitNRShape lv) {\n    int cmp = comparePrefix(lv, maxLV);\n    assert cmp <= 0;\n    if (cmp == 0)//edge case (literally!)\n      return maxLV.getValAtLevel(lv.getLevel()+1);\n\n    // if using GregorianCalendar and we're after the \"Gregorian change date\" then we'll compute\n    //  the sub-cells ourselves more efficiently without the need to construct a Calendar.\n    cmp = gregorianChangeDateLV != null ? comparePrefix(lv, gregorianChangeDateLV) : -1;\n    //TODO consider also doing fast-path if field is <= hours even if before greg change date\n    if (cmp >= 0) {\n      int result = fastSubCells(lv);\n      assert result == slowSubCells(lv) : \"fast/slow numSubCells inconsistency\";\n      return result;\n    } else {\n      return slowSubCells(lv);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["cb53c8e9da2afe33252ee698dda412264252cfa7","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["cb53c8e9da2afe33252ee698dda412264252cfa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"],"cb53c8e9da2afe33252ee698dda412264252cfa7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb53c8e9da2afe33252ee698dda412264252cfa7"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cb53c8e9da2afe33252ee698dda412264252cfa7":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}