{"path":"lucene/core/src/java/org/apache/lucene/document/XYShapeQuery#queryWithin(byte[],ShapeField.DecodedTriangle).mjava","commits":[{"id":"a923e28c9d079048c6993884ec89c44f0380b923","date":1581100153,"type":1,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/XYShapeQuery#queryWithin(byte[],ShapeField.DecodedTriangle).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/XYShapePolygonQuery#queryWithin(byte[],ShapeField.DecodedTriangle).mjava","sourceNew":"  @Override\n  protected Component2D.WithinRelation queryWithin(byte[] t, ShapeField.DecodedTriangle scratchTriangle) {\n    ShapeField.decodeTriangle(t, scratchTriangle);\n\n    double alat = decode(scratchTriangle.aY);\n    double alon = decode(scratchTriangle.aX);\n    double blat = decode(scratchTriangle.bY);\n    double blon = decode(scratchTriangle.bX);\n    double clat = decode(scratchTriangle.cY);\n    double clon = decode(scratchTriangle.cX);\n\n    return component2D.withinTriangle(alon, alat, scratchTriangle.ab, blon, blat, scratchTriangle.bc, clon, clat, scratchTriangle.ca);\n  }\n\n","sourceOld":"  @Override\n  protected Component2D.WithinRelation queryWithin(byte[] t, ShapeField.DecodedTriangle scratchTriangle) {\n    ShapeField.decodeTriangle(t, scratchTriangle);\n\n    double alat = decode(scratchTriangle.aY);\n    double alon = decode(scratchTriangle.aX);\n    double blat = decode(scratchTriangle.bY);\n    double blon = decode(scratchTriangle.bX);\n    double clat = decode(scratchTriangle.cY);\n    double clon = decode(scratchTriangle.cX);\n\n    return poly2D.withinTriangle(alon, alat, scratchTriangle.ab, blon, blat, scratchTriangle.bc, clon, clat, scratchTriangle.ca);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c568a1e2a5125c2245150eebb030a81baa158b31","date":1587403489,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/XYShapeQuery#queryWithin(byte[],ShapeField.DecodedTriangle).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/XYShapeQuery#queryWithin(byte[],ShapeField.DecodedTriangle).mjava","sourceNew":"  @Override\n  protected Component2D.WithinRelation queryWithin(byte[] t, ShapeField.DecodedTriangle scratchTriangle) {\n    ShapeField.decodeTriangle(t, scratchTriangle);\n\n    switch (scratchTriangle.type) {\n      case POINT: {\n        double y = decode(scratchTriangle.aY);\n        double x = decode(scratchTriangle.aX);\n        return component2D.withinPoint(x, y);\n      }\n      case LINE: {\n        double aY = decode(scratchTriangle.aY);\n        double aX = decode(scratchTriangle.aX);\n        double bY = decode(scratchTriangle.bY);\n        double bX = decode(scratchTriangle.bX);\n        return component2D.withinLine(aX, aY, scratchTriangle.ab, bX, bY);\n      }\n      case TRIANGLE: {\n        double aY = decode(scratchTriangle.aY);\n        double aX = decode(scratchTriangle.aX);\n        double bY = decode(scratchTriangle.bY);\n        double bX = decode(scratchTriangle.bX);\n        double cY = decode(scratchTriangle.cY);\n        double cX = decode(scratchTriangle.cX);\n        return component2D.withinTriangle(aX, aY, scratchTriangle.ab, bX, bY, scratchTriangle.bc, cX, cY, scratchTriangle.ca);\n      }\n      default: throw new IllegalArgumentException(\"Unsupported triangle type :[\" + scratchTriangle.type + \"]\");\n    }\n  }\n\n","sourceOld":"  @Override\n  protected Component2D.WithinRelation queryWithin(byte[] t, ShapeField.DecodedTriangle scratchTriangle) {\n    ShapeField.decodeTriangle(t, scratchTriangle);\n\n    double alat = decode(scratchTriangle.aY);\n    double alon = decode(scratchTriangle.aX);\n    double blat = decode(scratchTriangle.bY);\n    double blon = decode(scratchTriangle.bX);\n    double clat = decode(scratchTriangle.cY);\n    double clon = decode(scratchTriangle.cX);\n\n    return component2D.withinTriangle(alon, alat, scratchTriangle.ab, blon, blat, scratchTriangle.bc, clon, clat, scratchTriangle.ca);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c568a1e2a5125c2245150eebb030a81baa158b31":["a923e28c9d079048c6993884ec89c44f0380b923"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a923e28c9d079048c6993884ec89c44f0380b923":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c568a1e2a5125c2245150eebb030a81baa158b31"]},"commit2Childs":{"c568a1e2a5125c2245150eebb030a81baa158b31":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a923e28c9d079048c6993884ec89c44f0380b923"],"a923e28c9d079048c6993884ec89c44f0380b923":["c568a1e2a5125c2245150eebb030a81baa158b31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}