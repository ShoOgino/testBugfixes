{"path":"solr/test-framework/src/java/org/apache/solr/cloud/MultiSolrCloudTestCase.DefaultClusterInitFunction#doAccept(String,MiniSolrCloudCluster).mjava","commits":[{"id":"4086d3fe3881c89311c4b4ef8dc0aaa29ea4b53c","date":1523390946,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MultiSolrCloudTestCase.DefaultClusterInitFunction#doAccept(String,MiniSolrCloudCluster).mjava","pathOld":"/dev/null","sourceNew":"    protected void doAccept(String collection, MiniSolrCloudCluster cluster) {\n      try {\n        CollectionAdminRequest\n        .createCollection(collection, \"conf\", numShards, numReplicas)\n        .setMaxShardsPerNode(maxShardsPerNode)\n        .processAndWait(cluster.getSolrClient(), SolrCloudTestCase.DEFAULT_TIMEOUT);\n\n        AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, cluster.getSolrClient().getZkStateReader(), false, true, SolrCloudTestCase.DEFAULT_TIMEOUT);\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e82a6d970d2393ba4fa3666034b2ec311b774554","date":1523429643,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MultiSolrCloudTestCase.DefaultClusterInitFunction#doAccept(String,MiniSolrCloudCluster).mjava","pathOld":"/dev/null","sourceNew":"    protected void doAccept(String collection, MiniSolrCloudCluster cluster) {\n      try {\n        CollectionAdminRequest\n        .createCollection(collection, \"conf\", numShards, numReplicas)\n        .setMaxShardsPerNode(maxShardsPerNode)\n        .processAndWait(cluster.getSolrClient(), SolrCloudTestCase.DEFAULT_TIMEOUT);\n\n        AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, cluster.getSolrClient().getZkStateReader(), false, true, SolrCloudTestCase.DEFAULT_TIMEOUT);\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MultiSolrCloudTestCase.DefaultClusterInitFunction#doAccept(String,MiniSolrCloudCluster).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MultiSolrCloudTestCase.DefaultClusterInitFunction#doAccept(String,MiniSolrCloudCluster).mjava","sourceNew":"    protected void doAccept(String collection, MiniSolrCloudCluster cluster) {\n      try {\n        CollectionAdminRequest\n        .createCollection(collection, \"conf\", numShards, numReplicas)\n        .processAndWait(cluster.getSolrClient(), SolrCloudTestCase.DEFAULT_TIMEOUT);\n\n        AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, cluster.getSolrClient().getZkStateReader(), false, true, SolrCloudTestCase.DEFAULT_TIMEOUT);\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    protected void doAccept(String collection, MiniSolrCloudCluster cluster) {\n      try {\n        CollectionAdminRequest\n        .createCollection(collection, \"conf\", numShards, numReplicas)\n        .setMaxShardsPerNode(maxShardsPerNode)\n        .processAndWait(cluster.getSolrClient(), SolrCloudTestCase.DEFAULT_TIMEOUT);\n\n        AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, cluster.getSolrClient().getZkStateReader(), false, true, SolrCloudTestCase.DEFAULT_TIMEOUT);\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4086d3fe3881c89311c4b4ef8dc0aaa29ea4b53c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e82a6d970d2393ba4fa3666034b2ec311b774554":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4086d3fe3881c89311c4b4ef8dc0aaa29ea4b53c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["e82a6d970d2393ba4fa3666034b2ec311b774554"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"]},"commit2Childs":{"4086d3fe3881c89311c4b4ef8dc0aaa29ea4b53c":["e82a6d970d2393ba4fa3666034b2ec311b774554"],"e82a6d970d2393ba4fa3666034b2ec311b774554":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4086d3fe3881c89311c4b4ef8dc0aaa29ea4b53c","e82a6d970d2393ba4fa3666034b2ec311b774554"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}