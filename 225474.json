{"path":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","commits":[{"id":"b6493bfa10477745a1307895992b7323b6e19ec6","date":1343781089,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    Assert.assertEquals(1, r.getFailureCount());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    Assert.assertEquals(1, r.getFailureCount());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    Assert.assertEquals(1, r.getFailureCount());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d87b5d925d27e4ee59a151dcf792b930432c356","date":1359622928,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","sourceNew":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    for (Failure f : r.getFailures()) {\n      System.out.println(\"Failure: \" + f);\n    }\n    Assert.assertEquals(1, r.getFailureCount());\n    Assert.assertTrue(r.getFailures().get(0).toString().contains(\"Resource in scope SUITE failed to close\"));\n  }\n\n","sourceOld":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    Assert.assertEquals(1, r.getFailureCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86","date":1359670147,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","sourceNew":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    for (Failure f : r.getFailures()) {\n      System.out.println(\"Failure: \" + f);\n    }\n    Assert.assertEquals(1, r.getFailureCount());\n    Assert.assertTrue(r.getFailures().get(0).toString().contains(\"Resource in scope SUITE failed to close\"));\n  }\n\n","sourceOld":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    Assert.assertEquals(1, r.getFailureCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3055db7728116e545cc3701344654fcb32ba7ca1","date":1380011280,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","sourceNew":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    RandomizedTest.assumeTrue(\"Ignoring nested test, very likely zombie threads present.\", \n        r.getIgnoreCount() == 0);\n\n    for (Failure f : r.getFailures()) {\n      System.out.println(\"Failure: \" + f);\n    }\n    Assert.assertEquals(1, r.getFailureCount());\n    Assert.assertTrue(r.getFailures().get(0).toString().contains(\"Resource in scope SUITE failed to close\"));\n  }\n\n","sourceOld":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    for (Failure f : r.getFailures()) {\n      System.out.println(\"Failure: \" + f);\n    }\n    Assert.assertEquals(1, r.getFailureCount());\n    Assert.assertTrue(r.getFailures().get(0).toString().contains(\"Resource in scope SUITE failed to close\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518","date":1398331323,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","sourceNew":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    RandomizedTest.assumeTrue(\"Ignoring nested test, very likely zombie threads present.\", \n        r.getIgnoreCount() == 0);\n    assertFailureCount(1, r);\n    Assert.assertTrue(r.getFailures().get(0).toString().contains(\"Resource in scope SUITE failed to close\"));\n  }\n\n","sourceOld":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    RandomizedTest.assumeTrue(\"Ignoring nested test, very likely zombie threads present.\", \n        r.getIgnoreCount() == 0);\n\n    for (Failure f : r.getFailures()) {\n      System.out.println(\"Failure: \" + f);\n    }\n    Assert.assertEquals(1, r.getFailureCount());\n    Assert.assertTrue(r.getFailures().get(0).toString().contains(\"Resource in scope SUITE failed to close\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d524d41bd211f811312cf6639e3792dae4df6cbb","date":1398850727,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","sourceNew":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    RandomizedTest.assumeTrue(\"Ignoring nested test, very likely zombie threads present.\", \n        r.getIgnoreCount() == 0);\n    assertFailureCount(1, r);\n    Assert.assertTrue(r.getFailures().get(0).toString().contains(\"Resource in scope SUITE failed to close\"));\n  }\n\n","sourceOld":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    RandomizedTest.assumeTrue(\"Ignoring nested test, very likely zombie threads present.\", \n        r.getIgnoreCount() == 0);\n\n    for (Failure f : r.getFailures()) {\n      System.out.println(\"Failure: \" + f);\n    }\n    Assert.assertEquals(1, r.getFailureCount());\n    Assert.assertTrue(r.getFailures().get(0).toString().contains(\"Resource in scope SUITE failed to close\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/util/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/junitcompat/TestFailIfDirectoryNotClosed#testFailIfDirectoryNotClosed().mjava","sourceNew":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    RandomizedTest.assumeTrue(\"Ignoring nested test, very likely zombie threads present.\", \n        r.getIgnoreCount() == 0);\n    assertFailureCount(1, r);\n    Assert.assertTrue(r.getFailures().get(0).toString().contains(\"Resource in scope SUITE failed to close\"));\n  }\n\n","sourceOld":"  @Test\n  public void testFailIfDirectoryNotClosed() {\n    Result r = JUnitCore.runClasses(Nested1.class);\n    RandomizedTest.assumeTrue(\"Ignoring nested test, very likely zombie threads present.\", \n        r.getIgnoreCount() == 0);\n    assertFailureCount(1, r);\n    Assert.assertTrue(r.getFailures().get(0).toString().contains(\"Resource in scope SUITE failed to close\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2d87b5d925d27e4ee59a151dcf792b930432c356":["b6493bfa10477745a1307895992b7323b6e19ec6"],"b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86":["b6493bfa10477745a1307895992b7323b6e19ec6","2d87b5d925d27e4ee59a151dcf792b930432c356"],"d524d41bd211f811312cf6639e3792dae4df6cbb":["3055db7728116e545cc3701344654fcb32ba7ca1","e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b6493bfa10477745a1307895992b7323b6e19ec6"],"b6493bfa10477745a1307895992b7323b6e19ec6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518":["3055db7728116e545cc3701344654fcb32ba7ca1"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["d524d41bd211f811312cf6639e3792dae4df6cbb"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b6493bfa10477745a1307895992b7323b6e19ec6"],"3055db7728116e545cc3701344654fcb32ba7ca1":["2d87b5d925d27e4ee59a151dcf792b930432c356"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"2d87b5d925d27e4ee59a151dcf792b930432c356":["b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86","3055db7728116e545cc3701344654fcb32ba7ca1"],"b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86":[],"d524d41bd211f811312cf6639e3792dae4df6cbb":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6493bfa10477745a1307895992b7323b6e19ec6","8fd5be977c105554c6a7b68afcdbc511439723ab"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6493bfa10477745a1307895992b7323b6e19ec6":["2d87b5d925d27e4ee59a151dcf792b930432c356","b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518":["d524d41bd211f811312cf6639e3792dae4df6cbb"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"3055db7728116e545cc3701344654fcb32ba7ca1":["d524d41bd211f811312cf6639e3792dae4df6cbb","e0d0750f8e3774f13e9bd9f7f9fcb51f7114d518"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b0bf1d4eb51af6e03fffcbf80f0b5d69923c9f86","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}