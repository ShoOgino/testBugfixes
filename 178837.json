{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/WithCollectionVariable#match(Object,Operand,Object,String,Row).mjava","commits":[{"id":"427edb17549d4bb82462a16eec4ee0533d12d5b7","date":1533006754,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/WithCollectionVariable#match(Object,Operand,Object,String,Row).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/WithCollectionVarType#match(Object,Operand,Object,String,Row).mjava","sourceNew":"  @Override\n  public boolean match(Object inputVal, Operand op, Object val, String name, Row row) {\n    Map<String, String> withCollectionMap = (Map<String, String>) inputVal;\n    if (withCollectionMap == null || withCollectionMap.isEmpty()) return true;\n\n    Set<String> uniqueColls = new HashSet<>();\n    row.forEachReplica(replicaInfo -> uniqueColls.add(replicaInfo.getCollection()));\n\n    for (Map.Entry<String, String> e : withCollectionMap.entrySet()) {\n      if (uniqueColls.contains(e.getKey()) && !uniqueColls.contains(e.getValue())) return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean match(Object inputVal, Operand op, Object val, String name, Row row) {\n    Map<String, String> withCollectionMap = (Map<String, String>) inputVal;\n    if (withCollectionMap == null || withCollectionMap.isEmpty()) return true;\n\n    Set<String> uniqueColls = new HashSet<>();\n    row.forEachReplica(replicaInfo -> uniqueColls.add(replicaInfo.getCollection()));\n\n    for (Map.Entry<String, String> e : withCollectionMap.entrySet()) {\n      if (uniqueColls.contains(e.getKey()) && !uniqueColls.contains(e.getValue())) return false;\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"527adea7ce767368d7317339023e18e39702132e","date":1592163810,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/WithCollectionVariable#match(Object,Operand,Object,String,Row).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/WithCollectionVariable#match(Object,Operand,Object,String,Row).mjava","sourceNew":"  @Override\n  public boolean match(Object inputVal, Operand op, Object val, String name, Row row) {\n    @SuppressWarnings({\"unchecked\"})\n    Map<String, String> withCollectionMap = (Map<String, String>) inputVal;\n    if (withCollectionMap == null || withCollectionMap.isEmpty()) return true;\n\n    Set<String> uniqueColls = new HashSet<>();\n    row.forEachReplica(replicaInfo -> uniqueColls.add(replicaInfo.getCollection()));\n\n    for (Map.Entry<String, String> e : withCollectionMap.entrySet()) {\n      if (uniqueColls.contains(e.getKey()) && !uniqueColls.contains(e.getValue())) return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean match(Object inputVal, Operand op, Object val, String name, Row row) {\n    Map<String, String> withCollectionMap = (Map<String, String>) inputVal;\n    if (withCollectionMap == null || withCollectionMap.isEmpty()) return true;\n\n    Set<String> uniqueColls = new HashSet<>();\n    row.forEachReplica(replicaInfo -> uniqueColls.add(replicaInfo.getCollection()));\n\n    for (Map.Entry<String, String> e : withCollectionMap.entrySet()) {\n      if (uniqueColls.contains(e.getKey()) && !uniqueColls.contains(e.getValue())) return false;\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/WithCollectionVariable#match(Object,Operand,Object,String,Row).mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean match(Object inputVal, Operand op, Object val, String name, Row row) {\n    @SuppressWarnings({\"unchecked\"})\n    Map<String, String> withCollectionMap = (Map<String, String>) inputVal;\n    if (withCollectionMap == null || withCollectionMap.isEmpty()) return true;\n\n    Set<String> uniqueColls = new HashSet<>();\n    row.forEachReplica(replicaInfo -> uniqueColls.add(replicaInfo.getCollection()));\n\n    for (Map.Entry<String, String> e : withCollectionMap.entrySet()) {\n      if (uniqueColls.contains(e.getKey()) && !uniqueColls.contains(e.getValue())) return false;\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["527adea7ce767368d7317339023e18e39702132e"],"427edb17549d4bb82462a16eec4ee0533d12d5b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"527adea7ce767368d7317339023e18e39702132e":["427edb17549d4bb82462a16eec4ee0533d12d5b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"427edb17549d4bb82462a16eec4ee0533d12d5b7":["527adea7ce767368d7317339023e18e39702132e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["427edb17549d4bb82462a16eec4ee0533d12d5b7"],"527adea7ce767368d7317339023e18e39702132e":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}