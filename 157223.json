{"path":"solr/core/src/java/org/apache/solr/packagemanager/RepositoryManager#addKey(byte[],String).mjava","commits":[{"id":"d218decf811b7a0a4d86218c54c79c74a962374b","date":1578632144,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/packagemanager/RepositoryManager#addKey(byte[],String).mjava","pathOld":"/dev/null","sourceNew":"  public void addKey(byte[] key, String destinationKeyFilename) throws Exception {\n    // get solr_home directory from info servlet\n    String systemInfoUrl = solrClient.getBaseURL() + \"/solr/admin/info/system\";\n    Map<String,Object> systemInfo = SolrCLI.getJson(solrClient.getHttpClient(), systemInfoUrl, 2, true);\n    String solrHome = (String) systemInfo.get(\"solr_home\");\n    \n    // put the public key into package store's trusted key store and request a sync.\n    String path = PackageStoreAPI.KEYS_DIR + \"/\" + destinationKeyFilename;\n    PackageUtils.uploadKey(key, path, Paths.get(solrHome), solrClient);\n    PackageUtils.getJsonStringFromUrl(solrClient.getHttpClient(), solrClient.getBaseURL() + \"/api/node/files\" + path + \"?sync=true\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8f0a7504661c8e51be5c63e87f9d79a36d9116c","date":1578657638,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/packagemanager/RepositoryManager#addKey(byte[],String).mjava","pathOld":"/dev/null","sourceNew":"  public void addKey(byte[] key, String destinationKeyFilename) throws Exception {\n    // get solr_home directory from info servlet\n    String systemInfoUrl = solrClient.getBaseURL() + \"/solr/admin/info/system\";\n    Map<String,Object> systemInfo = SolrCLI.getJson(solrClient.getHttpClient(), systemInfoUrl, 2, true);\n    String solrHome = (String) systemInfo.get(\"solr_home\");\n    \n    // put the public key into package store's trusted key store and request a sync.\n    String path = PackageStoreAPI.KEYS_DIR + \"/\" + destinationKeyFilename;\n    PackageUtils.uploadKey(key, path, Paths.get(solrHome), solrClient);\n    PackageUtils.getJsonStringFromUrl(solrClient.getHttpClient(), solrClient.getBaseURL() + \"/api/node/files\" + path + \"?sync=true\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8f0a7504661c8e51be5c63e87f9d79a36d9116c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d218decf811b7a0a4d86218c54c79c74a962374b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d218decf811b7a0a4d86218c54c79c74a962374b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d218decf811b7a0a4d86218c54c79c74a962374b"]},"commit2Childs":{"b8f0a7504661c8e51be5c63e87f9d79a36d9116c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","d218decf811b7a0a4d86218c54c79c74a962374b"],"d218decf811b7a0a4d86218c54c79c74a962374b":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}