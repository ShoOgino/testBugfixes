{"path":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testEmptyStringVsNullStringSort().mjava","commits":[{"id":"e4d968497a1e5d9b3a36621b61b75486ec05ae49","date":1360852942,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f183729ece15402db94402d482f29ebac4f7f54","date":1360963151,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5f183729ece15402db94402d482f29ebac4f7f54":["e4d968497a1e5d9b3a36621b61b75486ec05ae49"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["3b41f996b22bd5518650f897d050088ff808ec03","5f183729ece15402db94402d482f29ebac4f7f54"],"3b41f996b22bd5518650f897d050088ff808ec03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e4d968497a1e5d9b3a36621b61b75486ec05ae49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e4d968497a1e5d9b3a36621b61b75486ec05ae49":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f183729ece15402db94402d482f29ebac4f7f54"]},"commit2Childs":{"5f183729ece15402db94402d482f29ebac4f7f54":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"3b41f996b22bd5518650f897d050088ff808ec03":["95303ff3749680c743b9425f9cf99e6e4065e8a8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b41f996b22bd5518650f897d050088ff808ec03","e4d968497a1e5d9b3a36621b61b75486ec05ae49"],"e4d968497a1e5d9b3a36621b61b75486ec05ae49":["5f183729ece15402db94402d482f29ebac4f7f54","3b41f996b22bd5518650f897d050088ff808ec03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}