{"path":"solr/src/test/org/apache/solr/core/PluginInfoTest#testChild().mjava","commits":[{"id":"c1a41b196e39f98fb4a810f8e957c11203056845","date":1310149257,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/PluginInfoTest#testChild().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testChild() throws Exception {\n    Node node = getNode(configWith2Children, \"plugin\");\n    PluginInfo pi = new PluginInfo(node, \"with children\", false, false);\n    PluginInfo childInfo = pi.getChild(\"child\");\n    assertNotNull(childInfo);\n    PluginInfo notExistent = pi.getChild(\"doesnotExist\");\n    assertNull(notExistent);\n    assertTrue( childInfo instanceof PluginInfo );\n    assertTrue((Integer) childInfo.initArgs.get(\"index\") == 0);\n    Node node2 = getNode(configWithNoChildren, \"plugin\");\n    PluginInfo pi2 = new PluginInfo(node2, \"with No Children\", false, false);\n    PluginInfo noChild = pi2.getChild(\"long\");\n    assertNull(noChild);\n    \n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/PluginInfoTest#testChild().mjava","pathOld":"solr/src/test/org/apache/solr/core/PluginInfoTest#testChild().mjava","sourceNew":"  @Test\n  public void testChild() throws Exception {\n    Node node = getNode(configWith2Children, \"plugin\");\n    PluginInfo pi = new PluginInfo(node, \"with children\", false, false);\n    PluginInfo childInfo = pi.getChild(\"child\");\n    assertNotNull(childInfo);\n    PluginInfo notExistent = pi.getChild(\"doesnotExist\");\n    assertNull(notExistent);\n    assertTrue( childInfo instanceof PluginInfo );\n    assertTrue((Integer) childInfo.initArgs.get(\"index\") == 0);\n    Node node2 = getNode(configWithNoChildren, \"plugin\");\n    PluginInfo pi2 = new PluginInfo(node2, \"with No Children\", false, false);\n    PluginInfo noChild = pi2.getChild(\"long\");\n    assertNull(noChild);\n    \n    \n  }\n\n","sourceOld":"  @Test\n  public void testChild() throws Exception {\n    Node node = getNode(configWith2Children, \"plugin\");\n    PluginInfo pi = new PluginInfo(node, \"with children\", false, false);\n    PluginInfo childInfo = pi.getChild(\"child\");\n    assertNotNull(childInfo);\n    PluginInfo notExistent = pi.getChild(\"doesnotExist\");\n    assertNull(notExistent);\n    assertTrue( childInfo instanceof PluginInfo );\n    assertTrue((Integer) childInfo.initArgs.get(\"index\") == 0);\n    Node node2 = getNode(configWithNoChildren, \"plugin\");\n    PluginInfo pi2 = new PluginInfo(node2, \"with No Children\", false, false);\n    PluginInfo noChild = pi2.getChild(\"long\");\n    assertNull(noChild);\n    \n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c1a41b196e39f98fb4a810f8e957c11203056845":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["c1a41b196e39f98fb4a810f8e957c11203056845","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c1a41b196e39f98fb4a810f8e957c11203056845":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1a41b196e39f98fb4a810f8e957c11203056845","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}