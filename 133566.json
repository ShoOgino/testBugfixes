{"path":"lucene/core/src/java/org/apache/lucene/util/PagedBytes#copy(IndexInput,long).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/PagedBytes#copy(IndexInput,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/PagedBytes#copy(IndexInput,long).mjava","sourceNew":"  /** Read this many bytes from in */\n  public void copy(IndexInput in, long byteCount) throws IOException {\n    while (byteCount > 0) {\n      int left = blockSize - upto;\n      if (left == 0) {\n        if (currentBlock != null) {\n          blocks.add(currentBlock);\n          blockEnd.add(upto);\n        }\n        currentBlock = new byte[blockSize];\n        upto = 0;\n        left = blockSize;\n      }\n      if (left < byteCount) {\n        in.readBytes(currentBlock, upto, left, false);\n        upto = blockSize;\n        byteCount -= left;\n      } else {\n        in.readBytes(currentBlock, upto, (int) byteCount, false);\n        upto += byteCount;\n        break;\n      }\n    }\n  }\n\n","sourceOld":"  /** Read this many bytes from in */\n  public void copy(IndexInput in, long byteCount) throws IOException {\n    while (byteCount > 0) {\n      int left = blockSize - upto;\n      if (left == 0) {\n        if (currentBlock != null) {\n          blocks.add(currentBlock);\n          blockEnd.add(upto);\n        }\n        currentBlock = new byte[blockSize];\n        upto = 0;\n        left = blockSize;\n      }\n      if (left < byteCount) {\n        in.readBytes(currentBlock, upto, left, false);\n        upto = blockSize;\n        byteCount -= left;\n      } else {\n        in.readBytes(currentBlock, upto, (int) byteCount, false);\n        upto += byteCount;\n        break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d943163030bbd7a9caf93cb5fea92257390a2a99","date":1403094254,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/PagedBytes#copy(IndexInput,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/PagedBytes#copy(IndexInput,long).mjava","sourceNew":"  /** Read this many bytes from in */\n  public void copy(IndexInput in, long byteCount) throws IOException {\n    while (byteCount > 0) {\n      int left = blockSize - upto;\n      if (left == 0) {\n        if (currentBlock != null) {\n          addBlock(currentBlock);\n        }\n        currentBlock = new byte[blockSize];\n        upto = 0;\n        left = blockSize;\n      }\n      if (left < byteCount) {\n        in.readBytes(currentBlock, upto, left, false);\n        upto = blockSize;\n        byteCount -= left;\n      } else {\n        in.readBytes(currentBlock, upto, (int) byteCount, false);\n        upto += byteCount;\n        break;\n      }\n    }\n  }\n\n","sourceOld":"  /** Read this many bytes from in */\n  public void copy(IndexInput in, long byteCount) throws IOException {\n    while (byteCount > 0) {\n      int left = blockSize - upto;\n      if (left == 0) {\n        if (currentBlock != null) {\n          blocks.add(currentBlock);\n          blockEnd.add(upto);\n        }\n        currentBlock = new byte[blockSize];\n        upto = 0;\n        left = blockSize;\n      }\n      if (left < byteCount) {\n        in.readBytes(currentBlock, upto, left, false);\n        upto = blockSize;\n        byteCount -= left;\n      } else {\n        in.readBytes(currentBlock, upto, (int) byteCount, false);\n        upto += byteCount;\n        break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/PagedBytes#copy(IndexInput,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/PagedBytes#copy(IndexInput,long).mjava","sourceNew":"  /** Read this many bytes from in */\n  public void copy(IndexInput in, long byteCount) throws IOException {\n    while (byteCount > 0) {\n      int left = blockSize - upto;\n      if (left == 0) {\n        if (currentBlock != null) {\n          addBlock(currentBlock);\n        }\n        currentBlock = new byte[blockSize];\n        upto = 0;\n        left = blockSize;\n      }\n      if (left < byteCount) {\n        in.readBytes(currentBlock, upto, left, false);\n        upto = blockSize;\n        byteCount -= left;\n      } else {\n        in.readBytes(currentBlock, upto, (int) byteCount, false);\n        upto += byteCount;\n        break;\n      }\n    }\n  }\n\n","sourceOld":"  /** Read this many bytes from in */\n  public void copy(IndexInput in, long byteCount) throws IOException {\n    while (byteCount > 0) {\n      int left = blockSize - upto;\n      if (left == 0) {\n        if (currentBlock != null) {\n          blocks.add(currentBlock);\n          blockEnd.add(upto);\n        }\n        currentBlock = new byte[blockSize];\n        upto = 0;\n        left = blockSize;\n      }\n      if (left < byteCount) {\n        in.readBytes(currentBlock, upto, left, false);\n        upto = blockSize;\n        byteCount -= left;\n      } else {\n        in.readBytes(currentBlock, upto, (int) byteCount, false);\n        upto += byteCount;\n        break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","d943163030bbd7a9caf93cb5fea92257390a2a99"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d943163030bbd7a9caf93cb5fea92257390a2a99":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d943163030bbd7a9caf93cb5fea92257390a2a99"]},"commit2Childs":{"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","d943163030bbd7a9caf93cb5fea92257390a2a99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d943163030bbd7a9caf93cb5fea92257390a2a99":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}