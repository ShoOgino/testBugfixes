{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","commits":[{"id":"3cdad2c6b6234338031bcc1f24c001a5ad66f714","date":1296866109,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","pathOld":"/dev/null","sourceNew":"  /** \r\n   * parse the text prepared in docBuf into a result DocData, \r\n   * no synchronization is required.\r\n   * @param docData reusable result\r\n   * @param name name that should be set to the result\r\n   * @param trecSrc calling trec content source  \r\n   * @param docBuf text to parse  \r\n   * @param pathType type of parsed file, or null if unknown - may be used by \r\n   * parsers to alter their behavior according to the file path type. \r\n   */  \r\n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \r\n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","pathOld":"/dev/null","sourceNew":"  /** \r\n   * parse the text prepared in docBuf into a result DocData, \r\n   * no synchronization is required.\r\n   * @param docData reusable result\r\n   * @param name name that should be set to the result\r\n   * @param trecSrc calling trec content source  \r\n   * @param docBuf text to parse  \r\n   * @param pathType type of parsed file, or null if unknown - may be used by \r\n   * parsers to alter their behavior according to the file path type. \r\n   */  \r\n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \r\n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","pathOld":"/dev/null","sourceNew":"  /** \r\n   * parse the text prepared in docBuf into a result DocData, \r\n   * no synchronization is required.\r\n   * @param docData reusable result\r\n   * @param name name that should be set to the result\r\n   * @param trecSrc calling trec content source  \r\n   * @param docBuf text to parse  \r\n   * @param pathType type of parsed file, or null if unknown - may be used by \r\n   * parsers to alter their behavior according to the file path type. \r\n   */  \r\n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \r\n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5112619c0471f45787126cb808fbf19fbe1c4fd7","date":1303933218,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","sourceNew":"  /** \n   * parse the text prepared in docBuf into a result DocData, \n   * no synchronization is required.\n   * @param docData reusable result\n   * @param name name that should be set to the result\n   * @param trecSrc calling trec content source  \n   * @param docBuf text to parse  \n   * @param pathType type of parsed file, or null if unknown - may be used by \n   * parsers to alter their behavior according to the file path type. \n   */  \n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\n\n","sourceOld":"  /** \r\n   * parse the text prepared in docBuf into a result DocData, \r\n   * no synchronization is required.\r\n   * @param docData reusable result\r\n   * @param name name that should be set to the result\r\n   * @param trecSrc calling trec content source  \r\n   * @param docBuf text to parse  \r\n   * @param pathType type of parsed file, or null if unknown - may be used by \r\n   * parsers to alter their behavior according to the file path type. \r\n   */  \r\n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \r\n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae4a6669d73678b396f2a88aef88690f3263bb25","date":1303934929,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","sourceNew":"  /** \n   * parse the text prepared in docBuf into a result DocData, \n   * no synchronization is required.\n   * @param docData reusable result\n   * @param name name that should be set to the result\n   * @param trecSrc calling trec content source  \n   * @param docBuf text to parse  \n   * @param pathType type of parsed file, or null if unknown - may be used by \n   * parsers to alter their behavior according to the file path type. \n   */  \n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\n\n","sourceOld":"  /** \r\n   * parse the text prepared in docBuf into a result DocData, \r\n   * no synchronization is required.\r\n   * @param docData reusable result\r\n   * @param name name that should be set to the result\r\n   * @param trecSrc calling trec content source  \r\n   * @param docBuf text to parse  \r\n   * @param pathType type of parsed file, or null if unknown - may be used by \r\n   * parsers to alter their behavior according to the file path type. \r\n   */  \r\n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \r\n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","sourceNew":"  /** \n   * parse the text prepared in docBuf into a result DocData, \n   * no synchronization is required.\n   * @param docData reusable result\n   * @param name name that should be set to the result\n   * @param trecSrc calling trec content source  \n   * @param docBuf text to parse  \n   * @param pathType type of parsed file, or null if unknown - may be used by \n   * parsers to alter their behavior according to the file path type. \n   */  \n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\n\n","sourceOld":"  /** \r\n   * parse the text prepared in docBuf into a result DocData, \r\n   * no synchronization is required.\r\n   * @param docData reusable result\r\n   * @param name name that should be set to the result\r\n   * @param trecSrc calling trec content source  \r\n   * @param docBuf text to parse  \r\n   * @param pathType type of parsed file, or null if unknown - may be used by \r\n   * parsers to alter their behavior according to the file path type. \r\n   */  \r\n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \r\n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","sourceNew":"  /** \n   * parse the text prepared in docBuf into a result DocData, \n   * no synchronization is required.\n   * @param docData reusable result\n   * @param name name that should be set to the result\n   * @param trecSrc calling trec content source  \n   * @param docBuf text to parse  \n   * @param pathType type of parsed file, or null if unknown - may be used by \n   * parsers to alter their behavior according to the file path type. \n   */  \n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\n\n","sourceOld":"  /** \r\n   * parse the text prepared in docBuf into a result DocData, \r\n   * no synchronization is required.\r\n   * @param docData reusable result\r\n   * @param name name that should be set to the result\r\n   * @param trecSrc calling trec content source  \r\n   * @param docBuf text to parse  \r\n   * @param pathType type of parsed file, or null if unknown - may be used by \r\n   * parsers to alter their behavior according to the file path type. \r\n   */  \r\n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \r\n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocParser#parse(DocData,String,TrecContentSource,StringBuilder,ParsePathType).mjava","sourceNew":"  /** \n   * parse the text prepared in docBuf into a result DocData, \n   * no synchronization is required.\n   * @param docData reusable result\n   * @param name name that should be set to the result\n   * @param trecSrc calling trec content source  \n   * @param docBuf text to parse  \n   * @param pathType type of parsed file, or null if unknown - may be used by \n   * parsers to alter their behavior according to the file path type. \n   */  \n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\n\n","sourceOld":"  /** \n   * parse the text prepared in docBuf into a result DocData, \n   * no synchronization is required.\n   * @param docData reusable result\n   * @param name name that should be set to the result\n   * @param trecSrc calling trec content source  \n   * @param docBuf text to parse  \n   * @param pathType type of parsed file, or null if unknown - may be used by \n   * parsers to alter their behavior according to the file path type. \n   */  \n  public abstract DocData parse(DocData docData, String name, TrecContentSource trecSrc, \n      StringBuilder docBuf, ParsePathType pathType) throws IOException, InterruptedException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5112619c0471f45787126cb808fbf19fbe1c4fd7"],"a3776dccca01c11e7046323cfad46a3b4a471233":["3cdad2c6b6234338031bcc1f24c001a5ad66f714","5112619c0471f45787126cb808fbf19fbe1c4fd7"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","5112619c0471f45787126cb808fbf19fbe1c4fd7"],"3cdad2c6b6234338031bcc1f24c001a5ad66f714":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5112619c0471f45787126cb808fbf19fbe1c4fd7":["3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"ae4a6669d73678b396f2a88aef88690f3263bb25":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","3cdad2c6b6234338031bcc1f24c001a5ad66f714","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"3cdad2c6b6234338031bcc1f24c001a5ad66f714":["a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","5112619c0471f45787126cb808fbf19fbe1c4fd7","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"5112619c0471f45787126cb808fbf19fbe1c4fd7":["b89678825b68eccaf09e6ab71675fc0b0af1e099","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"ae4a6669d73678b396f2a88aef88690f3263bb25":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["ae4a6669d73678b396f2a88aef88690f3263bb25"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","ae4a6669d73678b396f2a88aef88690f3263bb25","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}