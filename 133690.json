{"path":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","sourceNew":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE) == 0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE) == 0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","sourceNew":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE) == 0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE) == 0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","sourceNew":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE) == 0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE) == 0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51b92ffe30c50bb08699200b62c40420378ac3df","date":1423881454,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","sourceNew":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    sreq.rb = this;\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE) == 0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE) == 0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23e55c29de60130e8a1226800b66c5f6d7e16e8a","date":1447950053,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder#addRequest(SearchComponent,ShardRequest).mjava","sourceNew":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE) == 0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void addRequest(SearchComponent me, ShardRequest sreq) {\n    outgoing.add(sreq);\n    sreq.rb = this;\n    if ((sreq.purpose & ShardRequest.PURPOSE_PRIVATE) == 0) {\n      // if this isn't a private request, let other components modify it.\n      for (SearchComponent component : components) {\n        if (component != me) {\n          component.modifyRequest(this, me, sreq);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"51b92ffe30c50bb08699200b62c40420378ac3df":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"23e55c29de60130e8a1226800b66c5f6d7e16e8a":["51b92ffe30c50bb08699200b62c40420378ac3df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23e55c29de60130e8a1226800b66c5f6d7e16e8a"]},"commit2Childs":{"51b92ffe30c50bb08699200b62c40420378ac3df":["23e55c29de60130e8a1226800b66c5f6d7e16e8a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["51b92ffe30c50bb08699200b62c40420378ac3df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"23e55c29de60130e8a1226800b66c5f6d7e16e8a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}