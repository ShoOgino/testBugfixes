{"path":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","sourceNew":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    clear();\n    addAll(other);\n    lastGeneration = other.lastGeneration;\n  }\n\n","sourceOld":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    clear();\n    addAll(other);\n    lastGeneration = other.lastGeneration;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","sourceNew":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    clear();\n    addAll(other);\n    lastGeneration = other.lastGeneration;\n    lastGlobalFieldMapVersion = other.lastGlobalFieldMapVersion;\n    format = other.format;\n  }\n\n","sourceOld":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    clear();\n    addAll(other);\n    lastGeneration = other.lastGeneration;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","sourceNew":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    clear();\n    addAll(other);\n    lastGeneration = other.lastGeneration;\n    lastGlobalFieldMapVersion = other.lastGlobalFieldMapVersion;\n    format = other.format;\n  }\n\n","sourceOld":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    clear();\n    addAll(other);\n    lastGeneration = other.lastGeneration;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","sourceNew":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    clear();\n    addAll(other);\n    lastGeneration = other.lastGeneration;\n    lastGlobalFieldMapVersion = other.lastGlobalFieldMapVersion;\n    format = other.format;\n  }\n\n","sourceOld":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    clear();\n    addAll(other);\n    lastGeneration = other.lastGeneration;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"786a4d25ca958a1f315a9d6a74f0441fdafcd522","date":1305734256,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","sourceNew":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    rollbackSegmentInfos(other.asList());\n    lastGeneration = other.lastGeneration;\n    lastGlobalFieldMapVersion = other.lastGlobalFieldMapVersion;\n    format = other.format;\n  }\n\n","sourceOld":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    clear();\n    addAll(other);\n    lastGeneration = other.lastGeneration;\n    lastGlobalFieldMapVersion = other.lastGlobalFieldMapVersion;\n    format = other.format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","sourceNew":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    rollbackSegmentInfos(other.asList());\n    lastGeneration = other.lastGeneration;\n    lastGlobalFieldMapVersion = other.lastGlobalFieldMapVersion;\n    format = other.format;\n  }\n\n","sourceOld":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    clear();\n    addAll(other);\n    lastGeneration = other.lastGeneration;\n    lastGlobalFieldMapVersion = other.lastGlobalFieldMapVersion;\n    format = other.format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","sourceNew":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    rollbackSegmentInfos(other.asList());\n    lastGeneration = other.lastGeneration;\n    lastGlobalFieldMapVersion = other.lastGlobalFieldMapVersion;\n    format = other.format;\n  }\n\n","sourceOld":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    clear();\n    addAll(other);\n    lastGeneration = other.lastGeneration;\n    lastGlobalFieldMapVersion = other.lastGlobalFieldMapVersion;\n    format = other.format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"319624eb66a10b717d3e66af448543e7dc5c479d","date":1322741556,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","sourceNew":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    rollbackSegmentInfos(other.asList());\n    lastGeneration = other.lastGeneration;\n    format = other.format;\n  }\n\n","sourceOld":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    rollbackSegmentInfos(other.asList());\n    lastGeneration = other.lastGeneration;\n    lastGlobalFieldMapVersion = other.lastGlobalFieldMapVersion;\n    format = other.format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#replace(SegmentInfos).mjava","sourceNew":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    rollbackSegmentInfos(other.asList());\n    lastGeneration = other.lastGeneration;\n    format = other.format;\n  }\n\n","sourceOld":"  /** Replaces all segments in this instance, but keeps\n   *  generation, version, counter so that future commits\n   *  remain write once.\n   */\n  void replace(SegmentInfos other) {\n    rollbackSegmentInfos(other.asList());\n    lastGeneration = other.lastGeneration;\n    format = other.format;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["1224a4027481acce15495b03bce9b48b93b42722"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["9454a6510e2db155fb01faa5c049b06ece95fab9","1224a4027481acce15495b03bce9b48b93b42722"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["d619839baa8ce5503e496b94a9e42ad6f079293f","786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["9454a6510e2db155fb01faa5c049b06ece95fab9","1224a4027481acce15495b03bce9b48b93b42722"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["319624eb66a10b717d3e66af448543e7dc5c479d"],"a3776dccca01c11e7046323cfad46a3b4a471233":["1224a4027481acce15495b03bce9b48b93b42722","786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"319624eb66a10b717d3e66af448543e7dc5c479d":["786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1224a4027481acce15495b03bce9b48b93b42722":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","319624eb66a10b717d3e66af448543e7dc5c479d"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"319624eb66a10b717d3e66af448543e7dc5c479d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1224a4027481acce15495b03bce9b48b93b42722":["786a4d25ca958a1f315a9d6a74f0441fdafcd522","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","1224a4027481acce15495b03bce9b48b93b42722"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}