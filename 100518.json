{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createNode(Node,CreateMode,StringBuilder,String,byte[],boolean).mjava","commits":[{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createNode(Node,CreateMode,StringBuilder,String,byte[],boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createNode(Node,CreateMode,StringBuilder,String,byte[],boolean).mjava","sourceNew":"  private Node createNode(Node parentNode, CreateMode mode, StringBuilder fullChildPath, String baseChildName, byte[] data, boolean attachToParent) throws IOException {\n    String nodeName = baseChildName;\n    if ((parentNode.mode == CreateMode.EPHEMERAL || parentNode.mode == CreateMode.EPHEMERAL_SEQUENTIAL) &&\n        (mode == CreateMode.EPHEMERAL || mode == CreateMode.EPHEMERAL_SEQUENTIAL)) {\n      throw new IOException(\"NoChildrenEphemerals for \" + parentNode.path);\n    }\n    if (CreateMode.PERSISTENT_SEQUENTIAL == mode || CreateMode.EPHEMERAL_SEQUENTIAL == mode) {\n      nodeName = nodeName + String.format(Locale.ROOT, \"%010d\", parentNode.seq);\n      parentNode.seq++;\n    }\n\n    fullChildPath.append(nodeName);\n    Node child = new Node(parentNode, nodeName, fullChildPath.toString(), data, mode, id);\n\n    if (attachToParent) {\n      parentNode.setChild(nodeName, child);\n    }\n    return child;\n  }\n\n","sourceOld":"  private Node createNode(Node parentNode, CreateMode mode, StringBuilder fullChildPath, String baseChildName, byte[] data, boolean attachToParent) throws IOException {\n    String nodeName = baseChildName;\n    if ((parentNode.mode == CreateMode.EPHEMERAL || parentNode.mode == CreateMode.EPHEMERAL_SEQUENTIAL) &&\n        (mode == CreateMode.EPHEMERAL || mode == CreateMode.EPHEMERAL_SEQUENTIAL)) {\n      throw new IOException(\"NoChildrenEphemerals for \" + parentNode.path);\n    }\n    if (CreateMode.PERSISTENT_SEQUENTIAL == mode || CreateMode.EPHEMERAL_SEQUENTIAL == mode) {\n      nodeName = nodeName + String.format(Locale.ROOT, \"%010d\", parentNode.seq);\n      parentNode.seq++;\n    }\n\n    fullChildPath.append(nodeName);\n    Node child = new Node(parentNode, nodeName, fullChildPath.toString(), data, mode, id);\n\n    if (attachToParent) {\n      parentNode.setChild(nodeName, child);\n    }\n    return child;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"edf5b262a72d10530eb2f01dc8f19060355b213e","date":1557765866,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createNode(Node,CreateMode,StringBuilder,String,byte[],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createNode(Node,CreateMode,StringBuilder,String,byte[],boolean).mjava","sourceNew":"  private Node createNode(Node parentNode, CreateMode mode, StringBuilder fullChildPath, String baseChildName, byte[] data, boolean attachToParent) throws IOException {\n    String nodeName = baseChildName;\n    if ((parentNode.mode == CreateMode.EPHEMERAL || parentNode.mode == CreateMode.EPHEMERAL_SEQUENTIAL) &&\n        (mode == CreateMode.EPHEMERAL || mode == CreateMode.EPHEMERAL_SEQUENTIAL)) {\n      throw new IOException(\"NoChildrenEphemerals for \" + parentNode.path);\n    }\n    if (CreateMode.PERSISTENT_SEQUENTIAL == mode || CreateMode.EPHEMERAL_SEQUENTIAL == mode) {\n      nodeName = nodeName + String.format(Locale.ROOT, \"%010d\", parentNode.seq);\n      parentNode.seq++;\n    }\n\n    fullChildPath.append(nodeName);\n    String owner = mode == CreateMode.EPHEMERAL || mode == CreateMode.EPHEMERAL_SEQUENTIAL ? id : \"0\";\n    Node child = new Node(parentNode, nodeName, fullChildPath.toString(), data, mode, owner);\n\n    if (attachToParent) {\n      parentNode.setChild(nodeName, child);\n    }\n    return child;\n  }\n\n","sourceOld":"  private Node createNode(Node parentNode, CreateMode mode, StringBuilder fullChildPath, String baseChildName, byte[] data, boolean attachToParent) throws IOException {\n    String nodeName = baseChildName;\n    if ((parentNode.mode == CreateMode.EPHEMERAL || parentNode.mode == CreateMode.EPHEMERAL_SEQUENTIAL) &&\n        (mode == CreateMode.EPHEMERAL || mode == CreateMode.EPHEMERAL_SEQUENTIAL)) {\n      throw new IOException(\"NoChildrenEphemerals for \" + parentNode.path);\n    }\n    if (CreateMode.PERSISTENT_SEQUENTIAL == mode || CreateMode.EPHEMERAL_SEQUENTIAL == mode) {\n      nodeName = nodeName + String.format(Locale.ROOT, \"%010d\", parentNode.seq);\n      parentNode.seq++;\n    }\n\n    fullChildPath.append(nodeName);\n    Node child = new Node(parentNode, nodeName, fullChildPath.toString(), data, mode, id);\n\n    if (attachToParent) {\n      parentNode.setChild(nodeName, child);\n    }\n    return child;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistribStateManager#createNode(Node,CreateMode,StringBuilder,String,byte[],boolean).mjava","sourceNew":null,"sourceOld":"  private Node createNode(Node parentNode, CreateMode mode, StringBuilder fullChildPath, String baseChildName, byte[] data, boolean attachToParent) throws IOException {\n    String nodeName = baseChildName;\n    if ((parentNode.mode == CreateMode.EPHEMERAL || parentNode.mode == CreateMode.EPHEMERAL_SEQUENTIAL) &&\n        (mode == CreateMode.EPHEMERAL || mode == CreateMode.EPHEMERAL_SEQUENTIAL)) {\n      throw new IOException(\"NoChildrenEphemerals for \" + parentNode.path);\n    }\n    if (CreateMode.PERSISTENT_SEQUENTIAL == mode || CreateMode.EPHEMERAL_SEQUENTIAL == mode) {\n      nodeName = nodeName + String.format(Locale.ROOT, \"%010d\", parentNode.seq);\n      parentNode.seq++;\n    }\n\n    fullChildPath.append(nodeName);\n    String owner = mode == CreateMode.EPHEMERAL || mode == CreateMode.EPHEMERAL_SEQUENTIAL ? id : \"0\";\n    Node child = new Node(parentNode, nodeName, fullChildPath.toString(), data, mode, owner);\n\n    if (attachToParent) {\n      parentNode.setChild(nodeName, child);\n    }\n    return child;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["edf5b262a72d10530eb2f01dc8f19060355b213e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"edf5b262a72d10530eb2f01dc8f19060355b213e":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"edf5b262a72d10530eb2f01dc8f19060355b213e":["3f504512a03d978990cbff30db0522b354e846db"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["edf5b262a72d10530eb2f01dc8f19060355b213e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}