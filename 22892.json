{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","commits":[{"id":"8a093d23e938d132b81b5f2de3d6b168afe3608e","date":1455076308,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lon, lat);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lon, lat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lat, double lon, FieldType type) {\n    super(name, type);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lat, lon);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lon, double lat, FieldType type) {\n    super(name, type);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lon, lat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1546ac4b392e8c98abbdb9702abbdaebb9c9c4f3","date":1458722535,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lat, double lon, FieldType type) {\n    super(name, type);\n\n    if (GeoUtils.isValidLat(lat) == false) {\n      throw new IllegalArgumentException(\"invalid lat=\" + lat + \" for field \\\"\" + name + \"\\\"\");\n    }\n\n    if (GeoUtils.isValidLon(lon) == false) {\n      throw new IllegalArgumentException(\"invalid lon=\" + lon + \" for field \\\"\" + name + \"\\\"\");\n    }\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lat, lon);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lat, double lon, FieldType type) {\n    super(name, type);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lat, lon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6c59bc551f4e523ce6a321280cc6733424fb824","date":1458837690,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    if (GeoUtils.isValidLat(latitude) == false) {\n      throw new IllegalArgumentException(\"invalid latitude=\" + latitude + \" for field \\\"\" + name + \"\\\"\");\n    }\n\n    if (GeoUtils.isValidLon(longitude) == false) {\n      throw new IllegalArgumentException(\"invalid longitude=\" + longitude + \" for field \\\"\" + name + \"\\\"\");\n    }\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(latitude, longitude);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double lat, double lon, FieldType type) {\n    super(name, type);\n\n    if (GeoUtils.isValidLat(lat) == false) {\n      throw new IllegalArgumentException(\"invalid lat=\" + lat + \" for field \\\"\" + name + \"\\\"\");\n    }\n\n    if (GeoUtils.isValidLon(lon) == false) {\n      throw new IllegalArgumentException(\"invalid lon=\" + lon + \" for field \\\"\" + name + \"\\\"\");\n    }\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(lat, lon);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0da288484d638cec72e8fc33363e4c0532d35ff0","date":1459115234,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(latitude, longitude);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    if (GeoUtils.isValidLat(latitude) == false) {\n      throw new IllegalArgumentException(\"invalid latitude=\" + latitude + \" for field \\\"\" + name + \"\\\"\");\n    }\n\n    if (GeoUtils.isValidLon(longitude) == false) {\n      throw new IllegalArgumentException(\"invalid longitude=\" + longitude + \" for field \\\"\" + name + \"\\\"\");\n    }\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(latitude, longitude);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"065f36185d91a7d825ce7adac5b0d8df5cb4f73f","date":1461251676,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = encodeLatLon(latitude, longitude);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(latitude, longitude);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca","date":1461308643,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = encodeLatLon(latitude, longitude);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = GeoEncodingUtils.mortonHash(latitude, longitude);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be46ccf1a05985ba9fec84cb8674b607a23d5442","date":1465576866,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type\n   *  @throws IllegalArgumentException if the field name or type is null\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = encodeLatLon(latitude, longitude);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = encodeLatLon(latitude, longitude);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type\n   *  @throws IllegalArgumentException if the field name or type is null\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = encodeLatLon(latitude, longitude);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#LONG}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a LONG numericType()\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n      if (type.numericType() != null) {\n        // make sure numericType is a LONG\n        if (type.numericType() != FieldType.LegacyNumericType.LONG) {\n          throw new IllegalArgumentException(\"type.numericType() must be LONG but got \" + type.numericType());\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = encodeLatLon(latitude, longitude);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc53adde67e2fa905526fcf1e14e3c9e1e64821","date":1486416055,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/document/GeoPointField#GeoPointField(String,double,double,FieldType).mjava","sourceNew":null,"sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}.\n   *  @param name field name\n   *  @param latitude latitude double value [-90.0 : 90.0]\n   *  @param longitude longitude double value [-180.0 : 180.0]\n   *  @param type customized field type\n   *  @throws IllegalArgumentException if the field name or type is null\n   */\n  public GeoPointField(String name, double latitude, double longitude, FieldType type) {\n    super(name, type);\n\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n\n    // field must be indexed\n    // todo does it make sense here to provide the ability to store a GeoPointField but not index?\n    if (type.indexOptions() == IndexOptions.NONE && type.stored() == false) {\n      throw new IllegalArgumentException(\"type.indexOptions() is set to NONE but type.stored() is false\");\n    } else if (type.indexOptions() == IndexOptions.DOCS) {\n      if (type.docValuesType() != DocValuesType.SORTED_NUMERIC) {\n        throw new IllegalArgumentException(\"type.docValuesType() must be SORTED_NUMERIC but got \" + type.docValuesType());\n      }\n    } else {\n      throw new IllegalArgumentException(\"type.indexOptions() must be one of NONE or DOCS but got \" + type.indexOptions());\n    }\n\n    // set field data\n    fieldsData = encodeLatLon(latitude, longitude);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"065f36185d91a7d825ce7adac5b0d8df5cb4f73f":["0da288484d638cec72e8fc33363e4c0532d35ff0"],"7dc53adde67e2fa905526fcf1e14e3c9e1e64821":["be46ccf1a05985ba9fec84cb8674b607a23d5442"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca":["0da288484d638cec72e8fc33363e4c0532d35ff0","065f36185d91a7d825ce7adac5b0d8df5cb4f73f"],"0da288484d638cec72e8fc33363e4c0532d35ff0":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"be46ccf1a05985ba9fec84cb8674b607a23d5442":["ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"1546ac4b392e8c98abbdb9702abbdaebb9c9c4f3":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca","be46ccf1a05985ba9fec84cb8674b607a23d5442"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc53adde67e2fa905526fcf1e14e3c9e1e64821"],"d6c59bc551f4e523ce6a321280cc6733424fb824":["1546ac4b392e8c98abbdb9702abbdaebb9c9c4f3"]},"commit2Childs":{"065f36185d91a7d825ce7adac5b0d8df5cb4f73f":["ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"7dc53adde67e2fa905526fcf1e14e3c9e1e64821":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["1546ac4b392e8c98abbdb9702abbdaebb9c9c4f3"],"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca":["be46ccf1a05985ba9fec84cb8674b607a23d5442","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"0da288484d638cec72e8fc33363e4c0532d35ff0":["065f36185d91a7d825ce7adac5b0d8df5cb4f73f","ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"be46ccf1a05985ba9fec84cb8674b607a23d5442":["7dc53adde67e2fa905526fcf1e14e3c9e1e64821","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1546ac4b392e8c98abbdb9702abbdaebb9c9c4f3":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d6c59bc551f4e523ce6a321280cc6733424fb824":["0da288484d638cec72e8fc33363e4c0532d35ff0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}