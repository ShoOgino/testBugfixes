{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsReader#init(IndexInput).mjava","commits":[{"id":"4f8633b56150a205774ee3e2adf1452a81b0d904","date":1376926002,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsReader#init(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    version = CodecUtil.checkHeader(termsIn, TempPulsingPostingsWriter.CODEC,\n                                    TempPulsingPostingsWriter.VERSION_START, \n                                    TempPulsingPostingsWriter.VERSION_CURRENT);\n    // nocommit: here open file to load field summary\n    maxPositions = termsIn.readVInt();\n    wrappedPostingsReader.init(termsIn);\n    if (version >= TempPulsingPostingsWriter.VERSION_META_ARRAY) {\n      fields = new TreeMap<Integer, Integer>();\n      String summaryFileName = IndexFileNames.segmentFileName(segmentState.segmentInfo.name, segmentState.segmentSuffix, TempPulsingPostingsWriter.SUMMARY_EXTENSION);\n      IndexInput in = null;\n      try { \n        in = segmentState.directory.openInput(summaryFileName, segmentState.context);\n        CodecUtil.checkHeader(in, TempPulsingPostingsWriter.CODEC, version, \n                              TempPulsingPostingsWriter.VERSION_CURRENT);\n        int numField = in.readVInt();\n        for (int i = 0; i < numField; i++) {\n          int fieldNum = in.readVInt();\n          int longsSize = in.readVInt();\n          fields.put(fieldNum, longsSize);\n        }\n      } finally {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    } else {\n      assert false;\n      fields = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d2e085a44254f51e49d03f212aff0ad5a99052a","date":1376969443,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsReader#init(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    version = CodecUtil.checkHeader(termsIn, TempPulsingPostingsWriter.CODEC,\n                                    TempPulsingPostingsWriter.VERSION_START, \n                                    TempPulsingPostingsWriter.VERSION_CURRENT);\n    maxPositions = termsIn.readVInt();\n    wrappedPostingsReader.init(termsIn);\n    if (wrappedPostingsReader instanceof TempPulsingPostingsReader || \n        version < TempPulsingPostingsWriter.VERSION_META_ARRAY) {\n      fields = null;\n    } else {\n      fields = new TreeMap<Integer, Integer>();\n      String summaryFileName = IndexFileNames.segmentFileName(segmentState.segmentInfo.name, segmentState.segmentSuffix, TempPulsingPostingsWriter.SUMMARY_EXTENSION);\n      IndexInput in = null;\n      try { \n        in = segmentState.directory.openInput(summaryFileName, segmentState.context);\n        CodecUtil.checkHeader(in, TempPulsingPostingsWriter.CODEC, version, \n                              TempPulsingPostingsWriter.VERSION_CURRENT);\n        int numField = in.readVInt();\n        for (int i = 0; i < numField; i++) {\n          int fieldNum = in.readVInt();\n          int longsSize = in.readVInt();\n          fields.put(fieldNum, longsSize);\n        }\n      } finally {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    version = CodecUtil.checkHeader(termsIn, TempPulsingPostingsWriter.CODEC,\n                                    TempPulsingPostingsWriter.VERSION_START, \n                                    TempPulsingPostingsWriter.VERSION_CURRENT);\n    // nocommit: here open file to load field summary\n    maxPositions = termsIn.readVInt();\n    wrappedPostingsReader.init(termsIn);\n    if (version >= TempPulsingPostingsWriter.VERSION_META_ARRAY) {\n      fields = new TreeMap<Integer, Integer>();\n      String summaryFileName = IndexFileNames.segmentFileName(segmentState.segmentInfo.name, segmentState.segmentSuffix, TempPulsingPostingsWriter.SUMMARY_EXTENSION);\n      IndexInput in = null;\n      try { \n        in = segmentState.directory.openInput(summaryFileName, segmentState.context);\n        CodecUtil.checkHeader(in, TempPulsingPostingsWriter.CODEC, version, \n                              TempPulsingPostingsWriter.VERSION_CURRENT);\n        int numField = in.readVInt();\n        for (int i = 0; i < numField; i++) {\n          int fieldNum = in.readVInt();\n          int longsSize = in.readVInt();\n          fields.put(fieldNum, longsSize);\n        }\n      } finally {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    } else {\n      assert false;\n      fields = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsReader#init(IndexInput).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    version = CodecUtil.checkHeader(termsIn, TempPulsingPostingsWriter.CODEC,\n                                    TempPulsingPostingsWriter.VERSION_START, \n                                    TempPulsingPostingsWriter.VERSION_CURRENT);\n    maxPositions = termsIn.readVInt();\n    wrappedPostingsReader.init(termsIn);\n    if (wrappedPostingsReader instanceof TempPulsingPostingsReader || \n        version < TempPulsingPostingsWriter.VERSION_META_ARRAY) {\n      fields = null;\n    } else {\n      fields = new TreeMap<Integer, Integer>();\n      String summaryFileName = IndexFileNames.segmentFileName(segmentState.segmentInfo.name, segmentState.segmentSuffix, TempPulsingPostingsWriter.SUMMARY_EXTENSION);\n      IndexInput in = null;\n      try { \n        in = segmentState.directory.openInput(summaryFileName, segmentState.context);\n        CodecUtil.checkHeader(in, TempPulsingPostingsWriter.CODEC, version, \n                              TempPulsingPostingsWriter.VERSION_CURRENT);\n        int numField = in.readVInt();\n        for (int i = 0; i < numField; i++) {\n          int fieldNum = in.readVInt();\n          int longsSize = in.readVInt();\n          fields.put(fieldNum, longsSize);\n        }\n      } finally {\n        IOUtils.closeWhileHandlingException(in);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d2e085a44254f51e49d03f212aff0ad5a99052a":["4f8633b56150a205774ee3e2adf1452a81b0d904"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["1d2e085a44254f51e49d03f212aff0ad5a99052a"],"4f8633b56150a205774ee3e2adf1452a81b0d904":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1d2e085a44254f51e49d03f212aff0ad5a99052a":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4f8633b56150a205774ee3e2adf1452a81b0d904","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"4f8633b56150a205774ee3e2adf1452a81b0d904":["1d2e085a44254f51e49d03f212aff0ad5a99052a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}