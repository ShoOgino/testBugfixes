{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","sourceNew":"  public void testSeparateIndexedFields() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    Facets facets2 = getTaxonomyFacetCounts(taxoReader, config, sfc, \"$b\");\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.intValue());\n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSeparateIndexedFields() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    Facets facets2 = getTaxonomyFacetCounts(taxoReader, config, sfc, \"$b\");\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.intValue());\n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testSeparateIndexedFields() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    Facets facets2 = getTaxonomyFacetCounts(taxoReader, config, sfc, \"$b\");\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.intValue());\n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","sourceNew":"  public void testSeparateIndexedFields() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    Facets facets2 = getTaxonomyFacetCounts(taxoReader, config, sfc, \"$b\");\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.intValue());\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSeparateIndexedFields() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    Facets facets2 = getTaxonomyFacetCounts(taxoReader, config, sfc, \"$b\");\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.intValue());\n    IOUtils.close(taxoWriter, iw, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","sourceNew":"  public void testSeparateIndexedFields() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    Facets facets2 = getTaxonomyFacetCounts(taxoReader, config, sfc, \"$b\");\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.intValue());\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSeparateIndexedFields() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    Facets facets2 = getTaxonomyFacetCounts(taxoReader, config, sfc, \"$b\");\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.intValue());\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","sourceNew":"  public void testSeparateIndexedFields() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    Facets facets2 = getTaxonomyFacetCounts(taxoReader, config, sfc, \"$b\");\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.intValue());\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSeparateIndexedFields() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    Facets facets2 = getTaxonomyFacetCounts(taxoReader, config, sfc, \"$b\");\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.intValue());\n    iw.shutdown();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testSeparateIndexedFields().mjava","sourceNew":"  public void testSeparateIndexedFields() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    Facets facets2 = getTaxonomyFacetCounts(taxoReader, config, sfc, \"$b\");\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.intValue());\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","sourceOld":"  public void testSeparateIndexedFields() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    FacetsConfig config = new FacetsConfig();\n    config.setIndexFieldName(\"b\", \"$b\");\n    \n    for(int i = atLeast(30); i > 0; --i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"f\", \"v\", Field.Store.NO));\n      doc.add(new FacetField(\"a\", \"1\"));\n      doc.add(new FacetField(\"b\", \"1\"));\n      iw.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    DirectoryReader r = DirectoryReader.open(iw, true);\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    \n    FacetsCollector sfc = new FacetsCollector();\n    newSearcher(r).search(new MatchAllDocsQuery(), sfc);\n    Facets facets1 = getTaxonomyFacetCounts(taxoReader, config, sfc);\n    Facets facets2 = getTaxonomyFacetCounts(taxoReader, config, sfc, \"$b\");\n    assertEquals(r.maxDoc(), facets1.getTopChildren(10, \"a\").value.intValue());\n    assertEquals(r.maxDoc(), facets2.getTopChildren(10, \"b\").value.intValue());\n    iw.close();\n    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a1862266772deb28cdcb7d996b64d2177022687":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a1862266772deb28cdcb7d996b64d2177022687"]},"commit2Childs":{"2a1862266772deb28cdcb7d996b64d2177022687":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["2a1862266772deb28cdcb7d996b64d2177022687"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}