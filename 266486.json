{"path":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd(JSONParser).mjava","commits":[{"id":"bc00220e3dec859110781d5d19a6116501fb4a38","date":1273880298,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd(JSONParser).mjava","pathOld":"/dev/null","sourceNew":"  AddUpdateCommand parseAdd( JSONParser js ) throws IOException\n  {\n    assertNextEvent( js, JSONParser.OBJECT_START );\n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.allowDups = false;\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = js.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( js.wasKey() ) {\n          String key = js.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new IOException( \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( js, JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev, js );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.allowDups = !js.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)js.getLong(); \n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( js.getNumberChars().toString() ); \n          }\n          else {\n            throw new IOException( \"Unknown key: \"+key+\" [\"+js.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new IOException( \n              \"Should be a key \"\n              +\" at [\"+js.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new IOException(\"missing solr document. \"+js.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        cmd.overwriteCommitted = !cmd.allowDups;\n        cmd.overwritePending = !cmd.allowDups;\n        return cmd;\n      }\n      else {\n        throw new IOException( \n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+js.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5653af107efef582afd0bc6aff175972359fdd6","date":1293390698,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd(JSONParser).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd(JSONParser).mjava","sourceNew":"  AddUpdateCommand parseAdd( JSONParser js ) throws IOException\n  {\n    assertNextEvent( js, JSONParser.OBJECT_START );\n    AddUpdateCommand cmd = new AddUpdateCommand();\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = js.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( js.wasKey() ) {\n          String key = js.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new IOException( \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( js, JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev, js );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.overwrite = js.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)js.getLong(); \n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( js.getNumberChars().toString() ); \n          }\n          else {\n            throw new IOException( \"Unknown key: \"+key+\" [\"+js.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new IOException( \n              \"Should be a key \"\n              +\" at [\"+js.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new IOException(\"missing solr document. \"+js.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        return cmd;\n      }\n      else {\n        throw new IOException( \n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+js.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","sourceOld":"  AddUpdateCommand parseAdd( JSONParser js ) throws IOException\n  {\n    assertNextEvent( js, JSONParser.OBJECT_START );\n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.allowDups = false;\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = js.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( js.wasKey() ) {\n          String key = js.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new IOException( \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( js, JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev, js );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.allowDups = !js.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)js.getLong(); \n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( js.getNumberChars().toString() ); \n          }\n          else {\n            throw new IOException( \"Unknown key: \"+key+\" [\"+js.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new IOException( \n              \"Should be a key \"\n              +\" at [\"+js.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new IOException(\"missing solr document. \"+js.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        cmd.overwriteCommitted = !cmd.allowDups;\n        cmd.overwritePending = !cmd.allowDups;\n        return cmd;\n      }\n      else {\n        throw new IOException( \n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+js.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa","date":1293733647,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd(SolrQueryRequest,JSONParser).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd(JSONParser).mjava","sourceNew":"  AddUpdateCommand parseAdd(SolrQueryRequest req, JSONParser js ) throws IOException\n  {\n    assertNextEvent( js, JSONParser.OBJECT_START );\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = js.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( js.wasKey() ) {\n          String key = js.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new IOException( \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( js, JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev, js );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.overwrite = js.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)js.getLong(); \n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( js.getNumberChars().toString() ); \n          }\n          else {\n            throw new IOException( \"Unknown key: \"+key+\" [\"+js.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new IOException( \n              \"Should be a key \"\n              +\" at [\"+js.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new IOException(\"missing solr document. \"+js.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        return cmd;\n      }\n      else {\n        throw new IOException( \n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+js.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","sourceOld":"  AddUpdateCommand parseAdd( JSONParser js ) throws IOException\n  {\n    assertNextEvent( js, JSONParser.OBJECT_START );\n    AddUpdateCommand cmd = new AddUpdateCommand();\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = js.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( js.wasKey() ) {\n          String key = js.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new IOException( \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( js, JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev, js );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.overwrite = js.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)js.getLong(); \n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( js.getNumberChars().toString() ); \n          }\n          else {\n            throw new IOException( \"Unknown key: \"+key+\" [\"+js.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new IOException( \n              \"Should be a key \"\n              +\" at [\"+js.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new IOException(\"missing solr document. \"+js.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        return cmd;\n      }\n      else {\n        throw new IOException( \n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+js.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd(SolrQueryRequest,JSONParser).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd(JSONParser).mjava","sourceNew":"  AddUpdateCommand parseAdd(SolrQueryRequest req, JSONParser js ) throws IOException\n  {\n    assertNextEvent( js, JSONParser.OBJECT_START );\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = js.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( js.wasKey() ) {\n          String key = js.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new IOException( \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( js, JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev, js );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.overwrite = js.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)js.getLong(); \n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( js.getNumberChars().toString() ); \n          }\n          else {\n            throw new IOException( \"Unknown key: \"+key+\" [\"+js.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new IOException( \n              \"Should be a key \"\n              +\" at [\"+js.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new IOException(\"missing solr document. \"+js.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        return cmd;\n      }\n      else {\n        throw new IOException( \n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+js.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","sourceOld":"  AddUpdateCommand parseAdd( JSONParser js ) throws IOException\n  {\n    assertNextEvent( js, JSONParser.OBJECT_START );\n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.allowDups = false;\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = js.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( js.wasKey() ) {\n          String key = js.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new IOException( \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( js, JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev, js );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.allowDups = !js.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)js.getLong(); \n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( js.getNumberChars().toString() ); \n          }\n          else {\n            throw new IOException( \"Unknown key: \"+key+\" [\"+js.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new IOException( \n              \"Should be a key \"\n              +\" at [\"+js.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new IOException(\"missing solr document. \"+js.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        cmd.overwriteCommitted = !cmd.allowDups;\n        cmd.overwritePending = !cmd.allowDups;\n        return cmd;\n      }\n      else {\n        throw new IOException( \n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+js.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd(JSONParser).mjava","sourceNew":null,"sourceOld":"  AddUpdateCommand parseAdd( JSONParser js ) throws IOException\n  {\n    assertNextEvent( js, JSONParser.OBJECT_START );\n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.allowDups = false;\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = js.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( js.wasKey() ) {\n          String key = js.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new IOException( \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( js, JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev, js );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.allowDups = !js.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)js.getLong(); \n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( js.getNumberChars().toString() ); \n          }\n          else {\n            throw new IOException( \"Unknown key: \"+key+\" [\"+js.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new IOException( \n              \"Should be a key \"\n              +\" at [\"+js.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new IOException(\"missing solr document. \"+js.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        cmd.overwriteCommitted = !cmd.allowDups;\n        cmd.overwritePending = !cmd.allowDups;\n        return cmd;\n      }\n      else {\n        throw new IOException( \n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+js.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["bc00220e3dec859110781d5d19a6116501fb4a38","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["bc00220e3dec859110781d5d19a6116501fb4a38","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"b5653af107efef582afd0bc6aff175972359fdd6":["bc00220e3dec859110781d5d19a6116501fb4a38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["b5653af107efef582afd0bc6aff175972359fdd6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"bc00220e3dec859110781d5d19a6116501fb4a38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"b5653af107efef582afd0bc6aff175972359fdd6":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc00220e3dec859110781d5d19a6116501fb4a38"],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bc00220e3dec859110781d5d19a6116501fb4a38":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","b5653af107efef582afd0bc6aff175972359fdd6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}