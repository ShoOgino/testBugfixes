{"path":"solr/core/src/test/org/apache/solr/DistributedIntervalFacetingTest#testRandom().mjava","commits":[{"id":"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd","date":1406137403,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/DistributedIntervalFacetingTest#testRandom().mjava","pathOld":"/dev/null","sourceNew":"  private void testRandom() throws Exception {\n    // All field values will be a number between 0 and cardinality\n    int cardinality = 1000000;\n    // Fields to use for interval faceting\n    String[] fields = new String[]{\"test_s_dv\", \"test_i_dv\", \"test_l_dv\", \"test_f_dv\", \"test_d_dv\",\n        \"test_ss_dv\", \"test_is_dv\", \"test_fs_dv\", \"test_ls_dv\", \"test_ds_dv\"};\n    for (int i = 0; i < atLeast(500); i++) {\n      if (random().nextInt(50) == 0) {\n        //have some empty docs\n        indexr(\"id\", String.valueOf(i));\n        continue;\n      }\n\n      if (random().nextInt(100) == 0 && i > 0) {\n        //delete some docs\n        del(\"id:\" + String.valueOf(i - 1));\n      }\n      Object[] docFields = new Object[(random().nextInt(5)) * 10 + 12];\n      docFields[0] = \"id\";\n      docFields[1] = String.valueOf(i);\n      docFields[2] = \"test_s_dv\";\n      docFields[3] = String.valueOf(random().nextInt(cardinality));\n      docFields[4] = \"test_i_dv\";\n      docFields[5] = String.valueOf(random().nextInt(cardinality));\n      docFields[6] = \"test_l_dv\";\n      docFields[7] = String.valueOf(random().nextInt(cardinality));\n      docFields[8] = \"test_f_dv\";\n      docFields[9] = String.valueOf(random().nextFloat() * cardinality);\n      docFields[10] = \"test_d_dv\";\n      docFields[11] = String.valueOf(random().nextDouble() * cardinality);\n      for (int j = 12; j < docFields.length; ) {\n        docFields[j++] = \"test_ss_dv\";\n        docFields[j++] = String.valueOf(random().nextInt(cardinality));\n        docFields[j++] = \"test_is_dv\";\n        docFields[j++] = String.valueOf(random().nextInt(cardinality));\n        docFields[j++] = \"test_ls_dv\";\n        docFields[j++] = String.valueOf(random().nextInt(cardinality));\n        docFields[j++] = \"test_fs_dv\";\n        docFields[j++] = String.valueOf(random().nextFloat() * cardinality);\n        docFields[j++] = \"test_ds_dv\";\n        docFields[j++] = String.valueOf(random().nextDouble() * cardinality);\n      }\n      indexr(docFields);\n      if (random().nextInt(50) == 0) {\n        commit();\n      }\n    }\n    commit();\n\n    handle.clear();\n    handle.put(\"QTime\", SKIPVAL);\n    handle.put(\"timestamp\", SKIPVAL);\n    handle.put(\"maxScore\", SKIPVAL);\n\n\n    for (int i = 0; i < atLeast(100); i++) {\n      doTestQuery(cardinality, fields);\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}