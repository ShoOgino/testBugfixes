{"path":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#terms(String).mjava","commits":[{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#terms(String).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public Terms terms(final String field) {\n        int i = Arrays.binarySearch(sortedFields, field, termComparator);\n        if (i < 0) {\n          return null;\n        } else {\n          final Info info = getInfo(i);\n          info.sortTerms();\n\n          return new Terms() {\n            @Override \n            public TermsEnum iterator(TermsEnum reuse) {\n              return new MemoryTermsEnum(info);\n            }\n\n            @Override\n            public Comparator<BytesRef> getComparator() {\n              return BytesRef.getUTF8SortedAsUnicodeComparator();\n            }\n\n            @Override\n            public long getUniqueTermCount() {\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public long getSumTotalTermFreq() {\n              return info.getSumTotalTermFreq();\n            }\n\n            @Override\n            public long getSumDocFreq() throws IOException {\n              // each term has df=1\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public int getDocCount() throws IOException {\n              return info.sortedTerms.length > 0 ? 1 : 0;\n            }\n              \n              \n          };\n        }\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bdb5e42b0cecd8dfb27767a02ada71899bf17917","date":1334100099,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#terms(String).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#terms(String).mjava","sourceNew":"      @Override\n      public Terms terms(final String field) {\n        int i = Arrays.binarySearch(sortedFields, field, termComparator);\n        if (i < 0) {\n          return null;\n        } else {\n          final Info info = getInfo(i);\n          info.sortTerms();\n\n          return new Terms() {\n            @Override \n            public TermsEnum iterator(TermsEnum reuse) {\n              return new MemoryTermsEnum(info);\n            }\n\n            @Override\n            public Comparator<BytesRef> getComparator() {\n              return BytesRef.getUTF8SortedAsUnicodeComparator();\n            }\n\n            @Override\n            public long size() {\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public long getSumTotalTermFreq() {\n              return info.getSumTotalTermFreq();\n            }\n\n            @Override\n            public long getSumDocFreq() throws IOException {\n              // each term has df=1\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public int getDocCount() throws IOException {\n              return info.sortedTerms.length > 0 ? 1 : 0;\n            }\n              \n              \n          };\n        }\n      }\n\n","sourceOld":"      @Override\n      public Terms terms(final String field) {\n        int i = Arrays.binarySearch(sortedFields, field, termComparator);\n        if (i < 0) {\n          return null;\n        } else {\n          final Info info = getInfo(i);\n          info.sortTerms();\n\n          return new Terms() {\n            @Override \n            public TermsEnum iterator(TermsEnum reuse) {\n              return new MemoryTermsEnum(info);\n            }\n\n            @Override\n            public Comparator<BytesRef> getComparator() {\n              return BytesRef.getUTF8SortedAsUnicodeComparator();\n            }\n\n            @Override\n            public long getUniqueTermCount() {\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public long getSumTotalTermFreq() {\n              return info.getSumTotalTermFreq();\n            }\n\n            @Override\n            public long getSumDocFreq() throws IOException {\n              // each term has df=1\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public int getDocCount() throws IOException {\n              return info.sortedTerms.length > 0 ? 1 : 0;\n            }\n              \n              \n          };\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a238fc456663f685a9db1ed8d680e348bb45171","date":1334173266,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#terms(String).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#terms(String).mjava","sourceNew":"      @Override\n      public Terms terms(final String field) {\n        int i = Arrays.binarySearch(sortedFields, field, termComparator);\n        if (i < 0) {\n          return null;\n        } else {\n          final Info info = getInfo(i);\n          info.sortTerms();\n\n          return new Terms() {\n            @Override \n            public TermsEnum iterator(TermsEnum reuse) {\n              return new MemoryTermsEnum(info);\n            }\n\n            @Override\n            public Comparator<BytesRef> getComparator() {\n              return BytesRef.getUTF8SortedAsUnicodeComparator();\n            }\n\n            @Override\n            public long size() {\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public long getSumTotalTermFreq() {\n              return info.getSumTotalTermFreq();\n            }\n\n            @Override\n            public long getSumDocFreq() throws IOException {\n              // each term has df=1\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public int getDocCount() throws IOException {\n              return info.sortedTerms.length > 0 ? 1 : 0;\n            }\n              \n              \n          };\n        }\n      }\n\n","sourceOld":"      @Override\n      public Terms terms(final String field) {\n        int i = Arrays.binarySearch(sortedFields, field, termComparator);\n        if (i < 0) {\n          return null;\n        } else {\n          final Info info = getInfo(i);\n          info.sortTerms();\n\n          return new Terms() {\n            @Override \n            public TermsEnum iterator(TermsEnum reuse) {\n              return new MemoryTermsEnum(info);\n            }\n\n            @Override\n            public Comparator<BytesRef> getComparator() {\n              return BytesRef.getUTF8SortedAsUnicodeComparator();\n            }\n\n            @Override\n            public long getUniqueTermCount() {\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public long getSumTotalTermFreq() {\n              return info.getSumTotalTermFreq();\n            }\n\n            @Override\n            public long getSumDocFreq() throws IOException {\n              // each term has df=1\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public int getDocCount() throws IOException {\n              return info.sortedTerms.length > 0 ? 1 : 0;\n            }\n              \n              \n          };\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#terms(String).mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.MemoryIndexReader.MemoryFields#terms(String).mjava","sourceNew":"      @Override\n      public Terms terms(final String field) {\n        int i = Arrays.binarySearch(sortedFields, field, termComparator);\n        if (i < 0) {\n          return null;\n        } else {\n          final Info info = getInfo(i);\n          info.sortTerms();\n\n          return new Terms() {\n            @Override \n            public TermsEnum iterator(TermsEnum reuse) {\n              return new MemoryTermsEnum(info);\n            }\n\n            @Override\n            public Comparator<BytesRef> getComparator() {\n              return BytesRef.getUTF8SortedAsUnicodeComparator();\n            }\n\n            @Override\n            public long size() {\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public long getSumTotalTermFreq() {\n              return info.getSumTotalTermFreq();\n            }\n\n            @Override\n            public long getSumDocFreq() throws IOException {\n              // each term has df=1\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public int getDocCount() throws IOException {\n              return info.sortedTerms.length > 0 ? 1 : 0;\n            }\n              \n              \n          };\n        }\n      }\n\n","sourceOld":"      @Override\n      public Terms terms(final String field) {\n        int i = Arrays.binarySearch(sortedFields, field, termComparator);\n        if (i < 0) {\n          return null;\n        } else {\n          final Info info = getInfo(i);\n          info.sortTerms();\n\n          return new Terms() {\n            @Override \n            public TermsEnum iterator(TermsEnum reuse) {\n              return new MemoryTermsEnum(info);\n            }\n\n            @Override\n            public Comparator<BytesRef> getComparator() {\n              return BytesRef.getUTF8SortedAsUnicodeComparator();\n            }\n\n            @Override\n            public long size() {\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public long getSumTotalTermFreq() {\n              return info.getSumTotalTermFreq();\n            }\n\n            @Override\n            public long getSumDocFreq() throws IOException {\n              // each term has df=1\n              return info.sortedTerms.length;\n            }\n\n            @Override\n            public int getDocCount() throws IOException {\n              return info.sortedTerms.length > 0 ? 1 : 0;\n            }\n              \n              \n          };\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["bdb5e42b0cecd8dfb27767a02ada71899bf17917"],"bdb5e42b0cecd8dfb27767a02ada71899bf17917":["3cc749c053615f5871f3b95715fe292f34e70a53"],"5a238fc456663f685a9db1ed8d680e348bb45171":["3cc749c053615f5871f3b95715fe292f34e70a53","bdb5e42b0cecd8dfb27767a02ada71899bf17917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bdb5e42b0cecd8dfb27767a02ada71899bf17917":["b89678825b68eccaf09e6ab71675fc0b0af1e099","5a238fc456663f685a9db1ed8d680e348bb45171"],"5a238fc456663f685a9db1ed8d680e348bb45171":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cc749c053615f5871f3b95715fe292f34e70a53"],"3cc749c053615f5871f3b95715fe292f34e70a53":["bdb5e42b0cecd8dfb27767a02ada71899bf17917","5a238fc456663f685a9db1ed8d680e348bb45171"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5a238fc456663f685a9db1ed8d680e348bb45171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}