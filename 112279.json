{"path":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery.QueryPhraseMap#add(Query,IndexReader).mjava","commits":[{"id":"b77dee084743b07be452cf7c07c992a225b11146","date":1315532213,"type":1,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery.QueryPhraseMap#add(Query,IndexReader).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery.QueryPhraseMap#add(Query).mjava","sourceNew":"      void add( Query query, IndexReader reader ) throws IOException {\n      if( query instanceof TermQuery ){\n        addTerm( ((TermQuery)query).getTerm(), query.getBoost() );\n      }\n      else if( query instanceof PhraseQuery ){\n        PhraseQuery pq = (PhraseQuery)query;\n        Term[] terms = pq.getTerms();\n        Map<String, QueryPhraseMap> map = subMap;\n        QueryPhraseMap qpm = null;\n        for( Term term : terms ){\n          qpm = getOrNewMap( map, term.text() );\n          map = qpm.subMap;\n        }\n        qpm.markTerminal( pq.getSlop(), pq.getBoost() );\n      }\n      else\n        throw new RuntimeException( \"query \\\"\" + query.toString() + \"\\\" must be flatten first.\" );\n    }\n\n","sourceOld":"    void add( Query query ){\n      if( query instanceof TermQuery ){\n        addTerm( ((TermQuery)query).getTerm(), query.getBoost() );\n      }\n      else if( query instanceof PhraseQuery ){\n        PhraseQuery pq = (PhraseQuery)query;\n        Term[] terms = pq.getTerms();\n        Map<String, QueryPhraseMap> map = subMap;\n        QueryPhraseMap qpm = null;\n        for( Term term : terms ){\n          qpm = getOrNewMap( map, term.text() );\n          map = qpm.subMap;\n        }\n        qpm.markTerminal( pq.getSlop(), pq.getBoost() );\n      }\n      else\n        throw new RuntimeException( \"query \\\"\" + query.toString() + \"\\\" must be flatten first.\" );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery.QueryPhraseMap#add(Query,IndexReader).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery.QueryPhraseMap#add(Query,IndexReader).mjava","sourceNew":"      void add( Query query, IndexReader reader ) throws IOException {\n      if( query instanceof TermQuery ){\n        addTerm( ((TermQuery)query).getTerm(), query.getBoost() );\n      }\n      else if( query instanceof PhraseQuery ){\n        PhraseQuery pq = (PhraseQuery)query;\n        Term[] terms = pq.getTerms();\n        Map<String, QueryPhraseMap> map = subMap;\n        QueryPhraseMap qpm = null;\n        for( Term term : terms ){\n          qpm = getOrNewMap( map, term.text() );\n          map = qpm.subMap;\n        }\n        qpm.markTerminal( pq.getSlop(), pq.getBoost() );\n      }\n      else\n        throw new RuntimeException( \"query \\\"\" + query.toString() + \"\\\" must be flatten first.\" );\n    }\n\n","sourceOld":"      void add( Query query, IndexReader reader ) throws IOException {\n      if( query instanceof TermQuery ){\n        addTerm( ((TermQuery)query).getTerm(), query.getBoost() );\n      }\n      else if( query instanceof PhraseQuery ){\n        PhraseQuery pq = (PhraseQuery)query;\n        Term[] terms = pq.getTerms();\n        Map<String, QueryPhraseMap> map = subMap;\n        QueryPhraseMap qpm = null;\n        for( Term term : terms ){\n          qpm = getOrNewMap( map, term.text() );\n          map = qpm.subMap;\n        }\n        qpm.markTerminal( pq.getSlop(), pq.getBoost() );\n      }\n      else\n        throw new RuntimeException( \"query \\\"\" + query.toString() + \"\\\" must be flatten first.\" );\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b77dee084743b07be452cf7c07c992a225b11146"],"b77dee084743b07be452cf7c07c992a225b11146":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b77dee084743b07be452cf7c07c992a225b11146":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b77dee084743b07be452cf7c07c992a225b11146"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}