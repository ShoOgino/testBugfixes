{"path":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#testAdvanceCMR2().mjava","commits":[{"id":"7a64e93bc1feffac85dcc3907934278ff8214ad8","date":1363964145,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#testAdvanceCMR2().mjava","pathOld":"/dev/null","sourceNew":"  /** simple test for advance(): minShouldMatch=2 on 3 terms (one common, one medium, one rare) */\n  public void testAdvanceCMR2() throws Exception {\n    for (int amount = 25; amount < 200; amount += 25) {\n      for (int common = 0; common < commonTerms.length; common++) {\n        for (int medium = 0; medium < mediumTerms.length; medium++) {\n          for (int rare = 0; rare < rareTerms.length; rare++) {\n            Scorer expected = scorer(new String[] { commonTerms[common], mediumTerms[medium], rareTerms[rare] }, 2, true);\n            Scorer actual = scorer(new String[] { commonTerms[common], mediumTerms[medium], rareTerms[rare] }, 2, false);\n            assertAdvance(expected, actual, amount);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"251e6911800e3a02e1da3bfd4dc49a914aef9778","date":1423063783,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#testAdvanceCMR2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMinShouldMatch2#testAdvanceCMR2().mjava","sourceNew":"  /** simple test for advance(): minShouldMatch=2 on 3 terms (one common, one medium, one rare) */\n  public void testAdvanceCMR2() throws Exception {\n    for (int amount = 25; amount < 200; amount += 25) {\n      for (int common = 0; common < commonTerms.length; common++) {\n        for (int medium = 0; medium < mediumTerms.length; medium++) {\n          for (int rare = 0; rare < rareTerms.length; rare++) {\n            Scorer expected = scorer(new String[] { commonTerms[common], mediumTerms[medium], rareTerms[rare] }, 2, Mode.DOC_VALUES);\n            Scorer actual = scorer(new String[] { commonTerms[common], mediumTerms[medium], rareTerms[rare] }, 2, Mode.SCORER);\n            assertAdvance(expected, actual, amount);\n\n            expected = scorer(new String[] { commonTerms[common], mediumTerms[medium], rareTerms[rare] }, 2, Mode.DOC_VALUES);\n            actual = scorer(new String[] { commonTerms[common], mediumTerms[medium], rareTerms[rare] }, 2, Mode.BULK_SCORER);\n            assertAdvance(expected, actual, amount);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /** simple test for advance(): minShouldMatch=2 on 3 terms (one common, one medium, one rare) */\n  public void testAdvanceCMR2() throws Exception {\n    for (int amount = 25; amount < 200; amount += 25) {\n      for (int common = 0; common < commonTerms.length; common++) {\n        for (int medium = 0; medium < mediumTerms.length; medium++) {\n          for (int rare = 0; rare < rareTerms.length; rare++) {\n            Scorer expected = scorer(new String[] { commonTerms[common], mediumTerms[medium], rareTerms[rare] }, 2, true);\n            Scorer actual = scorer(new String[] { commonTerms[common], mediumTerms[medium], rareTerms[rare] }, 2, false);\n            assertAdvance(expected, actual, amount);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"251e6911800e3a02e1da3bfd4dc49a914aef9778":["7a64e93bc1feffac85dcc3907934278ff8214ad8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7a64e93bc1feffac85dcc3907934278ff8214ad8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["251e6911800e3a02e1da3bfd4dc49a914aef9778"]},"commit2Childs":{"251e6911800e3a02e1da3bfd4dc49a914aef9778":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a64e93bc1feffac85dcc3907934278ff8214ad8"],"7a64e93bc1feffac85dcc3907934278ff8214ad8":["251e6911800e3a02e1da3bfd4dc49a914aef9778"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}