{"path":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#nextSeekTerm(BytesRef).mjava","commits":[{"id":"e91b7d9f5000faefb0e81b98e76ad5b9463283e8","date":1433799348,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#nextSeekTerm(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected final BytesRef nextSeekTerm(BytesRef term) {\n    while (!rangeBounds.isEmpty()) {\n      if (currentRange == null) {\n        nextRange();\n      }\n\n      // if the new upper bound is before the term parameter, the sub-range is never a hit\n      if (term != null && term.compareTo(currentUpperBound) > 0) {\n        nextRange();\n        if (!rangeBounds.isEmpty()) {\n          continue;\n        }\n      }\n      // never seek backwards, so use current term if lower bound is smaller\n      return (term != null && term.compareTo(currentLowerBound) > 0) ?\n          term : currentLowerBound;\n    }\n\n    // no more sub-range enums available\n    assert rangeBounds.isEmpty();\n    currentLowerBound = currentUpperBound = null;\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a02003eb48495b52b8483703e1b6b48c099ec7d","date":1438767858,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#nextSeekTerm(BytesRef).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#nextSeekTerm(BytesRef).mjava","sourceNew":"  @Override\n  protected final BytesRef nextSeekTerm(BytesRef term) {\n    while (!rangeBounds.isEmpty()) {\n      if (currentRange == null) {\n        nextRange();\n      }\n\n      // if the new upper bound is before the term parameter, the sub-range is never a hit\n      if (term != null && term.compareTo(currentCell) > 0) {\n        nextRange();\n        if (!rangeBounds.isEmpty()) {\n          continue;\n        }\n      }\n      // never seek backwards, so use current term if lower bound is smaller\n      return (term != null && term.compareTo(currentCell) > 0) ?\n          term : currentCell;\n    }\n\n    // no more sub-range enums available\n    assert rangeBounds.isEmpty();\n    currentCell = null;\n    return null;\n  }\n\n","sourceOld":"  @Override\n  protected final BytesRef nextSeekTerm(BytesRef term) {\n    while (!rangeBounds.isEmpty()) {\n      if (currentRange == null) {\n        nextRange();\n      }\n\n      // if the new upper bound is before the term parameter, the sub-range is never a hit\n      if (term != null && term.compareTo(currentUpperBound) > 0) {\n        nextRange();\n        if (!rangeBounds.isEmpty()) {\n          continue;\n        }\n      }\n      // never seek backwards, so use current term if lower bound is smaller\n      return (term != null && term.compareTo(currentLowerBound) > 0) ?\n          term : currentLowerBound;\n    }\n\n    // no more sub-range enums available\n    assert rangeBounds.isEmpty();\n    currentLowerBound = currentUpperBound = null;\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21ce00df6a102f95fe2ba6a6d1e28e0ed7b13599","date":1441910781,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#nextSeekTerm(BytesRef).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#nextSeekTerm(BytesRef).mjava","sourceNew":"  @Override\n  protected final BytesRef nextSeekTerm(BytesRef term) {\n    while (!rangeBounds.isEmpty()) {\n      if (currentRange == null) {\n        nextRange();\n      }\n\n      // if the new upper bound is before the term parameter, the sub-range is never a hit\n      if (term != null && term.compareTo(currentCell.get()) > 0) {\n        nextRange();\n        if (!rangeBounds.isEmpty()) {\n          continue;\n        }\n      }\n      // never seek backwards, so use current term if lower bound is smaller\n      return (term != null && term.compareTo(currentCell.get()) > 0) ?\n          term : currentCell.get();\n    }\n\n    // no more sub-range enums available\n    assert rangeBounds.isEmpty();\n    return null;\n  }\n\n","sourceOld":"  @Override\n  protected final BytesRef nextSeekTerm(BytesRef term) {\n    while (!rangeBounds.isEmpty()) {\n      if (currentRange == null) {\n        nextRange();\n      }\n\n      // if the new upper bound is before the term parameter, the sub-range is never a hit\n      if (term != null && term.compareTo(currentCell) > 0) {\n        nextRange();\n        if (!rangeBounds.isEmpty()) {\n          continue;\n        }\n      }\n      // never seek backwards, so use current term if lower bound is smaller\n      return (term != null && term.compareTo(currentCell) > 0) ?\n          term : currentCell;\n    }\n\n    // no more sub-range enums available\n    assert rangeBounds.isEmpty();\n    currentCell = null;\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointTermsEnum#nextSeekTerm(BytesRef).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#nextSeekTerm(BytesRef).mjava","sourceNew":"  @Override\n  protected final BytesRef nextSeekTerm(BytesRef term) {\n    while (!rangeBounds.isEmpty()) {\n      if (currentRange == null) {\n        nextRange();\n      }\n\n      // if the new upper bound is before the term parameter, the sub-range is never a hit\n      if (term != null && term.compareTo(currentCell.get()) > 0) {\n        nextRange();\n        if (!rangeBounds.isEmpty()) {\n          continue;\n        }\n      }\n      // never seek backwards, so use current term if lower bound is smaller\n      return (term != null && term.compareTo(currentCell.get()) > 0) ?\n          term : currentCell.get();\n    }\n\n    // no more sub-range enums available\n    assert rangeBounds.isEmpty();\n    return null;\n  }\n\n","sourceOld":"  @Override\n  protected final BytesRef nextSeekTerm(BytesRef term) {\n    while (!rangeBounds.isEmpty()) {\n      if (currentRange == null) {\n        nextRange();\n      }\n\n      // if the new upper bound is before the term parameter, the sub-range is never a hit\n      if (term != null && term.compareTo(currentCell.get()) > 0) {\n        nextRange();\n        if (!rangeBounds.isEmpty()) {\n          continue;\n        }\n      }\n      // never seek backwards, so use current term if lower bound is smaller\n      return (term != null && term.compareTo(currentCell.get()) > 0) ?\n          term : currentCell.get();\n    }\n\n    // no more sub-range enums available\n    assert rangeBounds.isEmpty();\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointNumericTermsEnum#nextSeekTerm(BytesRef).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#nextSeekTerm(BytesRef).mjava","sourceNew":"  @Override\n  protected final BytesRef nextSeekTerm(BytesRef term) {\n    while (hasNext()) {\n      if (currentRange == null) {\n        nextRange();\n      }\n      // if the new upper bound is before the term parameter, the sub-range is never a hit\n      if (term != null && term.compareTo(currentCell) > 0) {\n        nextRange();\n        if (!rangeBounds.isEmpty()) {\n          continue;\n        }\n      }\n      // never seek backwards, so use current term if lower bound is smaller\n      return (term != null && term.compareTo(currentCell) > 0) ? term : currentCell;\n    }\n\n    // no more sub-range enums available\n    assert rangeBounds.isEmpty();\n    return null;\n  }\n\n","sourceOld":"  @Override\n  protected final BytesRef nextSeekTerm(BytesRef term) {\n    while (!rangeBounds.isEmpty()) {\n      if (currentRange == null) {\n        nextRange();\n      }\n\n      // if the new upper bound is before the term parameter, the sub-range is never a hit\n      if (term != null && term.compareTo(currentCell.get()) > 0) {\n        nextRange();\n        if (!rangeBounds.isEmpty()) {\n          continue;\n        }\n      }\n      // never seek backwards, so use current term if lower bound is smaller\n      return (term != null && term.compareTo(currentCell.get()) > 0) ?\n          term : currentCell.get();\n    }\n\n    // no more sub-range enums available\n    assert rangeBounds.isEmpty();\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21ce00df6a102f95fe2ba6a6d1e28e0ed7b13599":["7a02003eb48495b52b8483703e1b6b48c099ec7d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["21ce00df6a102f95fe2ba6a6d1e28e0ed7b13599","937923083e4d137932336fc80f3d78758ff698a6"],"e91b7d9f5000faefb0e81b98e76ad5b9463283e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"937923083e4d137932336fc80f3d78758ff698a6":["21ce00df6a102f95fe2ba6a6d1e28e0ed7b13599"],"7a02003eb48495b52b8483703e1b6b48c099ec7d":["e91b7d9f5000faefb0e81b98e76ad5b9463283e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["937923083e4d137932336fc80f3d78758ff698a6"]},"commit2Childs":{"21ce00df6a102f95fe2ba6a6d1e28e0ed7b13599":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e91b7d9f5000faefb0e81b98e76ad5b9463283e8"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"e91b7d9f5000faefb0e81b98e76ad5b9463283e8":["7a02003eb48495b52b8483703e1b6b48c099ec7d"],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7a02003eb48495b52b8483703e1b6b48c099ec7d":["21ce00df6a102f95fe2ba6a6d1e28e0ed7b13599"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}