{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","commits":[{"id":"b5438f921924c13c882efeac58b6d3a7c2a3978e","date":1400171541,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    if (lastDocID != -1) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"term appears in more than one document\");\n    }\n    if (termDocFreq != 1) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"term appears more than once in the document\");\n    }\n\n    lastDocID = docID;\n    lastPosition = -1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a16b40feb4e6e0d55c1716733bde48296bedd20","date":1400540388,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","sourceNew":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    if (lastDocID != -1) {\n      throw new IllegalArgumentException(\"term appears in more than one document\");\n    }\n    if (termDocFreq != 1) {\n      throw new IllegalArgumentException(\"term appears more than once in the document\");\n    }\n\n    lastDocID = docID;\n    lastPosition = -1;\n  }\n\n","sourceOld":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    if (lastDocID != -1) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"term appears in more than one document\");\n    }\n    if (termDocFreq != 1) {\n      // nocommit need test\n      throw new IllegalArgumentException(\"term appears more than once in the document\");\n    }\n\n    lastDocID = docID;\n    lastPosition = -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efcf27cd5ca23def8376b4c321970c14dd71623","date":1400662679,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","sourceNew":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    if (lastDocID != -1) {\n      throw new IllegalArgumentException(\"term appears in more than one document\");\n    }\n    if (termDocFreq != 1) {\n      throw new IllegalArgumentException(\"term appears more than once in the document\");\n    }\n\n    lastDocID = docID;\n    lastPosition = -1;\n    lastVersion = -1;\n  }\n\n","sourceOld":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    if (lastDocID != -1) {\n      throw new IllegalArgumentException(\"term appears in more than one document\");\n    }\n    if (termDocFreq != 1) {\n      throw new IllegalArgumentException(\"term appears more than once in the document\");\n    }\n\n    lastDocID = docID;\n    lastPosition = -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2a0b58a171748f1022e63a0483908e6f50b0abf","date":1400686165,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","sourceNew":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    if (state.liveDocs != null && state.liveDocs.get(docID) == false) {\n      return;\n    }\n    if (lastDocID != -1) {\n      throw new IllegalArgumentException(\"term appears in more than one document\");\n    }\n    if (termDocFreq != 1) {\n      throw new IllegalArgumentException(\"term appears more than once in the document\");\n    }\n\n    lastDocID = docID;\n    lastPosition = -1;\n    lastVersion = -1;\n  }\n\n","sourceOld":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    if (lastDocID != -1) {\n      throw new IllegalArgumentException(\"term appears in more than one document\");\n    }\n    if (termDocFreq != 1) {\n      throw new IllegalArgumentException(\"term appears more than once in the document\");\n    }\n\n    lastDocID = docID;\n    lastPosition = -1;\n    lastVersion = -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20","date":1400712483,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","sourceNew":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    // TODO: LUCENE-5693: we don't need this check if we fix IW to not send deleted docs to us on flush:\n    if (state.liveDocs != null && state.liveDocs.get(docID) == false) {\n      return;\n    }\n    if (lastDocID != -1) {\n      throw new IllegalArgumentException(\"term appears in more than one document\");\n    }\n    if (termDocFreq != 1) {\n      throw new IllegalArgumentException(\"term appears more than once in the document\");\n    }\n\n    lastDocID = docID;\n    lastPosition = -1;\n    lastVersion = -1;\n  }\n\n","sourceOld":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    if (state.liveDocs != null && state.liveDocs.get(docID) == false) {\n      return;\n    }\n    if (lastDocID != -1) {\n      throw new IllegalArgumentException(\"term appears in more than one document\");\n    }\n    if (termDocFreq != 1) {\n      throw new IllegalArgumentException(\"term appears more than once in the document\");\n    }\n\n    lastDocID = docID;\n    lastPosition = -1;\n    lastVersion = -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsWriter#startDoc(int,int).mjava","sourceNew":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    // TODO: LUCENE-5693: we don't need this check if we fix IW to not send deleted docs to us on flush:\n    if (state.liveDocs != null && state.liveDocs.get(docID) == false) {\n      return;\n    }\n    if (lastDocID != -1) {\n      throw new IllegalArgumentException(\"term appears in more than one document\");\n    }\n    if (termDocFreq != 1) {\n      throw new IllegalArgumentException(\"term appears more than once in the document\");\n    }\n\n    lastDocID = docID;\n    lastPosition = -1;\n    lastVersion = -1;\n  }\n\n","sourceOld":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    // TODO: LUCENE-5693: we don't need this check if we fix IW to not send deleted docs to us on flush:\n    if (state.liveDocs != null && state.liveDocs.get(docID) == false) {\n      return;\n    }\n    if (lastDocID != -1) {\n      throw new IllegalArgumentException(\"term appears in more than one document\");\n    }\n    if (termDocFreq != 1) {\n      throw new IllegalArgumentException(\"term appears more than once in the document\");\n    }\n\n    lastDocID = docID;\n    lastPosition = -1;\n    lastVersion = -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20"],"4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20":["a2a0b58a171748f1022e63a0483908e6f50b0abf"],"0a16b40feb4e6e0d55c1716733bde48296bedd20":["b5438f921924c13c882efeac58b6d3a7c2a3978e"],"0efcf27cd5ca23def8376b4c321970c14dd71623":["0a16b40feb4e6e0d55c1716733bde48296bedd20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a2a0b58a171748f1022e63a0483908e6f50b0abf":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"b5438f921924c13c882efeac58b6d3a7c2a3978e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":[],"4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"0a16b40feb4e6e0d55c1716733bde48296bedd20":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"0efcf27cd5ca23def8376b4c321970c14dd71623":["a2a0b58a171748f1022e63a0483908e6f50b0abf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5438f921924c13c882efeac58b6d3a7c2a3978e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a2a0b58a171748f1022e63a0483908e6f50b0abf":["4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20"],"b5438f921924c13c882efeac58b6d3a7c2a3978e":["0a16b40feb4e6e0d55c1716733bde48296bedd20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}