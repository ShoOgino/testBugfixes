{"path":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#assertFilterEquals(Filter,Filter).mjava","commits":[{"id":"49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161","date":1378462032,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#assertFilterEquals(Filter,Filter).mjava","pathOld":"/dev/null","sourceNew":"  private void assertFilterEquals(Filter f1, Filter f2) throws Exception {\n    Query query = new MatchAllDocsQuery();\n    TopDocs hits1 = is.search(query, f1, ir.maxDoc());\n    TopDocs hits2 = is.search(query, f2, ir.maxDoc());\n    assertEquals(hits1.totalHits, hits2.totalHits);\n    CheckHits.checkEqual(query, hits1.scoreDocs, hits2.scoreDocs);\n    // now do it again to confirm caching works\n    TopDocs hits3 = is.search(query, f1, ir.maxDoc());\n    TopDocs hits4 = is.search(query, f2, ir.maxDoc());\n    assertEquals(hits3.totalHits, hits4.totalHits);\n    CheckHits.checkEqual(query, hits3.scoreDocs, hits4.scoreDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#assertFilterEquals(Filter,Filter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#assertFilterEquals(Filter,Filter).mjava","sourceNew":"  private void assertFilterEquals(Filter f1, Filter f2) throws Exception {\n    Query query = new MatchAllDocsQuery();\n    TopDocs hits1 = is.search(new FilteredQuery(query, f1), ir.maxDoc());\n    TopDocs hits2 = is.search(new FilteredQuery(query, f2), ir.maxDoc());\n    assertEquals(hits1.totalHits, hits2.totalHits);\n    CheckHits.checkEqual(query, hits1.scoreDocs, hits2.scoreDocs);\n    // now do it again to confirm caching works\n    TopDocs hits3 = is.search(new FilteredQuery(query, f1), ir.maxDoc());\n    TopDocs hits4 = is.search(new FilteredQuery(query, f2), ir.maxDoc());\n    assertEquals(hits3.totalHits, hits4.totalHits);\n    CheckHits.checkEqual(query, hits3.scoreDocs, hits4.scoreDocs);\n  }\n\n","sourceOld":"  private void assertFilterEquals(Filter f1, Filter f2) throws Exception {\n    Query query = new MatchAllDocsQuery();\n    TopDocs hits1 = is.search(query, f1, ir.maxDoc());\n    TopDocs hits2 = is.search(query, f2, ir.maxDoc());\n    assertEquals(hits1.totalHits, hits2.totalHits);\n    CheckHits.checkEqual(query, hits1.scoreDocs, hits2.scoreDocs);\n    // now do it again to confirm caching works\n    TopDocs hits3 = is.search(query, f1, ir.maxDoc());\n    TopDocs hits4 = is.search(query, f2, ir.maxDoc());\n    assertEquals(hits3.totalHits, hits4.totalHits);\n    CheckHits.checkEqual(query, hits3.scoreDocs, hits4.scoreDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#assertFilterEquals(Filter,Filter).mjava","sourceNew":null,"sourceOld":"  private void assertFilterEquals(Filter f1, Filter f2) throws Exception {\n    Query query = new MatchAllDocsQuery();\n    TopDocs hits1 = is.search(new FilteredQuery(query, f1), ir.maxDoc());\n    TopDocs hits2 = is.search(new FilteredQuery(query, f2), ir.maxDoc());\n    assertEquals(hits1.totalHits, hits2.totalHits);\n    CheckHits.checkEqual(query, hits1.scoreDocs, hits2.scoreDocs);\n    // now do it again to confirm caching works\n    TopDocs hits3 = is.search(new FilteredQuery(query, f1), ir.maxDoc());\n    TopDocs hits4 = is.search(new FilteredQuery(query, f2), ir.maxDoc());\n    assertEquals(hits3.totalHits, hits4.totalHits);\n    CheckHits.checkEqual(query, hits3.scoreDocs, hits4.scoreDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestCachingWrapperFilter#assertFilterEquals(Filter,Filter).mjava","sourceNew":null,"sourceOld":"  private void assertFilterEquals(Filter f1, Filter f2) throws Exception {\n    Query query = new MatchAllDocsQuery();\n    TopDocs hits1 = is.search(new FilteredQuery(query, f1), ir.maxDoc());\n    TopDocs hits2 = is.search(new FilteredQuery(query, f2), ir.maxDoc());\n    assertEquals(hits1.totalHits, hits2.totalHits);\n    CheckHits.checkEqual(query, hits1.scoreDocs, hits2.scoreDocs);\n    // now do it again to confirm caching works\n    TopDocs hits3 = is.search(new FilteredQuery(query, f1), ir.maxDoc());\n    TopDocs hits4 = is.search(new FilteredQuery(query, f2), ir.maxDoc());\n    assertEquals(hits3.totalHits, hits4.totalHits);\n    CheckHits.checkEqual(query, hits3.scoreDocs, hits4.scoreDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161"],"49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}