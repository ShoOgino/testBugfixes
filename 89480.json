{"path":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorLeafCollector#MultiComparatorLeafCollector(LeafFieldComparator[],int[],boolean).mjava","commits":[{"id":"0ef4d3aeb733ae886f562af3b735f50503926a12","date":1438854939,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorLeafCollector#MultiComparatorLeafCollector(LeafFieldComparator[],int[],boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorLeafCollector#MultiComparatorLeafCollector(LeafFieldComparator[],int[]).mjava","sourceNew":"    MultiComparatorLeafCollector(LeafFieldComparator[] comparators, int[] reverseMul, boolean mayNeedScoresTwice) {\n      this.comparators = comparators;\n      this.reverseMul = reverseMul;\n      firstComparator = comparators[0];\n      firstReverseMul = reverseMul[0];\n      this.mayNeedScoresTwice = mayNeedScoresTwice;\n    }\n\n","sourceOld":"    MultiComparatorLeafCollector(LeafFieldComparator[] comparators, int[] reverseMul) {\n      this.comparators = comparators;\n      this.reverseMul = reverseMul;\n      firstComparator = comparators[0];\n      firstReverseMul = reverseMul[0];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3f4b84749cf975e026f3cd024d9f2911e0cc2e0","date":1488289604,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorLeafCollector#MultiComparatorLeafCollector(LeafFieldComparator[],int[],boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorLeafCollector#MultiComparatorLeafCollector(LeafFieldComparator[],int[],boolean).mjava","sourceNew":"    MultiComparatorLeafCollector(LeafFieldComparator[] comparators, int[] reverseMul, boolean mayNeedScoresTwice) {\n      if (comparators.length == 1) {\n        this.reverseMul = reverseMul[0];\n        this.comparator = comparators[0];\n      } else {\n        this.reverseMul = 1;\n        this.comparator = new MultiLeafFieldComparator(comparators, reverseMul);\n      }\n      this.mayNeedScoresTwice = mayNeedScoresTwice;\n    }\n\n","sourceOld":"    MultiComparatorLeafCollector(LeafFieldComparator[] comparators, int[] reverseMul, boolean mayNeedScoresTwice) {\n      this.comparators = comparators;\n      this.reverseMul = reverseMul;\n      firstComparator = comparators[0];\n      firstReverseMul = reverseMul[0];\n      this.mayNeedScoresTwice = mayNeedScoresTwice;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d3f7ab1a502671bbdb03bcced21e764d2483221","date":1532329609,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorLeafCollector#MultiComparatorLeafCollector(LeafFieldComparator[],int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector.MultiComparatorLeafCollector#MultiComparatorLeafCollector(LeafFieldComparator[],int[],boolean).mjava","sourceNew":"    MultiComparatorLeafCollector(LeafFieldComparator[] comparators, int[] reverseMul) {\n      if (comparators.length == 1) {\n        this.reverseMul = reverseMul[0];\n        this.comparator = comparators[0];\n      } else {\n        this.reverseMul = 1;\n        this.comparator = new MultiLeafFieldComparator(comparators, reverseMul);\n      }\n    }\n\n","sourceOld":"    MultiComparatorLeafCollector(LeafFieldComparator[] comparators, int[] reverseMul, boolean mayNeedScoresTwice) {\n      if (comparators.length == 1) {\n        this.reverseMul = reverseMul[0];\n        this.comparator = comparators[0];\n      } else {\n        this.reverseMul = 1;\n        this.comparator = new MultiLeafFieldComparator(comparators, reverseMul);\n      }\n      this.mayNeedScoresTwice = mayNeedScoresTwice;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a3f4b84749cf975e026f3cd024d9f2911e0cc2e0":["0ef4d3aeb733ae886f562af3b735f50503926a12"],"0ef4d3aeb733ae886f562af3b735f50503926a12":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["a3f4b84749cf975e026f3cd024d9f2911e0cc2e0"]},"commit2Childs":{"a3f4b84749cf975e026f3cd024d9f2911e0cc2e0":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"0ef4d3aeb733ae886f562af3b735f50503926a12":["a3f4b84749cf975e026f3cd024d9f2911e0cc2e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ef4d3aeb733ae886f562af3b735f50503926a12"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}