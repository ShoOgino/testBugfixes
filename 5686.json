{"path":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.binaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return toInt(arr);\n      case FLOAT:\n        return toFloat(arr);\n      case LONG:\n        return toLong(arr);\n      case DOUBLE:\n        return toDouble(arr);\n      case DATE:\n        return new Date(toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.binaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return toInt(arr);\n      case FLOAT:\n        return toFloat(arr);\n      case LONG:\n        return toLong(arr);\n      case DOUBLE:\n        return toDouble(arr);\n      case DATE:\n        return new Date(toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return toInt(arr);\n      case FLOAT:\n        return toFloat(arr);\n      case LONG:\n        return toLong(arr);\n      case DOUBLE:\n        return toDouble(arr);\n      case DATE:\n        return new Date(toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return toInt(arr);\n      case FLOAT:\n        return toFloat(arr);\n      case LONG:\n        return toLong(arr);\n      case DOUBLE:\n        return toDouble(arr);\n      case DATE:\n        return new Date(toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return toInt(arr);\n      case FLOAT:\n        return toFloat(arr);\n      case LONG:\n        return toLong(arr);\n      case DOUBLE:\n        return toDouble(arr);\n      case DATE:\n        return new Date(toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"beacd02a2fd0d9fb0281b75fb7b3f1b40254f286","date":1301420518,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return TrieFieldHelper.toInt(arr);\n      case FLOAT:\n        return TrieFieldHelper.toFloat(arr);\n      case LONG:\n        return TrieFieldHelper.toLong(arr);\n      case DOUBLE:\n        return TrieFieldHelper.toDouble(arr);\n      case DATE:\n        return new Date(TrieFieldHelper.toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return toInt(arr);\n      case FLOAT:\n        return toFloat(arr);\n      case LONG:\n        return toLong(arr);\n      case DOUBLE:\n        return toDouble(arr);\n      case DATE:\n        return new Date(toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return TrieFieldHelper.toInt(arr);\n      case FLOAT:\n        return TrieFieldHelper.toFloat(arr);\n      case LONG:\n        return TrieFieldHelper.toLong(arr);\n      case DOUBLE:\n        return TrieFieldHelper.toDouble(arr);\n      case DATE:\n        return new Date(TrieFieldHelper.toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return toInt(arr);\n      case FLOAT:\n        return toFloat(arr);\n      case LONG:\n        return toLong(arr);\n      case DOUBLE:\n        return toDouble(arr);\n      case DATE:\n        return new Date(toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return TrieFieldHelper.toInt(arr);\n      case FLOAT:\n        return TrieFieldHelper.toFloat(arr);\n      case LONG:\n        return TrieFieldHelper.toLong(arr);\n      case DOUBLE:\n        return TrieFieldHelper.toDouble(arr);\n      case DATE:\n        return new Date(TrieFieldHelper.toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return toInt(arr);\n      case FLOAT:\n        return toFloat(arr);\n      case LONG:\n        return toLong(arr);\n      case DOUBLE:\n        return toDouble(arr);\n      case DATE:\n        return new Date(toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab0e9f7ce724e6aea1fea746dded19e76d231cf8","date":1304774078,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    if (f instanceof NumericField) {\n      final Number val = ((NumericField) f).getNumericValue();\n      if (val==null) return badFieldString(f);\n      return (type == TrieTypes.DATE) ? new Date(val.longValue()) : val;\n    } else {\n      // the following code is \"deprecated\" and only to support pre-3.2 indexes using the old BinaryField encoding:\n      final byte[] arr = f.getBinaryValue();\n      if (arr==null) return badFieldString(f);\n      switch (type) {\n        case INTEGER:\n          return toInt(arr);\n        case FLOAT:\n          return Float.intBitsToFloat(toInt(arr));\n        case LONG:\n          return toLong(arr);\n        case DOUBLE:\n          return Double.longBitsToDouble(toLong(arr));\n        case DATE:\n          return new Date(toLong(arr));\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return TrieFieldHelper.toInt(arr);\n      case FLOAT:\n        return TrieFieldHelper.toFloat(arr);\n      case LONG:\n        return TrieFieldHelper.toLong(arr);\n      case DOUBLE:\n        return TrieFieldHelper.toDouble(arr);\n      case DATE:\n        return new Date(TrieFieldHelper.toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    if (f instanceof NumericField) {\n      final Number val = ((NumericField) f).getNumericValue();\n      if (val==null) return badFieldString(f);\n      return (type == TrieTypes.DATE) ? new Date(val.longValue()) : val;\n    } else {\n      // the following code is \"deprecated\" and only to support pre-3.2 indexes using the old BinaryField encoding:\n      final byte[] arr = f.getBinaryValue();\n      if (arr==null) return badFieldString(f);\n      switch (type) {\n        case INTEGER:\n          return toInt(arr);\n        case FLOAT:\n          return Float.intBitsToFloat(toInt(arr));\n        case LONG:\n          return toLong(arr);\n        case DOUBLE:\n          return Double.longBitsToDouble(toLong(arr));\n        case DATE:\n          return new Date(toLong(arr));\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return TrieFieldHelper.toInt(arr);\n      case FLOAT:\n        return TrieFieldHelper.toFloat(arr);\n      case LONG:\n        return TrieFieldHelper.toLong(arr);\n      case DOUBLE:\n        return TrieFieldHelper.toDouble(arr);\n      case DATE:\n        return new Date(TrieFieldHelper.toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    if (f instanceof NumericField) {\n      final Number val = ((NumericField) f).getNumericValue();\n      if (val==null) return badFieldString(f);\n      return (type == TrieTypes.DATE) ? new Date(val.longValue()) : val;\n    } else {\n      // the following code is \"deprecated\" and only to support pre-3.2 indexes using the old BinaryField encoding:\n      final byte[] arr = f.getBinaryValue();\n      if (arr==null) return badFieldString(f);\n      switch (type) {\n        case INTEGER:\n          return toInt(arr);\n        case FLOAT:\n          return Float.intBitsToFloat(toInt(arr));\n        case LONG:\n          return toLong(arr);\n        case DOUBLE:\n          return Double.longBitsToDouble(toLong(arr));\n        case DATE:\n          return new Date(toLong(arr));\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object toObject(Fieldable f) {\n    byte[] arr = f.getBinaryValue();\n    if (arr==null) return badFieldString(f);\n    switch (type) {\n      case INTEGER:\n        return TrieFieldHelper.toInt(arr);\n      case FLOAT:\n        return TrieFieldHelper.toFloat(arr);\n      case LONG:\n        return TrieFieldHelper.toLong(arr);\n      case DOUBLE:\n        return TrieFieldHelper.toDouble(arr);\n      case DATE:\n        return new Date(TrieFieldHelper.toLong(arr));\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    if (f instanceof NumericField) {\n      final Number val = ((NumericField) f).getNumericValue();\n      if (val==null) return badFieldString(f);\n      return (type == TrieTypes.DATE) ? new Date(val.longValue()) : val;\n    } else {\n      // the following code is \"deprecated\" and only to support pre-3.2 indexes using the old BinaryField encoding:\n      final byte[] arr = f.getBinaryValue();\n      if (arr==null) return badFieldString(f);\n      switch (type) {\n        case INTEGER:\n          return toInt(arr);\n        case FLOAT:\n          return Float.intBitsToFloat(toInt(arr));\n        case LONG:\n          return toLong(arr);\n        case DOUBLE:\n          return Double.longBitsToDouble(toLong(arr));\n        case DATE:\n          return new Date(toLong(arr));\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object toObject(Fieldable f) {\n    if (f instanceof NumericField) {\n      final Number val = ((NumericField) f).getNumericValue();\n      if (val==null) return badFieldString(f);\n      return (type == TrieTypes.DATE) ? new Date(val.longValue()) : val;\n    } else {\n      // the following code is \"deprecated\" and only to support pre-3.2 indexes using the old BinaryField encoding:\n      final byte[] arr = f.getBinaryValue();\n      if (arr==null) return badFieldString(f);\n      switch (type) {\n        case INTEGER:\n          return toInt(arr);\n        case FLOAT:\n          return Float.intBitsToFloat(toInt(arr));\n        case LONG:\n          return toLong(arr);\n        case DOUBLE:\n          return Double.longBitsToDouble(toLong(arr));\n        case DATE:\n          return new Date(toLong(arr));\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    if (f instanceof NumericField) {\n      final Number val = ((NumericField) f).getNumericValue();\n      if (val==null) return badFieldString(f);\n      return (type == TrieTypes.DATE) ? new Date(val.longValue()) : val;\n    } else {\n      // the following code is \"deprecated\" and only to support pre-3.2 indexes using the old BinaryField encoding:\n      final byte[] arr = f.getBinaryValue();\n      if (arr==null) return badFieldString(f);\n      switch (type) {\n        case INTEGER:\n          return toInt(arr);\n        case FLOAT:\n          return Float.intBitsToFloat(toInt(arr));\n        case LONG:\n          return toLong(arr);\n        case DOUBLE:\n          return Double.longBitsToDouble(toLong(arr));\n        case DATE:\n          return new Date(toLong(arr));\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object toObject(Fieldable f) {\n    if (f instanceof NumericField) {\n      final Number val = ((NumericField) f).getNumericValue();\n      if (val==null) return badFieldString(f);\n      return (type == TrieTypes.DATE) ? new Date(val.longValue()) : val;\n    } else {\n      // the following code is \"deprecated\" and only to support pre-3.2 indexes using the old BinaryField encoding:\n      final byte[] arr = f.getBinaryValue();\n      if (arr==null) return badFieldString(f);\n      switch (type) {\n        case INTEGER:\n          return toInt(arr);\n        case FLOAT:\n          return Float.intBitsToFloat(toInt(arr));\n        case LONG:\n          return toLong(arr);\n        case DOUBLE:\n          return Double.longBitsToDouble(toLong(arr));\n        case DATE:\n          return new Date(toLong(arr));\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","pathOld":"solr/src/java/org/apache/solr/schema/TrieField#toObject(Fieldable).mjava","sourceNew":"  @Override\n  public Object toObject(Fieldable f) {\n    if (f instanceof NumericField) {\n      final Number val = ((NumericField) f).getNumericValue();\n      if (val==null) return badFieldString(f);\n      return (type == TrieTypes.DATE) ? new Date(val.longValue()) : val;\n    } else {\n      // the following code is \"deprecated\" and only to support pre-3.2 indexes using the old BinaryField encoding:\n      final byte[] arr = f.getBinaryValue();\n      if (arr==null) return badFieldString(f);\n      switch (type) {\n        case INTEGER:\n          return toInt(arr);\n        case FLOAT:\n          return Float.intBitsToFloat(toInt(arr));\n        case LONG:\n          return toLong(arr);\n        case DOUBLE:\n          return Double.longBitsToDouble(toLong(arr));\n        case DATE:\n          return new Date(toLong(arr));\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object toObject(Fieldable f) {\n    if (f instanceof NumericField) {\n      final Number val = ((NumericField) f).getNumericValue();\n      if (val==null) return badFieldString(f);\n      return (type == TrieTypes.DATE) ? new Date(val.longValue()) : val;\n    } else {\n      // the following code is \"deprecated\" and only to support pre-3.2 indexes using the old BinaryField encoding:\n      final byte[] arr = f.getBinaryValue();\n      if (arr==null) return badFieldString(f);\n      switch (type) {\n        case INTEGER:\n          return toInt(arr);\n        case FLOAT:\n          return Float.intBitsToFloat(toInt(arr));\n        case LONG:\n          return toLong(arr);\n        case DOUBLE:\n          return Double.longBitsToDouble(toLong(arr));\n        case DATE:\n          return new Date(toLong(arr));\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + f.name());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab0e9f7ce724e6aea1fea746dded19e76d231cf8":["beacd02a2fd0d9fb0281b75fb7b3f1b40254f286"],"beacd02a2fd0d9fb0281b75fb7b3f1b40254f286":["1da8d55113b689b06716246649de6f62430f15c0"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["ab0e9f7ce724e6aea1fea746dded19e76d231cf8","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["1da8d55113b689b06716246649de6f62430f15c0","beacd02a2fd0d9fb0281b75fb7b3f1b40254f286"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":["beacd02a2fd0d9fb0281b75fb7b3f1b40254f286","ab0e9f7ce724e6aea1fea746dded19e76d231cf8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["135621f3a0670a9394eb563224a3b76cc4dddc0f","ab0e9f7ce724e6aea1fea746dded19e76d231cf8"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["ab0e9f7ce724e6aea1fea746dded19e76d231cf8"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"45669a651c970812a680841b97a77cce06af559f":["1da8d55113b689b06716246649de6f62430f15c0","beacd02a2fd0d9fb0281b75fb7b3f1b40254f286"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"ab0e9f7ce724e6aea1fea746dded19e76d231cf8":["c26f00b574427b55127e869b935845554afde1fa","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"beacd02a2fd0d9fb0281b75fb7b3f1b40254f286":["ab0e9f7ce724e6aea1fea746dded19e76d231cf8","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","45669a651c970812a680841b97a77cce06af559f"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"1da8d55113b689b06716246649de6f62430f15c0":["beacd02a2fd0d9fb0281b75fb7b3f1b40254f286","135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb","a258fbb26824fd104ed795e5d9033d2d040049ee","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}