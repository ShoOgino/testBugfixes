{"path":"lucene/core/src/java/org/apache/lucene/search/MaxScoreCache#ensureCacheSize(int).mjava","commits":[{"id":"6a692be6c8e120ef6dbfcd5dde3de42815813cd2","date":1525265372,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MaxScoreCache#ensureCacheSize(int).mjava","pathOld":"/dev/null","sourceNew":"  private void ensureCacheSize(int size) {\n    if (maxScoreCache.length < size) {\n      int oldLength = maxScoreCache.length;\n      maxScoreCache = ArrayUtil.grow(maxScoreCache, size);\n      maxScoreCacheUpTo = Arrays.copyOf(maxScoreCacheUpTo, maxScoreCache.length);\n      Arrays.fill(maxScoreCacheUpTo, oldLength, maxScoreCacheUpTo.length, -1);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9798d0818e7a880546802b509792d3f3d57babd2","date":1528358901,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MaxScoreCache#ensureCacheSize(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MaxScoreCache#ensureCacheSize(int).mjava","sourceNew":"  private void ensureCacheSize(int size) {\n    if (maxScoreCache.length < size) {\n      int oldLength = maxScoreCache.length;\n      maxScoreCache = ArrayUtil.grow(maxScoreCache, size);\n      maxScoreCacheUpTo = ArrayUtil.growExact(maxScoreCacheUpTo, maxScoreCache.length);\n      Arrays.fill(maxScoreCacheUpTo, oldLength, maxScoreCacheUpTo.length, -1);\n    }\n  }\n\n","sourceOld":"  private void ensureCacheSize(int size) {\n    if (maxScoreCache.length < size) {\n      int oldLength = maxScoreCache.length;\n      maxScoreCache = ArrayUtil.grow(maxScoreCache, size);\n      maxScoreCacheUpTo = Arrays.copyOf(maxScoreCacheUpTo, maxScoreCache.length);\n      Arrays.fill(maxScoreCacheUpTo, oldLength, maxScoreCacheUpTo.length, -1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MaxScoreCache#ensureCacheSize(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MaxScoreCache#ensureCacheSize(int).mjava","sourceNew":"  private void ensureCacheSize(int size) {\n    if (maxScoreCache.length < size) {\n      int oldLength = maxScoreCache.length;\n      maxScoreCache = ArrayUtil.grow(maxScoreCache, size);\n      maxScoreCacheUpTo = ArrayUtil.growExact(maxScoreCacheUpTo, maxScoreCache.length);\n      Arrays.fill(maxScoreCacheUpTo, oldLength, maxScoreCacheUpTo.length, -1);\n    }\n  }\n\n","sourceOld":"  private void ensureCacheSize(int size) {\n    if (maxScoreCache.length < size) {\n      int oldLength = maxScoreCache.length;\n      maxScoreCache = ArrayUtil.grow(maxScoreCache, size);\n      maxScoreCacheUpTo = Arrays.copyOf(maxScoreCacheUpTo, maxScoreCache.length);\n      Arrays.fill(maxScoreCacheUpTo, oldLength, maxScoreCacheUpTo.length, -1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MaxScoreCache#ensureCacheSize(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MaxScoreCache#ensureCacheSize(int).mjava","sourceNew":"  private void ensureCacheSize(int size) {\n    if (maxScoreCache.length < size) {\n      int oldLength = maxScoreCache.length;\n      maxScoreCache = ArrayUtil.grow(maxScoreCache, size);\n      maxScoreCacheUpTo = ArrayUtil.growExact(maxScoreCacheUpTo, maxScoreCache.length);\n      Arrays.fill(maxScoreCacheUpTo, oldLength, maxScoreCacheUpTo.length, -1);\n    }\n  }\n\n","sourceOld":"  private void ensureCacheSize(int size) {\n    if (maxScoreCache.length < size) {\n      int oldLength = maxScoreCache.length;\n      maxScoreCache = ArrayUtil.grow(maxScoreCache, size);\n      maxScoreCacheUpTo = Arrays.copyOf(maxScoreCacheUpTo, maxScoreCache.length);\n      Arrays.fill(maxScoreCacheUpTo, oldLength, maxScoreCacheUpTo.length, -1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2","9798d0818e7a880546802b509792d3f3d57babd2"],"9798d0818e7a880546802b509792d3f3d57babd2":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9798d0818e7a880546802b509792d3f3d57babd2"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2","9798d0818e7a880546802b509792d3f3d57babd2"]},"commit2Childs":{"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["b70042a8a492f7054d480ccdd2be9796510d4327","9798d0818e7a880546802b509792d3f3d57babd2","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"9798d0818e7a880546802b509792d3f3d57babd2":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}