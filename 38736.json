{"path":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#like(File).mjava","commits":[{"id":"aa8dcd4adc562c6e8da67c42872ef9194f8598fa","date":1108145465,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#like(File).mjava","pathOld":"sandbox/contributions/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#like(File).mjava","sourceNew":"    /**\n     * Return a query that will return docs like the passed file.\n     *\n     * @return a query that will return docs like the passed file.\n     */\n    public Query like(File f) throws IOException {\n        if (fieldNames == null) {\n            // gather list of valid fields from lucene\n            Collection fields = ir.getFieldNames(true);\n            fieldNames = (String[]) fields.toArray(new String[fields.size()]);\n        }\n\n        return like(new FileReader(f));\n    }\n\n","sourceOld":"    /**\n     * Return a query that will return docs like the passed file.\n     *\n     * @return a query that will return docs like the passed file.\n     */\n    public Query like(File f) throws IOException {\n        if (fieldNames == null) {\n            // gather list of valid fields from lucene\n            Collection fields = ir.getFieldNames(true);\n            fieldNames = (String[]) fields.toArray(new String[fields.size()]);\n        }\n\n        return like(new FileReader(f));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3325ce8a598131ba0bba95ca44f88e41826d2ff2","date":1115674582,"type":3,"author":"David Spencer","isMerge":false,"pathNew":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#like(File).mjava","pathOld":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#like(File).mjava","sourceNew":"    /**\n     * Return a query that will return docs like the passed file.\n     *\n     * @return a query that will return docs like the passed file.\n     */\n    public Query like(File f) throws IOException {\n        if (fieldNames == null) {\n            // gather list of valid fields from lucene\n            Collection fields = ir.getFieldNames( IndexReader.FieldOption.INDEXED);\n            fieldNames = (String[]) fields.toArray(new String[fields.size()]);\n        }\n\n        return like(new FileReader(f));\n    }\n\n","sourceOld":"    /**\n     * Return a query that will return docs like the passed file.\n     *\n     * @return a query that will return docs like the passed file.\n     */\n    public Query like(File f) throws IOException {\n        if (fieldNames == null) {\n            // gather list of valid fields from lucene\n            Collection fields = ir.getFieldNames(true);\n            fieldNames = (String[]) fields.toArray(new String[fields.size()]);\n        }\n\n        return like(new FileReader(f));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f49ac1854a94b947e36bbdaffa355cb7707aa768","date":1164746802,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#like(File).mjava","sourceNew":null,"sourceOld":"    /**\n     * Return a query that will return docs like the passed file.\n     *\n     * @return a query that will return docs like the passed file.\n     */\n    public Query like(File f) throws IOException {\n        if (fieldNames == null) {\n            // gather list of valid fields from lucene\n            Collection fields = ir.getFieldNames( IndexReader.FieldOption.INDEXED);\n            fieldNames = (String[]) fields.toArray(new String[fields.size()]);\n        }\n\n        return like(new FileReader(f));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f49ac1854a94b947e36bbdaffa355cb7707aa768":["3325ce8a598131ba0bba95ca44f88e41826d2ff2"],"aa8dcd4adc562c6e8da67c42872ef9194f8598fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3325ce8a598131ba0bba95ca44f88e41826d2ff2":["aa8dcd4adc562c6e8da67c42872ef9194f8598fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f49ac1854a94b947e36bbdaffa355cb7707aa768"]},"commit2Childs":{"f49ac1854a94b947e36bbdaffa355cb7707aa768":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aa8dcd4adc562c6e8da67c42872ef9194f8598fa":["3325ce8a598131ba0bba95ca44f88e41826d2ff2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa8dcd4adc562c6e8da67c42872ef9194f8598fa"],"3325ce8a598131ba0bba95ca44f88e41826d2ff2":["f49ac1854a94b947e36bbdaffa355cb7707aa768"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}