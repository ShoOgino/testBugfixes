{"path":"solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper#getCommitTimestamp(IndexCommit).mjava","commits":[{"id":"c01638f4dd94981c1d3d52c4f7991246a5a24aba","date":1327876712,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper#getCommitTimestamp(IndexCommit).mjava","pathOld":"/dev/null","sourceNew":"  public static long getCommitTimestamp(IndexCommit commit) throws IOException {\n    final Map<String,String> commitData = commit.getUserData();\n    String commitTime = commitData.get(SolrIndexWriter.COMMIT_TIME_MSEC_KEY);\n    if (commitTime != null) {\n      return Long.parseLong(commitTime);\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper#getCommitTimestamp(IndexCommit).mjava","pathOld":"/dev/null","sourceNew":"  public static long getCommitTimestamp(IndexCommit commit) throws IOException {\n    final Map<String,String> commitData = commit.getUserData();\n    String commitTime = commitData.get(SolrIndexWriter.COMMIT_TIME_MSEC_KEY);\n    if (commitTime != null) {\n      return Long.parseLong(commitTime);\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper#getCommitTimestamp(IndexCommit).mjava","pathOld":"/dev/null","sourceNew":"  public static long getCommitTimestamp(IndexCommit commit) throws IOException {\n    final Map<String,String> commitData = commit.getUserData();\n    String commitTime = commitData.get(SolrIndexWriter.COMMIT_TIME_MSEC_KEY);\n    if (commitTime != null) {\n      return Long.parseLong(commitTime);\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19f02bb04467ed179738a398a7da80bbbe161c16","date":1573660732,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper#getCommitTimestamp(IndexCommit).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper#getCommitTimestamp(IndexCommit).mjava","sourceNew":"  /**\n   * Helper method for unpacking the timestamp infor from the user data \n   * @see SolrIndexWriter#COMMIT_TIME_MSEC_KEY\n   * @see IndexCommit#getUserData\n   */\n  public static long getCommitTimestamp(IndexCommit commit) throws IOException {\n    final Map<String,String> commitData = commit.getUserData();\n    String commitTime = commitData.get(SolrIndexWriter.COMMIT_TIME_MSEC_KEY);\n    if (commitTime != null) {\n      return Long.parseLong(commitTime);\n    } else {\n      return 0;\n    }\n  }\n\n","sourceOld":"  public static long getCommitTimestamp(IndexCommit commit) throws IOException {\n    final Map<String,String> commitData = commit.getUserData();\n    String commitTime = commitData.get(SolrIndexWriter.COMMIT_TIME_MSEC_KEY);\n    if (commitTime != null) {\n      return Long.parseLong(commitTime);\n    } else {\n      return 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"19f02bb04467ed179738a398a7da80bbbe161c16":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19f02bb04467ed179738a398a7da80bbbe161c16"]},"commit2Childs":{"c01638f4dd94981c1d3d52c4f7991246a5a24aba":["817882884229bace7dc5d1b75f6b0e4aa1e47122","19f02bb04467ed179738a398a7da80bbbe161c16","5b6fdfce35d0adb18836cf8711abe487a934df33"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"19f02bb04467ed179738a398a7da80bbbe161c16":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c01638f4dd94981c1d3d52c4f7991246a5a24aba","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}