{"path":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#tearDown().mjava","commits":[{"id":"9d22d0f5940f155267b250876fa797ff69e8e6e7","date":1400540695,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#tearDown().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (!proxies.isEmpty()) {\n      for (SocketProxy proxy : proxies.values()) {\n        proxy.close();\n      }\n    }\n    \n    System.clearProperty(\"numShards\");\n    \n    try {\n      super.tearDown();\n    } catch (Exception exc) {}\n    \n    resetExceptionIgnores();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#tearDown().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (!proxies.isEmpty()) {\n      for (SocketProxy proxy : proxies.values()) {\n        proxy.close();\n      }\n    }\n    \n    System.clearProperty(\"numShards\");\n    \n    try {\n      super.tearDown();\n    } catch (Exception exc) {}\n    \n    resetExceptionIgnores();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e975e216b07323847d23dc787d8d50c350d3cc4","date":1403540768,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#tearDown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#tearDown().mjava","sourceNew":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    \n    log.info(\"tearing down replicationFactorTest!\");\n    \n    System.clearProperty(\"numShards\");\n    \n    try {\n      super.tearDown();\n    } catch (Exception exc) {}\n    \n    resetExceptionIgnores();    \n    \n    log.info(\"super.tearDown complete, closing all socket proxies\");\n    if (!proxies.isEmpty()) {\n      for (SocketProxy proxy : proxies.values()) {\n        proxy.close();\n      }\n    }    \n  }\n\n","sourceOld":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    if (!proxies.isEmpty()) {\n      for (SocketProxy proxy : proxies.values()) {\n        proxy.close();\n      }\n    }\n    \n    System.clearProperty(\"numShards\");\n    \n    try {\n      super.tearDown();\n    } catch (Exception exc) {}\n    \n    resetExceptionIgnores();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#distribTearDown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#tearDown().mjava","sourceNew":"  @Override\n  public void distribTearDown() throws Exception {\n    \n    log.info(\"tearing down replicationFactorTest!\");\n    \n    System.clearProperty(\"numShards\");\n    \n    super.distribTearDown();\n\n    log.info(\"super.distribTearDown complete, closing all socket proxies\");\n    if (!proxies.isEmpty()) {\n      for (SocketProxy proxy : proxies.values()) {\n        proxy.close();\n      }\n    }    \n  }\n\n","sourceOld":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    \n    log.info(\"tearing down replicationFactorTest!\");\n    \n    System.clearProperty(\"numShards\");\n    \n    try {\n      super.tearDown();\n    } catch (Exception exc) {}\n    \n    resetExceptionIgnores();    \n    \n    log.info(\"super.tearDown complete, closing all socket proxies\");\n    if (!proxies.isEmpty()) {\n      for (SocketProxy proxy : proxies.values()) {\n        proxy.close();\n      }\n    }    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9d22d0f5940f155267b250876fa797ff69e8e6e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"abb23fcc2461782ab204e61213240feb77d355aa":["0e975e216b07323847d23dc787d8d50c350d3cc4"],"0e975e216b07323847d23dc787d8d50c350d3cc4":["9d22d0f5940f155267b250876fa797ff69e8e6e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7605579001505896d48b07160075a5c8b8e128e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d22d0f5940f155267b250876fa797ff69e8e6e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["abb23fcc2461782ab204e61213240feb77d355aa"]},"commit2Childs":{"9d22d0f5940f155267b250876fa797ff69e8e6e7":["0e975e216b07323847d23dc787d8d50c350d3cc4","b7605579001505896d48b07160075a5c8b8e128e"],"abb23fcc2461782ab204e61213240feb77d355aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e975e216b07323847d23dc787d8d50c350d3cc4":["abb23fcc2461782ab204e61213240feb77d355aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9d22d0f5940f155267b250876fa797ff69e8e6e7","b7605579001505896d48b07160075a5c8b8e128e"],"b7605579001505896d48b07160075a5c8b8e128e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}