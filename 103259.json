{"path":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SrndTruncQuery#truncatedToPrefixAndPattern().mjava","commits":[{"id":"d04b321158481d3895702b3cbf6821a3083e6c15","date":1120530543,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SrndTruncQuery#truncatedToPrefixAndPattern().mjava","pathOld":"/dev/null","sourceNew":"  protected void truncatedToPrefixAndPattern() {\n    int i = 0;\n    while ((i < truncated.length()) && matchingChar(truncated.charAt(i))) {\n      i++;\n    }\n    prefix = truncated.substring(0, i);\n    \n    StringBuffer re = new StringBuffer();\n    while (i < truncated.length()) {\n      appendRegExpForChar(truncated.charAt(i), re);\n      i++;\n    }\n    pattern = Pattern.compile(re.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb28c22683d066d99c05cc045599bcb61532b122","date":1254611427,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SrndTruncQuery#truncatedToPrefixAndPattern().mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SrndTruncQuery#truncatedToPrefixAndPattern().mjava","sourceNew":"  protected void truncatedToPrefixAndPattern() {\n    int i = 0;\n    while ((i < truncated.length()) && matchingChar(truncated.charAt(i))) {\n      i++;\n    }\n    prefix = truncated.substring(0, i);\n    \n    StringBuilder re = new StringBuilder();\n    while (i < truncated.length()) {\n      appendRegExpForChar(truncated.charAt(i), re);\n      i++;\n    }\n    pattern = Pattern.compile(re.toString());\n  }\n\n","sourceOld":"  protected void truncatedToPrefixAndPattern() {\n    int i = 0;\n    while ((i < truncated.length()) && matchingChar(truncated.charAt(i))) {\n      i++;\n    }\n    prefix = truncated.substring(0, i);\n    \n    StringBuffer re = new StringBuffer();\n    while (i < truncated.length()) {\n      appendRegExpForChar(truncated.charAt(i), re);\n      i++;\n    }\n    pattern = Pattern.compile(re.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SrndTruncQuery#truncatedToPrefixAndPattern().mjava","pathOld":"contrib/surround/src/java/org/apache/lucene/queryParser/surround/query/SrndTruncQuery#truncatedToPrefixAndPattern().mjava","sourceNew":"  protected void truncatedToPrefixAndPattern() {\n    int i = 0;\n    while ((i < truncated.length()) && matchingChar(truncated.charAt(i))) {\n      i++;\n    }\n    prefix = truncated.substring(0, i);\n    \n    StringBuilder re = new StringBuilder();\n    while (i < truncated.length()) {\n      appendRegExpForChar(truncated.charAt(i), re);\n      i++;\n    }\n    pattern = Pattern.compile(re.toString());\n  }\n\n","sourceOld":"  protected void truncatedToPrefixAndPattern() {\n    int i = 0;\n    while ((i < truncated.length()) && matchingChar(truncated.charAt(i))) {\n      i++;\n    }\n    prefix = truncated.substring(0, i);\n    \n    StringBuilder re = new StringBuilder();\n    while (i < truncated.length()) {\n      appendRegExpForChar(truncated.charAt(i), re);\n      i++;\n    }\n    pattern = Pattern.compile(re.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb28c22683d066d99c05cc045599bcb61532b122":["d04b321158481d3895702b3cbf6821a3083e6c15"],"d04b321158481d3895702b3cbf6821a3083e6c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cb28c22683d066d99c05cc045599bcb61532b122"]},"commit2Childs":{"cb28c22683d066d99c05cc045599bcb61532b122":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d04b321158481d3895702b3cbf6821a3083e6c15":["cb28c22683d066d99c05cc045599bcb61532b122"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d04b321158481d3895702b3cbf6821a3083e6c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}