{"path":"solr/core/src/java/org/apache/solr/handler/StreamHandler#addExpressiblePlugins(StreamFactory,SolrCore).mjava","commits":[{"id":"c8d9cf2465512475832769aaccf03847a7847463","date":1579631606,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#addExpressiblePlugins(StreamFactory,SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public static void addExpressiblePlugins(StreamFactory streamFactory, SolrCore core) {\n    List<PluginInfo> pluginInfos = core.getSolrConfig().getPluginInfos(Expressible.class.getName());\n    for (PluginInfo pluginInfo : pluginInfos) {\n      if (pluginInfo.pkgName != null) {\n        ExpressibleHolder holder = new ExpressibleHolder(pluginInfo, core, SolrConfig.classVsSolrPluginInfo.get(Expressible.class));\n        streamFactory.withFunctionName(pluginInfo.name,\n            () -> holder.getClazz());\n      } else {\n        Class<? extends Expressible> clazz = core.getMemClassLoader().findClass(pluginInfo.className, Expressible.class);\n        streamFactory.withFunctionName(pluginInfo.name, clazz);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#addExpressiblePlugins(StreamFactory,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#addExpressiblePlugins(StreamFactory,SolrCore).mjava","sourceNew":"  public static void addExpressiblePlugins(StreamFactory streamFactory, SolrCore core) {\n    List<PluginInfo> pluginInfos = core.getSolrConfig().getPluginInfos(Expressible.class.getName());\n    for (PluginInfo pluginInfo : pluginInfos) {\n      if (pluginInfo.pkgName != null) {\n        @SuppressWarnings(\"resource\")\n        ExpressibleHolder holder = new ExpressibleHolder(pluginInfo, core, SolrConfig.classVsSolrPluginInfo.get(Expressible.class.getName()));\n        streamFactory.withFunctionName(pluginInfo.name,\n            () -> holder.getClazz());\n      } else {\n        Class<? extends Expressible> clazz = core.getMemClassLoader().findClass(pluginInfo.className, Expressible.class);\n        streamFactory.withFunctionName(pluginInfo.name, clazz);\n      }\n    }\n  }\n\n","sourceOld":"  public static void addExpressiblePlugins(StreamFactory streamFactory, SolrCore core) {\n    List<PluginInfo> pluginInfos = core.getSolrConfig().getPluginInfos(Expressible.class.getName());\n    for (PluginInfo pluginInfo : pluginInfos) {\n      if (pluginInfo.pkgName != null) {\n        ExpressibleHolder holder = new ExpressibleHolder(pluginInfo, core, SolrConfig.classVsSolrPluginInfo.get(Expressible.class));\n        streamFactory.withFunctionName(pluginInfo.name,\n            () -> holder.getClazz());\n      } else {\n        Class<? extends Expressible> clazz = core.getMemClassLoader().findClass(pluginInfo.className, Expressible.class);\n        streamFactory.withFunctionName(pluginInfo.name, clazz);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5","date":1591384964,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#addExpressiblePlugins(StreamFactory,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#addExpressiblePlugins(StreamFactory,SolrCore).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public static void addExpressiblePlugins(StreamFactory streamFactory, SolrCore core) {\n    List<PluginInfo> pluginInfos = core.getSolrConfig().getPluginInfos(Expressible.class.getName());\n    for (PluginInfo pluginInfo : pluginInfos) {\n      if (pluginInfo.pkgName != null) {\n        @SuppressWarnings(\"resource\")\n        ExpressibleHolder holder = new ExpressibleHolder(pluginInfo, core, SolrConfig.classVsSolrPluginInfo.get(Expressible.class.getName()));\n        streamFactory.withFunctionName(pluginInfo.name,\n            () -> holder.getClazz());\n      } else {\n        Class<? extends Expressible> clazz = core.getMemClassLoader().findClass(pluginInfo.className, Expressible.class);\n        streamFactory.withFunctionName(pluginInfo.name, clazz);\n      }\n    }\n  }\n\n","sourceOld":"  public static void addExpressiblePlugins(StreamFactory streamFactory, SolrCore core) {\n    List<PluginInfo> pluginInfos = core.getSolrConfig().getPluginInfos(Expressible.class.getName());\n    for (PluginInfo pluginInfo : pluginInfos) {\n      if (pluginInfo.pkgName != null) {\n        @SuppressWarnings(\"resource\")\n        ExpressibleHolder holder = new ExpressibleHolder(pluginInfo, core, SolrConfig.classVsSolrPluginInfo.get(Expressible.class.getName()));\n        streamFactory.withFunctionName(pluginInfo.name,\n            () -> holder.getClazz());\n      } else {\n        Class<? extends Expressible> clazz = core.getMemClassLoader().findClass(pluginInfo.className, Expressible.class);\n        streamFactory.withFunctionName(pluginInfo.name, clazz);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d16198391f70a4ee52a8c8792c91eb87a30f1d6","date":1596695552,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler#addExpressiblePlugins(StreamFactory,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler#addExpressiblePlugins(StreamFactory,SolrCore).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public static void addExpressiblePlugins(StreamFactory streamFactory, SolrCore core) {\n    List<PluginInfo> pluginInfos = core.getSolrConfig().getPluginInfos(Expressible.class.getName());\n    for (PluginInfo pluginInfo : pluginInfos) {\n      if (pluginInfo.pkgName != null) {\n        @SuppressWarnings(\"resource\")\n        ExpressibleHolder holder = new ExpressibleHolder(pluginInfo, core, SolrConfig.classVsSolrPluginInfo.get(Expressible.class.getName()));\n        streamFactory.withFunctionName(pluginInfo.name,\n            () -> holder.getClazz());\n      } else {\n        Class<? extends Expressible> clazz = core.getResourceLoader().findClass(pluginInfo.className, Expressible.class);\n        streamFactory.withFunctionName(pluginInfo.name, clazz);\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  public static void addExpressiblePlugins(StreamFactory streamFactory, SolrCore core) {\n    List<PluginInfo> pluginInfos = core.getSolrConfig().getPluginInfos(Expressible.class.getName());\n    for (PluginInfo pluginInfo : pluginInfos) {\n      if (pluginInfo.pkgName != null) {\n        @SuppressWarnings(\"resource\")\n        ExpressibleHolder holder = new ExpressibleHolder(pluginInfo, core, SolrConfig.classVsSolrPluginInfo.get(Expressible.class.getName()));\n        streamFactory.withFunctionName(pluginInfo.name,\n            () -> holder.getClazz());\n      } else {\n        Class<? extends Expressible> clazz = core.getMemClassLoader().findClass(pluginInfo.className, Expressible.class);\n        streamFactory.withFunctionName(pluginInfo.name, clazz);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba055e19afc289adcb5bedaf68513793a7254012":["c8d9cf2465512475832769aaccf03847a7847463"],"c8d9cf2465512475832769aaccf03847a7847463":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["ba055e19afc289adcb5bedaf68513793a7254012"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d16198391f70a4ee52a8c8792c91eb87a30f1d6":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d16198391f70a4ee52a8c8792c91eb87a30f1d6"]},"commit2Childs":{"ba055e19afc289adcb5bedaf68513793a7254012":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"c8d9cf2465512475832769aaccf03847a7847463":["ba055e19afc289adcb5bedaf68513793a7254012"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c8d9cf2465512475832769aaccf03847a7847463"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["0d16198391f70a4ee52a8c8792c91eb87a30f1d6"],"0d16198391f70a4ee52a8c8792c91eb87a30f1d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}