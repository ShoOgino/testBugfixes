{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.BufferSize#BufferSize(long).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.BufferSize#BufferSize(long).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.BufferSize#BufferSize(long).mjava","sourceNew":"    private BufferSize(long bytes) {\n      if (bytes > Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Buffer too large for Java (\"\n            + (Integer.MAX_VALUE / MB) + \"mb max): \" + bytes);\n      }\n  \n      this.bytes = (int) bytes;\n    }\n\n","sourceOld":"    private BufferSize(long bytes) {\n      if (bytes > Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Buffer too large for Java (\"\n            + (Integer.MAX_VALUE / MB) + \"mb max): \" + bytes);\n      }\n  \n      this.bytes = (int) bytes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"363c827acabcdf749ab543fe459e291e7acc1f1e","date":1337801906,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.BufferSize#BufferSize(long).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.BufferSize#BufferSize(long).mjava","sourceNew":"    private BufferSize(long bytes) {\n      if (bytes > Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Buffer too large for Java (\"\n            + (Integer.MAX_VALUE / MB) + \"mb max): \" + bytes);\n      }\n      \n      if (bytes < ABSOLUTE_MIN_SORT_BUFFER_SIZE) {\n        throw new IllegalArgumentException(MIN_BUFFER_SIZE_MSG + \": \" + bytes);\n      }\n  \n      this.bytes = (int) bytes;\n    }\n\n","sourceOld":"    private BufferSize(long bytes) {\n      if (bytes > Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Buffer too large for Java (\"\n            + (Integer.MAX_VALUE / MB) + \"mb max): \" + bytes);\n      }\n  \n      this.bytes = (int) bytes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52dd493156fb4023d158d49e1ea92dbf3c20871","date":1337893063,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.BufferSize#BufferSize(long).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.BufferSize#BufferSize(long).mjava","sourceNew":"    private BufferSize(long bytes) {\n      if (bytes > Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Buffer too large for Java (\"\n            + (Integer.MAX_VALUE / MB) + \"mb max): \" + bytes);\n      }\n      \n      if (bytes < ABSOLUTE_MIN_SORT_BUFFER_SIZE) {\n        throw new IllegalArgumentException(MIN_BUFFER_SIZE_MSG + \": \" + bytes);\n      }\n  \n      this.bytes = (int) bytes;\n    }\n\n","sourceOld":"    private BufferSize(long bytes) {\n      if (bytes > Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Buffer too large for Java (\"\n            + (Integer.MAX_VALUE / MB) + \"mb max): \" + bytes);\n      }\n  \n      this.bytes = (int) bytes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"847d1294c8ff2f0172af20892ef98a1c6a952e09","date":1359503775,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort.BufferSize#BufferSize(long).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.BufferSize#BufferSize(long).mjava","sourceNew":"    private BufferSize(long bytes) {\n      if (bytes > Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Buffer too large for Java (\"\n            + (Integer.MAX_VALUE / MB) + \"mb max): \" + bytes);\n      }\n      \n      if (bytes < ABSOLUTE_MIN_SORT_BUFFER_SIZE) {\n        throw new IllegalArgumentException(MIN_BUFFER_SIZE_MSG + \": \" + bytes);\n      }\n  \n      this.bytes = (int) bytes;\n    }\n\n","sourceOld":"    private BufferSize(long bytes) {\n      if (bytes > Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Buffer too large for Java (\"\n            + (Integer.MAX_VALUE / MB) + \"mb max): \" + bytes);\n      }\n      \n      if (bytes < ABSOLUTE_MIN_SORT_BUFFER_SIZE) {\n        throw new IllegalArgumentException(MIN_BUFFER_SIZE_MSG + \": \" + bytes);\n      }\n  \n      this.bytes = (int) bytes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort.BufferSize#BufferSize(long).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort.BufferSize#BufferSize(long).mjava","sourceNew":"    private BufferSize(long bytes) {\n      if (bytes > Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Buffer too large for Java (\"\n            + (Integer.MAX_VALUE / MB) + \"mb max): \" + bytes);\n      }\n      \n      if (bytes < ABSOLUTE_MIN_SORT_BUFFER_SIZE) {\n        throw new IllegalArgumentException(MIN_BUFFER_SIZE_MSG + \": \" + bytes);\n      }\n  \n      this.bytes = (int) bytes;\n    }\n\n","sourceOld":"    private BufferSize(long bytes) {\n      if (bytes > Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Buffer too large for Java (\"\n            + (Integer.MAX_VALUE / MB) + \"mb max): \" + bytes);\n      }\n      \n      if (bytes < ABSOLUTE_MIN_SORT_BUFFER_SIZE) {\n        throw new IllegalArgumentException(MIN_BUFFER_SIZE_MSG + \": \" + bytes);\n      }\n  \n      this.bytes = (int) bytes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"363c827acabcdf749ab543fe459e291e7acc1f1e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["363c827acabcdf749ab543fe459e291e7acc1f1e","847d1294c8ff2f0172af20892ef98a1c6a952e09"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["363c827acabcdf749ab543fe459e291e7acc1f1e"],"b52dd493156fb4023d158d49e1ea92dbf3c20871":["b89678825b68eccaf09e6ab71675fc0b0af1e099","363c827acabcdf749ab543fe459e291e7acc1f1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["363c827acabcdf749ab543fe459e291e7acc1f1e","b52dd493156fb4023d158d49e1ea92dbf3c20871"],"363c827acabcdf749ab543fe459e291e7acc1f1e":["d4d69c535930b5cce125cff868d40f6373dc27d4","847d1294c8ff2f0172af20892ef98a1c6a952e09","b52dd493156fb4023d158d49e1ea92dbf3c20871"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"b52dd493156fb4023d158d49e1ea92dbf3c20871":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b52dd493156fb4023d158d49e1ea92dbf3c20871","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}