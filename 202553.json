{"path":"solr/core/src/java/org/apache/solr/handler/ExportWriter.IntFieldWriter#write(int,LeafReader,EntryWriter,int).mjava","commits":[{"id":"cbb7f1f4cf1e9a820364c090bb7e9a590f351339","date":1478603266,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ExportWriter.IntFieldWriter#write(int,LeafReader,EntryWriter,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SortingResponseWriter[ExportWriter].IntFieldWriter#write(int,LeafReader,Writer,int).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, EntryWriter ew, int fieldIndex) throws IOException {\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      int val;\n      if (vals.advance(docId) == docId) {\n        val = (int) vals.longValue();\n      } else {\n        val = 0;\n      }\n      ew.put(this.field, val);\n      return true;\n    }\n\n","sourceOld":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      int val;\n      if (vals.advance(docId) == docId) {\n        val = (int) vals.longValue();\n      } else {\n        val = 0;\n      }\n      if(fieldIndex>0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(':');\n      out.write(Integer.toString(val));\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ExportWriter.IntFieldWriter#write(int,LeafReader,EntryWriter,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.IntFieldWriter#write(int,LeafReader,Writer,int).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, EntryWriter ew, int fieldIndex) throws IOException {\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      int val;\n      if (vals.advance(docId) == docId) {\n        val = (int) vals.longValue();\n      } else {\n        val = 0;\n      }\n      ew.put(this.field, val);\n      return true;\n    }\n\n","sourceOld":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      int val;\n      if (vals.advance(docId) == docId) {\n        val = (int) vals.longValue();\n      } else {\n        val = 0;\n      }\n      if(fieldIndex>0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(':');\n      out.write(Integer.toString(val));\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8c0e05ed2dea5beb7c0246a2a6e68f28595357b","date":1479136768,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ExportWriter.IntFieldWriter#write(int,LeafReader,EntryWriter,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ExportWriter.IntFieldWriter#write(int,LeafReader,EntryWriter,int).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, EntryWriter ew, int fieldIndex) throws IOException {\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      int val;\n      if (vals.advance(docId) == docId) {\n        val = (int) vals.longValue();\n      } else {\n        return false;\n      }\n      ew.put(this.field, val);\n      return true;\n    }\n\n","sourceOld":"    public boolean write(int docId, LeafReader reader, EntryWriter ew, int fieldIndex) throws IOException {\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      int val;\n      if (vals.advance(docId) == docId) {\n        val = (int) vals.longValue();\n      } else {\n        val = 0;\n      }\n      ew.put(this.field, val);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8243e301531f97de264740d6afa71de6781dd64","date":1479139589,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ExportWriter.IntFieldWriter#write(int,LeafReader,EntryWriter,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ExportWriter.IntFieldWriter#write(int,LeafReader,EntryWriter,int).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, EntryWriter ew, int fieldIndex) throws IOException {\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      int val;\n      if (vals.advance(docId) == docId) {\n        val = (int) vals.longValue();\n      } else {\n        return false;\n      }\n      ew.put(this.field, val);\n      return true;\n    }\n\n","sourceOld":"    public boolean write(int docId, LeafReader reader, EntryWriter ew, int fieldIndex) throws IOException {\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      int val;\n      if (vals.advance(docId) == docId) {\n        val = (int) vals.longValue();\n      } else {\n        val = 0;\n      }\n      ew.put(this.field, val);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80","date":1532111887,"type":4,"author":"Varun Thacker","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/ExportWriter.IntFieldWriter#write(int,LeafReader,EntryWriter,int).mjava","sourceNew":null,"sourceOld":"    public boolean write(int docId, LeafReader reader, EntryWriter ew, int fieldIndex) throws IOException {\n      NumericDocValues vals = DocValues.getNumeric(reader, this.field);\n      int val;\n      if (vals.advance(docId) == docId) {\n        val = (int) vals.longValue();\n      } else {\n        return false;\n      }\n      ew.put(this.field, val);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cbb7f1f4cf1e9a820364c090bb7e9a590f351339":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c8243e301531f97de264740d6afa71de6781dd64":["199dfa410f1fdbfd3294106b04096cce5ed34b21","f8c0e05ed2dea5beb7c0246a2a6e68f28595357b"],"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["f8c0e05ed2dea5beb7c0246a2a6e68f28595357b"],"f8c0e05ed2dea5beb7c0246a2a6e68f28595357b":["cbb7f1f4cf1e9a820364c090bb7e9a590f351339"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cbb7f1f4cf1e9a820364c090bb7e9a590f351339"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"]},"commit2Childs":{"cbb7f1f4cf1e9a820364c090bb7e9a590f351339":["f8c0e05ed2dea5beb7c0246a2a6e68f28595357b","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"c8243e301531f97de264740d6afa71de6781dd64":[],"f8c0e05ed2dea5beb7c0246a2a6e68f28595357b":["c8243e301531f97de264740d6afa71de6781dd64","16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cbb7f1f4cf1e9a820364c090bb7e9a590f351339","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["c8243e301531f97de264740d6afa71de6781dd64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c8243e301531f97de264740d6afa71de6781dd64","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}