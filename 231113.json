{"path":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"/dev/null","sourceNew":"  /** Adds field info for a Document. */\n  final void add(Document doc) {\n    Enumeration fields  = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field)fields.nextElement();\n      add(field.name(), field.isIndexed());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  public void add(Document doc) {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  final void add(Document doc) {\n    Enumeration fields  = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field)fields.nextElement();\n      add(field.name(), field.isIndexed());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0","date":1096997448,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  public void add(Document doc) {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  public void add(Document doc) {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"950f3c7592cb559e2534e5089c78833250e156a3","date":1130557968,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  public void add(Document doc) {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  public void add(Document doc) {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector());\n    }\n  }\n\n","bugFix":null,"bugIntro":["42f6b4065cdaf7d1be530c926dc327494bee4ffa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"12d40284fd9481f79444bc63bc5d13847caddd3d","date":1149902602,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  public void add(Document doc) {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Fieldable field = (Fieldable) fields.nextElement();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  public void add(Document doc) {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5095bca1c8aaaa8a286baa5b92ac1773de3b3031","date":1155753096,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  public void add(Document doc) {\n    List fields = doc.getFields();\n    Iterator fieldIterator = fields.iterator();\n    while (fieldIterator.hasNext()) {\n      Fieldable field = (Fieldable) fieldIterator.next();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  public void add(Document doc) {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Fieldable field = (Fieldable) fields.nextElement();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List fields = doc.getFields();\n    Iterator fieldIterator = fields.iterator();\n    while (fieldIterator.hasNext()) {\n      Fieldable field = (Fieldable) fieldIterator.next();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  public void add(Document doc) {\n    List fields = doc.getFields();\n    Iterator fieldIterator = fields.iterator();\n    while (fieldIterator.hasNext()) {\n      Fieldable field = (Fieldable) fieldIterator.next();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"42f6b4065cdaf7d1be530c926dc327494bee4ffa","date":1239273470,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List fields = doc.getFields();\n    Iterator fieldIterator = fields.iterator();\n    while (fieldIterator.hasNext()) {\n      Fieldable field = (Fieldable) fieldIterator.next();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTf());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List fields = doc.getFields();\n    Iterator fieldIterator = fields.iterator();\n    while (fieldIterator.hasNext()) {\n      Fieldable field = (Fieldable) fieldIterator.next();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms());\n    }\n  }\n\n","bugFix":["950f3c7592cb559e2534e5089c78833250e156a3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f44f07aa147c21735d6c43bafa4fde560d0362e1","date":1255024926,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List fields = doc.getFields();\n    Iterator fieldIterator = fields.iterator();\n    while (fieldIterator.hasNext()) {\n      Fieldable field = (Fieldable) fieldIterator.next();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List fields = doc.getFields();\n    Iterator fieldIterator = fields.iterator();\n    while (fieldIterator.hasNext()) {\n      Fieldable field = (Fieldable) fieldIterator.next();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTf());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d","date":1255859449,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List fields = doc.getFields();\n    Iterator fieldIterator = fields.iterator();\n    while (fieldIterator.hasNext()) {\n      Fieldable field = (Fieldable) fieldIterator.next();\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(Document).mjava","sourceNew":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());\n    }\n  }\n\n","sourceOld":"  /** Adds field info for a Document. */\n  synchronized public void add(Document doc) {\n    List<Fieldable> fields = doc.getFields();\n    for (Fieldable field : fields) {\n      add(field.name(), field.isIndexed(), field.isTermVectorStored(), field.isStorePositionWithTermVector(),\n              field.isStoreOffsetWithTermVector(), field.getOmitNorms(), false, field.getOmitTermFreqAndPositions());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f44f07aa147c21735d6c43bafa4fde560d0362e1":["42f6b4065cdaf7d1be530c926dc327494bee4ffa"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"950f3c7592cb559e2534e5089c78833250e156a3":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["950f3c7592cb559e2534e5089c78833250e156a3"],"770281b8a8459cafcdd2354b6a06078fea2d83c9":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["f44f07aa147c21735d6c43bafa4fde560d0362e1"],"42f6b4065cdaf7d1be530c926dc327494bee4ffa":["5350389bf83287111f7760b9e3db3af8e3648474"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5095bca1c8aaaa8a286baa5b92ac1773de3b3031":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"5350389bf83287111f7760b9e3db3af8e3648474":["5095bca1c8aaaa8a286baa5b92ac1773de3b3031"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"]},"commit2Childs":{"f44f07aa147c21735d6c43bafa4fde560d0362e1":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"950f3c7592cb559e2534e5089c78833250e156a3":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["950f3c7592cb559e2534e5089c78833250e156a3"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["5095bca1c8aaaa8a286baa5b92ac1773de3b3031"],"770281b8a8459cafcdd2354b6a06078fea2d83c9":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"42f6b4065cdaf7d1be530c926dc327494bee4ffa":["f44f07aa147c21735d6c43bafa4fde560d0362e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"5095bca1c8aaaa8a286baa5b92ac1773de3b3031":["5350389bf83287111f7760b9e3db3af8e3648474"],"5350389bf83287111f7760b9e3db3af8e3648474":["42f6b4065cdaf7d1be530c926dc327494bee4ffa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}