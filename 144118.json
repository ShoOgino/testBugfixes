{"path":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#score(DisiWrapper[Scorer]).mjava","commits":[{"id":"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7","date":1429852340,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#score(DisiWrapper[Scorer]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#score(ScorerWrapper).mjava","sourceNew":"  @Override\n  protected float score(DisiWrapper<Scorer> topList) throws IOException {\n    float scoreSum = 0;\n    float scoreMax = 0;\n    for (DisiWrapper<Scorer> w = topList; w != null; w = w.next) {\n      final float subScore = w.iterator.score();\n      scoreSum += subScore;\n      if (subScore > scoreMax) {\n        scoreMax = subScore;\n      }\n    }\n    return scoreMax + (scoreSum - scoreMax) * tieBreakerMultiplier; \n  }\n\n","sourceOld":"  @Override\n  protected float score(ScorerWrapper topList) throws IOException {\n    float scoreSum = 0;\n    float scoreMax = 0;\n    for (ScorerWrapper w = topList; w != null; w = w.next) {\n      final float subScore = w.scorer.score();\n      scoreSum += subScore;\n      if (subScore > scoreMax) {\n        scoreMax = subScore;\n      }\n    }\n    return scoreMax + (scoreSum - scoreMax) * tieBreakerMultiplier; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#score(DisiWrapper).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer#score(DisiWrapper[Scorer]).mjava","sourceNew":"  @Override\n  protected float score(DisiWrapper topList) throws IOException {\n    float scoreSum = 0;\n    float scoreMax = 0;\n    for (DisiWrapper w = topList; w != null; w = w.next) {\n      final float subScore = w.scorer.score();\n      scoreSum += subScore;\n      if (subScore > scoreMax) {\n        scoreMax = subScore;\n      }\n    }\n    return scoreMax + (scoreSum - scoreMax) * tieBreakerMultiplier; \n  }\n\n","sourceOld":"  @Override\n  protected float score(DisiWrapper<Scorer> topList) throws IOException {\n    float scoreSum = 0;\n    float scoreMax = 0;\n    for (DisiWrapper<Scorer> w = topList; w != null; w = w.next) {\n      final float subScore = w.iterator.score();\n      scoreSum += subScore;\n      if (subScore > scoreMax) {\n        scoreMax = subScore;\n      }\n    }\n    return scoreMax + (scoreSum - scoreMax) * tieBreakerMultiplier; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dd748bb245633a8195281556bb0e68a6ea97d18"]},"commit2Childs":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}