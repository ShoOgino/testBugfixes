{"path":"src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","commits":[{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (attributes.size() != other.attributes.size()) {\n          return false;\n        }\n  \n        Iterator it = getAttributesIterator();\n        while (it.hasNext()) {\n          Class attName = it.next().getClass();\n          \n          Attribute otherAtt = (Attribute) other.attributes.get(attName);\n          if (otherAtt == null || !otherAtt.equals(attributes.get(attName))) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec8b5a20a12931b8d7e616c79c5248ae06cc5568","date":1248471948,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","sourceNew":"  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (this.attributeImpls.size() != other.attributeImpls.size()) {\n          return false;\n        }\n  \n        // it is only equal if all attribute impls are the same in the same order\n        Iterator thisIt = this.getAttributeImplsIterator();\n        Iterator otherIt = other.getAttributeImplsIterator();\n        while (thisIt.hasNext() && otherIt.hasNext()) {\n          AttributeImpl thisAtt = (AttributeImpl) thisIt.next();\n          AttributeImpl otherAtt = (AttributeImpl) otherIt.next();\n          if (otherAtt.getClass() != thisAtt.getClass() || !otherAtt.equals(thisAtt)) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","sourceOld":"  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (attributes.size() != other.attributes.size()) {\n          return false;\n        }\n  \n        Iterator it = getAttributesIterator();\n        while (it.hasNext()) {\n          Class attName = it.next().getClass();\n          \n          Attribute otherAtt = (Attribute) other.attributes.get(attName);\n          if (otherAtt == null || !otherAtt.equals(attributes.get(attName))) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0833fee1ce16a2b8e10f21cbccd2e93f3d8ccf31","date":1249940086,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","sourceNew":"  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (this.attributeImpls.size() != other.attributeImpls.size()) {\n          return false;\n        }\n  \n        // it is only equal if all attribute impls are the same in the same order\n        if (this.currentState == null) {\n          this.computeCurrentState();\n        }\n        State thisState = this.currentState;\n        if (other.currentState == null) {\n          other.computeCurrentState();\n        }\n        State otherState = other.currentState;\n        while (thisState != null && otherState != null) {\n          if (otherState.attribute.getClass() != thisState.attribute.getClass() || !otherState.attribute.equals(thisState.attribute)) {\n            return false;\n          }\n          thisState = thisState.next;\n          otherState = otherState.next;\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","sourceOld":"  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (this.attributeImpls.size() != other.attributeImpls.size()) {\n          return false;\n        }\n  \n        // it is only equal if all attribute impls are the same in the same order\n        Iterator thisIt = this.getAttributeImplsIterator();\n        Iterator otherIt = other.getAttributeImplsIterator();\n        while (thisIt.hasNext() && otherIt.hasNext()) {\n          AttributeImpl thisAtt = (AttributeImpl) thisIt.next();\n          AttributeImpl otherAtt = (AttributeImpl) otherIt.next();\n          if (otherAtt.getClass() != thisAtt.getClass() || !otherAtt.equals(thisAtt)) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (this.attributeImpls.size() != other.attributeImpls.size()) {\n          return false;\n        }\n  \n        // it is only equal if all attribute impls are the same in the same order\n        if (this.currentState == null) {\n          this.computeCurrentState();\n        }\n        State thisState = this.currentState;\n        if (other.currentState == null) {\n          other.computeCurrentState();\n        }\n        State otherState = other.currentState;\n        while (thisState != null && otherState != null) {\n          if (otherState.attribute.getClass() != thisState.attribute.getClass() || !otherState.attribute.equals(thisState.attribute)) {\n            return false;\n          }\n          thisState = thisState.next;\n          otherState = otherState.next;\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","sourceOld":"  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (this.attributeImpls.size() != other.attributeImpls.size()) {\n          return false;\n        }\n  \n        // it is only equal if all attribute impls are the same in the same order\n        if (this.currentState == null) {\n          this.computeCurrentState();\n        }\n        State thisState = this.currentState;\n        if (other.currentState == null) {\n          other.computeCurrentState();\n        }\n        State otherState = other.currentState;\n        while (thisState != null && otherState != null) {\n          if (otherState.attribute.getClass() != thisState.attribute.getClass() || !otherState.attribute.equals(thisState.attribute)) {\n            return false;\n          }\n          thisState = thisState.next;\n          otherState = otherState.next;\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (this.attributeImpls.size() != other.attributeImpls.size()) {\n          return false;\n        }\n  \n        // it is only equal if all attribute impls are the same in the same order\n        if (this.currentState == null) {\n          this.computeCurrentState();\n        }\n        State thisState = this.currentState;\n        if (other.currentState == null) {\n          other.computeCurrentState();\n        }\n        State otherState = other.currentState;\n        while (thisState != null && otherState != null) {\n          if (otherState.attribute.getClass() != thisState.attribute.getClass() || !otherState.attribute.equals(thisState.attribute)) {\n            return false;\n          }\n          thisState = thisState.next;\n          otherState = otherState.next;\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (this.attributeImpls.size() != other.attributeImpls.size()) {\n          return false;\n        }\n  \n        // it is only equal if all attribute impls are the same in the same order\n        if (this.currentState == null) {\n          this.computeCurrentState();\n        }\n        State thisState = this.currentState;\n        if (other.currentState == null) {\n          other.computeCurrentState();\n        }\n        State otherState = other.currentState;\n        while (thisState != null && otherState != null) {\n          if (otherState.attribute.getClass() != thisState.attribute.getClass() || !otherState.attribute.equals(thisState.attribute)) {\n            return false;\n          }\n          thisState = thisState.next;\n          otherState = otherState.next;\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["0833fee1ce16a2b8e10f21cbccd2e93f3d8ccf31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"],"0833fee1ce16a2b8e10f21cbccd2e93f3d8ccf31":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"]},"commit2Childs":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0833fee1ce16a2b8e10f21cbccd2e93f3d8ccf31":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["0833fee1ce16a2b8e10f21cbccd2e93f3d8ccf31"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}