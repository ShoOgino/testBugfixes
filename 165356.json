{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","sourceNew":"  /** Return a Map from field value to a list of document ids */\n  Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","sourceOld":"  /** Return a Map from field value to a list of document ids */\n  Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","sourceNew":"  /** Return a Map from field value to a list of document ids */\n  Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","sourceOld":"  /** Return a Map from field value to a list of document ids */\n  Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","sourceNew":"  /** Return a Map from field value to a list of document ids */\n  Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","sourceOld":"  /** Return a Map from field value to a list of document ids */\n  Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","sourceNew":"  /** Return a Map from field value to a list of document ids */\n  Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","sourceOld":"  /** Return a Map from field value to a list of document ids */\n  Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"637a392e2e05d4e1179ac3c532cfeef0cde977ba","date":1376347977,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","sourceNew":"  /** Return a Map from field value to a list of document ids */\n  public Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","sourceOld":"  /** Return a Map from field value to a list of document ids */\n  Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","sourceNew":"  /** Return a Map from field value to a list of document ids */\n  public Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","sourceOld":"  /** Return a Map from field value to a list of document ids */\n  Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","sourceNew":"  /** Return a Map from field value to a list of document ids */\n  public Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","sourceOld":"  /** Return a Map from field value to a list of document ids */\n  public Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<Comparable, List<Comparable>>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<Comparable>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6809a6d7924df2c864d6a5863944aff9dfeb372c","date":1591826750,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#invertField(Map[Comparable,Doc],String).mjava","sourceNew":"  /** Return a Map from field value to a list of document ids */\n  @SuppressWarnings({\"rawtypes\"})\n  public Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","sourceOld":"  /** Return a Map from field value to a list of document ids */\n  public Map<Comparable, List<Comparable>> invertField(Map<Comparable, Doc> model, String field) {\n    Map<Comparable, List<Comparable>> value_to_id = new HashMap<>();\n\n    // invert field\n    for (Comparable key : model.keySet()) {\n      Doc doc = model.get(key);\n      List<Comparable> vals = doc.getValues(field);\n      if (vals == null) continue;\n      for (Comparable val : vals) {\n        List<Comparable> ids = value_to_id.get(val);\n        if (ids == null) {\n          ids = new ArrayList<>(2);\n          value_to_id.put(val, ids);\n        }\n        ids.add(key);\n      }\n    }\n\n    return value_to_id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c26f00b574427b55127e869b935845554afde1fa","637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6809a6d7924df2c864d6a5863944aff9dfeb372c"]},"commit2Childs":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["6809a6d7924df2c864d6a5863944aff9dfeb372c"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}