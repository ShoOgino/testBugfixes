{"path":"lucene/src/test/org/apache/lucene/search/cache/TestEntryCreators#getWithReflection(FieldCache,NumberTypeTester,int).mjava","commits":[{"id":"eee9156bf08d7eaae5e8d8ab5f855ba61012e257","date":1285443157,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/cache/TestEntryCreators#getWithReflection(FieldCache,NumberTypeTester,int).mjava","pathOld":"/dev/null","sourceNew":"  private CachedArray getWithReflection( FieldCache cache, NumberTypeTester tester, int flags ) throws IOException \r\n  {\r\n    try {\r\n      Method getXXX = cache.getClass().getMethod( tester.funcName, IndexReader.class, String.class, EntryCreator.class );\r\n      Constructor constructor = tester.creator.getConstructor( String.class, tester.parser, Integer.TYPE );\r\n      CachedArrayCreator creator = (CachedArrayCreator)constructor.newInstance( tester.field, null, flags );\r\n      return (CachedArray) getXXX.invoke(cache, reader, tester.field, creator );\r\n    }\r\n    catch( Exception ex ) {\r\n      throw new RuntimeException( \"Reflection failed\", ex );\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade","date":1286051536,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/cache/TestEntryCreators#getWithReflection(FieldCache,NumberTypeTester,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/cache/TestEntryCreators#getWithReflection(FieldCache,NumberTypeTester,int).mjava","sourceNew":"  private CachedArray getWithReflection( FieldCache cache, NumberTypeTester tester, int flags ) throws IOException \n  {\n    try {\n      Method getXXX = cache.getClass().getMethod( tester.funcName, IndexReader.class, String.class, EntryCreator.class );\n      Constructor constructor = tester.creator.getConstructor( String.class, tester.parser, Integer.TYPE );\n      CachedArrayCreator creator = (CachedArrayCreator)constructor.newInstance( tester.field, null, flags );\n      return (CachedArray) getXXX.invoke(cache, reader, tester.field, creator );\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( \"Reflection failed\", ex );\n    }\n  }\n\n","sourceOld":"  private CachedArray getWithReflection( FieldCache cache, NumberTypeTester tester, int flags ) throws IOException \r\n  {\r\n    try {\r\n      Method getXXX = cache.getClass().getMethod( tester.funcName, IndexReader.class, String.class, EntryCreator.class );\r\n      Constructor constructor = tester.creator.getConstructor( String.class, tester.parser, Integer.TYPE );\r\n      CachedArrayCreator creator = (CachedArrayCreator)constructor.newInstance( tester.field, null, flags );\r\n      return (CachedArray) getXXX.invoke(cache, reader, tester.field, creator );\r\n    }\r\n    catch( Exception ex ) {\r\n      throw new RuntimeException( \"Reflection failed\", ex );\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/cache/TestEntryCreators#getWithReflection(FieldCache,NumberTypeTester,int).mjava","pathOld":"/dev/null","sourceNew":"  private CachedArray getWithReflection( FieldCache cache, NumberTypeTester tester, int flags ) throws IOException \n  {\n    try {\n      Method getXXX = cache.getClass().getMethod( tester.funcName, IndexReader.class, String.class, EntryCreator.class );\n      Constructor constructor = tester.creator.getConstructor( String.class, tester.parser, Integer.TYPE );\n      CachedArrayCreator creator = (CachedArrayCreator)constructor.newInstance( tester.field, null, flags );\n      return (CachedArray) getXXX.invoke(cache, reader, tester.field, creator );\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( \"Reflection failed\", ex );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"382fe3a6ca9745891afebda9b9a57cc158305545","date":1320952430,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/cache/TestEntryCreators#getWithReflection(FieldCache,NumberTypeTester,int).mjava","sourceNew":null,"sourceOld":"  private CachedArray getWithReflection( FieldCache cache, NumberTypeTester tester, int flags ) throws IOException \n  {\n    try {\n      Method getXXX = cache.getClass().getMethod( tester.funcName, IndexReader.class, String.class, EntryCreator.class );\n      Constructor constructor = tester.creator.getConstructor( String.class, tester.parser, Integer.TYPE );\n      CachedArrayCreator creator = (CachedArrayCreator)constructor.newInstance( tester.field, null, flags );\n      return (CachedArray) getXXX.invoke(cache, reader, tester.field, creator );\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( \"Reflection failed\", ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eee9156bf08d7eaae5e8d8ab5f855ba61012e257":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade":["eee9156bf08d7eaae5e8d8ab5f855ba61012e257"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade"],"382fe3a6ca9745891afebda9b9a57cc158305545":["3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["382fe3a6ca9745891afebda9b9a57cc158305545"]},"commit2Childs":{"eee9156bf08d7eaae5e8d8ab5f855ba61012e257":["3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade"],"3e904610f0db3fdf2ea10c5701f5f4f86c1e9ade":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","382fe3a6ca9745891afebda9b9a57cc158305545"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eee9156bf08d7eaae5e8d8ab5f855ba61012e257","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"382fe3a6ca9745891afebda9b9a57cc158305545":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}