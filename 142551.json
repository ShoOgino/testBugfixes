{"path":"src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","commits":[{"id":"8281d815c10235e2dab9ded85615ebe920dd3c22","date":1243323879,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    String home = System.getProperty(\"java.io.tmpdir\")\n            + File.separator\n            + getClass().getName() + \"-\" + System.currentTimeMillis();\n\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \".\" + File.separator + \"solr\" + File.separator + \"conf\" + File.separator + \"solrconfig-slave1.xml\";\n    FileUtils.copyFile(new File(fname), f);\n    f = new File(confDir, \"schema.xml\");\n    fname = \".\" + File.separator + \"solr\" + File.separator + \"conf\" + File.separator + \"schema-binaryfield.xml\";\n    FileUtils.copyFile(new File(fname), f);\n\n    jetty = new JettySolrRunner(\"/solr\", port);\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    jetty.start();\n\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n//    server.setRequestWriter(new BinaryRequestWriter());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbb9c2e78e201da6d182846c6794ab79097f300e","date":1254100973,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = dataDir;\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \".\" + File.separator + \"solr\" + File.separator + \"conf\" + File.separator + \"solrconfig-slave1.xml\";\n    FileUtils.copyFile(new File(fname), f);\n    f = new File(confDir, \"schema.xml\");\n    fname = \".\" + File.separator + \"solr\" + File.separator + \"conf\" + File.separator + \"schema-binaryfield.xml\";\n    FileUtils.copyFile(new File(fname), f);\n\n    jetty = new JettySolrRunner(\"/solr\", port);\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    jetty.start();\n\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n//    server.setRequestWriter(new BinaryRequestWriter());\n    super.postSetUp();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    String home = System.getProperty(\"java.io.tmpdir\")\n            + File.separator\n            + getClass().getName() + \"-\" + System.currentTimeMillis();\n\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \".\" + File.separator + \"solr\" + File.separator + \"conf\" + File.separator + \"solrconfig-slave1.xml\";\n    FileUtils.copyFile(new File(fname), f);\n    f = new File(confDir, \"schema.xml\");\n    fname = \".\" + File.separator + \"solr\" + File.separator + \"conf\" + File.separator + \"schema-binaryfield.xml\";\n    FileUtils.copyFile(new File(fname), f);\n\n    jetty = new JettySolrRunner(\"/solr\", port);\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    jetty.start();\n\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n//    server.setRequestWriter(new BinaryRequestWriter());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = dataDir;\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \".\" + File.separator + \"solr\" + File.separator + \"conf\" + File.separator + \"solrconfig-slave1.xml\";\n    FileUtils.copyFile(new File(fname), f);\n    f = new File(confDir, \"schema.xml\");\n    fname = \".\" + File.separator + \"solr\" + File.separator + \"conf\" + File.separator + \"schema-binaryfield.xml\";\n    FileUtils.copyFile(new File(fname), f);\n\n    jetty = new JettySolrRunner(\"/solr\", port);\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    jetty.start();\n\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n//    server.setRequestWriter(new BinaryRequestWriter());\n    super.postSetUp();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = dataDir;\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \".\" + File.separator + \"solr\" + File.separator + \"conf\" + File.separator + \"solrconfig-slave1.xml\";\n    FileUtils.copyFile(new File(fname), f);\n    f = new File(confDir, \"schema.xml\");\n    fname = \".\" + File.separator + \"solr\" + File.separator + \"conf\" + File.separator + \"schema-binaryfield.xml\";\n    FileUtils.copyFile(new File(fname), f);\n\n    jetty = new JettySolrRunner(\"/solr\", port);\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    jetty.start();\n\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n//    server.setRequestWriter(new BinaryRequestWriter());\n    super.postSetUp();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"8281d815c10235e2dab9ded85615ebe920dd3c22":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["dbb9c2e78e201da6d182846c6794ab79097f300e"],"dbb9c2e78e201da6d182846c6794ab79097f300e":["8281d815c10235e2dab9ded85615ebe920dd3c22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["8281d815c10235e2dab9ded85615ebe920dd3c22"],"8281d815c10235e2dab9ded85615ebe920dd3c22":["dbb9c2e78e201da6d182846c6794ab79097f300e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"dbb9c2e78e201da6d182846c6794ab79097f300e":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}