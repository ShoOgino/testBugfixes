{"path":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"/dev/null","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc, String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":null,"sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc, String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc, String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc, String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"/dev/null","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc, String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001a96cd866139d0ecc9307b5d9e434d0ef1f21a","date":1281180879,"type":5,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrFragmentsBuilder,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrFragmentsBuilder solrFb, SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc, String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64b70045667e645d05ad37b9c98923d8dad53ccb","date":1282952527,"type":1,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrFragmentsBuilder,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrFragmentsBuilder solrFb, SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc, String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["c220849f876de24a79f756f65b3eb045db59f63f","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","64b70045667e645d05ad37b9c98923d8dad53ccb"],"64b70045667e645d05ad37b9c98923d8dad53ccb":["001a96cd866139d0ecc9307b5d9e434d0ef1f21a"],"001a96cd866139d0ecc9307b5d9e434d0ef1f21a":["1da8d55113b689b06716246649de6f62430f15c0"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c220849f876de24a79f756f65b3eb045db59f63f":["64b70045667e645d05ad37b9c98923d8dad53ccb"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c220849f876de24a79f756f65b3eb045db59f63f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["64b70045667e645d05ad37b9c98923d8dad53ccb","c220849f876de24a79f756f65b3eb045db59f63f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["c220849f876de24a79f756f65b3eb045db59f63f"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c220849f876de24a79f756f65b3eb045db59f63f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"64b70045667e645d05ad37b9c98923d8dad53ccb":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c220849f876de24a79f756f65b3eb045db59f63f","29ef99d61cda9641b6250bf9567329a6e65f901d"],"001a96cd866139d0ecc9307b5d9e434d0ef1f21a":["64b70045667e645d05ad37b9c98923d8dad53ccb"],"1da8d55113b689b06716246649de6f62430f15c0":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","001a96cd866139d0ecc9307b5d9e434d0ef1f21a"],"c220849f876de24a79f756f65b3eb045db59f63f":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}