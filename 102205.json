{"path":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testGetEntry().mjava","commits":[{"id":"bf1c3e657b66c65904354d158dd1cebb302dc8f9","date":1153873200,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testGetEntry().mjava","pathOld":"/dev/null","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.storage.db4o.DB4oStorage.getEntry(ServerBaseEntry)'\n     */\n    public void testGetEntry() throws StorageException {\n        storeServerBaseFeed();\n        Storage storage = this.controller.getStorage();\n        ServerBaseEntry e = createServerBaseEntry();\n        storage.storeEntry(e);\n        ServerBaseEntry e1 = createServerBaseEntry();\n        storage.storeEntry(e1);\n\n        storage = this.controller.getStorage();\n        BaseEntry result = storage.getEntry(e);\n        assertNotNull(result);\n        assertEquals(e.getId(), result.getId());\n        try {\n            e1.setId(\"hello\");\n            result = storage.getEntry(e1);\n            fail(\"no such entry\");\n        } catch (StorageException ex) {\n            ex.printStackTrace();\n        }\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testGetEntry().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testGetEntry().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.storage.db4o.DB4oStorage.getEntry(ServerBaseEntry)'\n     */\n    public void testGetEntry() throws StorageException {\n        storeServerBaseFeed();\n        Storage storage = this.controller.getStorage();\n        ServerBaseEntry exEntry = createServerBaseEntry();\n        exEntry.setId(null);\n        try{\n        storage.getEntry(exEntry);\n        fail(\"id is null\");\n        }catch (StorageException e) {\n\n        }\n        ServerBaseEntry e = createServerBaseEntry();\n        storage.storeEntry(e);\n        ServerBaseEntry e1 = createServerBaseEntry();\n        storage.storeEntry(e1);\n        \n        storage = this.controller.getStorage();\n        BaseEntry result = storage.getEntry(e);\n        assertNotNull(result);\n        assertEquals(e.getId(), result.getId());\n        try {\n            e1.setId(\"hello\");\n            result = storage.getEntry(e1);\n            fail(\"no such entry\");\n        } catch (StorageException ex) {\n            ex.printStackTrace();\n        }\n\n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.storage.db4o.DB4oStorage.getEntry(ServerBaseEntry)'\n     */\n    public void testGetEntry() throws StorageException {\n        storeServerBaseFeed();\n        Storage storage = this.controller.getStorage();\n        ServerBaseEntry e = createServerBaseEntry();\n        storage.storeEntry(e);\n        ServerBaseEntry e1 = createServerBaseEntry();\n        storage.storeEntry(e1);\n\n        storage = this.controller.getStorage();\n        BaseEntry result = storage.getEntry(e);\n        assertNotNull(result);\n        assertEquals(e.getId(), result.getId());\n        try {\n            e1.setId(\"hello\");\n            result = storage.getEntry(e1);\n            fail(\"no such entry\");\n        } catch (StorageException ex) {\n            ex.printStackTrace();\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testGetEntry().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testGetEntry().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.storage.db4o.DB4oStorage.getEntry(ServerBaseEntry)'\n     */\n    public void testGetEntry() throws StorageException {\n        storeServerBaseFeed();\n        Storage storage = this.controller.getStorage();\n        ServerBaseEntry exEntry = createServerBaseEntry();\n        exEntry.setId(null);\n        try{\n        storage.getEntry(exEntry);\n        fail(\"id is null\");\n        }catch (StorageException e) {\n\n        }\n        ServerBaseEntry e = createServerBaseEntry();\n        storage.storeEntry(e);\n        ServerBaseEntry e1 = createServerBaseEntry();\n        storage.storeEntry(e1);\n        \n        storage = this.controller.getStorage();\n        BaseEntry result = storage.getEntry(e);\n        assertNotNull(result);\n        assertEquals(e.getId(), result.getId());\n        try {\n            e1.setId(\"hello\");\n            result = storage.getEntry(e1);\n            fail(\"no such entry\");\n        } catch (StorageException ex) {\n            ex.printStackTrace();\n        }\n\n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.storage.db4o.DB4oStorage.getEntry(ServerBaseEntry)'\n     */\n    public void testGetEntry() throws StorageException {\n        storeServerBaseFeed();\n        Storage storage = this.controller.getStorage();\n        ServerBaseEntry exEntry = createServerBaseEntry();\n        exEntry.setId(null);\n        try{\n        storage.getEntry(exEntry);\n        fail(\"id is null\");\n        }catch (StorageException e) {\n\n        }\n        ServerBaseEntry e = createServerBaseEntry();\n        storage.storeEntry(e);\n        ServerBaseEntry e1 = createServerBaseEntry();\n        storage.storeEntry(e1);\n        \n        storage = this.controller.getStorage();\n        BaseEntry result = storage.getEntry(e);\n        assertNotNull(result);\n        assertEquals(e.getId(), result.getId());\n        try {\n            e1.setId(\"hello\");\n            result = storage.getEntry(e1);\n            fail(\"no such entry\");\n        } catch (StorageException ex) {\n            ex.printStackTrace();\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bf1c3e657b66c65904354d158dd1cebb302dc8f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09fe963da2613c724ffe82353b4ca2364a1f93c6":["bf1c3e657b66c65904354d158dd1cebb302dc8f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"bf1c3e657b66c65904354d158dd1cebb302dc8f9":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bf1c3e657b66c65904354d158dd1cebb302dc8f9"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}