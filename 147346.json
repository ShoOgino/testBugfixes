{"path":"lucene/queries/src/test/org/apache/lucene/queries/intervals/TestIntervals#testOrderedNearWithDuplicates().mjava","commits":[{"id":"30c78dc09f599cd42c186ddd94084249c8db1ede","date":1581000287,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/intervals/TestIntervals#testOrderedNearWithDuplicates().mjava","pathOld":"/dev/null","sourceNew":"  public void testOrderedNearWithDuplicates() throws IOException {\n    IntervalsSource source = Intervals.ordered(Intervals.term(\"pease\"), Intervals.term(\"pease\"), Intervals.term(\"porridge\"));\n    checkIntervals(source, \"field1\", 3, new int[][]{\n        {}, { 0, 4, 3, 7 }, { 0, 4, 3, 7 }, {}, { 0, 4, 3, 7 }, {}\n    });\n    assertGaps(source, 1, \"field1\", new int[]{ 2, 2 });\n\n    MatchesIterator mi = getMatches(source, 1, \"field1\");\n    assertMatch(mi, 0, 4, 0, 34);\n    MatchesIterator sub = mi.getSubMatches();\n    assertNotNull(sub);\n    assertMatch(sub, 0, 0, 0, 5);\n    assertMatch(sub, 3, 3, 20, 25);\n    assertMatch(sub, 4, 4, 26, 34);\n    assertMatch(mi, 3, 7, 20, 55);\n    assertFalse(mi.next());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30c78dc09f599cd42c186ddd94084249c8db1ede":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["30c78dc09f599cd42c186ddd94084249c8db1ede"]},"commit2Childs":{"30c78dc09f599cd42c186ddd94084249c8db1ede":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30c78dc09f599cd42c186ddd94084249c8db1ede"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}