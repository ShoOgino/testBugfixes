{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","sourceNew":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n      stallControl.waitIfStalled();\n  }\n\n","sourceOld":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n      stallControl.waitIfStalled();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b7352903525839fa9ecf337b5a5e90ea91f243","date":1340613989,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","sourceNew":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    if (documentsWriter.infoStream.isEnabled(\"DWFC\")) {\n      documentsWriter.infoStream.message(\"DWFC\",\n          \"waitIfStalled: numFlushesPending: \" + flushQueue.size()\n              + \" netBytes: \" + netBytes() + \" flushBytes: \" + flushBytes()\n              + \" fullFlush: \" + fullFlush);\n    }\n    stallControl.waitIfStalled();\n  }\n\n","sourceOld":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n      stallControl.waitIfStalled();\n  }\n\n","bugFix":["32f306edd62f81390a6e263e8b913f089f3e98a1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","sourceNew":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    if (documentsWriter.infoStream.isEnabled(\"DWFC\")) {\n      documentsWriter.infoStream.message(\"DWFC\",\n          \"waitIfStalled: numFlushesPending: \" + flushQueue.size()\n              + \" netBytes: \" + netBytes() + \" flushBytes: \" + flushBytes()\n              + \" fullFlush: \" + fullFlush);\n    }\n    stallControl.waitIfStalled();\n  }\n\n","sourceOld":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n      stallControl.waitIfStalled();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7af110b00ea8df9429309d83e38e0533d82e144f","date":1376924768,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","sourceNew":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    if (infoStream.isEnabled(\"DWFC\")) {\n      infoStream.message(\"DWFC\",\n          \"waitIfStalled: numFlushesPending: \" + flushQueue.size()\n              + \" netBytes: \" + netBytes() + \" flushBytes: \" + flushBytes()\n              + \" fullFlush: \" + fullFlush);\n    }\n    stallControl.waitIfStalled();\n  }\n\n","sourceOld":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    if (documentsWriter.infoStream.isEnabled(\"DWFC\")) {\n      documentsWriter.infoStream.message(\"DWFC\",\n          \"waitIfStalled: numFlushesPending: \" + flushQueue.size()\n              + \" netBytes: \" + netBytes() + \" flushBytes: \" + flushBytes()\n              + \" fullFlush: \" + fullFlush);\n    }\n    stallControl.waitIfStalled();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","sourceNew":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    if (infoStream.isEnabled(\"DWFC\")) {\n      infoStream.message(\"DWFC\",\n          \"waitIfStalled: numFlushesPending: \" + flushQueue.size()\n              + \" netBytes: \" + netBytes() + \" flushBytes: \" + flushBytes()\n              + \" fullFlush: \" + fullFlush);\n    }\n    stallControl.waitIfStalled();\n  }\n\n","sourceOld":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    if (documentsWriter.infoStream.isEnabled(\"DWFC\")) {\n      documentsWriter.infoStream.message(\"DWFC\",\n          \"waitIfStalled: numFlushesPending: \" + flushQueue.size()\n              + \" netBytes: \" + netBytes() + \" flushBytes: \" + flushBytes()\n              + \" fullFlush: \" + fullFlush);\n    }\n    stallControl.waitIfStalled();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","sourceNew":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    if (infoStream.isEnabled(\"DWFC\")) {\n      infoStream.message(\"DWFC\",\n          \"waitIfStalled: numFlushesPending: \" + flushQueue.size()\n              + \" netBytes: \" + netBytes() + \" flushBytes: \" + flushBytes()\n              + \" fullFlush: \" + fullFlush);\n    }\n    stallControl.waitIfStalled();\n  }\n\n","sourceOld":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    if (documentsWriter.infoStream.isEnabled(\"DWFC\")) {\n      documentsWriter.infoStream.message(\"DWFC\",\n          \"waitIfStalled: numFlushesPending: \" + flushQueue.size()\n              + \" netBytes: \" + netBytes() + \" flushBytes: \" + flushBytes()\n              + \" fullFlush: \" + fullFlush);\n    }\n    stallControl.waitIfStalled();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be382406ee6e8449e49c082b50c31367e7add702","date":1469488703,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","sourceNew":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    stallControl.waitIfStalled();\n  }\n\n","sourceOld":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    if (infoStream.isEnabled(\"DWFC\")) {\n      infoStream.message(\"DWFC\",\n          \"waitIfStalled: numFlushesPending: \" + flushQueue.size()\n              + \" netBytes: \" + netBytes() + \" flushBytes: \" + flushBytes()\n              + \" fullFlush: \" + fullFlush);\n    }\n    stallControl.waitIfStalled();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08973aa47f2cf98a588293a53af4e948952ccfb","date":1469518724,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","sourceNew":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    stallControl.waitIfStalled();\n  }\n\n","sourceOld":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    if (infoStream.isEnabled(\"DWFC\")) {\n      infoStream.message(\"DWFC\",\n          \"waitIfStalled: numFlushesPending: \" + flushQueue.size()\n              + \" netBytes: \" + netBytes() + \" flushBytes: \" + flushBytes()\n              + \" fullFlush: \" + fullFlush);\n    }\n    stallControl.waitIfStalled();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#waitIfStalled().mjava","sourceNew":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    stallControl.waitIfStalled();\n  }\n\n","sourceOld":"  /**\n   * This method will block if too many DWPT are currently flushing and no\n   * checked out DWPT are available\n   */\n  void waitIfStalled() {\n    if (infoStream.isEnabled(\"DWFC\")) {\n      infoStream.message(\"DWFC\",\n          \"waitIfStalled: numFlushesPending: \" + flushQueue.size()\n              + \" netBytes: \" + netBytes() + \" flushBytes: \" + flushBytes()\n              + \" fullFlush: \" + fullFlush);\n    }\n    stallControl.waitIfStalled();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7af110b00ea8df9429309d83e38e0533d82e144f":["b0b7352903525839fa9ecf337b5a5e90ea91f243"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["b0b7352903525839fa9ecf337b5a5e90ea91f243","7af110b00ea8df9429309d83e38e0533d82e144f"],"31d4861802ca404d78ca1d15f4550eec415b9199":["b0b7352903525839fa9ecf337b5a5e90ea91f243","7af110b00ea8df9429309d83e38e0533d82e144f"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","b0b7352903525839fa9ecf337b5a5e90ea91f243"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be382406ee6e8449e49c082b50c31367e7add702":["7af110b00ea8df9429309d83e38e0533d82e144f"],"b0b7352903525839fa9ecf337b5a5e90ea91f243":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["7af110b00ea8df9429309d83e38e0533d82e144f","be382406ee6e8449e49c082b50c31367e7add702"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7af110b00ea8df9429309d83e38e0533d82e144f","d08973aa47f2cf98a588293a53af4e948952ccfb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d08973aa47f2cf98a588293a53af4e948952ccfb"]},"commit2Childs":{"7af110b00ea8df9429309d83e38e0533d82e144f":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","be382406ee6e8449e49c082b50c31367e7add702","d08973aa47f2cf98a588293a53af4e948952ccfb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","b0b7352903525839fa9ecf337b5a5e90ea91f243"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"be382406ee6e8449e49c082b50c31367e7add702":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"b0b7352903525839fa9ecf337b5a5e90ea91f243":["7af110b00ea8df9429309d83e38e0533d82e144f","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","fe33227f6805edab2036cbb80645cc4e2d1fa424","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}