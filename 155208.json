{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateHttp2SolrClient#close().mjava","commits":[{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateHttp2SolrClient#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public synchronized void close() {\n    if (closed) {\n      interruptRunnerThreadsPolling();\n      return;\n    }\n    closed = true;\n\n    try {\n      if (shutdownExecutor) {\n        scheduler.shutdown();\n        interruptRunnerThreadsPolling();\n        try {\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n            scheduler.shutdownNow();\n            if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n                .error(\"ExecutorService did not terminate\");\n          }\n        } catch (InterruptedException ie) {\n          scheduler.shutdownNow();\n          Thread.currentThread().interrupt();\n        }\n      } else {\n        interruptRunnerThreadsPolling();\n      }\n    } finally {\n      if (shutdownClient)\n        client.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fd332226a93e244bd33f35c03128eb09cbf3c88","date":1570651010,"type":4,"author":"Cao Manh Dat","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateHttp2SolrClient#close().mjava","sourceNew":null,"sourceOld":"  @Override\n  public synchronized void close() {\n    if (closed) {\n      interruptRunnerThreadsPolling();\n      return;\n    }\n    closed = true;\n\n    try {\n      if (shutdownExecutor) {\n        scheduler.shutdown();\n        interruptRunnerThreadsPolling();\n        try {\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n            scheduler.shutdownNow();\n            if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n                .error(\"ExecutorService did not terminate\");\n          }\n        } catch (InterruptedException ie) {\n          scheduler.shutdownNow();\n          Thread.currentThread().interrupt();\n        }\n      } else {\n        interruptRunnerThreadsPolling();\n      }\n    } finally {\n      if (shutdownClient)\n        client.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":4,"author":"jimczi","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateHttp2SolrClient#close().mjava","sourceNew":null,"sourceOld":"  @Override\n  public synchronized void close() {\n    if (closed) {\n      interruptRunnerThreadsPolling();\n      return;\n    }\n    closed = true;\n\n    try {\n      if (shutdownExecutor) {\n        scheduler.shutdown();\n        interruptRunnerThreadsPolling();\n        try {\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n            scheduler.shutdownNow();\n            if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n                .error(\"ExecutorService did not terminate\");\n          }\n        } catch (InterruptedException ie) {\n          scheduler.shutdownNow();\n          Thread.currentThread().interrupt();\n        }\n      } else {\n        interruptRunnerThreadsPolling();\n      }\n    } finally {\n      if (shutdownClient)\n        client.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2fd332226a93e244bd33f35c03128eb09cbf3c88":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2fd332226a93e244bd33f35c03128eb09cbf3c88"],"b0b597c65628ca9e73913a07e81691f8229bae35":["1a77e5e21cbd575a8240b0e3926164f15295f4e8","2fd332226a93e244bd33f35c03128eb09cbf3c88"]},"commit2Childs":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["2fd332226a93e244bd33f35c03128eb09cbf3c88","b0b597c65628ca9e73913a07e81691f8229bae35"],"2fd332226a93e244bd33f35c03128eb09cbf3c88":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}