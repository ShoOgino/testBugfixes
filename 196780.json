{"path":"solr/core/src/test/org/apache/solr/response/TestBinaryResponseWriter#compareStringFormat(String).mjava","commits":[{"id":"4e7ba4f223712927a09f4dfb65a4c261d07ccc54","date":1544513757,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestBinaryResponseWriter#compareStringFormat(String).mjava","pathOld":"/dev/null","sourceNew":"  private void compareStringFormat(String input) {\n    byte[] bytes1 = new byte[1024];\n    int len1 = ByteUtils.UTF16toUTF8(input, 0, input.length(), bytes1, 0);\n    BytesRef bytesref = new BytesRef(input);\n    System.out.println();\n    assertEquals(len1, bytesref.length);\n    for (int i = 0; i < len1; i++) {\n      assertEquals(input + \" not matching char at :\" + i, bytesref.bytes[i], bytes1[i]);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e7ba4f223712927a09f4dfb65a4c261d07ccc54":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e7ba4f223712927a09f4dfb65a4c261d07ccc54"]},"commit2Childs":{"4e7ba4f223712927a09f4dfb65a4c261d07ccc54":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e7ba4f223712927a09f4dfb65a4c261d07ccc54"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}