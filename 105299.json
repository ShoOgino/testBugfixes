{"path":"src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(long).mjava","commits":[{"id":"52ce7e961a8217faac8128e3c8fe67819eefdde9","date":1201979043,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public long nextSetBit(long index) {\n    int i = (int)(index>>>6);\n    if (i>=wlen) return -1;\n    int subIndex = (int)index & 0x3f; // index within the word\n    long word = bits[i] >>> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (((long)i)<<6) + (subIndex + BitUtil.ntz(word));\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (((long)i)<<6) + BitUtil.ntz(word);\n    }\n\n    return -1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(long).mjava","pathOld":"src/java/org/apache/lucene/util/OpenBitSet#nextSetBit(long).mjava","sourceNew":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public long nextSetBit(long index) {\n    int i = (int)(index>>>6);\n    if (i>=wlen) return -1;\n    int subIndex = (int)index & 0x3f; // index within the word\n    long word = bits[i] >>> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (((long)i)<<6) + (subIndex + BitUtil.ntz(word));\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (((long)i)<<6) + BitUtil.ntz(word);\n    }\n\n    return -1;\n  }\n\n","sourceOld":"  /** Returns the index of the first set bit starting at the index specified.\n   *  -1 is returned if there are no more set bits.\n   */\n  public long nextSetBit(long index) {\n    int i = (int)(index>>>6);\n    if (i>=wlen) return -1;\n    int subIndex = (int)index & 0x3f; // index within the word\n    long word = bits[i] >>> subIndex;  // skip all the bits to the right of index\n\n    if (word!=0) {\n      return (((long)i)<<6) + (subIndex + BitUtil.ntz(word));\n    }\n\n    while(++i < wlen) {\n      word = bits[i];\n      if (word!=0) return (((long)i)<<6) + BitUtil.ntz(word);\n    }\n\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["52ce7e961a8217faac8128e3c8fe67819eefdde9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}