{"path":"lucene/src/java/org/apache/lucene/index/values/MultiDocValues.MultiSource#bytes(int).mjava","commits":[{"id":"d38eb16935a27250e66a031c80560615df637f95","date":1288085332,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/MultiDocValues.MultiSource#bytes(int).mjava","pathOld":"/dev/null","sourceNew":"    public BytesRef bytes(int docID) {\n//      int n = docID - start;\n//      if (n >= numDocs_) {\n//        int idx = readerIndex(docID);\n//        try {\n//          current = subReaders[idx].getIndexValuesCache().getBytes(id);\n//          if (current == null) // nocommit does that work with default values?\n//            current = new DummySource();\n//        } catch (IOException ex) {\n//          // nocommit what to do here?\n//          throw new RuntimeException(ex);\n//        }\n//        numDocs_ = subReaders[idx].maxDoc();\n//        start = starts[idx];\n//        n = docID - start;\n//      }\n//      return current.bytes(n);\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39f3757037aa8f710c0cbf9a76a332de735f58b0","date":1288384416,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/values/MultiDocValues.MultiSource#bytes(int).mjava","sourceNew":null,"sourceOld":"    public BytesRef bytes(int docID) {\n//      int n = docID - start;\n//      if (n >= numDocs_) {\n//        int idx = readerIndex(docID);\n//        try {\n//          current = subReaders[idx].getIndexValuesCache().getBytes(id);\n//          if (current == null) // nocommit does that work with default values?\n//            current = new DummySource();\n//        } catch (IOException ex) {\n//          // nocommit what to do here?\n//          throw new RuntimeException(ex);\n//        }\n//        numDocs_ = subReaders[idx].maxDoc();\n//        start = starts[idx];\n//        n = docID - start;\n//      }\n//      return current.bytes(n);\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"39f3757037aa8f710c0cbf9a76a332de735f58b0":["d38eb16935a27250e66a031c80560615df637f95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d38eb16935a27250e66a031c80560615df637f95":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"39f3757037aa8f710c0cbf9a76a332de735f58b0":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d38eb16935a27250e66a031c80560615df637f95","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d38eb16935a27250e66a031c80560615df637f95":["39f3757037aa8f710c0cbf9a76a332de735f58b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["39f3757037aa8f710c0cbf9a76a332de735f58b0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}