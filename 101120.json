{"path":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","commits":[{"id":"c2c5b6c69b7a616e2efe0053dfc5e07b6d6f4b8d","date":1224067136,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","pathOld":"/dev/null","sourceNew":"  public void testUncommit() throws Exception {\r\n    addSimpleDoc(\"A\");\r\n\r\n    // search - not committed - \"A\" should not be found.\r\n    Map<String,String> args = new HashMap<String, String>();\r\n    args.put( CommonParams.Q, \"id:A\" );\r\n    args.put( \"indent\", \"true\" );\r\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\r\n    assertQ(\"\\\"A\\\" should not be found.\", req\r\n            ,\"//*[@numFound='0']\"\r\n            );\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8744ad19f47109f36428849641ad30f090aa279e","date":1255357510,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","pathOld":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","sourceNew":"  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","sourceOld":"  public void testUncommit() throws Exception {\r\n    addSimpleDoc(\"A\");\r\n\r\n    // search - not committed - \"A\" should not be found.\r\n    Map<String,String> args = new HashMap<String, String>();\r\n    args.put( CommonParams.Q, \"id:A\" );\r\n    args.put( \"indent\", \"true\" );\r\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\r\n    assertQ(\"\\\"A\\\" should not be found.\", req\r\n            ,\"//*[@numFound='0']\"\r\n            );\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","pathOld":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","sourceNew":"  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","sourceOld":"  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2c5b6c69b7a616e2efe0053dfc5e07b6d6f4b8d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"8744ad19f47109f36428849641ad30f090aa279e":["c2c5b6c69b7a616e2efe0053dfc5e07b6d6f4b8d"],"ad94625fb8d088209f46650c8097196fec67f00c":["8744ad19f47109f36428849641ad30f090aa279e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c2c5b6c69b7a616e2efe0053dfc5e07b6d6f4b8d":["8744ad19f47109f36428849641ad30f090aa279e"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c2c5b6c69b7a616e2efe0053dfc5e07b6d6f4b8d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8744ad19f47109f36428849641ad30f090aa279e":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}