{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#createCluster(int,TimeSource).mjava","commits":[{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#createCluster(int,TimeSource).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a cluster with the specified number of nodes. Node metrics are pre-populated.\n   * @param numNodes number of nodes to create\n   * @param timeSource time source\n   * @return instance of simulated cluster\n   */\n  public static SimCloudManager createCluster(int numNodes, TimeSource timeSource) throws Exception {\n    SimCloudManager cloudManager = new SimCloudManager(timeSource);\n    for (int i = 1; i <= numNodes; i++) {\n      Map<String, Object> values = createNodeValues(null);\n//      if (i == 1) { // designated Overseer ?\n        //values.put(ImplicitSnitch.NODEROLE, \"overseer\");\n//      }\n      String nodeId = (String)values.get(ImplicitSnitch.NODE);\n      cloudManager.getSimClusterStateProvider().simAddNode(nodeId);\n      cloudManager.getSimNodeStateProvider().simSetNodeValues(nodeId, values);\n    }\n    return cloudManager;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#createCluster(int,TimeSource).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#createCluster(int,TimeSource).mjava","sourceNew":"  /**\n   * Create a cluster with the specified number of nodes. Node metrics are pre-populated.\n   * @param numNodes number of nodes to create\n   * @param timeSource time source\n   * @return instance of simulated cluster\n   */\n  public static SimCloudManager createCluster(int numNodes, TimeSource timeSource) throws Exception {\n    SimCloudManager cloudManager = new SimCloudManager(timeSource);\n    for (int i = 1; i <= numNodes; i++) {\n      cloudManager.simAddNode();\n    }\n    return cloudManager;\n  }\n\n","sourceOld":"  /**\n   * Create a cluster with the specified number of nodes. Node metrics are pre-populated.\n   * @param numNodes number of nodes to create\n   * @param timeSource time source\n   * @return instance of simulated cluster\n   */\n  public static SimCloudManager createCluster(int numNodes, TimeSource timeSource) throws Exception {\n    SimCloudManager cloudManager = new SimCloudManager(timeSource);\n    for (int i = 1; i <= numNodes; i++) {\n      Map<String, Object> values = createNodeValues(null);\n//      if (i == 1) { // designated Overseer ?\n        //values.put(ImplicitSnitch.NODEROLE, \"overseer\");\n//      }\n      String nodeId = (String)values.get(ImplicitSnitch.NODE);\n      cloudManager.getSimClusterStateProvider().simAddNode(nodeId);\n      cloudManager.getSimNodeStateProvider().simSetNodeValues(nodeId, values);\n    }\n    return cloudManager;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#createCluster(int,TimeSource).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#createCluster(int,TimeSource).mjava","sourceNew":"  /**\n   * Create a cluster with the specified number of nodes. Node metrics are pre-populated.\n   * @param numNodes number of nodes to create\n   * @param timeSource time source\n   * @return instance of simulated cluster\n   */\n  public static SimCloudManager createCluster(int numNodes, TimeSource timeSource) throws Exception {\n    SimCloudManager cloudManager = new SimCloudManager(timeSource);\n    for (int i = 1; i <= numNodes; i++) {\n      cloudManager.simAddNode();\n    }\n    return cloudManager;\n  }\n\n","sourceOld":"  /**\n   * Create a cluster with the specified number of nodes. Node metrics are pre-populated.\n   * @param numNodes number of nodes to create\n   * @param timeSource time source\n   * @return instance of simulated cluster\n   */\n  public static SimCloudManager createCluster(int numNodes, TimeSource timeSource) throws Exception {\n    SimCloudManager cloudManager = new SimCloudManager(timeSource);\n    for (int i = 1; i <= numNodes; i++) {\n      cloudManager.simAddNode();\n    }\n    return cloudManager;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"]},"commit2Childs":{"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}