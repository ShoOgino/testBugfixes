{"path":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"id\", \"\" + (i % 10), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"content\", \"bbb \" + i, TextField.TYPE_UNSTORED));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"id\", \"\" + (i % 10), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"content\", \"bbb \" + i, TextField.TYPE_UNSTORED));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"id\", \"\" + (i % 10), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"content\", \"bbb \" + i, TextField.TYPE_UNSTORED));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"id\", \"\" + (i % 10), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"content\", \"bbb \" + i, TextField.TYPE_UNSTORED));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"id\", \"\" + (i % 10), StringField.TYPE_UNSTORED));\n      doc.add(newField(\"content\", \"bbb \" + i, TextField.TYPE_UNSTORED));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.shutdown();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.shutdown();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.shutdown();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.shutdown();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery(\"content\", \"bbb\", \"14\");\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery();\n    q.add(new Term(\"content\", \"bbb\"));\n    q.add(new Term(\"content\", \"14\"));\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85ca0e073c286ebb2c89364ada6dd2740fc18880","date":1453996944,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      doc.add(new IntPoint(\"doc\", i));\n      doc.add(new NumericDocValuesField(\"dv\", i));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery(\"content\", \"bbb\", \"14\");\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery(\"content\", \"bbb\", \"14\");\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8de18786ea000fc5fbc7214d571cc7f41d597ee3","date":1454085819,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      doc.add(new IntPoint(\"doc\", i));\n      doc.add(new IntPoint(\"doc2d\", i, i));\n      doc.add(new NumericDocValuesField(\"dv\", i));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery(\"content\", \"bbb\", \"14\");\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      doc.add(new IntPoint(\"doc\", i));\n      doc.add(new NumericDocValuesField(\"dv\", i));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery(\"content\", \"bbb\", \"14\");\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d15e34266d75e4e8b95da046cd0afc812367b38","date":1454246129,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      doc.add(new IntPoint(\"doc\", i));\n      doc.add(new IntPoint(\"doc2d\", i, i));\n      doc.add(new NumericDocValuesField(\"dv\", i));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery(\"content\", \"bbb\", \"14\");\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery(\"content\", \"bbb\", \"14\");\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testWithPendingDeletes2().mjava","sourceNew":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      doc.add(new IntPoint(\"doc\", i));\n      doc.add(new IntPoint(\"doc2d\", i, i));\n      doc.add(new NumericDocValuesField(\"dv\", i));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery(\"content\", \"bbb\", \"14\");\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","sourceOld":"  public void testWithPendingDeletes2() throws IOException {\n    // main directory\n    Directory dir = newDirectory();\n    // auxiliary directory\n    Directory aux = newDirectory();\n\n    setUpDirs(dir, aux);\n    IndexWriter writer = newWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));\n\n    // Adds 10 docs, then replaces them with another 10\n    // docs, so 10 pending deletes:\n    for (int i = 0; i < 20; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"id\", \"\" + (i % 10), Field.Store.NO));\n      doc.add(newTextField(\"content\", \"bbb \" + i, Field.Store.NO));\n      writer.updateDocument(new Term(\"id\", \"\" + (i%10)), doc);\n    }\n    \n    writer.addIndexes(aux);\n    \n    // Deletes one of the 10 added docs, leaving 9:\n    PhraseQuery q = new PhraseQuery(\"content\", \"bbb\", \"14\");\n    writer.deleteDocuments(q);\n\n    writer.forceMerge(1);\n    writer.commit();\n\n    verifyNumDocs(dir, 1039);\n    verifyTermDocs(dir, new Term(\"content\", \"aaa\"), 1030);\n    verifyTermDocs(dir, new Term(\"content\", \"bbb\"), 9);\n\n    writer.close();\n    dir.close();\n    aux.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["e9e1499c5d26c936238506df90a3c02c76707722","8d15e34266d75e4e8b95da046cd0afc812367b38"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"8de18786ea000fc5fbc7214d571cc7f41d597ee3":["85ca0e073c286ebb2c89364ada6dd2740fc18880"],"e9e1499c5d26c936238506df90a3c02c76707722":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"85ca0e073c286ebb2c89364ada6dd2740fc18880":["e9e1499c5d26c936238506df90a3c02c76707722"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["e9e1499c5d26c936238506df90a3c02c76707722","8de18786ea000fc5fbc7214d571cc7f41d597ee3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d15e34266d75e4e8b95da046cd0afc812367b38"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["19275ba31e621f6da1b83bf13af75233876fd3d4","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"8de18786ea000fc5fbc7214d571cc7f41d597ee3":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"e9e1499c5d26c936238506df90a3c02c76707722":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","85ca0e073c286ebb2c89364ada6dd2740fc18880","8d15e34266d75e4e8b95da046cd0afc812367b38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["e9e1499c5d26c936238506df90a3c02c76707722"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"85ca0e073c286ebb2c89364ada6dd2740fc18880":["8de18786ea000fc5fbc7214d571cc7f41d597ee3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}