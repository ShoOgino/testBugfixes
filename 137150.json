{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#createTempDir(String,File,boolean).mjava","commits":[{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#createTempDir(String,File,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a new, empty temporary folder, based on the given name. The folder will be\n   * deleted at the end of the suite. Failure to delete the temporary folder will cause\n   * an exception (typically on Windows).\n   */\n  public static File createTempDir(String name, File tmpDir, boolean ensureCleanedUp) {\n    if (name.length() < 3) {\n      throw new IllegalArgumentException(\"description must be at least 3 characters\");\n    }\n  \n    // always pull a long from master random. that way, the randomness of the test\n    // is not affected by whether it initialized the counter (in genTempFile) or not.\n    // note that the Random used by genTempFile is *not* the master Random, and therefore\n    // does not affect the randomness of the test.\n    final Random random = new Random(RandomizedContext.current().getRandom().nextLong());\n    int attempt = 0;\n    File f;\n    do {\n      f = genTempFile(random, name + \"_\", \"\", tmpDir);\n    } while (!f.mkdir() && (attempt++) < GET_TEMP_DIR_RETRY_THRESHOLD);\n    \n    if (attempt > GET_TEMP_DIR_RETRY_THRESHOLD) {\n      throw new RuntimeException(\n          \"failed to get a temporary dir too many times. check your temp directory and consider manually cleaning it.\");\n    }\n    if (ensureCleanedUp) {\n      LuceneTestCase.closeAfterSuite(new CloseableFile(f, LuceneTestCase.suiteFailureMarker));\n    }\n    return f;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be04a7534a8a0679382542b62556ea5fba6cfb7f","date":1396613089,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#createTempDir(String,File,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a new, empty temporary folder, based on the given name. The folder will be\n   * deleted at the end of the suite. Failure to delete the temporary folder will cause\n   * an exception (typically on Windows).\n   */\n  public static File createTempDir(String name, File tmpDir, boolean ensureCleanedUp) {\n    if (name.length() < 3) {\n      throw new IllegalArgumentException(\"description must be at least 3 characters\");\n    }\n  \n    // always pull a long from master random. that way, the randomness of the test\n    // is not affected by whether it initialized the counter (in genTempFile) or not.\n    // note that the Random used by genTempFile is *not* the master Random, and therefore\n    // does not affect the randomness of the test.\n    final Random random = new Random(RandomizedContext.current().getRandom().nextLong());\n    int attempt = 0;\n    File f;\n    do {\n      f = genTempFile(random, name + \"_\", \"\", tmpDir);\n    } while (!f.mkdir() && (attempt++) < GET_TEMP_DIR_RETRY_THRESHOLD);\n    \n    if (attempt > GET_TEMP_DIR_RETRY_THRESHOLD) {\n      throw new RuntimeException(\n          \"failed to get a temporary dir too many times. check your temp directory and consider manually cleaning it.\");\n    }\n    if (ensureCleanedUp) {\n      LuceneTestCase.closeAfterSuite(new CloseableFile(f, LuceneTestCase.suiteFailureMarker));\n    }\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["be04a7534a8a0679382542b62556ea5fba6cfb7f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}