{"path":"src/test/org/apache/lucene/search/TestSort#getRandomNumberString(int,int,int).mjava","commits":[{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#getRandomNumberString(int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  public static String getRandomNumberString(int num, int low, int high) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < num; i++) {\n      sb.append(getRandomNumber(low, high));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cb1066f2afe9450585d0d10063ea4450085236f1","date":1233870820,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#getRandomNumberString(int,int,int).mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getRandomNumberString(int,int,int).mjava","sourceNew":"  public String getRandomNumberString(int num, int low, int high) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < num; i++) {\n      sb.append(getRandomNumber(low, high));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String getRandomNumberString(int num, int low, int high) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < num; i++) {\n      sb.append(getRandomNumber(low, high));\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"450f1a35b72759406232311bd2621441d6ebbe58","date":1236131427,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#getRandomNumberString(int,int,int).mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getRandomNumberString(int,int,int).mjava","sourceNew":"  public String getRandomNumberString(int num, int low, int high) {\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < num; i++) {\n      sb.append(getRandomNumber(low, high));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public String getRandomNumberString(int num, int low, int high) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < num; i++) {\n      sb.append(getRandomNumber(low, high));\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#getRandomNumberString(int,int,int).mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getRandomNumberString(int,int,int).mjava","sourceNew":"  public String getRandomNumberString(int num, int low, int high) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < num; i++) {\n      sb.append(getRandomNumber(low, high));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public String getRandomNumberString(int num, int low, int high) {\n    StringBuffer sb = new StringBuffer();\n    for (int i = 0; i < num; i++) {\n      sb.append(getRandomNumber(low, high));\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#getRandomNumberString(int,int,int).mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#getRandomNumberString(int,int,int).mjava","sourceNew":"  public String getRandomNumberString(int num, int low, int high) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < num; i++) {\n      sb.append(getRandomNumber(low, high));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  public String getRandomNumberString(int num, int low, int high) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < num; i++) {\n      sb.append(getRandomNumber(low, high));\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"cb1066f2afe9450585d0d10063ea4450085236f1":["63bc3238545c6012bd44f5d294077997f236bc4e"],"450f1a35b72759406232311bd2621441d6ebbe58":["cb1066f2afe9450585d0d10063ea4450085236f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["450f1a35b72759406232311bd2621441d6ebbe58"],"63bc3238545c6012bd44f5d294077997f236bc4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"]},"commit2Childs":{"cb1066f2afe9450585d0d10063ea4450085236f1":["450f1a35b72759406232311bd2621441d6ebbe58"],"450f1a35b72759406232311bd2621441d6ebbe58":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["63bc3238545c6012bd44f5d294077997f236bc4e"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"63bc3238545c6012bd44f5d294077997f236bc4e":["cb1066f2afe9450585d0d10063ea4450085236f1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}