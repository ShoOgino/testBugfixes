{"path":"lucene/src/test-framework/org/apache/lucene/analysis/MockVariableLengthPayloadFilter#MockVariableLengthPayloadFilter(Random,TokenStream).mjava","commits":[{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockVariableLengthPayloadFilter#MockVariableLengthPayloadFilter(Random,TokenStream).mjava","pathOld":"/dev/null","sourceNew":"  MockVariableLengthPayloadFilter(Random random, TokenStream in) {\n    super(in);\n    this.random = random;\n    this.payload = new Payload(bytes);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6467a24f5eea1c43a8909563e7b0d9c40c5bf0d","date":1302544674,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockVariableLengthPayloadFilter#MockVariableLengthPayloadFilter(Random,TokenStream).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockVariableLengthPayloadFilter#MockVariableLengthPayloadFilter(Random,TokenStream).mjava","sourceNew":"  public MockVariableLengthPayloadFilter(Random random, TokenStream in) {\n    super(in);\n    this.random = random;\n    this.payload = new Payload(bytes);\n  }\n\n","sourceOld":"  MockVariableLengthPayloadFilter(Random random, TokenStream in) {\n    super(in);\n    this.random = random;\n    this.payload = new Payload(bytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockVariableLengthPayloadFilter#MockVariableLengthPayloadFilter(Random,TokenStream).mjava","pathOld":"/dev/null","sourceNew":"  public MockVariableLengthPayloadFilter(Random random, TokenStream in) {\n    super(in);\n    this.random = random;\n    this.payload = new Payload(bytes);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockVariableLengthPayloadFilter#MockVariableLengthPayloadFilter(Random,TokenStream).mjava","pathOld":"/dev/null","sourceNew":"  public MockVariableLengthPayloadFilter(Random random, TokenStream in) {\n    super(in);\n    this.random = random;\n    this.payload = new Payload(bytes);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/analysis/MockVariableLengthPayloadFilter#MockVariableLengthPayloadFilter(Random,TokenStream).mjava","pathOld":"/dev/null","sourceNew":"  public MockVariableLengthPayloadFilter(Random random, TokenStream in) {\n    super(in);\n    this.random = random;\n    this.payload = new Payload(bytes);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/analysis/MockVariableLengthPayloadFilter#MockVariableLengthPayloadFilter(Random,TokenStream).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/analysis/MockVariableLengthPayloadFilter#MockVariableLengthPayloadFilter(Random,TokenStream).mjava","sourceNew":"  public MockVariableLengthPayloadFilter(Random random, TokenStream in) {\n    super(in);\n    this.random = random;\n    this.payload = new Payload(bytes);\n  }\n\n","sourceOld":"  public MockVariableLengthPayloadFilter(Random random, TokenStream in) {\n    super(in);\n    this.random = random;\n    this.payload = new Payload(bytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["d6467a24f5eea1c43a8909563e7b0d9c40c5bf0d"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d6467a24f5eea1c43a8909563e7b0d9c40c5bf0d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d6467a24f5eea1c43a8909563e7b0d9c40c5bf0d"],"d6467a24f5eea1c43a8909563e7b0d9c40c5bf0d":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"962d04139994fce5193143ef35615499a9a96d78":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d6467a24f5eea1c43a8909563e7b0d9c40c5bf0d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["d6467a24f5eea1c43a8909563e7b0d9c40c5bf0d"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d6467a24f5eea1c43a8909563e7b0d9c40c5bf0d":["7b91922b55d15444d554721b352861d028eb8278","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"962d04139994fce5193143ef35615499a9a96d78":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}