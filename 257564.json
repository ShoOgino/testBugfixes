{"path":"lucene/join/src/java/org/apache/lucene/search/join/BlockJoinSelector#wrap(Bits,BitSet,BitSet).mjava","commits":[{"id":"db447c88c3c3367999a54f10d9a207f3e63db201","date":1435740861,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/BlockJoinSelector#wrap(Bits,BitSet,BitSet).mjava","pathOld":"/dev/null","sourceNew":"  /** Return a {@link Bits} instance that returns true if, and only if, any of\n   *  the children of the given parent document has a value. */\n  public static Bits wrap(final Bits docsWithValue, BitSet parents, BitSet children) {\n    return new Bits() {\n\n      @Override\n      public boolean get(int docID) {\n        assert parents.get(docID) : \"this selector may only be used on parent documents\";\n\n        if (docID == 0) {\n          // no children\n          return false;\n        }\n\n        final int firstChild = parents.prevSetBit(docID - 1) + 1;\n        for (int child = children.nextSetBit(firstChild); child < docID; child = children.nextSetBit(child + 1)) {\n          if (docsWithValue.get(child)) {\n            return true;\n          }\n        }\n        return false;\n      }\n\n      @Override\n      public int length() {\n        return docsWithValue.length();\n      }\n\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"db447c88c3c3367999a54f10d9a207f3e63db201":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db447c88c3c3367999a54f10d9a207f3e63db201"]},"commit2Childs":{"db447c88c3c3367999a54f10d9a207f3e63db201":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db447c88c3c3367999a54f10d9a207f3e63db201"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}