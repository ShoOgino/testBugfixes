{"path":"solr/core/src/java/org/apache/solr/schema/TrieField#numericDocValuesRangeQuery(String,Number,Number,boolean,boolean).mjava","commits":[{"id":"5a412a7808b2815566cb17117ebe6638112b9a31","date":1484916151,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/TrieField#numericDocValuesRangeQuery(String,Number,Number,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private static Query numericDocValuesRangeQuery(\n      String field,\n      Number lowerValue, Number upperValue,\n      boolean lowerInclusive, boolean upperInclusive) {\n\n    long actualLowerValue = Long.MIN_VALUE;\n    if (lowerValue != null) {\n      actualLowerValue = lowerValue.longValue();\n      if (lowerInclusive == false) {\n        if (actualLowerValue == Long.MAX_VALUE) {\n          return new MatchNoDocsQuery();\n        }\n        ++actualLowerValue;\n      }\n    }\n\n    long actualUpperValue = Long.MAX_VALUE;\n    if (upperValue != null) {\n      actualUpperValue = upperValue.longValue();\n      if (upperInclusive == false) {\n        if (actualUpperValue == Long.MIN_VALUE) {\n          return new MatchNoDocsQuery();\n        }\n        --actualUpperValue;\n      }\n    }\n    return NumericDocValuesField.newRangeQuery(field, actualLowerValue, actualUpperValue);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdd24a5b48ffd59f921ccc4f5199fc029f65797","date":1485039431,"type":5,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/NumericFieldType#numericDocValuesRangeQuery(String,Number,Number,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/TrieField#numericDocValuesRangeQuery(String,Number,Number,boolean,boolean).mjava","sourceNew":"  public static Query numericDocValuesRangeQuery(\n      String field,\n      Number lowerValue, Number upperValue,\n      boolean lowerInclusive, boolean upperInclusive) {\n\n    long actualLowerValue = Long.MIN_VALUE;\n    if (lowerValue != null) {\n      actualLowerValue = lowerValue.longValue();\n      if (lowerInclusive == false) {\n        if (actualLowerValue == Long.MAX_VALUE) {\n          return new MatchNoDocsQuery();\n        }\n        ++actualLowerValue;\n      }\n    }\n\n    long actualUpperValue = Long.MAX_VALUE;\n    if (upperValue != null) {\n      actualUpperValue = upperValue.longValue();\n      if (upperInclusive == false) {\n        if (actualUpperValue == Long.MIN_VALUE) {\n          return new MatchNoDocsQuery();\n        }\n        --actualUpperValue;\n      }\n    }\n    return NumericDocValuesField.newRangeQuery(field, actualLowerValue, actualUpperValue);\n  }\n\n","sourceOld":"  private static Query numericDocValuesRangeQuery(\n      String field,\n      Number lowerValue, Number upperValue,\n      boolean lowerInclusive, boolean upperInclusive) {\n\n    long actualLowerValue = Long.MIN_VALUE;\n    if (lowerValue != null) {\n      actualLowerValue = lowerValue.longValue();\n      if (lowerInclusive == false) {\n        if (actualLowerValue == Long.MAX_VALUE) {\n          return new MatchNoDocsQuery();\n        }\n        ++actualLowerValue;\n      }\n    }\n\n    long actualUpperValue = Long.MAX_VALUE;\n    if (upperValue != null) {\n      actualUpperValue = upperValue.longValue();\n      if (upperInclusive == false) {\n        if (actualUpperValue == Long.MIN_VALUE) {\n          return new MatchNoDocsQuery();\n        }\n        --actualUpperValue;\n      }\n    }\n    return NumericDocValuesField.newRangeQuery(field, actualLowerValue, actualUpperValue);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cdd24a5b48ffd59f921ccc4f5199fc029f65797":["5a412a7808b2815566cb17117ebe6638112b9a31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a412a7808b2815566cb17117ebe6638112b9a31":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cdd24a5b48ffd59f921ccc4f5199fc029f65797"]},"commit2Childs":{"3cdd24a5b48ffd59f921ccc4f5199fc029f65797":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a412a7808b2815566cb17117ebe6638112b9a31"],"5a412a7808b2815566cb17117ebe6638112b9a31":["3cdd24a5b48ffd59f921ccc4f5199fc029f65797"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}