{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#getCoreFromAnyList(String).mjava","commits":[{"id":"ad1168477e46f783205c6fb94c21c32307926814","date":1358297289,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getCoreFromAnyList(String).mjava","pathOld":"/dev/null","sourceNew":"  private SolrCore getCoreFromAnyList(String name) {\n    SolrCore core;\n    synchronized (cores) {\n      core = cores.get(name);\n      if (core != null) {\n        core.open();    // increment the ref count while still synchronized\n        return core;\n      }\n    }\n\n    if (dynamicDescriptors.size() == 0) return null; // Nobody even tried to define any transient cores, so we're done.\n\n    // Now look for already loaded transient cores.\n    synchronized (transientCores) {\n      core = transientCores.get(name);\n      if (core != null) {\n        core.open();\n        return core;\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getCoreFromAnyList(String).mjava","pathOld":"/dev/null","sourceNew":"  private SolrCore getCoreFromAnyList(String name) {\n    SolrCore core;\n    synchronized (cores) {\n      core = cores.get(name);\n      if (core != null) {\n        core.open();    // increment the ref count while still synchronized\n        return core;\n      }\n    }\n\n    if (dynamicDescriptors.size() == 0) return null; // Nobody even tried to define any transient cores, so we're done.\n\n    // Now look for already loaded transient cores.\n    synchronized (transientCores) {\n      core = transientCores.get(name);\n      if (core != null) {\n        core.open();\n        return core;\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreMaps[CoreContainer]#getCoreFromAnyList(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getCoreFromAnyList(String).mjava","sourceNew":"  protected SolrCore getCoreFromAnyList(String name) {\n    SolrCore core;\n\n    synchronized (locker) { // This one's OK, the core.open is just an increment\n      core = cores.get(name);\n      if (core != null) {\n        core.open();    // increment the ref count while still synchronized\n        return core;\n      }\n\n      if (dynamicDescriptors.size() == 0) {\n        return null; // Nobody even tried to define any transient cores, so we're done.\n      }\n      // Now look for already loaded transient cores.\n      core = transientCores.get(name);\n      if (core != null) {\n        core.open();  // Just increments ref count, so it's ok that we're in a synch block\n        return core;\n      }\n    }\n\n    return null;\n\n  }\n\n","sourceOld":"  private SolrCore getCoreFromAnyList(String name) {\n    SolrCore core;\n    synchronized (cores) {\n      core = cores.get(name);\n      if (core != null) {\n        core.open();    // increment the ref count while still synchronized\n        return core;\n      }\n    }\n\n    if (dynamicDescriptors.size() == 0) return null; // Nobody even tried to define any transient cores, so we're done.\n\n    // Now look for already loaded transient cores.\n    synchronized (transientCores) {\n      core = transientCores.get(name);\n      if (core != null) {\n        core.open();\n        return core;\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c4015cd39dff8d4dec562d909f9766debac53aa6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ad1168477e46f783205c6fb94c21c32307926814"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad1168477e46f783205c6fb94c21c32307926814":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a837c064b67fa63a9394136e31218b908cdcf783":["ad1168477e46f783205c6fb94c21c32307926814"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a837c064b67fa63a9394136e31218b908cdcf783"]},"commit2Childs":{"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c4015cd39dff8d4dec562d909f9766debac53aa6","ad1168477e46f783205c6fb94c21c32307926814"],"ad1168477e46f783205c6fb94c21c32307926814":["c4015cd39dff8d4dec562d909f9766debac53aa6","a837c064b67fa63a9394136e31218b908cdcf783"],"a837c064b67fa63a9394136e31218b908cdcf783":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}