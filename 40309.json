{"path":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#createNormalizedWeight(Query,ScoreMode).mjava","commits":[{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#createNormalizedWeight(Query,ScoreMode).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#createNormalizedWeight(Query,boolean).mjava","sourceNew":"  /**\n   * Creates a normalized weight for a top-level {@link Query}.\n   * The query is rewritten by this method and {@link Query#createWeight} called,\n   * afterwards the {@link Weight} is normalized. The returned {@code Weight}\n   * can then directly be used to get a {@link Scorer}.\n   * @lucene.internal\n   */\n  public Weight createNormalizedWeight(Query query, ScoreMode scoreMode) throws IOException {\n    query = rewrite(query);\n    return createWeight(query, scoreMode, 1f);\n  }\n\n","sourceOld":"  /**\n   * Creates a normalized weight for a top-level {@link Query}.\n   * The query is rewritten by this method and {@link Query#createWeight} called,\n   * afterwards the {@link Weight} is normalized. The returned {@code Weight}\n   * can then directly be used to get a {@link Scorer}.\n   * @lucene.internal\n   */\n  public Weight createNormalizedWeight(Query query, boolean needsScores) throws IOException {\n    query = rewrite(query);\n    return createWeight(query, needsScores, 1f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#createNormalizedWeight(Query,ScoreMode).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#createNormalizedWeight(Query,boolean).mjava","sourceNew":"  /**\n   * Creates a normalized weight for a top-level {@link Query}.\n   * The query is rewritten by this method and {@link Query#createWeight} called,\n   * afterwards the {@link Weight} is normalized. The returned {@code Weight}\n   * can then directly be used to get a {@link Scorer}.\n   * @lucene.internal\n   */\n  public Weight createNormalizedWeight(Query query, ScoreMode scoreMode) throws IOException {\n    query = rewrite(query);\n    return createWeight(query, scoreMode, 1f);\n  }\n\n","sourceOld":"  /**\n   * Creates a normalized weight for a top-level {@link Query}.\n   * The query is rewritten by this method and {@link Query#createWeight} called,\n   * afterwards the {@link Weight} is normalized. The returned {@code Weight}\n   * can then directly be used to get a {@link Scorer}.\n   * @lucene.internal\n   */\n  public Weight createNormalizedWeight(Query query, boolean needsScores) throws IOException {\n    query = rewrite(query);\n    return createWeight(query, needsScores, 1f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"475584d5e08a22ad3fc7babefe006d77bc744567","date":1523282824,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#createNormalizedWeight(Query,ScoreMode).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#createNormalizedWeight(Query,ScoreMode).mjava","sourceNew":"  /**\n   * Creates a normalized weight for a top-level {@link Query}.\n   * The query is rewritten by this method and {@link Query#createWeight} called,\n   * afterwards the {@link Weight} is normalized. The returned {@code Weight}\n   * can then directly be used to get a {@link Scorer}.\n   * @lucene.internal\n   *\n   * @deprecated Clients should rewrite the query and then call {@link #createWeight(Query, ScoreMode, float)}\n   *             with a boost value of 1f\n   */\n  @Deprecated\n  public Weight createNormalizedWeight(Query query, ScoreMode scoreMode) throws IOException {\n    query = rewrite(query);\n    return createWeight(query, scoreMode, 1f);\n  }\n\n","sourceOld":"  /**\n   * Creates a normalized weight for a top-level {@link Query}.\n   * The query is rewritten by this method and {@link Query#createWeight} called,\n   * afterwards the {@link Weight} is normalized. The returned {@code Weight}\n   * can then directly be used to get a {@link Scorer}.\n   * @lucene.internal\n   */\n  public Weight createNormalizedWeight(Query query, ScoreMode scoreMode) throws IOException {\n    query = rewrite(query);\n    return createWeight(query, scoreMode, 1f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daa09df8e2d7c53f0a69973302dbd98735d05004","date":1523282824,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#createNormalizedWeight(Query,ScoreMode).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a normalized weight for a top-level {@link Query}.\n   * The query is rewritten by this method and {@link Query#createWeight} called,\n   * afterwards the {@link Weight} is normalized. The returned {@code Weight}\n   * can then directly be used to get a {@link Scorer}.\n   * @lucene.internal\n   *\n   * @deprecated Clients should rewrite the query and then call {@link #createWeight(Query, ScoreMode, float)}\n   *             with a boost value of 1f\n   */\n  @Deprecated\n  public Weight createNormalizedWeight(Query query, ScoreMode scoreMode) throws IOException {\n    query = rewrite(query);\n    return createWeight(query, scoreMode, 1f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d58e44159788900f4a2113b84463dc3fbbf80f20","date":1523319203,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#createNormalizedWeight(Query,ScoreMode).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a normalized weight for a top-level {@link Query}.\n   * The query is rewritten by this method and {@link Query#createWeight} called,\n   * afterwards the {@link Weight} is normalized. The returned {@code Weight}\n   * can then directly be used to get a {@link Scorer}.\n   * @lucene.internal\n   */\n  public Weight createNormalizedWeight(Query query, ScoreMode scoreMode) throws IOException {\n    query = rewrite(query);\n    return createWeight(query, scoreMode, 1f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d58e44159788900f4a2113b84463dc3fbbf80f20":["417142ff08fda9cf0b72d5133e63097a166c6458","daa09df8e2d7c53f0a69973302dbd98735d05004"],"475584d5e08a22ad3fc7babefe006d77bc744567":["417142ff08fda9cf0b72d5133e63097a166c6458"],"daa09df8e2d7c53f0a69973302dbd98735d05004":["475584d5e08a22ad3fc7babefe006d77bc744567"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"417142ff08fda9cf0b72d5133e63097a166c6458":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"d58e44159788900f4a2113b84463dc3fbbf80f20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"475584d5e08a22ad3fc7babefe006d77bc744567":["daa09df8e2d7c53f0a69973302dbd98735d05004"],"daa09df8e2d7c53f0a69973302dbd98735d05004":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["d58e44159788900f4a2113b84463dc3fbbf80f20","475584d5e08a22ad3fc7babefe006d77bc744567"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}