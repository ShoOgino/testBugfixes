{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","commits":[{"id":"851e4197476b684154a7b65f996f535522e67400","date":1428926498,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int getRelationship(GeoShape path) {\n        // There are many cases here.  I'll go through them in order\n        boolean ulhcWithin = path.isWithin(ULHC);\n        boolean urhcWithin = path.isWithin(URHC);\n        boolean lrhcWithin = path.isWithin(LRHC);\n        boolean llhcWithin = path.isWithin(LLHC);\n\n        // If there are some that are in, and some that are out, we've got overlap.  Otherwise, things are different.\n        if (ulhcWithin && urhcWithin && lrhcWithin && llhcWithin) {\n            // It's not precisely correct, but at this point we CHOOSE to claim that the entire rectangle is within the path.\n            // This in practice will mean that we generate more geotokens than are strictly needed, but otherwise this case\n            // would be expensive to disentangle.\n            return CONTAINS;\n        }\n\n        if (ulhcWithin || urhcWithin || lrhcWithin || llhcWithin) {\n            // Some are in, some are out: definite overlap\n            return OVERLAPS;\n        }\n\n        // All rectangle endpoints are outside the path.  The three possible cases are WITHIN, OVERLAPS, and DISJOINT.\n        // The only way to distinguish between them is to look at whether any of the four rectangle sides intersect\n        // the path edges.  If there is no intersection, AND any path point is within the rectangle, THEN return WITHIN.\n\n        if (path.intersects(topPlane,bottomPlane,leftPlane,rightPlane) ||\n            path.intersects(bottomPlane,topPlane,leftPlane,rightPlane) ||\n            path.intersects(leftPlane,topPlane,bottomPlane,rightPlane) ||\n            path.intersects(rightPlane,leftPlane,topPlane,bottomPlane))\n            return OVERLAPS;\n\n        if (isWithin(path.getInteriorPoint()))\n            return WITHIN;\n    \n        return DISJOINT;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab7d51740456adc459ec788c8fe27746bdc60a55","date":1429185101,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","sourceNew":"    @Override\n    public int getRelationship(GeoShape path) {\n        if (path.intersects(topPlane,bottomPlane,leftPlane,rightPlane) ||\n            path.intersects(bottomPlane,topPlane,leftPlane,rightPlane) ||\n            path.intersects(leftPlane,topPlane,bottomPlane,rightPlane) ||\n            path.intersects(rightPlane,leftPlane,topPlane,bottomPlane))\n            return OVERLAPS;\n\n        if (isWithin(path.getInteriorPoint()))\n            return WITHIN;\n    \n        if (path.isWithin(centerPoint))\n            return CONTAINS;\n        \n        return DISJOINT;\n    }\n\n","sourceOld":"    @Override\n    public int getRelationship(GeoShape path) {\n        // There are many cases here.  I'll go through them in order\n        boolean ulhcWithin = path.isWithin(ULHC);\n        boolean urhcWithin = path.isWithin(URHC);\n        boolean lrhcWithin = path.isWithin(LRHC);\n        boolean llhcWithin = path.isWithin(LLHC);\n\n        // If there are some that are in, and some that are out, we've got overlap.  Otherwise, things are different.\n        if (ulhcWithin && urhcWithin && lrhcWithin && llhcWithin) {\n            // It's not precisely correct, but at this point we CHOOSE to claim that the entire rectangle is within the path.\n            // This in practice will mean that we generate more geotokens than are strictly needed, but otherwise this case\n            // would be expensive to disentangle.\n            return CONTAINS;\n        }\n\n        if (ulhcWithin || urhcWithin || lrhcWithin || llhcWithin) {\n            // Some are in, some are out: definite overlap\n            return OVERLAPS;\n        }\n\n        // All rectangle endpoints are outside the path.  The three possible cases are WITHIN, OVERLAPS, and DISJOINT.\n        // The only way to distinguish between them is to look at whether any of the four rectangle sides intersect\n        // the path edges.  If there is no intersection, AND any path point is within the rectangle, THEN return WITHIN.\n\n        if (path.intersects(topPlane,bottomPlane,leftPlane,rightPlane) ||\n            path.intersects(bottomPlane,topPlane,leftPlane,rightPlane) ||\n            path.intersects(leftPlane,topPlane,bottomPlane,rightPlane) ||\n            path.intersects(rightPlane,leftPlane,topPlane,bottomPlane))\n            return OVERLAPS;\n\n        if (isWithin(path.getInteriorPoint()))\n            return WITHIN;\n    \n        return DISJOINT;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0fb9dbed1415914caa27460f8abb7afadaa61451","date":1429504289,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","sourceNew":"    @Override\n    public int getRelationship(final GeoShape path) {\n        final int insideRectangle = isShapeInsideBBox(path);\n        if (insideRectangle == SOME_INSIDE)\n            return OVERLAPS;\n\n        final boolean insideShape = path.isWithin(ULHC);\n        \n        if (insideRectangle == ALL_INSIDE && insideShape)\n            return OVERLAPS;\n\n        if (path.intersects(topPlane,bottomPlane,leftPlane,rightPlane) ||\n            path.intersects(bottomPlane,topPlane,leftPlane,rightPlane) ||\n            path.intersects(leftPlane,topPlane,bottomPlane,rightPlane) ||\n            path.intersects(rightPlane,leftPlane,topPlane,bottomPlane))\n            return OVERLAPS;\n\n        if (insideRectangle == ALL_INSIDE)\n            return WITHIN;\n    \n        if (insideShape)\n            return CONTAINS;\n        \n        return DISJOINT;\n    }\n\n","sourceOld":"    @Override\n    public int getRelationship(GeoShape path) {\n        if (path.intersects(topPlane,bottomPlane,leftPlane,rightPlane) ||\n            path.intersects(bottomPlane,topPlane,leftPlane,rightPlane) ||\n            path.intersects(leftPlane,topPlane,bottomPlane,rightPlane) ||\n            path.intersects(rightPlane,leftPlane,topPlane,bottomPlane))\n            return OVERLAPS;\n\n        if (isWithin(path.getInteriorPoint()))\n            return WITHIN;\n    \n        if (path.isWithin(centerPoint))\n            return CONTAINS;\n        \n        return DISJOINT;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7aca5c321bc9760dbfc9cefcc9d648e946b4615e","date":1429714020,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","sourceNew":"    @Override\n    public int getRelationship(final GeoShape path) {\n        //System.err.println(this+\" getrelationship with \"+path);\n        final int insideRectangle = isShapeInsideBBox(path);\n        if (insideRectangle == SOME_INSIDE)\n        {\n            //System.err.println(\" some inside\");\n            return OVERLAPS;\n        }\n\n        final boolean insideShape = path.isWithin(ULHC);\n\n        if (insideRectangle == ALL_INSIDE && insideShape) {\n            //System.err.println(\" inside of each other\");\n            return OVERLAPS;\n        }\n\n        if (path.intersects(topPlane,topPlanePoints,bottomPlane,leftPlane,rightPlane) ||\n            path.intersects(bottomPlane,bottomPlanePoints,topPlane,leftPlane,rightPlane) ||\n            path.intersects(leftPlane,leftPlanePoints,topPlane,bottomPlane,rightPlane) ||\n            path.intersects(rightPlane,rightPlanePoints,leftPlane,topPlane,bottomPlane)) {\n            //System.err.println(\" edges intersect\");\n            return OVERLAPS;\n        }\n\n        if (insideRectangle == ALL_INSIDE)\n        {\n            //System.err.println(\" shape inside rectangle\");\n            return WITHIN;\n        }\n    \n        if (insideShape) {\n            //System.err.println(\" shape contains rectangle\");\n            return CONTAINS;\n        }\n        //System.err.println(\" disjoint\");\n        return DISJOINT;\n    }\n\n","sourceOld":"    @Override\n    public int getRelationship(final GeoShape path) {\n        final int insideRectangle = isShapeInsideBBox(path);\n        if (insideRectangle == SOME_INSIDE)\n            return OVERLAPS;\n\n        final boolean insideShape = path.isWithin(ULHC);\n        \n        if (insideRectangle == ALL_INSIDE && insideShape)\n            return OVERLAPS;\n\n        if (path.intersects(topPlane,bottomPlane,leftPlane,rightPlane) ||\n            path.intersects(bottomPlane,topPlane,leftPlane,rightPlane) ||\n            path.intersects(leftPlane,topPlane,bottomPlane,rightPlane) ||\n            path.intersects(rightPlane,leftPlane,topPlane,bottomPlane))\n            return OVERLAPS;\n\n        if (insideRectangle == ALL_INSIDE)\n            return WITHIN;\n    \n        if (insideShape)\n            return CONTAINS;\n        \n        return DISJOINT;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","sourceNew":"  @Override\n  public int getRelationship(final GeoShape path) {\n    //System.err.println(this+\" getrelationship with \"+path);\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE) {\n      //System.err.println(\" some inside\");\n      return OVERLAPS;\n    }\n\n    final boolean insideShape = path.isWithin(ULHC);\n\n    if (insideRectangle == ALL_INSIDE && insideShape) {\n      //System.err.println(\" inside of each other\");\n      return OVERLAPS;\n    }\n\n    if (path.intersects(topPlane, topPlanePoints, bottomPlane, leftPlane, rightPlane) ||\n        path.intersects(bottomPlane, bottomPlanePoints, topPlane, leftPlane, rightPlane) ||\n        path.intersects(leftPlane, leftPlanePoints, topPlane, bottomPlane, rightPlane) ||\n        path.intersects(rightPlane, rightPlanePoints, leftPlane, topPlane, bottomPlane)) {\n      //System.err.println(\" edges intersect\");\n      return OVERLAPS;\n    }\n\n    if (insideRectangle == ALL_INSIDE) {\n      //System.err.println(\" shape inside rectangle\");\n      return WITHIN;\n    }\n\n    if (insideShape) {\n      //System.err.println(\" shape contains rectangle\");\n      return CONTAINS;\n    }\n    //System.err.println(\" disjoint\");\n    return DISJOINT;\n  }\n\n","sourceOld":"    @Override\n    public int getRelationship(final GeoShape path) {\n        //System.err.println(this+\" getrelationship with \"+path);\n        final int insideRectangle = isShapeInsideBBox(path);\n        if (insideRectangle == SOME_INSIDE)\n        {\n            //System.err.println(\" some inside\");\n            return OVERLAPS;\n        }\n\n        final boolean insideShape = path.isWithin(ULHC);\n\n        if (insideRectangle == ALL_INSIDE && insideShape) {\n            //System.err.println(\" inside of each other\");\n            return OVERLAPS;\n        }\n\n        if (path.intersects(topPlane,topPlanePoints,bottomPlane,leftPlane,rightPlane) ||\n            path.intersects(bottomPlane,bottomPlanePoints,topPlane,leftPlane,rightPlane) ||\n            path.intersects(leftPlane,leftPlanePoints,topPlane,bottomPlane,rightPlane) ||\n            path.intersects(rightPlane,rightPlanePoints,leftPlane,topPlane,bottomPlane)) {\n            //System.err.println(\" edges intersect\");\n            return OVERLAPS;\n        }\n\n        if (insideRectangle == ALL_INSIDE)\n        {\n            //System.err.println(\" shape inside rectangle\");\n            return WITHIN;\n        }\n    \n        if (insideShape) {\n            //System.err.println(\" shape contains rectangle\");\n            return CONTAINS;\n        }\n        //System.err.println(\" disjoint\");\n        return DISJOINT;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int getRelationship(final GeoShape path) {\n    //System.err.println(this+\" getrelationship with \"+path);\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE) {\n      //System.err.println(\" some inside\");\n      return OVERLAPS;\n    }\n\n    final boolean insideShape = path.isWithin(ULHC);\n\n    if (insideRectangle == ALL_INSIDE && insideShape) {\n      //System.err.println(\" inside of each other\");\n      return OVERLAPS;\n    }\n\n    if (path.intersects(topPlane, topPlanePoints, bottomPlane, leftPlane, rightPlane) ||\n        path.intersects(bottomPlane, bottomPlanePoints, topPlane, leftPlane, rightPlane) ||\n        path.intersects(leftPlane, leftPlanePoints, topPlane, bottomPlane, rightPlane) ||\n        path.intersects(rightPlane, rightPlanePoints, leftPlane, topPlane, bottomPlane)) {\n      //System.err.println(\" edges intersect\");\n      return OVERLAPS;\n    }\n\n    if (insideRectangle == ALL_INSIDE) {\n      //System.err.println(\" shape inside rectangle\");\n      return WITHIN;\n    }\n\n    if (insideShape) {\n      //System.err.println(\" shape contains rectangle\");\n      return CONTAINS;\n    }\n    //System.err.println(\" disjoint\");\n    return DISJOINT;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoRectangle#getRelationship(GeoShape).mjava","sourceNew":"  @Override\n  public int getRelationship(final GeoShape path) {\n    //System.err.println(this+\" getrelationship with \"+path);\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE) {\n      //System.err.println(\" some inside\");\n      return OVERLAPS;\n    }\n\n    final boolean insideShape = path.isWithin(ULHC);\n\n    if (insideRectangle == ALL_INSIDE && insideShape) {\n      //System.err.println(\" inside of each other\");\n      return OVERLAPS;\n    }\n\n    if (path.intersects(topPlane, topPlanePoints, bottomPlane, leftPlane, rightPlane) ||\n        path.intersects(bottomPlane, bottomPlanePoints, topPlane, leftPlane, rightPlane) ||\n        path.intersects(leftPlane, leftPlanePoints, topPlane, bottomPlane, rightPlane) ||\n        path.intersects(rightPlane, rightPlanePoints, leftPlane, topPlane, bottomPlane)) {\n      //System.err.println(\" edges intersect\");\n      return OVERLAPS;\n    }\n\n    if (insideRectangle == ALL_INSIDE) {\n      //System.err.println(\" shape inside rectangle\");\n      return WITHIN;\n    }\n\n    if (insideShape) {\n      //System.err.println(\" shape contains rectangle\");\n      return CONTAINS;\n    }\n    //System.err.println(\" disjoint\");\n    return DISJOINT;\n  }\n\n","sourceOld":"  @Override\n  public int getRelationship(final GeoShape path) {\n    //System.err.println(this+\" getrelationship with \"+path);\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE) {\n      //System.err.println(\" some inside\");\n      return OVERLAPS;\n    }\n\n    final boolean insideShape = path.isWithin(ULHC);\n\n    if (insideRectangle == ALL_INSIDE && insideShape) {\n      //System.err.println(\" inside of each other\");\n      return OVERLAPS;\n    }\n\n    if (path.intersects(topPlane, topPlanePoints, bottomPlane, leftPlane, rightPlane) ||\n        path.intersects(bottomPlane, bottomPlanePoints, topPlane, leftPlane, rightPlane) ||\n        path.intersects(leftPlane, leftPlanePoints, topPlane, bottomPlane, rightPlane) ||\n        path.intersects(rightPlane, rightPlanePoints, leftPlane, topPlane, bottomPlane)) {\n      //System.err.println(\" edges intersect\");\n      return OVERLAPS;\n    }\n\n    if (insideRectangle == ALL_INSIDE) {\n      //System.err.println(\" shape inside rectangle\");\n      return WITHIN;\n    }\n\n    if (insideShape) {\n      //System.err.println(\" shape contains rectangle\");\n      return CONTAINS;\n    }\n    //System.err.println(\" disjoint\");\n    return DISJOINT;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["ab7d51740456adc459ec788c8fe27746bdc60a55"],"ab7d51740456adc459ec788c8fe27746bdc60a55":["851e4197476b684154a7b65f996f535522e67400"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["7aca5c321bc9760dbfc9cefcc9d648e946b4615e"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"851e4197476b684154a7b65f996f535522e67400":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7aca5c321bc9760dbfc9cefcc9d648e946b4615e":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["7aca5c321bc9760dbfc9cefcc9d648e946b4615e"],"ab7d51740456adc459ec788c8fe27746bdc60a55":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","851e4197476b684154a7b65f996f535522e67400"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"851e4197476b684154a7b65f996f535522e67400":["ab7d51740456adc459ec788c8fe27746bdc60a55"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"7aca5c321bc9760dbfc9cefcc9d648e946b4615e":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}