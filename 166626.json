{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","commits":[{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGammaDistribution().mjava","sourceNew":"  @Test\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":"  @Test\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4bab9eeea60eefbea2957be27b8d1923095df771","date":1525498218,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":"  @Test\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a1c374690db69470f6aa4bffc43dcacf1f4e3e49","date":1529007399,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() + \" \" + sb.doubleValue(), sa.doubleValue() >= sb.doubleValue());\n    assertTrue(sb.doubleValue() + \" \" + sc.doubleValue(), sb.doubleValue() >= sc.doubleValue());\n    assertTrue(sc.doubleValue() + \" \" + sd.doubleValue(), sc.doubleValue() >= sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","bugFix":["e66b7e53b1b8958fb91f9d199b7520fe429ecdfc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f43188aaa00f87aca6a3e5137ac2e4f01bea0d2d","date":1572984919,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=gammaDistribution(1, 10),\" +\n        \"b=sample(a, 10),\" +\n        \"c=cumulativeProbability(a, 5.10),\" +\n        \"d=probability(a, 5, 6))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 1);\n    List<Number> b = (List<Number>)tuples.get(0).get(\"b\");\n    assertEquals(10, b.size());\n    Number c = (Number)tuples.get(0).get(\"c\");\n    assertEquals(c.doubleValue(), 0.39950442118773394D, 0);\n    Number d = (Number)tuples.get(0).get(\"d\");\n    assertEquals(d.doubleValue(), 0.05771902361860709D, 0);\n  }\n\n","sourceOld":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() + \" \" + sb.doubleValue(), sa.doubleValue() >= sb.doubleValue());\n    assertTrue(sb.doubleValue() + \" \" + sc.doubleValue(), sb.doubleValue() >= sc.doubleValue());\n    assertTrue(sc.doubleValue() + \" \" + sd.doubleValue(), sc.doubleValue() >= sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=gammaDistribution(1, 10),\" +\n        \"b=sample(a, 10),\" +\n        \"c=cumulativeProbability(a, 5.10),\" +\n        \"d=probability(a, 5, 6))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 1);\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> b = (List<Number>)tuples.get(0).get(\"b\");\n    assertEquals(10, b.size());\n    Number c = (Number)tuples.get(0).get(\"c\");\n    assertEquals(c.doubleValue(), 0.39950442118773394D, 0);\n    Number d = (Number)tuples.get(0).get(\"d\");\n    assertEquals(d.doubleValue(), 0.05771902361860709D, 0);\n  }\n\n","sourceOld":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=gammaDistribution(1, 10),\" +\n        \"b=sample(a, 10),\" +\n        \"c=cumulativeProbability(a, 5.10),\" +\n        \"d=probability(a, 5, 6))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertEquals(tuples.size(), 1);\n    List<Number> b = (List<Number>)tuples.get(0).get(\"b\");\n    assertEquals(10, b.size());\n    Number c = (Number)tuples.get(0).get(\"c\");\n    assertEquals(c.doubleValue(), 0.39950442118773394D, 0);\n    Number d = (Number)tuples.get(0).get(\"d\");\n    assertEquals(d.doubleValue(), 0.05771902361860709D, 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["f43188aaa00f87aca6a3e5137ac2e4f01bea0d2d"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["4bab9eeea60eefbea2957be27b8d1923095df771","a1c374690db69470f6aa4bffc43dcacf1f4e3e49"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a1c374690db69470f6aa4bffc43dcacf1f4e3e49"],"4bab9eeea60eefbea2957be27b8d1923095df771":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f43188aaa00f87aca6a3e5137ac2e4f01bea0d2d":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"],"a1c374690db69470f6aa4bffc43dcacf1f4e3e49":["4bab9eeea60eefbea2957be27b8d1923095df771"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["4bab9eeea60eefbea2957be27b8d1923095df771","a1c374690db69470f6aa4bffc43dcacf1f4e3e49"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["f43188aaa00f87aca6a3e5137ac2e4f01bea0d2d"],"4bab9eeea60eefbea2957be27b8d1923095df771":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a1c374690db69470f6aa4bffc43dcacf1f4e3e49","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"f43188aaa00f87aca6a3e5137ac2e4f01bea0d2d":["9ba1b632c041956c93c41aa1143d16a567014891"],"a1c374690db69470f6aa4bffc43dcacf1f4e3e49":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["4bab9eeea60eefbea2957be27b8d1923095df771"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}