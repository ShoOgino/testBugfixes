{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#initialResult(ReaderContext,int,int[]).mjava","commits":[{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#initialResult(ReaderContext,int,int[]).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#initialResult(IndexReader,int,int[]).mjava","sourceNew":"    private OpenBitSetDISI initialResult(ReaderContext info, int logic, int[] index)\n    throws IOException\n    {\n        IndexReader reader = info.reader;\n        OpenBitSetDISI result;\n        /**\n         * First AND operation takes place against a completely false\n         * bitset and will always return zero results.\n         */\n        if (logic == AND)\n        {\n            result = new OpenBitSetDISI(getDISI(chain[index[0]], info), reader.maxDoc());\n            ++index[0];\n        }\n        else if (logic == ANDNOT)\n        {\n            result = new OpenBitSetDISI(getDISI(chain[index[0]], info), reader.maxDoc());\n            result.flip(0,reader.maxDoc()); // NOTE: may set bits for deleted docs.\n            ++index[0];\n        }\n        else\n        {\n            result = new OpenBitSetDISI(reader.maxDoc());\n        }\n        return result;\n    }\n\n","sourceOld":"    private OpenBitSetDISI initialResult(IndexReader reader, int logic, int[] index)\n    throws IOException\n    {\n        OpenBitSetDISI result;\n        /**\n         * First AND operation takes place against a completely false\n         * bitset and will always return zero results.\n         */\n        if (logic == AND)\n        {\n            result = new OpenBitSetDISI(getDISI(chain[index[0]], reader), reader.maxDoc());\n            ++index[0];\n        }\n        else if (logic == ANDNOT)\n        {\n            result = new OpenBitSetDISI(getDISI(chain[index[0]], reader), reader.maxDoc());\n            result.flip(0,reader.maxDoc()); // NOTE: may set bits for deleted docs.\n            ++index[0];\n        }\n        else\n        {\n            result = new OpenBitSetDISI(reader.maxDoc());\n        }\n        return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705","date":1294747166,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#initialResult(AtomicReaderContext,int,int[]).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#initialResult(ReaderContext,int,int[]).mjava","sourceNew":"    private OpenBitSetDISI initialResult(AtomicReaderContext context, int logic, int[] index)\n    throws IOException\n    {\n        IndexReader reader = context.reader;\n        OpenBitSetDISI result;\n        /**\n         * First AND operation takes place against a completely false\n         * bitset and will always return zero results.\n         */\n        if (logic == AND)\n        {\n            result = new OpenBitSetDISI(getDISI(chain[index[0]], context), reader.maxDoc());\n            ++index[0];\n        }\n        else if (logic == ANDNOT)\n        {\n            result = new OpenBitSetDISI(getDISI(chain[index[0]], context), reader.maxDoc());\n            result.flip(0,reader.maxDoc()); // NOTE: may set bits for deleted docs.\n            ++index[0];\n        }\n        else\n        {\n            result = new OpenBitSetDISI(reader.maxDoc());\n        }\n        return result;\n    }\n\n","sourceOld":"    private OpenBitSetDISI initialResult(ReaderContext info, int logic, int[] index)\n    throws IOException\n    {\n        IndexReader reader = info.reader;\n        OpenBitSetDISI result;\n        /**\n         * First AND operation takes place against a completely false\n         * bitset and will always return zero results.\n         */\n        if (logic == AND)\n        {\n            result = new OpenBitSetDISI(getDISI(chain[index[0]], info), reader.maxDoc());\n            ++index[0];\n        }\n        else if (logic == ANDNOT)\n        {\n            result = new OpenBitSetDISI(getDISI(chain[index[0]], info), reader.maxDoc());\n            result.flip(0,reader.maxDoc()); // NOTE: may set bits for deleted docs.\n            ++index[0];\n        }\n        else\n        {\n            result = new OpenBitSetDISI(reader.maxDoc());\n        }\n        return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"]},"commit2Childs":{"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["a10b98ef1ef4bf9e38d2e07a9e425a916afa8705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"a10b98ef1ef4bf9e38d2e07a9e425a916afa8705":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}