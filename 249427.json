{"path":"lucene/core/src/java/org/apache/lucene/document/LatLonDocValuesField#newDistanceSort(String,double,double).mjava","commits":[{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonDocValuesField#newDistanceSort(String,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonDocValuesField#newDistanceSort(String,double,double).mjava","sourceNew":"  /**\n   * Creates a SortField for sorting by distance from a location.\n   * <p>\n   * This sort orders documents by ascending distance from the location. The value returned in {@link FieldDoc} for\n   * the hits contains a Double instance with the distance in meters.\n   * <p>\n   * If a document is missing the field, then by default it is treated as having {@link Double#POSITIVE_INFINITY} distance\n   * (missing values sort last).\n   * <p>\n   * If a document contains multiple values for the field, the <i>closest</i> distance to the location is used.\n   * \n   * @param field field name. must not be null.\n   * @param latitude latitude at the center: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude at the center: must be within standard +/-180 coordinate bounds.\n   * @return SortField ordering documents by distance\n   * @throws IllegalArgumentException if {@code field} is null or location has invalid coordinates.\n   */\n  public static SortField newDistanceSort(String field, double latitude, double longitude) {\n    return new LatLonPointSortField(field, latitude, longitude);\n  }\n\n","sourceOld":"  /**\n   * Creates a SortField for sorting by distance from a location.\n   * <p>\n   * This sort orders documents by ascending distance from the location. The value returned in {@link FieldDoc} for\n   * the hits contains a Double instance with the distance in meters.\n   * <p>\n   * If a document is missing the field, then by default it is treated as having {@link Double#POSITIVE_INFINITY} distance\n   * (missing values sort last).\n   * <p>\n   * If a document contains multiple values for the field, the <i>closest</i> distance to the location is used.\n   * \n   * @param field field name. must not be null.\n   * @param latitude latitude at the center: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude at the center: must be within standard +/-180 coordinate bounds.\n   * @return SortField ordering documents by distance\n   * @throws IllegalArgumentException if {@code field} is null or location has invalid coordinates.\n   */\n  public static SortField newDistanceSort(String field, double latitude, double longitude) {\n    return new LatLonPointSortField(field, latitude, longitude);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88b0212386fe531136816706dc37dc49b9dbf7dc"]},"commit2Childs":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}