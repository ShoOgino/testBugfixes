{"path":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","commits":[{"id":"9e87c4193bc100c3b96235f14bee01a5b2009ce5","date":1287756261,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#setRangeCollator(Collator).mjava","sourceNew":"  /**\r\n   * Sets the collator used to determine index term inclusion in ranges\r\n   * for RangeQuerys.\r\n   * <p/>\r\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\r\n   * collator using this method will cause every single index Term in the\r\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\r\n   * Depending on the number of index Terms in this Field, the operation could\r\n   * be very slow.\r\n   *\r\n   *  @param rc  the collator to use when constructing RangeQuerys\r\n   */\r\n  public void setRangeCollator(Collator rc) {\r\n    rangeCollator = rc;\r\n  }\r\n\n","sourceOld":"  /** \n   * Sets the collator used to determine index term inclusion in ranges\n   * for RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\n   * collator using this method will cause every single index Term in the\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\n   * Depending on the number of index Terms in this Field, the operation could\n   * be very slow.\n   *\n   *  @param rc  the collator to use when constructing RangeQuerys\n   */\n  public void setRangeCollator(Collator rc) {\n    rangeCollator = rc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b12d3e81e0f95a4527b5703953c503f71120ffcc","date":1288080933,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#setRangeCollator(Collator).mjava","sourceNew":"  /**\r\n   * Sets the collator used to determine index term inclusion in ranges\r\n   * for RangeQuerys.\r\n   * <p/>\r\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\r\n   * collator using this method will cause every single index Term in the\r\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\r\n   * Depending on the number of index Terms in this Field, the operation could\r\n   * be very slow.\r\n   *\r\n   *  @param rc  the collator to use when constructing RangeQuerys\r\n   */\r\n  public void setRangeCollator(Collator rc) {\r\n    rangeCollator = rc;\r\n  }\r\n\n","sourceOld":"  /** \n   * Sets the collator used to determine index term inclusion in ranges\n   * for RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\n   * collator using this method will cause every single index Term in the\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\n   * Depending on the number of index Terms in this Field, the operation could\n   * be very slow.\n   *\n   *  @param rc  the collator to use when constructing RangeQuerys\n   */\n  public void setRangeCollator(Collator rc) {\n    rangeCollator = rc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * Sets the collator used to determine index term inclusion in ranges\r\n   * for RangeQuerys.\r\n   * <p/>\r\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\r\n   * collator using this method will cause every single index Term in the\r\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\r\n   * Depending on the number of index Terms in this Field, the operation could\r\n   * be very slow.\r\n   *\r\n   *  @param rc  the collator to use when constructing RangeQuerys\r\n   */\r\n  public void setRangeCollator(Collator rc) {\r\n    rangeCollator = rc;\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bed62fe6383040eaff2ec720cdc55bb1462c61da","date":1296408595,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","sourceNew":"  /**\n   * Sets the collator used to determine index term inclusion in ranges\n   * for RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\n   * collator using this method will cause every single index Term in the\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\n   * Depending on the number of index Terms in this Field, the operation could\n   * be very slow.\n   *\n   *  @param rc  the collator to use when constructing RangeQuerys\n   */\n  public void setRangeCollator(Collator rc) {\n    rangeCollator = rc;\n  }\n\n","sourceOld":"  /**\r\n   * Sets the collator used to determine index term inclusion in ranges\r\n   * for RangeQuerys.\r\n   * <p/>\r\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\r\n   * collator using this method will cause every single index Term in the\r\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\r\n   * Depending on the number of index Terms in this Field, the operation could\r\n   * be very slow.\r\n   *\r\n   *  @param rc  the collator to use when constructing RangeQuerys\r\n   */\r\n  public void setRangeCollator(Collator rc) {\r\n    rangeCollator = rc;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","sourceNew":"  /**\n   * Sets the collator used to determine index term inclusion in ranges\n   * for RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\n   * collator using this method will cause every single index Term in the\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\n   * Depending on the number of index Terms in this Field, the operation could\n   * be very slow.\n   *\n   *  @param rc  the collator to use when constructing RangeQuerys\n   */\n  public void setRangeCollator(Collator rc) {\n    rangeCollator = rc;\n  }\n\n","sourceOld":"  /**\r\n   * Sets the collator used to determine index term inclusion in ranges\r\n   * for RangeQuerys.\r\n   * <p/>\r\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\r\n   * collator using this method will cause every single index Term in the\r\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\r\n   * Depending on the number of index Terms in this Field, the operation could\r\n   * be very slow.\r\n   *\r\n   *  @param rc  the collator to use when constructing RangeQuerys\r\n   */\r\n  public void setRangeCollator(Collator rc) {\r\n    rangeCollator = rc;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","sourceNew":"  /**\n   * Sets the collator used to determine index term inclusion in ranges\n   * for RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\n   * collator using this method will cause every single index Term in the\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\n   * Depending on the number of index Terms in this Field, the operation could\n   * be very slow.\n   *\n   *  @param rc  the collator to use when constructing RangeQuerys\n   */\n  public void setRangeCollator(Collator rc) {\n    rangeCollator = rc;\n  }\n\n","sourceOld":"  /**\r\n   * Sets the collator used to determine index term inclusion in ranges\r\n   * for RangeQuerys.\r\n   * <p/>\r\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\r\n   * collator using this method will cause every single index Term in the\r\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\r\n   * Depending on the number of index Terms in this Field, the operation could\r\n   * be very slow.\r\n   *\r\n   *  @param rc  the collator to use when constructing RangeQuerys\r\n   */\r\n  public void setRangeCollator(Collator rc) {\r\n    rangeCollator = rc;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e492fb0f2bb0b4b47208286f9331ff55963c656","date":1298870150,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the collator used to determine index term inclusion in ranges\n   * for RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\n   * collator using this method will cause every single index Term in the\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\n   * Depending on the number of index Terms in this Field, the operation could\n   * be very slow.\n   *\n   *  @param rc  the collator to use when constructing RangeQuerys\n   */\n  public void setRangeCollator(Collator rc) {\n    rangeCollator = rc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the collator used to determine index term inclusion in ranges\n   * for RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\n   * collator using this method will cause every single index Term in the\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\n   * Depending on the number of index Terms in this Field, the operation could\n   * be very slow.\n   *\n   *  @param rc  the collator to use when constructing RangeQuerys\n   */\n  public void setRangeCollator(Collator rc) {\n    rangeCollator = rc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParserBase#setRangeCollator(Collator).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the collator used to determine index term inclusion in ranges\n   * for RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\n   * collator using this method will cause every single index Term in the\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\n   * Depending on the number of index Terms in this Field, the operation could\n   * be very slow.\n   *\n   *  @param rc  the collator to use when constructing RangeQuerys\n   */\n  public void setRangeCollator(Collator rc) {\n    rangeCollator = rc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["b12d3e81e0f95a4527b5703953c503f71120ffcc","bed62fe6383040eaff2ec720cdc55bb1462c61da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9e87c4193bc100c3b96235f14bee01a5b2009ce5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e87c4193bc100c3b96235f14bee01a5b2009ce5"],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["bed62fe6383040eaff2ec720cdc55bb1462c61da"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e87c4193bc100c3b96235f14bee01a5b2009ce5"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","bed62fe6383040eaff2ec720cdc55bb1462c61da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e492fb0f2bb0b4b47208286f9331ff55963c656"],"bed62fe6383040eaff2ec720cdc55bb1462c61da":["9e87c4193bc100c3b96235f14bee01a5b2009ce5"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e87c4193bc100c3b96235f14bee01a5b2009ce5","b12d3e81e0f95a4527b5703953c503f71120ffcc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"9e87c4193bc100c3b96235f14bee01a5b2009ce5":["b12d3e81e0f95a4527b5703953c503f71120ffcc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","bed62fe6383040eaff2ec720cdc55bb1462c61da"],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"bed62fe6383040eaff2ec720cdc55bb1462c61da":["29ef99d61cda9641b6250bf9567329a6e65f901d","3e492fb0f2bb0b4b47208286f9331ff55963c656","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}