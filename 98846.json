{"path":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","commits":[{"id":"ae3be3418aea9954be27a83315087f67c0c2201e","date":1361023362,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Get a value from this buffer. */\n  public final long get(long index) {\n    if (index < 0 || index >= size()) {\n      throw new IndexOutOfBoundsException(\"\" + index);\n    }\n    int block = (int) (index >> BLOCK_BITS);\n    int element = (int) (index & BLOCK_MASK);\n    return get(block, element);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Get a value from this buffer. */\n  public final long get(long index) {\n    if (index < 0 || index >= size()) {\n      throw new IndexOutOfBoundsException(\"\" + index);\n    }\n    int block = (int) (index >> BLOCK_BITS);\n    int element = (int) (index & BLOCK_MASK);\n    return get(block, element);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22344cc5c695683a5a6cecff291f840d71c20d25","date":1370561415,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","sourceNew":"  /** Get a value from this buffer. */\n  public final long get(long index) {\n    if (index < 0 || index >= size()) {\n      throw new IndexOutOfBoundsException(\"\" + index);\n    }\n    final int block = (int) (index >> pageShift);\n    final int element = (int) (index & pageMask);\n    return get(block, element);\n  }\n\n","sourceOld":"  /** Get a value from this buffer. */\n  public final long get(long index) {\n    if (index < 0 || index >= size()) {\n      throw new IndexOutOfBoundsException(\"\" + index);\n    }\n    int block = (int) (index >> BLOCK_BITS);\n    int element = (int) (index & BLOCK_MASK);\n    return get(block, element);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6713d909dc80e8c53878ff98bb5376dc1af95956","date":1373964521,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","sourceNew":"  /** Get a value from this buffer. */\n  public final long get(long index) {\n    assert index >= 0 && index < size();\n    final int block = (int) (index >> pageShift);\n    final int element = (int) (index & pageMask);\n    return get(block, element);\n  }\n\n","sourceOld":"  /** Get a value from this buffer. */\n  public final long get(long index) {\n    if (index < 0 || index >= size()) {\n      throw new IndexOutOfBoundsException(\"\" + index);\n    }\n    final int block = (int) (index >> pageShift);\n    final int element = (int) (index & pageMask);\n    return get(block, element);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","sourceNew":"  /** Get a value from this buffer. */\n  public final long get(long index) {\n    assert index >= 0 && index < size();\n    final int block = (int) (index >> pageShift);\n    final int element = (int) (index & pageMask);\n    return get(block, element);\n  }\n\n","sourceOld":"  /** Get a value from this buffer. */\n  public final long get(long index) {\n    if (index < 0 || index >= size()) {\n      throw new IndexOutOfBoundsException(\"\" + index);\n    }\n    final int block = (int) (index >> pageShift);\n    final int element = (int) (index & pageMask);\n    return get(block, element);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d50d971859a3c7841c17117b0aac14e733441ebf","date":1384264257,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","sourceNew":"  @Override\n  public final long get(long index) {\n    assert index >= 0 && index < size();\n    final int block = (int) (index >> pageShift);\n    final int element = (int) (index & pageMask);\n    return get(block, element);\n  }\n\n","sourceOld":"  /** Get a value from this buffer. */\n  public final long get(long index) {\n    assert index >= 0 && index < size();\n    final int block = (int) (index >> pageShift);\n    final int element = (int) (index & pageMask);\n    return get(block, element);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aae6236deecc1bf344f9c22d8d9dd09ef6701dbd","date":1404226546,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedLongValues#get(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractAppendingLongBuffer#get(long).mjava","sourceNew":"  @Override\n  public final long get(long index) {\n    assert index >= 0 && index < size();\n    final int block = (int) (index >> pageShift);\n    final int element = (int) (index & pageMask);\n    return get(block, element);\n  }\n\n","sourceOld":"  @Override\n  public final long get(long index) {\n    assert index >= 0 && index < size();\n    final int block = (int) (index >> pageShift);\n    final int element = (int) (index & pageMask);\n    return get(block, element);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d50d971859a3c7841c17117b0aac14e733441ebf":["6713d909dc80e8c53878ff98bb5376dc1af95956"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["22344cc5c695683a5a6cecff291f840d71c20d25","6713d909dc80e8c53878ff98bb5376dc1af95956"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22344cc5c695683a5a6cecff291f840d71c20d25":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae3be3418aea9954be27a83315087f67c0c2201e"],"ae3be3418aea9954be27a83315087f67c0c2201e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6713d909dc80e8c53878ff98bb5376dc1af95956":["22344cc5c695683a5a6cecff291f840d71c20d25"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aae6236deecc1bf344f9c22d8d9dd09ef6701dbd"],"aae6236deecc1bf344f9c22d8d9dd09ef6701dbd":["d50d971859a3c7841c17117b0aac14e733441ebf"]},"commit2Childs":{"d50d971859a3c7841c17117b0aac14e733441ebf":["aae6236deecc1bf344f9c22d8d9dd09ef6701dbd"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ddbb72a33557d2b5bc22ee95daf3281c43560502","ae3be3418aea9954be27a83315087f67c0c2201e"],"22344cc5c695683a5a6cecff291f840d71c20d25":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6713d909dc80e8c53878ff98bb5376dc1af95956"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["22344cc5c695683a5a6cecff291f840d71c20d25"],"ae3be3418aea9954be27a83315087f67c0c2201e":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"6713d909dc80e8c53878ff98bb5376dc1af95956":["d50d971859a3c7841c17117b0aac14e733441ebf","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"aae6236deecc1bf344f9c22d8d9dd09ef6701dbd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}