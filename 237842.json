{"path":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#nextRow().mjava","commits":[{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#nextRow().mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#nextRow().mjava","sourceNew":"  @Override\n  public Map<String, Object> nextRow() {\n    if(done) return null;\n    Map<String, Object> row = new HashMap<String, Object>();\n    DataSource<InputStream> dataSource = context.getDataSource();\n    InputStream is = dataSource.getData(context.getResolvedEntityAttribute(URL));\n    ContentHandler contentHandler = null;\n    Metadata metadata = new Metadata();\n    StringWriter sw = new StringWriter();\n    try {\n      if (\"html\".equals(format)) {\n        contentHandler = getHtmlHandler(sw);\n      } else if (\"xml\".equals(format)) {\n        contentHandler = getXmlContentHandler(sw);\n      } else if (\"text\".equals(format)) {\n        contentHandler = getTextContentHandler(sw);\n      } else if(\"none\".equals(format)){\n        contentHandler = new DefaultHandler();        \n      }\n    } catch (TransformerConfigurationException e) {\n      wrapAndThrow(SEVERE, e, \"Unable to create content handler\");\n    }\n    Parser tikaParser = null;\n    if(parser.equals(AUTO_PARSER)){\n      AutoDetectParser parser = new AutoDetectParser();\n      parser.setConfig(tikaConfig);\n      tikaParser = parser;\n    } else {\n      tikaParser = (Parser) context.getSolrCore().getResourceLoader().newInstance(parser);\n    }\n    try {\n      tikaParser.parse(is, contentHandler, metadata , new ParseContext());\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e, \"Unable to read content\");\n    }\n    IOUtils.closeQuietly(is);\n    for (Map<String, String> field : context.getAllEntityFields()) {\n      if (!\"true\".equals(field.get(\"meta\"))) continue;\n      String col = field.get(COLUMN);\n      String s = metadata.get(col);\n      if (s != null) row.put(col, s);\n    }\n    if(!\"none\".equals(format) ) row.put(\"text\", sw.toString());\n    done = true;\n    return row;\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> nextRow() {\n    if(done) return null;\n    Map<String, Object> row = new HashMap<String, Object>();\n    DataSource<InputStream> dataSource = context.getDataSource();\n    InputStream is = dataSource.getData(context.getResolvedEntityAttribute(URL));\n    ContentHandler contentHandler = null;\n    Metadata metadata = new Metadata();\n    StringWriter sw = new StringWriter();\n    try {\n      if (\"html\".equals(format)) {\n        contentHandler = getHtmlHandler(sw);\n      } else if (\"xml\".equals(format)) {\n        contentHandler = getXmlContentHandler(sw);\n      } else if (\"text\".equals(format)) {\n        contentHandler = getTextContentHandler(sw);\n      } else if(\"none\".equals(format)){\n        contentHandler = new DefaultHandler();        \n      }\n    } catch (TransformerConfigurationException e) {\n      wrapAndThrow(SEVERE, e, \"Unable to create content handler\");\n    }\n    Parser tikaParser = null;\n    if(parser.equals(AUTO_PARSER)){\n      AutoDetectParser parser = new AutoDetectParser();\n      parser.setConfig(tikaConfig);\n      tikaParser = parser;\n    } else {\n      tikaParser = (Parser) context.getSolrCore().getResourceLoader().newInstance(parser);\n    }\n    try {\n      tikaParser.parse(is, contentHandler, metadata , new ParseContext());\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e, \"Unable to read content\");\n    }\n    IOUtils.closeQuietly(is);\n    for (Map<String, String> field : context.getAllEntityFields()) {\n      if (!\"true\".equals(field.get(\"meta\"))) continue;\n      String col = field.get(COLUMN);\n      String s = metadata.get(col);\n      if (s != null) row.put(col, s);\n    }\n    if(!\"none\".equals(format) ) row.put(\"text\", sw.toString());\n    done = true;\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#nextRow().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#nextRow().mjava","sourceNew":"  @Override\n  public Map<String, Object> nextRow() {\n    if(done) return null;\n    Map<String, Object> row = new HashMap<String, Object>();\n    DataSource<InputStream> dataSource = context.getDataSource();\n    InputStream is = dataSource.getData(context.getResolvedEntityAttribute(URL));\n    ContentHandler contentHandler = null;\n    Metadata metadata = new Metadata();\n    StringWriter sw = new StringWriter();\n    try {\n      if (\"html\".equals(format)) {\n        contentHandler = getHtmlHandler(sw);\n      } else if (\"xml\".equals(format)) {\n        contentHandler = getXmlContentHandler(sw);\n      } else if (\"text\".equals(format)) {\n        contentHandler = getTextContentHandler(sw);\n      } else if(\"none\".equals(format)){\n        contentHandler = new DefaultHandler();        \n      }\n    } catch (TransformerConfigurationException e) {\n      wrapAndThrow(SEVERE, e, \"Unable to create content handler\");\n    }\n    Parser tikaParser = null;\n    if(parser.equals(AUTO_PARSER)){\n      AutoDetectParser parser = new AutoDetectParser();\n      parser.setConfig(tikaConfig);\n      tikaParser = parser;\n    } else {\n      tikaParser = (Parser) context.getSolrCore().getResourceLoader().newInstance(parser);\n    }\n    try {\n      tikaParser.parse(is, contentHandler, metadata , new ParseContext());\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e, \"Unable to read content\");\n    }\n    IOUtils.closeQuietly(is);\n    for (Map<String, String> field : context.getAllEntityFields()) {\n      if (!\"true\".equals(field.get(\"meta\"))) continue;\n      String col = field.get(COLUMN);\n      String s = metadata.get(col);\n      if (s != null) row.put(col, s);\n    }\n    if(!\"none\".equals(format) ) row.put(\"text\", sw.toString());\n    done = true;\n    return row;\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> nextRow() {\n    if(done) return null;\n    Map<String, Object> row = new HashMap<String, Object>();\n    DataSource<InputStream> dataSource = context.getDataSource();\n    InputStream is = dataSource.getData(context.getResolvedEntityAttribute(URL));\n    ContentHandler contentHandler = null;\n    Metadata metadata = new Metadata();\n    StringWriter sw = new StringWriter();\n    try {\n      if (\"html\".equals(format)) {\n        contentHandler = getHtmlHandler(sw);\n      } else if (\"xml\".equals(format)) {\n        contentHandler = getXmlContentHandler(sw);\n      } else if (\"text\".equals(format)) {\n        contentHandler = getTextContentHandler(sw);\n      } else if(\"none\".equals(format)){\n        contentHandler = new DefaultHandler();        \n      }\n    } catch (TransformerConfigurationException e) {\n      wrapAndThrow(SEVERE, e, \"Unable to create content handler\");\n    }\n    Parser tikaParser = null;\n    if(parser.equals(AUTO_PARSER)){\n      AutoDetectParser parser = new AutoDetectParser();\n      parser.setConfig(tikaConfig);\n      tikaParser = parser;\n    } else {\n      tikaParser = (Parser) context.getSolrCore().getResourceLoader().newInstance(parser);\n    }\n    try {\n      tikaParser.parse(is, contentHandler, metadata , new ParseContext());\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e, \"Unable to read content\");\n    }\n    IOUtils.closeQuietly(is);\n    for (Map<String, String> field : context.getAllEntityFields()) {\n      if (!\"true\".equals(field.get(\"meta\"))) continue;\n      String col = field.get(COLUMN);\n      String s = metadata.get(col);\n      if (s != null) row.put(col, s);\n    }\n    if(!\"none\".equals(format) ) row.put(\"text\", sw.toString());\n    done = true;\n    return row;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["d20d5e40789b1c42f4f926e3174b271256c43657","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d20d5e40789b1c42f4f926e3174b271256c43657":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","d20d5e40789b1c42f4f926e3174b271256c43657","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d20d5e40789b1c42f4f926e3174b271256c43657":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}