{"path":"lucene/core/src/java/org/apache/lucene/document/LatLonPointDistanceComparator#sortKey(int).mjava","commits":[{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonPointDistanceComparator#sortKey(int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointDistanceComparator#sortKey(int).mjava","sourceNew":"  // TODO: optimize for single-valued case?\n  // TODO: do all kinds of other optimizations!\n  double sortKey(int doc) throws IOException {\n    if (doc > currentDocs.docID()) {\n      currentDocs.advance(doc);\n    }\n    double minValue = Double.POSITIVE_INFINITY;\n    if (doc == currentDocs.docID()) {\n      setValues();\n      int numValues = currentDocs.docValueCount();\n      for (int i = 0; i < numValues; i++) {\n        long encoded = currentValues[i];\n        double docLatitude = decodeLatitude((int)(encoded >> 32));\n        double docLongitude = decodeLongitude((int)(encoded & 0xFFFFFFFF));\n        minValue = Math.min(minValue, SloppyMath.haversinSortKey(latitude, longitude, docLatitude, docLongitude));\n      }\n    }\n    return minValue;\n  }\n\n","sourceOld":"  // TODO: optimize for single-valued case?\n  // TODO: do all kinds of other optimizations!\n  double sortKey(int doc) throws IOException {\n    if (doc > currentDocs.docID()) {\n      currentDocs.advance(doc);\n    }\n    double minValue = Double.POSITIVE_INFINITY;\n    if (doc == currentDocs.docID()) {\n      setValues();\n      int numValues = currentDocs.docValueCount();\n      for (int i = 0; i < numValues; i++) {\n        long encoded = currentValues[i];\n        double docLatitude = decodeLatitude((int)(encoded >> 32));\n        double docLongitude = decodeLongitude((int)(encoded & 0xFFFFFFFF));\n        minValue = Math.min(minValue, SloppyMath.haversinSortKey(latitude, longitude, docLatitude, docLongitude));\n      }\n    }\n    return minValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88b0212386fe531136816706dc37dc49b9dbf7dc"]},"commit2Childs":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}