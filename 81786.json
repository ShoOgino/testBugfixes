{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEvaluatorBag#runTests(Map[String,String],Evaluator).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEvaluatorBag#runTests(Map[String,String],Evaluator).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#runTests(Map[String,String],Evaluator).mjava","sourceNew":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(ctx);\n    try {\n      for (Map.Entry<String, String> entry : tests.entrySet()) {\n        Map<String, Object> values = new HashMap<String, Object>();\n        values.put(\"key\", entry.getKey());\n        resolver.addNamespace(\"A\", values);\n\n        String expected = entry.getValue();\n        String actual = evaluator.evaluate(\"A.key\", ctx);\n        assertEquals(expected, actual);\n      }\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(ctx);\n    try {\n      for (Map.Entry<String, String> entry : tests.entrySet()) {\n        Map<String, Object> values = new HashMap<String, Object>();\n        values.put(\"key\", entry.getKey());\n        resolver.addNamespace(\"A\", values);\n\n        String expected = entry.getValue();\n        String actual = evaluator.evaluate(\"A.key\", ctx);\n        assertEquals(expected, actual);\n      }\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEvaluatorBag#runTests(Map[String,String],Evaluator).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#runTests(Map[String,String],Evaluator).mjava","sourceNew":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(ctx);\n    try {\n      for (Map.Entry<String, String> entry : tests.entrySet()) {\n        Map<String, Object> values = new HashMap<String, Object>();\n        values.put(\"key\", entry.getKey());\n        resolver.addNamespace(\"A\", values);\n\n        String expected = entry.getValue();\n        String actual = evaluator.evaluate(\"A.key\", ctx);\n        assertEquals(expected, actual);\n      }\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(ctx);\n    try {\n      for (Map.Entry<String, String> entry : tests.entrySet()) {\n        Map<String, Object> values = new HashMap<String, Object>();\n        values.put(\"key\", entry.getKey());\n        resolver.addNamespace(\"A\", values);\n\n        String expected = entry.getValue();\n        String actual = evaluator.evaluate(\"A.key\", ctx);\n        assertEquals(expected, actual);\n      }\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b84e23a1c994ea309896dd9424563e0092f3607","date":1332774278,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEvaluatorBag#runTests(Map[String,String],Evaluator).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEvaluatorBag#runTests(Map[String,String],Evaluator).mjava","sourceNew":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);    \n    for (Map.Entry<String, String> entry : tests.entrySet()) {\n      Map<String, Object> values = new HashMap<String, Object>();\n      values.put(\"key\", entry.getKey());\n      resolver.addNamespace(\"A\", values);\n\n      String expected = entry.getValue();\n      String actual = evaluator.evaluate(\"A.key\", ctx);\n      assertEquals(expected, actual);\n    }\n    \n  }\n\n","sourceOld":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(ctx);\n    try {\n      for (Map.Entry<String, String> entry : tests.entrySet()) {\n        Map<String, Object> values = new HashMap<String, Object>();\n        values.put(\"key\", entry.getKey());\n        resolver.addNamespace(\"A\", values);\n\n        String expected = entry.getValue();\n        String actual = evaluator.evaluate(\"A.key\", ctx);\n        assertEquals(expected, actual);\n      }\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":5,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestBuiltInEvaluators#runTests(Map[String,String],Evaluator).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEvaluatorBag#runTests(Map[String,String],Evaluator).mjava","sourceNew":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.<String, Object>emptyMap(), null, null);    \n    for (Map.Entry<String, String> entry : tests.entrySet()) {\n      Map<String, Object> values = new HashMap<String, Object>();\n      values.put(\"key\", entry.getKey());\n      resolver.addNamespace(\"A\", values);\n\n      String expected = entry.getValue();\n      String actual = evaluator.evaluate(\"A.key\", ctx);\n      assertEquals(expected, actual);\n    }\n    \n  }\n\n","sourceOld":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);    \n    for (Map.Entry<String, String> entry : tests.entrySet()) {\n      Map<String, Object> values = new HashMap<String, Object>();\n      values.put(\"key\", entry.getKey());\n      resolver.addNamespace(\"A\", values);\n\n      String expected = entry.getValue();\n      String actual = evaluator.evaluate(\"A.key\", ctx);\n      assertEquals(expected, actual);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEvaluatorBag#runTests(Map[String,String],Evaluator).mjava","sourceNew":null,"sourceOld":"  private void runTests(Map<String, String> tests, Evaluator evaluator) {\n    ContextImpl ctx = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);    \n    for (Map.Entry<String, String> entry : tests.entrySet()) {\n      Map<String, Object> values = new HashMap<String, Object>();\n      values.put(\"key\", entry.getKey());\n      resolver.addNamespace(\"A\", values);\n\n      String expected = entry.getValue();\n      String actual = evaluator.evaluate(\"A.key\", ctx);\n      assertEquals(expected, actual);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b84e23a1c994ea309896dd9424563e0092f3607":["c26f00b574427b55127e869b935845554afde1fa"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["4b84e23a1c994ea309896dd9424563e0092f3607"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["4b84e23a1c994ea309896dd9424563e0092f3607","7c7b0ae5716b6c2044195a818e9ae58205175659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c7b0ae5716b6c2044195a818e9ae58205175659"]},"commit2Childs":{"4b84e23a1c994ea309896dd9424563e0092f3607":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4b84e23a1c994ea309896dd9424563e0092f3607"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}