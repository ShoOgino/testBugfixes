{"path":"contrib/gdata-server/src/gom/src/test/org/apache/lucene/gdata/gom/core/GOMEntryImplTest#testWriteAtomOutput().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/gom/src/test/org/apache/lucene/gdata/gom/core/GOMEntryImplTest#testWriteAtomOutput().mjava","pathOld":"contrib/gdata-server/src/gom/test/org/apache/lucene/gdata/gom/core/GOMEntryImplTest#testWriteAtomOutput().mjava","sourceNew":"\t/*\n\t * Test method for\n\t * 'org.apache.lucene.gdata.gom.core.GOMEntryImpl.writeAtomOutput(GOMOutputWriter)'\n\t */\n\tpublic void testWriteAtomOutput() throws XMLStreamException,\n\t\t\tFactoryConfigurationError {\n\t\t// write a whole feed and check if all elements are written\n\t\tthis.impl.addAuthor(new GOMAuthorImpl());\n\t\tthis.impl.addCategory(new GOMCategoryImpl());\n\t\tthis.impl.addContributor(new GOMContributorImpl());\n\t\tthis.impl.addLink(new GOMLinkImpl());\n\t\tthis.impl.setContent(new GOMContentImpl());\n\t\tthis.impl.setId(new GOMIdImpl());\n\t\tthis.impl.setRights(new GOMRightsImpl());\n\t\tthis.impl.setSummary(new GOMSummaryImpl());\n\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\t\tthis.impl.setSource(new GOMSourceImpl());\n\t\tthis.impl.setPublished(new GOMPublishedImpl());\n\t\tthis.impl.extensions.add(new GOMFeedImplTest.TestExtension());\n\t\tStringWriter stW = new StringWriter();\n\t\tGOMOutputWriter writer = new GOMStaxWriter(stW);\n\t\tthis.impl.writeAtomOutput(writer);\n\t\tString string = stW.toString();\n\t\tassertTrue(string.contains(\"xmlns=\\\"http://www.w3.org/2005/Atom\\\"\"));\n\t\tassertTrue(string.startsWith(\"<\" + GOMEntry.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMAuthor.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMCategory.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMContributor.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMLink.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMId.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMRights.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMSummary.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMContent.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMTitle.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMUpdated.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMSource.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMPublished.LOCALNAME));\n\t\tassertTrue(string.contains(\"<test\"));\n\t\tassertTrue(string.endsWith(\"</entry>\"));\n\t}\n\n","sourceOld":"\t/*\n\t * Test method for\n\t * 'org.apache.lucene.gdata.gom.core.GOMEntryImpl.writeAtomOutput(GOMOutputWriter)'\n\t */\n\tpublic void testWriteAtomOutput() throws XMLStreamException,\n\t\t\tFactoryConfigurationError {\n\t\t// write a whole feed and check if all elements are written\n\t\tthis.impl.addAuthor(new GOMAuthorImpl());\n\t\tthis.impl.addCategory(new GOMCategoryImpl());\n\t\tthis.impl.addContributor(new GOMContributorImpl());\n\t\tthis.impl.addLink(new GOMLinkImpl());\n\t\tthis.impl.setContent(new GOMContentImpl());\n\t\tthis.impl.setId(new GOMIdImpl());\n\t\tthis.impl.setRights(new GOMRightsImpl());\n\t\tthis.impl.setSummary(new GOMSummaryImpl());\n\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\t\tthis.impl.setSource(new GOMSourceImpl());\n\t\tthis.impl.setPublished(new GOMPublishedImpl());\n\t\tthis.impl.extensions.add(new GOMFeedImplTest.TestExtension());\n\t\tStringWriter stW = new StringWriter();\n\t\tGOMOutputWriter writer = new GOMStaxWriter(stW);\n\t\tthis.impl.writeAtomOutput(writer);\n\t\tString string = stW.toString();\n\t\tassertTrue(string.contains(\"xmlns=\\\"http://www.w3.org/2005/Atom\\\"\"));\n\t\tassertTrue(string.startsWith(\"<\" + GOMEntry.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMAuthor.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMCategory.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMContributor.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMLink.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMId.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMRights.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMSummary.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMContent.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMTitle.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMUpdated.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMSource.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMPublished.LOCALNAME));\n\t\tassertTrue(string.contains(\"<test\"));\n\t\tassertTrue(string.endsWith(\"</entry>\"));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/gom/src/test/org/apache/lucene/gdata/gom/core/GOMEntryImplTest#testWriteAtomOutput().mjava","sourceNew":null,"sourceOld":"\t/*\n\t * Test method for\n\t * 'org.apache.lucene.gdata.gom.core.GOMEntryImpl.writeAtomOutput(GOMOutputWriter)'\n\t */\n\tpublic void testWriteAtomOutput() throws XMLStreamException,\n\t\t\tFactoryConfigurationError {\n\t\t// write a whole feed and check if all elements are written\n\t\tthis.impl.addAuthor(new GOMAuthorImpl());\n\t\tthis.impl.addCategory(new GOMCategoryImpl());\n\t\tthis.impl.addContributor(new GOMContributorImpl());\n\t\tthis.impl.addLink(new GOMLinkImpl());\n\t\tthis.impl.setContent(new GOMContentImpl());\n\t\tthis.impl.setId(new GOMIdImpl());\n\t\tthis.impl.setRights(new GOMRightsImpl());\n\t\tthis.impl.setSummary(new GOMSummaryImpl());\n\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\t\tthis.impl.setSource(new GOMSourceImpl());\n\t\tthis.impl.setPublished(new GOMPublishedImpl());\n\t\tthis.impl.extensions.add(new GOMFeedImplTest.TestExtension());\n\t\tStringWriter stW = new StringWriter();\n\t\tGOMOutputWriter writer = new GOMStaxWriter(stW);\n\t\tthis.impl.writeAtomOutput(writer);\n\t\tString string = stW.toString();\n\t\tassertTrue(string.contains(\"xmlns=\\\"http://www.w3.org/2005/Atom\\\"\"));\n\t\tassertTrue(string.startsWith(\"<\" + GOMEntry.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMAuthor.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMCategory.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMContributor.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMLink.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMId.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMRights.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMSummary.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMContent.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMTitle.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMUpdated.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMSource.LOCALNAME));\n\t\tassertTrue(string.contains(\"<\" + GOMPublished.LOCALNAME));\n\t\tassertTrue(string.contains(\"<test\"));\n\t\tassertTrue(string.endsWith(\"</entry>\"));\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}