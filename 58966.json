{"path":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(Config,String,String,Node).mjava","commits":[{"id":"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7","date":1189312484,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(Config,String,String,Node).mjava","pathOld":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(SolrCore,String,String,Node).mjava","sourceNew":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( Config config, String name, String className, Node node ) throws Exception\n  {\n    return (T) config.newInstance( className, getDefaultPackages() );\n  }\n\n","sourceOld":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( SolrCore core, String name, String className, Node node ) throws Exception\n  {\n    if (core != null)\n      return (T) core.createInstance(className, null, \"plug-in\");\n    return (T) Config.newInstance( className, getDefaultPackages() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(ResourceLoader,String,String,Node).mjava","pathOld":"src/java/org/apache/solr/util/plugin/AbstractPluginLoader#create(Config,String,String,Node).mjava","sourceNew":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( ResourceLoader loader, String name, String className, Node node ) throws Exception\n  {\n    return (T) loader.newInstance( className, getDefaultPackages() );\n  }\n\n","sourceOld":"  /**\n   * Create a plugin from an XML configuration.  Plugins are defined using:\n   *   <plugin name=\"name1\" class=\"solr.ClassName\">\n   *      ...\n   *   </plugin>\n   * \n   * @param name - The registered name.  In the above example: \"name1\"\n   * @param className - class name for requested plugin.  In the above example: \"solr.ClassName\"\n   * @param node - the XML node defining this plugin\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected T create( Config config, String name, String className, Node node ) throws Exception\n  {\n    return (T) config.newInstance( className, getDefaultPackages() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":[],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}