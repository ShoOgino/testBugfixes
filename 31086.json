{"path":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","commits":[{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) throws IOException {\n    return merge(0, topN, shardHits);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03e38c6374c23083c93e212a9498ff0a9c255476","date":1484767039,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","sourceNew":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits);\n  }\n\n","sourceOld":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) throws IOException {\n    return merge(0, topN, shardHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","sourceNew":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits);\n  }\n\n","sourceOld":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) throws IOException {\n    return merge(0, topN, shardHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"500a89755c0c3953ca1886b5abb653b8cef8e299","date":1487933004,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","sourceNew":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *\n   *  @see #merge(int, int, TopDocs[])\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits);\n  }\n\n","sourceOld":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a5b816df64f2b489d1e711be80f9416f9862c1b","date":1487973679,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","sourceNew":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *\n   *  @see #merge(int, int, TopDocs[], boolean)\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits, true);\n  }\n\n","sourceOld":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *\n   *  @see #merge(int, int, TopDocs[])\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36510a8e3c1ec60d366b45f8f716e9dc47589661","date":1561989412,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","sourceNew":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *\n   *  @see #merge(int, int, TopDocs[])\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits);\n  }\n\n","sourceOld":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *\n   *  @see #merge(int, int, TopDocs[], boolean)\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4f6b0fb6f08ac48f438f03002a283a63cb9992","date":1561992803,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","sourceNew":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *\n   *  @see #merge(int, int, TopDocs[], boolean)\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits, true);\n  }\n\n","sourceOld":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *\n   *  @see #merge(int, int, TopDocs[])\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fccd4a691aac1aff06ab8110d8693514a34160c3","date":1562092518,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocs#merge(int,TopDocs[]).mjava","sourceNew":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *\n   *  @see #merge(int, int, TopDocs[])\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits);\n  }\n\n","sourceOld":"  /** Returns a new TopDocs, containing topN results across\n   *  the provided TopDocs, sorting by score. Each {@link TopDocs}\n   *  instance must be sorted.\n   *\n   *  @see #merge(int, int, TopDocs[], boolean)\n   *  @lucene.experimental */\n  public static TopDocs merge(int topN, TopDocs[] shardHits) {\n    return merge(0, topN, shardHits, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36510a8e3c1ec60d366b45f8f716e9dc47589661":["9a5b816df64f2b489d1e711be80f9416f9862c1b"],"fb17639909a369c1e64866842e5c213440acc17e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9a5b816df64f2b489d1e711be80f9416f9862c1b":["500a89755c0c3953ca1886b5abb653b8cef8e299"],"03e38c6374c23083c93e212a9498ff0a9c255476":["fb17639909a369c1e64866842e5c213440acc17e"],"fccd4a691aac1aff06ab8110d8693514a34160c3":["5f4f6b0fb6f08ac48f438f03002a283a63cb9992"],"500a89755c0c3953ca1886b5abb653b8cef8e299":["03e38c6374c23083c93e212a9498ff0a9c255476"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["fb17639909a369c1e64866842e5c213440acc17e","03e38c6374c23083c93e212a9498ff0a9c255476"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fccd4a691aac1aff06ab8110d8693514a34160c3"],"5f4f6b0fb6f08ac48f438f03002a283a63cb9992":["36510a8e3c1ec60d366b45f8f716e9dc47589661"]},"commit2Childs":{"36510a8e3c1ec60d366b45f8f716e9dc47589661":["5f4f6b0fb6f08ac48f438f03002a283a63cb9992"],"fb17639909a369c1e64866842e5c213440acc17e":["03e38c6374c23083c93e212a9498ff0a9c255476","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"9a5b816df64f2b489d1e711be80f9416f9862c1b":["36510a8e3c1ec60d366b45f8f716e9dc47589661"],"03e38c6374c23083c93e212a9498ff0a9c255476":["500a89755c0c3953ca1886b5abb653b8cef8e299","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"500a89755c0c3953ca1886b5abb653b8cef8e299":["9a5b816df64f2b489d1e711be80f9416f9862c1b"],"fccd4a691aac1aff06ab8110d8693514a34160c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb17639909a369c1e64866842e5c213440acc17e"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"5f4f6b0fb6f08ac48f438f03002a283a63cb9992":["fccd4a691aac1aff06ab8110d8693514a34160c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}