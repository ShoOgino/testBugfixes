{"path":"lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#createToken(String,AttributeSource.State).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#createToken(String,AttributeSource.State).mjava","pathOld":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#createToken(String,AttributeSource.State).mjava","sourceNew":"  /**\n   * Creates and returns a token for the given synonym of the current input\n   * token; Override for custom (stateless or stateful) behavior, if desired.\n   * \n   * @param synonym \n   *            a synonym for the current token's term\n   * @param current\n   *            the current token from the underlying child stream\n   * @return a new token, or null to indicate that the given synonym should be\n   *         ignored\n   */\n  protected boolean createToken(String synonym, AttributeSource.State current) {\n    restoreState(current);\n    termAtt.setTermBuffer(synonym);\n    typeAtt.setType(SYNONYM_TOKEN_TYPE);\n    posIncrAtt.setPositionIncrement(0);\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Creates and returns a token for the given synonym of the current input\n   * token; Override for custom (stateless or stateful) behavior, if desired.\n   * \n   * @param synonym \n   *            a synonym for the current token's term\n   * @param current\n   *            the current token from the underlying child stream\n   * @return a new token, or null to indicate that the given synonym should be\n   *         ignored\n   */\n  protected boolean createToken(String synonym, AttributeSource.State current) {\n    restoreState(current);\n    termAtt.setTermBuffer(synonym);\n    typeAtt.setType(SYNONYM_TOKEN_TYPE);\n    posIncrAtt.setPositionIncrement(0);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7347509fad0711ac30cb15a746e9a3830a38ebd","date":1275388513,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#createToken(String,AttributeSource.State).mjava","pathOld":"lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#createToken(String,AttributeSource.State).mjava","sourceNew":"  /**\n   * Creates and returns a token for the given synonym of the current input\n   * token; Override for custom (stateless or stateful) behavior, if desired.\n   * \n   * @param synonym \n   *            a synonym for the current token's term\n   * @param current\n   *            the current token from the underlying child stream\n   * @return a new token, or null to indicate that the given synonym should be\n   *         ignored\n   */\n  protected boolean createToken(String synonym, AttributeSource.State current) {\n    restoreState(current);\n    termAtt.setEmpty().append(synonym);\n    typeAtt.setType(SYNONYM_TOKEN_TYPE);\n    posIncrAtt.setPositionIncrement(0);\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Creates and returns a token for the given synonym of the current input\n   * token; Override for custom (stateless or stateful) behavior, if desired.\n   * \n   * @param synonym \n   *            a synonym for the current token's term\n   * @param current\n   *            the current token from the underlying child stream\n   * @return a new token, or null to indicate that the given synonym should be\n   *         ignored\n   */\n  protected boolean createToken(String synonym, AttributeSource.State current) {\n    restoreState(current);\n    termAtt.setTermBuffer(synonym);\n    typeAtt.setType(SYNONYM_TOKEN_TYPE);\n    posIncrAtt.setPositionIncrement(0);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#createToken(String,AttributeSource.State).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates and returns a token for the given synonym of the current input\n   * token; Override for custom (stateless or stateful) behavior, if desired.\n   * \n   * @param synonym \n   *            a synonym for the current token's term\n   * @param current\n   *            the current token from the underlying child stream\n   * @return a new token, or null to indicate that the given synonym should be\n   *         ignored\n   */\n  protected boolean createToken(String synonym, AttributeSource.State current) {\n    restoreState(current);\n    termAtt.setEmpty().append(synonym);\n    typeAtt.setType(SYNONYM_TOKEN_TYPE);\n    posIncrAtt.setPositionIncrement(0);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}