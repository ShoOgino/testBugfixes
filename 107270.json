{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.TokenSplitter#incrementToken().mjava","commits":[{"id":"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd","date":1526034899,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.TokenSplitter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (half == null) {\n        if (input.incrementToken() == false) {\n          return false;\n        }\n        half = termAtt.toString().substring(4);\n        termAtt.setLength(4);\n        return true;\n      }\n      termAtt.setEmpty().append(half);\n      half = null;\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57e34488c685935a055be1bc57b850be1e8c850d","date":1526645499,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.TokenSplitter#incrementToken().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConditionalTokenFilter.TokenSplitter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (half == null) {\n        state = captureState();\n        if (input.incrementToken() == false) {\n          return false;\n        }\n        half = termAtt.toString().substring(4);\n        termAtt.setLength(4);\n        return true;\n      }\n      restoreState(state);\n      termAtt.setEmpty().append(half);\n      half = null;\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      if (half == null) {\n        if (input.incrementToken() == false) {\n          return false;\n        }\n        half = termAtt.toString().substring(4);\n        termAtt.setLength(4);\n        return true;\n      }\n      termAtt.setEmpty().append(half);\n      half = null;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57e34488c685935a055be1bc57b850be1e8c850d":["25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd"],"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57e34488c685935a055be1bc57b850be1e8c850d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd"],"57e34488c685935a055be1bc57b850be1e8c850d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"25d4b0425e7ddf8fb0d7b4e24c06ecd9f071e5bd":["57e34488c685935a055be1bc57b850be1e8c850d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}