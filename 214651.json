{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#writeMissingBitset(Iterable[#]).mjava","commits":[{"id":"e9eb6464bb91cd54f3151e5a0c18dde9311a60f1","date":1383143016,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#writeMissingBitset(Iterable[#]).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: in some cases representing missing with minValue-1 wouldn't take up additional space and so on,\n  // but this is very simple, and algorithms only check this for values of 0 anyway (doesnt slow down normal decode)\n  void writeMissingBitset(Iterable<?> values) throws IOException {\n    long bits = 0;\n    int count = 0;\n    for (Object v : values) {\n      if (count == 64) {\n        data.writeLong(bits);\n        count = 0;\n        bits = 0;\n      }\n      if (v != null) {\n        bits |= 1L << (count & 0x3f);\n      }\n      count++;\n    }\n    if (count > 0) {\n      data.writeLong(bits);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f18fb78980c55a781fd9fdc505634171059b1d","date":1567674462,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#writeMissingBitset(Iterable[#]).mjava","sourceNew":null,"sourceOld":"  // TODO: in some cases representing missing with minValue-1 wouldn't take up additional space and so on,\n  // but this is very simple, and algorithms only check this for values of 0 anyway (doesnt slow down normal decode)\n  void writeMissingBitset(Iterable<?> values) throws IOException {\n    long bits = 0;\n    int count = 0;\n    for (Object v : values) {\n      if (count == 64) {\n        data.writeLong(bits);\n        count = 0;\n        bits = 0;\n      }\n      if (v != null) {\n        bits |= 1L << (count & 0x3f);\n      }\n      count++;\n    }\n    if (count > 0) {\n      data.writeLong(bits);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9eb6464bb91cd54f3151e5a0c18dde9311a60f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"74f18fb78980c55a781fd9fdc505634171059b1d":["e9eb6464bb91cd54f3151e5a0c18dde9311a60f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74f18fb78980c55a781fd9fdc505634171059b1d"]},"commit2Childs":{"e9eb6464bb91cd54f3151e5a0c18dde9311a60f1":["74f18fb78980c55a781fd9fdc505634171059b1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9eb6464bb91cd54f3151e5a0c18dde9311a60f1"],"74f18fb78980c55a781fd9fdc505634171059b1d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}