{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.SpanUnitsNRShape#relate(SpanUnitsNRShape).mjava","commits":[{"id":"cb53c8e9da2afe33252ee698dda412264252cfa7","date":1418531581,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.SpanUnitsNRShape#relate(SpanUnitsNRShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.NRShape#relate(NRShape).mjava","sourceNew":"    public SpatialRelation relate(SpanUnitsNRShape ext) {\n      //This logic somewhat mirrors RectangleImpl.relate_range()\n      int extMin_intMax = comparePrefix(ext.getMinUnit(), getMaxUnit());\n      if (extMin_intMax > 0)\n        return SpatialRelation.DISJOINT;\n      int extMax_intMin = comparePrefix(ext.getMaxUnit(), getMinUnit());\n      if (extMax_intMin < 0)\n        return SpatialRelation.DISJOINT;\n      int extMin_intMin = comparePrefix(ext.getMinUnit(), getMinUnit());\n      int extMax_intMax = comparePrefix(ext.getMaxUnit(), getMaxUnit());\n      if ((extMin_intMin > 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() >= getMinUnit().getLevel())\n          && (extMax_intMax < 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() >= getMaxUnit().getLevel()))\n        return SpatialRelation.CONTAINS;\n      if ((extMin_intMin < 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() <= getMinUnit().getLevel())\n          && (extMax_intMax > 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() <= getMaxUnit().getLevel()))\n        return SpatialRelation.WITHIN;\n      return SpatialRelation.INTERSECTS;\n    }\n\n","sourceOld":"    public SpatialRelation relate(NRShape ext) {\n      //This logic somewhat mirrors RectangleImpl.relate_range()\n      int extMin_intMax = comparePrefixLV(ext.getMinLV(), getMaxLV());\n      if (extMin_intMax > 0)\n        return SpatialRelation.DISJOINT;\n      int extMax_intMin = comparePrefixLV(ext.getMaxLV(), getMinLV());\n      if (extMax_intMin < 0)\n        return SpatialRelation.DISJOINT;\n      int extMin_intMin = comparePrefixLV(ext.getMinLV(), getMinLV());\n      int extMax_intMax = comparePrefixLV(ext.getMaxLV(), getMaxLV());\n      if ((extMin_intMin > 0 || extMin_intMin == 0 && ext.getMinLV().getLevel() >= getMinLV().getLevel())\n          && (extMax_intMax < 0 || extMax_intMax == 0 && ext.getMaxLV().getLevel() >= getMaxLV().getLevel()))\n        return SpatialRelation.CONTAINS;\n      if ((extMin_intMin < 0 || extMin_intMin == 0 && ext.getMinLV().getLevel() <= getMinLV().getLevel())\n          && (extMax_intMax > 0 || extMax_intMax == 0 && ext.getMaxLV().getLevel() <= getMaxLV().getLevel()))\n        return SpatialRelation.WITHIN;\n      return SpatialRelation.INTERSECTS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.SpanUnitsNRShape#relate(SpanUnitsNRShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.SpanUnitsNRShape#relate(SpanUnitsNRShape).mjava","sourceNew":"    public SpatialRelation relate(SpanUnitsNRShape ext) {\n      //This logic somewhat mirrors RectangleImpl.relate_range()\n      int extMin_intMax = comparePrefix(ext.getMinUnit(), getMaxUnit());\n      if (extMin_intMax > 0)\n        return SpatialRelation.DISJOINT;\n      int extMax_intMin = comparePrefix(ext.getMaxUnit(), getMinUnit());\n      if (extMax_intMin < 0)\n        return SpatialRelation.DISJOINT;\n      int extMin_intMin = comparePrefix(ext.getMinUnit(), getMinUnit());\n      int extMax_intMax = comparePrefix(ext.getMaxUnit(), getMaxUnit());\n      if ((extMin_intMin > 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() >= getMinUnit().getLevel())\n          && (extMax_intMax < 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() >= getMaxUnit().getLevel()))\n        return SpatialRelation.CONTAINS;\n      if ((extMin_intMin < 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() <= getMinUnit().getLevel())\n          && (extMax_intMax > 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() <= getMaxUnit().getLevel()))\n        return SpatialRelation.WITHIN;\n      return SpatialRelation.INTERSECTS;\n    }\n\n","sourceOld":"    public SpatialRelation relate(SpanUnitsNRShape ext) {\n      //This logic somewhat mirrors RectangleImpl.relate_range()\n      int extMin_intMax = comparePrefix(ext.getMinUnit(), getMaxUnit());\n      if (extMin_intMax > 0)\n        return SpatialRelation.DISJOINT;\n      int extMax_intMin = comparePrefix(ext.getMaxUnit(), getMinUnit());\n      if (extMax_intMin < 0)\n        return SpatialRelation.DISJOINT;\n      int extMin_intMin = comparePrefix(ext.getMinUnit(), getMinUnit());\n      int extMax_intMax = comparePrefix(ext.getMaxUnit(), getMaxUnit());\n      if ((extMin_intMin > 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() >= getMinUnit().getLevel())\n          && (extMax_intMax < 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() >= getMaxUnit().getLevel()))\n        return SpatialRelation.CONTAINS;\n      if ((extMin_intMin < 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() <= getMinUnit().getLevel())\n          && (extMax_intMax > 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() <= getMaxUnit().getLevel()))\n        return SpatialRelation.WITHIN;\n      return SpatialRelation.INTERSECTS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.SpanUnitsNRShape#relate(SpanUnitsNRShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/NumberRangePrefixTree.SpanUnitsNRShape#relate(SpanUnitsNRShape).mjava","sourceNew":"    public SpatialRelation relate(SpanUnitsNRShape ext) {\n      //This logic somewhat mirrors RectangleImpl.relate_range()\n      int extMin_intMax = comparePrefix(ext.getMinUnit(), getMaxUnit());\n      if (extMin_intMax > 0)\n        return SpatialRelation.DISJOINT;\n      int extMax_intMin = comparePrefix(ext.getMaxUnit(), getMinUnit());\n      if (extMax_intMin < 0)\n        return SpatialRelation.DISJOINT;\n      int extMin_intMin = comparePrefix(ext.getMinUnit(), getMinUnit());\n      int extMax_intMax = comparePrefix(ext.getMaxUnit(), getMaxUnit());\n      if ((extMin_intMin > 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() >= getMinUnit().getLevel())\n          && (extMax_intMax < 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() >= getMaxUnit().getLevel()))\n        return SpatialRelation.CONTAINS;\n      if ((extMin_intMin < 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() <= getMinUnit().getLevel())\n          && (extMax_intMax > 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() <= getMaxUnit().getLevel()))\n        return SpatialRelation.WITHIN;\n      return SpatialRelation.INTERSECTS;\n    }\n\n","sourceOld":"    public SpatialRelation relate(SpanUnitsNRShape ext) {\n      //This logic somewhat mirrors RectangleImpl.relate_range()\n      int extMin_intMax = comparePrefix(ext.getMinUnit(), getMaxUnit());\n      if (extMin_intMax > 0)\n        return SpatialRelation.DISJOINT;\n      int extMax_intMin = comparePrefix(ext.getMaxUnit(), getMinUnit());\n      if (extMax_intMin < 0)\n        return SpatialRelation.DISJOINT;\n      int extMin_intMin = comparePrefix(ext.getMinUnit(), getMinUnit());\n      int extMax_intMax = comparePrefix(ext.getMaxUnit(), getMaxUnit());\n      if ((extMin_intMin > 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() >= getMinUnit().getLevel())\n          && (extMax_intMax < 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() >= getMaxUnit().getLevel()))\n        return SpatialRelation.CONTAINS;\n      if ((extMin_intMin < 0 || extMin_intMin == 0 && ext.getMinUnit().getLevel() <= getMinUnit().getLevel())\n          && (extMax_intMax > 0 || extMax_intMax == 0 && ext.getMaxUnit().getLevel() <= getMaxUnit().getLevel()))\n        return SpatialRelation.WITHIN;\n      return SpatialRelation.INTERSECTS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["cb53c8e9da2afe33252ee698dda412264252cfa7","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["cb53c8e9da2afe33252ee698dda412264252cfa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"],"cb53c8e9da2afe33252ee698dda412264252cfa7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb53c8e9da2afe33252ee698dda412264252cfa7"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"cb53c8e9da2afe33252ee698dda412264252cfa7":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}