{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest#testFailure1().mjava","commits":[{"id":"ba6c544fc28b1a67cc06478eee0658f2f67c5c27","date":1467109641,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest#testFailure1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailure1() {\n    /*\n   GeoStandardPath: {planetmodel=PlanetModel.WGS84, width=1.117010721276371(64.0), points={[\n   [lat=2.18531083006635E-12, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=2.187755873813378E-12])], \n   [lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])]]}}\n    */\n    final GeoPoint[] points = new GeoPoint[]{\n      new GeoPoint(PlanetModel.WGS84, 2.18531083006635E-12, -3.141592653589793),\n      new GeoPoint(PlanetModel.WGS84, 0.0, -3.141592653589793)};\n    \n    final GeoPath path;\n    try {\n      path = GeoPathFactory.makeGeoPath(PlanetModel.WGS84,\n        1.117010721276371, points);\n    } catch (IllegalArgumentException e) {\n      return;\n    }\n    assertTrue(false);\n    \n    final GeoPoint point = new GeoPoint(PlanetModel.WGS84, -2.848117399637174E-91, -1.1092122135274942);\n    System.err.println(\"point = \"+point);\n      \n    final XYZBounds bounds = new XYZBounds();\n    path.getBounds(bounds);\n      \n    final XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84,\n      bounds.getMinimumX(), bounds.getMaximumX(),\n      bounds.getMinimumY(), bounds.getMaximumY(),\n      bounds.getMinimumZ(), bounds.getMaximumZ());\n      \n    assertTrue(path.isWithin(point));\n    assertTrue(solid.isWithin(point));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e0f93a3fd6cd33c48963e4f0871699c3b58fd3d","date":1467111241,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest#testFailure1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailure1() {\n    /*\n   GeoStandardPath: {planetmodel=PlanetModel.WGS84, width=1.117010721276371(64.0), points={[\n   [lat=2.18531083006635E-12, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=2.187755873813378E-12])], \n   [lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])]]}}\n    */\n    final GeoPoint[] points = new GeoPoint[]{\n      new GeoPoint(PlanetModel.WGS84, 2.18531083006635E-12, -3.141592653589793),\n      new GeoPoint(PlanetModel.WGS84, 0.0, -3.141592653589793)};\n    \n    final GeoPath path;\n    try {\n      path = GeoPathFactory.makeGeoPath(PlanetModel.WGS84,\n        1.117010721276371, points);\n    } catch (IllegalArgumentException e) {\n      return;\n    }\n    assertTrue(false);\n    \n    final GeoPoint point = new GeoPoint(PlanetModel.WGS84, -2.848117399637174E-91, -1.1092122135274942);\n    System.err.println(\"point = \"+point);\n      \n    final XYZBounds bounds = new XYZBounds();\n    path.getBounds(bounds);\n      \n    final XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84,\n      bounds.getMinimumX(), bounds.getMaximumX(),\n      bounds.getMinimumY(), bounds.getMaximumY(),\n      bounds.getMinimumZ(), bounds.getMaximumZ());\n      \n    assertTrue(path.isWithin(point));\n    assertTrue(solid.isWithin(point));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest#testFailure1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFailure1() {\n    /*\n   GeoStandardPath: {planetmodel=PlanetModel.WGS84, width=1.117010721276371(64.0), points={[\n   [lat=2.18531083006635E-12, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=2.187755873813378E-12])], \n   [lat=0.0, lon=-3.141592653589793([X=-1.0011188539924791, Y=-1.226017000107956E-16, Z=0.0])]]}}\n    */\n    final GeoPoint[] points = new GeoPoint[]{\n      new GeoPoint(PlanetModel.WGS84, 2.18531083006635E-12, -3.141592653589793),\n      new GeoPoint(PlanetModel.WGS84, 0.0, -3.141592653589793)};\n    \n    final GeoPath path;\n    try {\n      path = GeoPathFactory.makeGeoPath(PlanetModel.WGS84,\n        1.117010721276371, points);\n    } catch (IllegalArgumentException e) {\n      return;\n    }\n    assertTrue(false);\n    \n    final GeoPoint point = new GeoPoint(PlanetModel.WGS84, -2.848117399637174E-91, -1.1092122135274942);\n    System.err.println(\"point = \"+point);\n      \n    final XYZBounds bounds = new XYZBounds();\n    path.getBounds(bounds);\n      \n    final XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84,\n      bounds.getMinimumX(), bounds.getMaximumX(),\n      bounds.getMinimumY(), bounds.getMaximumY(),\n      bounds.getMinimumZ(), bounds.getMaximumZ());\n      \n    assertTrue(path.isWithin(point));\n    assertTrue(solid.isWithin(point));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e0f93a3fd6cd33c48963e4f0871699c3b58fd3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ba6c544fc28b1a67cc06478eee0658f2f67c5c27"],"ba6c544fc28b1a67cc06478eee0658f2f67c5c27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4e0f93a3fd6cd33c48963e4f0871699c3b58fd3d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e0f93a3fd6cd33c48963e4f0871699c3b58fd3d"]},"commit2Childs":{"4e0f93a3fd6cd33c48963e4f0871699c3b58fd3d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba6c544fc28b1a67cc06478eee0658f2f67c5c27":["4e0f93a3fd6cd33c48963e4f0871699c3b58fd3d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e0f93a3fd6cd33c48963e4f0871699c3b58fd3d","ba6c544fc28b1a67cc06478eee0658f2f67c5c27","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}