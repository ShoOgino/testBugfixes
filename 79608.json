{"path":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader#getBinaryDocValues(String).mjava","commits":[{"id":"6503b8135290d25521790aa4d084472fdf7d8561","date":1358800765,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader#getBinaryDocValues(String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader#docValues(String).mjava","sourceNew":"  @Override\n  public BinaryDocValues getBinaryDocValues(String field) throws IOException {\n    BinaryDocValues inner = super.getBinaryDocValues(field);\n    if (inner == null) {\n      return inner;\n    }\n    \n    CategoryListParams clp = dvFieldMap.get(field);\n    if (clp == null) {\n      return inner;\n    } else {\n      return new OrdinalMappingBinaryDocValues(clp, inner);\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocValues docValues(String field) throws IOException {\n    DocValues inner = super.docValues(field);\n    if (inner == null) {\n      return inner;\n    }\n    \n    CategoryListParams clp = dvFieldMap.get(field);\n    if (clp == null) {\n      return inner;\n    } else {\n      return new OrdinalMappingDocValues(inner, clp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader#getBinaryDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public BinaryDocValues getBinaryDocValues(String field) throws IOException {\n    BinaryDocValues inner = super.getBinaryDocValues(field);\n    if (inner == null) {\n      return inner;\n    }\n    \n    CategoryListParams clp = dvFieldMap.get(field);\n    if (clp == null) {\n      return inner;\n    } else {\n      return new OrdinalMappingBinaryDocValues(clp, inner);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/util/OrdinalMappingAtomicReader#getBinaryDocValues(String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/OrdinalMappingAtomicReader#getBinaryDocValues(String).mjava","sourceNew":"  @Override\n  public BinaryDocValues getBinaryDocValues(String field) throws IOException {\n    BinaryDocValues inner = super.getBinaryDocValues(field);\n    if (inner == null) {\n      return inner;\n    }\n    \n    CategoryListParams clp = dvFieldMap.get(field);\n    if (clp == null) {\n      return inner;\n    } else {\n      return new OrdinalMappingBinaryDocValues(clp, inner);\n    }\n  }\n\n","sourceOld":"  @Override\n  public BinaryDocValues getBinaryDocValues(String field) throws IOException {\n    BinaryDocValues inner = super.getBinaryDocValues(field);\n    if (inner == null) {\n      return inner;\n    }\n    \n    CategoryListParams clp = dvFieldMap.get(field);\n    if (clp == null) {\n      return inner;\n    } else {\n      return new OrdinalMappingBinaryDocValues(clp, inner);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6503b8135290d25521790aa4d084472fdf7d8561"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6503b8135290d25521790aa4d084472fdf7d8561":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["607428da722dcb3e86bbd11c63de8986e6275c36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","6503b8135290d25521790aa4d084472fdf7d8561"],"6503b8135290d25521790aa4d084472fdf7d8561":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}