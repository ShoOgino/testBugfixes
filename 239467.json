{"path":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#assertHighlighting(Query,Formatter,String,String,String).mjava","commits":[{"id":"cb2eac46a4023564c3d2b41ec4bc90eb48e61154","date":1473429999,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#assertHighlighting(Query,Formatter,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void assertHighlighting(Query query, Formatter formatter, String text, String expected, String fieldName)\n      throws IOException, InvalidTokenOffsetsException {\n    final Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new NGramTokenizer(4, 4));\n      }\n    };\n\n    final QueryScorer fragmentScorer = new QueryScorer(query, fieldName);\n\n    final Highlighter highlighter = new Highlighter(formatter, fragmentScorer);\n    highlighter.setTextFragmenter(new SimpleFragmenter(100));\n    final String fragment = highlighter.getBestFragment(analyzer, fieldName, text);\n\n    assertEquals(expected, fragment);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#assertHighlighting(Query,Formatter,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void assertHighlighting(Query query, Formatter formatter, String text, String expected, String fieldName)\n      throws IOException, InvalidTokenOffsetsException {\n    final Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new NGramTokenizer(4, 4));\n      }\n    };\n\n    final QueryScorer fragmentScorer = new QueryScorer(query, fieldName);\n\n    final Highlighter highlighter = new Highlighter(formatter, fragmentScorer);\n    highlighter.setTextFragmenter(new SimpleFragmenter(100));\n    final String fragment = highlighter.getBestFragment(analyzer, fieldName, text);\n\n    assertEquals(expected, fragment);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#assertHighlighting(Query,Formatter,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void assertHighlighting(Query query, Formatter formatter, String text, String expected, String fieldName)\n      throws IOException, InvalidTokenOffsetsException {\n    final Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new NGramTokenizer(4, 4));\n      }\n    };\n\n    final QueryScorer fragmentScorer = new QueryScorer(query, fieldName);\n\n    final Highlighter highlighter = new Highlighter(formatter, fragmentScorer);\n    highlighter.setTextFragmenter(new SimpleFragmenter(100));\n    final String fragment = highlighter.getBestFragment(analyzer, fieldName, text);\n\n    assertEquals(expected, fragment);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#assertHighlighting(Query,Formatter,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void assertHighlighting(Query query, Formatter formatter, String text, String expected, String fieldName)\n      throws IOException, InvalidTokenOffsetsException {\n    final Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new NGramTokenizer(4, 4));\n      }\n    };\n\n    final QueryScorer fragmentScorer = new QueryScorer(query, fieldName);\n\n    final Highlighter highlighter = new Highlighter(formatter, fragmentScorer);\n    highlighter.setTextFragmenter(new SimpleFragmenter(100));\n    final String fragment = highlighter.getBestFragment(analyzer, fieldName, text);\n\n    assertEquals(expected, fragment);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb2eac46a4023564c3d2b41ec4bc90eb48e61154":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89424def13674ea17829b41c5883c54ecc31a132"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"89424def13674ea17829b41c5883c54ecc31a132":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cb2eac46a4023564c3d2b41ec4bc90eb48e61154"]},"commit2Childs":{"cb2eac46a4023564c3d2b41ec4bc90eb48e61154":["89424def13674ea17829b41c5883c54ecc31a132"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb2eac46a4023564c3d2b41ec4bc90eb48e61154","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","89424def13674ea17829b41c5883c54ecc31a132"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}