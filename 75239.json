{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","sourceNew":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"undefined field \"+fieldName);\n  }\n\n","sourceOld":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"undefined field \"+fieldName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","sourceNew":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"undefined field \"+fieldName);\n  }\n\n","sourceOld":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"undefined field \"+fieldName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","sourceNew":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"undefined field \"+fieldName);\n  }\n\n","sourceOld":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"undefined field \"+fieldName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4094497d8fed39484374f51c230cc0e5d660112f","date":1331253253,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","sourceNew":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"undefined field: \\\"\"+fieldName+\"\\\"\");\n  }\n\n","sourceOld":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"undefined field \"+fieldName);\n  }\n\n","bugFix":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","sourceNew":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"undefined field: \\\"\"+fieldName+\"\\\"\");\n  }\n\n","sourceOld":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"undefined field \"+fieldName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","date":1362545433,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#getField(String).mjava","sourceNew":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException(ErrorCode.BAD_REQUEST,\"undefined field: \\\"\"+fieldName+\"\\\"\");\n  }\n\n","sourceOld":"  /**\n   * Returns the SchemaField that should be used for the specified field name\n   *\n   * @param fieldName may be an explicitly defined field or a name that\n   * matches a dynamic field.\n   * @throws SolrException if no such field exists\n   * @see #getFieldType\n   * @see #getFieldOrNull(String)\n   * @return The {@link SchemaField}\n   */\n  public SchemaField getField(String fieldName) {\n    SchemaField f = getFieldOrNull(fieldName);\n    if (f != null) return f;\n\n\n    // Hmmm, default field could also be implemented with a dynamic field of \"*\".\n    // It would have to be special-cased and only used if nothing else matched.\n    /***  REMOVED -YCS\n    if (defaultFieldType != null) return new SchemaField(fieldName,defaultFieldType);\n    ***/\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"undefined field: \\\"\"+fieldName+\"\\\"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4094497d8fed39484374f51c230cc0e5d660112f":["c26f00b574427b55127e869b935845554afde1fa"],"38e3b736c7ca086d61b7dbb841c905ee115490da":["c26f00b574427b55127e869b935845554afde1fa","4094497d8fed39484374f51c230cc0e5d660112f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["4094497d8fed39484374f51c230cc0e5d660112f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"]},"commit2Childs":{"4094497d8fed39484374f51c230cc0e5d660112f":["38e3b736c7ca086d61b7dbb841c905ee115490da","054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4094497d8fed39484374f51c230cc0e5d660112f","38e3b736c7ca086d61b7dbb841c905ee115490da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}