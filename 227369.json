{"path":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKD#testTooManyPoints().mjava","commits":[{"id":"d27e4011f75a6a0d8e2906aef8348a1692e85473","date":1579187506,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKD#testTooManyPoints().mjava","pathOld":"/dev/null","sourceNew":"  public void testTooManyPoints() throws Exception {\n    Directory dir = newDirectory();\n    final int numValues = 10;\n    final int numPointsAdded = 50; // exceeds totalPointCount\n    final int numBytesPerDim = TestUtil.nextInt(random(), 1, 4);\n    final byte[] pointValue = new byte[numBytesPerDim];\n    BKDWriter w = new BKDWriter(numValues, dir, \"_temp\", 1, 1, numBytesPerDim, 2,\n        BKDWriter.DEFAULT_MAX_MB_SORT_IN_HEAP, numValues);\n    for(int i=0;i<numValues;i++) {\n      random().nextBytes(pointValue);\n      w.add(pointValue, i);\n    }\n    random().nextBytes(pointValue);\n    IllegalStateException ex = expectThrows(IllegalStateException.class, () -> { w.add(pointValue, numValues);});\n    assertEquals(\"totalPointCount=10 was passed when we were created, but we just hit 11 values\", ex.getMessage());\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKD#testTooManyPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKD#testTooManyPoints().mjava","sourceNew":"  public void testTooManyPoints() throws Exception {\n    Directory dir = newDirectory();\n    final int numValues = 10;\n    final int numPointsAdded = 50; // exceeds totalPointCount\n    final int numBytesPerDim = TestUtil.nextInt(random(), 1, 4);\n    final byte[] pointValue = new byte[numBytesPerDim];\n    BKDWriter w = new BKDWriter(numValues, dir, \"_temp\", new BKDConfig(1, 1, numBytesPerDim, 2),\n        BKDWriter.DEFAULT_MAX_MB_SORT_IN_HEAP, numValues);\n    for(int i=0;i<numValues;i++) {\n      random().nextBytes(pointValue);\n      w.add(pointValue, i);\n    }\n    random().nextBytes(pointValue);\n    IllegalStateException ex = expectThrows(IllegalStateException.class, () -> { w.add(pointValue, numValues);});\n    assertEquals(\"totalPointCount=10 was passed when we were created, but we just hit 11 values\", ex.getMessage());\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTooManyPoints() throws Exception {\n    Directory dir = newDirectory();\n    final int numValues = 10;\n    final int numPointsAdded = 50; // exceeds totalPointCount\n    final int numBytesPerDim = TestUtil.nextInt(random(), 1, 4);\n    final byte[] pointValue = new byte[numBytesPerDim];\n    BKDWriter w = new BKDWriter(numValues, dir, \"_temp\", 1, 1, numBytesPerDim, 2,\n        BKDWriter.DEFAULT_MAX_MB_SORT_IN_HEAP, numValues);\n    for(int i=0;i<numValues;i++) {\n      random().nextBytes(pointValue);\n      w.add(pointValue, i);\n    }\n    random().nextBytes(pointValue);\n    IllegalStateException ex = expectThrows(IllegalStateException.class, () -> { w.add(pointValue, numValues);});\n    assertEquals(\"totalPointCount=10 was passed when we were created, but we just hit 11 values\", ex.getMessage());\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d27e4011f75a6a0d8e2906aef8348a1692e85473":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["d27e4011f75a6a0d8e2906aef8348a1692e85473"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"d27e4011f75a6a0d8e2906aef8348a1692e85473":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d27e4011f75a6a0d8e2906aef8348a1692e85473"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}