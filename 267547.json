{"path":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","commits":[{"id":"ccc08aa684aee4964baee0644a6ba047bfd70829","date":1316263707,"type":1,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector[DocSetHitCollector]#getDocSet().mjava","sourceNew":"  @Override\n  public DocSet getDocSet() {\n    if (pos<=scratch.length) {\n      // assumes docs were collected in sorted order!\n      return new SortedIntDocSet(scratch, pos);\n    } else {\n      // set the bits for ids that were collected in the array\n      for (int i=0; i<scratch.length; i++) bits.fastSet(scratch[i]);\n      return new BitDocSet(bits,pos);\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocSet getDocSet() {\n    if (pos<=scratch.length) {\n      // assumes docs were collected in sorted order!\n      return new SortedIntDocSet(scratch, pos);\n    } else {\n      // set the bits for ids that were collected in the array\n      for (int i=0; i<scratch.length; i++) bits.fastSet(scratch[i]);\n      return new BitDocSet(bits,pos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96d207426bd26fa5c1014e26d21d87603aea68b7","date":1327944562,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","sourceNew":"  @Override\r\n  public DocSet getDocSet() {\r\n    if (pos<=scratch.length) {\r\n      // assumes docs were collected in sorted order!\r\n      return new SortedIntDocSet(scratch, pos);\r\n    } else {\r\n      // set the bits for ids that were collected in the array\r\n      for (int i=0; i<scratch.length; i++) bits.fastSet(scratch[i]);\r\n      return new BitDocSet(bits,pos);\r\n    }\r\n  }\r\n\n","sourceOld":"  @Override\n  public DocSet getDocSet() {\n    if (pos<=scratch.length) {\n      // assumes docs were collected in sorted order!\n      return new SortedIntDocSet(scratch, pos);\n    } else {\n      // set the bits for ids that were collected in the array\n      for (int i=0; i<scratch.length; i++) bits.fastSet(scratch[i]);\n      return new BitDocSet(bits,pos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","sourceNew":"  @Override\r\n  public DocSet getDocSet() {\r\n    if (pos<=scratch.length) {\r\n      // assumes docs were collected in sorted order!\r\n      return new SortedIntDocSet(scratch, pos);\r\n    } else {\r\n      // set the bits for ids that were collected in the array\r\n      for (int i=0; i<scratch.length; i++) bits.fastSet(scratch[i]);\r\n      return new BitDocSet(bits,pos);\r\n    }\r\n  }\r\n\n","sourceOld":"  @Override\n  public DocSet getDocSet() {\n    if (pos<=scratch.length) {\n      // assumes docs were collected in sorted order!\n      return new SortedIntDocSet(scratch, pos);\n    } else {\n      // set the bits for ids that were collected in the array\n      for (int i=0; i<scratch.length; i++) bits.fastSet(scratch[i]);\n      return new BitDocSet(bits,pos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23","date":1332766738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","sourceNew":"  @Override\n  public DocSet getDocSet() {\n    if (pos<=scratch.length) {\n      // assumes docs were collected in sorted order!\n      return new SortedIntDocSet(scratch, pos);\n    } else {\n      // set the bits for ids that were collected in the array\n      for (int i=0; i<scratch.length; i++) bits.fastSet(scratch[i]);\n      return new BitDocSet(bits,pos);\n    }\n  }\n\n","sourceOld":"  @Override\r\n  public DocSet getDocSet() {\r\n    if (pos<=scratch.length) {\r\n      // assumes docs were collected in sorted order!\r\n      return new SortedIntDocSet(scratch, pos);\r\n    } else {\r\n      // set the bits for ids that were collected in the array\r\n      for (int i=0; i<scratch.length; i++) bits.fastSet(scratch[i]);\r\n      return new BitDocSet(bits,pos);\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","date":1392536197,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","sourceNew":"  @Override\n  public DocSet getDocSet() {\n    if (pos<=scratch.length) {\n      // assumes docs were collected in sorted order!\n      return new SortedIntDocSet(scratch, pos);\n    } else {\n      // set the bits for ids that were collected in the array\n      for (int i=0; i<scratch.length; i++) bits.set(scratch[i]);\n      return new BitDocSet(bits,pos);\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocSet getDocSet() {\n    if (pos<=scratch.length) {\n      // assumes docs were collected in sorted order!\n      return new SortedIntDocSet(scratch, pos);\n    } else {\n      // set the bits for ids that were collected in the array\n      for (int i=0; i<scratch.length; i++) bits.fastSet(scratch[i]);\n      return new BitDocSet(bits,pos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocSet getDocSet() {\n    if (pos<=scratch.length) {\n      // assumes docs were collected in sorted order!\n      return new SortedIntDocSet(scratch, pos);\n    } else {\n      // set the bits for ids that were collected in the array\n      for (int i=0; i<scratch.length; i++) bits.set(scratch[i]);\n      return new BitDocSet(bits,pos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetDelegateCollector#getDocSet().mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocSet getDocSet() {\n    if (pos<=scratch.length) {\n      // assumes docs were collected in sorted order!\n      return new SortedIntDocSet(scratch, pos);\n    } else {\n      // set the bits for ids that were collected in the array\n      for (int i=0; i<scratch.length; i++) bits.set(scratch[i]);\n      return new BitDocSet(bits,pos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23"],"ccc08aa684aee4964baee0644a6ba047bfd70829":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96d207426bd26fa5c1014e26d21d87603aea68b7":["ccc08aa684aee4964baee0644a6ba047bfd70829"],"ae73da626f97850c922c42736f808d0378e165f0":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["ccc08aa684aee4964baee0644a6ba047bfd70829","96d207426bd26fa5c1014e26d21d87603aea68b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae73da626f97850c922c42736f808d0378e165f0"]},"commit2Childs":{"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"ccc08aa684aee4964baee0644a6ba047bfd70829":["96d207426bd26fa5c1014e26d21d87603aea68b7","5cab9a86bd67202d20b6adc463008c8e982b070a"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ccc08aa684aee4964baee0644a6ba047bfd70829"],"96d207426bd26fa5c1014e26d21d87603aea68b7":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}