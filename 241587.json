{"path":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","commits":[{"id":"4b3915945926c0bf7def01b0c504977709d3aed3","date":1436197708,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/BitDocIdSetCachingWrapperFilter#getDocIdSet(LeafReaderContext).mjava","sourceNew":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final Object key = reader.getCoreCacheKey();\n\n    DocIdSet docIdSet = cache.get(key);\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, false);\n      final DocIdSetIterator it = weight.scorer(context);\n\n      BitDocIdSet.Builder builder = new BitDocIdSet.Builder(context.reader().maxDoc());\n      if (it != null) {\n        builder.or(it);\n      }\n      docIdSet = builder.build();\n      if (docIdSet == null) {\n        // We use EMPTY as a sentinel for the empty set, which is cacheable\n        docIdSet = DocIdSet.EMPTY;\n      }\n      cache.put(key, docIdSet);\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","sourceOld":"  @Override\n  public BitDocIdSet getDocIdSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final Object key = reader.getCoreCacheKey();\n\n    DocIdSet docIdSet = cache.get(key);\n    if (docIdSet == null) {\n      docIdSet = filter.getDocIdSet(context, null);\n      docIdSet = docIdSetToCache(docIdSet, reader);\n      if (docIdSet == null) {\n        // We use EMPTY as a sentinel for the empty set, which is cacheable\n        docIdSet = DocIdSet.EMPTY;\n      }\n      cache.put(key, docIdSet);\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : (BitDocIdSet) docIdSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e91a2d9ed80172872da0f517870da6756289554","date":1436431140,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","sourceNew":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final Object key = reader.getCoreCacheKey();\n\n    DocIdSet docIdSet = cache.get(key);\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, false);\n      final DocIdSetIterator it = weight.scorer(context);\n\n      if (it == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(it, context.reader().maxDoc()));\n      }\n      cache.put(key, docIdSet);\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","sourceOld":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final Object key = reader.getCoreCacheKey();\n\n    DocIdSet docIdSet = cache.get(key);\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, false);\n      final DocIdSetIterator it = weight.scorer(context);\n\n      BitDocIdSet.Builder builder = new BitDocIdSet.Builder(context.reader().maxDoc());\n      if (it != null) {\n        builder.or(it);\n      }\n      docIdSet = builder.build();\n      if (docIdSet == null) {\n        // We use EMPTY as a sentinel for the empty set, which is cacheable\n        docIdSet = DocIdSet.EMPTY;\n      }\n      cache.put(key, docIdSet);\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","sourceNew":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final Object key = reader.getCoreCacheKey();\n\n    DocIdSet docIdSet = cache.get(key);\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, false);\n      final Scorer s = weight.scorer(context);\n\n      if (s == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc()));\n      }\n      cache.put(key, docIdSet);\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","sourceOld":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final Object key = reader.getCoreCacheKey();\n\n    DocIdSet docIdSet = cache.get(key);\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, false);\n      final DocIdSetIterator it = weight.scorer(context);\n\n      if (it == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(it, context.reader().maxDoc()));\n      }\n      cache.put(key, docIdSet);\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","sourceNew":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final IndexReader.CacheHelper cacheHelper = reader.getCoreCacheHelper();\n\n    DocIdSet docIdSet = null;\n    if (cacheHelper != null) {\n      docIdSet = cache.get(cacheHelper.getKey());\n    }\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, false);\n      final Scorer s = weight.scorer(context);\n\n      if (s == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc()));\n      }\n      if (cacheHelper != null) {\n        cache.put(cacheHelper.getKey(), docIdSet);\n      }\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","sourceOld":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final Object key = reader.getCoreCacheKey();\n\n    DocIdSet docIdSet = cache.get(key);\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, false);\n      final Scorer s = weight.scorer(context);\n\n      if (s == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc()));\n      }\n      cache.put(key, docIdSet);\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","sourceNew":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final IndexReader.CacheHelper cacheHelper = reader.getCoreCacheHelper();\n\n    DocIdSet docIdSet = null;\n    if (cacheHelper != null) {\n      docIdSet = cache.get(cacheHelper.getKey());\n    }\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES);\n      final Scorer s = weight.scorer(context);\n\n      if (s == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc()));\n      }\n      if (cacheHelper != null) {\n        cache.put(cacheHelper.getKey(), docIdSet);\n      }\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","sourceOld":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final IndexReader.CacheHelper cacheHelper = reader.getCoreCacheHelper();\n\n    DocIdSet docIdSet = null;\n    if (cacheHelper != null) {\n      docIdSet = cache.get(cacheHelper.getKey());\n    }\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, false);\n      final Scorer s = weight.scorer(context);\n\n      if (s == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc()));\n      }\n      if (cacheHelper != null) {\n        cache.put(cacheHelper.getKey(), docIdSet);\n      }\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","sourceNew":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final IndexReader.CacheHelper cacheHelper = reader.getCoreCacheHelper();\n\n    DocIdSet docIdSet = null;\n    if (cacheHelper != null) {\n      docIdSet = cache.get(cacheHelper.getKey());\n    }\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES);\n      final Scorer s = weight.scorer(context);\n\n      if (s == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc()));\n      }\n      if (cacheHelper != null) {\n        cache.put(cacheHelper.getKey(), docIdSet);\n      }\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","sourceOld":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final IndexReader.CacheHelper cacheHelper = reader.getCoreCacheHelper();\n\n    DocIdSet docIdSet = null;\n    if (cacheHelper != null) {\n      docIdSet = cache.get(cacheHelper.getKey());\n    }\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, false);\n      final Scorer s = weight.scorer(context);\n\n      if (s == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc()));\n      }\n      if (cacheHelper != null) {\n        cache.put(cacheHelper.getKey(), docIdSet);\n      }\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"475584d5e08a22ad3fc7babefe006d77bc744567","date":1523282824,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","sourceNew":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final IndexReader.CacheHelper cacheHelper = reader.getCoreCacheHelper();\n\n    DocIdSet docIdSet = null;\n    if (cacheHelper != null) {\n      docIdSet = cache.get(cacheHelper.getKey());\n    }\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Query rewritten = searcher.rewrite(query);\n      final Weight weight = searcher.createWeight(rewritten, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES, 1);\n      final Scorer s = weight.scorer(context);\n\n      if (s == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc()));\n      }\n      if (cacheHelper != null) {\n        cache.put(cacheHelper.getKey(), docIdSet);\n      }\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","sourceOld":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final IndexReader.CacheHelper cacheHelper = reader.getCoreCacheHelper();\n\n    DocIdSet docIdSet = null;\n    if (cacheHelper != null) {\n      docIdSet = cache.get(cacheHelper.getKey());\n    }\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES);\n      final Scorer s = weight.scorer(context);\n\n      if (s == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc()));\n      }\n      if (cacheHelper != null) {\n        cache.put(cacheHelper.getKey(), docIdSet);\n      }\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d58e44159788900f4a2113b84463dc3fbbf80f20","date":1523319203,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/QueryBitSetProducer#getBitSet(LeafReaderContext).mjava","sourceNew":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final IndexReader.CacheHelper cacheHelper = reader.getCoreCacheHelper();\n\n    DocIdSet docIdSet = null;\n    if (cacheHelper != null) {\n      docIdSet = cache.get(cacheHelper.getKey());\n    }\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Query rewritten = searcher.rewrite(query);\n      final Weight weight = searcher.createWeight(rewritten, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES, 1);\n      final Scorer s = weight.scorer(context);\n\n      if (s == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc()));\n      }\n      if (cacheHelper != null) {\n        cache.put(cacheHelper.getKey(), docIdSet);\n      }\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","sourceOld":"  @Override\n  public BitSet getBitSet(LeafReaderContext context) throws IOException {\n    final LeafReader reader = context.reader();\n    final IndexReader.CacheHelper cacheHelper = reader.getCoreCacheHelper();\n\n    DocIdSet docIdSet = null;\n    if (cacheHelper != null) {\n      docIdSet = cache.get(cacheHelper.getKey());\n    }\n    if (docIdSet == null) {\n      final IndexReaderContext topLevelContext = ReaderUtil.getTopLevelContext(context);\n      final IndexSearcher searcher = new IndexSearcher(topLevelContext);\n      searcher.setQueryCache(null);\n      final Weight weight = searcher.createNormalizedWeight(query, org.apache.lucene.search.ScoreMode.COMPLETE_NO_SCORES);\n      final Scorer s = weight.scorer(context);\n\n      if (s == null) {\n        docIdSet = DocIdSet.EMPTY;\n      } else {\n        docIdSet = new BitDocIdSet(BitSet.of(s.iterator(), context.reader().maxDoc()));\n      }\n      if (cacheHelper != null) {\n        cache.put(cacheHelper.getKey(), docIdSet);\n      }\n    }\n    return docIdSet == DocIdSet.EMPTY ? null : ((BitDocIdSet) docIdSet).bits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d58e44159788900f4a2113b84463dc3fbbf80f20":["417142ff08fda9cf0b72d5133e63097a166c6458","475584d5e08a22ad3fc7babefe006d77bc744567"],"475584d5e08a22ad3fc7babefe006d77bc744567":["417142ff08fda9cf0b72d5133e63097a166c6458"],"0e91a2d9ed80172872da0f517870da6756289554":["4b3915945926c0bf7def01b0c504977709d3aed3"],"d211216c83f01894810543d1c107160a9ae3650b":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["d211216c83f01894810543d1c107160a9ae3650b"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["0e91a2d9ed80172872da0f517870da6756289554"],"4b3915945926c0bf7def01b0c504977709d3aed3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"417142ff08fda9cf0b72d5133e63097a166c6458":["d211216c83f01894810543d1c107160a9ae3650b","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"d58e44159788900f4a2113b84463dc3fbbf80f20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"475584d5e08a22ad3fc7babefe006d77bc744567":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"0e91a2d9ed80172872da0f517870da6756289554":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"d211216c83f01894810543d1c107160a9ae3650b":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b3915945926c0bf7def01b0c504977709d3aed3"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["d211216c83f01894810543d1c107160a9ae3650b"],"4b3915945926c0bf7def01b0c504977709d3aed3":["0e91a2d9ed80172872da0f517870da6756289554"],"417142ff08fda9cf0b72d5133e63097a166c6458":["d58e44159788900f4a2113b84463dc3fbbf80f20","475584d5e08a22ad3fc7babefe006d77bc744567"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}