{"path":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","commits":[{"id":"11982a7b6834a8571852448312db4624c32990b5","date":1321300684,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  public void accumulate(BytesRef value, int count) {\n    this.count += count;\n    T typedValue = (T)ft.toObject(sf, value);\n    updateMinMax(typedValue, typedValue);\n    updateTypeSpecificStats(typedValue, count);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    this.count += count;\n    T typedValue = (T)ft.toObject(sf, value);\n    updateMinMax(typedValue, typedValue);\n    updateTypeSpecificStats(typedValue, count);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  public void accumulate(BytesRef value, int count) {\n    this.count += count;\n    T typedValue = (T)ft.toObject(sf, value);\n    updateMinMax(typedValue, typedValue);\n    updateTypeSpecificStats(typedValue, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    this.count += count;\n    T typedValue = (T)ft.toObject(sf, value);\n    updateMinMax(typedValue, typedValue);\n    updateTypeSpecificStats(typedValue, count);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  public void accumulate(BytesRef value, int count) {\n    this.count += count;\n    T typedValue = (T)ft.toObject(sf, value);\n    updateMinMax(typedValue, typedValue);\n    updateTypeSpecificStats(typedValue, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    T typedValue = (T)ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    this.count += count;\n    T typedValue = (T)ft.toObject(sf, value);\n    updateMinMax(typedValue, typedValue);\n    updateTypeSpecificStats(typedValue, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    T typedValue = (T)ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    this.count += count;\n    T typedValue = (T)ft.toObject(sf, value);\n    updateMinMax(typedValue, typedValue);\n    updateTypeSpecificStats(typedValue, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"283ff02f401ec3e7a2fad73643970f052383fb0c","date":1411407953,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    if (null == ft) {\n      throw new IllegalStateException(\"Can't collect & convert BytesRefs on stats that do't use a a FieldType: \" + statsField);\n    }\n    T typedValue = (T)ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    T typedValue = (T)ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1002283cfd29923d517db7c33e07bb54aac7acd4","date":1427211199,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    if (null == ft) {\n      throw new IllegalStateException(\n          \"Can't collect & convert BytesRefs on stats that do't use a a FieldType: \"\n              + statsField);\n    }\n    T typedValue = (T) ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    if (null == ft) {\n      throw new IllegalStateException(\"Can't collect & convert BytesRefs on stats that do't use a a FieldType: \" + statsField);\n    }\n    T typedValue = (T)ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    if (null == ft) {\n      throw new IllegalStateException(\n          \"Can't collect & convert BytesRefs on stats that do't use a a FieldType: \"\n              + statsField);\n    }\n    T typedValue = (T) ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    if (null == ft) {\n      throw new IllegalStateException(\"Can't collect & convert BytesRefs on stats that do't use a a FieldType: \" + statsField);\n    }\n    T typedValue = (T)ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a80a37ae73034270b57bfd57a44f8fcadc952fa0","date":1515440719,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","sourceNew":"  @Override\n  public void accumulate(BytesRef value, int count) {\n    if (null == ft) {\n      throw new IllegalStateException(\n          \"Can't collect & convert BytesRefs on stats that do't use a a FieldType: \"\n              + statsField);\n    }\n    T typedValue = (T) ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    if (null == ft) {\n      throw new IllegalStateException(\n          \"Can't collect & convert BytesRefs on stats that do't use a a FieldType: \"\n              + statsField);\n    }\n    T typedValue = (T) ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","sourceNew":"  @Override\n  public void accumulate(BytesRef value, int count) {\n    if (null == ft) {\n      throw new IllegalStateException(\n          \"Can't collect & convert BytesRefs on stats that do't use a a FieldType: \"\n              + statsField);\n    }\n    T typedValue = (T) ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public void accumulate(BytesRef value, int count) {\n    if (null == ft) {\n      throw new IllegalStateException(\n          \"Can't collect & convert BytesRefs on stats that do't use a a FieldType: \"\n              + statsField);\n    }\n    T typedValue = (T) ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":4,"author":"Mike Drob","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/AbstractStatsValues[StatsValuesFactory]#accumulate(BytesRef,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void accumulate(BytesRef value, int count) {\n    if (null == ft) {\n      throw new IllegalStateException(\n          \"Can't collect & convert BytesRefs on stats that do't use a a FieldType: \"\n              + statsField);\n    }\n    T typedValue = (T) ft.toObject(sf, value);\n    accumulate(typedValue, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["11982a7b6834a8571852448312db4624c32990b5","7530de27b87b961b51f01bd1299b7004d46e8823"],"b94236357aaa22b76c10629851fe4e376e0cea82":["1002283cfd29923d517db7c33e07bb54aac7acd4","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["1002283cfd29923d517db7c33e07bb54aac7acd4"],"1002283cfd29923d517db7c33e07bb54aac7acd4":["283ff02f401ec3e7a2fad73643970f052383fb0c"],"283ff02f401ec3e7a2fad73643970f052383fb0c":["73bb5a57dc75b54a39494f99986599cae7dff417"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["283ff02f401ec3e7a2fad73643970f052383fb0c","1002283cfd29923d517db7c33e07bb54aac7acd4"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["7530de27b87b961b51f01bd1299b7004d46e8823","73bb5a57dc75b54a39494f99986599cae7dff417"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["11982a7b6834a8571852448312db4624c32990b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"73bb5a57dc75b54a39494f99986599cae7dff417":["7530de27b87b961b51f01bd1299b7004d46e8823"],"11982a7b6834a8571852448312db4624c32990b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b94236357aaa22b76c10629851fe4e376e0cea82":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["b94236357aaa22b76c10629851fe4e376e0cea82"],"1002283cfd29923d517db7c33e07bb54aac7acd4":["b94236357aaa22b76c10629851fe4e376e0cea82","a80a37ae73034270b57bfd57a44f8fcadc952fa0","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"283ff02f401ec3e7a2fad73643970f052383fb0c":["1002283cfd29923d517db7c33e07bb54aac7acd4","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11982a7b6834a8571852448312db4624c32990b5"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","95303ff3749680c743b9425f9cf99e6e4065e8a8","73bb5a57dc75b54a39494f99986599cae7dff417"],"11982a7b6834a8571852448312db4624c32990b5":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"73bb5a57dc75b54a39494f99986599cae7dff417":["283ff02f401ec3e7a2fad73643970f052383fb0c","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}