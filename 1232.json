{"path":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#componentContains(double,double).mjava","commits":[{"id":"925fce43f3bac029d912b9b7de03c789e258a333","date":1461612714,"type":2,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#componentContains(double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonTree#contains(double,double).mjava","sourceNew":"  /** Returns true if the point is contained within this polygon component. */\n  private boolean componentContains(double latitude, double longitude) {\n    // check bounding box\n    if (latitude < minLat || latitude > maxLat || longitude < minLon || longitude > maxLon) {\n      return false;\n    }\n    \n    if (tree.contains(latitude, longitude)) {\n      if (holes != null && holes.contains(latitude, longitude)) {\n        return false;\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","sourceOld":"  /** \n   * Returns true if the point is contained within this polygon.\n   * <p>\n   * See <a href=\"https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\">\n   * https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html</a> for more information.\n   */\n  boolean contains(double latitude, double longitude) {\n    // check bounding box\n    if (latitude < minLat || latitude > maxLat || longitude < minLon || longitude > maxLon) {\n      return false;\n    }\n    \n    if (tree.contains(latitude, longitude)) {\n      for (LatLonTree hole : holes) {\n        if (hole.contains(latitude, longitude)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":2,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#componentContains(double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonTree#contains(double,double).mjava","sourceNew":"  /** Returns true if the point is contained within this polygon component. */\n  private boolean componentContains(double latitude, double longitude) {\n    // check bounding box\n    if (latitude < minLat || latitude > maxLat || longitude < minLon || longitude > maxLon) {\n      return false;\n    }\n    \n    if (tree.contains(latitude, longitude)) {\n      if (holes != null && holes.contains(latitude, longitude)) {\n        return false;\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","sourceOld":"  /** \n   * Returns true if the point is contained within this polygon.\n   * <p>\n   * See <a href=\"https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\">\n   * https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html</a> for more information.\n   */\n  boolean contains(double latitude, double longitude) {\n    // check bounding box\n    if (latitude < minLat || latitude > maxLat || longitude < minLon || longitude > maxLon) {\n      return false;\n    }\n    \n    if (tree.contains(latitude, longitude)) {\n      for (LatLonTree hole : holes) {\n        if (hole.contains(latitude, longitude)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4fccad460342b1af30cb328cc8297751a218d78","date":1541177339,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#componentContains(double,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#componentContains(double,double).mjava","sourceNew":"  /** Returns true if the point is contained within this polygon component. */\n  private boolean componentContains(double latitude, double longitude) {\n    // check bounding box\n    if (latitude < minLat || latitude > maxLat || longitude < minLon || longitude > maxLon) {\n      return false;\n    }\n    if (contains(tree, latitude, longitude)) {\n      if (holes != null && holes.contains(latitude, longitude)) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  /** Returns true if the point is contained within this polygon component. */\n  private boolean componentContains(double latitude, double longitude) {\n    // check bounding box\n    if (latitude < minLat || latitude > maxLat || longitude < minLon || longitude > maxLon) {\n      return false;\n    }\n    \n    if (tree.contains(latitude, longitude)) {\n      if (holes != null && holes.contains(latitude, longitude)) {\n        return false;\n      }\n      return true;\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc005279ab64cbf458ccef2ada610bc1a04b6139","date":1554992856,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#componentContains(double,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#componentContains(double,double).mjava","sourceNew":"  /** Returns true if the point is contained within this polygon component. */\n  private boolean componentContains(double latitude, double longitude) {\n    // check bounding box\n    if (latitude < minLat || latitude > maxLat || longitude < minLon || longitude > maxLon) {\n      return false;\n    }\n    containsBoundary.set(false);\n    if (contains(tree, latitude, longitude, containsBoundary)) {\n      if (holes != null && holes.contains(latitude, longitude)) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  /** Returns true if the point is contained within this polygon component. */\n  private boolean componentContains(double latitude, double longitude) {\n    // check bounding box\n    if (latitude < minLat || latitude > maxLat || longitude < minLon || longitude > maxLon) {\n      return false;\n    }\n    if (contains(tree, latitude, longitude)) {\n      if (holes != null && holes.contains(latitude, longitude)) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","date":1571074565,"type":4,"author":"Ignacio Vera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#componentContains(double,double).mjava","sourceNew":null,"sourceOld":"  /** Returns true if the point is contained within this polygon component. */\n  private boolean componentContains(double latitude, double longitude) {\n    // check bounding box\n    if (latitude < minLat || latitude > maxLat || longitude < minLon || longitude > maxLon) {\n      return false;\n    }\n    containsBoundary.set(false);\n    if (contains(tree, latitude, longitude, containsBoundary)) {\n      if (holes != null && holes.contains(latitude, longitude)) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":4,"author":"jimczi","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/geo/Polygon2D#componentContains(double,double).mjava","sourceNew":null,"sourceOld":"  /** Returns true if the point is contained within this polygon component. */\n  private boolean componentContains(double latitude, double longitude) {\n    // check bounding box\n    if (latitude < minLat || latitude > maxLat || longitude < minLon || longitude > maxLon) {\n      return false;\n    }\n    containsBoundary.set(false);\n    if (contains(tree, latitude, longitude, containsBoundary)) {\n      if (holes != null && holes.contains(latitude, longitude)) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["fc005279ab64cbf458ccef2ada610bc1a04b6139"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","925fce43f3bac029d912b9b7de03c789e258a333"],"e4fccad460342b1af30cb328cc8297751a218d78":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"fc005279ab64cbf458ccef2ada610bc1a04b6139":["e4fccad460342b1af30cb328cc8297751a218d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"],"925fce43f3bac029d912b9b7de03c789e258a333":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b0b597c65628ca9e73913a07e81691f8229bae35":["fc005279ab64cbf458ccef2ada610bc1a04b6139","b5e250f1fb163f190f5ec72b6eeb8271162d8ae1"]},"commit2Childs":{"b5e250f1fb163f190f5ec72b6eeb8271162d8ae1":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","925fce43f3bac029d912b9b7de03c789e258a333"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["e4fccad460342b1af30cb328cc8297751a218d78"],"e4fccad460342b1af30cb328cc8297751a218d78":["fc005279ab64cbf458ccef2ada610bc1a04b6139"],"fc005279ab64cbf458ccef2ada610bc1a04b6139":["b5e250f1fb163f190f5ec72b6eeb8271162d8ae1","b0b597c65628ca9e73913a07e81691f8229bae35"],"925fce43f3bac029d912b9b7de03c789e258a333":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}