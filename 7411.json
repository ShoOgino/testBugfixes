{"path":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","sourceNew":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random, sdp).setIndexCommit(sdp.getSnapshot(\"snapshot0\")));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1);\n    writer.close();\n    \n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = sdp.getSnapshot(\"snapshot1\").getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random, sdp).setIndexCommit(sdp.getSnapshot(\"snapshot0\")));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1);\n    writer.close();\n    \n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = sdp.getSnapshot(\"snapshot1\").getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","sourceNew":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(sdp.getSnapshot(\"snapshot0\")));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1);\n    writer.close();\n    \n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = sdp.getSnapshot(\"snapshot1\").getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random, sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random, sdp).setIndexCommit(sdp.getSnapshot(\"snapshot0\")));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1);\n    writer.close();\n    \n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = sdp.getSnapshot(\"snapshot1\").getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eae2a56dc810a17cf807d831f720dec931a03de","date":1349262073,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","sourceNew":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(sdp.getSnapshot(\"snapshot0\")));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = sdp.getSnapshot(\"snapshot1\").getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(sdp.getSnapshot(\"snapshot0\")));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1);\n    writer.close();\n    \n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = sdp.getSnapshot(\"snapshot1\").getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70790b11e79a0366b21b2cc5b82d03b6fddcef81","date":1364594206,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","sourceNew":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(sdp.getSnapshot(\"snapshot0\")));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = sdp.getSnapshot(\"snapshot1\").getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(sdp.getSnapshot(\"snapshot0\")));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = sdp.getSnapshot(\"snapshot1\").getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["4ce24aa081e44190692bbebc8aead342ad7060e8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8a207624ce3e468bca1819861084438d936e3b1c","date":1367514967,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","sourceNew":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, true);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots, \"snapshot\");\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(sdp.getSnapshot(\"snapshot0\")));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = sdp.getSnapshot(\"snapshot1\").getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["4ce24aa081e44190692bbebc8aead342ad7060e8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dce99db8590cdd065839ae4e6b228b66eeee8f38","date":1367579599,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","sourceNew":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    //sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, true);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, true);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["4ce24aa081e44190692bbebc8aead342ad7060e8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ce24aa081e44190692bbebc8aead342ad7060e8","date":1374951664,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","sourceNew":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, false);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    //sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, true);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","bugFix":["8a207624ce3e468bca1819861084438d936e3b1c","dce99db8590cdd065839ae4e6b228b66eeee8f38","70790b11e79a0366b21b2cc5b82d03b6fddcef81"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","sourceNew":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, false);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), getDeletionPolicy()));\n    SnapshotDeletionPolicy sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    //sdp = (SnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, true);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd4e13d997cf4fb810398a20a299c2c5a9f6b796","date":1395594336,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","sourceNew":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, false);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, slowFileExists(dir, segFileName));\n\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, false);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, dir.fileExists(segFileName));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","sourceNew":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.shutdown();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, false);\n    writer.shutdown();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, slowFileExists(dir, segFileName));\n\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, false);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, slowFileExists(dir, segFileName));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSnapshotDeletionPolicy#testRollbackToOldSnapshot().mjava","sourceNew":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.close();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, false);\n    writer.close();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, slowFileExists(dir, segFileName));\n\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRollbackToOldSnapshot() throws Exception {\n    int numSnapshots = 2;\n    Directory dir = newDirectory();\n\n    SnapshotDeletionPolicy sdp = getDeletionPolicy();\n    IndexWriter writer = new IndexWriter(dir, getConfig(random(), sdp));\n    prepareIndexAndSnapshots(sdp, writer, numSnapshots);\n    writer.shutdown();\n\n    // now open the writer on \"snapshot0\" - make sure it succeeds\n    writer = new IndexWriter(dir, getConfig(random(), sdp).setIndexCommit(snapshots.get(0)));\n    // this does the actual rollback\n    writer.commit();\n    writer.deleteUnusedFiles();\n    assertSnapshotExists(dir, sdp, numSnapshots - 1, false);\n    writer.shutdown();\n\n    // but 'snapshot1' files will still exist (need to release snapshot before they can be deleted).\n    String segFileName = snapshots.get(1).getSegmentsFileName();\n    assertTrue(\"snapshot files should exist in the directory: \" + segFileName, slowFileExists(dir, segFileName));\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70790b11e79a0366b21b2cc5b82d03b6fddcef81":["9eae2a56dc810a17cf807d831f720dec931a03de"],"dce99db8590cdd065839ae4e6b228b66eeee8f38":["8a207624ce3e468bca1819861084438d936e3b1c"],"9eae2a56dc810a17cf807d831f720dec931a03de":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["4ce24aa081e44190692bbebc8aead342ad7060e8"],"8a207624ce3e468bca1819861084438d936e3b1c":["70790b11e79a0366b21b2cc5b82d03b6fddcef81"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ce24aa081e44190692bbebc8aead342ad7060e8":["dce99db8590cdd065839ae4e6b228b66eeee8f38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["dce99db8590cdd065839ae4e6b228b66eeee8f38"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"70790b11e79a0366b21b2cc5b82d03b6fddcef81":["8a207624ce3e468bca1819861084438d936e3b1c"],"dce99db8590cdd065839ae4e6b228b66eeee8f38":["4ce24aa081e44190692bbebc8aead342ad7060e8","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"9eae2a56dc810a17cf807d831f720dec931a03de":["70790b11e79a0366b21b2cc5b82d03b6fddcef81"],"8a207624ce3e468bca1819861084438d936e3b1c":["dce99db8590cdd065839ae4e6b228b66eeee8f38"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"4ce24aa081e44190692bbebc8aead342ad7060e8":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["9eae2a56dc810a17cf807d831f720dec931a03de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}