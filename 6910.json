{"path":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#addParamToDistributedRequestWhitelist(SolrQueryRequest,String...).mjava","commits":[{"id":"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef","date":1458928975,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#addParamToDistributedRequestWhitelist(SolrQueryRequest,String...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * By default, the {@link DistributedUpdateProcessor} is extremely conservative in the list of request \n   * params that will be copied/included when updates are forwarded to other nodes.  This method may be \n   * used by any {@link UpdateRequestProcessorFactory#getInstance} call to annotate a \n   * SolrQueryRequest with the names of parameters that should also be forwarded.\n   */\n  public static void addParamToDistributedRequestWhitelist(final SolrQueryRequest req, final String... paramNames) {\n    Set<String> whitelist = (Set<String>) req.getContext().get(DistributedUpdateProcessor.PARAM_WHITELIST_CTX_KEY);\n    if (null == whitelist) {\n      whitelist = new TreeSet<String>();\n      req.getContext().put(DistributedUpdateProcessor.PARAM_WHITELIST_CTX_KEY, whitelist);\n    }\n    for (String p : paramNames) {\n      whitelist.add(p);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"543992c52fe295c8b15aafe4b066e7e3a9a42c48","date":1510862949,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#addParamToDistributedRequestWhitelist(SolrQueryRequest,String...).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessorFactory#addParamToDistributedRequestWhitelist(SolrQueryRequest,String...).mjava","sourceNew":"  /**\n   * By default, the {@link DistributedUpdateProcessor} is extremely conservative in the list of request \n   * params that will be copied/included when updates are forwarded to other nodes.  This method may be \n   * used by any {@link UpdateRequestProcessorFactory#getInstance} call to annotate a \n   * SolrQueryRequest with the names of parameters that should also be forwarded.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static void addParamToDistributedRequestWhitelist(final SolrQueryRequest req, final String... paramNames) {\n    Set<String> whitelist = (Set<String>) req.getContext()\n        .computeIfAbsent(DistributedUpdateProcessor.PARAM_WHITELIST_CTX_KEY, key -> new TreeSet<>());\n    Collections.addAll(whitelist, paramNames);\n  }\n\n","sourceOld":"  /**\n   * By default, the {@link DistributedUpdateProcessor} is extremely conservative in the list of request \n   * params that will be copied/included when updates are forwarded to other nodes.  This method may be \n   * used by any {@link UpdateRequestProcessorFactory#getInstance} call to annotate a \n   * SolrQueryRequest with the names of parameters that should also be forwarded.\n   */\n  public static void addParamToDistributedRequestWhitelist(final SolrQueryRequest req, final String... paramNames) {\n    Set<String> whitelist = (Set<String>) req.getContext().get(DistributedUpdateProcessor.PARAM_WHITELIST_CTX_KEY);\n    if (null == whitelist) {\n      whitelist = new TreeSet<String>();\n      req.getContext().put(DistributedUpdateProcessor.PARAM_WHITELIST_CTX_KEY, whitelist);\n    }\n    for (String p : paramNames) {\n      whitelist.add(p);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"543992c52fe295c8b15aafe4b066e7e3a9a42c48":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["543992c52fe295c8b15aafe4b066e7e3a9a42c48"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["543992c52fe295c8b15aafe4b066e7e3a9a42c48"],"543992c52fe295c8b15aafe4b066e7e3a9a42c48":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}