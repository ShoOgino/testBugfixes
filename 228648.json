{"path":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadSpans#getSearcher().mjava","commits":[{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadSpans#getSearcher().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadSpans#getSearcher().mjava","sourceNew":"  private IndexSearcher getSearcher() throws Exception {\n    directory = newDirectory();\n    String[] docs = new String[]{\"xx rr yy mm  pp\",\"xx yy mm rr pp\", \"nopayload qq ss pp np\", \"one two three four five six seven eight nine ten eleven\", \"nine one two three four five six seven eight eleven ten\"};\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n                                                     newIndexWriterConfig(new PayloadAnalyzer()).setSimilarity(similarity));\n\n    Document doc = null;\n    for(int i = 0; i < docs.length; i++) {\n      doc = new Document();\n      String docText = docs[i];\n      doc.add(newTextField(PayloadHelper.FIELD, docText, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n\n    closeIndexReader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(closeIndexReader);\n    return searcher;\n  }\n\n","sourceOld":"  private IndexSearcher getSearcher() throws Exception {\n    directory = newDirectory();\n    String[] docs = new String[]{\"xx rr yy mm  pp\",\"xx yy mm rr pp\", \"nopayload qq ss pp np\", \"one two three four five six seven eight nine ten eleven\", \"nine one two three four five six seven eight eleven ten\"};\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n                                                     newIndexWriterConfig(new PayloadAnalyzer()).setSimilarity(similarity));\n\n    Document doc = null;\n    for(int i = 0; i < docs.length; i++) {\n      doc = new Document();\n      String docText = docs[i];\n      doc.add(newTextField(PayloadHelper.FIELD, docText, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n\n    closeIndexReader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(closeIndexReader);\n    return searcher;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecdeda0f97b09b83f431ef8c6e8a2ae4695270a1","date":1457861702,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadSpans#getSearcher().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadSpans#getSearcher().mjava","sourceNew":"  private IndexSearcher getSearcher() throws Exception {\n    directory = newDirectory();\n    String[] docs = new String[]{\"xx rr yy mm  pp\",\"xx yy mm rr pp\", \"nopayload qq ss pp np\", \"one two three four five six seven eight nine ten eleven\", \"nine one two three four five six seven eight eleven ten\"};\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n                                                     newIndexWriterConfig(new PayloadAnalyzer()).setSimilarity(similarity));\n\n    Document doc = null;\n    for(int i = 0; i < docs.length; i++) {\n      doc = new Document();\n      String docText = docs[i];\n      doc.add(newTextField(PayloadHelper.FIELD, docText, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n\n    closeIndexReader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(closeIndexReader, false);\n    return searcher;\n  }\n\n","sourceOld":"  private IndexSearcher getSearcher() throws Exception {\n    directory = newDirectory();\n    String[] docs = new String[]{\"xx rr yy mm  pp\",\"xx yy mm rr pp\", \"nopayload qq ss pp np\", \"one two three four five six seven eight nine ten eleven\", \"nine one two three four five six seven eight eleven ten\"};\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n                                                     newIndexWriterConfig(new PayloadAnalyzer()).setSimilarity(similarity));\n\n    Document doc = null;\n    for(int i = 0; i < docs.length; i++) {\n      doc = new Document();\n      String docText = docs[i];\n      doc.add(newTextField(PayloadHelper.FIELD, docText, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n\n    closeIndexReader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(closeIndexReader);\n    return searcher;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b6c97ad3f48ad210722eb5ccf673bb763405861","date":1457966523,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadSpans#getSearcher().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadSpans#getSearcher().mjava","sourceNew":"  private IndexSearcher getSearcher() throws Exception {\n    directory = newDirectory();\n    String[] docs = new String[]{\"xx rr yy mm  pp\",\"xx yy mm rr pp\", \"nopayload qq ss pp np\", \"one two three four five six seven eight nine ten eleven\", \"nine one two three four five six seven eight eleven ten\"};\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n                                                     newIndexWriterConfig(new PayloadAnalyzer()).setSimilarity(similarity));\n\n    Document doc = null;\n    for(int i = 0; i < docs.length; i++) {\n      doc = new Document();\n      String docText = docs[i];\n      doc.add(newTextField(PayloadHelper.FIELD, docText, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n\n    writer.forceMerge(1);\n    closeIndexReader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(closeIndexReader, false);\n    return searcher;\n  }\n\n","sourceOld":"  private IndexSearcher getSearcher() throws Exception {\n    directory = newDirectory();\n    String[] docs = new String[]{\"xx rr yy mm  pp\",\"xx yy mm rr pp\", \"nopayload qq ss pp np\", \"one two three four five six seven eight nine ten eleven\", \"nine one two three four five six seven eight eleven ten\"};\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n                                                     newIndexWriterConfig(new PayloadAnalyzer()).setSimilarity(similarity));\n\n    Document doc = null;\n    for(int i = 0; i < docs.length; i++) {\n      doc = new Document();\n      String docText = docs[i];\n      doc.add(newTextField(PayloadHelper.FIELD, docText, Field.Store.YES));\n      writer.addDocument(doc);\n    }\n\n    closeIndexReader = writer.getReader();\n    writer.close();\n\n    IndexSearcher searcher = newSearcher(closeIndexReader, false);\n    return searcher;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1b6c97ad3f48ad210722eb5ccf673bb763405861":["ecdeda0f97b09b83f431ef8c6e8a2ae4695270a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ecdeda0f97b09b83f431ef8c6e8a2ae4695270a1":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1b6c97ad3f48ad210722eb5ccf673bb763405861"]},"commit2Childs":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["ecdeda0f97b09b83f431ef8c6e8a2ae4695270a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"1b6c97ad3f48ad210722eb5ccf673bb763405861":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ecdeda0f97b09b83f431ef8c6e8a2ae4695270a1":["1b6c97ad3f48ad210722eb5ccf673bb763405861"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}