{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#equals(Object).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#equals(Object).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#equals(Object).mjava","sourceNew":"  /**\n   * Indicates whether some other object is \"equal to\" this one.\n   * \n   * @param other\n   *            the reference object with which to compare.\n   * @return true if equal, false otherwise\n   */\n  @Override\n  public boolean equals(Object other) {\n    if (this  == other) return true;\n    if (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\n    if (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\n    \n    if (other instanceof PatternAnalyzer) {\n      PatternAnalyzer p2 = (PatternAnalyzer) other;\n      return \n        toLowerCase == p2.toLowerCase &&\n        eqPattern(pattern, p2.pattern) &&\n        eq(stopWords, p2.stopWords);\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Indicates whether some other object is \"equal to\" this one.\n   * \n   * @param other\n   *            the reference object with which to compare.\n   * @return true if equal, false otherwise\n   */\n  @Override\n  public boolean equals(Object other) {\n    if (this  == other) return true;\n    if (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\n    if (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\n    \n    if (other instanceof PatternAnalyzer) {\n      PatternAnalyzer p2 = (PatternAnalyzer) other;\n      return \n        toLowerCase == p2.toLowerCase &&\n        eqPattern(pattern, p2.pattern) &&\n        eq(stopWords, p2.stopWords);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#equals(Object).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer#equals(Object).mjava","sourceNew":"  /**\n   * Indicates whether some other object is \"equal to\" this one.\n   * \n   * @param other\n   *            the reference object with which to compare.\n   * @return true if equal, false otherwise\n   */\n  @Override\n  public boolean equals(Object other) {\n    if (this  == other) return true;\n    if (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\n    if (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\n    \n    if (other instanceof PatternAnalyzer) {\n      PatternAnalyzer p2 = (PatternAnalyzer) other;\n      return \n        toLowerCase == p2.toLowerCase &&\n        eqPattern(pattern, p2.pattern) &&\n        eq(stopWords, p2.stopWords);\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Indicates whether some other object is \"equal to\" this one.\n   * \n   * @param other\n   *            the reference object with which to compare.\n   * @return true if equal, false otherwise\n   */\n  @Override\n  public boolean equals(Object other) {\n    if (this  == other) return true;\n    if (this  == DEFAULT_ANALYZER && other == EXTENDED_ANALYZER) return false;\n    if (other == DEFAULT_ANALYZER && this  == EXTENDED_ANALYZER) return false;\n    \n    if (other instanceof PatternAnalyzer) {\n      PatternAnalyzer p2 = (PatternAnalyzer) other;\n      return \n        toLowerCase == p2.toLowerCase &&\n        eqPattern(pattern, p2.pattern) &&\n        eq(stopWords, p2.stopWords);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}