{"path":"src/test/org/apache/solr/highlight/HighlighterTest#testTermVecMultiValuedHighlight2().mjava","commits":[{"id":"f3d1495bedca26db3edbddf239a3ad48f6131e21","date":1260213855,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterTest#testTermVecMultiValuedHighlight2().mjava","pathOld":"/dev/null","sourceNew":"  // Variant of testTermVecMultiValuedHighlight to make sure that\n  // more than just the first value of a multi-valued field is\n  // considered for highlighting.\n  public void testTermVecMultiValuedHighlight2() throws Exception {\n\n    // do summarization using term vectors on multivalued field\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_mv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n\n    String shortText = \"short\";\n    assertU(adoc(\"tv_mv_text\", shortText,\n                 \"tv_mv_text\", LONG_TEXT,\n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_mv_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_mv_text']/str[.='a <em>long</em> days night this should be a piece of text which']\",\n            \"//arr[@name='tv_mv_text']/str[.=' <em>long</em> fragments.']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3","date":1263013040,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterTest#testTermVecMultiValuedHighlight2().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterTest#testTermVecMultiValuedHighlight2().mjava","sourceNew":"  // Variant of testTermVecMultiValuedHighlight to make sure that\n  // more than just the first value of a multi-valued field is\n  // considered for highlighting.\n  public void testTermVecMultiValuedHighlight2() throws Exception {\n\n    // do summarization using term vectors on multivalued field\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_mv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n\n    String shortText = \"short\";\n    assertU(adoc(\"tv_mv_text\", shortText,\n                 \"tv_mv_text\", LONG_TEXT,\n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_mv_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_mv_text']/str[.='a <em>long</em> days night this should be a piece of text which']\",\n            \"//arr[@name='tv_mv_text']/str[.=' <em>long</em> fragments.']\"\n            );\n  }\n\n","sourceOld":"  // Variant of testTermVecMultiValuedHighlight to make sure that\n  // more than just the first value of a multi-valued field is\n  // considered for highlighting.\n  public void testTermVecMultiValuedHighlight2() throws Exception {\n\n    // do summarization using term vectors on multivalued field\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_mv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n\n    String shortText = \"short\";\n    assertU(adoc(\"tv_mv_text\", shortText,\n                 \"tv_mv_text\", LONG_TEXT,\n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_mv_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_mv_text']/str[.='a <em>long</em> days night this should be a piece of text which']\",\n            \"//arr[@name='tv_mv_text']/str[.=' <em>long</em> fragments.']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aef8916f4d0ccac5fe47730f8de5467a54358eb6","date":1265643975,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterTest#testTermVecMultiValuedHighlight2().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterTest#testTermVecMultiValuedHighlight2().mjava","sourceNew":"  // Variant of testTermVecMultiValuedHighlight to make sure that\n  // more than just the first value of a multi-valued field is\n  // considered for highlighting.\n  public void testTermVecMultiValuedHighlight2() throws Exception {\n\n    // do summarization using term vectors on multivalued field\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_mv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n\n    String shortText = \"short\";\n    assertU(adoc(\"tv_mv_text\", shortText,\n                 \"tv_mv_text\", LONG_TEXT,\n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_mv_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_mv_text']/str[.='a <em>long</em> days night this should be a piece of text which']\",\n            \"//arr[@name='tv_mv_text']/str[.=' <em>long</em> fragments.']\"\n            );\n  }\n\n","sourceOld":"  // Variant of testTermVecMultiValuedHighlight to make sure that\n  // more than just the first value of a multi-valued field is\n  // considered for highlighting.\n  public void testTermVecMultiValuedHighlight2() throws Exception {\n\n    // do summarization using term vectors on multivalued field\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_mv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n\n    String shortText = \"short\";\n    assertU(adoc(\"tv_mv_text\", shortText,\n                 \"tv_mv_text\", LONG_TEXT,\n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_mv_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_mv_text']/str[.='a <em>long</em> days night this should be a piece of text which']\",\n            \"//arr[@name='tv_mv_text']/str[.=' <em>long</em> fragments.']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/highlight/HighlighterTest#testTermVecMultiValuedHighlight2().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterTest#testTermVecMultiValuedHighlight2().mjava","sourceNew":"  // Variant of testTermVecMultiValuedHighlight to make sure that\n  // more than just the first value of a multi-valued field is\n  // considered for highlighting.\n  public void testTermVecMultiValuedHighlight2() throws Exception {\n\n    // do summarization using term vectors on multivalued field\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_mv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n\n    String shortText = \"short\";\n    assertU(adoc(\"tv_mv_text\", shortText,\n                 \"tv_mv_text\", LONG_TEXT,\n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_mv_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_mv_text']/str[.='a <em>long</em> days night this should be a piece of text which']\",\n            \"//arr[@name='tv_mv_text']/str[.=' <em>long</em> fragments.']\"\n            );\n  }\n\n","sourceOld":"  // Variant of testTermVecMultiValuedHighlight to make sure that\n  // more than just the first value of a multi-valued field is\n  // considered for highlighting.\n  public void testTermVecMultiValuedHighlight2() throws Exception {\n\n    // do summarization using term vectors on multivalued field\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_mv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n\n    String shortText = \"short\";\n    assertU(adoc(\"tv_mv_text\", shortText,\n                 \"tv_mv_text\", LONG_TEXT,\n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_mv_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_mv_text']/str[.='a <em>long</em> days night this should be a piece of text which']\",\n            \"//arr[@name='tv_mv_text']/str[.=' <em>long</em> fragments.']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f3d1495bedca26db3edbddf239a3ad48f6131e21":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"aef8916f4d0ccac5fe47730f8de5467a54358eb6":["5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["aef8916f4d0ccac5fe47730f8de5467a54358eb6"],"5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3":["f3d1495bedca26db3edbddf239a3ad48f6131e21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f3d1495bedca26db3edbddf239a3ad48f6131e21":["5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3"],"aef8916f4d0ccac5fe47730f8de5467a54358eb6":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f3d1495bedca26db3edbddf239a3ad48f6131e21"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"5df1793b9dbc0f17ba1d1dddb8a15748fdc3aaf3":["aef8916f4d0ccac5fe47730f8de5467a54358eb6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}