{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory(random);\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory(random);\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = new MockRAMDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(new Field(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2047784e704fe141e0ff36affac8a7cb6c7bbec","date":1295352100,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer#testLimitTokenCountIndexWriter().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testUserSpecifiedMaxFieldLength().mjava","sourceNew":null,"sourceOld":"  // LUCENE-1084: test user-specified field length\n  public void testUserSpecifiedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxFieldLength(100000));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), Field.Store.NO, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir, true);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["d572389229127c297dd1fa5ce4758e1cec41e799"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["132903c28af3aa6f67284b78de91c0f0a99488c2","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","132903c28af3aa6f67284b78de91c0f0a99488c2"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d572389229127c297dd1fa5ce4758e1cec41e799":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["c2047784e704fe141e0ff36affac8a7cb6c7bbec","29ef99d61cda9641b6250bf9567329a6e65f901d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}