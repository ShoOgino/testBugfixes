{"path":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#sort(AtomicReader,Sorter).mjava","commits":[{"id":"87ac1f6aeca005a4532bea348c9a2c416eb0b4ec","date":1363331426,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#sort(AtomicReader,Sorter).mjava","pathOld":"/dev/null","sourceNew":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sorter</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader sort(AtomicReader reader, Sorter sorter) throws IOException {\n    final Sorter.DocMap docMap = sorter.sort(reader);\n    if (docMap == null) {\n      // the reader is already sorter\n      return reader;\n    }\n    assert Sorter.isConsistent(docMap, reader.maxDoc());\n    return new SortingAtomicReader(reader, docMap);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51c8450b3b616b6777f722ff4083c0bf946381a2","date":1363812022,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#wrap(AtomicReader,Sorter).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/SortingAtomicReader#sort(AtomicReader,Sorter).mjava","sourceNew":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sorter</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader wrap(AtomicReader reader, Sorter sorter) throws IOException {\n    final Sorter.DocMap docMap = sorter.sort(reader);\n    if (docMap == null) {\n      // the reader is already sorter\n      return reader;\n    }\n    assert Sorter.isConsistent(docMap, reader.maxDoc());\n    return new SortingAtomicReader(reader, docMap);\n  }\n\n","sourceOld":"  /** Return a sorted view of <code>reader</code> according to the order\n   *  defined by <code>sorter</code>. If the reader is already sorted, this\n   *  method might return the reader as-is. */\n  public static AtomicReader sort(AtomicReader reader, Sorter sorter) throws IOException {\n    final Sorter.DocMap docMap = sorter.sort(reader);\n    if (docMap == null) {\n      // the reader is already sorter\n      return reader;\n    }\n    assert Sorter.isConsistent(docMap, reader.maxDoc());\n    return new SortingAtomicReader(reader, docMap);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87ac1f6aeca005a4532bea348c9a2c416eb0b4ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"51c8450b3b616b6777f722ff4083c0bf946381a2":["87ac1f6aeca005a4532bea348c9a2c416eb0b4ec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51c8450b3b616b6777f722ff4083c0bf946381a2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["87ac1f6aeca005a4532bea348c9a2c416eb0b4ec"],"87ac1f6aeca005a4532bea348c9a2c416eb0b4ec":["51c8450b3b616b6777f722ff4083c0bf946381a2"],"51c8450b3b616b6777f722ff4083c0bf946381a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}