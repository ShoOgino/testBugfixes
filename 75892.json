{"path":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"solr/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","sourceOld":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"solr/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","sourceOld":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"solr/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","sourceOld":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  static boolean delTree(File dir) {\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","sourceOld":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  static boolean delTree(File dir) {\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","sourceOld":"  /**\n   * Delete the directory tree recursively\n   */\n  static boolean delTree(File dir) {\n    if (dir == null || !dir.exists())\n      return false;\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  static boolean delTree(File dir) {\n    try {\n      org.apache.lucene.util.IOUtils.rm(dir);\n      return true;\n    } catch (IOException e) {\n      LOG.warn(\"Unable to delete directory : \" + dir, e);\n      return false;\n    }\n  }\n\n","sourceOld":"  static boolean delTree(File dir) {\n    boolean isSuccess = true;\n    File contents[] = dir.listFiles();\n    if (contents != null) {\n      for (File file : contents) {\n        if (file.isDirectory()) {\n          boolean success = delTree(file);\n          if (!success) {\n            LOG.warn(\"Unable to delete directory : \" + file);\n            isSuccess = false;\n          }\n        } else {\n          boolean success = file.delete();\n          if (!success) {\n            LOG.warn(\"Unable to delete file : \" + file);\n            isSuccess = false;\n            return false;\n          }\n        }\n      }\n    }\n    return isSuccess && dir.delete();\n  }\n\n","bugFix":["f4ead54bbd0d8cf4a0b5f025fbad65581b8cd349","530ebfd92bca7116555792112f655ad316104ae4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  static boolean delTree(File dir) {\n    try {\n      org.apache.lucene.util.IOUtils.rm(dir.toPath());\n      return true;\n    } catch (IOException e) {\n      LOG.warn(\"Unable to delete directory : \" + dir, e);\n      return false;\n    }\n  }\n\n","sourceOld":"  static boolean delTree(File dir) {\n    try {\n      org.apache.lucene.util.IOUtils.rm(dir);\n      return true;\n    } catch (IOException e) {\n      LOG.warn(\"Unable to delete directory : \" + dir, e);\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":5,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#delTree(File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  static boolean delTree(File dir) {\n    try {\n      org.apache.lucene.util.IOUtils.rm(dir.toPath());\n      return true;\n    } catch (IOException e) {\n      LOG.warn(\"Unable to delete directory : \" + dir, e);\n      return false;\n    }\n  }\n\n","sourceOld":"  static boolean delTree(File dir) {\n    try {\n      org.apache.lucene.util.IOUtils.rm(dir.toPath());\n      return true;\n    } catch (IOException e) {\n      LOG.warn(\"Unable to delete directory : \" + dir, e);\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":5,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#delTree(File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#delTree(File).mjava","sourceNew":"  static boolean delTree(File dir) {\n    try {\n      org.apache.lucene.util.IOUtils.rm(dir.toPath());\n      return true;\n    } catch (IOException e) {\n      LOG.warn(\"Unable to delete directory : \" + dir, e);\n      return false;\n    }\n  }\n\n","sourceOld":"  static boolean delTree(File dir) {\n    try {\n      org.apache.lucene.util.IOUtils.rm(dir.toPath());\n      return true;\n    } catch (IOException e) {\n      LOG.warn(\"Unable to delete directory : \" + dir, e);\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["f4abec28b874149a7223e32cc7a01704c27790de","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["f4abec28b874149a7223e32cc7a01704c27790de"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["c26f00b574427b55127e869b935845554afde1fa"],"f2126b84bd093fa3d921582a109a0ee578c28126":["c26f00b574427b55127e869b935845554afde1fa","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20f6b7cff3771384f27af0f059795d7e64aff6b9"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["cbc3688252d4a8045d69a164236b2cf87b721f17","f2126b84bd093fa3d921582a109a0ee578c28126"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"f4abec28b874149a7223e32cc7a01704c27790de":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}