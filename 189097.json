{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(Iterator[SampleData]).mjava","commits":[{"id":"400d04533c3afc7d3982c21c14debd6a99853c3a","date":1353963333,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(Iterator[SampleData]).mjava","pathOld":"/dev/null","sourceNew":"  protected List<Document> getDocuments(Iterator<SampleData> sampleData) {\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)\n          document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(Iterator[SampleData]).mjava","pathOld":"/dev/null","sourceNew":"  protected List<Document> getDocuments(Iterator<SampleData> sampleData) {\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)\n          document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003","date":1390592414,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(Iterator[SpatialTestData]).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(Iterator[SampleData]).mjava","sourceNew":"  protected List<Document> getDocuments(Iterator<SpatialTestData> sampleData) {\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SpatialTestData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = data.shape;\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)//just for diagnostics\n          document.add(new StoredField(strategy.getFieldName(), shape.toString()));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(Iterator<SampleData> sampleData) {\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)\n          document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"400d04533c3afc7d3982c21c14debd6a99853c3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["400d04533c3afc7d3982c21c14debd6a99853c3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","400d04533c3afc7d3982c21c14debd6a99853c3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"]},"commit2Childs":{"400d04533c3afc7d3982c21c14debd6a99853c3a":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["400d04533c3afc7d3982c21c14debd6a99853c3a","407687e67faf6e1f02a211ca078d8e3eed631027"],"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}