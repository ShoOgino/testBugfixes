{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#incrementToken().mjava","commits":[{"id":"9b5756469957918cac40a831acec9cf01c8c2bb3","date":1249167152,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  public final boolean incrementToken() throws IOException {\n    if (tokens.size() > 0) {\n      setToken((Token)tokens.removeFirst());\n      return true;\n    }\n\n    if (input.incrementToken() == false)\n      return false;\n    \n    wrapper.setTermBuffer(termAtt.termBuffer(), 0, termAtt.termLength());\n    wrapper.setStartOffset(offsetAtt.startOffset());\n    wrapper.setEndOffset(offsetAtt.endOffset());\n    wrapper.setFlags(flagsAtt.getFlags());\n    wrapper.setType(typeAtt.type());\n    wrapper.setPositionIncrement(posIncAtt.getPositionIncrement());\n    wrapper.setPayload(payloadAtt.getPayload());\n    \n    decompose(wrapper);\n\n    if (tokens.size() > 0) {\n      setToken((Token)tokens.removeFirst());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e15bea9339982eec538668b67ae252b28e0003e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (tokens.size() > 0) {\n      setToken((Token)tokens.removeFirst());\n      return true;\n    }\n\n    if (input.incrementToken() == false)\n      return false;\n    \n    wrapper.setTermBuffer(termAtt.termBuffer(), 0, termAtt.termLength());\n    wrapper.setStartOffset(offsetAtt.startOffset());\n    wrapper.setEndOffset(offsetAtt.endOffset());\n    wrapper.setFlags(flagsAtt.getFlags());\n    wrapper.setType(typeAtt.type());\n    wrapper.setPositionIncrement(posIncAtt.getPositionIncrement());\n    wrapper.setPayload(payloadAtt.getPayload());\n    \n    decompose(wrapper);\n\n    if (tokens.size() > 0) {\n      setToken((Token)tokens.removeFirst());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  public final boolean incrementToken() throws IOException {\n    if (tokens.size() > 0) {\n      setToken((Token)tokens.removeFirst());\n      return true;\n    }\n\n    if (input.incrementToken() == false)\n      return false;\n    \n    wrapper.setTermBuffer(termAtt.termBuffer(), 0, termAtt.termLength());\n    wrapper.setStartOffset(offsetAtt.startOffset());\n    wrapper.setEndOffset(offsetAtt.endOffset());\n    wrapper.setFlags(flagsAtt.getFlags());\n    wrapper.setType(typeAtt.type());\n    wrapper.setPositionIncrement(posIncAtt.getPositionIncrement());\n    wrapper.setPayload(payloadAtt.getPayload());\n    \n    decompose(wrapper);\n\n    if (tokens.size() > 0) {\n      setToken((Token)tokens.removeFirst());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (tokens.size() > 0) {\n      setToken(tokens.removeFirst());\n      return true;\n    }\n\n    if (!input.incrementToken())\n      return false;\n    \n    wrapper.setTermBuffer(termAtt.termBuffer(), 0, termAtt.termLength());\n    wrapper.setStartOffset(offsetAtt.startOffset());\n    wrapper.setEndOffset(offsetAtt.endOffset());\n    wrapper.setFlags(flagsAtt.getFlags());\n    wrapper.setType(typeAtt.type());\n    wrapper.setPositionIncrement(posIncAtt.getPositionIncrement());\n    wrapper.setPayload(payloadAtt.getPayload());\n    \n    decompose(wrapper);\n\n    if (tokens.size() > 0) {\n      setToken(tokens.removeFirst());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (tokens.size() > 0) {\n      setToken((Token)tokens.removeFirst());\n      return true;\n    }\n\n    if (input.incrementToken() == false)\n      return false;\n    \n    wrapper.setTermBuffer(termAtt.termBuffer(), 0, termAtt.termLength());\n    wrapper.setStartOffset(offsetAtt.startOffset());\n    wrapper.setEndOffset(offsetAtt.endOffset());\n    wrapper.setFlags(flagsAtt.getFlags());\n    wrapper.setType(typeAtt.type());\n    wrapper.setPositionIncrement(posIncAtt.getPositionIncrement());\n    wrapper.setPayload(payloadAtt.getPayload());\n    \n    decompose(wrapper);\n\n    if (tokens.size() > 0) {\n      setToken((Token)tokens.removeFirst());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":["1e15bea9339982eec538668b67ae252b28e0003e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#incrementToken().mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (tokens.size() > 0) {\n      setToken(tokens.removeFirst());\n      return true;\n    }\n\n    if (!input.incrementToken())\n      return false;\n    \n    wrapper.setTermBuffer(termAtt.termBuffer(), 0, termAtt.termLength());\n    wrapper.setStartOffset(offsetAtt.startOffset());\n    wrapper.setEndOffset(offsetAtt.endOffset());\n    wrapper.setFlags(flagsAtt.getFlags());\n    wrapper.setType(typeAtt.type());\n    wrapper.setPositionIncrement(posIncAtt.getPositionIncrement());\n    wrapper.setPayload(payloadAtt.getPayload());\n    \n    decompose(wrapper);\n\n    if (tokens.size() > 0) {\n      setToken(tokens.removeFirst());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (tokens.size() > 0) {\n      setToken(tokens.removeFirst());\n      return true;\n    }\n\n    if (!input.incrementToken())\n      return false;\n    \n    wrapper.setTermBuffer(termAtt.termBuffer(), 0, termAtt.termLength());\n    wrapper.setStartOffset(offsetAtt.startOffset());\n    wrapper.setEndOffset(offsetAtt.endOffset());\n    wrapper.setFlags(flagsAtt.getFlags());\n    wrapper.setType(typeAtt.type());\n    wrapper.setPositionIncrement(posIncAtt.getPositionIncrement());\n    wrapper.setPayload(payloadAtt.getPayload());\n    \n    decompose(wrapper);\n\n    if (tokens.size() > 0) {\n      setToken(tokens.removeFirst());\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b5756469957918cac40a831acec9cf01c8c2bb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}