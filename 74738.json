{"path":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","commits":[{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","pathOld":"/dev/null","sourceNew":"//  @Repeat(iterations=10)\n  public void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        fail(\"Shouldn't be able to query the pull replica\");\n      } catch (SolrServerException e) {\n        //expected\n      }\n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","pathOld":"/dev/null","sourceNew":"//  @Repeat(iterations=10)\n  public void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        fail(\"Shouldn't be able to query the pull replica\");\n      } catch (SolrServerException e) {\n        //expected\n      }\n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","sourceNew":"//  @Repeat(iterations=10)\n  public void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        fail(\"Shouldn't be able to query the pull replica\");\n      } catch (SolrServerException e) {\n        //expected\n      }\n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","sourceOld":"//  @Repeat(iterations=10)\n  public void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        fail(\"Shouldn't be able to query the pull replica\");\n      } catch (SolrServerException e) {\n        //expected\n      }\n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15600ceffc7023bfa1f532afbf1854e7f8c4e6d3","date":1532119025,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","sourceNew":"//  @Repeat(iterations=10)\n@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Jul-2018\npublic void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        fail(\"Shouldn't be able to query the pull replica\");\n      } catch (SolrServerException e) {\n        //expected\n      }\n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","sourceOld":"//  @Repeat(iterations=10)\n  public void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        fail(\"Shouldn't be able to query the pull replica\");\n      } catch (SolrServerException e) {\n        //expected\n      }\n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92f789dbd1886e4b468e61b0def88b29a3f55228","date":1533844010,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","sourceNew":"//  @Repeat(iterations=10)\n@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Jul-2018\npublic void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n\n      SolrServerException e = expectThrows(SolrServerException.class, () -> {\n        try(HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n          pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      });\n      \n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","sourceOld":"//  @Repeat(iterations=10)\n@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Jul-2018\npublic void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n      try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n        pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        fail(\"Shouldn't be able to query the pull replica\");\n      } catch (SolrServerException e) {\n        //expected\n      }\n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2d6b868457b26b5a2145b8441b1cfcfc0692b02","date":1534307099,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","sourceNew":"//  @Repeat(iterations=10)\n//commented 9-Aug-2018  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Jul-2018\npublic void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n\n      SolrServerException e = expectThrows(SolrServerException.class, () -> {\n        try(HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n          pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      });\n      \n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","sourceOld":"//  @Repeat(iterations=10)\n@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Jul-2018\npublic void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n\n      SolrServerException e = expectThrows(SolrServerException.class, () -> {\n        try(HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n          pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      });\n      \n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","sourceNew":"//  @Repeat(iterations=10)\n//commented 9-Aug-2018  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Jul-2018\npublic void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(collectionName, numShards, numShards * 2);\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n\n      SolrServerException e = expectThrows(SolrServerException.class, () -> {\n        try(HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n          pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      });\n      \n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","sourceOld":"//  @Repeat(iterations=10)\n//commented 9-Aug-2018  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Jul-2018\npublic void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n\n      SolrServerException e = expectThrows(SolrServerException.class, () -> {\n        try(HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n          pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      });\n      \n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestPullReplicaErrorHandling#testCantConnectToPullReplica().mjava","sourceNew":"//  @Repeat(iterations=10)\n//commented 9-Aug-2018  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Jul-2018\npublic void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(collectionName, numShards, numShards * 2);\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n\n      SolrServerException e = expectThrows(SolrServerException.class, () -> {\n        try(HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n          pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      });\n      \n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","sourceOld":"//  @Repeat(iterations=10)\n//commented 9-Aug-2018  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Jul-2018\npublic void testCantConnectToPullReplica() throws Exception {\n    int numShards = 2;\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", numShards, 1, 0, 1)\n      .setMaxShardsPerNode(1)\n      .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(collectionName, numShards, numShards * 2);\n    addDocs(10);\n    DocCollection docCollection = assertNumberOfReplicas(numShards, 0, numShards, false, true);\n    Slice s = docCollection.getSlices().iterator().next();\n    SocketProxy proxy = getProxyForReplica(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0));\n    try {\n      proxy.close();\n      for (int i = 1; i <= 10; i ++) {\n        addDocs(10 + i);\n        try (HttpSolrClient leaderClient = getHttpSolrClient(s.getLeader().getCoreUrl())) {\n          assertNumDocs(10 + i, leaderClient);\n        }\n      }\n\n      SolrServerException e = expectThrows(SolrServerException.class, () -> {\n        try(HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n          pullReplicaClient.query(new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      });\n      \n      assertNumberOfReplicas(numShards, 0, numShards, true, true);// Replica should still be active, since it doesn't disconnect from ZooKeeper\n      {\n        long numFound = 0;\n        TimeOut t = new TimeOut(REPLICATION_TIMEOUT_SECS, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n        while (numFound < 20 && !t.hasTimedOut()) {\n          Thread.sleep(200);\n          numFound = cluster.getSolrClient().query(collectionName, new SolrQuery(\"*:*\")).getResults().getNumFound();\n        }\n      }\n    } finally {\n      proxy.reopen();\n    }\n    \n    try (HttpSolrClient pullReplicaClient = getHttpSolrClient(s.getReplicas(EnumSet.of(Replica.Type.PULL)).get(0).getCoreUrl())) {\n      assertNumDocs(20, pullReplicaClient);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2d6b868457b26b5a2145b8441b1cfcfc0692b02":["92f789dbd1886e4b468e61b0def88b29a3f55228"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","61c45e99cf6676da48f19d7511c73712ad39402b"],"61c45e99cf6676da48f19d7511c73712ad39402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["d2d6b868457b26b5a2145b8441b1cfcfc0692b02"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92f789dbd1886e4b468e61b0def88b29a3f55228":["15600ceffc7023bfa1f532afbf1854e7f8c4e6d3"],"15600ceffc7023bfa1f532afbf1854e7f8c4e6d3":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["61c45e99cf6676da48f19d7511c73712ad39402b"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"]},"commit2Childs":{"d2d6b868457b26b5a2145b8441b1cfcfc0692b02":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"61c45e99cf6676da48f19d7511c73712ad39402b":["e9017cf144952056066919f1ebc7897ff9bd71b1","1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b"],"92f789dbd1886e4b468e61b0def88b29a3f55228":["d2d6b868457b26b5a2145b8441b1cfcfc0692b02"],"15600ceffc7023bfa1f532afbf1854e7f8c4e6d3":["92f789dbd1886e4b468e61b0def88b29a3f55228"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["15600ceffc7023bfa1f532afbf1854e7f8c4e6d3"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}