{"path":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":"  String getAnalyzedQuery( String query ) throws IOException\n  {\n    if( analyzer == null ) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.reusableTokenStream( \"\", new StringReader( query ) );\n    tokens.reset();\n    \n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while( tokens.incrementToken() ) {\n      norm.append( termAtt.buffer(), 0, termAtt.length() );\n    }\n    return norm.toString();\n  }\n\n","sourceOld":"  String getAnalyzedQuery( String query ) throws IOException\n  {\n    if( analyzer == null ) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.reusableTokenStream( \"\", new StringReader( query ) );\n    tokens.reset();\n    \n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while( tokens.incrementToken() ) {\n      norm.append( termAtt.buffer(), 0, termAtt.length() );\n    }\n    return norm.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":"  String getAnalyzedQuery( String query ) throws IOException\n  {\n    if( analyzer == null ) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.reusableTokenStream( \"\", new StringReader( query ) );\n    tokens.reset();\n    \n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while( tokens.incrementToken() ) {\n      norm.append( termAtt.buffer(), 0, termAtt.length() );\n    }\n    return norm.toString();\n  }\n\n","sourceOld":"  String getAnalyzedQuery( String query ) throws IOException\n  {\n    if( analyzer == null ) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.reusableTokenStream( \"\", new StringReader( query ) );\n    tokens.reset();\n    \n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while( tokens.incrementToken() ) {\n      norm.append( termAtt.buffer(), 0, termAtt.length() );\n    }\n    return norm.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":"  String getAnalyzedQuery( String query ) throws IOException\n  {\n    if( analyzer == null ) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.reusableTokenStream( \"\", new StringReader( query ) );\n    tokens.reset();\n    \n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while( tokens.incrementToken() ) {\n      norm.append( termAtt.buffer(), 0, termAtt.length() );\n    }\n    return norm.toString();\n  }\n\n","sourceOld":"  String getAnalyzedQuery( String query ) throws IOException\n  {\n    if( analyzer == null ) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.reusableTokenStream( \"\", new StringReader( query ) );\n    tokens.reset();\n    \n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while( tokens.incrementToken() ) {\n      norm.append( termAtt.buffer(), 0, termAtt.length() );\n    }\n    return norm.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77d924c3b8deab5881ed0d996d597a4ea5bbc40a","date":1316977817,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":"  String getAnalyzedQuery( String query ) throws IOException\n  {\n    if( analyzer == null ) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.reusableTokenStream( \"\", new StringReader( query ) );\n    tokens.reset();\n    \n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while( tokens.incrementToken() ) {\n      norm.append( termAtt.buffer(), 0, termAtt.length() );\n    }\n    tokens.end();\n    tokens.close();\n    return norm.toString();\n  }\n\n","sourceOld":"  String getAnalyzedQuery( String query ) throws IOException\n  {\n    if( analyzer == null ) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.reusableTokenStream( \"\", new StringReader( query ) );\n    tokens.reset();\n    \n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while( tokens.incrementToken() ) {\n      norm.append( termAtt.buffer(), 0, termAtt.length() );\n    }\n    return norm.toString();\n  }\n\n","bugFix":null,"bugIntro":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"69e043c521d4e8db770cc140c63f5ef51f03426a","date":1317187614,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":"  String getAnalyzedQuery( String query ) throws IOException\n  {\n    if( analyzer == null ) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.tokenStream(\"\", new StringReader(query));\n    tokens.reset();\n    \n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while( tokens.incrementToken() ) {\n      norm.append( termAtt.buffer(), 0, termAtt.length() );\n    }\n    tokens.end();\n    tokens.close();\n    return norm.toString();\n  }\n\n","sourceOld":"  String getAnalyzedQuery( String query ) throws IOException\n  {\n    if( analyzer == null ) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.reusableTokenStream( \"\", new StringReader( query ) );\n    tokens.reset();\n    \n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while( tokens.incrementToken() ) {\n      norm.append( termAtt.buffer(), 0, termAtt.length() );\n    }\n    tokens.end();\n    tokens.close();\n    return norm.toString();\n  }\n\n","bugFix":null,"bugIntro":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1d0561cea94adff1867218e77bb763c7583be279","date":1324334341,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":"  String getAnalyzedQuery(String query) throws IOException {\n    if (analyzer == null) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.tokenStream(\"\", new StringReader(query));\n    tokens.reset();\n\n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while (tokens.incrementToken()) {\n      norm.append(termAtt.buffer(), 0, termAtt.length());\n    }\n    tokens.end();\n    tokens.close();\n    return norm.toString();\n  }\n\n","sourceOld":"  String getAnalyzedQuery( String query ) throws IOException\n  {\n    if( analyzer == null ) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.tokenStream(\"\", new StringReader(query));\n    tokens.reset();\n    \n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while( tokens.incrementToken() ) {\n      norm.append( termAtt.buffer(), 0, termAtt.length() );\n    }\n    tokens.end();\n    tokens.close();\n    return norm.toString();\n  }\n\n","bugFix":null,"bugIntro":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c83d6c4335f31cae14f625a222bc842f20073dcd","date":1373306148,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":"  String getAnalyzedQuery(String query) throws IOException {\n    if (analyzer == null) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.tokenStream(\"\", query);\n    tokens.reset();\n\n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while (tokens.incrementToken()) {\n      norm.append(termAtt.buffer(), 0, termAtt.length());\n    }\n    tokens.end();\n    tokens.close();\n    return norm.toString();\n  }\n\n","sourceOld":"  String getAnalyzedQuery(String query) throws IOException {\n    if (analyzer == null) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.tokenStream(\"\", new StringReader(query));\n    tokens.reset();\n\n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while (tokens.incrementToken()) {\n      norm.append(termAtt.buffer(), 0, termAtt.length());\n    }\n    tokens.end();\n    tokens.close();\n    return norm.toString();\n  }\n\n","bugFix":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"bugIntro":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":"  String getAnalyzedQuery(String query) throws IOException {\n    if (analyzer == null) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.tokenStream(\"\", query);\n    tokens.reset();\n\n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while (tokens.incrementToken()) {\n      norm.append(termAtt.buffer(), 0, termAtt.length());\n    }\n    tokens.end();\n    tokens.close();\n    return norm.toString();\n  }\n\n","sourceOld":"  String getAnalyzedQuery(String query) throws IOException {\n    if (analyzer == null) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.tokenStream(\"\", new StringReader(query));\n    tokens.reset();\n\n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while (tokens.incrementToken()) {\n      norm.append(termAtt.buffer(), 0, termAtt.length());\n    }\n    tokens.end();\n    tokens.close();\n    return norm.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"782ed6a4b4ba50ec19734fc8db4e570ee193d627","date":1381127065,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":"  String getAnalyzedQuery(String query) throws IOException {\n    if (analyzer == null) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    try (TokenStream tokens = analyzer.tokenStream(\"\", query)) {\n      tokens.reset();\n\n      CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n      while (tokens.incrementToken()) {\n        norm.append(termAtt.buffer(), 0, termAtt.length());\n      }\n      tokens.end();\n      return norm.toString();\n    }\n  }\n\n","sourceOld":"  String getAnalyzedQuery(String query) throws IOException {\n    if (analyzer == null) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    TokenStream tokens = analyzer.tokenStream(\"\", query);\n    tokens.reset();\n\n    CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n    while (tokens.incrementToken()) {\n      norm.append(termAtt.buffer(), 0, termAtt.length());\n    }\n    tokens.end();\n    tokens.close();\n    return norm.toString();\n  }\n\n","bugFix":["5391288921372c32bf6096df320497ad2d05757f","77d924c3b8deab5881ed0d996d597a4ea5bbc40a","be29e0e2cef1fd569147732e48caf8538790339b","1d0561cea94adff1867218e77bb763c7583be279","d085fb336a7208eea2214e5ffcc803960819b60b","c83d6c4335f31cae14f625a222bc842f20073dcd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ad458affd82a1d762eb506003907d9363a333cb","date":1528558344,"type":5,"author":"broustant","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#analyzeQuery(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":"  /**\n   * Analyzes the provided query string and returns a space concatenation of the analyzed tokens.\n   */\n  public String analyzeQuery(String query) {\n    //split query terms with analyzer then join\n    StringBuilder norm = new StringBuilder();\n    try (TokenStream tokens = queryAnalyzer.tokenStream(\"\", query)) {\n      tokens.reset();\n      CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n      while (tokens.incrementToken()) {\n        norm.append(termAtt);\n      }\n      tokens.end();\n    } catch (IOException e) {\n      Throwables.propagate(e);\n    }\n    return norm.toString();\n  }\n\n","sourceOld":"  String getAnalyzedQuery(String query) throws IOException {\n    if (analyzer == null) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    try (TokenStream tokens = analyzer.tokenStream(\"\", query)) {\n      tokens.reset();\n\n      CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n      while (tokens.incrementToken()) {\n        norm.append(termAtt.buffer(), 0, termAtt.length());\n      }\n      tokens.end();\n      return norm.toString();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":null,"sourceOld":"  String getAnalyzedQuery(String query) throws IOException {\n    if (analyzer == null) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    try (TokenStream tokens = analyzer.tokenStream(\"\", query)) {\n      tokens.reset();\n\n      CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n      while (tokens.incrementToken()) {\n        norm.append(termAtt.buffer(), 0, termAtt.length());\n      }\n      tokens.end();\n      return norm.toString();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent#getAnalyzedQuery(String).mjava","sourceNew":null,"sourceOld":"  String getAnalyzedQuery(String query) throws IOException {\n    if (analyzer == null) {\n      return query;\n    }\n    StringBuilder norm = new StringBuilder();\n    try (TokenStream tokens = analyzer.tokenStream(\"\", query)) {\n      tokens.reset();\n\n      CharTermAttribute termAtt = tokens.addAttribute(CharTermAttribute.class);\n      while (tokens.incrementToken()) {\n        norm.append(termAtt.buffer(), 0, termAtt.length());\n      }\n      tokens.end();\n      return norm.toString();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["1d0561cea94adff1867218e77bb763c7583be279","c83d6c4335f31cae14f625a222bc842f20073dcd"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"77d924c3b8deab5881ed0d996d597a4ea5bbc40a":["c26f00b574427b55127e869b935845554afde1fa"],"782ed6a4b4ba50ec19734fc8db4e570ee193d627":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"1d0561cea94adff1867218e77bb763c7583be279":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["782ed6a4b4ba50ec19734fc8db4e570ee193d627","2ad458affd82a1d762eb506003907d9363a333cb"],"c83d6c4335f31cae14f625a222bc842f20073dcd":["1d0561cea94adff1867218e77bb763c7583be279"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ad458affd82a1d762eb506003907d9363a333cb":["782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"69e043c521d4e8db770cc140c63f5ef51f03426a":["77d924c3b8deab5881ed0d996d597a4ea5bbc40a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ad458affd82a1d762eb506003907d9363a333cb"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["782ed6a4b4ba50ec19734fc8db4e570ee193d627","2ad458affd82a1d762eb506003907d9363a333cb"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c26f00b574427b55127e869b935845554afde1fa":["77d924c3b8deab5881ed0d996d597a4ea5bbc40a"],"77d924c3b8deab5881ed0d996d597a4ea5bbc40a":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"1d0561cea94adff1867218e77bb763c7583be279":["37a0f60745e53927c4c876cfe5b5a58170f0646c","c83d6c4335f31cae14f625a222bc842f20073dcd"],"782ed6a4b4ba50ec19734fc8db4e570ee193d627":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","2ad458affd82a1d762eb506003907d9363a333cb","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"c83d6c4335f31cae14f625a222bc842f20073dcd":["37a0f60745e53927c4c876cfe5b5a58170f0646c","782ed6a4b4ba50ec19734fc8db4e570ee193d627"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"2ad458affd82a1d762eb506003907d9363a333cb":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"69e043c521d4e8db770cc140c63f5ef51f03426a":["1d0561cea94adff1867218e77bb763c7583be279"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}