{"path":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newStaticRandom(Class[#-extends-LuceneTestCase],long).mjava","commits":[{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newStaticRandom(Class[#-extends-LuceneTestCase],long).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#newStaticRandom(Class[#-extends-LuceneTestCaseJ4],long).mjava","sourceNew":"  /**\n   * Returns a {@link Random} instance for generating random numbers from a beforeclass\n   * annotated method.\n   * If an error occurs in the test that is not reproducible, you can use this method to\n   * initialize the number generator with the seed that was printed out during the failing test.\n   */\n  public static Random newStaticRandom(Class<? extends LuceneTestCase> clazz, long seed) {\n    staticSeeds.put(clazz, Long.valueOf(seed));\n    System.out.println(\"WARNING: random static seed of testclass '\" + clazz + \"' is fixed to: \" + seed);\n    return new Random(seed);\n  }\n\n","sourceOld":"  /**\n   * Returns a {@link Random} instance for generating random numbers from a beforeclass\n   * annotated method.\n   * If an error occurs in the test that is not reproducible, you can use this method to\n   * initialize the number generator with the seed that was printed out during the failing test.\n   */\n  public static Random newStaticRandom(Class<? extends LuceneTestCaseJ4> clazz, long seed) {\n    staticSeeds.put(clazz, Long.valueOf(seed));\n    System.out.println(\"WARNING: random static seed of testclass '\" + clazz + \"' is fixed to: \" + seed);\n    return new Random(seed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f9dba8ffba48fba97d7a90fd45f6da87ba55736","date":1285244347,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newStaticRandom(Class[#-extends-LuceneTestCase],long).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a {@link Random} instance for generating random numbers from a beforeclass\n   * annotated method.\n   * If an error occurs in the test that is not reproducible, you can use this method to\n   * initialize the number generator with the seed that was printed out during the failing test.\n   */\n  public static Random newStaticRandom(Class<? extends LuceneTestCase> clazz, long seed) {\n    staticSeeds.put(clazz, Long.valueOf(seed));\n    System.out.println(\"WARNING: random static seed of testclass '\" + clazz + \"' is fixed to: \" + seed);\n    return new Random(seed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43b04c27924fe393e38e9f0986e32c634f261859"],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43b04c27924fe393e38e9f0986e32c634f261859":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}