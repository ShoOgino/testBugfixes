{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(Scorer,boolean,boolean,Collector,SubScorer).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(Scorer,boolean,boolean,Collector,SubScorer).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(Scorer,boolean,boolean,Collector,SubScorer).mjava","sourceNew":"    public SubScorer(Scorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next)\n      throws IOException {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","sourceOld":"    public SubScorer(Scorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next)\n      throws IOException {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(Scorer,boolean,boolean,Collector,SubScorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(Scorer,boolean,boolean,Collector,SubScorer).mjava","sourceNew":"    public SubScorer(Scorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next) {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","sourceOld":"    public SubScorer(Scorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next)\n      throws IOException {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","bugFix":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(Scorer,boolean,boolean,Collector,SubScorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(Scorer,boolean,boolean,Collector,SubScorer).mjava","sourceNew":"    public SubScorer(Scorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next) {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","sourceOld":"    public SubScorer(Scorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next)\n      throws IOException {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(TopScorer,boolean,boolean,Collector,SubScorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(Scorer,boolean,boolean,Collector,SubScorer).mjava","sourceNew":"    public SubScorer(TopScorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next) {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      this.more = true;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","sourceOld":"    public SubScorer(Scorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next) {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(BulkScorer,boolean,boolean,Collector,SubScorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer.SubScorer#SubScorer(Scorer,boolean,boolean,Collector,SubScorer).mjava","sourceNew":"    public SubScorer(BulkScorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next) {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      this.more = true;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","sourceOld":"    public SubScorer(Scorer scorer, boolean required, boolean prohibited,\n        Collector collector, SubScorer next) {\n      if (required) {\n        throw new IllegalArgumentException(\"this scorer cannot handle required=true\");\n      }\n      this.scorer = scorer;\n      // TODO: re-enable this if BQ ever sends us required clauses\n      //this.required = required;\n      this.prohibited = prohibited;\n      this.collector = collector;\n      this.next = next;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acf00221f44c5f08ccea014f2492b53af15ecd66"]},"commit2Childs":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","fe33227f6805edab2036cbb80645cc4e2d1fa424","acf00221f44c5f08ccea014f2492b53af15ecd66"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}