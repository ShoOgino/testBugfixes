{"path":"lucene/core/src/java/org/apache/lucene/analysis/NumericTokenStream#incrementToken().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/NumericTokenStream#incrementToken().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (valSize == 0)\n      throw new IllegalStateException(\"call set???Value() before usage\");\n    \n    // this will only clear all other attributes in this TokenStream\n    clearAttributes();\n\n    final int shift = numericAtt.incShift();\n    typeAtt.setType((shift == 0) ? TOKEN_TYPE_FULL_PREC : TOKEN_TYPE_LOWER_PREC);\n    posIncrAtt.setPositionIncrement((shift == 0) ? 1 : 0);\n    return (shift < valSize);\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (valSize == 0)\n      throw new IllegalStateException(\"call set???Value() before usage\");\n    \n    // this will only clear all other attributes in this TokenStream\n    clearAttributes();\n\n    final int shift = numericAtt.incShift();\n    typeAtt.setType((shift == 0) ? TOKEN_TYPE_FULL_PREC : TOKEN_TYPE_LOWER_PREC);\n    posIncrAtt.setPositionIncrement((shift == 0) ? 1 : 0);\n    return (shift < valSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/LegacyNumericTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/NumericTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (valSize == 0)\n      throw new IllegalStateException(\"call set???Value() before usage\");\n    \n    // this will only clear all other attributes in this TokenStream\n    clearAttributes();\n\n    final int shift = numericAtt.incShift();\n    typeAtt.setType((shift == 0) ? TOKEN_TYPE_FULL_PREC : TOKEN_TYPE_LOWER_PREC);\n    posIncrAtt.setPositionIncrement((shift == 0) ? 1 : 0);\n    return (shift < valSize);\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (valSize == 0)\n      throw new IllegalStateException(\"call set???Value() before usage\");\n    \n    // this will only clear all other attributes in this TokenStream\n    clearAttributes();\n\n    final int shift = numericAtt.incShift();\n    typeAtt.setType((shift == 0) ? TOKEN_TYPE_FULL_PREC : TOKEN_TYPE_LOWER_PREC);\n    posIncrAtt.setPositionIncrement((shift == 0) ? 1 : 0);\n    return (shift < valSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"770342641f7b505eaa8dccdc666158bff2419109":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["770342641f7b505eaa8dccdc666158bff2419109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"770342641f7b505eaa8dccdc666158bff2419109":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}