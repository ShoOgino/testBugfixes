{"path":"solr/core/src/java/org/apache/solr/util/hll/ISchemaVersion#getSerializer(HLLType,int,int).mjava","commits":[{"id":"6d8714f9ceaaff94f0968d1c2d037978c3fde569","date":1437042727,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/ISchemaVersion#getSerializer(HLLType,int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Builds an HLL serializer that matches this schema version.\n     *\n     * @param  type the HLL type that will be serialized. This cannot be\n     *         <code>null</code>.\n     * @param  wordLength the length of the 'words' that comprise the data of the\n     *         HLL. Words must be at least 5 bits and at most 64 bits long.\n     * @param  wordCount the number of 'words' in the HLL's data.\n     * @return a byte array serializer used to serialize a HLL according\n     *         to this schema version's specification.\n     * @see #paddingBytes(HLLType)\n     * @see IWordSerializer\n     */\n    IWordSerializer getSerializer(HLLType type, int wordLength, int wordCount);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5ee4c66244bdfcc4796a114519d47701b2c026","date":1437132013,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/ISchemaVersion#getSerializer(HLLType,int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Builds an HLL serializer that matches this schema version.\n     *\n     * @param  type the HLL type that will be serialized. This cannot be\n     *         <code>null</code>.\n     * @param  wordLength the length of the 'words' that comprise the data of the\n     *         HLL. Words must be at least 5 bits and at most 64 bits long.\n     * @param  wordCount the number of 'words' in the HLL's data.\n     * @return a byte array serializer used to serialize a HLL according\n     *         to this schema version's specification.\n     * @see #paddingBytes(HLLType)\n     * @see IWordSerializer\n     */\n    IWordSerializer getSerializer(HLLType type, int wordLength, int wordCount);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b5ee4c66244bdfcc4796a114519d47701b2c026"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b5ee4c66244bdfcc4796a114519d47701b2c026","6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}