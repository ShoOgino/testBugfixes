{"path":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseAnalyzer#testDecomposition().mjava","commits":[{"id":"98d45c1ff2c99694b6de2201175f9b8b8b27b597","date":1332757908,"type":1,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseAnalyzer#testDecomposition().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer#testDecomposition().mjava","sourceNew":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n\n    final Analyzer a = new JapaneseAnalyzer(TEST_VERSION_CURRENT, null, Mode.SEARCH,\n                                            JapaneseAnalyzer.getDefaultStopSet(),\n                                            JapaneseAnalyzer.getDefaultStopTags());\n\n    // Senior software engineer:\n    assertAnalyzesToPositions(a, \"シニアソフトウェアエンジニア\",\n                              new String[] { \"シニア\",\n                                             \"シニアソフトウェアエンジニア\", // zero pos inc\n                                             \"ソフトウェア\",\n                                             \"エンジニア\" },\n                              new int[] { 1, 0, 1, 1},\n                              new int[] { 1, 3, 1, 1}\n                              );\n\n    // Senior project manager: also tests katakana spelling variation stemming\n    assertAnalyzesToPositions(a, \"シニアプロジェクトマネージャー\",\n                              new String[] { \"シニア\",\n                                              \"シニアプロジェクトマネージャ\", // trailing ー removed by stemming, zero pos inc\n                                              \"プロジェクト\",\n                                              \"マネージャ\"}, // trailing ー removed by stemming\n                              new int[]{1, 0, 1, 1},\n                              new int[]{1, 3, 1, 1}\n                              );\n\n    // Kansai International Airport:\n    assertAnalyzesToPositions(a, \"関西国際空港\",\n                              new String[] { \"関西\",\n                                             \"関西国際空港\", // zero pos inc\n                                             \"国際\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Konika Minolta Holdings; not quite the right\n    // segmentation (see LUCENE-3726):\n    assertAnalyzesToPositions(a, \"コニカミノルタホールディングス\",\n                              new String[] { \"コニカ\",\n                                             \"コニカミノルタホールディングス\", // zero pos inc\n                                             \"ミノルタ\", \n                                             \"ホールディングス\"},\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Narita Airport\n    assertAnalyzesToPositions(a, \"成田空港\",\n                              new String[] { \"成田\",\n                                             \"成田空港\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1},\n                              new int[] {1, 2, 1}\n                              );\n\n    // Kyoto University Baseball Club\n    assertAnalyzesToPositions(new JapaneseAnalyzer(TEST_VERSION_CURRENT), \"京都大学硬式野球部\",\n                     new String[] { \"京都大\",\n                                    \"学\",\n                                    \"硬式\",\n                                    \"野球\",\n                                    \"部\" },\n                              new int[] {1, 1, 1, 1, 1},\n                              new int[] {1, 1, 1, 1, 1});\n    // toDotFile(a, \"成田空港\", \"/mnt/scratch/out.dot\");\n  }\n\n","sourceOld":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n\n    final Analyzer a = new KuromojiAnalyzer(TEST_VERSION_CURRENT, null, Mode.SEARCH,\n                                            KuromojiAnalyzer.getDefaultStopSet(),\n                                            KuromojiAnalyzer.getDefaultStopTags());\n\n    // Senior software engineer:\n    assertAnalyzesToPositions(a, \"シニアソフトウェアエンジニア\",\n                              new String[] { \"シニア\",\n                                             \"シニアソフトウェアエンジニア\", // zero pos inc\n                                             \"ソフトウェア\",\n                                             \"エンジニア\" },\n                              new int[] { 1, 0, 1, 1},\n                              new int[] { 1, 3, 1, 1}\n                              );\n\n    // Senior project manager: also tests katakana spelling variation stemming\n    assertAnalyzesToPositions(a, \"シニアプロジェクトマネージャー\",\n                              new String[] { \"シニア\",\n                                              \"シニアプロジェクトマネージャ\", // trailing ー removed by stemming, zero pos inc\n                                              \"プロジェクト\",\n                                              \"マネージャ\"}, // trailing ー removed by stemming\n                              new int[]{1, 0, 1, 1},\n                              new int[]{1, 3, 1, 1}\n                              );\n\n    // Kansai International Airport:\n    assertAnalyzesToPositions(a, \"関西国際空港\",\n                              new String[] { \"関西\",\n                                             \"関西国際空港\", // zero pos inc\n                                             \"国際\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Konika Minolta Holdings; not quite the right\n    // segmentation (see LUCENE-3726):\n    assertAnalyzesToPositions(a, \"コニカミノルタホールディングス\",\n                              new String[] { \"コニカ\",\n                                             \"コニカミノルタホールディングス\", // zero pos inc\n                                             \"ミノルタ\", \n                                             \"ホールディングス\"},\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Narita Airport\n    assertAnalyzesToPositions(a, \"成田空港\",\n                              new String[] { \"成田\",\n                                             \"成田空港\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1},\n                              new int[] {1, 2, 1}\n                              );\n\n    // Kyoto University Baseball Club\n    assertAnalyzesToPositions(new KuromojiAnalyzer(TEST_VERSION_CURRENT), \"京都大学硬式野球部\",\n                     new String[] { \"京都大\",\n                                    \"学\",\n                                    \"硬式\",\n                                    \"野球\",\n                                    \"部\" },\n                              new int[] {1, 1, 1, 1, 1},\n                              new int[] {1, 1, 1, 1, 1});\n    // toDotFile(a, \"成田空港\", \"/mnt/scratch/out.dot\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseAnalyzer#testDecomposition().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseAnalyzer#testDecomposition().mjava","sourceNew":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n\n    final Analyzer a = new JapaneseAnalyzer(TEST_VERSION_CURRENT, null, Mode.SEARCH,\n                                            JapaneseAnalyzer.getDefaultStopSet(),\n                                            JapaneseAnalyzer.getDefaultStopTags());\n\n    // Senior software engineer:\n    assertAnalyzesToPositions(a, \"シニアソフトウェアエンジニア\",\n                              new String[] { \"シニア\",\n                                             \"シニアソフトウェアエンジニア\", // zero pos inc\n                                             \"ソフトウェア\",\n                                             \"エンジニア\" },\n                              new int[] { 1, 0, 1, 1},\n                              new int[] { 1, 3, 1, 1}\n                              );\n\n    // Senior project manager: also tests katakana spelling variation stemming\n    assertAnalyzesToPositions(a, \"シニアプロジェクトマネージャー\",\n                              new String[] { \"シニア\",\n                                              \"シニアプロジェクトマネージャ\", // trailing ー removed by stemming, zero pos inc\n                                              \"プロジェクト\",\n                                              \"マネージャ\"}, // trailing ー removed by stemming\n                              new int[]{1, 0, 1, 1},\n                              new int[]{1, 3, 1, 1}\n                              );\n\n    // Kansai International Airport:\n    assertAnalyzesToPositions(a, \"関西国際空港\",\n                              new String[] { \"関西\",\n                                             \"関西国際空港\", // zero pos inc\n                                             \"国際\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Konika Minolta Holdings; not quite the right\n    // segmentation (see LUCENE-3726):\n    assertAnalyzesToPositions(a, \"コニカミノルタホールディングス\",\n                              new String[] { \"コニカ\",\n                                             \"コニカミノルタホールディングス\", // zero pos inc\n                                             \"ミノルタ\", \n                                             \"ホールディングス\"},\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Narita Airport\n    assertAnalyzesToPositions(a, \"成田空港\",\n                              new String[] { \"成田\",\n                                             \"成田空港\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1},\n                              new int[] {1, 2, 1}\n                              );\n\n    // Kyoto University Baseball Club\n    assertAnalyzesToPositions(new JapaneseAnalyzer(TEST_VERSION_CURRENT), \"京都大学硬式野球部\",\n                     new String[] { \"京都大\",\n                                    \"学\",\n                                    \"硬式\",\n                                    \"野球\",\n                                    \"部\" },\n                              new int[] {1, 1, 1, 1, 1},\n                              new int[] {1, 1, 1, 1, 1});\n    // toDotFile(a, \"成田空港\", \"/mnt/scratch/out.dot\");\n  }\n\n","sourceOld":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n\n    final Analyzer a = new JapaneseAnalyzer(TEST_VERSION_CURRENT, null, Mode.SEARCH,\n                                            JapaneseAnalyzer.getDefaultStopSet(),\n                                            JapaneseAnalyzer.getDefaultStopTags());\n\n    // Senior software engineer:\n    assertAnalyzesToPositions(a, \"シニアソフトウェアエンジニア\",\n                              new String[] { \"シニア\",\n                                             \"シニアソフトウェアエンジニア\", // zero pos inc\n                                             \"ソフトウェア\",\n                                             \"エンジニア\" },\n                              new int[] { 1, 0, 1, 1},\n                              new int[] { 1, 3, 1, 1}\n                              );\n\n    // Senior project manager: also tests katakana spelling variation stemming\n    assertAnalyzesToPositions(a, \"シニアプロジェクトマネージャー\",\n                              new String[] { \"シニア\",\n                                              \"シニアプロジェクトマネージャ\", // trailing ー removed by stemming, zero pos inc\n                                              \"プロジェクト\",\n                                              \"マネージャ\"}, // trailing ー removed by stemming\n                              new int[]{1, 0, 1, 1},\n                              new int[]{1, 3, 1, 1}\n                              );\n\n    // Kansai International Airport:\n    assertAnalyzesToPositions(a, \"関西国際空港\",\n                              new String[] { \"関西\",\n                                             \"関西国際空港\", // zero pos inc\n                                             \"国際\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Konika Minolta Holdings; not quite the right\n    // segmentation (see LUCENE-3726):\n    assertAnalyzesToPositions(a, \"コニカミノルタホールディングス\",\n                              new String[] { \"コニカ\",\n                                             \"コニカミノルタホールディングス\", // zero pos inc\n                                             \"ミノルタ\", \n                                             \"ホールディングス\"},\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Narita Airport\n    assertAnalyzesToPositions(a, \"成田空港\",\n                              new String[] { \"成田\",\n                                             \"成田空港\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1},\n                              new int[] {1, 2, 1}\n                              );\n\n    // Kyoto University Baseball Club\n    assertAnalyzesToPositions(new JapaneseAnalyzer(TEST_VERSION_CURRENT), \"京都大学硬式野球部\",\n                     new String[] { \"京都大\",\n                                    \"学\",\n                                    \"硬式\",\n                                    \"野球\",\n                                    \"部\" },\n                              new int[] {1, 1, 1, 1, 1},\n                              new int[] {1, 1, 1, 1, 1});\n    // toDotFile(a, \"成田空港\", \"/mnt/scratch/out.dot\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}