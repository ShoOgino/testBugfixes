{"path":"lucene/sandbox/src/java/org/apache/lucene/document/ShapeQuery#hasAnyHits(ShapeQuery,PointValues).mjava","commits":[{"id":"637ced5887480f9803707c2fc68df68ce0c0bf13","date":1568120036,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/ShapeQuery#hasAnyHits(ShapeQuery,PointValues).mjava","pathOld":"/dev/null","sourceNew":"  /** Return true if the query matches at least one document. It creates a visitor that terminates as soon as one or more docs\n   * are matched. */\n  private static boolean hasAnyHits(final ShapeQuery query, final PointValues values) throws IOException {\n    try {\n      values.intersect(new IntersectVisitor() {\n        final ShapeField.DecodedTriangle scratchTriangle = new ShapeField.DecodedTriangle();\n\n        @Override\n        public void visit(int docID) {\n          throw new CollectionTerminatedException();\n        }\n\n        @Override\n        public void visit(int docID, byte[] t) {\n          if (query.queryMatches(t, scratchTriangle, query.getQueryRelation())) {\n            throw new CollectionTerminatedException();\n          }\n        }\n\n        @Override\n        public void visit(DocIdSetIterator iterator, byte[] t) {\n          if (query.queryMatches(t, scratchTriangle, query.getQueryRelation())) {\n            throw new CollectionTerminatedException();\n          }\n        }\n\n        @Override\n        public Relation compare(byte[] minPackedValue, byte[] maxPackedValue) {\n          Relation rel = query.relateRangeToQuery(minPackedValue, maxPackedValue, query.getQueryRelation());\n          if (rel == Relation.CELL_INSIDE_QUERY) {\n            throw new CollectionTerminatedException();\n          }\n          return rel;\n        }\n      });\n    } catch (CollectionTerminatedException e) {\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/ShapeQuery#hasAnyHits(ShapeQuery,PointValues).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/ShapeQuery#hasAnyHits(ShapeQuery,PointValues).mjava","sourceNew":"  /** Return true if the query matches at least one document. It creates a visitor that terminates as soon as one or more docs\n   * are matched. */\n  private static boolean hasAnyHits(final ShapeQuery query, final PointValues values) throws IOException {\n    try {\n      values.intersect(new IntersectVisitor() {\n        final ShapeField.DecodedTriangle scratchTriangle = new ShapeField.DecodedTriangle();\n\n        @Override\n        public void visit(int docID) {\n          throw new CollectionTerminatedException();\n        }\n\n        @Override\n        public void visit(int docID, byte[] t) {\n          if (query.queryMatches(t, scratchTriangle, query.getQueryRelation())) {\n            throw new CollectionTerminatedException();\n          }\n        }\n\n        @Override\n        public void visit(DocIdSetIterator iterator, byte[] t) {\n          if (query.queryMatches(t, scratchTriangle, query.getQueryRelation())) {\n            throw new CollectionTerminatedException();\n          }\n        }\n\n        @Override\n        public Relation compare(byte[] minPackedValue, byte[] maxPackedValue) {\n          Relation rel = query.relateRangeToQuery(minPackedValue, maxPackedValue, query.getQueryRelation());\n          if (rel == Relation.CELL_INSIDE_QUERY) {\n            throw new CollectionTerminatedException();\n          }\n          return rel;\n        }\n      });\n    } catch (CollectionTerminatedException e) {\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  /** Return true if the query matches at least one document. It creates a visitor that terminates as soon as one or more docs\n   * are matched. */\n  private static boolean hasAnyHits(final ShapeQuery query, final PointValues values) throws IOException {\n    try {\n      values.intersect(new IntersectVisitor() {\n        final ShapeField.DecodedTriangle scratchTriangle = new ShapeField.DecodedTriangle();\n\n        @Override\n        public void visit(int docID) {\n          throw new CollectionTerminatedException();\n        }\n\n        @Override\n        public void visit(int docID, byte[] t) {\n          if (query.queryMatches(t, scratchTriangle, query.getQueryRelation())) {\n            throw new CollectionTerminatedException();\n          }\n        }\n\n        @Override\n        public void visit(DocIdSetIterator iterator, byte[] t) {\n          if (query.queryMatches(t, scratchTriangle, query.getQueryRelation())) {\n            throw new CollectionTerminatedException();\n          }\n        }\n\n        @Override\n        public Relation compare(byte[] minPackedValue, byte[] maxPackedValue) {\n          Relation rel = query.relateRangeToQuery(minPackedValue, maxPackedValue, query.getQueryRelation());\n          if (rel == Relation.CELL_INSIDE_QUERY) {\n            throw new CollectionTerminatedException();\n          }\n          return rel;\n        }\n      });\n    } catch (CollectionTerminatedException e) {\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["637ced5887480f9803707c2fc68df68ce0c0bf13"],"637ced5887480f9803707c2fc68df68ce0c0bf13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["637ced5887480f9803707c2fc68df68ce0c0bf13"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"637ced5887480f9803707c2fc68df68ce0c0bf13":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}