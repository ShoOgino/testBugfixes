{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#stem(String).mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#stem(String).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#stem(String).mjava","sourceNew":"    /**\n     * Stemms the given term to a unique <tt>discriminator</tt>.\n     *\n     * @param term  java.langString The term that should be stemmed\n     * @return java.lang.String  Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term ) {\n\t\tif ( !isStemmable( term ) ) {\n\t\t\treturn term;\n\t\t}\n\n\t\t// Use lowercase for medium stemming.\n\t\tterm = term.toLowerCase();\n\n\t\t// Reset the StringBuffer.\n\t\tsb.delete( 0, sb.length() );\n\t\tsb.insert( 0, term );\n\n\t\t// reset the booleans\n\t\tmodified = false;\n\t\tsuite = false;\n\n\t\tsb = treatVowels( sb );\n\n\t\tsetStrings();\n\n\t\tstep1();\n\n\t\tif (!modified || suite)\n\t\t{\n\t\t\tif (RV != null)\n\t\t\t{\n\t\t\t\tsuite = step2a();\n\t\t\t\tif (!suite)\n\t\t\t\t\tstep2b();\n\t\t\t}\n\t\t}\n\n\t\tif (modified || suite)\n\t\t\tstep3();\n\t\telse\n\t\t\tstep4();\n\n\t\tstep5();\n\n\t\tstep6();\n\n\t\treturn sb.toString();\n    }\n\n","sourceOld":"    /**\n     * Stemms the given term to a unique <tt>discriminator</tt>.\n     *\n     * @param term  java.langString The term that should be stemmed\n     * @return java.lang.String  Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term ) {\n\t\tif ( !isStemmable( term ) ) {\n\t\t\treturn term;\n\t\t}\n\n\t\t// Use lowercase for medium stemming.\n\t\tterm = term.toLowerCase();\n\n\t\t// Reset the StringBuffer.\n\t\tsb.delete( 0, sb.length() );\n\t\tsb.insert( 0, term );\n\n\t\t// reset the booleans\n\t\tmodified = false;\n\t\tsuite = false;\n\n\t\tsb = treatVowels( sb );\n\n\t\tsetStrings();\n\n\t\tstep1();\n\n\t\tif (!modified || suite)\n\t\t{\n\t\t\tif (RV != null)\n\t\t\t{\n\t\t\t\tsuite = step2a();\n\t\t\t\tif (!suite)\n\t\t\t\t\tstep2b();\n\t\t\t}\n\t\t}\n\n\t\tif (modified || suite)\n\t\t\tstep3();\n\t\telse\n\t\t\tstep4();\n\n\t\tstep5();\n\n\t\tstep6();\n\n\t\treturn sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#stem(String).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemmer#stem(String).mjava","sourceNew":"    /**\n     * Stemms the given term to a unique <tt>discriminator</tt>.\n     *\n     * @param term  java.langString The term that should be stemmed\n     * @return java.lang.String  Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term ) {\n\t\tif ( !isStemmable( term ) ) {\n\t\t\treturn term;\n\t\t}\n\n\t\t// Use lowercase for medium stemming.\n\t\tterm = term.toLowerCase();\n\n\t\t// Reset the StringBuffer.\n\t\tsb.delete( 0, sb.length() );\n\t\tsb.insert( 0, term );\n\n\t\t// reset the booleans\n\t\tmodified = false;\n\t\tsuite = false;\n\n\t\tsb = treatVowels( sb );\n\n\t\tsetStrings();\n\n\t\tstep1();\n\n\t\tif (!modified || suite)\n\t\t{\n\t\t\tif (RV != null)\n\t\t\t{\n\t\t\t\tsuite = step2a();\n\t\t\t\tif (!suite)\n\t\t\t\t\tstep2b();\n\t\t\t}\n\t\t}\n\n\t\tif (modified || suite)\n\t\t\tstep3();\n\t\telse\n\t\t\tstep4();\n\n\t\tstep5();\n\n\t\tstep6();\n\n\t\treturn sb.toString();\n    }\n\n","sourceOld":"    /**\n     * Stemms the given term to a unique <tt>discriminator</tt>.\n     *\n     * @param term  java.langString The term that should be stemmed\n     * @return java.lang.String  Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term ) {\n\t\tif ( !isStemmable( term ) ) {\n\t\t\treturn term;\n\t\t}\n\n\t\t// Use lowercase for medium stemming.\n\t\tterm = term.toLowerCase();\n\n\t\t// Reset the StringBuffer.\n\t\tsb.delete( 0, sb.length() );\n\t\tsb.insert( 0, term );\n\n\t\t// reset the booleans\n\t\tmodified = false;\n\t\tsuite = false;\n\n\t\tsb = treatVowels( sb );\n\n\t\tsetStrings();\n\n\t\tstep1();\n\n\t\tif (!modified || suite)\n\t\t{\n\t\t\tif (RV != null)\n\t\t\t{\n\t\t\t\tsuite = step2a();\n\t\t\t\tif (!suite)\n\t\t\t\t\tstep2b();\n\t\t\t}\n\t\t}\n\n\t\tif (modified || suite)\n\t\t\tstep3();\n\t\telse\n\t\t\tstep4();\n\n\t\tstep5();\n\n\t\tstep6();\n\n\t\treturn sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}