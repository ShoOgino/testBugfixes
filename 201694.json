{"path":"lucene/core/src/java/org/apache/lucene/codecs/SegmentInfoReader#read(Directory,String,IOContext).mjava","commits":[{"id":"ace9b78896617dcee984890f3300d45c539c1b15","date":1337655022,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SegmentInfoReader#read(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/SegmentInfosReader#read(Directory,String,IOContext).mjava","sourceNew":"  /**\n   * Read {@link SegmentInfo} data from a directory.\n   * @param directory directory to read from\n   * @param segmentName name of the segment to read\n   * @return infos instance to be populated with data\n   * @throws IOException\n   */\n  public abstract SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Read {@link SegmentInfos} data from a directory.\n   * @param directory directory to read from\n   * @param segmentsFileName name of the \"segments_N\" file\n   * @param header input of \"segments_N\" file after reading preamble\n   * @param infos empty instance to be populated with data\n   * @throws IOException\n   */\n  public abstract SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SegmentInfoReader#read(Directory,String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Read {@link SegmentInfo} data from a directory.\n   * @param directory directory to read from\n   * @param segmentName name of the segment to read\n   * @return infos instance to be populated with data\n   * @throws IOException\n   */\n  public abstract SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SegmentInfoReader#read(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/SegmentInfoReader#read(Directory,String,IOContext).mjava","sourceNew":"  /**\n   * Read {@link SegmentInfo} data from a directory.\n   * @param directory directory to read from\n   * @param segmentName name of the segment to read\n   * @return infos instance to be populated with data\n   * @throws IOException If an I/O error occurs\n   */\n  public abstract SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Read {@link SegmentInfo} data from a directory.\n   * @param directory directory to read from\n   * @param segmentName name of the segment to read\n   * @return infos instance to be populated with data\n   * @throws IOException\n   */\n  public abstract SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2fe60a17a7a0cfd101b1169acf089221bc6c166","date":1412767493,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SegmentInfoFormat#read(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/SegmentInfoReader#read(Directory,String,IOContext).mjava","sourceNew":"  /**\n   * Read {@link SegmentInfo} data from a directory.\n   * @param directory directory to read from\n   * @param segmentName name of the segment to read\n   * @return infos instance to be populated with data\n   * @throws IOException If an I/O error occurs\n   */\n  public abstract SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Read {@link SegmentInfo} data from a directory.\n   * @param directory directory to read from\n   * @param segmentName name of the segment to read\n   * @return infos instance to be populated with data\n   * @throws IOException If an I/O error occurs\n   */\n  public abstract SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/SegmentInfoFormat#read(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/SegmentInfoReader#read(Directory,String,IOContext).mjava","sourceNew":"  /**\n   * Read {@link SegmentInfo} data from a directory.\n   * @param directory directory to read from\n   * @param segmentName name of the segment to read\n   * @return infos instance to be populated with data\n   * @throws IOException If an I/O error occurs\n   */\n  public abstract SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Read {@link SegmentInfo} data from a directory.\n   * @param directory directory to read from\n   * @param segmentName name of the segment to read\n   * @return infos instance to be populated with data\n   * @throws IOException If an I/O error occurs\n   */\n  public abstract SegmentInfo read(Directory directory, String segmentName, IOContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e2fe60a17a7a0cfd101b1169acf089221bc6c166":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"55980207f1977bd1463465de1659b821347e2fa8":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","e2fe60a17a7a0cfd101b1169acf089221bc6c166"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ace9b78896617dcee984890f3300d45c539c1b15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ace9b78896617dcee984890f3300d45c539c1b15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e2fe60a17a7a0cfd101b1169acf089221bc6c166"]},"commit2Childs":{"e2fe60a17a7a0cfd101b1169acf089221bc6c166":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["e2fe60a17a7a0cfd101b1169acf089221bc6c166","55980207f1977bd1463465de1659b821347e2fa8"],"55980207f1977bd1463465de1659b821347e2fa8":[],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","ace9b78896617dcee984890f3300d45c539c1b15"],"ace9b78896617dcee984890f3300d45c539c1b15":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}