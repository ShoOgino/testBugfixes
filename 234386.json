{"path":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } \n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } \n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3741149a89925c02f14dbeef8365b896798d91fc","date":1303483574,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        tempDirs.add(tmpFile.getAbsolutePath());\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } \n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d493718201f0d0c54c773fb323d87bbd2fbffe41","date":1303546048,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        tempDirs.add(tmpFile.getAbsolutePath());\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        tempDirs.add(tmpFile.getAbsolutePath());\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        tempDirs.add(tmpFile.getAbsolutePath());\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        tempDirs.add(tmpFile.getAbsolutePath());\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        tempDirs.add(tmpFile.getAbsolutePath());\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"435c7fca8d9d4e96fdc2b59f3392b08ef46725e7","date":1306320383,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        registerTempFile(tmpFile);\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        tempDirs.add(tmpFile.getAbsolutePath());\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        registerTempFile(tmpFile);\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        registerTempFile(tmpFile);\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e538cbd7f572f646f36c73053aea561d95c2cb2","date":1306660868,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        registerTempFile(tmpFile);\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        registerTempFile(tmpFile);\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":["a05409176bd65129d67a785ee70e881e238a9aef"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        registerTempFile(tmpFile);\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        tempDirs.add(tmpFile.getAbsolutePath());\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        registerTempFile(tmpFile);\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = File.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        tempDirs.add(tmpFile.getAbsolutePath());\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile, null);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newDirectoryImpl(Random,String).mjava","sourceNew":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        registerTempFile(tmpFile);\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  static Directory newDirectoryImpl(Random random, String clazzName) {\n    if (clazzName.equals(\"random\"))\n      clazzName = randomDirectory(random);\n    if (clazzName.indexOf(\".\") == -1) // if not fully qualified, assume .store\n      clazzName = \"org.apache.lucene.store.\" + clazzName;\n    try {\n      final Class<? extends Directory> clazz = Class.forName(clazzName).asSubclass(Directory.class);\n      // If it is a FSDirectory type, try its ctor(File)\n      if (FSDirectory.class.isAssignableFrom(clazz)) {\n        final File tmpFile = _TestUtil.createTempFile(\"test\", \"tmp\", TEMP_DIR);\n        tmpFile.delete();\n        tmpFile.mkdir();\n        registerTempFile(tmpFile);\n        return newFSDirectoryImpl(clazz.asSubclass(FSDirectory.class), tmpFile);\n      }\n\n      // try empty ctor\n      return clazz.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"efb7a19703a037c29e30440260d393500febc1f4":["435c7fca8d9d4e96fdc2b59f3392b08ef46725e7"],"1e538cbd7f572f646f36c73053aea561d95c2cb2":["efb7a19703a037c29e30440260d393500febc1f4"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["3741149a89925c02f14dbeef8365b896798d91fc","d493718201f0d0c54c773fb323d87bbd2fbffe41"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["bde51b089eb7f86171eb3406e38a274743f9b7ac","3741149a89925c02f14dbeef8365b896798d91fc"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"435c7fca8d9d4e96fdc2b59f3392b08ef46725e7":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"7b91922b55d15444d554721b352861d028eb8278":["1e538cbd7f572f646f36c73053aea561d95c2cb2"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","1e538cbd7f572f646f36c73053aea561d95c2cb2"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a3776dccca01c11e7046323cfad46a3b4a471233":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3741149a89925c02f14dbeef8365b896798d91fc":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["135621f3a0670a9394eb563224a3b76cc4dddc0f","1e538cbd7f572f646f36c73053aea561d95c2cb2"]},"commit2Childs":{"efb7a19703a037c29e30440260d393500febc1f4":["1e538cbd7f572f646f36c73053aea561d95c2cb2"],"1e538cbd7f572f646f36c73053aea561d95c2cb2":["7b91922b55d15444d554721b352861d028eb8278","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["135621f3a0670a9394eb563224a3b76cc4dddc0f","435c7fca8d9d4e96fdc2b59f3392b08ef46725e7","a3776dccca01c11e7046323cfad46a3b4a471233"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","a3776dccca01c11e7046323cfad46a3b4a471233","3741149a89925c02f14dbeef8365b896798d91fc","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"435c7fca8d9d4e96fdc2b59f3392b08ef46725e7":["efb7a19703a037c29e30440260d393500febc1f4"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3741149a89925c02f14dbeef8365b896798d91fc":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","d493718201f0d0c54c773fb323d87bbd2fbffe41"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["d493718201f0d0c54c773fb323d87bbd2fbffe41"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}