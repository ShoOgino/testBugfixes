{"path":"lucene/core/src/test/org/apache/lucene/document/TestLatLonShape#testIndexAndQuerySamePolygon().mjava","commits":[{"id":"b73ab989727307be90eb75c2ce4ef41d383974f3","date":1580322291,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestLatLonShape#testIndexAndQuerySamePolygon().mjava","pathOld":"/dev/null","sourceNew":"  public void testIndexAndQuerySamePolygon() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    Polygon polygon;\n    while(true) {\n      try {\n        polygon = GeoTestUtil.nextPolygon();\n        // quantize the polygon\n        double[] lats = new double[polygon.numPoints()];\n        double[] lons = new double[polygon.numPoints()];\n        for (int i = 0; i < polygon.numPoints(); i++) {\n          lats[i] = GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(polygon.getPolyLat(i)));\n          lons[i] = GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(polygon.getPolyLon(i)));\n        }\n        polygon = new Polygon(lats, lons);\n        Tessellator.tessellate(polygon);\n        break;\n      } catch (Exception e) {\n        // invalid polygon, try a new one\n      }\n    }\n    addPolygonsToDoc(FIELDNAME, doc, polygon);\n    w.addDocument(doc);\n    w.forceMerge(1);\n\n    ///// search //////\n    IndexReader reader = w.getReader();\n    w.close();\n    IndexSearcher searcher = newSearcher(reader);\n\n    Query q = LatLonShape.newPolygonQuery(FIELDNAME, QueryRelation.WITHIN, polygon);\n    assertEquals(1, searcher.count(q));\n    q = LatLonShape.newPolygonQuery(FIELDNAME, QueryRelation.INTERSECTS, polygon);\n    assertEquals(1, searcher.count(q));\n    q = LatLonShape.newPolygonQuery(FIELDNAME, QueryRelation.DISJOINT, polygon);\n    assertEquals(0, searcher.count(q));\n\n    IOUtils.close(w, reader, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b73ab989727307be90eb75c2ce4ef41d383974f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b73ab989727307be90eb75c2ce4ef41d383974f3"]},"commit2Childs":{"b73ab989727307be90eb75c2ce4ef41d383974f3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b73ab989727307be90eb75c2ce4ef41d383974f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}