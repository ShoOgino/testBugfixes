{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testKeepShortTermKeepLongTerm().mjava","commits":[{"id":"8a255765a5625ff80fba75863de5a16ea392015e","date":1528161860,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testKeepShortTermKeepLongTerm().mjava","pathOld":"/dev/null","sourceNew":"  public void testKeepShortTermKeepLongTerm() throws Exception {\n    final String inputString = \"a bcd efghi jk\";\n\n    { // preserveOriginal = false\n      TokenStream ts = whitespaceMockTokenizer(inputString);\n      NGramTokenFilter filter = new NGramTokenFilter(ts, 2, 3, false);\n      assertTokenStreamContents(filter,\n          new String[] { \"bc\", \"bcd\",  \"cd\", \"ef\", \"efg\", \"fg\", \"fgh\", \"gh\", \"ghi\", \"hi\", \"jk\" },\n          new int[]    {    2,     2,     2,    6,     6,    6,     6,    6,     6,    6,   12 },\n          new int[]    {    5,     5,     5,   11,    11,   11,    11,   11,    11,   11,   14 },\n          new int[]    {    2,     0,     0,    1,     0,    0,     0,    0,     0,    0,    1 });\n    }\n\n    { // preserveOriginal = true\n      TokenStream ts = whitespaceMockTokenizer(inputString);\n      NGramTokenFilter filter = new NGramTokenFilter(ts, 2, 3, true);\n      assertTokenStreamContents(filter,\n          new String[] { \"a\", \"bc\", \"bcd\",  \"cd\", \"ef\", \"efg\", \"fg\", \"fgh\", \"gh\", \"ghi\", \"hi\", \"efghi\", \"jk\" },\n          new int[]    {   0,    2,     2,     2,    6,     6,    6,     6,    6,     6,    6,       6,   12 },\n          new int[]    {   1,    5,     5,     5,   11,    11,   11,    11,   11,    11,   11,      11,   14 },\n          new int[]    {   1,    1,     0,     0,    1,     0,    0,     0,    0,     0,    0,       0,    1 });\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testKeepShortTermKeepLongTerm().mjava","pathOld":"/dev/null","sourceNew":"  public void testKeepShortTermKeepLongTerm() throws Exception {\n    final String inputString = \"a bcd efghi jk\";\n\n    { // preserveOriginal = false\n      TokenStream ts = whitespaceMockTokenizer(inputString);\n      NGramTokenFilter filter = new NGramTokenFilter(ts, 2, 3, false);\n      assertTokenStreamContents(filter,\n          new String[] { \"bc\", \"bcd\",  \"cd\", \"ef\", \"efg\", \"fg\", \"fgh\", \"gh\", \"ghi\", \"hi\", \"jk\" },\n          new int[]    {    2,     2,     2,    6,     6,    6,     6,    6,     6,    6,   12 },\n          new int[]    {    5,     5,     5,   11,    11,   11,    11,   11,    11,   11,   14 },\n          new int[]    {    2,     0,     0,    1,     0,    0,     0,    0,     0,    0,    1 });\n    }\n\n    { // preserveOriginal = true\n      TokenStream ts = whitespaceMockTokenizer(inputString);\n      NGramTokenFilter filter = new NGramTokenFilter(ts, 2, 3, true);\n      assertTokenStreamContents(filter,\n          new String[] { \"a\", \"bc\", \"bcd\",  \"cd\", \"ef\", \"efg\", \"fg\", \"fgh\", \"gh\", \"ghi\", \"hi\", \"efghi\", \"jk\" },\n          new int[]    {   0,    2,     2,     2,    6,     6,    6,     6,    6,     6,    6,       6,   12 },\n          new int[]    {   1,    5,     5,     5,   11,    11,   11,    11,   11,    11,   11,      11,   14 },\n          new int[]    {   1,    1,     0,     0,    1,     0,    0,     0,    0,     0,    0,       0,    1 });\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest#testKeepShortTermKeepLongTerm().mjava","pathOld":"/dev/null","sourceNew":"  public void testKeepShortTermKeepLongTerm() throws Exception {\n    final String inputString = \"a bcd efghi jk\";\n\n    { // preserveOriginal = false\n      TokenStream ts = whitespaceMockTokenizer(inputString);\n      NGramTokenFilter filter = new NGramTokenFilter(ts, 2, 3, false);\n      assertTokenStreamContents(filter,\n          new String[] { \"bc\", \"bcd\",  \"cd\", \"ef\", \"efg\", \"fg\", \"fgh\", \"gh\", \"ghi\", \"hi\", \"jk\" },\n          new int[]    {    2,     2,     2,    6,     6,    6,     6,    6,     6,    6,   12 },\n          new int[]    {    5,     5,     5,   11,    11,   11,    11,   11,    11,   11,   14 },\n          new int[]    {    2,     0,     0,    1,     0,    0,     0,    0,     0,    0,    1 });\n    }\n\n    { // preserveOriginal = true\n      TokenStream ts = whitespaceMockTokenizer(inputString);\n      NGramTokenFilter filter = new NGramTokenFilter(ts, 2, 3, true);\n      assertTokenStreamContents(filter,\n          new String[] { \"a\", \"bc\", \"bcd\",  \"cd\", \"ef\", \"efg\", \"fg\", \"fgh\", \"gh\", \"ghi\", \"hi\", \"efghi\", \"jk\" },\n          new int[]    {   0,    2,     2,     2,    6,     6,    6,     6,    6,     6,    6,       6,   12 },\n          new int[]    {   1,    5,     5,     5,   11,    11,   11,    11,   11,    11,   11,      11,   14 },\n          new int[]    {   1,    1,     0,     0,    1,     0,    0,     0,    0,     0,    0,       0,    1 });\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8a255765a5625ff80fba75863de5a16ea392015e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8a255765a5625ff80fba75863de5a16ea392015e"],"f592209545c71895260367152601e9200399776d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8a255765a5625ff80fba75863de5a16ea392015e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a255765a5625ff80fba75863de5a16ea392015e"]},"commit2Childs":{"8a255765a5625ff80fba75863de5a16ea392015e":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a255765a5625ff80fba75863de5a16ea392015e","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}