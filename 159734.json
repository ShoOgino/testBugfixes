{"path":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","commits":[{"id":"7b13106276bb5ea342253dbf6aae7b675adb38d3","date":1428054414,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static void runBackupCommand(JettySolrRunner masterJetty, String cmd, String params) throws IOException {\n    String masterUrl = buildUrl(masterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + \"/replication?command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(masterUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public static void runBackupCommand(JettySolrRunner masterJetty, String cmd, String params) throws IOException {\n    String masterUrl = buildUrl(masterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + \"/replication?command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(masterUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71475d88ea48a7d9a847f209667255318b3ea4c7","date":1461758968,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","sourceNew":"  public static void runBackupCommand(JettySolrRunner masterJetty, String cmd, String params) throws IOException {\n    String masterUrl = buildUrl(masterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(masterUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":"  public static void runBackupCommand(JettySolrRunner masterJetty, String cmd, String params) throws IOException {\n    String masterUrl = buildUrl(masterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + \"/replication?command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(masterUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac1e7fa558287a811ea07634d815ee7b1c541284","date":1500910922,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","sourceNew":"  public static void runBackupCommand(JettySolrRunner masterJetty, String cmd, String params) throws IOException {\n    String masterUrl = buildUrl(masterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?wt=xml&command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(masterUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":"  public static void runBackupCommand(JettySolrRunner masterJetty, String cmd, String params) throws IOException {\n    String masterUrl = buildUrl(masterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(masterUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","sourceNew":"  public static void runBackupCommand(JettySolrRunner masterJetty, String cmd, String params) throws IOException {\n    String masterUrl = buildUrl(masterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?wt=xml&command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(masterUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":"  public static void runBackupCommand(JettySolrRunner masterJetty, String cmd, String params) throws IOException {\n    String masterUrl = buildUrl(masterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(masterUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","sourceNew":"  public static void runBackupCommand(JettySolrRunner masterJetty, String cmd, String params) throws IOException {\n    String masterUrl = buildUrl(masterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?wt=xml&command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(masterUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":"  public static void runBackupCommand(JettySolrRunner masterJetty, String cmd, String params) throws IOException {\n    String masterUrl = buildUrl(masterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(masterUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e","date":1596664368,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerBackup#runBackupCommand(JettySolrRunner,String,String).mjava","sourceNew":"  public static void runBackupCommand(JettySolrRunner leaderJetty, String cmd, String params) throws IOException {\n    String leaderUrl = buildUrl(leaderJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?wt=xml&command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(leaderUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":"  public static void runBackupCommand(JettySolrRunner masterJetty, String cmd, String params) throws IOException {\n    String masterUrl = buildUrl(masterJetty.getLocalPort(), context) + \"/\" + DEFAULT_TEST_CORENAME\n        + ReplicationHandler.PATH+\"?wt=xml&command=\" + cmd + params;\n    InputStream stream = null;\n    try {\n      URL url = new URL(masterUrl);\n      stream = url.openStream();\n      stream.close();\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["a52341299179de5479672f7cf518bf4b173f34b3"],"a52341299179de5479672f7cf518bf4b173f34b3":["71475d88ea48a7d9a847f209667255318b3ea4c7","ac1e7fa558287a811ea07634d815ee7b1c541284"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["71475d88ea48a7d9a847f209667255318b3ea4c7","ac1e7fa558287a811ea07634d815ee7b1c541284"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7b13106276bb5ea342253dbf6aae7b675adb38d3"],"71475d88ea48a7d9a847f209667255318b3ea4c7":["7b13106276bb5ea342253dbf6aae7b675adb38d3"],"7b13106276bb5ea342253dbf6aae7b675adb38d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["71475d88ea48a7d9a847f209667255318b3ea4c7"]},"commit2Childs":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a52341299179de5479672f7cf518bf4b173f34b3":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","7b13106276bb5ea342253dbf6aae7b675adb38d3"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"71475d88ea48a7d9a847f209667255318b3ea4c7":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75","ac1e7fa558287a811ea07634d815ee7b1c541284"],"7b13106276bb5ea342253dbf6aae7b675adb38d3":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","71475d88ea48a7d9a847f209667255318b3ea4c7"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}