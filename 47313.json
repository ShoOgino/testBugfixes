{"path":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","commits":[{"id":"1bf853f0385a540ee0fb220fd272f2c362432294","date":1311520789,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testIndexAndConfigAliasReplication().mjava","sourceNew":"  private void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n  }\n\n","sourceOld":"  @Test\n  public void testIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08557cdb6c60ac7b88a9342c983a20cd236e74f","date":1330954480,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  private void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n  }\n\n","sourceOld":"  private void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  private void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n  }\n\n","sourceOld":"  private void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a59489bd57cb6434aab4e536a03b260fec1d47f3","date":1361571364,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n  }\n\n","sourceOld":"  private void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1432a0acddbd504d67af13ed2d8cf80e43abf049","date":1361579532,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n    \n    // revert configs\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication1.xml\", \n                          \"schema.xml\");\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n  }\n\n","bugFix":null,"bugIntro":["ad28156288ac00b91352582904d97e6653205757"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cda6a2714625c1cee18ab59784a620962891d028","date":1361629589,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n    \n    // revert configs\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n    master.copyConfigFile(CONF_DIR + \"schema-replication1.xml\", \n                          \"schema.xml\");\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    slave.copyConfigFile(CONF_DIR + \"schema-replication1.xml\", \"schema.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n    \n    // revert configs\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication1.xml\", \n                          \"schema.xml\");\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dc17e010cba2f8ecedcf9d4bf01a476df036a879","date":1361715388,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  @Ignore(\"ignore while i track down the intermittent problem with this test\")\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n    \n    // revert configs\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n    master.copyConfigFile(CONF_DIR + \"schema-replication1.xml\", \n                          \"schema.xml\");\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    slave.copyConfigFile(CONF_DIR + \"schema-replication1.xml\", \"schema.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n    \n    // revert configs\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n    master.copyConfigFile(CONF_DIR + \"schema-replication1.xml\", \n                          \"schema.xml\");\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    slave.copyConfigFile(CONF_DIR + \"schema-replication1.xml\", \"schema.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0821fb2632567b97517fef4d350c09297f996615","date":1361720082,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  //@Ignore(\"ignore while i track down the intermittent problem with this test\")\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    \n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    // we need to wait until the core is reloaded\n    rQuery(1, \"*:*\", slaveClient);\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n    \n  }\n\n","sourceOld":"  @Test\n  @Ignore(\"ignore while i track down the intermittent problem with this test\")\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n    \n    // revert configs\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n    master.copyConfigFile(CONF_DIR + \"schema-replication1.xml\", \n                          \"schema.xml\");\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    slave.copyConfigFile(CONF_DIR + \"schema-replication1.xml\", \"schema.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"058801f8673d53a5abac8088204860ec29a40f0d","date":1364178882,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  //@Ignore(\"ignore while i track down the intermittent problem with this test\")\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    \n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    // we need to wait until the core is reloaded\n    rQuery(1, \"*:*\", slaveClient);\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","sourceOld":"  @Test\n  //@Ignore(\"ignore while i track down the intermittent problem with this test\")\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    \n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    // we need to wait until the core is reloaded\n    rQuery(1, \"*:*\", slaveClient);\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n    \n  }\n\n","bugFix":null,"bugIntro":["ad28156288ac00b91352582904d97e6653205757"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"25bbd8e76cd29f2d4b262a24d6a42c754706b143","date":1365910543,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","sourceOld":"  @Test\n  //@Ignore(\"ignore while i track down the intermittent problem with this test\")\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    \n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"newname = \" + 2000);\n    masterClient.commit();\n\n    NamedList masterQueryRsp2 = rQuery(1, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    // we need to wait until the core is reloaded\n    rQuery(1, \"*:*\", slaveClient);\n\n    index(slaveClient, \"id\", \"2000\", \"name\", \"name = \" + 2001, \"newname\", \"newname = \" + 2001);\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"*:*\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"newname = 2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","bugFix":null,"bugIntro":["ad28156288ac00b91352582904d97e6653205757"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4c7856260bc28f285ae7bfefa99b28db4dca6daf","date":1395253500,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger snappull from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18ce8d826f36dbb2b7cc126cb7057c567cff6aca","date":1462870714,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    final SolrDocumentList sdl = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, sdl.getNumFound());\n    final SolrDocument d = sdl.get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","bugFix":null,"bugIntro":["ad28156288ac00b91352582904d97e6653205757"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    final SolrDocumentList sdl = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, sdl.getNumFound());\n    final SolrDocument d = sdl.get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    final SolrDocumentList sdl = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, sdl.getNumFound());\n    final SolrDocument d = sdl.get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    SolrDocument d = ((SolrDocumentList) slaveQueryRsp.get(\"response\")).get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad28156288ac00b91352582904d97e6653205757","date":1486850922,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    index(slaveClient, \"id\", \"2001\", \"name\", \"name = \" + 2001, \"newname\", \"n2001\");\n    slaveClient.commit();\n\n    slaveQueryRsp = rQuery(1, \"id:2001\", slaveClient);\n    final SolrDocumentList sdl = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, sdl.getNumFound());\n    final SolrDocument d = sdl.get(0);\n    assertEquals(\"n2001\", (String) d.getFieldValue(\"newname\"));\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty);\n  }\n\n","bugFix":["1432a0acddbd504d67af13ed2d8cf80e43abf049","18ce8d826f36dbb2b7cc126cb7057c567cff6aca","058801f8673d53a5abac8088204860ec29a40f0d","9be231d18ef58129524215a1d30331523320b744","25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4bab9eeea60eefbea2957be27b8d1923095df771","date":1525498218,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","sourceOld":"  @Test\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a1c374690db69470f6aa4bffc43dcacf1f4e3e49","date":1529007399,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","sourceOld":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","bugFix":["efab8c7286516f937e01cc69275841cfb09d90b9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","sourceOld":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e","date":1596664368,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestIndexAndConfigAliasReplication().mjava","sourceNew":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(nDocs, leaderQueryResult.getNumFound());\n\n    //get docs from follower and check if number is equal to leader\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, followerQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear leader index\n    leaderClient.deleteByQuery(\"*:*\");\n    leaderClient.commit();\n    rQuery(0, \"*:*\", leaderClient); // sanity check w/retry\n\n    //change solrconfig on leader\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader1.xml\",\n                          \"solrconfig.xml\");\n\n    //change schema on leader\n    leader.copyConfigFile(CONF_DIR + \"schema-replication2.xml\",\n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    leader.copyConfigFile(CONF_DIR + \"schema-replication2.xml\",\n                          \"schema-replication2.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    followerJetty.stop();\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    followerClient.deleteByQuery(\"*:*\");\n    followerClient.commit();\n    rQuery(0, \"*:*\", followerClient); // sanity check w/retry\n    \n    // record collection1's start time on follower\n    final Date followerStartTime = watchCoreStartAt(followerClient, 30*1000, null);\n\n    //add a doc with new field and commit on leader to trigger index fetch from follower.\n    index(leaderClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    leaderClient.commit();\n    rQuery(1, \"newname:n2000\", leaderClient);  // sanity check\n\n    // wait for follower to reload core by watching updated startTime\n    watchCoreStartAt(followerClient, 30*1000, followerStartTime);\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList leaderQueryRsp2 = rQuery(1, \"id:2000\", leaderClient);\n    SolrDocumentList leaderQueryResult2 = (SolrDocumentList) leaderQueryRsp2.get(\"response\");\n    assertEquals(1, leaderQueryResult2.getNumFound());\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList followerQueryRsp2 = rQuery(1, \"id:2000\", followerClient);\n    SolrDocumentList followerQueryResult2 = (SolrDocumentList) followerQueryRsp2.get(\"response\");\n    assertEquals(1, followerQueryResult2.getNumFound());\n    \n    checkForSingleIndex(leaderJetty);\n    checkForSingleIndex(followerJetty, true);\n  }\n\n","sourceOld":"  @Test\n  // 12-Jun-2018 @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 04-May-2018\n  public void doTestIndexAndConfigAliasReplication() throws Exception {\n    clearIndexWithReplication();\n\n    nDocs--;\n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    //get docs from slave and check if number is equal to master\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    //start config files replication test\n    //clear master index\n    masterClient.deleteByQuery(\"*:*\");\n    masterClient.commit();\n    rQuery(0, \"*:*\", masterClient); // sanity check w/retry\n\n    //change solrconfig on master\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master1.xml\", \n                          \"solrconfig.xml\");\n\n    //change schema on master\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema.xml\");\n\n    //keep a copy of the new schema\n    master.copyConfigFile(CONF_DIR + \"schema-replication2.xml\", \n                          \"schema-replication2.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    slaveJetty.stop();\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    slaveClient.deleteByQuery(\"*:*\");\n    slaveClient.commit();\n    rQuery(0, \"*:*\", slaveClient); // sanity check w/retry\n    \n    // record collection1's start time on slave\n    final Date slaveStartTime = watchCoreStartAt(slaveClient, 30*1000, null);\n\n    //add a doc with new field and commit on master to trigger index fetch from slave.\n    index(masterClient, \"id\", \"2000\", \"name\", \"name = \" + 2000, \"newname\", \"n2000\");\n    masterClient.commit();\n    rQuery(1, \"newname:n2000\", masterClient);  // sanity check\n\n    // wait for slave to reload core by watching updated startTime\n    watchCoreStartAt(slaveClient, 30*1000, slaveStartTime);\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList masterQueryRsp2 = rQuery(1, \"id:2000\", masterClient);\n    SolrDocumentList masterQueryResult2 = (SolrDocumentList) masterQueryRsp2.get(\"response\");\n    assertEquals(1, masterQueryResult2.getNumFound());\n\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList slaveQueryRsp2 = rQuery(1, \"id:2000\", slaveClient);\n    SolrDocumentList slaveQueryResult2 = (SolrDocumentList) slaveQueryRsp2.get(\"response\");\n    assertEquals(1, slaveQueryResult2.getNumFound());\n    \n    checkForSingleIndex(masterJetty);\n    checkForSingleIndex(slaveJetty, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ad28156288ac00b91352582904d97e6653205757":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["1bf853f0385a540ee0fb220fd272f2c362432294","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a1c374690db69470f6aa4bffc43dcacf1f4e3e49"],"bafca15d8e408346a67f4282ad1143b88023893b":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"18ce8d826f36dbb2b7cc126cb7057c567cff6aca":["20f6b7cff3771384f27af0f059795d7e64aff6b9"],"cda6a2714625c1cee18ab59784a620962891d028":["1432a0acddbd504d67af13ed2d8cf80e43abf049"],"e98520789adb1d5ad05afb4956eca0944a929688":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["20f6b7cff3771384f27af0f059795d7e64aff6b9","18ce8d826f36dbb2b7cc126cb7057c567cff6aca"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["cc3b13b430571c2e169f98fe38e1e7666f88522d","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["4bab9eeea60eefbea2957be27b8d1923095df771","a1c374690db69470f6aa4bffc43dcacf1f4e3e49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["bafca15d8e408346a67f4282ad1143b88023893b"],"0821fb2632567b97517fef4d350c09297f996615":["dc17e010cba2f8ecedcf9d4bf01a476df036a879"],"a1c374690db69470f6aa4bffc43dcacf1f4e3e49":["4bab9eeea60eefbea2957be27b8d1923095df771"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["4bab9eeea60eefbea2957be27b8d1923095df771","a1c374690db69470f6aa4bffc43dcacf1f4e3e49"],"1bf853f0385a540ee0fb220fd272f2c362432294":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["e98520789adb1d5ad05afb4956eca0944a929688"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["1bf853f0385a540ee0fb220fd272f2c362432294"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["20f6b7cff3771384f27af0f059795d7e64aff6b9","d470c8182e92b264680e34081b75e70a9f2b3c89"],"058801f8673d53a5abac8088204860ec29a40f0d":["0821fb2632567b97517fef4d350c09297f996615"],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"4bab9eeea60eefbea2957be27b8d1923095df771":["ad28156288ac00b91352582904d97e6653205757"],"dc17e010cba2f8ecedcf9d4bf01a476df036a879":["cda6a2714625c1cee18ab59784a620962891d028"],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["058801f8673d53a5abac8088204860ec29a40f0d"],"a59489bd57cb6434aab4e536a03b260fec1d47f3":["f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"1432a0acddbd504d67af13ed2d8cf80e43abf049":["a59489bd57cb6434aab4e536a03b260fec1d47f3"]},"commit2Childs":{"ad28156288ac00b91352582904d97e6653205757":["4bab9eeea60eefbea2957be27b8d1923095df771"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["e98520789adb1d5ad05afb4956eca0944a929688"],"bafca15d8e408346a67f4282ad1143b88023893b":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"18ce8d826f36dbb2b7cc126cb7057c567cff6aca":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"cda6a2714625c1cee18ab59784a620962891d028":["dc17e010cba2f8ecedcf9d4bf01a476df036a879"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["ad28156288ac00b91352582904d97e6653205757","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e98520789adb1d5ad05afb4956eca0944a929688":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["18ce8d826f36dbb2b7cc126cb7057c567cff6aca","d470c8182e92b264680e34081b75e70a9f2b3c89","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1bf853f0385a540ee0fb220fd272f2c362432294"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"0821fb2632567b97517fef4d350c09297f996615":["058801f8673d53a5abac8088204860ec29a40f0d"],"a1c374690db69470f6aa4bffc43dcacf1f4e3e49":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[],"1bf853f0385a540ee0fb220fd272f2c362432294":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a59489bd57cb6434aab4e536a03b260fec1d47f3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"058801f8673d53a5abac8088204860ec29a40f0d":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["bafca15d8e408346a67f4282ad1143b88023893b"],"4bab9eeea60eefbea2957be27b8d1923095df771":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a1c374690db69470f6aa4bffc43dcacf1f4e3e49","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"dc17e010cba2f8ecedcf9d4bf01a476df036a879":["0821fb2632567b97517fef4d350c09297f996615"],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"a59489bd57cb6434aab4e536a03b260fec1d47f3":["1432a0acddbd504d67af13ed2d8cf80e43abf049"],"1432a0acddbd504d67af13ed2d8cf80e43abf049":["cda6a2714625c1cee18ab59784a620962891d028"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}