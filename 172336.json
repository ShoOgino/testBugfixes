{"path":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","commits":[{"id":"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","date":1366659310,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"/dev/null","sourceNew":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CLASS,\n        config.getVal(\"solr/shardHandlerFactory/@class\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_NAME,\n        config.getVal(\"solr/shardHandlerFactory/@name\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@connTimeout]\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@socketTimeout]\", false));\n    \n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a877077e0a22a42eebce7d1052c58e97d3afb12d","f225b9b576dc345ee8c27f91147b4afc0350511c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dc6e48afbb50ae0a22fa76e226f04fd585532938","date":1371429211,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CLASS,\n        config.getVal(\"solr/shardHandlerFactory/@class\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_NAME,\n        config.getVal(\"solr/shardHandlerFactory/@name\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@name='connTimeout']\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@name='socketTimeout']\", false));\n    \n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","sourceOld":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CLASS,\n        config.getVal(\"solr/shardHandlerFactory/@class\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_NAME,\n        config.getVal(\"solr/shardHandlerFactory/@name\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@connTimeout]\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@socketTimeout]\", false));\n    \n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","bugFix":null,"bugIntro":["f225b9b576dc345ee8c27f91147b4afc0350511c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CLASS,\n        config.getVal(\"solr/shardHandlerFactory/@class\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_NAME,\n        config.getVal(\"solr/shardHandlerFactory/@name\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@name='connTimeout']\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@name='socketTimeout']\", false));\n    \n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","sourceOld":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CLASS,\n        config.getVal(\"solr/shardHandlerFactory/@class\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_NAME,\n        config.getVal(\"solr/shardHandlerFactory/@name\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@name='connTimeout']\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@name='socketTimeout']\", false));\n    \n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","bugFix":null,"bugIntro":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f225b9b576dc345ee8c27f91147b4afc0350511c","date":1373552135,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","sourceOld":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CLASS,\n        config.getVal(\"solr/shardHandlerFactory/@class\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_NAME,\n        config.getVal(\"solr/shardHandlerFactory/@name\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@name='connTimeout']\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@name='socketTimeout']\", false));\n    \n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","bugFix":["dc6e48afbb50ae0a22fa76e226f04fd585532938","c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","sourceOld":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CLASS,\n        config.getVal(\"solr/shardHandlerFactory/@class\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_NAME,\n        config.getVal(\"solr/shardHandlerFactory/@name\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@connTimeout]\", false));\n    propMap.put(CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT,\n        config.getVal(\"solr/shardHandlerFactory/int[@socketTimeout]\", false));\n    \n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7035935aa89f6951286e9005cbeb16e89a082a2","date":1385258396,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONS,\n        config.getVal(\"solr/cores/@maxUpdateConnections\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST,\n        config.getVal(\"solr/cores/@maxUpdateConnectionsPerHost\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","sourceOld":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","bugFix":null,"bugIntro":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f763a1acdb27217b4799d1ca51c816739835a3e0","date":1387388124,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_COLLECTIONSHANDLER, config.getVal(\"solr/cores/@collectionsHandler\", false));\n    propMap.put(CfgProp.SOLR_INFOHANDLER, config.getVal(\"solr/cores/@infoHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONS,\n        config.getVal(\"solr/cores/@maxUpdateConnections\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST,\n        config.getVal(\"solr/cores/@maxUpdateConnectionsPerHost\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","sourceOld":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONS,\n        config.getVal(\"solr/cores/@maxUpdateConnections\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST,\n        config.getVal(\"solr/cores/@maxUpdateConnectionsPerHost\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","bugFix":null,"bugIntro":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_COLLECTIONSHANDLER, config.getVal(\"solr/cores/@collectionsHandler\", false));\n    propMap.put(CfgProp.SOLR_INFOHANDLER, config.getVal(\"solr/cores/@infoHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONS,\n        config.getVal(\"solr/cores/@maxUpdateConnections\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST,\n        config.getVal(\"solr/cores/@maxUpdateConnectionsPerHost\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","sourceOld":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d4e985daefcb892b529223b478c47985fc3c483","date":1395658491,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_COLLECTIONSHANDLER, config.getVal(\"solr/cores/@collectionsHandler\", false));\n    propMap.put(CfgProp.SOLR_INFOHANDLER, config.getVal(\"solr/cores/@infoHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONS,\n        config.getVal(\"solr/cores/@maxUpdateConnections\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST,\n        config.getVal(\"solr/cores/@maxUpdateConnectionsPerHost\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n    propMap.put(CfgProp.SOLR_CONFIGSETBASEDIR, config.getVal(\"solr/cores/@configSetBaseDir\", false));\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","sourceOld":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_COLLECTIONSHANDLER, config.getVal(\"solr/cores/@collectionsHandler\", false));\n    propMap.put(CfgProp.SOLR_INFOHANDLER, config.getVal(\"solr/cores/@infoHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONS,\n        config.getVal(\"solr/cores/@maxUpdateConnections\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST,\n        config.getVal(\"solr/cores/@maxUpdateConnectionsPerHost\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","bugFix":null,"bugIntro":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a877077e0a22a42eebce7d1052c58e97d3afb12d","date":1405981118,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    storeConfigPropertyAsInt(CfgProp.SOLR_CORELOADTHREADS, \"solr/@coreLoadThreads\");\n    storeConfigPropertyAsString(CfgProp.SOLR_SHAREDLIB, \"solr/@sharedLib\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKHOST, \"solr/@zkHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_CLASS, \"solr/logging/@class\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_LOGGING_ENABLED, \"solr/logging/@enabled\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LOGGING_WATCHER_SIZE, \"solr/logging/watcher/@size\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD, \"solr/logging/watcher/@threshold\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINHANDLER, \"solr/cores/@adminHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_COLLECTIONSHANDLER, \"solr/cores/@collectionsHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_INFOHANDLER, \"solr/cores/@infoHandler\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT, \"solr/cores/@distribUpdateConnTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT, \"solr/cores/@distribUpdateSoTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONS, \"solr/cores/@maxUpdateConnections\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST, \"solr/cores/@maxUpdateConnectionsPerHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOST, \"solr/cores/@host\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTCONTEXT, \"solr/cores/@hostContext\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTPORT, \"solr/cores/@hostPort\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LEADERVOTEWAIT, \"solr/cores/@leaderVoteWait\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_GENERICCORENODENAMES, \"solr/cores/@genericCoreNodeNames\");\n    storeConfigPropertyAsString(CfgProp.SOLR_MANAGEMENTPATH, \"solr/cores/@managementPath\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_SHARESCHEMA, \"solr/cores/@shareSchema\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_TRANSIENTCACHESIZE, \"solr/cores/@transientCacheSize\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_ZKCLIENTTIMEOUT, \"solr/cores/@zkClientTimeout\");\n    storeConfigPropertyAsString(CfgProp.SOLR_CONFIGSETBASEDIR, \"solr/cores/@configSetBaseDir\");\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    storeConfigPropertyAsString(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME, \"solr/cores/@defaultCoreName\");\n    storeConfigPropertyAsString(CfgProp.SOLR_PERSISTENT, \"solr/@persistent\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINPATH, \"solr/cores/@adminPath\");\n  }\n\n","sourceOld":"  private void fillPropMap() {\n    \n    propMap.put(CfgProp.SOLR_CORELOADTHREADS,\n        config.getVal(\"solr/@coreLoadThreads\", false));\n    propMap\n        .put(CfgProp.SOLR_SHAREDLIB, config.getVal(\"solr/@sharedLib\", false));\n    propMap.put(CfgProp.SOLR_ZKHOST, config.getVal(\"solr/@zkHost\", false));\n    \n    propMap.put(CfgProp.SOLR_LOGGING_CLASS,\n        config.getVal(\"solr/logging/@class\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_ENABLED,\n        config.getVal(\"solr/logging/@enabled\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_SIZE,\n        config.getVal(\"solr/logging/watcher/@size\", false));\n    propMap.put(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD,\n        config.getVal(\"solr/logging/watcher/@threshold\", false));\n    \n    propMap.put(CfgProp.SOLR_ADMINHANDLER,\n        config.getVal(\"solr/cores/@adminHandler\", false));\n    propMap.put(CfgProp.SOLR_COLLECTIONSHANDLER, config.getVal(\"solr/cores/@collectionsHandler\", false));\n    propMap.put(CfgProp.SOLR_INFOHANDLER, config.getVal(\"solr/cores/@infoHandler\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateConnTimeout\", false));\n    propMap.put(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT,\n        config.getVal(\"solr/cores/@distribUpdateSoTimeout\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONS,\n        config.getVal(\"solr/cores/@maxUpdateConnections\", false));\n    propMap.put(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST,\n        config.getVal(\"solr/cores/@maxUpdateConnectionsPerHost\", false));\n    propMap.put(CfgProp.SOLR_HOST, config.getVal(\"solr/cores/@host\", false));\n    propMap.put(CfgProp.SOLR_HOSTCONTEXT,\n        config.getVal(\"solr/cores/@hostContext\", false));\n    propMap.put(CfgProp.SOLR_HOSTPORT,\n        config.getVal(\"solr/cores/@hostPort\", false));\n    propMap.put(CfgProp.SOLR_LEADERVOTEWAIT,\n        config.getVal(\"solr/cores/@leaderVoteWait\", false));\n    propMap.put(CfgProp.SOLR_GENERICCORENODENAMES,\n        config.getVal(\"solr/cores/@genericCoreNodeNames\", false));\n    propMap.put(CfgProp.SOLR_MANAGEMENTPATH,\n        config.getVal(\"solr/cores/@managementPath\", false));\n    propMap.put(CfgProp.SOLR_SHARESCHEMA,\n        config.getVal(\"solr/cores/@shareSchema\", false));\n    propMap.put(CfgProp.SOLR_TRANSIENTCACHESIZE,\n        config.getVal(\"solr/cores/@transientCacheSize\", false));\n    propMap.put(CfgProp.SOLR_ZKCLIENTTIMEOUT,\n        config.getVal(\"solr/cores/@zkClientTimeout\", false));\n    propMap.put(CfgProp.SOLR_CONFIGSETBASEDIR, config.getVal(\"solr/cores/@configSetBaseDir\", false));\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    propMap.put(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME,\n        config.getVal(\"solr/cores/@defaultCoreName\", false));\n    propMap.put(CfgProp.SOLR_PERSISTENT,\n        config.getVal(\"solr/@persistent\", false));\n    propMap.put(CfgProp.SOLR_ADMINPATH,\n        config.getVal(\"solr/cores/@adminPath\", false));\n    \n  }\n\n","bugFix":["849494cf2f3a96af5c8c84995108ddd8456fcd04","f763a1acdb27217b4799d1ca51c816739835a3e0","a7035935aa89f6951286e9005cbeb16e89a082a2","c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","2d4e985daefcb892b529223b478c47985fc3c483"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    storeConfigPropertyAsInt(CfgProp.SOLR_CORELOADTHREADS, \"solr/@coreLoadThreads\");\n    storeConfigPropertyAsString(CfgProp.SOLR_SHAREDLIB, \"solr/@sharedLib\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKHOST, \"solr/@zkHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_CLASS, \"solr/logging/@class\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_LOGGING_ENABLED, \"solr/logging/@enabled\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LOGGING_WATCHER_SIZE, \"solr/logging/watcher/@size\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD, \"solr/logging/watcher/@threshold\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINHANDLER, \"solr/cores/@adminHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_COLLECTIONSHANDLER, \"solr/cores/@collectionsHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_INFOHANDLER, \"solr/cores/@infoHandler\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT, \"solr/cores/@distribUpdateConnTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT, \"solr/cores/@distribUpdateSoTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONS, \"solr/cores/@maxUpdateConnections\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST, \"solr/cores/@maxUpdateConnectionsPerHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOST, \"solr/cores/@host\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTCONTEXT, \"solr/cores/@hostContext\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTPORT, \"solr/cores/@hostPort\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LEADERVOTEWAIT, \"solr/cores/@leaderVoteWait\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_GENERICCORENODENAMES, \"solr/cores/@genericCoreNodeNames\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERBADNODEEXPIRATION, \"solr/cores/@autoReplicaFailoverBadNodeExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWAITAFTEREXPIRATION, \"solr/cores/@autoReplicaFailoverWaitAfterExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWORKLOOPDELAY, \"solr/cores/@autoReplicaFailoverWorkLoopDelay\");\n    storeConfigPropertyAsString(CfgProp.SOLR_MANAGEMENTPATH, \"solr/cores/@managementPath\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_SHARESCHEMA, \"solr/cores/@shareSchema\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_TRANSIENTCACHESIZE, \"solr/cores/@transientCacheSize\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_ZKCLIENTTIMEOUT, \"solr/cores/@zkClientTimeout\");\n    storeConfigPropertyAsString(CfgProp.SOLR_CONFIGSETBASEDIR, \"solr/cores/@configSetBaseDir\");\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    storeConfigPropertyAsString(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME, \"solr/cores/@defaultCoreName\");\n    storeConfigPropertyAsString(CfgProp.SOLR_PERSISTENT, \"solr/@persistent\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINPATH, \"solr/cores/@adminPath\");\n  }\n\n","sourceOld":"  private void fillPropMap() {\n    storeConfigPropertyAsInt(CfgProp.SOLR_CORELOADTHREADS, \"solr/@coreLoadThreads\");\n    storeConfigPropertyAsString(CfgProp.SOLR_SHAREDLIB, \"solr/@sharedLib\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKHOST, \"solr/@zkHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_CLASS, \"solr/logging/@class\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_LOGGING_ENABLED, \"solr/logging/@enabled\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LOGGING_WATCHER_SIZE, \"solr/logging/watcher/@size\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD, \"solr/logging/watcher/@threshold\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINHANDLER, \"solr/cores/@adminHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_COLLECTIONSHANDLER, \"solr/cores/@collectionsHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_INFOHANDLER, \"solr/cores/@infoHandler\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT, \"solr/cores/@distribUpdateConnTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT, \"solr/cores/@distribUpdateSoTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONS, \"solr/cores/@maxUpdateConnections\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST, \"solr/cores/@maxUpdateConnectionsPerHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOST, \"solr/cores/@host\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTCONTEXT, \"solr/cores/@hostContext\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTPORT, \"solr/cores/@hostPort\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LEADERVOTEWAIT, \"solr/cores/@leaderVoteWait\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_GENERICCORENODENAMES, \"solr/cores/@genericCoreNodeNames\");\n    storeConfigPropertyAsString(CfgProp.SOLR_MANAGEMENTPATH, \"solr/cores/@managementPath\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_SHARESCHEMA, \"solr/cores/@shareSchema\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_TRANSIENTCACHESIZE, \"solr/cores/@transientCacheSize\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_ZKCLIENTTIMEOUT, \"solr/cores/@zkClientTimeout\");\n    storeConfigPropertyAsString(CfgProp.SOLR_CONFIGSETBASEDIR, \"solr/cores/@configSetBaseDir\");\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    storeConfigPropertyAsString(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME, \"solr/cores/@defaultCoreName\");\n    storeConfigPropertyAsString(CfgProp.SOLR_PERSISTENT, \"solr/@persistent\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINPATH, \"solr/cores/@adminPath\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c83f985d9828d30801541f1eed26aa3169646baf","date":1409315453,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    storeConfigPropertyAsInt(CfgProp.SOLR_CORELOADTHREADS, \"solr/@coreLoadThreads\");\n    storeConfigPropertyAsString(CfgProp.SOLR_SHAREDLIB, \"solr/@sharedLib\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKHOST, \"solr/@zkHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_CLASS, \"solr/logging/@class\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_LOGGING_ENABLED, \"solr/logging/@enabled\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LOGGING_WATCHER_SIZE, \"solr/logging/watcher/@size\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD, \"solr/logging/watcher/@threshold\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINHANDLER, \"solr/cores/@adminHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_COLLECTIONSHANDLER, \"solr/cores/@collectionsHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_INFOHANDLER, \"solr/cores/@infoHandler\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT, \"solr/cores/@distribUpdateConnTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT, \"solr/cores/@distribUpdateSoTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONS, \"solr/cores/@maxUpdateConnections\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST, \"solr/cores/@maxUpdateConnectionsPerHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOST, \"solr/cores/@host\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTCONTEXT, \"solr/cores/@hostContext\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTPORT, \"solr/cores/@hostPort\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LEADERVOTEWAIT, \"solr/cores/@leaderVoteWait\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_GENERICCORENODENAMES, \"solr/cores/@genericCoreNodeNames\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERBADNODEEXPIRATION, \"solr/cores/@autoReplicaFailoverBadNodeExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWAITAFTEREXPIRATION, \"solr/cores/@autoReplicaFailoverWaitAfterExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWORKLOOPDELAY, \"solr/cores/@autoReplicaFailoverWorkLoopDelay\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKACLPROVIDER, \"solr/cores/@zkACLProvider\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKCREDENTIALPROVIDER, \"solr/cores/@zkCredentialProvider\");\n    storeConfigPropertyAsString(CfgProp.SOLR_MANAGEMENTPATH, \"solr/cores/@managementPath\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_SHARESCHEMA, \"solr/cores/@shareSchema\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_TRANSIENTCACHESIZE, \"solr/cores/@transientCacheSize\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_ZKCLIENTTIMEOUT, \"solr/cores/@zkClientTimeout\");\n    storeConfigPropertyAsString(CfgProp.SOLR_CONFIGSETBASEDIR, \"solr/cores/@configSetBaseDir\");\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    storeConfigPropertyAsString(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME, \"solr/cores/@defaultCoreName\");\n    storeConfigPropertyAsString(CfgProp.SOLR_PERSISTENT, \"solr/@persistent\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINPATH, \"solr/cores/@adminPath\");\n  }\n\n","sourceOld":"  private void fillPropMap() {\n    storeConfigPropertyAsInt(CfgProp.SOLR_CORELOADTHREADS, \"solr/@coreLoadThreads\");\n    storeConfigPropertyAsString(CfgProp.SOLR_SHAREDLIB, \"solr/@sharedLib\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKHOST, \"solr/@zkHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_CLASS, \"solr/logging/@class\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_LOGGING_ENABLED, \"solr/logging/@enabled\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LOGGING_WATCHER_SIZE, \"solr/logging/watcher/@size\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD, \"solr/logging/watcher/@threshold\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINHANDLER, \"solr/cores/@adminHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_COLLECTIONSHANDLER, \"solr/cores/@collectionsHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_INFOHANDLER, \"solr/cores/@infoHandler\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT, \"solr/cores/@distribUpdateConnTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT, \"solr/cores/@distribUpdateSoTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONS, \"solr/cores/@maxUpdateConnections\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST, \"solr/cores/@maxUpdateConnectionsPerHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOST, \"solr/cores/@host\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTCONTEXT, \"solr/cores/@hostContext\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTPORT, \"solr/cores/@hostPort\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LEADERVOTEWAIT, \"solr/cores/@leaderVoteWait\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_GENERICCORENODENAMES, \"solr/cores/@genericCoreNodeNames\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERBADNODEEXPIRATION, \"solr/cores/@autoReplicaFailoverBadNodeExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWAITAFTEREXPIRATION, \"solr/cores/@autoReplicaFailoverWaitAfterExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWORKLOOPDELAY, \"solr/cores/@autoReplicaFailoverWorkLoopDelay\");\n    storeConfigPropertyAsString(CfgProp.SOLR_MANAGEMENTPATH, \"solr/cores/@managementPath\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_SHARESCHEMA, \"solr/cores/@shareSchema\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_TRANSIENTCACHESIZE, \"solr/cores/@transientCacheSize\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_ZKCLIENTTIMEOUT, \"solr/cores/@zkClientTimeout\");\n    storeConfigPropertyAsString(CfgProp.SOLR_CONFIGSETBASEDIR, \"solr/cores/@configSetBaseDir\");\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    storeConfigPropertyAsString(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME, \"solr/cores/@defaultCoreName\");\n    storeConfigPropertyAsString(CfgProp.SOLR_PERSISTENT, \"solr/@persistent\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINPATH, \"solr/cores/@adminPath\");\n  }\n\n","bugFix":null,"bugIntro":["368b2f45f347fa0ff807b6474c1b8b78c5cb9e24"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"368b2f45f347fa0ff807b6474c1b8b78c5cb9e24","date":1415233558,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":"  private void fillPropMap() {\n    storeConfigPropertyAsInt(CfgProp.SOLR_CORELOADTHREADS, \"solr/@coreLoadThreads\");\n    storeConfigPropertyAsString(CfgProp.SOLR_SHAREDLIB, \"solr/@sharedLib\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKHOST, \"solr/@zkHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_CLASS, \"solr/logging/@class\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_LOGGING_ENABLED, \"solr/logging/@enabled\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LOGGING_WATCHER_SIZE, \"solr/logging/watcher/@size\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD, \"solr/logging/watcher/@threshold\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINHANDLER, \"solr/cores/@adminHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_COLLECTIONSHANDLER, \"solr/cores/@collectionsHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_INFOHANDLER, \"solr/cores/@infoHandler\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT, \"solr/cores/@distribUpdateConnTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT, \"solr/cores/@distribUpdateSoTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONS, \"solr/cores/@maxUpdateConnections\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST, \"solr/cores/@maxUpdateConnectionsPerHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOST, \"solr/cores/@host\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTCONTEXT, \"solr/cores/@hostContext\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTPORT, \"solr/cores/@hostPort\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LEADERVOTEWAIT, \"solr/cores/@leaderVoteWait\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_GENERICCORENODENAMES, \"solr/cores/@genericCoreNodeNames\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERBADNODEEXPIRATION, \"solr/cores/@autoReplicaFailoverBadNodeExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWAITAFTEREXPIRATION, \"solr/cores/@autoReplicaFailoverWaitAfterExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWORKLOOPDELAY, \"solr/cores/@autoReplicaFailoverWorkLoopDelay\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKACLPROVIDER, \"solr/cores/@zkACLProvider\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKCREDENTIALSPROVIDER, \"solr/cores/@zkCredentialsProvider\");\n    storeConfigPropertyAsString(CfgProp.SOLR_MANAGEMENTPATH, \"solr/cores/@managementPath\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_SHARESCHEMA, \"solr/cores/@shareSchema\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_TRANSIENTCACHESIZE, \"solr/cores/@transientCacheSize\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_ZKCLIENTTIMEOUT, \"solr/cores/@zkClientTimeout\");\n    storeConfigPropertyAsString(CfgProp.SOLR_CONFIGSETBASEDIR, \"solr/cores/@configSetBaseDir\");\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    storeConfigPropertyAsString(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME, \"solr/cores/@defaultCoreName\");\n    storeConfigPropertyAsString(CfgProp.SOLR_PERSISTENT, \"solr/@persistent\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINPATH, \"solr/cores/@adminPath\");\n  }\n\n","sourceOld":"  private void fillPropMap() {\n    storeConfigPropertyAsInt(CfgProp.SOLR_CORELOADTHREADS, \"solr/@coreLoadThreads\");\n    storeConfigPropertyAsString(CfgProp.SOLR_SHAREDLIB, \"solr/@sharedLib\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKHOST, \"solr/@zkHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_CLASS, \"solr/logging/@class\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_LOGGING_ENABLED, \"solr/logging/@enabled\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LOGGING_WATCHER_SIZE, \"solr/logging/watcher/@size\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD, \"solr/logging/watcher/@threshold\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINHANDLER, \"solr/cores/@adminHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_COLLECTIONSHANDLER, \"solr/cores/@collectionsHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_INFOHANDLER, \"solr/cores/@infoHandler\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT, \"solr/cores/@distribUpdateConnTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT, \"solr/cores/@distribUpdateSoTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONS, \"solr/cores/@maxUpdateConnections\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST, \"solr/cores/@maxUpdateConnectionsPerHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOST, \"solr/cores/@host\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTCONTEXT, \"solr/cores/@hostContext\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTPORT, \"solr/cores/@hostPort\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LEADERVOTEWAIT, \"solr/cores/@leaderVoteWait\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_GENERICCORENODENAMES, \"solr/cores/@genericCoreNodeNames\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERBADNODEEXPIRATION, \"solr/cores/@autoReplicaFailoverBadNodeExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWAITAFTEREXPIRATION, \"solr/cores/@autoReplicaFailoverWaitAfterExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWORKLOOPDELAY, \"solr/cores/@autoReplicaFailoverWorkLoopDelay\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKACLPROVIDER, \"solr/cores/@zkACLProvider\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKCREDENTIALPROVIDER, \"solr/cores/@zkCredentialProvider\");\n    storeConfigPropertyAsString(CfgProp.SOLR_MANAGEMENTPATH, \"solr/cores/@managementPath\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_SHARESCHEMA, \"solr/cores/@shareSchema\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_TRANSIENTCACHESIZE, \"solr/cores/@transientCacheSize\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_ZKCLIENTTIMEOUT, \"solr/cores/@zkClientTimeout\");\n    storeConfigPropertyAsString(CfgProp.SOLR_CONFIGSETBASEDIR, \"solr/cores/@configSetBaseDir\");\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    storeConfigPropertyAsString(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME, \"solr/cores/@defaultCoreName\");\n    storeConfigPropertyAsString(CfgProp.SOLR_PERSISTENT, \"solr/@persistent\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINPATH, \"solr/cores/@adminPath\");\n  }\n\n","bugFix":["c83f985d9828d30801541f1eed26aa3169646baf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#fillPropMap().mjava","sourceNew":null,"sourceOld":"  private void fillPropMap() {\n    storeConfigPropertyAsInt(CfgProp.SOLR_CORELOADTHREADS, \"solr/@coreLoadThreads\");\n    storeConfigPropertyAsString(CfgProp.SOLR_SHAREDLIB, \"solr/@sharedLib\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKHOST, \"solr/@zkHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_CLASS, \"solr/logging/@class\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_LOGGING_ENABLED, \"solr/logging/@enabled\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LOGGING_WATCHER_SIZE, \"solr/logging/watcher/@size\");\n    storeConfigPropertyAsString(CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD, \"solr/logging/watcher/@threshold\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINHANDLER, \"solr/cores/@adminHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_COLLECTIONSHANDLER, \"solr/cores/@collectionsHandler\");\n    storeConfigPropertyAsString(CfgProp.SOLR_INFOHANDLER, \"solr/cores/@infoHandler\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT, \"solr/cores/@distribUpdateConnTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT, \"solr/cores/@distribUpdateSoTimeout\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONS, \"solr/cores/@maxUpdateConnections\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_MAXUPDATECONNECTIONSPERHOST, \"solr/cores/@maxUpdateConnectionsPerHost\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOST, \"solr/cores/@host\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTCONTEXT, \"solr/cores/@hostContext\");\n    storeConfigPropertyAsString(CfgProp.SOLR_HOSTPORT, \"solr/cores/@hostPort\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_LEADERVOTEWAIT, \"solr/cores/@leaderVoteWait\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_GENERICCORENODENAMES, \"solr/cores/@genericCoreNodeNames\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERBADNODEEXPIRATION, \"solr/cores/@autoReplicaFailoverBadNodeExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWAITAFTEREXPIRATION, \"solr/cores/@autoReplicaFailoverWaitAfterExpiration\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_AUTOREPLICAFAILOVERWORKLOOPDELAY, \"solr/cores/@autoReplicaFailoverWorkLoopDelay\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKACLPROVIDER, \"solr/cores/@zkACLProvider\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ZKCREDENTIALSPROVIDER, \"solr/cores/@zkCredentialsProvider\");\n    storeConfigPropertyAsString(CfgProp.SOLR_MANAGEMENTPATH, \"solr/cores/@managementPath\");\n    storeConfigPropertyAsBoolean(CfgProp.SOLR_SHARESCHEMA, \"solr/cores/@shareSchema\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_TRANSIENTCACHESIZE, \"solr/cores/@transientCacheSize\");\n    storeConfigPropertyAsInt(CfgProp.SOLR_ZKCLIENTTIMEOUT, \"solr/cores/@zkClientTimeout\");\n    storeConfigPropertyAsString(CfgProp.SOLR_CONFIGSETBASEDIR, \"solr/cores/@configSetBaseDir\");\n\n    // These have no counterpart in 5.0, asking, for any of these in Solr 5.0\n    // will result in an error being\n    // thrown.\n    storeConfigPropertyAsString(CfgProp.SOLR_CORES_DEFAULT_CORE_NAME, \"solr/cores/@defaultCoreName\");\n    storeConfigPropertyAsString(CfgProp.SOLR_PERSISTENT, \"solr/@persistent\");\n    storeConfigPropertyAsString(CfgProp.SOLR_ADMINPATH, \"solr/cores/@adminPath\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","f225b9b576dc345ee8c27f91147b4afc0350511c"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["368b2f45f347fa0ff807b6474c1b8b78c5cb9e24"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["2d4e985daefcb892b529223b478c47985fc3c483"],"f225b9b576dc345ee8c27f91147b4afc0350511c":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["dc6e48afbb50ae0a22fa76e226f04fd585532938"],"f763a1acdb27217b4799d1ca51c816739835a3e0":["a7035935aa89f6951286e9005cbeb16e89a082a2"],"dc6e48afbb50ae0a22fa76e226f04fd585532938":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["f225b9b576dc345ee8c27f91147b4afc0350511c","f763a1acdb27217b4799d1ca51c816739835a3e0"],"2d4e985daefcb892b529223b478c47985fc3c483":["f763a1acdb27217b4799d1ca51c816739835a3e0"],"a7035935aa89f6951286e9005cbeb16e89a082a2":["f225b9b576dc345ee8c27f91147b4afc0350511c"],"368b2f45f347fa0ff807b6474c1b8b78c5cb9e24":["c83f985d9828d30801541f1eed26aa3169646baf"],"c83f985d9828d30801541f1eed26aa3169646baf":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["37a0f60745e53927c4c876cfe5b5a58170f0646c","dc6e48afbb50ae0a22fa76e226f04fd585532938"],"f225b9b576dc345ee8c27f91147b4afc0350511c":["37a0f60745e53927c4c876cfe5b5a58170f0646c","74f45af4339b0daf7a95c820ab88c1aea74fbce0","a7035935aa89f6951286e9005cbeb16e89a082a2"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["f225b9b576dc345ee8c27f91147b4afc0350511c"],"dc6e48afbb50ae0a22fa76e226f04fd585532938":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"f763a1acdb27217b4799d1ca51c816739835a3e0":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","2d4e985daefcb892b529223b478c47985fc3c483"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["c83f985d9828d30801541f1eed26aa3169646baf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"2d4e985daefcb892b529223b478c47985fc3c483":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"a7035935aa89f6951286e9005cbeb16e89a082a2":["f763a1acdb27217b4799d1ca51c816739835a3e0"],"368b2f45f347fa0ff807b6474c1b8b78c5cb9e24":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"c83f985d9828d30801541f1eed26aa3169646baf":["368b2f45f347fa0ff807b6474c1b8b78c5cb9e24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}