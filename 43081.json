{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","sourceNew":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet(WordlistLoader.getWordSet(exclusionlist));\n  }\n\n","sourceOld":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet(WordlistLoader.getWordSet(exclusionlist));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d162e44966cfe4ab497a76295986daa4665ffc9","date":1250682991,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","sourceNew":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet(WordlistLoader.getWordSet(exclusionlist));\n    setPreviousTokenStream(null); // force a new stemmer to be created\n  }\n\n","sourceOld":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet(WordlistLoader.getWordSet(exclusionlist));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fd9c6f9b5329d587a12a56f2b6d96b2f9b02fbe","date":1258372117,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","sourceNew":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   * @deprecated use {@link #FrenchAnalyzer(Version, Set, Set)} instead\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet(WordlistLoader.getWordSet(exclusionlist));\n    setPreviousTokenStream(null); // force a new stemmer to be created\n  }\n\n","sourceOld":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet(WordlistLoader.getWordSet(exclusionlist));\n    setPreviousTokenStream(null); // force a new stemmer to be created\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","sourceNew":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   * @deprecated use {@link #FrenchAnalyzer(Version, Set, Set)} instead\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet<Object>(WordlistLoader.getWordSet(exclusionlist));\n    setPreviousTokenStream(null); // force a new stemmer to be created\n  }\n\n","sourceOld":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   * @deprecated use {@link #FrenchAnalyzer(Version, Set, Set)} instead\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet(WordlistLoader.getWordSet(exclusionlist));\n    setPreviousTokenStream(null); // force a new stemmer to be created\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5","date":1262514702,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","sourceNew":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   * @deprecated use {@link #FrenchAnalyzer(Version, Set, Set)} instead\n   */\n  @Deprecated\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet<Object>(WordlistLoader.getWordSet(exclusionlist));\n    setPreviousTokenStream(null); // force a new stemmer to be created\n  }\n\n","sourceOld":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   * @deprecated use {@link #FrenchAnalyzer(Version, Set, Set)} instead\n   */\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet<Object>(WordlistLoader.getWordSet(exclusionlist));\n    setPreviousTokenStream(null); // force a new stemmer to be created\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer#setStemExclusionTable(File).mjava","sourceNew":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   * @deprecated use {@link #FrenchAnalyzer(Version, Set, Set)} instead\n   */\n  @Deprecated\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet<Object>(WordlistLoader.getWordSet(exclusionlist));\n    setPreviousTokenStream(null); // force a new stemmer to be created\n  }\n\n","sourceOld":"  /**\n   * Builds an exclusionlist from the words contained in the given file.\n   * @throws IOException\n   * @deprecated use {@link #FrenchAnalyzer(Version, Set, Set)} instead\n   */\n  @Deprecated\n  public void setStemExclusionTable(File exclusionlist) throws IOException {\n    excltable = new HashSet<Object>(WordlistLoader.getWordSet(exclusionlist));\n    setPreviousTokenStream(null); // force a new stemmer to be created\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"4d162e44966cfe4ab497a76295986daa4665ffc9":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7fd9c6f9b5329d587a12a56f2b6d96b2f9b02fbe":["4d162e44966cfe4ab497a76295986daa4665ffc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["7fd9c6f9b5329d587a12a56f2b6d96b2f9b02fbe"]},"commit2Childs":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4d162e44966cfe4ab497a76295986daa4665ffc9":["7fd9c6f9b5329d587a12a56f2b6d96b2f9b02fbe"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["4d162e44966cfe4ab497a76295986daa4665ffc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"7fd9c6f9b5329d587a12a56f2b6d96b2f9b02fbe":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}