{"path":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#getFieldNames(FieldOption).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#getFieldNames(FieldOption).mjava","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#getFieldNames(FieldOption).mjava","sourceNew":"  @Override\n  public Collection<String> getFieldNames(FieldOption fieldOption) {\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldSetting fi : index.getFieldSettings().values()) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.fieldName);\n      } else if (!fi.indexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.indexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.indexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storeTermVector == true && fi.storePositionWithTermVector == false && fi.storeOffsetWithTermVector == false\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.indexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.fieldName);\n      } else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector)\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.fieldName);\n      } \n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  @Override\n  public Collection<String> getFieldNames(FieldOption fieldOption) {\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldSetting fi : index.getFieldSettings().values()) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.fieldName);\n      } else if (!fi.indexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.indexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.indexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storeTermVector == true && fi.storePositionWithTermVector == false && fi.storeOffsetWithTermVector == false\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.indexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.fieldName);\n      } else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector)\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.fieldName);\n      } \n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#getFieldNames(FieldOption).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Collection<String> getFieldNames(FieldOption fieldOption) {\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldSetting fi : index.getFieldSettings().values()) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.fieldName);\n      } else if (!fi.indexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.indexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.indexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storeTermVector == true && fi.storePositionWithTermVector == false && fi.storeOffsetWithTermVector == false\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.indexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.fieldName);\n      } else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.fieldName);\n      } else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector)\n          && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.fieldName);\n      } \n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3cc749c053615f5871f3b95715fe292f34e70a53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}