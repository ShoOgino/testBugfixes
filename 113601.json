{"path":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/TokenInfoFST#findTargetArc(int,FST.Arc[Long],FST.Arc[Long],boolean).mjava","commits":[{"id":"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","date":1326399048,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/TokenInfoFST#findTargetArc(int,FST.Arc[Long],FST.Arc[Long],boolean).mjava","pathOld":"/dev/null","sourceNew":"  public FST.Arc<Long> findTargetArc(int ch, FST.Arc<Long> follow, FST.Arc<Long> arc, boolean useCache) throws IOException {\n    if (useCache && ch >= 0x3040 && ch <= cacheCeiling) {\n      assert ch != FST.END_LABEL;\n      final Arc<Long> result = rootCache[ch - 0x3040];\n      if (result == null) {\n        return null;\n      } else {\n        arc.copyFrom(result);\n        return arc;\n      }\n    } else {\n      return fst.findTargetArc(ch, follow, arc);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3be20ca1091c0b7cdb2308b9023606a5e451cec","date":1327877325,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/TokenInfoFST#findTargetArc(int,FST.Arc[Long],FST.Arc[Long],boolean,FST.BytesReader).mjava","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/TokenInfoFST#findTargetArc(int,FST.Arc[Long],FST.Arc[Long],boolean).mjava","sourceNew":"  public FST.Arc<Long> findTargetArc(int ch, FST.Arc<Long> follow, FST.Arc<Long> arc, boolean useCache, FST.BytesReader fstReader) throws IOException {\n    if (useCache && ch >= 0x3040 && ch <= cacheCeiling) {\n      assert ch != FST.END_LABEL;\n      final Arc<Long> result = rootCache[ch - 0x3040];\n      if (result == null) {\n        return null;\n      } else {\n        arc.copyFrom(result);\n        return arc;\n      }\n    } else {\n      return fst.findTargetArc(ch, follow, arc, fstReader);\n    }\n  }\n\n","sourceOld":"  public FST.Arc<Long> findTargetArc(int ch, FST.Arc<Long> follow, FST.Arc<Long> arc, boolean useCache) throws IOException {\n    if (useCache && ch >= 0x3040 && ch <= cacheCeiling) {\n      assert ch != FST.END_LABEL;\n      final Arc<Long> result = rootCache[ch - 0x3040];\n      if (result == null) {\n        return null;\n      } else {\n        arc.copyFrom(result);\n        return arc;\n      }\n    } else {\n      return fst.findTargetArc(ch, follow, arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/TokenInfoFST#findTargetArc(int,FST.Arc[Long],FST.Arc[Long],boolean,FST.BytesReader).mjava","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/TokenInfoFST#findTargetArc(int,FST.Arc[Long],FST.Arc[Long],boolean).mjava","sourceNew":"  public FST.Arc<Long> findTargetArc(int ch, FST.Arc<Long> follow, FST.Arc<Long> arc, boolean useCache, FST.BytesReader fstReader) throws IOException {\n    if (useCache && ch >= 0x3040 && ch <= cacheCeiling) {\n      assert ch != FST.END_LABEL;\n      final Arc<Long> result = rootCache[ch - 0x3040];\n      if (result == null) {\n        return null;\n      } else {\n        arc.copyFrom(result);\n        return arc;\n      }\n    } else {\n      return fst.findTargetArc(ch, follow, arc, fstReader);\n    }\n  }\n\n","sourceOld":"  public FST.Arc<Long> findTargetArc(int ch, FST.Arc<Long> follow, FST.Arc<Long> arc, boolean useCache) throws IOException {\n    if (useCache && ch >= 0x3040 && ch <= cacheCeiling) {\n      assert ch != FST.END_LABEL;\n      final Arc<Long> result = rootCache[ch - 0x3040];\n      if (result == null) {\n        return null;\n      } else {\n        arc.copyFrom(result);\n        return arc;\n      }\n    } else {\n      return fst.findTargetArc(ch, follow, arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/TokenInfoFST#findTargetArc(int,FST.Arc[Long],FST.Arc[Long],boolean,FST.BytesReader).mjava","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/TokenInfoFST#findTargetArc(int,FST.Arc[Long],FST.Arc[Long],boolean).mjava","sourceNew":"  public FST.Arc<Long> findTargetArc(int ch, FST.Arc<Long> follow, FST.Arc<Long> arc, boolean useCache, FST.BytesReader fstReader) throws IOException {\n    if (useCache && ch >= 0x3040 && ch <= cacheCeiling) {\n      assert ch != FST.END_LABEL;\n      final Arc<Long> result = rootCache[ch - 0x3040];\n      if (result == null) {\n        return null;\n      } else {\n        arc.copyFrom(result);\n        return arc;\n      }\n    } else {\n      return fst.findTargetArc(ch, follow, arc, fstReader);\n    }\n  }\n\n","sourceOld":"  public FST.Arc<Long> findTargetArc(int ch, FST.Arc<Long> follow, FST.Arc<Long> arc, boolean useCache) throws IOException {\n    if (useCache && ch >= 0x3040 && ch <= cacheCeiling) {\n      assert ch != FST.END_LABEL;\n      final Arc<Long> result = rootCache[ch - 0x3040];\n      if (result == null) {\n        return null;\n      } else {\n        arc.copyFrom(result);\n        return arc;\n      }\n    } else {\n      return fst.findTargetArc(ch, follow, arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b3be20ca1091c0b7cdb2308b9023606a5e451cec"]},"commit2Childs":{"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["b3be20ca1091c0b7cdb2308b9023606a5e451cec","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}