{"path":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testByteCount().mjava","commits":[{"id":"c661dcad9680b8a6ce5bf2cc583a69ec965328bc","date":1352297862,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testByteCount().mjava","pathOld":"/dev/null","sourceNew":"  public void testByteCount() {\n    final int iters = atLeast(3);\n    for (int i = 0; i < iters; ++i) {\n      final int valueCount = RandomInts.randomIntBetween(random(), 1, Integer.MAX_VALUE);\n      for (PackedInts.Format format : PackedInts.Format.values()) {\n        for (int bpv = 1; bpv <= 64; ++bpv) {\n          final long byteCount = format.byteCount(PackedInts.VERSION_CURRENT, valueCount, bpv);\n          String msg = \"format=\" + format + \", byteCount=\" + byteCount + \", valueCount=\" + valueCount + \", bpv=\" + bpv;\n          assertTrue(msg, byteCount * 8 >= (long) valueCount * bpv);\n          if (format == PackedInts.Format.PACKED) {\n            assertTrue(msg, (byteCount - 1) * 8 < (long) valueCount * bpv);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6448f67be45147de82a85cd903fec34e8930da75","date":1477041277,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testByteCount().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testByteCount().mjava","sourceNew":"  public void testByteCount() {\n    final int iters = atLeast(3);\n    for (int i = 0; i < iters; ++i) {\n      final int valueCount = RandomNumbers.randomIntBetween(random(), 1, Integer.MAX_VALUE);\n      for (PackedInts.Format format : PackedInts.Format.values()) {\n        for (int bpv = 1; bpv <= 64; ++bpv) {\n          final long byteCount = format.byteCount(PackedInts.VERSION_CURRENT, valueCount, bpv);\n          String msg = \"format=\" + format + \", byteCount=\" + byteCount + \", valueCount=\" + valueCount + \", bpv=\" + bpv;\n          assertTrue(msg, byteCount * 8 >= (long) valueCount * bpv);\n          if (format == PackedInts.Format.PACKED) {\n            assertTrue(msg, (byteCount - 1) * 8 < (long) valueCount * bpv);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void testByteCount() {\n    final int iters = atLeast(3);\n    for (int i = 0; i < iters; ++i) {\n      final int valueCount = RandomInts.randomIntBetween(random(), 1, Integer.MAX_VALUE);\n      for (PackedInts.Format format : PackedInts.Format.values()) {\n        for (int bpv = 1; bpv <= 64; ++bpv) {\n          final long byteCount = format.byteCount(PackedInts.VERSION_CURRENT, valueCount, bpv);\n          String msg = \"format=\" + format + \", byteCount=\" + byteCount + \", valueCount=\" + valueCount + \", bpv=\" + bpv;\n          assertTrue(msg, byteCount * 8 >= (long) valueCount * bpv);\n          if (format == PackedInts.Format.PACKED) {\n            assertTrue(msg, (byteCount - 1) * 8 < (long) valueCount * bpv);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testByteCount().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts#testByteCount().mjava","sourceNew":"  public void testByteCount() {\n    final int iters = atLeast(3);\n    for (int i = 0; i < iters; ++i) {\n      final int valueCount = RandomNumbers.randomIntBetween(random(), 1, Integer.MAX_VALUE);\n      for (PackedInts.Format format : PackedInts.Format.values()) {\n        for (int bpv = 1; bpv <= 64; ++bpv) {\n          final long byteCount = format.byteCount(PackedInts.VERSION_CURRENT, valueCount, bpv);\n          String msg = \"format=\" + format + \", byteCount=\" + byteCount + \", valueCount=\" + valueCount + \", bpv=\" + bpv;\n          assertTrue(msg, byteCount * 8 >= (long) valueCount * bpv);\n          if (format == PackedInts.Format.PACKED) {\n            assertTrue(msg, (byteCount - 1) * 8 < (long) valueCount * bpv);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void testByteCount() {\n    final int iters = atLeast(3);\n    for (int i = 0; i < iters; ++i) {\n      final int valueCount = RandomInts.randomIntBetween(random(), 1, Integer.MAX_VALUE);\n      for (PackedInts.Format format : PackedInts.Format.values()) {\n        for (int bpv = 1; bpv <= 64; ++bpv) {\n          final long byteCount = format.byteCount(PackedInts.VERSION_CURRENT, valueCount, bpv);\n          String msg = \"format=\" + format + \", byteCount=\" + byteCount + \", valueCount=\" + valueCount + \", bpv=\" + bpv;\n          assertTrue(msg, byteCount * 8 >= (long) valueCount * bpv);\n          if (format == PackedInts.Format.PACKED) {\n            assertTrue(msg, (byteCount - 1) * 8 < (long) valueCount * bpv);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6448f67be45147de82a85cd903fec34e8930da75":["c661dcad9680b8a6ce5bf2cc583a69ec965328bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["c661dcad9680b8a6ce5bf2cc583a69ec965328bc","6448f67be45147de82a85cd903fec34e8930da75"],"c661dcad9680b8a6ce5bf2cc583a69ec965328bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6448f67be45147de82a85cd903fec34e8930da75"]},"commit2Childs":{"6448f67be45147de82a85cd903fec34e8930da75":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c661dcad9680b8a6ce5bf2cc583a69ec965328bc"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"c661dcad9680b8a6ce5bf2cc583a69ec965328bc":["6448f67be45147de82a85cd903fec34e8930da75","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}