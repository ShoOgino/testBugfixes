{"path":"lucene/core/src/test/org/apache/lucene/store/TestRateLimitedDirectoryWrapper#getDirectory(Path).mjava","commits":[{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRateLimitedDirectoryWrapper#getDirectory(Path).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRateLimitedDirectoryWrapper#getDirectory(File).mjava","sourceNew":"  @Override\n  protected Directory getDirectory(Path path) {\n    Directory in = newFSDirectory(path);\n    if (in instanceof MockDirectoryWrapper) {\n      // test manipulates directory directly\n      ((MockDirectoryWrapper)in).setEnableVirusScanner(false);\n    }\n    RateLimitedDirectoryWrapper dir = new RateLimitedDirectoryWrapper(in);\n    RateLimiter limiter = new RateLimiter.SimpleRateLimiter(.1 + 3*random().nextDouble());\n    dir.setRateLimiter(limiter, IOContext.Context.MERGE);\n    return dir;\n  }\n\n","sourceOld":"  @Override\n  protected Directory getDirectory(File path) {\n    Directory in = newFSDirectory(path);\n    if (in instanceof MockDirectoryWrapper) {\n      // test manipulates directory directly\n      ((MockDirectoryWrapper)in).setEnableVirusScanner(false);\n    }\n    RateLimitedDirectoryWrapper dir = new RateLimitedDirectoryWrapper(in);\n    RateLimiter limiter = new RateLimiter.SimpleRateLimiter(.1 + 3*random().nextDouble());\n    dir.setRateLimiter(limiter, IOContext.Context.MERGE);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad5001f542174b140368d7257e22ee26851c3578","date":1417052494,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRateLimitedDirectoryWrapper#getDirectory(Path).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRateLimitedDirectoryWrapper#getDirectory(Path).mjava","sourceNew":"  @Override\n  protected Directory getDirectory(Path path) {\n    Directory in = newFSDirectory(path);\n    if (in instanceof MockDirectoryWrapper) {\n      // test manipulates directory directly\n      ((MockDirectoryWrapper)in).setEnableVirusScanner(false);\n    }\n    RateLimitedDirectoryWrapper dir = new RateLimitedDirectoryWrapper(in);\n    RateLimiter limiter = new RateLimiter.SimpleRateLimiter(TestUtil.nextInt(random(), 10, 40));\n    dir.setRateLimiter(limiter, IOContext.Context.MERGE);\n    return dir;\n  }\n\n","sourceOld":"  @Override\n  protected Directory getDirectory(Path path) {\n    Directory in = newFSDirectory(path);\n    if (in instanceof MockDirectoryWrapper) {\n      // test manipulates directory directly\n      ((MockDirectoryWrapper)in).setEnableVirusScanner(false);\n    }\n    RateLimitedDirectoryWrapper dir = new RateLimitedDirectoryWrapper(in);\n    RateLimiter limiter = new RateLimiter.SimpleRateLimiter(.1 + 3*random().nextDouble());\n    dir.setRateLimiter(limiter, IOContext.Context.MERGE);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5faf65b6692f15cca0f87bf8666c87899afc619f","date":1420468108,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRateLimitedDirectoryWrapper#getDirectory(Path).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected Directory getDirectory(Path path) {\n    Directory in = newFSDirectory(path);\n    if (in instanceof MockDirectoryWrapper) {\n      // test manipulates directory directly\n      ((MockDirectoryWrapper)in).setEnableVirusScanner(false);\n    }\n    RateLimitedDirectoryWrapper dir = new RateLimitedDirectoryWrapper(in);\n    RateLimiter limiter = new RateLimiter.SimpleRateLimiter(TestUtil.nextInt(random(), 10, 40));\n    dir.setRateLimiter(limiter, IOContext.Context.MERGE);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ad5001f542174b140368d7257e22ee26851c3578":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5faf65b6692f15cca0f87bf8666c87899afc619f":["ad5001f542174b140368d7257e22ee26851c3578"],"f4abec28b874149a7223e32cc7a01704c27790de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5faf65b6692f15cca0f87bf8666c87899afc619f"]},"commit2Childs":{"ad5001f542174b140368d7257e22ee26851c3578":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4abec28b874149a7223e32cc7a01704c27790de"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4abec28b874149a7223e32cc7a01704c27790de":["ad5001f542174b140368d7257e22ee26851c3578"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}