{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGammaDistribution().mjava","commits":[{"id":"e66b7e53b1b8958fb91f9d199b7520fe429ecdfc","date":1506622118,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGammaDistribution().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cc9c0610e23e43d2705309634799dddc2b60f74a","date":1506648973,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGammaDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGammaDistribution().mjava","sourceNew":"  @Test\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":"  @Test\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"let(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGammaDistribution().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testGammaDistribution().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testGammaDistribution().mjava","sourceNew":"  @Test\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","sourceOld":"  @Test\n  public void testGammaDistribution() throws Exception {\n    String cexpr = \"#comment\\nlet(echo=true, \" +\n        \"a=describe(sample(gammaDistribution(1, 10),10000)), \" +\n        \"\\n# commment\\n\"+\n        \"b=describe(sample(gammaDistribution(3, 10),10000)), \" +\n        \"c=describe(sample(gammaDistribution(5, 10),10000)),\" +\n        \"d=describe(sample(gammaDistribution(7, 10),10000)),\" +\n        \"e=mean(sample(gammaDistribution(1, 10),10000)),\" +\n        \"f=mean(sample(gammaDistribution(1, 20),10000)),\" +\n        \"g=mean(sample(gammaDistribution(1, 30),10000)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Map a = (Map)tuples.get(0).get(\"a\");\n    Map b = (Map)tuples.get(0).get(\"b\");\n    Map c = (Map)tuples.get(0).get(\"c\");\n    Map d = (Map)tuples.get(0).get(\"d\");\n\n    Number sa = (Number)a.get(\"skewness\");\n    Number sb = (Number)b.get(\"skewness\");\n    Number sc = (Number)c.get(\"skewness\");\n    Number sd = (Number)d.get(\"skewness\");\n\n    //Test shape change\n    assertTrue(sa.doubleValue() > sb.doubleValue());\n    assertTrue(sb.doubleValue() > sc.doubleValue());\n    assertTrue(sc.doubleValue() > sd.doubleValue());\n\n    //Test scale change\n\n    Number e = (Number)tuples.get(0).get(\"e\");\n    Number f = (Number)tuples.get(0).get(\"f\");\n    Number g = (Number)tuples.get(0).get(\"g\");\n\n    assertTrue(e.doubleValue() < f.doubleValue());\n    assertTrue(f.doubleValue() < g.doubleValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"cc9c0610e23e43d2705309634799dddc2b60f74a":["e66b7e53b1b8958fb91f9d199b7520fe429ecdfc"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc9c0610e23e43d2705309634799dddc2b60f74a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e66b7e53b1b8958fb91f9d199b7520fe429ecdfc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cc9c0610e23e43d2705309634799dddc2b60f74a"]},"commit2Childs":{"cc9c0610e23e43d2705309634799dddc2b60f74a":["6240b74b884c5587f2a4062dd27d6c32bf228889","8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6240b74b884c5587f2a4062dd27d6c32bf228889","e66b7e53b1b8958fb91f9d199b7520fe429ecdfc"],"e66b7e53b1b8958fb91f9d199b7520fe429ecdfc":["cc9c0610e23e43d2705309634799dddc2b60f74a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}