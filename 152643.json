{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","commits":[{"id":"79509167584beb75c0b777d2b701adeb1f06d885","date":1441841855,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","pathOld":"/dev/null","sourceNew":"  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] sorts,\n                     int limit) {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.buckets = buckets;\n    this.metrics = metrics;\n    this.limit   = limit;\n    this.collection = collection;\n    this.sorts = sorts;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"333d804f5abfaf34c57493306a4cb2e01e55662d","date":1447206304,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","sourceNew":"  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] sorts,\n                     int limit) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.buckets = buckets;\n    this.metrics = metrics;\n    this.limit   = limit;\n    this.collection = collection;\n    this.sorts = sorts;\n    \n    // In a facet world it only makes sense to have the same field name in all of the sorters\n    // Because FieldComparator allows for left and right field names we will need to validate\n    // that they are the same\n    for(FieldComparator sort : sorts){\n      if(sort.hasDifferentFieldNames()){\n        throw new IOException(\"Invalid FacetStream - all sorts must be constructed with a single field name.\");\n      }\n    }\n  }\n\n","sourceOld":"  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] sorts,\n                     int limit) {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.buckets = buckets;\n    this.metrics = metrics;\n    this.limit   = limit;\n    this.collection = collection;\n    this.sorts = sorts;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5287d62ad5da27d35a88ada646ae7d9adfb76826","date":1450041712,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","sourceNew":"  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, props, buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","sourceOld":"  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] sorts,\n                     int limit) throws IOException {\n    this.zkHost  = zkHost;\n    this.props   = props;\n    this.buckets = buckets;\n    this.metrics = metrics;\n    this.limit   = limit;\n    this.collection = collection;\n    this.sorts = sorts;\n    \n    // In a facet world it only makes sense to have the same field name in all of the sorters\n    // Because FieldComparator allows for left and right field names we will need to validate\n    // that they are the same\n    for(FieldComparator sort : sorts){\n      if(sort.hasDifferentFieldNames()){\n        throw new IOException(\"Invalid FacetStream - all sorts must be constructed with a single field name.\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"826d15444ddf61716dc768c229cd54b2c2ccce1c","date":1462822652,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","sourceNew":"  /*\n   *\n   * @deprecated. Use the form that takes a SolrParams rather than Map&ltString, String&gt;\n   */\n  @Deprecated\n  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, new MapSolrParams(props), buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","sourceOld":"  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, props, buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e66a459d38c1c4a2f97128433dab546f683a9fed","date":1462873476,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","sourceNew":"  /*\n   *\n   * @deprecated. Use the form that takes a SolrParams rather than Map&ltString, String&gt;\n   */\n  @Deprecated\n  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, new MapSolrParams(props), buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","sourceOld":"  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, props, buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","sourceNew":"  /*\n   *\n   * @deprecated. Use the form that takes a SolrParams rather than Map&ltString, String&gt;\n   */\n  @Deprecated\n  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, new MapSolrParams(props), buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","sourceOld":"  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, props, buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","sourceNew":"  /*\n   *\n   * @deprecated. Use the form that takes a SolrParams rather than Map&ltString, String&gt;\n   */\n  @Deprecated\n  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, new MapSolrParams(props), buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","sourceOld":"  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, props, buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63a1978c6710c767fa084741e3d6424840003a62","date":1495850671,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","sourceNew":null,"sourceOld":"  /*\n   *\n   * @deprecated. Use the form that takes a SolrParams rather than Map&ltString, String&gt;\n   */\n  @Deprecated\n  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, new MapSolrParams(props), buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","sourceNew":null,"sourceOld":"  /*\n   *\n   * @deprecated. Use the form that takes a SolrParams rather than Map&ltString, String&gt;\n   */\n  @Deprecated\n  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, new MapSolrParams(props), buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#FacetStream(String,String,Map[String,String],Bucket[],Metric[],FieldComparator[],int).mjava","sourceNew":null,"sourceOld":"  /*\n   *\n   * @deprecated. Use the form that takes a SolrParams rather than Map&ltString, String&gt;\n   */\n  @Deprecated\n  public FacetStream(String zkHost,\n                     String collection,\n                     Map<String, String> props,\n                     Bucket[] buckets,\n                     Metric[] metrics,\n                     FieldComparator[] bucketSorts,\n                     int bucketSizeLimit) throws IOException {\n    init(collection, new MapSolrParams(props), buckets, bucketSorts, metrics, bucketSizeLimit, zkHost);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["d470c8182e92b264680e34081b75e70a9f2b3c89","63a1978c6710c767fa084741e3d6424840003a62"],"5287d62ad5da27d35a88ada646ae7d9adfb76826":["333d804f5abfaf34c57493306a4cb2e01e55662d"],"63a1978c6710c767fa084741e3d6424840003a62":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"333d804f5abfaf34c57493306a4cb2e01e55662d":["79509167584beb75c0b777d2b701adeb1f06d885"],"79509167584beb75c0b777d2b701adeb1f06d885":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e66a459d38c1c4a2f97128433dab546f683a9fed":["5287d62ad5da27d35a88ada646ae7d9adfb76826","826d15444ddf61716dc768c229cd54b2c2ccce1c"],"826d15444ddf61716dc768c229cd54b2c2ccce1c":["5287d62ad5da27d35a88ada646ae7d9adfb76826"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["d470c8182e92b264680e34081b75e70a9f2b3c89","63a1978c6710c767fa084741e3d6424840003a62"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5287d62ad5da27d35a88ada646ae7d9adfb76826","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["5287d62ad5da27d35a88ada646ae7d9adfb76826","826d15444ddf61716dc768c229cd54b2c2ccce1c"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"63a1978c6710c767fa084741e3d6424840003a62":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"5287d62ad5da27d35a88ada646ae7d9adfb76826":["e66a459d38c1c4a2f97128433dab546f683a9fed","826d15444ddf61716dc768c229cd54b2c2ccce1c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"333d804f5abfaf34c57493306a4cb2e01e55662d":["5287d62ad5da27d35a88ada646ae7d9adfb76826"],"79509167584beb75c0b777d2b701adeb1f06d885":["333d804f5abfaf34c57493306a4cb2e01e55662d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["79509167584beb75c0b777d2b701adeb1f06d885"],"e66a459d38c1c4a2f97128433dab546f683a9fed":[],"826d15444ddf61716dc768c229cd54b2c2ccce1c":["e66a459d38c1c4a2f97128433dab546f683a9fed","d470c8182e92b264680e34081b75e70a9f2b3c89"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["e9017cf144952056066919f1ebc7897ff9bd71b1","63a1978c6710c767fa084741e3d6424840003a62","d1f5728f32a4a256b36cfabd7a2636452f599bb9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","e66a459d38c1c4a2f97128433dab546f683a9fed","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}