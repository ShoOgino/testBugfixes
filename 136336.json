{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLoadCertainFields().mjava","commits":[{"id":"a4de1c9bc442e26377578457538c8fcbccf1ecf5","date":1323894488,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLoadCertainFields().mjava","pathOld":"/dev/null","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    IndexReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d40b62adb64d8f7b2f85ee849349cfb0bef03f45","date":1327855938,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLoadCertainFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    IndexReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLoadCertainFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    IndexReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#testLoadCertainFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLoadCertainFields().mjava","sourceNew":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testLoadCertainFields() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir);\n    Document doc = new Document();\n    doc.add(newField(\"field1\", \"foobar\", StringField.TYPE_STORED));\n    doc.add(newField(\"field2\", \"foobaz\", StringField.TYPE_STORED));\n    writer.addDocument(doc);\n    DirectoryReader r = writer.getReader();\n    writer.close();\n    Set<String> fieldsToLoad = new HashSet<String>();\n    assertEquals(0, r.document(0, fieldsToLoad).getFields().size());\n    fieldsToLoad.add(\"field1\");\n    Document doc2 = r.document(0, fieldsToLoad);\n    assertEquals(1, doc2.getFields().size());\n    assertEquals(\"foobar\", doc2.get(\"field1\"));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a4de1c9bc442e26377578457538c8fcbccf1ecf5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["a4de1c9bc442e26377578457538c8fcbccf1ecf5"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["a4de1c9bc442e26377578457538c8fcbccf1ecf5","d40b62adb64d8f7b2f85ee849349cfb0bef03f45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"a4de1c9bc442e26377578457538c8fcbccf1ecf5":["d40b62adb64d8f7b2f85ee849349cfb0bef03f45","5cab9a86bd67202d20b6adc463008c8e982b070a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4de1c9bc442e26377578457538c8fcbccf1ecf5"],"d40b62adb64d8f7b2f85ee849349cfb0bef03f45":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}