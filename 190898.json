{"path":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#testStreamUrl().mjava","commits":[{"id":"c0a5c042827795d2f0b44db0cc8cd534b09d6d28","date":1319687600,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#testStreamUrl().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testStreamUrl() throws Exception {\n    CommonsHttpSolrServer solrServer = (CommonsHttpSolrServer) getSolrServer();\n    String streamUrl = solrServer.getBaseURL()+\"/select?q=*:*&fl=id&wt=csv\";\n\n    String getUrl = solrServer.getBaseURL()+\"/debug/dump?wt=xml&stream.url=\"+URLEncoder.encode(streamUrl,\"UTF-8\");\n    String content = getUrlForString(getUrl);\n    assertTrue(content.contains(\"xxxx\"));\n    //System.out.println(content);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3941895748f08018a2a9b5ac13e5fcadc7e89e0","date":1332737017,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#testStreamUrl().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#testStreamUrl().mjava","sourceNew":"  @Test\n  public void testStreamUrl() throws Exception {\n    CommonsHttpSolrServer solrServer = (CommonsHttpSolrServer) getSolrServer();\n    String streamUrl = solrServer.getBaseURL()+\"/select?q=*:*&fl=id&wt=csv\";\n\n    String getUrl = solrServer.getBaseURL()+\"/debug/dump?wt=xml&stream.url=\"+URLEncoder.encode(streamUrl,\"UTF-8\");\n    String content = getUrlForString(getUrl);\n    assertTrue(content.contains(\"1234\"));\n    //System.out.println(content);\n  }\n\n","sourceOld":"  @Test\n  public void testStreamUrl() throws Exception {\n    CommonsHttpSolrServer solrServer = (CommonsHttpSolrServer) getSolrServer();\n    String streamUrl = solrServer.getBaseURL()+\"/select?q=*:*&fl=id&wt=csv\";\n\n    String getUrl = solrServer.getBaseURL()+\"/debug/dump?wt=xml&stream.url=\"+URLEncoder.encode(streamUrl,\"UTF-8\");\n    String content = getUrlForString(getUrl);\n    assertTrue(content.contains(\"xxxx\"));\n    //System.out.println(content);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#testStreamUrl().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#testStreamUrl().mjava","sourceNew":"  @Test\n  public void testStreamUrl() throws Exception {\n    HttpSolrServer solrServer = (HttpSolrServer) getSolrServer();\n    String streamUrl = solrServer.getBaseURL()+\"/select?q=*:*&fl=id&wt=csv\";\n\n    String getUrl = solrServer.getBaseURL()+\"/debug/dump?wt=xml&stream.url=\"+URLEncoder.encode(streamUrl,\"UTF-8\");\n    String content = getUrlForString(getUrl);\n    assertTrue(content.contains(\"1234\"));\n    //System.out.println(content);\n  }\n\n","sourceOld":"  @Test\n  public void testStreamUrl() throws Exception {\n    CommonsHttpSolrServer solrServer = (CommonsHttpSolrServer) getSolrServer();\n    String streamUrl = solrServer.getBaseURL()+\"/select?q=*:*&fl=id&wt=csv\";\n\n    String getUrl = solrServer.getBaseURL()+\"/debug/dump?wt=xml&stream.url=\"+URLEncoder.encode(streamUrl,\"UTF-8\");\n    String content = getUrlForString(getUrl);\n    assertTrue(content.contains(\"1234\"));\n    //System.out.println(content);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#testStreamUrl().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#testStreamUrl().mjava","sourceNew":"  @Test\n  public void testStreamUrl() throws Exception {\n    HttpSolrClient client = (HttpSolrClient) getSolrClient();\n    String streamUrl = client.getBaseURL()+\"/select?q=*:*&fl=id&wt=csv\";\n\n    String getUrl = client.getBaseURL()+\"/debug/dump?wt=xml&stream.url=\"+URLEncoder.encode(streamUrl,\"UTF-8\");\n    String content = getUrlForString(getUrl);\n    assertTrue(content.contains(\"1234\"));\n    //System.out.println(content);\n  }\n\n","sourceOld":"  @Test\n  public void testStreamUrl() throws Exception {\n    HttpSolrServer solrServer = (HttpSolrServer) getSolrServer();\n    String streamUrl = solrServer.getBaseURL()+\"/select?q=*:*&fl=id&wt=csv\";\n\n    String getUrl = solrServer.getBaseURL()+\"/debug/dump?wt=xml&stream.url=\"+URLEncoder.encode(streamUrl,\"UTF-8\");\n    String content = getUrlForString(getUrl);\n    assertTrue(content.contains(\"1234\"));\n    //System.out.println(content);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["e3941895748f08018a2a9b5ac13e5fcadc7e89e0"],"bafca15d8e408346a67f4282ad1143b88023893b":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"c0a5c042827795d2f0b44db0cc8cd534b09d6d28":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e3941895748f08018a2a9b5ac13e5fcadc7e89e0":["c0a5c042827795d2f0b44db0cc8cd534b09d6d28"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0a5c042827795d2f0b44db0cc8cd534b09d6d28"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0a5c042827795d2f0b44db0cc8cd534b09d6d28":["e3941895748f08018a2a9b5ac13e5fcadc7e89e0"],"e3941895748f08018a2a9b5ac13e5fcadc7e89e0":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}