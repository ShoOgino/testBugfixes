{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#addSortedSetField(FieldInfo,DocValuesProducer).mjava","commits":[{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#addSortedSetField(FieldInfo,DocValuesProducer).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","sourceNew":"  // note: this might not be the most efficient... but it's fairly simple\n  @Override\n  public void addSortedSetField(FieldInfo field, DocValuesProducer valuesProducer) throws IOException {\n    Iterable<BytesRef> values = LegacyDocValuesIterables.valuesIterable(valuesProducer.getSortedSet(field));\n    Iterable<Number> docToOrdCount = LegacyDocValuesIterables.sortedSetOrdCountIterable(valuesProducer, field, maxDoc);\n    Iterable<Number> ords = LegacyDocValuesIterables.sortedSetOrdsIterable(valuesProducer, field);\n    \n    meta.writeVInt(field.number);\n    \n    if (isSingleValued(docToOrdCount)) {\n      meta.writeByte(SORTED_SET_SINGLETON);\n      // Write ordinals for all docs, appended into one big\n      // numerics:\n      addNumericFieldValues(field, singletonView(docToOrdCount, ords, -1L));\n      \n      // write the values as binary\n      addBinaryFieldValues(field, values);\n    } else {\n      meta.writeByte(SORTED_SET);\n\n      // First write docToOrdCounts, except we \"aggregate\" the\n      // counts so they turn into addresses, and add a final\n      // value = the total aggregate:\n      addNumericFieldValues(field, countToAddressIterator(docToOrdCount));\n\n      // Write ordinals for all docs, appended into one big\n      // numerics:\n      addNumericFieldValues(field, ords);\n      \n      // write the values as binary\n      addBinaryFieldValues(field, values);\n    }\n  }\n\n","sourceOld":"  // note: this might not be the most efficient... but it's fairly simple\n  @Override\n  public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, final Iterable<Number> docToOrdCount, final Iterable<Number> ords) throws IOException {\n    meta.writeVInt(field.number);\n    \n    if (isSingleValued(docToOrdCount)) {\n      meta.writeByte(SORTED_SET_SINGLETON);\n      // Write ordinals for all docs, appended into one big\n      // numerics:\n      addNumericFieldValues(field, singletonView(docToOrdCount, ords, -1L));\n      \n      // write the values as binary\n      addBinaryFieldValues(field, values);\n    } else {\n      meta.writeByte(SORTED_SET);\n\n      // First write docToOrdCounts, except we \"aggregate\" the\n      // counts so they turn into addresses, and add a final\n      // value = the total aggregate:\n      addNumericFieldValues(field, countToAddressIterator(docToOrdCount));\n\n      // Write ordinals for all docs, appended into one big\n      // numerics:\n      addNumericFieldValues(field, ords);\n      \n      // write the values as binary\n      addBinaryFieldValues(field, values);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#addSortedSetField(FieldInfo,DocValuesProducer).mjava","pathOld":"/dev/null","sourceNew":"  // note: this might not be the most efficient... but it's fairly simple\n  @Override\n  public void addSortedSetField(FieldInfo field, DocValuesProducer valuesProducer) throws IOException {\n    Iterable<BytesRef> values = LegacyDocValuesIterables.valuesIterable(valuesProducer.getSortedSet(field));\n    Iterable<Number> docToOrdCount = LegacyDocValuesIterables.sortedSetOrdCountIterable(valuesProducer, field, maxDoc);\n    Iterable<Number> ords = LegacyDocValuesIterables.sortedSetOrdsIterable(valuesProducer, field);\n    \n    meta.writeVInt(field.number);\n    \n    if (isSingleValued(docToOrdCount)) {\n      meta.writeByte(SORTED_SET_SINGLETON);\n      // Write ordinals for all docs, appended into one big\n      // numerics:\n      addNumericFieldValues(field, singletonView(docToOrdCount, ords, -1L));\n      \n      // write the values as binary\n      addBinaryFieldValues(field, values);\n    } else {\n      meta.writeByte(SORTED_SET);\n\n      // First write docToOrdCounts, except we \"aggregate\" the\n      // counts so they turn into addresses, and add a final\n      // value = the total aggregate:\n      addNumericFieldValues(field, countToAddressIterator(docToOrdCount));\n\n      // Write ordinals for all docs, appended into one big\n      // numerics:\n      addNumericFieldValues(field, ords);\n      \n      // write the values as binary\n      addBinaryFieldValues(field, values);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#addSortedSetField(FieldInfo,DocValuesProducer).mjava","pathOld":"/dev/null","sourceNew":"  // note: this might not be the most efficient... but it's fairly simple\n  @Override\n  public void addSortedSetField(FieldInfo field, DocValuesProducer valuesProducer) throws IOException {\n    Iterable<BytesRef> values = LegacyDocValuesIterables.valuesIterable(valuesProducer.getSortedSet(field));\n    Iterable<Number> docToOrdCount = LegacyDocValuesIterables.sortedSetOrdCountIterable(valuesProducer, field, maxDoc);\n    Iterable<Number> ords = LegacyDocValuesIterables.sortedSetOrdsIterable(valuesProducer, field);\n    \n    meta.writeVInt(field.number);\n    \n    if (isSingleValued(docToOrdCount)) {\n      meta.writeByte(SORTED_SET_SINGLETON);\n      // Write ordinals for all docs, appended into one big\n      // numerics:\n      addNumericFieldValues(field, singletonView(docToOrdCount, ords, -1L));\n      \n      // write the values as binary\n      addBinaryFieldValues(field, values);\n    } else {\n      meta.writeByte(SORTED_SET);\n\n      // First write docToOrdCounts, except we \"aggregate\" the\n      // counts so they turn into addresses, and add a final\n      // value = the total aggregate:\n      addNumericFieldValues(field, countToAddressIterator(docToOrdCount));\n\n      // Write ordinals for all docs, appended into one big\n      // numerics:\n      addNumericFieldValues(field, ords);\n      \n      // write the values as binary\n      addBinaryFieldValues(field, values);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f18fb78980c55a781fd9fdc505634171059b1d","date":1567674462,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#addSortedSetField(FieldInfo,DocValuesProducer).mjava","sourceNew":null,"sourceOld":"  // note: this might not be the most efficient... but it's fairly simple\n  @Override\n  public void addSortedSetField(FieldInfo field, DocValuesProducer valuesProducer) throws IOException {\n    Iterable<BytesRef> values = LegacyDocValuesIterables.valuesIterable(valuesProducer.getSortedSet(field));\n    Iterable<Number> docToOrdCount = LegacyDocValuesIterables.sortedSetOrdCountIterable(valuesProducer, field, maxDoc);\n    Iterable<Number> ords = LegacyDocValuesIterables.sortedSetOrdsIterable(valuesProducer, field);\n    \n    meta.writeVInt(field.number);\n    \n    if (isSingleValued(docToOrdCount)) {\n      meta.writeByte(SORTED_SET_SINGLETON);\n      // Write ordinals for all docs, appended into one big\n      // numerics:\n      addNumericFieldValues(field, singletonView(docToOrdCount, ords, -1L));\n      \n      // write the values as binary\n      addBinaryFieldValues(field, values);\n    } else {\n      meta.writeByte(SORTED_SET);\n\n      // First write docToOrdCounts, except we \"aggregate\" the\n      // counts so they turn into addresses, and add a final\n      // value = the total aggregate:\n      addNumericFieldValues(field, countToAddressIterator(docToOrdCount));\n\n      // Write ordinals for all docs, appended into one big\n      // numerics:\n      addNumericFieldValues(field, ords);\n      \n      // write the values as binary\n      addBinaryFieldValues(field, values);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"74f18fb78980c55a781fd9fdc505634171059b1d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74f18fb78980c55a781fd9fdc505634171059b1d"]},"commit2Childs":{"74f18fb78980c55a781fd9fdc505634171059b1d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["74f18fb78980c55a781fd9fdc505634171059b1d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}