{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","commits":[{"id":"e25c332f157326faecb36f76173033c1284776a5","date":1414729852,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","pathOld":"/dev/null","sourceNew":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n        Object resp = ObjectBuilder.getVal(new JSONParser(EntityUtils.toString(entity)));\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["72c5a4ac2903750897fc029f40c01fd88a29815a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"72c5a4ac2903750897fc029f40c01fd88a29815a","date":1422370832,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","sourceNew":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n\n        String respBody = EntityUtils.toString(entity);\n        Object resp = null;\n        try {\n          resp = ObjectBuilder.getVal(new JSONParser(respBody));\n        } catch (JSONParser.ParseException pe) {\n          throw new ClientProtocolException(\"Expected JSON response from server but received: \"+respBody+\n              \"\\nTypically, this indicates a problem with the Solr server; check the Solr server logs for more information.\");\n        }\n\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","sourceOld":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n        Object resp = ObjectBuilder.getVal(new JSONParser(EntityUtils.toString(entity)));\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","bugFix":["e25c332f157326faecb36f76173033c1284776a5"],"bugIntro":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","sourceNew":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n\n        String respBody = EntityUtils.toString(entity);\n        Object resp = null;\n        try {\n          resp = ObjectBuilder.getVal(new JSONParser(respBody));\n        } catch (JSONParser.ParseException pe) {\n          throw new ClientProtocolException(\"Expected JSON response from server but received: \"+respBody+\n              \"\\nTypically, this indicates a problem with the Solr server; check the Solr server logs for more information.\");\n        }\n\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","sourceOld":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n\n        String respBody = EntityUtils.toString(entity);\n        Object resp = null;\n        try {\n          resp = ObjectBuilder.getVal(new JSONParser(respBody));\n        } catch (JSONParser.ParseException pe) {\n          throw new ClientProtocolException(\"Expected JSON response from server but received: \"+respBody+\n              \"\\nTypically, this indicates a problem with the Solr server; check the Solr server logs for more information.\");\n        }\n\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","sourceNew":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n\n        String respBody = EntityUtils.toString(entity);\n        Object resp = null;\n        try {\n          resp = ObjectBuilder.getVal(new JSONParser(respBody));\n        } catch (JSONParser.ParseException pe) {\n          throw new ClientProtocolException(\"Expected JSON response from server but received: \"+respBody+\n              \"\\nTypically, this indicates a problem with the Solr server; check the Solr server logs for more information.\");\n        }\n\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","sourceOld":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n\n        String respBody = EntityUtils.toString(entity);\n        Object resp = null;\n        try {\n          resp = ObjectBuilder.getVal(new JSONParser(respBody));\n        } catch (JSONParser.ParseException pe) {\n          throw new ClientProtocolException(\"Expected JSON response from server but received: \"+respBody+\n              \"\\nTypically, this indicates a problem with the Solr server; check the Solr server logs for more information.\");\n        }\n\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","sourceNew":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n\n        String respBody = EntityUtils.toString(entity);\n        Object resp = null;\n        try {\n          resp = ObjectBuilder.getVal(new JSONParser(respBody));\n        } catch (JSONParser.ParseException pe) {\n          throw new ClientProtocolException(\"Expected JSON response from server but received: \"+respBody+\n              \"\\nTypically, this indicates a problem with the Solr server; check the Solr server logs for more information.\");\n        }\n\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","sourceOld":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n\n        String respBody = EntityUtils.toString(entity);\n        Object resp = null;\n        try {\n          resp = ObjectBuilder.getVal(new JSONParser(respBody));\n        } catch (JSONParser.ParseException pe) {\n          throw new ClientProtocolException(\"Expected JSON response from server but received: \"+respBody+\n              \"\\nTypically, this indicates a problem with the Solr server; check the Solr server logs for more information.\");\n        }\n\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3714bcf66a68a1600e9dd11442fc1b33b62ef088","date":1556832005,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","sourceNew":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n\n        String respBody = EntityUtils.toString(entity);\n        Object resp = null;\n        try {\n          resp = fromJSONString(respBody);\n        } catch (JSONParser.ParseException pe) {\n          throw new ClientProtocolException(\"Expected JSON response from server but received: \"+respBody+\n              \"\\nTypically, this indicates a problem with the Solr server; check the Solr server logs for more information.\");\n        }\n\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","sourceOld":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n\n        String respBody = EntityUtils.toString(entity);\n        Object resp = null;\n        try {\n          resp = ObjectBuilder.getVal(new JSONParser(respBody));\n        } catch (JSONParser.ParseException pe) {\n          throw new ClientProtocolException(\"Expected JSON response from server but received: \"+respBody+\n              \"\\nTypically, this indicates a problem with the Solr server; check the Solr server logs for more information.\");\n        }\n\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ee8fbffa595c312bc0437f2c9bb6376a29c1b427","date":1589412657,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.SolrResponseHandler#handleResponse(HttpResponse).mjava","sourceNew":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n\n        String respBody = EntityUtils.toString(entity);\n        Object resp = null;\n        try {\n          resp = fromJSONString(respBody);\n        } catch (JSONParser.ParseException pe) {\n          throw new ClientProtocolException(\"Expected JSON response from server but received: \"+respBody+\n              \"\\nTypically, this indicates a problem with the Solr server; check the Solr server logs for more information.\");\n        }\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","sourceOld":"    public Map<String,Object> handleResponse(HttpResponse response) throws ClientProtocolException, IOException {\n      HttpEntity entity = response.getEntity();\n      if (entity != null) {\n\n        String respBody = EntityUtils.toString(entity);\n        Object resp = null;\n        try {\n          resp = fromJSONString(respBody);\n        } catch (JSONParser.ParseException pe) {\n          throw new ClientProtocolException(\"Expected JSON response from server but received: \"+respBody+\n              \"\\nTypically, this indicates a problem with the Solr server; check the Solr server logs for more information.\");\n        }\n\n        if (resp != null && resp instanceof Map) {\n          return (Map<String,Object>)resp;\n        } else {\n          throw new ClientProtocolException(\"Expected JSON object in response but received \"+ resp);\n        }\n      } else {\n        StatusLine statusLine = response.getStatusLine();\n        throw new HttpResponseException(statusLine.getStatusCode(), statusLine.getReasonPhrase());\n      }\n    }\n\n","bugFix":["72c5a4ac2903750897fc029f40c01fd88a29815a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["72c5a4ac2903750897fc029f40c01fd88a29815a","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"72c5a4ac2903750897fc029f40c01fd88a29815a":["e25c332f157326faecb36f76173033c1284776a5"],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"],"e25c332f157326faecb36f76173033c1284776a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["72c5a4ac2903750897fc029f40c01fd88a29815a"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["72c5a4ac2903750897fc029f40c01fd88a29815a","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e25c332f157326faecb36f76173033c1284776a5"],"72c5a4ac2903750897fc029f40c01fd88a29815a":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"e25c332f157326faecb36f76173033c1284776a5":["72c5a4ac2903750897fc029f40c01fd88a29815a"],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3714bcf66a68a1600e9dd11442fc1b33b62ef088","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}