{"path":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#createJettyAndHarness(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","commits":[{"id":"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","date":1362545433,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#createJettyAndHarness(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"/dev/null","sourceNew":"  public static void createJettyAndHarness\n      (String solrHome, String configFile, String schemaFile, String context,\n       boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) throws Exception {\n\n    createJetty(solrHome, configFile, schemaFile, context, stopAtShutdown, extraServlets);\n\n    restTestHarness = new RestTestHarness(new RESTfulServerProvider() {\n      @Override\n      public String getBaseURL() {\n        return jetty.getBaseUrl().toString();\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#createJettyAndHarness(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#createJettyAndHarness(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static void createJettyAndHarness\n      (String solrHome, String configFile, String schemaFile, String context,\n       boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) throws Exception {\n\n    createJetty(solrHome, configFile, schemaFile, context, stopAtShutdown, extraServlets);\n\n    restTestHarness = new RestTestHarness(new RESTfulServerProvider() {\n      @Override\n      public String getBaseURL() {\n        return jetty.getBaseUrl().toString() + \"/\" + DEFAULT_TEST_CORENAME;\n      }\n    });\n  }\n\n","sourceOld":"  public static void createJettyAndHarness\n      (String solrHome, String configFile, String schemaFile, String context,\n       boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) throws Exception {\n\n    createJetty(solrHome, configFile, schemaFile, context, stopAtShutdown, extraServlets);\n\n    restTestHarness = new RestTestHarness(new RESTfulServerProvider() {\n      @Override\n      public String getBaseURL() {\n        return jetty.getBaseUrl().toString();\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b04972a589b63fe694313d3868815a20546c4907","date":1460726888,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#createJettyAndHarness(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#createJettyAndHarness(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static void createJettyAndHarness\n      (String solrHome, String configFile, String schemaFile, String context,\n       boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) throws Exception {\n\n    createJetty(solrHome, configFile, schemaFile, context, stopAtShutdown, extraServlets);\n\n    restTestHarness = new RestTestHarness(() -> jetty.getBaseUrl().toString() + \"/\" + DEFAULT_TEST_CORENAME);\n  }\n\n","sourceOld":"  public static void createJettyAndHarness\n      (String solrHome, String configFile, String schemaFile, String context,\n       boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) throws Exception {\n\n    createJetty(solrHome, configFile, schemaFile, context, stopAtShutdown, extraServlets);\n\n    restTestHarness = new RestTestHarness(new RESTfulServerProvider() {\n      @Override\n      public String getBaseURL() {\n        return jetty.getBaseUrl().toString() + \"/\" + DEFAULT_TEST_CORENAME;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"73457c9372b4f2f962ca916788a5fe9e1f644a9f","date":1460794059,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#createJettyAndHarness(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#createJettyAndHarness(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static void createJettyAndHarness\n      (String solrHome, String configFile, String schemaFile, String context,\n       boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) throws Exception {\n\n    createJetty(solrHome, configFile, schemaFile, context, stopAtShutdown, extraServlets);\n\n    restTestHarness = new RestTestHarness(() -> jetty.getBaseUrl().toString() + \"/\" + DEFAULT_TEST_CORENAME);\n  }\n\n","sourceOld":"  public static void createJettyAndHarness\n      (String solrHome, String configFile, String schemaFile, String context,\n       boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) throws Exception {\n\n    createJetty(solrHome, configFile, schemaFile, context, stopAtShutdown, extraServlets);\n\n    restTestHarness = new RestTestHarness(new RESTfulServerProvider() {\n      @Override\n      public String getBaseURL() {\n        return jetty.getBaseUrl().toString() + \"/\" + DEFAULT_TEST_CORENAME;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#createJettyAndHarness(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#createJettyAndHarness(String,String,String,String,boolean,SortedMap[ServletHolder,String]).mjava","sourceNew":"  public static void createJettyAndHarness\n      (String solrHome, String configFile, String schemaFile, String context,\n       boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) throws Exception {\n\n    createAndStartJetty(solrHome, configFile, schemaFile, context, stopAtShutdown, extraServlets);\n\n    restTestHarness = new RestTestHarness(() -> jetty.getBaseUrl().toString() + \"/\" + DEFAULT_TEST_CORENAME);\n  }\n\n","sourceOld":"  public static void createJettyAndHarness\n      (String solrHome, String configFile, String schemaFile, String context,\n       boolean stopAtShutdown, SortedMap<ServletHolder,String> extraServlets) throws Exception {\n\n    createJetty(solrHome, configFile, schemaFile, context, stopAtShutdown, extraServlets);\n\n    restTestHarness = new RestTestHarness(() -> jetty.getBaseUrl().toString() + \"/\" + DEFAULT_TEST_CORENAME);\n  }\n\n","bugFix":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b04972a589b63fe694313d3868815a20546c4907":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["73457c9372b4f2f962ca916788a5fe9e1f644a9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"73457c9372b4f2f962ca916788a5fe9e1f644a9f":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","b04972a589b63fe694313d3868815a20546c4907"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"b04972a589b63fe694313d3868815a20546c4907":["73457c9372b4f2f962ca916788a5fe9e1f644a9f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["b04972a589b63fe694313d3868815a20546c4907","73457c9372b4f2f962ca916788a5fe9e1f644a9f"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"73457c9372b4f2f962ca916788a5fe9e1f644a9f":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}