{"path":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testPolygonQuery(Polygon2D,Object).mjava","commits":[{"id":"6345300cb90308ddf9579f7a7396a32d98795311","date":1533248257,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testPolygonQuery(Polygon2D,Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean testPolygonQuery(Polygon2D query, Object shape) {\n\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate((Polygon) shape);\n      for (Tessellator.Triangle t : tessellation) {\n        // we quantize the triangle for consistency with the index\n        if (query.relateTriangle(quantizeLon(t.getLon(0)), quantizeLat(t.getLat(0)),\n            quantizeLon(t.getLon(1)), quantizeLat(t.getLat(1)),\n            quantizeLon(t.getLon(2)), quantizeLat(t.getLat(2))) != Relation.CELL_OUTSIDE_QUERY) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97f74f84954e9fefbac4cb38b9bf339e1757600d","date":1533750605,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testPolygonQuery(Polygon2D,Object).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testPolygonQuery(Polygon2D,Object).mjava","sourceNew":"    @Override\n    public boolean testPolygonQuery(Polygon2D query, Object shape) {\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate((Polygon) shape);\n      for (Tessellator.Triangle t : tessellation) {\n        // we quantize the triangle for consistency with the index\n        Relation r = query.relateTriangle(quantizeLon(t.getLon(0)), quantizeLat(t.getLat(0)),\n            quantizeLon(t.getLon(1)), quantizeLat(t.getLat(1)),\n            quantizeLon(t.getLon(2)), quantizeLat(t.getLat(2)));\n        if (queryRelation == QueryRelation.DISJOINT) {\n          if (r != Relation.CELL_OUTSIDE_QUERY) return false;\n        } else if (queryRelation == QueryRelation.WITHIN) {\n          if (r != Relation.CELL_INSIDE_QUERY) return false;\n        } else {\n          if (r != Relation.CELL_OUTSIDE_QUERY) return true;\n        }\n      }\n      return queryRelation == QueryRelation.INTERSECTS ? false : true;\n    }\n\n","sourceOld":"    @Override\n    public boolean testPolygonQuery(Polygon2D query, Object shape) {\n\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate((Polygon) shape);\n      for (Tessellator.Triangle t : tessellation) {\n        // we quantize the triangle for consistency with the index\n        if (query.relateTriangle(quantizeLon(t.getLon(0)), quantizeLat(t.getLat(0)),\n            quantizeLon(t.getLon(1)), quantizeLat(t.getLat(1)),\n            quantizeLon(t.getLon(2)), quantizeLat(t.getLat(2))) != Relation.CELL_OUTSIDE_QUERY) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4fccad460342b1af30cb328cc8297751a218d78","date":1541177339,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testPolygonQuery(Polygon2D,Object).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testPolygonQuery(Polygon2D,Object).mjava","sourceNew":"    @Override\n    public boolean testPolygonQuery(Polygon2D query, Object shape) {\n      return testPolygon(query, (Polygon) shape);\n    }\n\n","sourceOld":"    @Override\n    public boolean testPolygonQuery(Polygon2D query, Object shape) {\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate((Polygon) shape);\n      for (Tessellator.Triangle t : tessellation) {\n        // we quantize the triangle for consistency with the index\n        Relation r = query.relateTriangle(quantizeLon(t.getLon(0)), quantizeLat(t.getLat(0)),\n            quantizeLon(t.getLon(1)), quantizeLat(t.getLat(1)),\n            quantizeLon(t.getLon(2)), quantizeLat(t.getLat(2)));\n        if (queryRelation == QueryRelation.DISJOINT) {\n          if (r != Relation.CELL_OUTSIDE_QUERY) return false;\n        } else if (queryRelation == QueryRelation.WITHIN) {\n          if (r != Relation.CELL_INSIDE_QUERY) return false;\n        } else {\n          if (r != Relation.CELL_OUTSIDE_QUERY) return true;\n        }\n      }\n      return queryRelation == QueryRelation.INTERSECTS ? false : true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c286b0d8c507a88b289407e2fe161effa275c6b0","date":1562615977,"type":4,"author":"Nicholas Knize","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testPolygonQuery(Polygon2D,Object).mjava","sourceNew":null,"sourceOld":"    @Override\n    public boolean testPolygonQuery(Polygon2D query, Object shape) {\n      return testPolygon(query, (Polygon) shape);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97f74f84954e9fefbac4cb38b9bf339e1757600d":["6345300cb90308ddf9579f7a7396a32d98795311"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c286b0d8c507a88b289407e2fe161effa275c6b0":["e4fccad460342b1af30cb328cc8297751a218d78"],"6345300cb90308ddf9579f7a7396a32d98795311":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e4fccad460342b1af30cb328cc8297751a218d78":["97f74f84954e9fefbac4cb38b9bf339e1757600d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c286b0d8c507a88b289407e2fe161effa275c6b0"]},"commit2Childs":{"97f74f84954e9fefbac4cb38b9bf339e1757600d":["e4fccad460342b1af30cb328cc8297751a218d78"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6345300cb90308ddf9579f7a7396a32d98795311"],"6345300cb90308ddf9579f7a7396a32d98795311":["97f74f84954e9fefbac4cb38b9bf339e1757600d"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e4fccad460342b1af30cb328cc8297751a218d78":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}