{"path":"solr/core/src/java/org/apache/solr/util/hll/SerializationUtil#packParametersByte(int,int).mjava","commits":[{"id":"6d8714f9ceaaff94f0968d1c2d037978c3fde569","date":1437042727,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/SerializationUtil#packParametersByte(int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Generates a byte that encodes the parameters of a\n     * {@link HLLType#FULL} or {@link HLLType#SPARSE}\n     * HLL.<p/>\n     *\n     * The top 3 bits are used to encode <code>registerWidth - 1</code>\n     * (range of <code>registerWidth</code> is thus 1-9) and the bottom 5\n     * bits are used to encode <code>registerCountLog2</code>\n     * (range of <code>registerCountLog2</code> is thus 0-31).\n     *\n     * @param  registerWidth the register width (must be at least 1 and at\n     *         most 9)\n     * @param  registerCountLog2 the log-base-2 of the register count (must\n     *         be at least 0 and at most 31)\n     * @return the packed parameters byte\n     */\n    public static byte packParametersByte(final int registerWidth, final int registerCountLog2) {\n        final int widthBits = ((registerWidth - 1) & REGISTER_WIDTH_MASK);\n        final int countBits = (registerCountLog2 & LOG2_REGISTER_COUNT_MASK);\n        return (byte)((widthBits << LOG2_REGISTER_COUNT_BITS) | countBits);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5ee4c66244bdfcc4796a114519d47701b2c026","date":1437132013,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/hll/SerializationUtil#packParametersByte(int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Generates a byte that encodes the parameters of a\n     * {@link HLLType#FULL} or {@link HLLType#SPARSE}\n     * HLL.<p/>\n     *\n     * The top 3 bits are used to encode <code>registerWidth - 1</code>\n     * (range of <code>registerWidth</code> is thus 1-9) and the bottom 5\n     * bits are used to encode <code>registerCountLog2</code>\n     * (range of <code>registerCountLog2</code> is thus 0-31).\n     *\n     * @param  registerWidth the register width (must be at least 1 and at\n     *         most 9)\n     * @param  registerCountLog2 the log-base-2 of the register count (must\n     *         be at least 0 and at most 31)\n     * @return the packed parameters byte\n     */\n    public static byte packParametersByte(final int registerWidth, final int registerCountLog2) {\n        final int widthBits = ((registerWidth - 1) & REGISTER_WIDTH_MASK);\n        final int countBits = (registerCountLog2 & LOG2_REGISTER_COUNT_MASK);\n        return (byte)((widthBits << LOG2_REGISTER_COUNT_BITS) | countBits);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b5ee4c66244bdfcc4796a114519d47701b2c026"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b5ee4c66244bdfcc4796a114519d47701b2c026","6d8714f9ceaaff94f0968d1c2d037978c3fde569"],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6d8714f9ceaaff94f0968d1c2d037978c3fde569":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}