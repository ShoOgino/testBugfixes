{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.LowFreqDocsEnum#nextDoc().mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.LowFreqDocsEnum#nextDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.LowFreqDocsEnum#nextDoc().mjava","sourceNew":"    // TODO: can do this w/o setting members?\n    @Override\n    public int nextDoc() {\n      upto += 2 + freq*posMult;\n      // if (DEBUG) {\n      //   System.out.println(\"  nextDoc freq=\" + freq + \" upto=\" + upto + \" vs \" + postings.length);\n      // }\n      if (liveDocs == null) {\n        if (upto < postings.length) {   \n          freq = postings[upto+1];\n          assert freq > 0;\n          return postings[upto];\n        }\n      } else {\n        while (upto < postings.length) {\n          freq = postings[upto+1];\n          assert freq > 0;\n          if (liveDocs.get(postings[upto])) {\n            return postings[upto];\n          }\n          upto += 2 + freq*posMult;\n        }\n      }\n      return NO_MORE_DOCS;\n    }\n\n","sourceOld":"    // TODO: can do this w/o setting members?\n    @Override\n    public int nextDoc() {\n      upto += 2 + freq*posMult;\n      // if (DEBUG) {\n      //   System.out.println(\"  nextDoc freq=\" + freq + \" upto=\" + upto + \" vs \" + postings.length);\n      // }\n      if (liveDocs == null) {\n        if (upto < postings.length) {   \n          freq = postings[upto+1];\n          assert freq > 0;\n          return postings[upto];\n        }\n      } else {\n        while (upto < postings.length) {\n          freq = postings[upto+1];\n          assert freq > 0;\n          if (liveDocs.get(postings[upto])) {\n            return postings[upto];\n          }\n          upto += 2 + freq*posMult;\n        }\n      }\n      return NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.LowFreqDocsEnum#nextDoc().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.LowFreqDocsEnum#nextDoc().mjava","sourceNew":"    // TODO: can do this w/o setting members?\n    @Override\n    public int nextDoc() {\n      upto += 2 + freq*posMult;\n      // if (DEBUG) {\n      //   System.out.println(\"  nextDoc freq=\" + freq + \" upto=\" + upto + \" vs \" + postings.length);\n      // }\n      if (liveDocs == null) {\n        if (upto < postings.length) {\n          freq = postings[upto+1];\n          assert freq > 0;\n          return postings[upto];\n        }\n      } else {\n        while (upto < postings.length) {\n          freq = postings[upto+1];\n          assert freq > 0;\n          if (liveDocs.get(postings[upto])) {\n            return postings[upto];\n          }\n          upto += 2 + freq*posMult;\n        }\n      }\n      return NO_MORE_DOCS;\n    }\n\n","sourceOld":"    // TODO: can do this w/o setting members?\n    @Override\n    public int nextDoc() {\n      upto += 2 + freq*posMult;\n      // if (DEBUG) {\n      //   System.out.println(\"  nextDoc freq=\" + freq + \" upto=\" + upto + \" vs \" + postings.length);\n      // }\n      if (liveDocs == null) {\n        if (upto < postings.length) {   \n          freq = postings[upto+1];\n          assert freq > 0;\n          return postings[upto];\n        }\n      } else {\n        while (upto < postings.length) {\n          freq = postings[upto+1];\n          assert freq > 0;\n          if (liveDocs.get(postings[upto])) {\n            return postings[upto];\n          }\n          upto += 2 + freq*posMult;\n        }\n      }\n      return NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.LowFreqDocsEnum#nextDoc().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.LowFreqDocsEnum#nextDoc().mjava","sourceNew":"    // TODO: can do this w/o setting members?\n    @Override\n    public int nextDoc() {\n      upto += 2 + freq*posMult;\n      // if (DEBUG) {\n      //   System.out.println(\"  nextDoc freq=\" + freq + \" upto=\" + upto + \" vs \" + postings.length);\n      // }\n      if (upto < postings.length) {\n        freq = postings[upto+1];\n        assert freq > 0;\n        return postings[upto];\n      }\n      return NO_MORE_DOCS;\n    }\n\n","sourceOld":"    // TODO: can do this w/o setting members?\n    @Override\n    public int nextDoc() {\n      upto += 2 + freq*posMult;\n      // if (DEBUG) {\n      //   System.out.println(\"  nextDoc freq=\" + freq + \" upto=\" + upto + \" vs \" + postings.length);\n      // }\n      if (liveDocs == null) {\n        if (upto < postings.length) {\n          freq = postings[upto+1];\n          assert freq > 0;\n          return postings[upto];\n        }\n      } else {\n        while (upto < postings.length) {\n          freq = postings[upto+1];\n          assert freq > 0;\n          if (liveDocs.get(postings[upto])) {\n            return postings[upto];\n          }\n          upto += 2 + freq*posMult;\n        }\n      }\n      return NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["51f5280f31484820499077f41fcdfe92d527d9dc"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["51f5280f31484820499077f41fcdfe92d527d9dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"51f5280f31484820499077f41fcdfe92d527d9dc":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}