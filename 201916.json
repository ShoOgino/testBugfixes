{"path":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","pathOld":"src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(query,searcher);    \n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(query,searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53a31399f2471493d67b19a95c028a74e0113b6a","date":1289817072,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(query,searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(query,searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(query,searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#tBooleanMUST(boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#testBoolean().mjava","sourceNew":"  private void tBooleanMUST(final boolean useRandomAccess) throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQueryRA(new MatchAllDocsQuery(), new SingleDocTestFilter(0), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQueryRA(new MatchAllDocsQuery(), new SingleDocTestFilter(1), useRandomAccess);\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    Query query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(0));\n    bq.add(query, BooleanClause.Occur.MUST);\n    query = new FilteredQuery(new MatchAllDocsQuery(),\n        new SingleDocTestFilter(1));\n    bq.add(query, BooleanClause.Occur.MUST);\n    ScoreDoc[] hits = searcher.search(bq, null, 1000).scoreDocs;\n    assertEquals(0, hits.length);\n    QueryUtils.check(random, query,searcher);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6620df8541b174097b1133a4fc370adb2e570524":["53a31399f2471493d67b19a95c028a74e0113b6a"],"53a31399f2471493d67b19a95c028a74e0113b6a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["9454a6510e2db155fb01faa5c049b06ece95fab9","53a31399f2471493d67b19a95c028a74e0113b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","53a31399f2471493d67b19a95c028a74e0113b6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6620df8541b174097b1133a4fc370adb2e570524"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6620df8541b174097b1133a4fc370adb2e570524":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"53a31399f2471493d67b19a95c028a74e0113b6a":["6620df8541b174097b1133a4fc370adb2e570524","9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["53a31399f2471493d67b19a95c028a74e0113b6a","9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}