{"path":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#setParam(String,String,String).mjava","commits":[{"id":"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","date":1362545433,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#setParam(String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Insures that the given param is included in the query with the given value.\n   *\n   * <ol>\n   *   <li>If the param is already included with the given value, the request is returned unchanged.</li>\n   *   <li>If the param is not already included, it is added with the given value.</li>\n   *   <li>If the param is already included, but with a different value, the value is replaced with the given value.</li>\n   *   <li>If the param is already included multiple times, they are replaced with a single param with given value.</li>\n   * </ol>\n   *\n   * The passed-in valueToSet should NOT be URL encoded, as it will be URL encoded by this method.\n   *\n   * @param query The query portion of a request URL, e.g. \"wt=json&indent=on&fl=id,_version_\"\n   * @param paramToSet The parameter name to insure the presence of in the returned request \n   * @param valueToSet The parameter value to insure in the returned request\n   * @return The query with the given param set to the given value \n   */\n  private static String setParam(String query, String paramToSet, String valueToSet) {\n    if (null == valueToSet) {\n      valueToSet = \"\";\n    }\n    try {\n      StringBuilder builder = new StringBuilder();\n      if (null == query || query.trim().isEmpty()) {\n        // empty query -> return \"paramToSet=valueToSet\"\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      MultiMapSolrParams requestParams = SolrRequestParsers.parseQueryString(query);\n      String[] values = requestParams.getParams(paramToSet);\n      if (null == values) {\n        // paramToSet isn't present in the request -> append \"&paramToSet=valueToSet\"\n        builder.append(query);\n        builder.append('&');\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      if (1 == values.length && valueToSet.equals(values[0])) {\n        // paramToSet=valueToSet is already in the query - just return the query as-is.\n        return query;\n      }\n      // More than one value for paramToSet on the request, or paramToSet's value is not valueToSet\n      // -> rebuild the query\n      boolean isFirst = true;\n      for (Map.Entry<String,String[]> entry : requestParams.getMap().entrySet()) {\n        String key = entry.getKey();\n        String[] valarr = entry.getValue();\n\n        if ( ! key.equals(paramToSet)) {\n          for (String val : valarr) {\n            builder.append(isFirst ? \"\" : '&');\n            isFirst = false;\n            builder.append(key);\n            builder.append('=');\n            StrUtils.partialURLEncodeVal(builder, null == val ? \"\" : val);\n          }\n        }\n      }\n      builder.append(isFirst ? \"\" : '&');\n      builder.append(paramToSet);\n      builder.append('=');\n      StrUtils.partialURLEncodeVal(builder, valueToSet);\n      return builder.toString();\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac1e7fa558287a811ea07634d815ee7b1c541284","date":1500910922,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#setParam(String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#setParam(String,String,String).mjava","sourceNew":"  /**\n   * Insures that the given param is included in the query with the given value.\n   *\n   * <ol>\n   *   <li>If the param is already included with the given value, the request is returned unchanged.</li>\n   *   <li>If the param is not already included, it is added with the given value.</li>\n   *   <li>If the param is already included, but with a different value, the value is replaced with the given value.</li>\n   *   <li>If the param is already included multiple times, they are replaced with a single param with given value.</li>\n   * </ol>\n   *\n   * The passed-in valueToSet should NOT be URL encoded, as it will be URL encoded by this method.\n   *\n   * @param query The query portion of a request URL, e.g. \"wt=xml&indent=off&fl=id,_version_\"\n   * @param paramToSet The parameter name to insure the presence of in the returned request \n   * @param valueToSet The parameter value to insure in the returned request\n   * @return The query with the given param set to the given value \n   */\n  private static String setParam(String query, String paramToSet, String valueToSet) {\n    if (null == valueToSet) {\n      valueToSet = \"\";\n    }\n    try {\n      StringBuilder builder = new StringBuilder();\n      if (null == query || query.trim().isEmpty()) {\n        // empty query -> return \"paramToSet=valueToSet\"\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      MultiMapSolrParams requestParams = SolrRequestParsers.parseQueryString(query);\n      String[] values = requestParams.getParams(paramToSet);\n      if (null == values) {\n        // paramToSet isn't present in the request -> append \"&paramToSet=valueToSet\"\n        builder.append(query);\n        builder.append('&');\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      if (1 == values.length && valueToSet.equals(values[0])) {\n        // paramToSet=valueToSet is already in the query - just return the query as-is.\n        return query;\n      }\n      // More than one value for paramToSet on the request, or paramToSet's value is not valueToSet\n      // -> rebuild the query\n      boolean isFirst = true;\n      for (Map.Entry<String,String[]> entry : requestParams.getMap().entrySet()) {\n        String key = entry.getKey();\n        String[] valarr = entry.getValue();\n\n        if ( ! key.equals(paramToSet)) {\n          for (String val : valarr) {\n            builder.append(isFirst ? \"\" : '&');\n            isFirst = false;\n            builder.append(key);\n            builder.append('=');\n            StrUtils.partialURLEncodeVal(builder, null == val ? \"\" : val);\n          }\n        }\n      }\n      builder.append(isFirst ? \"\" : '&');\n      builder.append(paramToSet);\n      builder.append('=');\n      StrUtils.partialURLEncodeVal(builder, valueToSet);\n      return builder.toString();\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Insures that the given param is included in the query with the given value.\n   *\n   * <ol>\n   *   <li>If the param is already included with the given value, the request is returned unchanged.</li>\n   *   <li>If the param is not already included, it is added with the given value.</li>\n   *   <li>If the param is already included, but with a different value, the value is replaced with the given value.</li>\n   *   <li>If the param is already included multiple times, they are replaced with a single param with given value.</li>\n   * </ol>\n   *\n   * The passed-in valueToSet should NOT be URL encoded, as it will be URL encoded by this method.\n   *\n   * @param query The query portion of a request URL, e.g. \"wt=json&indent=on&fl=id,_version_\"\n   * @param paramToSet The parameter name to insure the presence of in the returned request \n   * @param valueToSet The parameter value to insure in the returned request\n   * @return The query with the given param set to the given value \n   */\n  private static String setParam(String query, String paramToSet, String valueToSet) {\n    if (null == valueToSet) {\n      valueToSet = \"\";\n    }\n    try {\n      StringBuilder builder = new StringBuilder();\n      if (null == query || query.trim().isEmpty()) {\n        // empty query -> return \"paramToSet=valueToSet\"\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      MultiMapSolrParams requestParams = SolrRequestParsers.parseQueryString(query);\n      String[] values = requestParams.getParams(paramToSet);\n      if (null == values) {\n        // paramToSet isn't present in the request -> append \"&paramToSet=valueToSet\"\n        builder.append(query);\n        builder.append('&');\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      if (1 == values.length && valueToSet.equals(values[0])) {\n        // paramToSet=valueToSet is already in the query - just return the query as-is.\n        return query;\n      }\n      // More than one value for paramToSet on the request, or paramToSet's value is not valueToSet\n      // -> rebuild the query\n      boolean isFirst = true;\n      for (Map.Entry<String,String[]> entry : requestParams.getMap().entrySet()) {\n        String key = entry.getKey();\n        String[] valarr = entry.getValue();\n\n        if ( ! key.equals(paramToSet)) {\n          for (String val : valarr) {\n            builder.append(isFirst ? \"\" : '&');\n            isFirst = false;\n            builder.append(key);\n            builder.append('=');\n            StrUtils.partialURLEncodeVal(builder, null == val ? \"\" : val);\n          }\n        }\n      }\n      builder.append(isFirst ? \"\" : '&');\n      builder.append(paramToSet);\n      builder.append('=');\n      StrUtils.partialURLEncodeVal(builder, valueToSet);\n      return builder.toString();\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#setParam(String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#setParam(String,String,String).mjava","sourceNew":"  /**\n   * Insures that the given param is included in the query with the given value.\n   *\n   * <ol>\n   *   <li>If the param is already included with the given value, the request is returned unchanged.</li>\n   *   <li>If the param is not already included, it is added with the given value.</li>\n   *   <li>If the param is already included, but with a different value, the value is replaced with the given value.</li>\n   *   <li>If the param is already included multiple times, they are replaced with a single param with given value.</li>\n   * </ol>\n   *\n   * The passed-in valueToSet should NOT be URL encoded, as it will be URL encoded by this method.\n   *\n   * @param query The query portion of a request URL, e.g. \"wt=xml&indent=off&fl=id,_version_\"\n   * @param paramToSet The parameter name to insure the presence of in the returned request \n   * @param valueToSet The parameter value to insure in the returned request\n   * @return The query with the given param set to the given value \n   */\n  private static String setParam(String query, String paramToSet, String valueToSet) {\n    if (null == valueToSet) {\n      valueToSet = \"\";\n    }\n    try {\n      StringBuilder builder = new StringBuilder();\n      if (null == query || query.trim().isEmpty()) {\n        // empty query -> return \"paramToSet=valueToSet\"\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      MultiMapSolrParams requestParams = SolrRequestParsers.parseQueryString(query);\n      String[] values = requestParams.getParams(paramToSet);\n      if (null == values) {\n        // paramToSet isn't present in the request -> append \"&paramToSet=valueToSet\"\n        builder.append(query);\n        builder.append('&');\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      if (1 == values.length && valueToSet.equals(values[0])) {\n        // paramToSet=valueToSet is already in the query - just return the query as-is.\n        return query;\n      }\n      // More than one value for paramToSet on the request, or paramToSet's value is not valueToSet\n      // -> rebuild the query\n      boolean isFirst = true;\n      for (Map.Entry<String,String[]> entry : requestParams.getMap().entrySet()) {\n        String key = entry.getKey();\n        String[] valarr = entry.getValue();\n\n        if ( ! key.equals(paramToSet)) {\n          for (String val : valarr) {\n            builder.append(isFirst ? \"\" : '&');\n            isFirst = false;\n            builder.append(key);\n            builder.append('=');\n            StrUtils.partialURLEncodeVal(builder, null == val ? \"\" : val);\n          }\n        }\n      }\n      builder.append(isFirst ? \"\" : '&');\n      builder.append(paramToSet);\n      builder.append('=');\n      StrUtils.partialURLEncodeVal(builder, valueToSet);\n      return builder.toString();\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Insures that the given param is included in the query with the given value.\n   *\n   * <ol>\n   *   <li>If the param is already included with the given value, the request is returned unchanged.</li>\n   *   <li>If the param is not already included, it is added with the given value.</li>\n   *   <li>If the param is already included, but with a different value, the value is replaced with the given value.</li>\n   *   <li>If the param is already included multiple times, they are replaced with a single param with given value.</li>\n   * </ol>\n   *\n   * The passed-in valueToSet should NOT be URL encoded, as it will be URL encoded by this method.\n   *\n   * @param query The query portion of a request URL, e.g. \"wt=json&indent=on&fl=id,_version_\"\n   * @param paramToSet The parameter name to insure the presence of in the returned request \n   * @param valueToSet The parameter value to insure in the returned request\n   * @return The query with the given param set to the given value \n   */\n  private static String setParam(String query, String paramToSet, String valueToSet) {\n    if (null == valueToSet) {\n      valueToSet = \"\";\n    }\n    try {\n      StringBuilder builder = new StringBuilder();\n      if (null == query || query.trim().isEmpty()) {\n        // empty query -> return \"paramToSet=valueToSet\"\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      MultiMapSolrParams requestParams = SolrRequestParsers.parseQueryString(query);\n      String[] values = requestParams.getParams(paramToSet);\n      if (null == values) {\n        // paramToSet isn't present in the request -> append \"&paramToSet=valueToSet\"\n        builder.append(query);\n        builder.append('&');\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      if (1 == values.length && valueToSet.equals(values[0])) {\n        // paramToSet=valueToSet is already in the query - just return the query as-is.\n        return query;\n      }\n      // More than one value for paramToSet on the request, or paramToSet's value is not valueToSet\n      // -> rebuild the query\n      boolean isFirst = true;\n      for (Map.Entry<String,String[]> entry : requestParams.getMap().entrySet()) {\n        String key = entry.getKey();\n        String[] valarr = entry.getValue();\n\n        if ( ! key.equals(paramToSet)) {\n          for (String val : valarr) {\n            builder.append(isFirst ? \"\" : '&');\n            isFirst = false;\n            builder.append(key);\n            builder.append('=');\n            StrUtils.partialURLEncodeVal(builder, null == val ? \"\" : val);\n          }\n        }\n      }\n      builder.append(isFirst ? \"\" : '&');\n      builder.append(paramToSet);\n      builder.append('=');\n      StrUtils.partialURLEncodeVal(builder, valueToSet);\n      return builder.toString();\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#setParam(String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase#setParam(String,String,String).mjava","sourceNew":"  /**\n   * Insures that the given param is included in the query with the given value.\n   *\n   * <ol>\n   *   <li>If the param is already included with the given value, the request is returned unchanged.</li>\n   *   <li>If the param is not already included, it is added with the given value.</li>\n   *   <li>If the param is already included, but with a different value, the value is replaced with the given value.</li>\n   *   <li>If the param is already included multiple times, they are replaced with a single param with given value.</li>\n   * </ol>\n   *\n   * The passed-in valueToSet should NOT be URL encoded, as it will be URL encoded by this method.\n   *\n   * @param query The query portion of a request URL, e.g. \"wt=xml&indent=off&fl=id,_version_\"\n   * @param paramToSet The parameter name to insure the presence of in the returned request \n   * @param valueToSet The parameter value to insure in the returned request\n   * @return The query with the given param set to the given value \n   */\n  private static String setParam(String query, String paramToSet, String valueToSet) {\n    if (null == valueToSet) {\n      valueToSet = \"\";\n    }\n    try {\n      StringBuilder builder = new StringBuilder();\n      if (null == query || query.trim().isEmpty()) {\n        // empty query -> return \"paramToSet=valueToSet\"\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      MultiMapSolrParams requestParams = SolrRequestParsers.parseQueryString(query);\n      String[] values = requestParams.getParams(paramToSet);\n      if (null == values) {\n        // paramToSet isn't present in the request -> append \"&paramToSet=valueToSet\"\n        builder.append(query);\n        builder.append('&');\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      if (1 == values.length && valueToSet.equals(values[0])) {\n        // paramToSet=valueToSet is already in the query - just return the query as-is.\n        return query;\n      }\n      // More than one value for paramToSet on the request, or paramToSet's value is not valueToSet\n      // -> rebuild the query\n      boolean isFirst = true;\n      for (Map.Entry<String,String[]> entry : requestParams.getMap().entrySet()) {\n        String key = entry.getKey();\n        String[] valarr = entry.getValue();\n\n        if ( ! key.equals(paramToSet)) {\n          for (String val : valarr) {\n            builder.append(isFirst ? \"\" : '&');\n            isFirst = false;\n            builder.append(key);\n            builder.append('=');\n            StrUtils.partialURLEncodeVal(builder, null == val ? \"\" : val);\n          }\n        }\n      }\n      builder.append(isFirst ? \"\" : '&');\n      builder.append(paramToSet);\n      builder.append('=');\n      StrUtils.partialURLEncodeVal(builder, valueToSet);\n      return builder.toString();\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * Insures that the given param is included in the query with the given value.\n   *\n   * <ol>\n   *   <li>If the param is already included with the given value, the request is returned unchanged.</li>\n   *   <li>If the param is not already included, it is added with the given value.</li>\n   *   <li>If the param is already included, but with a different value, the value is replaced with the given value.</li>\n   *   <li>If the param is already included multiple times, they are replaced with a single param with given value.</li>\n   * </ol>\n   *\n   * The passed-in valueToSet should NOT be URL encoded, as it will be URL encoded by this method.\n   *\n   * @param query The query portion of a request URL, e.g. \"wt=json&indent=on&fl=id,_version_\"\n   * @param paramToSet The parameter name to insure the presence of in the returned request \n   * @param valueToSet The parameter value to insure in the returned request\n   * @return The query with the given param set to the given value \n   */\n  private static String setParam(String query, String paramToSet, String valueToSet) {\n    if (null == valueToSet) {\n      valueToSet = \"\";\n    }\n    try {\n      StringBuilder builder = new StringBuilder();\n      if (null == query || query.trim().isEmpty()) {\n        // empty query -> return \"paramToSet=valueToSet\"\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      MultiMapSolrParams requestParams = SolrRequestParsers.parseQueryString(query);\n      String[] values = requestParams.getParams(paramToSet);\n      if (null == values) {\n        // paramToSet isn't present in the request -> append \"&paramToSet=valueToSet\"\n        builder.append(query);\n        builder.append('&');\n        builder.append(paramToSet);\n        builder.append('=');\n        StrUtils.partialURLEncodeVal(builder, valueToSet);\n        return builder.toString();\n      }\n      if (1 == values.length && valueToSet.equals(values[0])) {\n        // paramToSet=valueToSet is already in the query - just return the query as-is.\n        return query;\n      }\n      // More than one value for paramToSet on the request, or paramToSet's value is not valueToSet\n      // -> rebuild the query\n      boolean isFirst = true;\n      for (Map.Entry<String,String[]> entry : requestParams.getMap().entrySet()) {\n        String key = entry.getKey();\n        String[] valarr = entry.getValue();\n\n        if ( ! key.equals(paramToSet)) {\n          for (String val : valarr) {\n            builder.append(isFirst ? \"\" : '&');\n            isFirst = false;\n            builder.append(key);\n            builder.append('=');\n            StrUtils.partialURLEncodeVal(builder, null == val ? \"\" : val);\n          }\n        }\n      }\n      builder.append(isFirst ? \"\" : '&');\n      builder.append(paramToSet);\n      builder.append('=');\n      StrUtils.partialURLEncodeVal(builder, valueToSet);\n      return builder.toString();\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a52341299179de5479672f7cf518bf4b173f34b3":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","ac1e7fa558287a811ea07634d815ee7b1c541284"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37","ac1e7fa558287a811ea07634d815ee7b1c541284"],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a52341299179de5479672f7cf518bf4b173f34b3"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"]},"commit2Childs":{"a52341299179de5479672f7cf518bf4b173f34b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["054c04cf724f73ebdd3b16e3a86ce802c0ba5e37"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"054c04cf724f73ebdd3b16e3a86ce802c0ba5e37":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75","ac1e7fa558287a811ea07634d815ee7b1c541284"],"ac1e7fa558287a811ea07634d815ee7b1c541284":["a52341299179de5479672f7cf518bf4b173f34b3","936cdd5882761db3b844afd6f84ab81cbb011a75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}