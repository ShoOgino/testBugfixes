{"path":"lucene/test-framework/src/java/org/apache/lucene/util/RemoveUponClose#close().mjava","commits":[{"id":"be04a7534a8a0679382542b62556ea5fba6cfb7f","date":1396613089,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RemoveUponClose#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          TestUtil.rm(file);\n        } catch (IOException e) {\n          throw new IOException(\n              \"Could not remove temporary location '\" \n                  + file.getAbsolutePath() + \"', created at stack trace:\\n\" + creationStack, e);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        if (file.listFiles().length > 0) {\n          // throw new IOException(\"Temporary folder not clean: \" + file.getAbsolutePath() + \". Created at stack trace:\\n\" + creationStack); \n        }\n\n        try {\n          TestUtil.rmDir(file);\n        } catch (IOException e) {\n          // Ignore the exception from rmDir.\n        }\n\n        // Re-check.\n        if (file.exists()) {\n          throw new IOException(\n            \"Could not remove temporary folder: \" + file.getAbsolutePath() + \". Created at stack trace:\\n\" + creationStack);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RemoveUponClose#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          TestUtil.rm(file);\n        } catch (IOException e) {\n          throw new IOException(\n              \"Could not remove temporary location '\" \n                  + file.getAbsolutePath() + \"', created at stack trace:\\n\" + creationStack, e);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          TestUtil.rmDir(file);\n        } catch (IOException e) {\n          // Ignore the exception from rmDir.\n        }\n\n        // Re-check.\n        if (file.exists()) {\n          throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n        }\n    }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RemoveUponClose#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/RemoveUponClose#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          IOUtils.rm(file);\n        } catch (IOException e) {\n          throw new IOException(\n              \"Could not remove temporary location '\" \n                  + file.getAbsolutePath() + \"', created at stack trace:\\n\" + creationStack, e);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          TestUtil.rm(file);\n        } catch (IOException e) {\n          throw new IOException(\n              \"Could not remove temporary location '\" \n                  + file.getAbsolutePath() + \"', created at stack trace:\\n\" + creationStack, e);\n        }\n      }\n    }\n  }\n\n","bugFix":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RemoveUponClose#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/RemoveUponClose#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (Files.exists(path)) {\n        try {\n          IOUtils.rm(path);\n        } catch (IOException e) {\n          throw new IOException(\n              \"Could not remove temporary location '\" \n                  + path.toAbsolutePath() + \"', created at stack trace:\\n\" + creationStack, e);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          IOUtils.rm(file);\n        } catch (IOException e) {\n          throw new IOException(\n              \"Could not remove temporary location '\" \n                  + file.getAbsolutePath() + \"', created at stack trace:\\n\" + creationStack, e);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cbc3688252d4a8045d69a164236b2cf87b721f17":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","be04a7534a8a0679382542b62556ea5fba6cfb7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","be04a7534a8a0679382542b62556ea5fba6cfb7f"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}