{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#newDynamicField(String,String,Map[String,#]).mjava","commits":[{"id":"37e5b631c49de2fb88f245c36ecf87650cfa4a24","date":1409693105,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#newDynamicField(String,String,Map[String,#]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a SchemaField if the given dynamic field glob does not already \n   * exist in this schema, and does not match any dynamic fields \n   * in this schema.  The resulting SchemaField can be used in a call\n   * to {@link #addField(SchemaField)}.\n   *\n   * @param fieldNamePattern the pattern for the dynamic field to add\n   * @param fieldType the field type for the new field\n   * @param options the options to use when creating the SchemaField\n   * @return The created SchemaField\n   * @see #addField(SchemaField)\n   */\n  public SchemaField newDynamicField(String fieldNamePattern, String fieldType, Map<String,?> options) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2ed9b72e5fa27a7bd4857f222ca815341979d4a","date":1594879524,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#newDynamicField(String,String,Map[String,#]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#newDynamicField(String,String,Map[String,#]).mjava","sourceNew":"  /**\n   * Returns a SchemaField if the given dynamic field glob does not already\n   * exist in this schema, and does not match any dynamic fields\n   * in this schema.  The resulting SchemaField can be used in a call\n   * to {@link #addField(SchemaField)}.\n   *\n   * @param fieldNamePattern the pattern for the dynamic field to add\n   * @param fieldType the field type for the new field\n   * @param options the options to use when creating the SchemaField\n   * @return The created SchemaField\n   * @see #addField(SchemaField)\n   */\n  public SchemaField newDynamicField(String fieldNamePattern, String fieldType, Map<String,?> options) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":"  /**\n   * Returns a SchemaField if the given dynamic field glob does not already \n   * exist in this schema, and does not match any dynamic fields \n   * in this schema.  The resulting SchemaField can be used in a call\n   * to {@link #addField(SchemaField)}.\n   *\n   * @param fieldNamePattern the pattern for the dynamic field to add\n   * @param fieldType the field type for the new field\n   * @param options the options to use when creating the SchemaField\n   * @return The created SchemaField\n   * @see #addField(SchemaField)\n   */\n  public SchemaField newDynamicField(String fieldNamePattern, String fieldType, Map<String,?> options) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b2ed9b72e5fa27a7bd4857f222ca815341979d4a":["37e5b631c49de2fb88f245c36ecf87650cfa4a24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37e5b631c49de2fb88f245c36ecf87650cfa4a24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b2ed9b72e5fa27a7bd4857f222ca815341979d4a"]},"commit2Childs":{"b2ed9b72e5fa27a7bd4857f222ca815341979d4a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37e5b631c49de2fb88f245c36ecf87650cfa4a24"],"37e5b631c49de2fb88f245c36ecf87650cfa4a24":["b2ed9b72e5fa27a7bd4857f222ca815341979d4a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}