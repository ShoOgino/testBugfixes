{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#abortPendingFlushes(Set[String]).mjava","commits":[{"id":"7af110b00ea8df9429309d83e38e0533d82e144f","date":1376924768,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#abortPendingFlushes(Set[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#abortPendingFlushes().mjava","sourceNew":"  synchronized void abortPendingFlushes(Set<String> newFiles) {\n    try {\n      for (DocumentsWriterPerThread dwpt : flushQueue) {\n        try {\n          documentsWriter.subtractFlushedNumDocs(dwpt.getNumDocsInRAM());\n          dwpt.abort(newFiles);\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the flush queue\n        } finally {\n          doAfterFlush(dwpt);\n        }\n      }\n      for (BlockedFlush blockedFlush : blockedFlushes) {\n        try {\n          flushingWriters\n              .put(blockedFlush.dwpt, Long.valueOf(blockedFlush.bytes));\n          documentsWriter.subtractFlushedNumDocs(blockedFlush.dwpt.getNumDocsInRAM());\n          blockedFlush.dwpt.abort(newFiles);\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the blocked queue\n        } finally {\n          doAfterFlush(blockedFlush.dwpt);\n        }\n      }\n    } finally {\n      flushQueue.clear();\n      blockedFlushes.clear();\n      updateStallState();\n    }\n  }\n\n","sourceOld":"  synchronized void abortPendingFlushes() {\n    try {\n      for (DocumentsWriterPerThread dwpt : flushQueue) {\n        try {\n          dwpt.abort();\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the flush queue\n        } finally {\n          doAfterFlush(dwpt);\n        }\n      }\n      for (BlockedFlush blockedFlush : blockedFlushes) {\n        try {\n          flushingWriters\n              .put(blockedFlush.dwpt, Long.valueOf(blockedFlush.bytes));\n          blockedFlush.dwpt.abort();\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the blocked queue\n        } finally {\n          doAfterFlush(blockedFlush.dwpt);\n        }\n      }\n    } finally {\n      flushQueue.clear();\n      blockedFlushes.clear();\n      updateStallState();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#abortPendingFlushes(Set[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#abortPendingFlushes().mjava","sourceNew":"  synchronized void abortPendingFlushes(Set<String> newFiles) {\n    try {\n      for (DocumentsWriterPerThread dwpt : flushQueue) {\n        try {\n          documentsWriter.subtractFlushedNumDocs(dwpt.getNumDocsInRAM());\n          dwpt.abort(newFiles);\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the flush queue\n        } finally {\n          doAfterFlush(dwpt);\n        }\n      }\n      for (BlockedFlush blockedFlush : blockedFlushes) {\n        try {\n          flushingWriters\n              .put(blockedFlush.dwpt, Long.valueOf(blockedFlush.bytes));\n          documentsWriter.subtractFlushedNumDocs(blockedFlush.dwpt.getNumDocsInRAM());\n          blockedFlush.dwpt.abort(newFiles);\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the blocked queue\n        } finally {\n          doAfterFlush(blockedFlush.dwpt);\n        }\n      }\n    } finally {\n      flushQueue.clear();\n      blockedFlushes.clear();\n      updateStallState();\n    }\n  }\n\n","sourceOld":"  synchronized void abortPendingFlushes() {\n    try {\n      for (DocumentsWriterPerThread dwpt : flushQueue) {\n        try {\n          dwpt.abort();\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the flush queue\n        } finally {\n          doAfterFlush(dwpt);\n        }\n      }\n      for (BlockedFlush blockedFlush : blockedFlushes) {\n        try {\n          flushingWriters\n              .put(blockedFlush.dwpt, Long.valueOf(blockedFlush.bytes));\n          blockedFlush.dwpt.abort();\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the blocked queue\n        } finally {\n          doAfterFlush(blockedFlush.dwpt);\n        }\n      }\n    } finally {\n      flushQueue.clear();\n      blockedFlushes.clear();\n      updateStallState();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#abortPendingFlushes(Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  synchronized void abortPendingFlushes(Set<String> newFiles) {\n    try {\n      for (DocumentsWriterPerThread dwpt : flushQueue) {\n        try {\n          documentsWriter.subtractFlushedNumDocs(dwpt.getNumDocsInRAM());\n          dwpt.abort(newFiles);\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the flush queue\n        } finally {\n          doAfterFlush(dwpt);\n        }\n      }\n      for (BlockedFlush blockedFlush : blockedFlushes) {\n        try {\n          flushingWriters\n              .put(blockedFlush.dwpt, Long.valueOf(blockedFlush.bytes));\n          documentsWriter.subtractFlushedNumDocs(blockedFlush.dwpt.getNumDocsInRAM());\n          blockedFlush.dwpt.abort(newFiles);\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the blocked queue\n        } finally {\n          doAfterFlush(blockedFlush.dwpt);\n        }\n      }\n    } finally {\n      flushQueue.clear();\n      blockedFlushes.clear();\n      updateStallState();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9299079153fd7895bf3cf6835cf7019af2ba89b3","date":1417813477,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#abortPendingFlushes().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#abortPendingFlushes(Set[String]).mjava","sourceNew":"  synchronized void abortPendingFlushes() {\n    try {\n      for (DocumentsWriterPerThread dwpt : flushQueue) {\n        try {\n          documentsWriter.subtractFlushedNumDocs(dwpt.getNumDocsInRAM());\n          dwpt.abort();\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the flush queue\n        } finally {\n          doAfterFlush(dwpt);\n        }\n      }\n      for (BlockedFlush blockedFlush : blockedFlushes) {\n        try {\n          flushingWriters\n              .put(blockedFlush.dwpt, Long.valueOf(blockedFlush.bytes));\n          documentsWriter.subtractFlushedNumDocs(blockedFlush.dwpt.getNumDocsInRAM());\n          blockedFlush.dwpt.abort();\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the blocked queue\n        } finally {\n          doAfterFlush(blockedFlush.dwpt);\n        }\n      }\n    } finally {\n      flushQueue.clear();\n      blockedFlushes.clear();\n      updateStallState();\n    }\n  }\n\n","sourceOld":"  synchronized void abortPendingFlushes(Set<String> newFiles) {\n    try {\n      for (DocumentsWriterPerThread dwpt : flushQueue) {\n        try {\n          documentsWriter.subtractFlushedNumDocs(dwpt.getNumDocsInRAM());\n          dwpt.abort(newFiles);\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the flush queue\n        } finally {\n          doAfterFlush(dwpt);\n        }\n      }\n      for (BlockedFlush blockedFlush : blockedFlushes) {\n        try {\n          flushingWriters\n              .put(blockedFlush.dwpt, Long.valueOf(blockedFlush.bytes));\n          documentsWriter.subtractFlushedNumDocs(blockedFlush.dwpt.getNumDocsInRAM());\n          blockedFlush.dwpt.abort(newFiles);\n        } catch (Throwable ex) {\n          // ignore - keep on aborting the blocked queue\n        } finally {\n          doAfterFlush(blockedFlush.dwpt);\n        }\n      }\n    } finally {\n      flushQueue.clear();\n      blockedFlushes.clear();\n      updateStallState();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7af110b00ea8df9429309d83e38e0533d82e144f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7af110b00ea8df9429309d83e38e0533d82e144f"],"31d4861802ca404d78ca1d15f4550eec415b9199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7af110b00ea8df9429309d83e38e0533d82e144f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["7af110b00ea8df9429309d83e38e0533d82e144f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9299079153fd7895bf3cf6835cf7019af2ba89b3"]},"commit2Childs":{"7af110b00ea8df9429309d83e38e0533d82e144f":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","9299079153fd7895bf3cf6835cf7019af2ba89b3"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7af110b00ea8df9429309d83e38e0533d82e144f","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199"],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}