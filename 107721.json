{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#readLiveDocs(Directory,SegmentInfoPerCommit,IOContext).mjava","commits":[{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#readLiveDocs(Directory,SegmentInfoPerCommit,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#readLiveDocs(Directory,SegmentInfo,IOContext).mjava","sourceNew":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentInfoPerCommit info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = new BitVector(dir, filename, context);\n    assert liveDocs.count() == info.info.docCount - info.getDelCount():\n        \"liveDocs.count()=\" + liveDocs.count() + \" info.docCount=\" + info.info.docCount + \" info.getDelCount()=\" + info.getDelCount();\n    assert liveDocs.length() == info.info.docCount;\n    return liveDocs;\n  }\n\n","sourceOld":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentInfo info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = new BitVector(dir, filename, context);\n    assert liveDocs.count() == info.docCount - info.getDelCount():\n        \"liveDocs.count()=\" + liveDocs.count() + \" info.docCount=\" + info.docCount + \" info.getDelCount()=\" + info.getDelCount();\n    assert liveDocs.length() == info.docCount;\n    return liveDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"203d7d3cb7712e10ef33009a63247ae40c302d7a","date":1337798111,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#readLiveDocs(Directory,SegmentInfoPerCommit,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#readLiveDocs(Directory,SegmentInfoPerCommit,IOContext).mjava","sourceNew":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentInfoPerCommit info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = new BitVector(dir, filename, context);\n    assert liveDocs.count() == info.info.getDocCount() - info.getDelCount():\n      \"liveDocs.count()=\" + liveDocs.count() + \" info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount();\n    assert liveDocs.length() == info.info.getDocCount();\n    return liveDocs;\n  }\n\n","sourceOld":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentInfoPerCommit info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = new BitVector(dir, filename, context);\n    assert liveDocs.count() == info.info.docCount - info.getDelCount():\n        \"liveDocs.count()=\" + liveDocs.count() + \" info.docCount=\" + info.info.docCount + \" info.getDelCount()=\" + info.getDelCount();\n    assert liveDocs.length() == info.info.docCount;\n    return liveDocs;\n  }\n\n","bugFix":null,"bugIntro":["2ac16fe5f6279d582010071b6129ea3073953c15"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#readLiveDocs(Directory,SegmentInfoPerCommit,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentInfoPerCommit info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = new BitVector(dir, filename, context);\n    assert liveDocs.count() == info.info.getDocCount() - info.getDelCount():\n      \"liveDocs.count()=\" + liveDocs.count() + \" info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount();\n    assert liveDocs.length() == info.info.getDocCount();\n    return liveDocs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#readLiveDocs(Directory,SegmentCommitInfo,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat#readLiveDocs(Directory,SegmentInfoPerCommit,IOContext).mjava","sourceNew":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentCommitInfo info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = new BitVector(dir, filename, context);\n    assert liveDocs.count() == info.info.getDocCount() - info.getDelCount():\n      \"liveDocs.count()=\" + liveDocs.count() + \" info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount();\n    assert liveDocs.length() == info.info.getDocCount();\n    return liveDocs;\n  }\n\n","sourceOld":"  @Override\n  public Bits readLiveDocs(Directory dir, SegmentInfoPerCommit info, IOContext context) throws IOException {\n    String filename = IndexFileNames.fileNameFromGeneration(info.info.name, DELETES_EXTENSION, info.getDelGen());\n    final BitVector liveDocs = new BitVector(dir, filename, context);\n    assert liveDocs.count() == info.info.getDocCount() - info.getDelCount():\n      \"liveDocs.count()=\" + liveDocs.count() + \" info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount();\n    assert liveDocs.length() == info.info.getDocCount();\n    return liveDocs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","203d7d3cb7712e10ef33009a63247ae40c302d7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"203d7d3cb7712e10ef33009a63247ae40c302d7a":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["203d7d3cb7712e10ef33009a63247ae40c302d7a"],"203d7d3cb7712e10ef33009a63247ae40c302d7a":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}