{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","commits":[{"id":"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5","date":1292711882,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    return add(fi.name, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    return add(fi.name, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions, fi.docValues);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    return add(fi.name, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    int preferredFieldNumber = fi.number;\n    FieldInfo other = localFieldInfos.get(preferredFieldNumber);\n    if (other == null || !other.name.equals(fi.name)) {\n      preferredFieldNumber = -1;\n    }\n    return addOrUpdateInternal(fi.name, preferredFieldNumber, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    return add(fi.name, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    int preferredFieldNumber = fi.number;\n    FieldInfo other = localFieldInfos.get(preferredFieldNumber);\n    if (other == null || !other.name.equals(fi.name)) {\n      preferredFieldNumber = -1;\n    }\n    return addOrUpdateInternal(fi.name, preferredFieldNumber, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    return add(fi.name, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    return add(fi.name, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    int preferredFieldNumber = fi.number;\n    FieldInfo other = localFieldInfos.get(preferredFieldNumber);\n    if (other == null || !other.name.equals(fi.name)) {\n      preferredFieldNumber = -1;\n    }\n    return addOrUpdateInternal(fi.name, preferredFieldNumber, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    return add(fi.name, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions, fi.docValues);\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    return add(fi.name, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions, fi.docValues);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    int preferredFieldNumber = fi.number;\n    FieldInfo other = localFieldInfos.get(preferredFieldNumber);\n    if (other == null || !other.name.equals(fi.name)) {\n      preferredFieldNumber = -1;\n    }\n    return addOrUpdateInternal(fi.name, preferredFieldNumber, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions, fi.docValues);\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions, fi.docValues);\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.indexOptions, fi.docValues);\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.omitTermFreqAndPositions, fi.docValues);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecd41ba3cdd1b4d825aa53d1987e4360cf45cb05","date":1323284809,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.indexOptions, fi.getDocValuesType());\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.indexOptions, fi.docValues);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.indexOptions, fi.getDocValuesType());\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.indexOptions, fi.docValues);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06","date":1326148180,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.indexOptions, fi.getDocValuesType());\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.storePositionWithTermVector, fi.storeOffsetWithTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.indexOptions, fi.getDocValuesType());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.indexOptions, fi.getDocValuesType(), fi.getNormType());\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.indexOptions, fi.getDocValuesType());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(FieldInfo).mjava","sourceNew":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.indexOptions, fi.getDocValuesType(), fi.getNormType());\n  }\n\n","sourceOld":"  synchronized public FieldInfo add(FieldInfo fi) {\n    // IMPORTANT - reuse the field number if possible for consistent field numbers across segments\n    return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed, fi.storeTermVector,\n               fi.omitNorms, fi.storePayloads,\n               fi.indexOptions, fi.getDocValuesType(), fi.getNormType());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["1224a4027481acce15495b03bce9b48b93b42722","2e8d7ba2175f47e280231533f7d3016249cea88b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","ecd41ba3cdd1b4d825aa53d1987e4360cf45cb05"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["1224a4027481acce15495b03bce9b48b93b42722","d619839baa8ce5503e496b94a9e42ad6f079293f"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","1224a4027481acce15495b03bce9b48b93b42722"],"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","1224a4027481acce15495b03bce9b48b93b42722"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"ecd41ba3cdd1b4d825aa53d1987e4360cf45cb05":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["d638301ad1cfcae567b681b893bc8781f0ee48a5","ecd41ba3cdd1b4d825aa53d1987e4360cf45cb05"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"ecd41ba3cdd1b4d825aa53d1987e4360cf45cb05":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"1224a4027481acce15495b03bce9b48b93b42722":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}