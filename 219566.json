{"path":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechStemmer#testAdjectives().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechStemmer#testAdjectives().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechStemmer#testAdjectives().mjava","sourceNew":"  /**\n   * Test showing how adjectival forms conflate\n   */\n  public void testAdjectives() throws IOException {\n    CzechAnalyzer cz = new CzechAnalyzer(TEST_VERSION_CURRENT);\n    \n    /* ending with ý/á/é */\n    assertAnalyzesTo(cz, \"mladý\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladí\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladého\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladých\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladému\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladým\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladé\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladém\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladými\", new String[] { \"mlad\" }); \n    assertAnalyzesTo(cz, \"mladá\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladou\", new String[] { \"mlad\" });\n\n    /* ending with í */\n    assertAnalyzesTo(cz, \"jarní\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarního\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarních\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarnímu\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarním\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarními\", new String[] { \"jarn\" });  \n  }\n\n","sourceOld":"  /**\n   * Test showing how adjectival forms conflate\n   */\n  public void testAdjectives() throws IOException {\n    CzechAnalyzer cz = new CzechAnalyzer(TEST_VERSION_CURRENT);\n    \n    /* ending with ý/á/é */\n    assertAnalyzesTo(cz, \"mladý\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladí\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladého\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladých\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladému\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladým\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladé\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladém\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladými\", new String[] { \"mlad\" }); \n    assertAnalyzesTo(cz, \"mladá\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladou\", new String[] { \"mlad\" });\n\n    /* ending with í */\n    assertAnalyzesTo(cz, \"jarní\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarního\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarních\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarnímu\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarním\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarními\", new String[] { \"jarn\" });  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/cz/TestCzechStemmer#testAdjectives().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechStemmer#testAdjectives().mjava","sourceNew":"  /**\n   * Test showing how adjectival forms conflate\n   */\n  public void testAdjectives() throws IOException {\n    CzechAnalyzer cz = new CzechAnalyzer(TEST_VERSION_CURRENT);\n    \n    /* ending with ý/á/é */\n    assertAnalyzesTo(cz, \"mladý\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladí\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladého\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladých\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladému\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladým\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladé\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladém\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladými\", new String[] { \"mlad\" }); \n    assertAnalyzesTo(cz, \"mladá\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladou\", new String[] { \"mlad\" });\n\n    /* ending with í */\n    assertAnalyzesTo(cz, \"jarní\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarního\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarních\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarnímu\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarním\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarními\", new String[] { \"jarn\" });  \n  }\n\n","sourceOld":"  /**\n   * Test showing how adjectival forms conflate\n   */\n  public void testAdjectives() throws IOException {\n    CzechAnalyzer cz = new CzechAnalyzer(TEST_VERSION_CURRENT);\n    \n    /* ending with ý/á/é */\n    assertAnalyzesTo(cz, \"mladý\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladí\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladého\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladých\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladému\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladým\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladé\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladém\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladými\", new String[] { \"mlad\" }); \n    assertAnalyzesTo(cz, \"mladá\", new String[] { \"mlad\" });\n    assertAnalyzesTo(cz, \"mladou\", new String[] { \"mlad\" });\n\n    /* ending with í */\n    assertAnalyzesTo(cz, \"jarní\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarního\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarních\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarnímu\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarním\", new String[] { \"jarn\" });\n    assertAnalyzesTo(cz, \"jarními\", new String[] { \"jarn\" });  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}