{"path":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWSegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","commits":[{"id":"7e0127a0bf2a1895ba6109cbbd451359b9c0653d","date":1326981970,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWSegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(SegmentInfos.FORMAT_3_1); // write FORMAT\n      // we don't write a codec - this is 3.x\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e92a321a2612261e1010a4038c8586e30b081552","date":1328456689,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/PreFlexRWSegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWSegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(SegmentInfos.FORMAT_3_1); // write FORMAT\n      // we don't write a codec - this is 3.x\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(SegmentInfos.FORMAT_3_1); // write FORMAT\n      // we don't write a codec - this is 3.x\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e92a321a2612261e1010a4038c8586e30b081552":["7e0127a0bf2a1895ba6109cbbd451359b9c0653d"],"7e0127a0bf2a1895ba6109cbbd451359b9c0653d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e92a321a2612261e1010a4038c8586e30b081552"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7e0127a0bf2a1895ba6109cbbd451359b9c0653d"],"e92a321a2612261e1010a4038c8586e30b081552":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7e0127a0bf2a1895ba6109cbbd451359b9c0653d":["e92a321a2612261e1010a4038c8586e30b081552"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}