{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testSuggestOnAllFilteredDocuments().mjava","commits":[{"id":"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a","date":1427495869,"type":0,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testSuggestOnAllFilteredDocuments().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = atLeast(10);\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", num, filter);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testSuggestOnAllFilteredDocuments().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = atLeast(10);\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", num, filter);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef","date":1428009454,"type":3,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = atLeast(10);\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", num, filter);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = atLeast(10);\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", num, filter);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = atLeast(10);\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", num, filter);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = atLeast(10);\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", num, filter);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ecb18e7a0316ea550446daf785b5fa65c049cdd","date":1428100837,"type":3,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", num, filter);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = atLeast(10);\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", num, filter);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", num, filter);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1ecb18e7a0316ea550446daf785b5fa65c049cdd":["ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef":["07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["1ecb18e7a0316ea550446daf785b5fa65c049cdd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c33f6677a2078739058f81eca1df69d12cd62b0"]},"commit2Childs":{"1ecb18e7a0316ea550446daf785b5fa65c049cdd":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef"],"ff937985a3ef5bdbb2e12a9d4a02de6da424f2ef":["1ecb18e7a0316ea550446daf785b5fa65c049cdd","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"8c33f6677a2078739058f81eca1df69d12cd62b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}