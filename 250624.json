{"path":"src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","commits":[{"id":"9c7454619ea6a0710272c1dd947345cee64489f6","date":1026927484,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: Returns the number of documents containing <code>term</code>.\n   * Called by search code to compute term weights.\n   * @see IndexReader#docFreq(Term).\n   */\n  public abstract int docFreq(Term term) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":["cae5d48ac33b1c5f0be6a1023cfd6d163c4004f2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"624e284b3877a558eba46e7fe63f3aec4c781938","date":1026942878,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","sourceNew":"  /** Expert: Returns the number of documents containing <code>term</code>.\n   * Called by search code to compute term weights.\n   * @see IndexReader#docFreq(Term).\n   */\n  int docFreq(Term term) throws IOException;\n\n","sourceOld":"  /** Expert: Returns the number of documents containing <code>term</code>.\n   * Called by search code to compute term weights.\n   * @see IndexReader#docFreq(Term).\n   */\n  public abstract int docFreq(Term term) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e3713eccd9f532c9a208693ce14664048151f4b","date":1091822959,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","sourceNew":"  /** Expert: Returns the number of documents containing <code>term</code>.\n   * Called by search code to compute term weights.\n   * @see IndexReader#docFreq(Term)\n   */\n  int docFreq(Term term) throws IOException;\n\n","sourceOld":"  /** Expert: Returns the number of documents containing <code>term</code>.\n   * Called by search code to compute term weights.\n   * @see IndexReader#docFreq(Term).\n   */\n  int docFreq(Term term) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","sourceNew":"  /** Expert: Returns the number of documents containing <code>term</code>.\n   * Called by search code to compute term weights.\n   * @see org.apache.lucene.index.IndexReader#docFreq(Term)\n   */\n  int docFreq(Term term) throws IOException;\n\n","sourceOld":"  /** Expert: Returns the number of documents containing <code>term</code>.\n   * Called by search code to compute term weights.\n   * @see IndexReader#docFreq(Term)\n   */\n  int docFreq(Term term) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cae5d48ac33b1c5f0be6a1023cfd6d163c4004f2","date":1252504400,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","sourceNew":"  /** Expert: Returns the number of documents containing <code>term</code>.\n   * \n   * @see org.apache.lucene.index.IndexReader#docFreq(Term)\n   */\n  int docFreq(Term term) throws IOException;\n\n","sourceOld":"  /** Expert: Returns the number of documents containing <code>term</code>.\n   * Called by search code to compute term weights.\n   * @see org.apache.lucene.index.IndexReader#docFreq(Term)\n   */\n  int docFreq(Term term) throws IOException;\n\n","bugFix":["9c7454619ea6a0710272c1dd947345cee64489f6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","pathOld":"src/java/org/apache/lucene/search/Searchable#docFreq(Term).mjava","sourceNew":"  /** Expert: Returns the number of documents containing <code>term</code>.\n   * \n   * @see org.apache.lucene.index.IndexReader#docFreq(Term)\n   */\n  int docFreq(Term term) throws IOException;\n\n","sourceOld":"  /** Expert: Returns the number of documents containing <code>term</code>.\n   * \n   * @see org.apache.lucene.index.IndexReader#docFreq(Term)\n   */\n  int docFreq(Term term) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e3713eccd9f532c9a208693ce14664048151f4b":["624e284b3877a558eba46e7fe63f3aec4c781938"],"624e284b3877a558eba46e7fe63f3aec4c781938":["9c7454619ea6a0710272c1dd947345cee64489f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cae5d48ac33b1c5f0be6a1023cfd6d163c4004f2":["052fac7830290bd38a04cddee1a121ee07656b56"],"9c7454619ea6a0710272c1dd947345cee64489f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"052fac7830290bd38a04cddee1a121ee07656b56":["1e3713eccd9f532c9a208693ce14664048151f4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cae5d48ac33b1c5f0be6a1023cfd6d163c4004f2"]},"commit2Childs":{"1e3713eccd9f532c9a208693ce14664048151f4b":["052fac7830290bd38a04cddee1a121ee07656b56"],"624e284b3877a558eba46e7fe63f3aec4c781938":["1e3713eccd9f532c9a208693ce14664048151f4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9c7454619ea6a0710272c1dd947345cee64489f6"],"9c7454619ea6a0710272c1dd947345cee64489f6":["624e284b3877a558eba46e7fe63f3aec4c781938"],"cae5d48ac33b1c5f0be6a1023cfd6d163c4004f2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"052fac7830290bd38a04cddee1a121ee07656b56":["cae5d48ac33b1c5f0be6a1023cfd6d163c4004f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}