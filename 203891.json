{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#readPackedValue(int,byte[]).mjava","commits":[{"id":"e3ce1ef883d26aa73919aa2d53991726e96caa13","date":1445421402,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#readPackedValue(int,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  void readPackedValue(int index, byte[] bytes) {\n    assert bytes.length == packedBytesLength;\n    int block = index / valuesPerBlock;\n    int blockIndex = index % valuesPerBlock;\n    System.arraycopy(blocks.get(block), blockIndex * packedBytesLength, bytes, 0, packedBytesLength);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc0d60683b47b5d922124c31f57c8b34734f9e6","date":1480846684,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#readPackedValue(int,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#readPackedValue(int,byte[]).mjava","sourceNew":"  public void readPackedValue(int index, byte[] bytes) {\n    assert bytes.length == packedBytesLength;\n    int block = index / valuesPerBlock;\n    int blockIndex = index % valuesPerBlock;\n    System.arraycopy(blocks.get(block), blockIndex * packedBytesLength, bytes, 0, packedBytesLength);\n  }\n\n","sourceOld":"  void readPackedValue(int index, byte[] bytes) {\n    assert bytes.length == packedBytesLength;\n    int block = index / valuesPerBlock;\n    int blockIndex = index % valuesPerBlock;\n    System.arraycopy(blocks.get(block), blockIndex * packedBytesLength, bytes, 0, packedBytesLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#readPackedValue(int,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#readPackedValue(int,byte[]).mjava","sourceNew":"  public void readPackedValue(int index, byte[] bytes) {\n    assert bytes.length == packedBytesLength;\n    int block = index / valuesPerBlock;\n    int blockIndex = index % valuesPerBlock;\n    System.arraycopy(blocks.get(block), blockIndex * packedBytesLength, bytes, 0, packedBytesLength);\n  }\n\n","sourceOld":"  void readPackedValue(int index, byte[] bytes) {\n    assert bytes.length == packedBytesLength;\n    int block = index / valuesPerBlock;\n    int blockIndex = index % valuesPerBlock;\n    System.arraycopy(blocks.get(block), blockIndex * packedBytesLength, bytes, 0, packedBytesLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78bdc7d6906146edb12a1a6c1f765ba680ed5124","date":1549523533,"type":4,"author":"iverase","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#readPackedValue(int,byte[]).mjava","sourceNew":null,"sourceOld":"  public void readPackedValue(int index, byte[] bytes) {\n    assert bytes.length == packedBytesLength;\n    int block = index / valuesPerBlock;\n    int blockIndex = index % valuesPerBlock;\n    System.arraycopy(blocks.get(block), blockIndex * packedBytesLength, bytes, 0, packedBytesLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9856095f7afb5a607bf5e65077615ed91273508c":["e3ce1ef883d26aa73919aa2d53991726e96caa13","9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"]},"commit2Childs":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["78bdc7d6906146edb12a1a6c1f765ba680ed5124","9856095f7afb5a607bf5e65077615ed91273508c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["9fc0d60683b47b5d922124c31f57c8b34734f9e6","9856095f7afb5a607bf5e65077615ed91273508c"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}