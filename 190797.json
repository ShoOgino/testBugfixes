{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testAddIndexes(boolean).mjava","commits":[{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testAddIndexes(boolean).mjava","pathOld":"/dev/null","sourceNew":"  public void testAddIndexes(boolean withDeletes) throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    final int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.NO));\n      doc.add(new NumericDocValuesField(\"foo\", random().nextInt(20)));\n      w.addDocument(doc);\n    }\n    if (withDeletes) {\n      for (int i = random().nextInt(5); i < numDocs; i += TestUtil.nextInt(random(), 1, 5)) {\n        w.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    final IndexReader reader = w.getReader();\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(new SimpleTextCodec()); // nocommit only simple-text supports sorting so far\n    Sort indexSort = new Sort(new SortField(\"foo\", SortField.Type.LONG));\n    iwc.setIndexSort(indexSort);\n    IndexWriter w2 = new IndexWriter(dir2, iwc);\n\n    CodecReader[] codecReaders = new CodecReader[reader.leaves().size()];\n    for (int i = 0; i < codecReaders.length; ++i) {\n      codecReaders[i] = (CodecReader) reader.leaves().get(i).reader();\n    }\n    w2.addIndexes(codecReaders);\n    final IndexReader reader2 = w2.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    final IndexSearcher searcher2 = newSearcher(reader2);\n    for (int i = 0; i < numDocs; ++i) {\n      Query query = new TermQuery(new Term(\"id\", Integer.toString(i)));\n      final TopDocs topDocs = searcher.search(query, 1);\n      final TopDocs topDocs2 = searcher2.search(query, 1);\n      assertEquals(topDocs.totalHits, topDocs2.totalHits);\n      if (topDocs.totalHits == 1) {\n        assertEquals(\n            MultiDocValues.getNumericValues(reader, \"foo\").get(topDocs.scoreDocs[0].doc),\n            MultiDocValues.getNumericValues(reader2, \"foo\").get(topDocs2.scoreDocs[0].doc));\n      }\n    }\n\n    IOUtils.close(reader, reader2, w, w2, dir, dir2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8","date":1462567286,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testAddIndexes(boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testAddIndexes(boolean).mjava","sourceNew":"  public void testAddIndexes(boolean withDeletes) throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    final int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.NO));\n      doc.add(new NumericDocValuesField(\"foo\", random().nextInt(20)));\n      w.addDocument(doc);\n    }\n    if (withDeletes) {\n      for (int i = random().nextInt(5); i < numDocs; i += TestUtil.nextInt(random(), 1, 5)) {\n        w.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    final IndexReader reader = w.getReader();\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    Sort indexSort = new Sort(new SortField(\"foo\", SortField.Type.LONG));\n    iwc.setIndexSort(indexSort);\n    IndexWriter w2 = new IndexWriter(dir2, iwc);\n\n    CodecReader[] codecReaders = new CodecReader[reader.leaves().size()];\n    for (int i = 0; i < codecReaders.length; ++i) {\n      codecReaders[i] = (CodecReader) reader.leaves().get(i).reader();\n    }\n    w2.addIndexes(codecReaders);\n    final IndexReader reader2 = w2.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    final IndexSearcher searcher2 = newSearcher(reader2);\n    for (int i = 0; i < numDocs; ++i) {\n      Query query = new TermQuery(new Term(\"id\", Integer.toString(i)));\n      final TopDocs topDocs = searcher.search(query, 1);\n      final TopDocs topDocs2 = searcher2.search(query, 1);\n      assertEquals(topDocs.totalHits, topDocs2.totalHits);\n      if (topDocs.totalHits == 1) {\n        assertEquals(\n            MultiDocValues.getNumericValues(reader, \"foo\").get(topDocs.scoreDocs[0].doc),\n            MultiDocValues.getNumericValues(reader2, \"foo\").get(topDocs2.scoreDocs[0].doc));\n      }\n    }\n\n    IOUtils.close(reader, reader2, w, w2, dir, dir2);\n  }\n\n","sourceOld":"  public void testAddIndexes(boolean withDeletes) throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    final int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.NO));\n      doc.add(new NumericDocValuesField(\"foo\", random().nextInt(20)));\n      w.addDocument(doc);\n    }\n    if (withDeletes) {\n      for (int i = random().nextInt(5); i < numDocs; i += TestUtil.nextInt(random(), 1, 5)) {\n        w.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    final IndexReader reader = w.getReader();\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(new SimpleTextCodec()); // nocommit only simple-text supports sorting so far\n    Sort indexSort = new Sort(new SortField(\"foo\", SortField.Type.LONG));\n    iwc.setIndexSort(indexSort);\n    IndexWriter w2 = new IndexWriter(dir2, iwc);\n\n    CodecReader[] codecReaders = new CodecReader[reader.leaves().size()];\n    for (int i = 0; i < codecReaders.length; ++i) {\n      codecReaders[i] = (CodecReader) reader.leaves().get(i).reader();\n    }\n    w2.addIndexes(codecReaders);\n    final IndexReader reader2 = w2.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    final IndexSearcher searcher2 = newSearcher(reader2);\n    for (int i = 0; i < numDocs; ++i) {\n      Query query = new TermQuery(new Term(\"id\", Integer.toString(i)));\n      final TopDocs topDocs = searcher.search(query, 1);\n      final TopDocs topDocs2 = searcher2.search(query, 1);\n      assertEquals(topDocs.totalHits, topDocs2.totalHits);\n      if (topDocs.totalHits == 1) {\n        assertEquals(\n            MultiDocValues.getNumericValues(reader, \"foo\").get(topDocs.scoreDocs[0].doc),\n            MultiDocValues.getNumericValues(reader2, \"foo\").get(topDocs2.scoreDocs[0].doc));\n      }\n    }\n\n    IOUtils.close(reader, reader2, w, w2, dir, dir2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22aab7a3b640b0dba26cc5e9416bc7af93614b46","date":1462575761,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testAddIndexes(boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testAddIndexes(boolean).mjava","sourceNew":"  public void testAddIndexes(boolean withDeletes) throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    final int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.NO));\n      doc.add(new NumericDocValuesField(\"foo\", random().nextInt(20)));\n      w.addDocument(doc);\n    }\n    if (withDeletes) {\n      for (int i = random().nextInt(5); i < numDocs; i += TestUtil.nextInt(random(), 1, 5)) {\n        w.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    final IndexReader reader = w.getReader();\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    Sort indexSort = new Sort(new SortField(\"foo\", SortField.Type.LONG));\n    iwc.setIndexSort(indexSort);\n    IndexWriter w2 = new IndexWriter(dir2, iwc);\n\n    CodecReader[] codecReaders = new CodecReader[reader.leaves().size()];\n    for (int i = 0; i < codecReaders.length; ++i) {\n      codecReaders[i] = (CodecReader) reader.leaves().get(i).reader();\n    }\n    w2.addIndexes(codecReaders);\n    final IndexReader reader2 = w2.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    final IndexSearcher searcher2 = newSearcher(reader2);\n    for (int i = 0; i < numDocs; ++i) {\n      Query query = new TermQuery(new Term(\"id\", Integer.toString(i)));\n      final TopDocs topDocs = searcher.search(query, 1);\n      final TopDocs topDocs2 = searcher2.search(query, 1);\n      assertEquals(topDocs.totalHits, topDocs2.totalHits);\n      if (topDocs.totalHits == 1) {\n        assertEquals(\n                     getNumericDocValue(reader, \"foo\", topDocs.scoreDocs[0].doc),\n                     getNumericDocValue(reader2, \"foo\", topDocs2.scoreDocs[0].doc));\n      }\n    }\n\n    IOUtils.close(reader, reader2, w, w2, dir, dir2);\n  }\n\n","sourceOld":"  public void testAddIndexes(boolean withDeletes) throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    final int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.NO));\n      doc.add(new NumericDocValuesField(\"foo\", random().nextInt(20)));\n      w.addDocument(doc);\n    }\n    if (withDeletes) {\n      for (int i = random().nextInt(5); i < numDocs; i += TestUtil.nextInt(random(), 1, 5)) {\n        w.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    final IndexReader reader = w.getReader();\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    Sort indexSort = new Sort(new SortField(\"foo\", SortField.Type.LONG));\n    iwc.setIndexSort(indexSort);\n    IndexWriter w2 = new IndexWriter(dir2, iwc);\n\n    CodecReader[] codecReaders = new CodecReader[reader.leaves().size()];\n    for (int i = 0; i < codecReaders.length; ++i) {\n      codecReaders[i] = (CodecReader) reader.leaves().get(i).reader();\n    }\n    w2.addIndexes(codecReaders);\n    final IndexReader reader2 = w2.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    final IndexSearcher searcher2 = newSearcher(reader2);\n    for (int i = 0; i < numDocs; ++i) {\n      Query query = new TermQuery(new Term(\"id\", Integer.toString(i)));\n      final TopDocs topDocs = searcher.search(query, 1);\n      final TopDocs topDocs2 = searcher2.search(query, 1);\n      assertEquals(topDocs.totalHits, topDocs2.totalHits);\n      if (topDocs.totalHits == 1) {\n        assertEquals(\n            MultiDocValues.getNumericValues(reader, \"foo\").get(topDocs.scoreDocs[0].doc),\n            MultiDocValues.getNumericValues(reader2, \"foo\").get(topDocs2.scoreDocs[0].doc));\n      }\n    }\n\n    IOUtils.close(reader, reader2, w, w2, dir, dir2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"815972da4a13279b8e975d2e32ca450649d6c295","date":1462635959,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testAddIndexes(boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testAddIndexes(boolean).mjava","sourceNew":"  public void testAddIndexes(boolean withDeletes) throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    final int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.NO));\n      doc.add(new NumericDocValuesField(\"foo\", random().nextInt(20)));\n      w.addDocument(doc);\n    }\n    if (withDeletes) {\n      for (int i = random().nextInt(5); i < numDocs; i += TestUtil.nextInt(random(), 1, 5)) {\n        w.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    final IndexReader reader = w.getReader();\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    Sort indexSort = new Sort(new SortField(\"foo\", SortField.Type.LONG));\n    iwc.setIndexSort(indexSort);\n    IndexWriter w2 = new IndexWriter(dir2, iwc);\n\n    CodecReader[] codecReaders = new CodecReader[reader.leaves().size()];\n    for (int i = 0; i < codecReaders.length; ++i) {\n      codecReaders[i] = (CodecReader) reader.leaves().get(i).reader();\n    }\n    w2.addIndexes(codecReaders);\n    final IndexReader reader2 = w2.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    final IndexSearcher searcher2 = newSearcher(reader2);\n    for (int i = 0; i < numDocs; ++i) {\n      Query query = new TermQuery(new Term(\"id\", Integer.toString(i)));\n      final TopDocs topDocs = searcher.search(query, 1);\n      final TopDocs topDocs2 = searcher2.search(query, 1);\n      assertEquals(topDocs.totalHits, topDocs2.totalHits);\n      if (topDocs.totalHits == 1) {\n        assertEquals(\n            MultiDocValues.getNumericValues(reader, \"foo\").get(topDocs.scoreDocs[0].doc),\n            MultiDocValues.getNumericValues(reader2, \"foo\").get(topDocs2.scoreDocs[0].doc));\n      }\n    }\n\n    IOUtils.close(reader, reader2, w, w2, dir, dir2);\n  }\n\n","sourceOld":"  public void testAddIndexes(boolean withDeletes) throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    final int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.NO));\n      doc.add(new NumericDocValuesField(\"foo\", random().nextInt(20)));\n      w.addDocument(doc);\n    }\n    if (withDeletes) {\n      for (int i = random().nextInt(5); i < numDocs; i += TestUtil.nextInt(random(), 1, 5)) {\n        w.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    final IndexReader reader = w.getReader();\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    Sort indexSort = new Sort(new SortField(\"foo\", SortField.Type.LONG));\n    iwc.setIndexSort(indexSort);\n    IndexWriter w2 = new IndexWriter(dir2, iwc);\n\n    CodecReader[] codecReaders = new CodecReader[reader.leaves().size()];\n    for (int i = 0; i < codecReaders.length; ++i) {\n      codecReaders[i] = (CodecReader) reader.leaves().get(i).reader();\n    }\n    w2.addIndexes(codecReaders);\n    final IndexReader reader2 = w2.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    final IndexSearcher searcher2 = newSearcher(reader2);\n    for (int i = 0; i < numDocs; ++i) {\n      Query query = new TermQuery(new Term(\"id\", Integer.toString(i)));\n      final TopDocs topDocs = searcher.search(query, 1);\n      final TopDocs topDocs2 = searcher2.search(query, 1);\n      assertEquals(topDocs.totalHits, topDocs2.totalHits);\n      if (topDocs.totalHits == 1) {\n        assertEquals(\n                     getNumericDocValue(reader, \"foo\", topDocs.scoreDocs[0].doc),\n                     getNumericDocValue(reader2, \"foo\", topDocs2.scoreDocs[0].doc));\n      }\n    }\n\n    IOUtils.close(reader, reader2, w, w2, dir, dir2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e03940e6e9044943de4b7ac08f8581da37a9534","date":1462870173,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testAddIndexes(boolean,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexSorting#testAddIndexes(boolean).mjava","sourceNew":"  public void testAddIndexes(boolean withDeletes, boolean useReaders) throws Exception {\n    Directory dir = newDirectory();\n    Sort indexSort = new Sort(new SortField(\"foo\", SortField.Type.LONG));\n    IndexWriterConfig iwc1 = newIndexWriterConfig();\n    if (random().nextBoolean()) {\n      iwc1.setIndexSort(indexSort);\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    final int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.NO));\n      doc.add(new NumericDocValuesField(\"foo\", random().nextInt(20)));\n      w.addDocument(doc);\n    }\n    if (withDeletes) {\n      for (int i = random().nextInt(5); i < numDocs; i += TestUtil.nextInt(random(), 1, 5)) {\n        w.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    if (random().nextBoolean()) {\n      w.forceMerge(1);\n    }\n    final IndexReader reader = w.getReader();\n    w.close();\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setIndexSort(indexSort);\n    IndexWriter w2 = new IndexWriter(dir2, iwc);\n\n    if (useReaders) {\n      CodecReader[] codecReaders = new CodecReader[reader.leaves().size()];\n      for (int i = 0; i < codecReaders.length; ++i) {\n        codecReaders[i] = (CodecReader) reader.leaves().get(i).reader();\n      }\n      w2.addIndexes(codecReaders);\n    } else {\n      w2.addIndexes(dir);\n    }\n    final IndexReader reader2 = w2.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    final IndexSearcher searcher2 = newSearcher(reader2);\n    for (int i = 0; i < numDocs; ++i) {\n      Query query = new TermQuery(new Term(\"id\", Integer.toString(i)));\n      final TopDocs topDocs = searcher.search(query, 1);\n      final TopDocs topDocs2 = searcher2.search(query, 1);\n      assertEquals(topDocs.totalHits, topDocs2.totalHits);\n      if (topDocs.totalHits == 1) {\n        assertEquals(\n            MultiDocValues.getNumericValues(reader, \"foo\").get(topDocs.scoreDocs[0].doc),\n            MultiDocValues.getNumericValues(reader2, \"foo\").get(topDocs2.scoreDocs[0].doc));\n      }\n    }\n\n    IOUtils.close(reader, reader2, w2, dir, dir2);\n  }\n\n","sourceOld":"  public void testAddIndexes(boolean withDeletes) throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    final int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; ++i) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Store.NO));\n      doc.add(new NumericDocValuesField(\"foo\", random().nextInt(20)));\n      w.addDocument(doc);\n    }\n    if (withDeletes) {\n      for (int i = random().nextInt(5); i < numDocs; i += TestUtil.nextInt(random(), 1, 5)) {\n        w.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    final IndexReader reader = w.getReader();\n\n    Directory dir2 = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    Sort indexSort = new Sort(new SortField(\"foo\", SortField.Type.LONG));\n    iwc.setIndexSort(indexSort);\n    IndexWriter w2 = new IndexWriter(dir2, iwc);\n\n    CodecReader[] codecReaders = new CodecReader[reader.leaves().size()];\n    for (int i = 0; i < codecReaders.length; ++i) {\n      codecReaders[i] = (CodecReader) reader.leaves().get(i).reader();\n    }\n    w2.addIndexes(codecReaders);\n    final IndexReader reader2 = w2.getReader();\n    final IndexSearcher searcher = newSearcher(reader);\n    final IndexSearcher searcher2 = newSearcher(reader2);\n    for (int i = 0; i < numDocs; ++i) {\n      Query query = new TermQuery(new Term(\"id\", Integer.toString(i)));\n      final TopDocs topDocs = searcher.search(query, 1);\n      final TopDocs topDocs2 = searcher2.search(query, 1);\n      assertEquals(topDocs.totalHits, topDocs2.totalHits);\n      if (topDocs.totalHits == 1) {\n        assertEquals(\n            MultiDocValues.getNumericValues(reader, \"foo\").get(topDocs.scoreDocs[0].doc),\n            MultiDocValues.getNumericValues(reader2, \"foo\").get(topDocs2.scoreDocs[0].doc));\n      }\n    }\n\n    IOUtils.close(reader, reader2, w, w2, dir, dir2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5e03940e6e9044943de4b7ac08f8581da37a9534":["815972da4a13279b8e975d2e32ca450649d6c295"],"815972da4a13279b8e975d2e32ca450649d6c295":["22aab7a3b640b0dba26cc5e9416bc7af93614b46"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"22aab7a3b640b0dba26cc5e9416bc7af93614b46":["fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8"]},"commit2Childs":{"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ceaef6cfc68c8ab22a684192e469a8280f9e6e70","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5e03940e6e9044943de4b7ac08f8581da37a9534":[],"815972da4a13279b8e975d2e32ca450649d6c295":["5e03940e6e9044943de4b7ac08f8581da37a9534"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["22aab7a3b640b0dba26cc5e9416bc7af93614b46"],"22aab7a3b640b0dba26cc5e9416bc7af93614b46":["815972da4a13279b8e975d2e32ca450649d6c295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5e03940e6e9044943de4b7ac08f8581da37a9534","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}