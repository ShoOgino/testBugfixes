{"path":"lucene/src/test/org/apache/lucene/analysis/TestCharArraySet#testUnmodifiableSet().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestCharArraySet#testUnmodifiableSet().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestCharArraySet#testUnmodifiableSet().mjava","sourceNew":"  public void testUnmodifiableSet(){\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 10,true);\n    set.addAll(Arrays.asList(TEST_STOP_WORDS));\n    set.add(Integer.valueOf(1));\n    final int size = set.size();\n    set = CharArraySet.unmodifiableSet(set);\n    assertEquals(\"Set size changed due to unmodifiableSet call\" , size, set.size());\n    for (String stopword : TEST_STOP_WORDS) {\n      assertTrue(set.contains(stopword));\n    }\n    assertTrue(set.contains(Integer.valueOf(1)));\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    \n    try{\n      CharArraySet.unmodifiableSet(null);\n      fail(\"can not make null unmodifiable\");\n    }catch (NullPointerException e) {\n      // expected\n    }\n  }\n\n","sourceOld":"  public void testUnmodifiableSet(){\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 10,true);\n    set.addAll(Arrays.asList(TEST_STOP_WORDS));\n    set.add(Integer.valueOf(1));\n    final int size = set.size();\n    set = CharArraySet.unmodifiableSet(set);\n    assertEquals(\"Set size changed due to unmodifiableSet call\" , size, set.size());\n    for (String stopword : TEST_STOP_WORDS) {\n      assertTrue(set.contains(stopword));\n    }\n    assertTrue(set.contains(Integer.valueOf(1)));\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    \n    try{\n      CharArraySet.unmodifiableSet(null);\n      fail(\"can not make null unmodifiable\");\n    }catch (NullPointerException e) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9dd42aeb8984bdfef80056722e7c1c239b7e3c07","date":1274826512,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/util/TestCharArraySet#testUnmodifiableSet().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestCharArraySet#testUnmodifiableSet().mjava","sourceNew":"  public void testUnmodifiableSet(){\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 10,true);\n    set.addAll(Arrays.asList(TEST_STOP_WORDS));\n    set.add(Integer.valueOf(1));\n    final int size = set.size();\n    set = CharArraySet.unmodifiableSet(set);\n    assertEquals(\"Set size changed due to unmodifiableSet call\" , size, set.size());\n    for (String stopword : TEST_STOP_WORDS) {\n      assertTrue(set.contains(stopword));\n    }\n    assertTrue(set.contains(Integer.valueOf(1)));\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    \n    try{\n      CharArraySet.unmodifiableSet(null);\n      fail(\"can not make null unmodifiable\");\n    }catch (NullPointerException e) {\n      // expected\n    }\n  }\n\n","sourceOld":"  public void testUnmodifiableSet(){\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 10,true);\n    set.addAll(Arrays.asList(TEST_STOP_WORDS));\n    set.add(Integer.valueOf(1));\n    final int size = set.size();\n    set = CharArraySet.unmodifiableSet(set);\n    assertEquals(\"Set size changed due to unmodifiableSet call\" , size, set.size());\n    for (String stopword : TEST_STOP_WORDS) {\n      assertTrue(set.contains(stopword));\n    }\n    assertTrue(set.contains(Integer.valueOf(1)));\n    assertTrue(set.contains(\"1\"));\n    assertTrue(set.contains(new char[]{'1'}));\n    \n    try{\n      CharArraySet.unmodifiableSet(null);\n      fail(\"can not make null unmodifiable\");\n    }catch (NullPointerException e) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}