{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","commits":[{"id":"b5438f921924c13c882efeac58b6d3a7c2a3978e","date":1400171541,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    PostingsWriterBase postingsWriter = new IDVersionPostingsWriter();\n    boolean success = false;\n    try {\n      FieldsConsumer ret = new BlockTreeTermsWriter(state, \n                                                    postingsWriter,\n                                                    minTermsInBlock, \n                                                    maxTermsInBlock);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsWriter);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e82ae1be1dc68d59626e4bb94d2029d309b20878","date":1400195857,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    PostingsWriterBase postingsWriter = new IDVersionPostingsWriter();\n    boolean success = false;\n    try {\n      FieldsConsumer ret = new VersionBlockTreeTermsWriter(state, \n                                                           postingsWriter,\n                                                           minTermsInBlock, \n                                                           maxTermsInBlock);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsWriter);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    PostingsWriterBase postingsWriter = new IDVersionPostingsWriter();\n    boolean success = false;\n    try {\n      FieldsConsumer ret = new BlockTreeTermsWriter(state, \n                                                    postingsWriter,\n                                                    minTermsInBlock, \n                                                    maxTermsInBlock);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsWriter);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2a0b58a171748f1022e63a0483908e6f50b0abf","date":1400686165,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    PostingsWriterBase postingsWriter = new IDVersionPostingsWriter(state);\n    boolean success = false;\n    try {\n      FieldsConsumer ret = new VersionBlockTreeTermsWriter(state, \n                                                           postingsWriter,\n                                                           minTermsInBlock, \n                                                           maxTermsInBlock);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsWriter);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    PostingsWriterBase postingsWriter = new IDVersionPostingsWriter();\n    boolean success = false;\n    try {\n      FieldsConsumer ret = new VersionBlockTreeTermsWriter(state, \n                                                           postingsWriter,\n                                                           minTermsInBlock, \n                                                           maxTermsInBlock);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsWriter);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    PostingsWriterBase postingsWriter = new IDVersionPostingsWriter(state);\n    boolean success = false;\n    try {\n      FieldsConsumer ret = new VersionBlockTreeTermsWriter(state, \n                                                           postingsWriter,\n                                                           minTermsInBlock, \n                                                           maxTermsInBlock);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsWriter);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n    PostingsWriterBase postingsWriter = new IDVersionPostingsWriter(state);\n    boolean success = false;\n    try {\n      FieldsConsumer ret = new VersionBlockTreeTermsWriter(state, \n                                                           postingsWriter,\n                                                           minTermsInBlock, \n                                                           maxTermsInBlock);\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(postingsWriter);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["a2a0b58a171748f1022e63a0483908e6f50b0abf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a2a0b58a171748f1022e63a0483908e6f50b0abf":["e82ae1be1dc68d59626e4bb94d2029d309b20878"],"b5438f921924c13c882efeac58b6d3a7c2a3978e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e82ae1be1dc68d59626e4bb94d2029d309b20878":["b5438f921924c13c882efeac58b6d3a7c2a3978e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5438f921924c13c882efeac58b6d3a7c2a3978e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a2a0b58a171748f1022e63a0483908e6f50b0abf":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"b5438f921924c13c882efeac58b6d3a7c2a3978e":["e82ae1be1dc68d59626e4bb94d2029d309b20878"],"e82ae1be1dc68d59626e4bb94d2029d309b20878":["a2a0b58a171748f1022e63a0483908e6f50b0abf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}