{"path":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#checkFooAndBarMeta(String,ZkStateReader).mjava","commits":[{"id":"b10ab715806383f3d7f9eece13c26772a9116022","date":1517176579,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#checkFooAndBarMeta(String,ZkStateReader).mjava","pathOld":"/dev/null","sourceNew":"  private void checkFooAndBarMeta(String aliasName, ZkStateReader zkStateReader) {\n    Map<String, String> meta = zkStateReader.getAliases().getCollectionAliasMetadata(aliasName);\n    assertNotNull(meta);\n    assertTrue(meta.containsKey(\"foo\"));\n    assertEquals(\"baz\", meta.get(\"foo\"));\n    assertTrue(meta.containsKey(\"bar\"));\n    assertEquals(\"bam\", meta.get(\"bar\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fdecc956246aa010f419a5369fc8a285b9d87e3","date":1517892347,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#checkFooAndBarMeta(String,ZkStateReader).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#checkFooAndBarMeta(String,ZkStateReader).mjava","sourceNew":"  private void checkFooAndBarMeta(String aliasName, ZkStateReader zkStateReader) throws Exception {\n    zkStateReader.aliasesHolder.update(); // ensure our view is up to date\n    Map<String, String> meta = zkStateReader.getAliases().getCollectionAliasMetadata(aliasName);\n    assertNotNull(meta);\n    assertTrue(meta.containsKey(\"foo\"));\n    assertEquals(\"baz\", meta.get(\"foo\"));\n    assertTrue(meta.containsKey(\"bar\"));\n    assertEquals(\"bam\", meta.get(\"bar\"));\n  }\n\n","sourceOld":"  private void checkFooAndBarMeta(String aliasName, ZkStateReader zkStateReader) {\n    Map<String, String> meta = zkStateReader.getAliases().getCollectionAliasMetadata(aliasName);\n    assertNotNull(meta);\n    assertTrue(meta.containsKey(\"foo\"));\n    assertEquals(\"baz\", meta.get(\"foo\"));\n    assertTrue(meta.containsKey(\"bar\"));\n    assertEquals(\"bam\", meta.get(\"bar\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cbd743a4843f513f793670e3ab0e272bf824faf","date":1518149529,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#checkFooAndBarMeta(String,ZkStateReader).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#checkFooAndBarMeta(String,ZkStateReader).mjava","sourceNew":"  private void checkFooAndBarMeta(String aliasName, ZkStateReader zkStateReader) throws Exception {\n    zkStateReader.aliasesManager.update(); // ensure our view is up to date\n    Map<String, String> meta = zkStateReader.getAliases().getCollectionAliasMetadata(aliasName);\n    assertNotNull(meta);\n    assertTrue(meta.containsKey(\"foo\"));\n    assertEquals(\"baz\", meta.get(\"foo\"));\n    assertTrue(meta.containsKey(\"bar\"));\n    assertEquals(\"bam\", meta.get(\"bar\"));\n  }\n\n","sourceOld":"  private void checkFooAndBarMeta(String aliasName, ZkStateReader zkStateReader) throws Exception {\n    zkStateReader.aliasesHolder.update(); // ensure our view is up to date\n    Map<String, String> meta = zkStateReader.getAliases().getCollectionAliasMetadata(aliasName);\n    assertNotNull(meta);\n    assertTrue(meta.containsKey(\"foo\"));\n    assertEquals(\"baz\", meta.get(\"foo\"));\n    assertTrue(meta.containsKey(\"bar\"));\n    assertEquals(\"bam\", meta.get(\"bar\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767","date":1520865397,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#checkFooAndBarMeta(String,ZkStateReader).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#checkFooAndBarMeta(String,ZkStateReader).mjava","sourceNew":"  private void checkFooAndBarMeta(String aliasName, ZkStateReader zkStateReader) throws Exception {\n    zkStateReader.aliasesManager.update(); // ensure our view is up to date\n    Map<String, String> meta = zkStateReader.getAliases().getCollectionAliasProperties(aliasName);\n    assertNotNull(meta);\n    assertTrue(meta.containsKey(\"foo\"));\n    assertEquals(\"baz\", meta.get(\"foo\"));\n    assertTrue(meta.containsKey(\"bar\"));\n    assertEquals(\"bam\", meta.get(\"bar\"));\n  }\n\n","sourceOld":"  private void checkFooAndBarMeta(String aliasName, ZkStateReader zkStateReader) throws Exception {\n    zkStateReader.aliasesManager.update(); // ensure our view is up to date\n    Map<String, String> meta = zkStateReader.getAliases().getCollectionAliasMetadata(aliasName);\n    assertNotNull(meta);\n    assertTrue(meta.containsKey(\"foo\"));\n    assertEquals(\"baz\", meta.get(\"foo\"));\n    assertTrue(meta.containsKey(\"bar\"));\n    assertEquals(\"bam\", meta.get(\"bar\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["3cbd743a4843f513f793670e3ab0e272bf824faf"],"3cbd743a4843f513f793670e3ab0e272bf824faf":["3fdecc956246aa010f419a5369fc8a285b9d87e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b10ab715806383f3d7f9eece13c26772a9116022":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3fdecc956246aa010f419a5369fc8a285b9d87e3":["b10ab715806383f3d7f9eece13c26772a9116022"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"]},"commit2Childs":{"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cbd743a4843f513f793670e3ab0e272bf824faf":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b10ab715806383f3d7f9eece13c26772a9116022"],"b10ab715806383f3d7f9eece13c26772a9116022":["3fdecc956246aa010f419a5369fc8a285b9d87e3"],"3fdecc956246aa010f419a5369fc8a285b9d87e3":["3cbd743a4843f513f793670e3ab0e272bf824faf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}