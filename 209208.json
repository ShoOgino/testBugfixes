{"path":"lucene/src/test/org/apache/lucene/TestExternalCodecs#testTermsOrder(IndexReader).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/TestExternalCodecs#testTermsOrder(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  private void testTermsOrder(IndexReader r) throws Exception {\n\n    // Verify sort order matches what my comparator said:\n    BytesRef lastBytesRef = null;\n    TermsEnum terms = MultiFields.getFields(r).terms(\"id\").iterator();\n    //System.out.println(\"id terms:\");\n    while(true) {\n      BytesRef t = terms.next();\n      if (t == null) {\n        break;\n      }\n      //System.out.println(\"  \" + t);\n      if (lastBytesRef == null) {\n        lastBytesRef = new BytesRef(t);\n      } else {\n        assertTrue(\"terms in wrong order last=\" + lastBytesRef.utf8ToString() + \" current=\" + t.utf8ToString(), reverseUnicodeComparator.compare(lastBytesRef, t) < 0);\n        lastBytesRef.copy(t);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","date":1297938719,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs#testTermsOrder(IndexReader).mjava","sourceNew":null,"sourceOld":"  private void testTermsOrder(IndexReader r) throws Exception {\n\n    // Verify sort order matches what my comparator said:\n    BytesRef lastBytesRef = null;\n    TermsEnum terms = MultiFields.getFields(r).terms(\"id\").iterator();\n    //System.out.println(\"id terms:\");\n    while(true) {\n      BytesRef t = terms.next();\n      if (t == null) {\n        break;\n      }\n      //System.out.println(\"  \" + t);\n      if (lastBytesRef == null) {\n        lastBytesRef = new BytesRef(t);\n      } else {\n        assertTrue(\"terms in wrong order last=\" + lastBytesRef.utf8ToString() + \" current=\" + t.utf8ToString(), reverseUnicodeComparator.compare(lastBytesRef, t) < 0);\n        lastBytesRef.copy(t);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs#testTermsOrder(IndexReader).mjava","sourceNew":null,"sourceOld":"  private void testTermsOrder(IndexReader r) throws Exception {\n\n    // Verify sort order matches what my comparator said:\n    BytesRef lastBytesRef = null;\n    TermsEnum terms = MultiFields.getFields(r).terms(\"id\").iterator();\n    //System.out.println(\"id terms:\");\n    while(true) {\n      BytesRef t = terms.next();\n      if (t == null) {\n        break;\n      }\n      //System.out.println(\"  \" + t);\n      if (lastBytesRef == null) {\n        lastBytesRef = new BytesRef(t);\n      } else {\n        assertTrue(\"terms in wrong order last=\" + lastBytesRef.utf8ToString() + \" current=\" + t.utf8ToString(), reverseUnicodeComparator.compare(lastBytesRef, t) < 0);\n        lastBytesRef.copy(t);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/TestExternalCodecs#testTermsOrder(IndexReader).mjava","sourceNew":null,"sourceOld":"  private void testTermsOrder(IndexReader r) throws Exception {\n\n    // Verify sort order matches what my comparator said:\n    BytesRef lastBytesRef = null;\n    TermsEnum terms = MultiFields.getFields(r).terms(\"id\").iterator();\n    //System.out.println(\"id terms:\");\n    while(true) {\n      BytesRef t = terms.next();\n      if (t == null) {\n        break;\n      }\n      //System.out.println(\"  \" + t);\n      if (lastBytesRef == null) {\n        lastBytesRef = new BytesRef(t);\n      } else {\n        assertTrue(\"terms in wrong order last=\" + lastBytesRef.utf8ToString() + \" current=\" + t.utf8ToString(), reverseUnicodeComparator.compare(lastBytesRef, t) < 0);\n        lastBytesRef.copy(t);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["f1bdbf92da222965b46c0a942c3857ba56e5c638","4fd64b6aa64934b0e35d9ec3e6c5a5c60ffc1762","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}