{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","commits":[{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"parameter b (norms omitted for field)\", subs);\n    } else {\n      float doclen = decodeNormValue((byte)norms.get(doc));\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80ece5570adaa8cfbf5c18c1d5a988c32a4d5abb","date":1429629308,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      float doclen = decodeNormValue((byte)norms.get(doc));\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"parameter b (norms omitted for field)\", subs);\n    } else {\n      float doclen = decodeNormValue((byte)norms.get(doc));\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advance(doc) == doc) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      float doclen = decodeNormValue((byte)norms.get(doc));\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advance(doc) == doc) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      float doclen = decodeNormValue((byte)norms.get(doc));\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advance(doc) == doc) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      float doclen = decodeNormValue((byte)norms.get(doc));\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11134e449dabe11d6d0ff6a564d84b82cbe93722","date":1477299083,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advance(doc) == doc) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2714c85633b642b29871cf5ff8d17d3ba7bfd76","date":1477307753,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advance(doc) == doc) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advance(doc) == doc) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"665c23854e5ad5caf7ea153341d7d24e5dffbc4a","date":1478786509,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1) from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\", subs);\n    }\n  }\n\n","sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1) from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\", subs);\n    }\n  }\n\n","sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues,float[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms, float[] lengthCache) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1) from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = lengthCache[norm & 0xff];\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\", subs);\n    }\n  }\n\n","sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1) from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainTFNorm(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":null,"sourceOld":"  private Explanation explainTFNorm(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    List<Explanation> subs = new ArrayList<>();\n    subs.add(freq);\n    subs.add(Explanation.match(k1, \"parameter k1\"));\n    if (norms == null) {\n      subs.add(Explanation.match(0, \"parameter b (norms omitted for field)\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1) from:\", subs);\n    } else {\n      byte norm;\n      if (norms.advanceExact(doc)) {\n        norm = (byte) norms.longValue();\n      } else {\n        norm = 0;\n      }\n      float doclen = decodeNormValue(norm);\n      subs.add(Explanation.match(b, \"parameter b\"));\n      subs.add(Explanation.match(stats.avgdl, \"avgFieldLength\"));\n      subs.add(Explanation.match(doclen, \"fieldLength\"));\n      return Explanation.match(\n          (freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)),\n          \"tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:\", subs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"199dfa410f1fdbfd3294106b04096cce5ed34b21":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","665c23854e5ad5caf7ea153341d7d24e5dffbc4a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80ece5570adaa8cfbf5c18c1d5a988c32a4d5abb","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["665c23854e5ad5caf7ea153341d7d24e5dffbc4a","615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["665c23854e5ad5caf7ea153341d7d24e5dffbc4a"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["80ece5570adaa8cfbf5c18c1d5a988c32a4d5abb","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["80ece5570adaa8cfbf5c18c1d5a988c32a4d5abb"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"665c23854e5ad5caf7ea153341d7d24e5dffbc4a":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"80ece5570adaa8cfbf5c18c1d5a988c32a4d5abb":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","11134e449dabe11d6d0ff6a564d84b82cbe93722"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615370d2b876c3435773b5174df2e2242ad7981a"]},"commit2Childs":{"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["199dfa410f1fdbfd3294106b04096cce5ed34b21"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","11134e449dabe11d6d0ff6a564d84b82cbe93722","d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"665c23854e5ad5caf7ea153341d7d24e5dffbc4a":["199dfa410f1fdbfd3294106b04096cce5ed34b21","e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a"],"80ece5570adaa8cfbf5c18c1d5a988c32a4d5abb":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["80ece5570adaa8cfbf5c18c1d5a988c32a4d5abb"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","665c23854e5ad5caf7ea153341d7d24e5dffbc4a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}