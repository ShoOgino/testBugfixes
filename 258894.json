{"path":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeCoreDescriptor(CoreContainer,String,String,String).mjava","commits":[{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeCoreDescriptor(CoreContainer,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeCoreDescriptor(CoreContainer,String,String,String,String).mjava","sourceNew":"  private static CoreDescriptor makeCoreDescriptor(CoreContainer cc, String coreName, String isTransient, String loadOnStartup) {\n    return new CoreDescriptor(cc, coreName, cc.getCoreRootDirectory().resolve(coreName),\n        CoreDescriptor.CORE_TRANSIENT, isTransient,\n        CoreDescriptor.CORE_LOADONSTARTUP, loadOnStartup);\n  }\n\n","sourceOld":"  private static CoreDescriptor makeCoreDescriptor(CoreContainer cc, String coreName, String instanceDir, String isTransient, String loadOnStartup) {\n    return new CoreDescriptor(cc, coreName, instanceDir,\n        CoreDescriptor.CORE_TRANSIENT, isTransient,\n        CoreDescriptor.CORE_LOADONSTARTUP, loadOnStartup);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeCoreDescriptor(CoreContainer,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeCoreDescriptor(CoreContainer,String,String,String).mjava","sourceNew":"  private static CoreDescriptor makeCoreDescriptor(CoreContainer cc, String coreName, String isTransient, String loadOnStartup) {\n    return new CoreDescriptor(coreName, cc.getCoreRootDirectory().resolve(coreName), cc.getContainerProperties(), false,\n        CoreDescriptor.CORE_TRANSIENT, isTransient,\n        CoreDescriptor.CORE_LOADONSTARTUP, loadOnStartup);\n  }\n\n","sourceOld":"  private static CoreDescriptor makeCoreDescriptor(CoreContainer cc, String coreName, String isTransient, String loadOnStartup) {\n    return new CoreDescriptor(cc, coreName, cc.getCoreRootDirectory().resolve(coreName),\n        CoreDescriptor.CORE_TRANSIENT, isTransient,\n        CoreDescriptor.CORE_LOADONSTARTUP, loadOnStartup);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeCoreDescriptor(CoreContainer,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeCoreDescriptor(CoreContainer,String,String,String).mjava","sourceNew":"  private static CoreDescriptor makeCoreDescriptor(CoreContainer cc, String coreName, String isTransient, String loadOnStartup) {\n    return new CoreDescriptor(coreName, cc.getCoreRootDirectory().resolve(coreName), cc.getContainerProperties(), false,\n        CoreDescriptor.CORE_TRANSIENT, isTransient,\n        CoreDescriptor.CORE_LOADONSTARTUP, loadOnStartup);\n  }\n\n","sourceOld":"  private static CoreDescriptor makeCoreDescriptor(CoreContainer cc, String coreName, String isTransient, String loadOnStartup) {\n    return new CoreDescriptor(cc, coreName, cc.getCoreRootDirectory().resolve(coreName),\n        CoreDescriptor.CORE_TRANSIENT, isTransient,\n        CoreDescriptor.CORE_LOADONSTARTUP, loadOnStartup);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e4fb176991e13ab85dfe62dceeb287dde115745","date":1579630717,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeCoreDescriptor(CoreContainer,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestLazyCores#makeCoreDescriptor(CoreContainer,String,String,String).mjava","sourceNew":"  private static CoreDescriptor makeCoreDescriptor(CoreContainer cc, String coreName, String isTransient, String loadOnStartup) {\n    return new CoreDescriptor(coreName, cc.getCoreRootDirectory().resolve(coreName), cc,\n        CoreDescriptor.CORE_TRANSIENT, isTransient,\n        CoreDescriptor.CORE_LOADONSTARTUP, loadOnStartup);\n  }\n\n","sourceOld":"  private static CoreDescriptor makeCoreDescriptor(CoreContainer cc, String coreName, String isTransient, String loadOnStartup) {\n    return new CoreDescriptor(coreName, cc.getCoreRootDirectory().resolve(coreName), cc.getContainerProperties(), false,\n        CoreDescriptor.CORE_TRANSIENT, isTransient,\n        CoreDescriptor.CORE_LOADONSTARTUP, loadOnStartup);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3e4fb176991e13ab85dfe62dceeb287dde115745":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e4fb176991e13ab85dfe62dceeb287dde115745"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"3e4fb176991e13ab85dfe62dceeb287dde115745":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["3e4fb176991e13ab85dfe62dceeb287dde115745"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}