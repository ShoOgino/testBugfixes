{"path":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","sourceNew":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT, new KeywordAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT, new KeywordAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7edb20114e86ec883b0b08bd624eee852c565c06","date":1273941247,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","sourceNew":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT, new KeywordAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Random,Directory,int,boolean,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","sourceNew":"    private static void initIndex(Random random, Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, newIndexWriterConfig(random,\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","sourceOld":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiSearcher#initIndex(Directory,int,boolean,String).mjava","sourceNew":null,"sourceOld":"    private static void initIndex(Directory directory, int nDocs, boolean create, String contents2) throws IOException {\n        IndexWriter indexWriter=null;\n        \n        try {\n          indexWriter = new IndexWriter(directory, new IndexWriterConfig(\n              TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(\n                  create ? OpenMode.CREATE : OpenMode.APPEND));\n            \n            for (int i=0; i<nDocs; i++) {\n                indexWriter.addDocument(createDocument(\"doc\" + i, contents2));\n            }\n        } finally {\n            if (indexWriter!=null) {\n                indexWriter.close();\n            }\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7edb20114e86ec883b0b08bd624eee852c565c06":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["7edb20114e86ec883b0b08bd624eee852c565c06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["7edb20114e86ec883b0b08bd624eee852c565c06","ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7edb20114e86ec883b0b08bd624eee852c565c06":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7edb20114e86ec883b0b08bd624eee852c565c06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}