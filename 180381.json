{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  public abstract void setField(FieldInfo fieldInfo);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","sourceNew":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    omitTermFreqAndPositions = fieldInfo.omitTermFreqAndPositions;\n    storePayloads = fieldInfo.storePayloads;\n  }\n\n","sourceOld":"  public abstract void setField(FieldInfo fieldInfo);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","sourceNew":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    omitTermFreqAndPositions = fieldInfo.omitTermFreqAndPositions;\n    storePayloads = fieldInfo.storePayloads;\n  }\n\n","sourceOld":"  public abstract void setField(FieldInfo fieldInfo);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","sourceNew":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    //System.out.println(\"SPW: setField\");\n    this.fieldInfo = fieldInfo;\n    omitTermFreqAndPositions = fieldInfo.omitTermFreqAndPositions;\n    storePayloads = fieldInfo.storePayloads;\n    //System.out.println(\"  set init blockFreqStart=\" + freqStart);\n    //System.out.println(\"  set init blockProxStart=\" + proxStart);\n  }\n\n","sourceOld":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    omitTermFreqAndPositions = fieldInfo.omitTermFreqAndPositions;\n    storePayloads = fieldInfo.storePayloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","sourceNew":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    //System.out.println(\"SPW: setField\");\n    this.fieldInfo = fieldInfo;\n    omitTermFreqAndPositions = fieldInfo.omitTermFreqAndPositions;\n    storePayloads = fieldInfo.storePayloads;\n    //System.out.println(\"  set init blockFreqStart=\" + freqStart);\n    //System.out.println(\"  set init blockProxStart=\" + proxStart);\n  }\n\n","sourceOld":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    omitTermFreqAndPositions = fieldInfo.omitTermFreqAndPositions;\n    storePayloads = fieldInfo.storePayloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","sourceNew":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    //System.out.println(\"SPW: setField\");\n    this.fieldInfo = fieldInfo;\n    omitTermFreqAndPositions = fieldInfo.omitTermFreqAndPositions;\n    storePayloads = fieldInfo.storePayloads;\n    //System.out.println(\"  set init blockFreqStart=\" + freqStart);\n    //System.out.println(\"  set init blockProxStart=\" + proxStart);\n  }\n\n","sourceOld":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    omitTermFreqAndPositions = fieldInfo.omitTermFreqAndPositions;\n    storePayloads = fieldInfo.storePayloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","sourceNew":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    //System.out.println(\"SPW: setField\");\n    this.fieldInfo = fieldInfo;\n    indexOptions = fieldInfo.indexOptions;\n    storePayloads = fieldInfo.storePayloads;\n    //System.out.println(\"  set init blockFreqStart=\" + freqStart);\n    //System.out.println(\"  set init blockProxStart=\" + proxStart);\n  }\n\n","sourceOld":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    //System.out.println(\"SPW: setField\");\n    this.fieldInfo = fieldInfo;\n    omitTermFreqAndPositions = fieldInfo.omitTermFreqAndPositions;\n    storePayloads = fieldInfo.storePayloads;\n    //System.out.println(\"  set init blockFreqStart=\" + freqStart);\n    //System.out.println(\"  set init blockProxStart=\" + proxStart);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","sourceNew":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    //System.out.println(\"SPW: setField\");\n    /*\n    if (BlockTreeTermsWriter.DEBUG && fieldInfo.name.equals(\"id\")) {\n      DEBUG = true;\n    } else {\n      DEBUG = false;\n    }\n    */\n    this.fieldInfo = fieldInfo;\n    indexOptions = fieldInfo.indexOptions;\n    storePayloads = fieldInfo.storePayloads;\n    //System.out.println(\"  set init blockFreqStart=\" + freqStart);\n    //System.out.println(\"  set init blockProxStart=\" + proxStart);\n  }\n\n","sourceOld":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    //System.out.println(\"SPW: setField\");\n    this.fieldInfo = fieldInfo;\n    indexOptions = fieldInfo.indexOptions;\n    storePayloads = fieldInfo.storePayloads;\n    //System.out.println(\"  set init blockFreqStart=\" + freqStart);\n    //System.out.println(\"  set init blockProxStart=\" + proxStart);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsWriter#setField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#setField(FieldInfo).mjava","sourceNew":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    //System.out.println(\"SPW: setField\");\n    /*\n    if (BlockTreeTermsWriter.DEBUG && fieldInfo.name.equals(\"id\")) {\n      DEBUG = true;\n    } else {\n      DEBUG = false;\n    }\n    */\n    this.fieldInfo = fieldInfo;\n    indexOptions = fieldInfo.indexOptions;\n    storePayloads = fieldInfo.storePayloads;\n    //System.out.println(\"  set init blockFreqStart=\" + freqStart);\n    //System.out.println(\"  set init blockProxStart=\" + proxStart);\n  }\n\n","sourceOld":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public void setField(FieldInfo fieldInfo) {\n    //System.out.println(\"SPW: setField\");\n    /*\n    if (BlockTreeTermsWriter.DEBUG && fieldInfo.name.equals(\"id\")) {\n      DEBUG = true;\n    } else {\n      DEBUG = false;\n    }\n    */\n    this.fieldInfo = fieldInfo;\n    indexOptions = fieldInfo.indexOptions;\n    storePayloads = fieldInfo.storePayloads;\n    //System.out.println(\"  set init blockFreqStart=\" + freqStart);\n    //System.out.println(\"  set init blockProxStart=\" + proxStart);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"7b91922b55d15444d554721b352861d028eb8278":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["99cf56f3a650b908f7017a72f9d23940418f8a52","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["99cf56f3a650b908f7017a72f9d23940418f8a52"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","99cf56f3a650b908f7017a72f9d23940418f8a52"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["7b91922b55d15444d554721b352861d028eb8278"],"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99cf56f3a650b908f7017a72f9d23940418f8a52"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"99cf56f3a650b908f7017a72f9d23940418f8a52":["29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}