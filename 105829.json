{"path":"src/common/org/apache/solr/common/params/ModifiableSolrParams#remove(String,String).mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/params/ModifiableSolrParams#remove(String,String).mjava","pathOld":"src/java/org/apache/solr/common/params/ModifiableSolrParams#remove(String,String).mjava","sourceNew":"  /** \n   * remove the given value for the given name\n   * \n   * @return true if the item was removed, false if null or not present\n   */\n  public boolean remove(String name, String value) {\n     String[] tmp = vals.get(name);\n     if (tmp==null) return false;\n     for (int i=0; i<tmp.length; i++) {\n       if (tmp[i].equals(value)) {\n         String[] tmp2 = new String[tmp.length-1];\n         if (tmp2.length==0) {\n           tmp2 = null;\n           remove(name);\n         } else {\n           System.arraycopy(tmp, 0, tmp2, 0, i);\n           System.arraycopy(tmp, i+1, tmp2, i, tmp.length-i-1);\n           set(name, tmp2);\n         }\n         return true;\n       }\n     }\n     return false;\n  }\n\n","sourceOld":"  /** \n   * remove the given value for the given name\n   * \n   * @return true if the item was removed, false if null or not present\n   */\n  public boolean remove(String name, String value) {\n     String[] tmp = vals.get(name);\n     if (tmp==null) return false;\n     for (int i=0; i<tmp.length; i++) {\n       if (tmp[i].equals(value)) {\n         String[] tmp2 = new String[tmp.length-1];\n         if (tmp2.length==0) {\n           tmp2 = null;\n           remove(name);\n         } else {\n           System.arraycopy(tmp, 0, tmp2, 0, i);\n           System.arraycopy(tmp, i+1, tmp2, i, tmp.length-i-1);\n           set(name, tmp2);\n         }\n         return true;\n       }\n     }\n     return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/common/org/apache/solr/common/params/ModifiableSolrParams#remove(String,String).mjava","pathOld":"src/common/org/apache/solr/common/params/ModifiableSolrParams#remove(String,String).mjava","sourceNew":"  /** \n   * remove the given value for the given name\n   * \n   * @return true if the item was removed, false if null or not present\n   */\n  public boolean remove(String name, String value) {\n     String[] tmp = vals.get(name);\n     if (tmp==null) return false;\n     for (int i=0; i<tmp.length; i++) {\n       if (tmp[i].equals(value)) {\n         String[] tmp2 = new String[tmp.length-1];\n         if (tmp2.length==0) {\n           tmp2 = null;\n           remove(name);\n         } else {\n           System.arraycopy(tmp, 0, tmp2, 0, i);\n           System.arraycopy(tmp, i+1, tmp2, i, tmp.length-i-1);\n           set(name, tmp2);\n         }\n         return true;\n       }\n     }\n     return false;\n  }\n\n","sourceOld":"  /** \n   * remove the given value for the given name\n   * \n   * @return true if the item was removed, false if null or not present\n   */\n  public boolean remove(String name, String value) {\n     String[] tmp = vals.get(name);\n     if (tmp==null) return false;\n     for (int i=0; i<tmp.length; i++) {\n       if (tmp[i].equals(value)) {\n         String[] tmp2 = new String[tmp.length-1];\n         if (tmp2.length==0) {\n           tmp2 = null;\n           remove(name);\n         } else {\n           System.arraycopy(tmp, 0, tmp2, 0, i);\n           System.arraycopy(tmp, i+1, tmp2, i, tmp.length-i-1);\n           set(name, tmp2);\n         }\n         return true;\n       }\n     }\n     return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}