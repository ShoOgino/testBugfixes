{"path":"src/java/org/apache/lucene/document/Field#readerValue().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#readerValue().mjava","pathOld":"/dev/null","sourceNew":"  /** The value of the field as a Reader, or null.  If null, the String value\n    is used.  Exactly one of stringValue() and readerValue() must be set. */\n  public Reader readerValue()\t{ return readerValue; }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3d038c41e70424a134ef69a524f3cc0fb40d854","date":1096548028,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#readerValue().mjava","pathOld":"src/java/org/apache/lucene/document/Field#readerValue().mjava","sourceNew":"  /** The value of the field as a Reader, or null.  If null, the String value\n   * or binary value is  used.  Exactly one of stringValue(), readerValue(),\n   * and binaryValue() must be set. */\n  public Reader readerValue()   { try { return (Reader)fieldsData; } catch (ClassCastException ignore) { return null; } }\n\n","sourceOld":"  /** The value of the field as a Reader, or null.  If null, the String value\n    is used.  Exactly one of stringValue() and readerValue() must be set. */\n  public Reader readerValue()\t{ return readerValue; }\n\n","bugFix":null,"bugIntro":["b68d694ed166e54434863ebd8d1350d4630c216a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b68d694ed166e54434863ebd8d1350d4630c216a","date":1131593043,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#readerValue().mjava","pathOld":"src/java/org/apache/lucene/document/Field#readerValue().mjava","sourceNew":"  /** The value of the field as a Reader, or null.  If null, the String value\n   * or binary value is  used.  Exactly one of stringValue(), readerValue(),\n   * and binaryValue() must be set. */\n  public Reader readerValue()   { return fieldsData instanceof Reader ? (Reader)fieldsData : null; }\n\n","sourceOld":"  /** The value of the field as a Reader, or null.  If null, the String value\n   * or binary value is  used.  Exactly one of stringValue(), readerValue(),\n   * and binaryValue() must be set. */\n  public Reader readerValue()   { try { return (Reader)fieldsData; } catch (ClassCastException ignore) { return null; } }\n\n","bugFix":["b3d038c41e70424a134ef69a524f3cc0fb40d854"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42579622cc27f9908e64f29fa1130bfc28306009","date":1177874771,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#readerValue().mjava","pathOld":"src/java/org/apache/lucene/document/Field#readerValue().mjava","sourceNew":"  /** The value of the field as a Reader, or null.  If null, the String value,\n   * binary value, or TokenStream value is used.  Exactly one of stringValue(), \n   * readerValue(), binaryValue(), and tokenStreamValue() must be set. */\n  public Reader readerValue()   { return fieldsData instanceof Reader ? (Reader)fieldsData : null; }\n\n","sourceOld":"  /** The value of the field as a Reader, or null.  If null, the String value\n   * or binary value is  used.  Exactly one of stringValue(), readerValue(),\n   * and binaryValue() must be set. */\n  public Reader readerValue()   { return fieldsData instanceof Reader ? (Reader)fieldsData : null; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d7203a8194ca217ec527231120df075e9bec237","date":1219055463,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#readerValue().mjava","pathOld":"src/java/org/apache/lucene/document/Field#readerValue().mjava","sourceNew":"  /** The value of the field as a Reader, or null.  If null, the String value,\n   * binary value, or TokenStream value is used.  Exactly one of stringValue(), \n   * readerValue(), getBinaryValue(), and tokenStreamValue() must be set. */\n  public Reader readerValue()   { return fieldsData instanceof Reader ? (Reader)fieldsData : null; }\n\n","sourceOld":"  /** The value of the field as a Reader, or null.  If null, the String value,\n   * binary value, or TokenStream value is used.  Exactly one of stringValue(), \n   * readerValue(), binaryValue(), and tokenStreamValue() must be set. */\n  public Reader readerValue()   { return fieldsData instanceof Reader ? (Reader)fieldsData : null; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb38e9df66981cbc64d27be81176659de4823526","date":1245712006,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#readerValue().mjava","pathOld":"src/java/org/apache/lucene/document/Field#readerValue().mjava","sourceNew":"  /** The value of the field as a Reader, or null.  If null, the String value or\n   * binary value is used.  Exactly one of stringValue(),\n   * readerValue(), and getBinaryValue() must be set. */\n  public Reader readerValue()   { return fieldsData instanceof Reader ? (Reader)fieldsData : null; }\n\n","sourceOld":"  /** The value of the field as a Reader, or null.  If null, the String value,\n   * binary value, or TokenStream value is used.  Exactly one of stringValue(), \n   * readerValue(), getBinaryValue(), and tokenStreamValue() must be set. */\n  public Reader readerValue()   { return fieldsData instanceof Reader ? (Reader)fieldsData : null; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/document/Field#readerValue().mjava","sourceNew":null,"sourceOld":"  /** The value of the field as a Reader, or null.  If null, the String value or\n   * binary value is used.  Exactly one of stringValue(),\n   * readerValue(), and getBinaryValue() must be set. */\n  public Reader readerValue()   { return fieldsData instanceof Reader ? (Reader)fieldsData : null; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7d7203a8194ca217ec527231120df075e9bec237":["42579622cc27f9908e64f29fa1130bfc28306009"],"b68d694ed166e54434863ebd8d1350d4630c216a":["b3d038c41e70424a134ef69a524f3cc0fb40d854"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb38e9df66981cbc64d27be81176659de4823526":["7d7203a8194ca217ec527231120df075e9bec237"],"42579622cc27f9908e64f29fa1130bfc28306009":["b68d694ed166e54434863ebd8d1350d4630c216a"],"b3d038c41e70424a134ef69a524f3cc0fb40d854":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cb38e9df66981cbc64d27be81176659de4823526"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["b3d038c41e70424a134ef69a524f3cc0fb40d854"],"7d7203a8194ca217ec527231120df075e9bec237":["cb38e9df66981cbc64d27be81176659de4823526"],"b68d694ed166e54434863ebd8d1350d4630c216a":["42579622cc27f9908e64f29fa1130bfc28306009"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cb38e9df66981cbc64d27be81176659de4823526":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"42579622cc27f9908e64f29fa1130bfc28306009":["7d7203a8194ca217ec527231120df075e9bec237"],"b3d038c41e70424a134ef69a524f3cc0fb40d854":["b68d694ed166e54434863ebd8d1350d4630c216a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}