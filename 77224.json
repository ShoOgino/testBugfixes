{"path":"solr/core/src/test/org/apache/solr/cloud/TestCloudRecovery2#test().mjava","commits":[{"id":"ce70cdb9511a671e0e15d4dc93b8334c86b6e681","date":1542017422,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudRecovery2#test().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void test() throws Exception {\n    JettySolrRunner node1 = cluster.getJettySolrRunner(0);\n    JettySolrRunner node2 = cluster.getJettySolrRunner(1);\n    try (HttpSolrClient client1 = getHttpSolrClient(node1.getBaseUrl().toString())) {\n\n      node2.stop();\n      waitForState(\"\", COLLECTION, (liveNodes, collectionState) -> liveNodes.size() == 1);\n\n      UpdateRequest req = new UpdateRequest();\n      for (int i = 0; i < 100; i++) {\n        req = req.add(\"id\", i+\"\", \"num\", i+\"\");\n      }\n      req.commit(client1, COLLECTION);\n\n      node2.start();\n      waitForState(\"\", COLLECTION, clusterShape(1, 2));\n\n      try (HttpSolrClient client = getHttpSolrClient(node2.getBaseUrl().toString())) {\n        long numFound = client.query(COLLECTION, new SolrQuery(\"q\",\"*:*\", \"distrib\", \"false\")).getResults().getNumFound();\n        assertEquals(100, numFound);\n      }\n      long numFound = client1.query(COLLECTION, new SolrQuery(\"q\",\"*:*\", \"distrib\", \"false\")).getResults().getNumFound();\n      assertEquals(100, numFound);\n\n      new UpdateRequest().add(\"id\", \"1\", \"num\", \"10\")\n          .commit(client1, COLLECTION);\n\n      try (HttpSolrClient client = getHttpSolrClient(node2.getBaseUrl().toString())) {\n        Object v = client.query(COLLECTION, new SolrQuery(\"q\",\"id:1\", \"distrib\", \"false\")).getResults().get(0).get(\"num\");\n        assertEquals(\"10\", v.toString());\n      }\n      Object v = client1.query(COLLECTION, new SolrQuery(\"q\",\"id:1\", \"distrib\", \"false\")).getResults().get(0).get(\"num\");\n      assertEquals(\"10\", v.toString());\n\n      //\n      node2.stop();\n      waitForState(\"\", COLLECTION, (liveNodes, collectionState) -> liveNodes.size() == 1);\n\n      new UpdateRequest().add(\"id\", \"1\", \"num\", \"20\")\n          .commit(client1, COLLECTION);\n      v = client1.query(COLLECTION, new SolrQuery(\"q\",\"id:1\", \"distrib\", \"false\")).getResults().get(0).get(\"num\");\n      assertEquals(\"20\", v.toString());\n\n      node2.start();\n      waitForState(\"\", COLLECTION, clusterShape(1, 2));\n      try (HttpSolrClient client = getHttpSolrClient(node2.getBaseUrl().toString())) {\n        v = client.query(COLLECTION, new SolrQuery(\"q\",\"id:1\", \"distrib\", \"false\")).getResults().get(0).get(\"num\");\n        assertEquals(\"20\", v.toString());\n      }\n\n      node2.stop();\n      waitForState(\"\", COLLECTION, (liveNodes, collectionState) -> liveNodes.size() == 1);\n\n      new UpdateRequest().add(\"id\", \"1\", \"num\", \"30\")\n          .commit(client1, COLLECTION);\n      v = client1.query(COLLECTION, new SolrQuery(\"q\",\"id:1\", \"distrib\", \"false\")).getResults().get(0).get(\"num\");\n      assertEquals(\"30\", v.toString());\n\n      node2.start();\n      waitForState(\"\", COLLECTION, clusterShape(1, 2));\n\n      try (HttpSolrClient client = getHttpSolrClient(node2.getBaseUrl().toString())) {\n        v = client.query(COLLECTION, new SolrQuery(\"q\",\"id:1\", \"distrib\", \"false\")).getResults().get(0).get(\"num\");\n        assertEquals(\"30\", v.toString());\n      }\n      v = client1.query(COLLECTION, new SolrQuery(\"q\",\"id:1\", \"distrib\", \"false\")).getResults().get(0).get(\"num\");\n      assertEquals(\"30\", v.toString());\n    }\n\n    node1.stop();\n    waitForState(\"\", COLLECTION, (liveNodes, collectionState) -> {\n      Replica leader = collectionState.getLeader(\"shard1\");\n      return leader != null && leader.getNodeName().equals(node2.getNodeName());\n    });\n\n    node1.start();\n    waitForState(\"\", COLLECTION, clusterShape(1, 2));\n    try (HttpSolrClient client = getHttpSolrClient(node1.getBaseUrl().toString())) {\n      Object v = client.query(COLLECTION, new SolrQuery(\"q\",\"id:1\", \"distrib\", \"false\")).getResults().get(0).get(\"num\");\n      assertEquals(\"30\", v.toString());\n    }\n    try (HttpSolrClient client = getHttpSolrClient(node2.getBaseUrl().toString())) {\n      Object v = client.query(COLLECTION, new SolrQuery(\"q\",\"id:1\", \"distrib\", \"false\")).getResults().get(0).get(\"num\");\n      assertEquals(\"30\", v.toString());\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ce70cdb9511a671e0e15d4dc93b8334c86b6e681":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ce70cdb9511a671e0e15d4dc93b8334c86b6e681"]},"commit2Childs":{"ce70cdb9511a671e0e15d4dc93b8334c86b6e681":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce70cdb9511a671e0e15d4dc93b8334c86b6e681"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}