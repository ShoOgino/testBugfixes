{"path":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","commits":[{"id":"a5794e5c995c57444b154b01a9f3c837cd530a77","date":1394190201,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseTopScorerQuery#createWeight(IndexSearcher).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(AtomicReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(AtomicReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(Collector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(AtomicReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseTopScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(AtomicReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public TopScorer topScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new TopScorer() {\n\n            @Override\n            public boolean score(Collector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(AtomicReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(AtomicReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(Collector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(AtomicReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(AtomicReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(LeafCollector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(AtomicReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(AtomicReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(Collector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(AtomicReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(AtomicReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(LeafCollector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(AtomicReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(AtomicReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(Collector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(LeafCollector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(AtomicReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(AtomicReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(LeafCollector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(LeafCollector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(LeafCollector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e166cc9c5f45f78a8dd02332b5ac100221063fd8","date":1421678965,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public int score(LeafCollector collector, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(LeafCollector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"251e6911800e3a02e1da3bfd4dc49a914aef9778","date":1423063783,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public int score(LeafCollector collector, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"781239fc84d36be12b84e4d3e2618f5f07a182e3","date":1423139668,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87","f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n      return new Weight(CrazyMustUseBulkScorerQuery.this) {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(LeafReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) {\n          return new BulkScorer() {\n            @Override\n            public int score(LeafCollector collector, int min, int max) throws IOException {\n              assert min == 0;\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return DocIdSetIterator.NO_MORE_DOCS;\n            }\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"251e6911800e3a02e1da3bfd4dc49a914aef9778":["e166cc9c5f45f78a8dd02332b5ac100221063fd8"],"e166cc9c5f45f78a8dd02332b5ac100221063fd8":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["251e6911800e3a02e1da3bfd4dc49a914aef9778"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["acf00221f44c5f08ccea014f2492b53af15ecd66","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"a5794e5c995c57444b154b01a9f3c837cd530a77":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a5794e5c995c57444b154b01a9f3c837cd530a77"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["ae73da626f97850c922c42736f808d0378e165f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb17639909a369c1e64866842e5c213440acc17e"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"251e6911800e3a02e1da3bfd4dc49a914aef9778":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"e166cc9c5f45f78a8dd02332b5ac100221063fd8":["251e6911800e3a02e1da3bfd4dc49a914aef9778"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["fb17639909a369c1e64866842e5c213440acc17e"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["e166cc9c5f45f78a8dd02332b5ac100221063fd8"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5794e5c995c57444b154b01a9f3c837cd530a77","acf00221f44c5f08ccea014f2492b53af15ecd66"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a5794e5c995c57444b154b01a9f3c837cd530a77":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}