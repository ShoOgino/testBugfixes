{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildRegistry().mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildRegistry().mjava","pathOld":"/dev/null","sourceNew":"    /** \n     *  \n     */ \n    public static void buildRegistry(){ \n        // TODO Implement this!! -- just for develping purposes \n        GDataServerRegistry reg = GDataServerRegistry.getRegistry(); \n        FeedInstanceConfigurator configurator = new FeedInstanceConfigurator(); \n        configurator.setFeedType(Feed.class); \n        configurator.setFeedId(\"weblog\"); \n        configurator.setExtensionProfileClass(ExtensionProfile.class); \n        reg.registerFeed(configurator); \n         \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildRegistry().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildRegistry().mjava","sourceNew":"    /**\n     * builds the {@link GDataServerRegistry} accessible via the\n     * {@link GDataServerRegistry#getRegistry()} method\n     * \n     * @throws IOException -\n     *             if an IOException occures while reading the config file\n     * @throws SAXException -\n     *             if the config file can not be parsed\n     */\n    static void buildRegistry() throws IOException, SAXException {\n\n        buildFromConfiguration(new Digester(), GDataServerRegistry\n                .getRegistry());\n\n    }\n\n","sourceOld":"    /** \n     *  \n     */ \n    public static void buildRegistry(){ \n        // TODO Implement this!! -- just for develping purposes \n        GDataServerRegistry reg = GDataServerRegistry.getRegistry(); \n        FeedInstanceConfigurator configurator = new FeedInstanceConfigurator(); \n        configurator.setFeedType(Feed.class); \n        configurator.setFeedId(\"weblog\"); \n        configurator.setExtensionProfileClass(ExtensionProfile.class); \n        reg.registerFeed(configurator); \n         \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildRegistry().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildRegistry().mjava","sourceNew":"    /**\n     * builds the {@link GDataServerRegistry} accessible via the\n     * {@link GDataServerRegistry#getRegistry()} method\n     * \n     * @throws IOException -\n     *             if an IOException occurs while reading the config file\n     * @throws SAXException -\n     *             if the config file can not be parsed\n     */\n    static void buildRegistry() throws IOException, SAXException {\n        String schemaFile = RegistryBuilder.class.getResource(\"/gdata-config.xsd\").getFile();\n        /*\n         * Force using apache xerces parser for digester\n         */\n        SAXParser parser = new SAXParser();\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema-full-checking\",true);\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema\",true);\n        parser.setFeature(\"http://xml.org/sax/features/validation\",true); \n        parser.setProperty(\"http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation\",schemaFile);\n        Digester digester = new Digester(parser);\n        buildFromConfiguration(digester, GDataServerRegistry\n                .getRegistry(),schemaFile);\n\n    }\n\n","sourceOld":"    /**\n     * builds the {@link GDataServerRegistry} accessible via the\n     * {@link GDataServerRegistry#getRegistry()} method\n     * \n     * @throws IOException -\n     *             if an IOException occures while reading the config file\n     * @throws SAXException -\n     *             if the config file can not be parsed\n     */\n    static void buildRegistry() throws IOException, SAXException {\n\n        buildFromConfiguration(new Digester(), GDataServerRegistry\n                .getRegistry());\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildRegistry().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/RegistryBuilder#buildRegistry().mjava","sourceNew":"    /**\n     * builds the {@link GDataServerRegistry} accessible via the\n     * {@link GDataServerRegistry#getRegistry()} method\n     * \n     * @throws IOException -\n     *             if an IOException occurs while reading the config file\n     * @throws SAXException -\n     *             if the config file can not be parsed\n     */\n    static void buildRegistry() throws IOException, SAXException {\n        String schemaFile = RegistryBuilder.class.getResource(\"/gdata-config.xsd\").getFile();\n        /*\n         * Force using apache xerces parser for digester\n         */\n        SAXParser parser = new SAXParser();\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema-full-checking\",true);\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema\",true);\n        parser.setFeature(\"http://xml.org/sax/features/validation\",true); \n        parser.setProperty(\"http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation\",schemaFile);\n        Digester digester = new Digester(parser);\n        buildFromConfiguration(digester, GDataServerRegistry\n                .getRegistry(),schemaFile);\n\n    }\n\n","sourceOld":"    /**\n     * builds the {@link GDataServerRegistry} accessible via the\n     * {@link GDataServerRegistry#getRegistry()} method\n     * \n     * @throws IOException -\n     *             if an IOException occurs while reading the config file\n     * @throws SAXException -\n     *             if the config file can not be parsed\n     */\n    static void buildRegistry() throws IOException, SAXException {\n        String schemaFile = RegistryBuilder.class.getResource(\"/gdata-config.xsd\").getFile();\n        /*\n         * Force using apache xerces parser for digester\n         */\n        SAXParser parser = new SAXParser();\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema-full-checking\",true);\n        parser.setFeature(\"http://apache.org/xml/features/validation/schema\",true);\n        parser.setFeature(\"http://xml.org/sax/features/validation\",true); \n        parser.setProperty(\"http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation\",schemaFile);\n        Digester digester = new Digester(parser);\n        buildFromConfiguration(digester, GDataServerRegistry\n                .getRegistry(),schemaFile);\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["52754a40a1550056d5637c8992b4076b5ed77328"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}