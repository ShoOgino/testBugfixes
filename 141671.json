{"path":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testMixedFloats().mjava","commits":[{"id":"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8","date":1372293867,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testMixedFloats().mjava","pathOld":"/dev/null","sourceNew":"  public void testMixedFloats() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_tf\")); // should match dynamic field \"*_tf\"\n    Map<Float,Object> mixedFloats = new HashMap<Float,Object>();\n    mixedFloats.put(85.0f, \"85\");\n    mixedFloats.put(2894518.0f, \"2,894,518\");\n    mixedFloats.put(2.94423E-9f, 2.94423E-9f); // Float-typed field value\n    mixedFloats.put(48794721.937f, \"48,794,721.937\");\n    SolrInputDocument d = processAdd(\"parse-float-no-run-processor\", \n                                     doc(f(\"id\", \"342\"), f(\"float_tf\", mixedFloats.values())));\n    assertNotNull(d);\n    for (Object o : d.getFieldValues(\"float_tf\")) {\n      assertTrue(o instanceof Float);\n      mixedFloats.remove(o);\n    }\n    assertTrue(mixedFloats.isEmpty());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testMixedFloats().mjava","pathOld":"/dev/null","sourceNew":"  public void testMixedFloats() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_tf\")); // should match dynamic field \"*_tf\"\n    Map<Float,Object> mixedFloats = new HashMap<Float,Object>();\n    mixedFloats.put(85.0f, \"85\");\n    mixedFloats.put(2894518.0f, \"2,894,518\");\n    mixedFloats.put(2.94423E-9f, 2.94423E-9f); // Float-typed field value\n    mixedFloats.put(48794721.937f, \"48,794,721.937\");\n    SolrInputDocument d = processAdd(\"parse-float-no-run-processor\", \n                                     doc(f(\"id\", \"342\"), f(\"float_tf\", mixedFloats.values())));\n    assertNotNull(d);\n    for (Object o : d.getFieldValues(\"float_tf\")) {\n      assertTrue(o instanceof Float);\n      mixedFloats.remove(o);\n    }\n    assertTrue(mixedFloats.isEmpty());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testMixedFloats().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testMixedFloats().mjava","sourceNew":"  public void testMixedFloats() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_tf\")); // should match dynamic field \"*_tf\"\n    Map<Float,Object> mixedFloats = new HashMap<>();\n    mixedFloats.put(85.0f, \"85\");\n    mixedFloats.put(2894518.0f, \"2,894,518\");\n    mixedFloats.put(2.94423E-9f, 2.94423E-9f); // Float-typed field value\n    mixedFloats.put(48794721.937f, \"48,794,721.937\");\n    SolrInputDocument d = processAdd(\"parse-float-no-run-processor\", \n                                     doc(f(\"id\", \"342\"), f(\"float_tf\", mixedFloats.values())));\n    assertNotNull(d);\n    for (Object o : d.getFieldValues(\"float_tf\")) {\n      assertTrue(o instanceof Float);\n      mixedFloats.remove(o);\n    }\n    assertTrue(mixedFloats.isEmpty());\n  }\n\n","sourceOld":"  public void testMixedFloats() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_tf\")); // should match dynamic field \"*_tf\"\n    Map<Float,Object> mixedFloats = new HashMap<Float,Object>();\n    mixedFloats.put(85.0f, \"85\");\n    mixedFloats.put(2894518.0f, \"2,894,518\");\n    mixedFloats.put(2.94423E-9f, 2.94423E-9f); // Float-typed field value\n    mixedFloats.put(48794721.937f, \"48,794,721.937\");\n    SolrInputDocument d = processAdd(\"parse-float-no-run-processor\", \n                                     doc(f(\"id\", \"342\"), f(\"float_tf\", mixedFloats.values())));\n    assertNotNull(d);\n    for (Object o : d.getFieldValues(\"float_tf\")) {\n      assertTrue(o instanceof Float);\n      mixedFloats.remove(o);\n    }\n    assertTrue(mixedFloats.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f","date":1561505163,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testMixedFloats().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest#testMixedFloats().mjava","sourceNew":"  public void testMixedFloats() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_tf\")); // should match dynamic field \"*_tf\"\n    Map<Float,Object> mixedFloats = new HashMap<>();\n    mixedFloats.put(85.0f, \"85\");\n    mixedFloats.put(2894518.0f, \"2,894,518\");\n    mixedFloats.put(2.94423E-9f, 2.94423E-9f); // Float-typed field value\n    mixedFloats.put(48794721.937f, \"48,794,721.937\");\n    SolrInputDocument d = processAdd(\"parse-float-no-run-processor\", \n                                     doc(f(\"id\", \"342\"), f(\"float_tf\", mixedFloats.values())));\n    assertNotNull(d);\n    for (Object o : d.getFieldValues(\"float_tf\")) {\n      assertThat(o, IS_FLOAT);\n      mixedFloats.remove(o);\n    }\n    assertTrue(mixedFloats.isEmpty());\n  }\n\n","sourceOld":"  public void testMixedFloats() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_tf\")); // should match dynamic field \"*_tf\"\n    Map<Float,Object> mixedFloats = new HashMap<>();\n    mixedFloats.put(85.0f, \"85\");\n    mixedFloats.put(2894518.0f, \"2,894,518\");\n    mixedFloats.put(2.94423E-9f, 2.94423E-9f); // Float-typed field value\n    mixedFloats.put(48794721.937f, \"48,794,721.937\");\n    SolrInputDocument d = processAdd(\"parse-float-no-run-processor\", \n                                     doc(f(\"id\", \"342\"), f(\"float_tf\", mixedFloats.values())));\n    assertNotNull(d);\n    for (Object o : d.getFieldValues(\"float_tf\")) {\n      assertTrue(o instanceof Float);\n      mixedFloats.remove(o);\n    }\n    assertTrue(mixedFloats.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"695a2ea9bbdf1f04153f1f6f0fa8595f3694b58f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}