{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNullIterable2().mjava","commits":[{"id":"36e9f571cf40a8818eb678ed8fcf845cb9f9b456","date":1399039701,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNullIterable2().mjava","pathOld":"/dev/null","sourceNew":"  public void testNullIterable2() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    // add 3 good docs\n    for (int i = 0; i < 3; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Field.Store.NO));\n      iw.addDocument(doc);\n    }\n    // add broken doc\n    try {\n      iw.addDocument(new IndexDocument() {\n        @Override\n        public Iterable<IndexableField> indexableFields() {\n          return Collections.emptyList();\n        }\n        \n        @Override\n        public Iterable<StorableField> storableFields() {\n          return null;\n        }\n      });\n    } catch (NullPointerException expected) {}\n    // ensure good docs are still ok\n    IndexReader ir = iw.getReader();\n    assertEquals(3, ir.numDocs());\n    ir.close();\n    iw.shutdown();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNullIterable2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNullIterable2().mjava","sourceNew":"  public void testNullIterable2() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    // add 3 good docs\n    for (int i = 0; i < 3; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Field.Store.NO));\n      iw.addDocument(doc);\n    }\n    // add broken doc\n    try {\n      iw.addDocument(new IndexDocument() {\n        @Override\n        public Iterable<IndexableField> indexableFields() {\n          return Collections.emptyList();\n        }\n        \n        @Override\n        public Iterable<StorableField> storableFields() {\n          return null;\n        }\n      });\n    } catch (NullPointerException expected) {}\n    // ensure good docs are still ok\n    IndexReader ir = iw.getReader();\n    assertEquals(3, ir.numDocs());\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNullIterable2() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    // add 3 good docs\n    for (int i = 0; i < 3; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Field.Store.NO));\n      iw.addDocument(doc);\n    }\n    // add broken doc\n    try {\n      iw.addDocument(new IndexDocument() {\n        @Override\n        public Iterable<IndexableField> indexableFields() {\n          return Collections.emptyList();\n        }\n        \n        @Override\n        public Iterable<StorableField> storableFields() {\n          return null;\n        }\n      });\n    } catch (NullPointerException expected) {}\n    // ensure good docs are still ok\n    IndexReader ir = iw.getReader();\n    assertEquals(3, ir.numDocs());\n    ir.close();\n    iw.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testNullIterable2().mjava","sourceNew":null,"sourceOld":"  public void testNullIterable2() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    // add 3 good docs\n    for (int i = 0; i < 3; i++) {\n      Document doc = new Document();\n      doc.add(new StringField(\"id\", Integer.toString(i), Field.Store.NO));\n      iw.addDocument(doc);\n    }\n    // add broken doc\n    try {\n      iw.addDocument(new IndexDocument() {\n        @Override\n        public Iterable<IndexableField> indexableFields() {\n          return Collections.emptyList();\n        }\n        \n        @Override\n        public Iterable<StorableField> storableFields() {\n          return null;\n        }\n      });\n    } catch (NullPointerException expected) {}\n    // ensure good docs are still ok\n    IndexReader ir = iw.getReader();\n    assertEquals(3, ir.numDocs());\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36e9f571cf40a8818eb678ed8fcf845cb9f9b456":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["36e9f571cf40a8818eb678ed8fcf845cb9f9b456"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"36e9f571cf40a8818eb678ed8fcf845cb9f9b456":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36e9f571cf40a8818eb678ed8fcf845cb9f9b456"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}