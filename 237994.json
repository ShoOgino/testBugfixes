{"path":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","commits":[{"id":"4bf528aa2b9571ce1ec892ecf726201ef1e404e3","date":1288732150,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (docsToCollect < 0 || docsToCollect > maxDoc) docsToCollect = maxDoc;\n\n      collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      return collector2;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (docsToCollect < 0 || docsToCollect > maxDoc) docsToCollect = maxDoc;\n\n      collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      return collector2;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129258e6ec9684fea792a51eda00f2e0e03c1480","date":1289770450,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n\n      if (false && groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      }\n      return collector2;\n    }\n\n","sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (docsToCollect < 0 || docsToCollect > maxDoc) docsToCollect = maxDoc;\n\n      collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n\n      if (false && groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      }\n      return collector2;\n    }\n\n","sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      if (docsToCollect < 0 || docsToCollect > maxDoc) docsToCollect = maxDoc;\n\n      collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43e368cad6a1cc3992f44375801ea528f49b542e","date":1290206535,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      if (false && groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      }\n      return collector2;\n    }\n\n","sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n\n      if (false && groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      }\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2faff97930a7d82742cb7c071c3c350ec28b37df","date":1290544406,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      }\n      return collector2;\n    }\n\n","sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      if (false && groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      }\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c32d2a50662592e12dae8ea10960cce611c7ba1c","date":1290627254,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if this for the main result, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = main ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      }\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c800a92bdddc053fba2b1b33e434f7536a2daae1","date":1290628554,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if the format is simple, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = format==Format.Simple ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if this for the main result, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = main ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if the format is simple, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = format==Format.Simple ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n\n      if (false && groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, offset);\n      }\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if the format is simple, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = format==Format.Simple ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"771281b4c7dc712b48ba338b970b49007ca402a1","date":1295480908,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if the format is simple, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = format==Format.Simple ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if the format is simple, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = format==Format.Simple ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if the format is simple, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = format==Format.Simple ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if the format is simple, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = format==Format.Simple ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if the format is simple, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = format==Format.Simple ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if the format is simple, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = format==Format.Simple ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, groupSort, docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c7cdfe5a1ea9db97faa404b251fa644faa73597","date":1308345959,"type":4,"author":"Martijn van Groningen","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":null,"sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if the format is simple, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = format==Format.Simple ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7edfc3f7caa7b49a18fe367692768b33b018e9db","date":1308374217,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandFunc#createNextCollector().mjava","sourceNew":null,"sourceOld":"    @Override\n    Collector createNextCollector() throws IOException {\n      if (numGroups == 0) return null;\n\n      int docsToCollect = getMax(groupOffset, docsPerGroup, maxDoc);\n      docsToCollect = Math.max(docsToCollect, 1);\n\n      // if the format is simple, don't skip groups (since we are counting docs, not groups)\n      int collectorOffset = format==Format.Simple ? 0 : offset;\n\n      if (groupBy instanceof StrFieldSource) {\n        collector2 = new Phase2StringGroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);\n      } else {\n        collector2 = new Phase2GroupCollector(collector, groupBy, context, searcher.weightSort(groupSort), docsToCollect, needScores, collectorOffset);\n      }\n      return collector2;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4bf528aa2b9571ce1ec892ecf726201ef1e404e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["85a883878c0af761245ab048babc63d099f835f3","129258e6ec9684fea792a51eda00f2e0e03c1480"],"c32d2a50662592e12dae8ea10960cce611c7ba1c":["2faff97930a7d82742cb7c071c3c350ec28b37df"],"2faff97930a7d82742cb7c071c3c350ec28b37df":["43e368cad6a1cc3992f44375801ea528f49b542e"],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4bf528aa2b9571ce1ec892ecf726201ef1e404e3"],"c800a92bdddc053fba2b1b33e434f7536a2daae1":["c32d2a50662592e12dae8ea10960cce611c7ba1c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c800a92bdddc053fba2b1b33e434f7536a2daae1"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","771281b4c7dc712b48ba338b970b49007ca402a1"],"771281b4c7dc712b48ba338b970b49007ca402a1":["c800a92bdddc053fba2b1b33e434f7536a2daae1"],"43e368cad6a1cc3992f44375801ea528f49b542e":["129258e6ec9684fea792a51eda00f2e0e03c1480"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["771281b4c7dc712b48ba338b970b49007ca402a1","9c7cdfe5a1ea9db97faa404b251fa644faa73597"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","771281b4c7dc712b48ba338b970b49007ca402a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9c7cdfe5a1ea9db97faa404b251fa644faa73597":["771281b4c7dc712b48ba338b970b49007ca402a1"],"129258e6ec9684fea792a51eda00f2e0e03c1480":["4bf528aa2b9571ce1ec892ecf726201ef1e404e3"],"3bb13258feba31ab676502787ab2e1779f129b7a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","c800a92bdddc053fba2b1b33e434f7536a2daae1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9c7cdfe5a1ea9db97faa404b251fa644faa73597"]},"commit2Childs":{"4bf528aa2b9571ce1ec892ecf726201ef1e404e3":["85a883878c0af761245ab048babc63d099f835f3","129258e6ec9684fea792a51eda00f2e0e03c1480"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["3bb13258feba31ab676502787ab2e1779f129b7a"],"c32d2a50662592e12dae8ea10960cce611c7ba1c":["c800a92bdddc053fba2b1b33e434f7536a2daae1"],"2faff97930a7d82742cb7c071c3c350ec28b37df":["c32d2a50662592e12dae8ea10960cce611c7ba1c"],"85a883878c0af761245ab048babc63d099f835f3":["9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"c800a92bdddc053fba2b1b33e434f7536a2daae1":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","771281b4c7dc712b48ba338b970b49007ca402a1","3bb13258feba31ab676502787ab2e1779f129b7a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"771281b4c7dc712b48ba338b970b49007ca402a1":["e79a6d080bdd5b2a8f56342cf571b5476de04180","7edfc3f7caa7b49a18fe367692768b33b018e9db","29ef99d61cda9641b6250bf9567329a6e65f901d","9c7cdfe5a1ea9db97faa404b251fa644faa73597"],"43e368cad6a1cc3992f44375801ea528f49b542e":["2faff97930a7d82742cb7c071c3c350ec28b37df"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4bf528aa2b9571ce1ec892ecf726201ef1e404e3","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"129258e6ec9684fea792a51eda00f2e0e03c1480":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","43e368cad6a1cc3992f44375801ea528f49b542e"],"9c7cdfe5a1ea9db97faa404b251fa644faa73597":["7edfc3f7caa7b49a18fe367692768b33b018e9db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e79a6d080bdd5b2a8f56342cf571b5476de04180","7edfc3f7caa7b49a18fe367692768b33b018e9db","29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}