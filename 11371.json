{"path":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeMap(MapWriter).mjava","commits":[{"id":"50f05d6b69cfaabd51b5d26cba4e3122f51fff83","date":1478603228,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeMap(MapWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(MapWriter val)\n      throws IOException {\n    writeMapOpener(-1);\n    incLevel();\n\n    val.writeMap(new EntryWriter() {\n      boolean isFirst = true;\n\n      @Override\n      public EntryWriter put(String k, Object v) throws IOException {\n        if (isFirst) {\n          isFirst = false;\n        } else {\n          JSONWriter.this.writeMapSeparator();\n        }\n        if (doIndent) JSONWriter.this.indent();\n        JSONWriter.this.writeKey(k, true);\n        JSONWriter.this.writeVal(k, v);\n        return this;\n      }\n    });\n    decLevel();\n    writeMapCloser();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeMap(MapWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(MapWriter val)\n      throws IOException {\n    writeMapOpener(-1);\n    incLevel();\n\n    val.writeMap(new EntryWriter() {\n      boolean isFirst = true;\n\n      @Override\n      public EntryWriter put(String k, Object v) throws IOException {\n        if (isFirst) {\n          isFirst = false;\n        } else {\n          JSONWriter.this.writeMapSeparator();\n        }\n        if (doIndent) JSONWriter.this.indent();\n        JSONWriter.this.writeKey(k, true);\n        JSONWriter.this.writeVal(k, v);\n        return this;\n      }\n    });\n    decLevel();\n    writeMapCloser();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"119f84a673d2ea32c0ec18c36987696dd31aa174","date":1528551316,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeMap(MapWriter).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void writeMap(MapWriter val)\n      throws IOException {\n    writeMapOpener(-1);\n    incLevel();\n\n    val.writeMap(new EntryWriter() {\n      boolean isFirst = true;\n\n      @Override\n      public EntryWriter put(String k, Object v) throws IOException {\n        if (isFirst) {\n          isFirst = false;\n        } else {\n          JSONWriter.this.writeMapSeparator();\n        }\n        if (doIndent) JSONWriter.this.indent();\n        JSONWriter.this.writeKey(k, true);\n        JSONWriter.this.writeVal(k, v);\n        return this;\n      }\n    });\n    decLevel();\n    writeMapCloser();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeMap(MapWriter).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void writeMap(MapWriter val)\n      throws IOException {\n    writeMapOpener(-1);\n    incLevel();\n\n    val.writeMap(new EntryWriter() {\n      boolean isFirst = true;\n\n      @Override\n      public EntryWriter put(String k, Object v) throws IOException {\n        if (isFirst) {\n          isFirst = false;\n        } else {\n          JSONWriter.this.writeMapSeparator();\n        }\n        if (doIndent) JSONWriter.this.indent();\n        JSONWriter.this.writeKey(k, true);\n        JSONWriter.this.writeVal(k, v);\n        return this;\n      }\n    });\n    decLevel();\n    writeMapCloser();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeMap(MapWriter).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void writeMap(MapWriter val)\n      throws IOException {\n    writeMapOpener(-1);\n    incLevel();\n\n    val.writeMap(new EntryWriter() {\n      boolean isFirst = true;\n\n      @Override\n      public EntryWriter put(String k, Object v) throws IOException {\n        if (isFirst) {\n          isFirst = false;\n        } else {\n          JSONWriter.this.writeMapSeparator();\n        }\n        if (doIndent) JSONWriter.this.indent();\n        JSONWriter.this.writeKey(k, true);\n        JSONWriter.this.writeVal(k, v);\n        return this;\n      }\n    });\n    decLevel();\n    writeMapCloser();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83","119f84a673d2ea32c0ec18c36987696dd31aa174"],"119f84a673d2ea32c0ec18c36987696dd31aa174":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["119f84a673d2ea32c0ec18c36987696dd31aa174"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83","119f84a673d2ea32c0ec18c36987696dd31aa174"]},"commit2Childs":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","119f84a673d2ea32c0ec18c36987696dd31aa174","199dfa410f1fdbfd3294106b04096cce5ed34b21","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"119f84a673d2ea32c0ec18c36987696dd31aa174":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}