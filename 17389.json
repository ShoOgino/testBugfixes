{"path":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testReloadThreaded().mjava","commits":[{"id":"8b6f42dee5a60f46a3fdf3ab93b39aefb356e245","date":1363106546,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testReloadThreaded().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReloadThreaded() throws Exception {\n    final CoreContainer cc = init(\"_reloadThreaded\");\n\n      class TestThread extends Thread {\n        @Override\n        public void run() {\n          cc.reload(\"collection1\");\n        }\n      }\n\n      List<Thread> threads = new ArrayList<Thread>();\n      int numThreads = 4;\n      for (int i = 0; i < numThreads; i++) {\n        threads.add(new TestThread());\n      }\n\n      for (Thread thread : threads) {\n        thread.start();\n      }\n\n      for (Thread thread : threads) {\n        thread.join();\n    }\n\n    cc.shutdown();\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testReloadThreaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testReloadThreaded().mjava","sourceNew":"  @Test\n  public void testReloadThreaded() throws Exception {\n    final CoreContainer cc = init(\"_reloadThreaded\");\n\n      class TestThread extends Thread {\n        @Override\n        public void run() {\n          cc.reload(\"collection1\");\n        }\n      }\n\n      List<Thread> threads = new ArrayList<>();\n      int numThreads = 4;\n      for (int i = 0; i < numThreads; i++) {\n        threads.add(new TestThread());\n      }\n\n      for (Thread thread : threads) {\n        thread.start();\n      }\n\n      for (Thread thread : threads) {\n        thread.join();\n    }\n\n    cc.shutdown();\n\n  }\n\n","sourceOld":"  @Test\n  public void testReloadThreaded() throws Exception {\n    final CoreContainer cc = init(\"_reloadThreaded\");\n\n      class TestThread extends Thread {\n        @Override\n        public void run() {\n          cc.reload(\"collection1\");\n        }\n      }\n\n      List<Thread> threads = new ArrayList<Thread>();\n      int numThreads = 4;\n      for (int i = 0; i < numThreads; i++) {\n        threads.add(new TestThread());\n      }\n\n      for (Thread thread : threads) {\n        thread.start();\n      }\n\n      for (Thread thread : threads) {\n        thread.join();\n    }\n\n    cc.shutdown();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testReloadThreaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testReloadThreaded().mjava","sourceNew":"  @Test\n  public void testReloadThreaded() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\", \"configSet\", \"minimal\");\n    cc.create(descriptor1);\n\n    class TestThread extends Thread {\n      @Override\n      public void run() {\n        cc.reload(\"core1\");\n      }\n    }\n\n    List<Thread> threads = new ArrayList<>();\n    int numThreads = 4;\n    for (int i = 0; i < numThreads; i++) {\n      threads.add(new TestThread());\n    }\n\n    for (Thread thread : threads) {\n      thread.start();\n    }\n\n    for (Thread thread : threads) {\n      thread.join();\n    }\n\n    cc.shutdown();\n\n  }\n\n","sourceOld":"  @Test\n  public void testReloadThreaded() throws Exception {\n    final CoreContainer cc = init(\"_reloadThreaded\");\n\n      class TestThread extends Thread {\n        @Override\n        public void run() {\n          cc.reload(\"collection1\");\n        }\n      }\n\n      List<Thread> threads = new ArrayList<>();\n      int numThreads = 4;\n      for (int i = 0; i < numThreads; i++) {\n        threads.add(new TestThread());\n      }\n\n      for (Thread thread : threads) {\n        thread.start();\n      }\n\n      for (Thread thread : threads) {\n        thread.join();\n    }\n\n    cc.shutdown();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testReloadThreaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testReloadThreaded().mjava","sourceNew":"  @Test\n  public void testReloadThreaded() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    cc.create(\"core1\", ImmutableMap.of(\"configSet\", \"minimal\"));\n\n    class TestThread extends Thread {\n      @Override\n      public void run() {\n        cc.reload(\"core1\");\n      }\n    }\n\n    List<Thread> threads = new ArrayList<>();\n    int numThreads = 4;\n    for (int i = 0; i < numThreads; i++) {\n      threads.add(new TestThread());\n    }\n\n    for (Thread thread : threads) {\n      thread.start();\n    }\n\n    for (Thread thread : threads) {\n      thread.join();\n    }\n\n    cc.shutdown();\n\n  }\n\n","sourceOld":"  @Test\n  public void testReloadThreaded() throws Exception {\n    final CoreContainer cc = init(CONFIGSETS_SOLR_XML);\n    CoreDescriptor descriptor1 = new CoreDescriptor(cc, \"core1\", \"./collection1\", \"configSet\", \"minimal\");\n    cc.create(descriptor1);\n\n    class TestThread extends Thread {\n      @Override\n      public void run() {\n        cc.reload(\"core1\");\n      }\n    }\n\n    List<Thread> threads = new ArrayList<>();\n    int numThreads = 4;\n    for (int i = 0; i < numThreads; i++) {\n      threads.add(new TestThread());\n    }\n\n    for (Thread thread : threads) {\n      thread.start();\n    }\n\n    for (Thread thread : threads) {\n      thread.join();\n    }\n\n    cc.shutdown();\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8b6f42dee5a60f46a3fdf3ab93b39aefb356e245":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["8b6f42dee5a60f46a3fdf3ab93b39aefb356e245"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"]},"commit2Childs":{"8b6f42dee5a60f46a3fdf3ab93b39aefb356e245":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b6f42dee5a60f46a3fdf3ab93b39aefb356e245"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}