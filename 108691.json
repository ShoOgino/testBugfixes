{"path":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext#waitForEligibleBecomeLeaderAfterTimeout(ZkShardTerms,String,int).mjava","commits":[{"id":"ba33781da68babcaa5828121b443d3eb5c9d8480","date":1590595589,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext#waitForEligibleBecomeLeaderAfterTimeout(ZkShardTerms,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#waitForEligibleBecomeLeaderAfterTimeout(ZkShardTerms,String,int).mjava","sourceNew":"  /**\n   * Wait for other replicas with higher terms participate in the electioon\n   *\n   * @return true if after {@code timeout} there are no other replicas with higher term participate in the election,\n   * false if otherwise\n   */\n  private boolean waitForEligibleBecomeLeaderAfterTimeout(ZkShardTerms zkShardTerms, String coreNodeName, int timeout) throws InterruptedException {\n    long timeoutAt = System.nanoTime() + TimeUnit.NANOSECONDS.convert(timeout, TimeUnit.MILLISECONDS);\n    while (!isClosed && !cc.isShutDown()) {\n      if (System.nanoTime() > timeoutAt) {\n        log.warn(\"After waiting for {}ms, no other potential leader was found, {} try to become leader anyway (core_term:{}, highest_term:{})\",\n            timeout, coreNodeName, zkShardTerms.getTerm(coreNodeName), zkShardTerms.getHighestTerm());\n        return true;\n      }\n      if (replicasWithHigherTermParticipated(zkShardTerms, coreNodeName)) {\n        log.info(\"Can't become leader, other replicas with higher term participated in leader election\");\n        return false;\n      }\n      Thread.sleep(500L);\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Wait for other replicas with higher terms participate in the electioon\n   * @return true if after {@code timeout} there are no other replicas with higher term participate in the election,\n   * false if otherwise\n   */\n  private boolean waitForEligibleBecomeLeaderAfterTimeout(ZkShardTerms zkShardTerms, String coreNodeName, int timeout) throws InterruptedException {\n    long timeoutAt = System.nanoTime() + TimeUnit.NANOSECONDS.convert(timeout, TimeUnit.MILLISECONDS);\n    while (!isClosed && !cc.isShutDown()) {\n      if (System.nanoTime() > timeoutAt) {\n        log.warn(\"After waiting for {}ms, no other potential leader was found, {} try to become leader anyway (core_term:{}, highest_term:{})\",\n            timeout, coreNodeName, zkShardTerms.getTerm(coreNodeName), zkShardTerms.getHighestTerm());\n        return true;\n      }\n      if (replicasWithHigherTermParticipated(zkShardTerms, coreNodeName)) {\n        log.info(\"Can't become leader, other replicas with higher term participated in leader election\");\n        return false;\n      }\n      Thread.sleep(500L);\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba33781da68babcaa5828121b443d3eb5c9d8480":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba33781da68babcaa5828121b443d3eb5c9d8480"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba33781da68babcaa5828121b443d3eb5c9d8480"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}