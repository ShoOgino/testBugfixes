{"path":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","commits":[{"id":"624e284b3877a558eba46e7fe63f3aec4c781938","date":1026942878,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"/dev/null","sourceNew":"  public static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true);\n    Document doc = new Document();\n    doc.add(Field.Text(\"test\", \"test\"));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchableImpl impl = new RemoteSearchableImpl(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46cfaf993c515f865d4d8a14ed14ee3b48100861","date":1026943894,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  public static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true);\n    Document doc = new Document();\n    doc.add(Field.Text(\"test\", \"test\"));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","sourceOld":"  public static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true);\n    Document doc = new Document();\n    doc.add(Field.Text(\"test\", \"test\"));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchableImpl impl = new RemoteSearchableImpl(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69539241801d9f0a99eb92805e8bdcde63d692f1","date":1029455040,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true);\n    Document doc = new Document();\n    doc.add(Field.Text(\"test\", \"test text\"));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","sourceOld":"  public static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true);\n    Document doc = new Document();\n    doc.add(Field.Text(\"test\", \"test\"));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"773e104db917d6cc9acade5a8aeb91a886192b99","date":1094581596,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true);\n    Document doc = new Document();\n    doc.add(Field.Text(\"test\", \"test text\"));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"919a3357bb0067f5ab89ed1d06598d1688444ff5","date":1173104881,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.TOKENIZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.TOKENIZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43878a362a964486db4847b275d1aa0adf646ad1","date":1244389641,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    LocateRegistry.createRegistry(1099);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02","date":1244977984,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","pathOld":"src/test/org/apache/lucene/search/TestRemoteSearchable#startServer().mjava","sourceNew":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","sourceOld":"  private static void startServer() throws Exception {\n    // construct an index\n    RAMDirectory indexStore = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(indexStore,new SimpleAnalyzer(),true, IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"test\", \"test text\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"other\", \"other test text\", Field.Store.YES, Field.Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.optimize();\n    writer.close();\n\n    // publish it\n    port = _TestUtil.getRandomSocketPort();\n    LocateRegistry.createRegistry(port);\n    Searchable local = new IndexSearcher(indexStore);\n    RemoteSearchable impl = new RemoteSearchable(local);\n    Naming.rebind(\"//localhost:\" + port + \"/Searchable\", impl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02":["43878a362a964486db4847b275d1aa0adf646ad1"],"624e284b3877a558eba46e7fe63f3aec4c781938":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["919a3357bb0067f5ab89ed1d06598d1688444ff5"],"773e104db917d6cc9acade5a8aeb91a886192b99":["69539241801d9f0a99eb92805e8bdcde63d692f1"],"43878a362a964486db4847b275d1aa0adf646ad1":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"919a3357bb0067f5ab89ed1d06598d1688444ff5":["773e104db917d6cc9acade5a8aeb91a886192b99"],"69539241801d9f0a99eb92805e8bdcde63d692f1":["46cfaf993c515f865d4d8a14ed14ee3b48100861"],"46cfaf993c515f865d4d8a14ed14ee3b48100861":["624e284b3877a558eba46e7fe63f3aec4c781938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1474a58d42cdf3b9e16ffe07bce31e4abffe5e02"]},"commit2Childs":{"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"624e284b3877a558eba46e7fe63f3aec4c781938":["46cfaf993c515f865d4d8a14ed14ee3b48100861"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["624e284b3877a558eba46e7fe63f3aec4c781938"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["43878a362a964486db4847b275d1aa0adf646ad1"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"773e104db917d6cc9acade5a8aeb91a886192b99":["919a3357bb0067f5ab89ed1d06598d1688444ff5"],"43878a362a964486db4847b275d1aa0adf646ad1":["1474a58d42cdf3b9e16ffe07bce31e4abffe5e02"],"919a3357bb0067f5ab89ed1d06598d1688444ff5":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"69539241801d9f0a99eb92805e8bdcde63d692f1":["773e104db917d6cc9acade5a8aeb91a886192b99"],"46cfaf993c515f865d4d8a14ed14ee3b48100861":["69539241801d9f0a99eb92805e8bdcde63d692f1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}