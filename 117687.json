{"path":"lucene/test-framework/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","commits":[{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","sourceNew":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    } finally {\n      IOUtils.closeWhileHandlingException(iw);\n    }\n  }\n\n","sourceOld":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    } finally {\n      IOUtils.closeWhileHandlingException(iw);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"618635065f043788c9e034f96ca5cd5cea1b4592","date":1433442044,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/test/org/apache/lucene/store/TestMockDirectoryWrapper#testFailIfIndexWriterNotClosed().mjava","sourceNew":null,"sourceOld":"  public void testFailIfIndexWriterNotClosed() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(null));\n    try {\n      dir.close();\n      fail();\n    } catch (Exception expected) {\n      assertTrue(expected.getMessage().contains(\"there are still open locks\"));\n    } finally {\n      IOUtils.closeWhileHandlingException(iw);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"618635065f043788c9e034f96ca5cd5cea1b4592":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["618635065f043788c9e034f96ca5cd5cea1b4592"]},"commit2Childs":{"618635065f043788c9e034f96ca5cd5cea1b4592":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["618635065f043788c9e034f96ca5cd5cea1b4592"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}