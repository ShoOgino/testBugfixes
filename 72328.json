{"path":"lucene/backwards/src/java/org/apache/lucene/document/Document#removeField(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/document/Document#removeField(String).mjava","pathOld":"backwards/src/java/org/apache/lucene/document/Document#removeField(String).mjava","sourceNew":"  /**\n   * <p>Removes field with the specified name from the document.\n   * If multiple fields exist with this name, this method removes the first field that has been added.\n   * If there is no field with the specified name, the document remains unchanged.</p>\n   * <p> Note that the removeField(s) methods like the add method only make sense \n   * prior to adding a document to an index. These methods cannot\n   * be used to change the content of an existing index! In order to achieve this,\n   * a document has to be deleted from an index and a new changed version of that\n   * document has to be added.</p>\n   */\n  public final void removeField(String name) {\n    Iterator<Fieldable> it = fields.iterator();\n    while (it.hasNext()) {\n      Fieldable field = it.next();\n      if (field.name().equals(name)) {\n        it.remove();\n        return;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * <p>Removes field with the specified name from the document.\n   * If multiple fields exist with this name, this method removes the first field that has been added.\n   * If there is no field with the specified name, the document remains unchanged.</p>\n   * <p> Note that the removeField(s) methods like the add method only make sense \n   * prior to adding a document to an index. These methods cannot\n   * be used to change the content of an existing index! In order to achieve this,\n   * a document has to be deleted from an index and a new changed version of that\n   * document has to be added.</p>\n   */\n  public final void removeField(String name) {\n    Iterator<Fieldable> it = fields.iterator();\n    while (it.hasNext()) {\n      Fieldable field = it.next();\n      if (field.name().equals(name)) {\n        it.remove();\n        return;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/document/Document#removeField(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * <p>Removes field with the specified name from the document.\n   * If multiple fields exist with this name, this method removes the first field that has been added.\n   * If there is no field with the specified name, the document remains unchanged.</p>\n   * <p> Note that the removeField(s) methods like the add method only make sense \n   * prior to adding a document to an index. These methods cannot\n   * be used to change the content of an existing index! In order to achieve this,\n   * a document has to be deleted from an index and a new changed version of that\n   * document has to be added.</p>\n   */\n  public final void removeField(String name) {\n    Iterator<Fieldable> it = fields.iterator();\n    while (it.hasNext()) {\n      Fieldable field = it.next();\n      if (field.name().equals(name)) {\n        it.remove();\n        return;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}