{"path":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","sourceNew":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ENGLISH).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ENGLISH).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","sourceNew":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ENGLISH).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ENGLISH).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","sourceNew":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ENGLISH).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ENGLISH).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","sourceNew":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ENGLISH).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","sourceNew":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ENGLISH).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","sourceNew":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ENGLISH).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","sourceNew":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ENGLISH).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","sourceNew":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ContentStreamBase#getCharsetFromContentType(String).mjava","sourceNew":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String getCharsetFromContentType( String contentType )\n  {\n    if( contentType != null ) {\n      int idx = contentType.toLowerCase(Locale.ROOT).indexOf( \"charset=\" );\n      if( idx > 0 ) {\n        return contentType.substring( idx + \"charset=\".length() ).trim();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["2acf500f78aa12b92e371fd89c719291986b6b90","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["2acf500f78aa12b92e371fd89c719291986b6b90"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2acf500f78aa12b92e371fd89c719291986b6b90":["c26f00b574427b55127e869b935845554afde1fa","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"46d8ada1fff8d18cb197c38c7983225162599948":["c26f00b574427b55127e869b935845554afde1fa","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["fe33227f6805edab2036cbb80645cc4e2d1fa424","9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"2acf500f78aa12b92e371fd89c719291986b6b90":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","fe33227f6805edab2036cbb80645cc4e2d1fa424","19275ba31e621f6da1b83bf13af75233876fd3d4","46d8ada1fff8d18cb197c38c7983225162599948"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}