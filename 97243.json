{"path":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/HeartBeater#HeartBeater(Progressable).mjava","commits":[{"id":"70f91c8322fbffe3a3a897ef20ea19119cac10cd","date":1386170124,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/HeartBeater#HeartBeater(Progressable).mjava","pathOld":"solr/contrib/solr-mr/src/java/org/apache/solr/hadoop/HeartBeater#HeartBeater(Progressable).mjava","sourceNew":"  /**\n   * Create the heart beat object thread set it to daemon priority and start the\n   * thread. When the count in {@link #threadsNeedingHeartBeat} is positive, the\n   * heart beat will be issued on the progress object every 60 seconds.\n   */\n  public HeartBeater(Progressable progress) {\n    setDaemon(true);\n    this.progress = progress;\n    LOG.info(\"Heart beat reporting class is \" + progress.getClass().getName());\n    start();\n  }\n\n","sourceOld":"  /**\n   * Create the heart beat object thread set it to daemon priority and start the\n   * thread. When the count in {@link #threadsNeedingHeartBeat} is positive, the\n   * heart beat will be issued on the progress object every 60 seconds.\n   */\n  public HeartBeater(Progressable progress) {\n    setDaemon(true);\n    this.progress = progress;\n    LOG.info(\"Heart beat reporting class is \" + progress.getClass().getName());\n    start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/HeartBeater#HeartBeater(Progressable).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create the heart beat object thread set it to daemon priority and start the\n   * thread. When the count in {@link #threadsNeedingHeartBeat} is positive, the\n   * heart beat will be issued on the progress object every 60 seconds.\n   */\n  public HeartBeater(Progressable progress) {\n    setDaemon(true);\n    this.progress = progress;\n    LOG.info(\"Heart beat reporting class is \" + progress.getClass().getName());\n    start();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12109b652e9210b8d58fca47f6c4a725d058a58e","date":1490373076,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/HeartBeater#HeartBeater(Progressable).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create the heart beat object thread set it to daemon priority and start the\n   * thread. When the count in {@link #threadsNeedingHeartBeat} is positive, the\n   * heart beat will be issued on the progress object every 60 seconds.\n   */\n  public HeartBeater(Progressable progress) {\n    setDaemon(true);\n    this.progress = progress;\n    LOG.info(\"Heart beat reporting class is \" + progress.getClass().getName());\n    start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe1c4aa9af769a38e878f608070f672efbeac27f","date":1490594650,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/map-reduce/src/java/org/apache/solr/hadoop/HeartBeater#HeartBeater(Progressable).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create the heart beat object thread set it to daemon priority and start the\n   * thread. When the count in {@link #threadsNeedingHeartBeat} is positive, the\n   * heart beat will be issued on the progress object every 60 seconds.\n   */\n  public HeartBeater(Progressable progress) {\n    setDaemon(true);\n    this.progress = progress;\n    LOG.info(\"Heart beat reporting class is \" + progress.getClass().getName());\n    start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"fe1c4aa9af769a38e878f608070f672efbeac27f":["70f91c8322fbffe3a3a897ef20ea19119cac10cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12109b652e9210b8d58fca47f6c4a725d058a58e"]},"commit2Childs":{"70f91c8322fbffe3a3a897ef20ea19119cac10cd":["12109b652e9210b8d58fca47f6c4a725d058a58e","74f45af4339b0daf7a95c820ab88c1aea74fbce0","fe1c4aa9af769a38e878f608070f672efbeac27f"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70f91c8322fbffe3a3a897ef20ea19119cac10cd","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"fe1c4aa9af769a38e878f608070f672efbeac27f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","fe1c4aa9af769a38e878f608070f672efbeac27f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}