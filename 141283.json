{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnum#scanTo(int).mjava","commits":[{"id":"0445bcd8433e331f296f5502fc089b336cbac3a6","date":1322630375,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnum#scanTo(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnum#read().mjava","sourceNew":"    private int scanTo(int target) throws IOException {\n      while (ord++ < limit) {\n        int code = freqIn.readVInt();\n        if (omitTF) {\n          accum += code;\n        } else {\n          accum += code >>> 1;            // shift off low bit\n          if ((code & 1) != 0) {          // if low bit is set\n            freq = 1;                     // freq is one\n          } else {\n            freq = freqIn.readVInt();     // else read freq\n          }\n        }\n        \n        if (accum >= target && (liveDocs == null || liveDocs.get(accum))) {\n          return accum;\n        }\n      }\n      \n      return NO_MORE_DOCS;\n    }\n\n","sourceOld":"    @Override\n    public int read() throws IOException {\n\n      final int[] docs = bulkResult.docs.ints;\n      final int[] freqs = bulkResult.freqs.ints;\n      int i = 0;\n      final int length = docs.length;\n      while (i < length && ord < limit) {\n        ord++;\n        // manually inlined call to next() for speed\n        final int code = freqIn.readVInt();\n        if (omitTF) {\n          accum += code;\n        } else {\n          accum += code >>> 1;              // shift off low bit\n          if ((code & 1) != 0) {          // if low bit is set\n            freq = 1;                     // freq is one\n          } else {\n            freq = freqIn.readVInt();     // else read freq\n          }\n        }\n\n        if (liveDocs == null || liveDocs.get(accum)) {\n          docs[i] = doc = accum;\n          freqs[i] = freq;\n          ++i;\n        }\n      }\n      \n      return i;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnum#scanTo(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnum#scanTo(int).mjava","sourceNew":"    private int scanTo(int target) throws IOException {\n      while (ord++ < limit) {\n        int code = freqIn.readVInt();\n        if (indexOmitsTF) {\n          accum += code;\n        } else {\n          accum += code >>> 1;            // shift off low bit\n          if ((code & 1) != 0) {          // if low bit is set\n            freq = 1;                     // freq is one\n          } else {\n            freq = freqIn.readVInt();     // else read freq\n          }\n        }\n        \n        if (accum >= target && (liveDocs == null || liveDocs.get(accum))) {\n          return accum;\n        }\n      }\n      \n      return NO_MORE_DOCS;\n    }\n\n","sourceOld":"    private int scanTo(int target) throws IOException {\n      while (ord++ < limit) {\n        int code = freqIn.readVInt();\n        if (omitTF) {\n          accum += code;\n        } else {\n          accum += code >>> 1;            // shift off low bit\n          if ((code & 1) != 0) {          // if low bit is set\n            freq = 1;                     // freq is one\n          } else {\n            freq = freqIn.readVInt();     // else read freq\n          }\n        }\n        \n        if (accum >= target && (liveDocs == null || liveDocs.get(accum))) {\n          return accum;\n        }\n      }\n      \n      return NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnum#scanTo(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnum#scanTo(int).mjava","sourceNew":"    private int scanTo(int target) throws IOException {\n      while (ord++ < limit) {\n        int code = freqIn.readVInt();\n        if (indexOmitsTF) {\n          accum += code;\n        } else {\n          accum += code >>> 1;            // shift off low bit\n          if ((code & 1) != 0) {          // if low bit is set\n            freq = 1;                     // freq is one\n          } else {\n            freq = freqIn.readVInt();     // else read freq\n          }\n        }\n        \n        if (accum >= target && (liveDocs == null || liveDocs.get(accum))) {\n          return accum;\n        }\n      }\n      \n      return NO_MORE_DOCS;\n    }\n\n","sourceOld":"    private int scanTo(int target) throws IOException {\n      while (ord++ < limit) {\n        int code = freqIn.readVInt();\n        if (omitTF) {\n          accum += code;\n        } else {\n          accum += code >>> 1;            // shift off low bit\n          if ((code & 1) != 0) {          // if low bit is set\n            freq = 1;                     // freq is one\n          } else {\n            freq = freqIn.readVInt();     // else read freq\n          }\n        }\n        \n        if (accum >= target && (liveDocs == null || liveDocs.get(accum))) {\n          return accum;\n        }\n      }\n      \n      return NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fbe641a3ba9e8ab6b19044e4e89b979bfebbed1","date":1324025015,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.SegmentDocsEnum#scanTo(int).mjava","sourceNew":null,"sourceOld":"    private int scanTo(int target) throws IOException {\n      while (ord++ < limit) {\n        int code = freqIn.readVInt();\n        if (indexOmitsTF) {\n          accum += code;\n        } else {\n          accum += code >>> 1;            // shift off low bit\n          if ((code & 1) != 0) {          // if low bit is set\n            freq = 1;                     // freq is one\n          } else {\n            freq = freqIn.readVInt();     // else read freq\n          }\n        }\n        \n        if (accum >= target && (liveDocs == null || liveDocs.get(accum))) {\n          return accum;\n        }\n      }\n      \n      return NO_MORE_DOCS;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0445bcd8433e331f296f5502fc089b336cbac3a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["0445bcd8433e331f296f5502fc089b336cbac3a6","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2fbe641a3ba9e8ab6b19044e4e89b979bfebbed1":["872cff1d3a554e0cd64014cd97f88d3002b0f491"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["0445bcd8433e331f296f5502fc089b336cbac3a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2fbe641a3ba9e8ab6b19044e4e89b979bfebbed1"]},"commit2Childs":{"0445bcd8433e331f296f5502fc089b336cbac3a6":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0445bcd8433e331f296f5502fc089b336cbac3a6"],"2fbe641a3ba9e8ab6b19044e4e89b979bfebbed1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","2fbe641a3ba9e8ab6b19044e4e89b979bfebbed1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}