{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#ToParentBlockJoinSortField(String,Type,boolean,BitSetProducer,BitSetProducer).mjava","commits":[{"id":"4b3915945926c0bf7def01b0c504977709d3aed3","date":1436197708,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#ToParentBlockJoinSortField(String,Type,boolean,BitSetProducer,BitSetProducer).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#ToParentBlockJoinSortField(String,Type,boolean,BitDocIdSetFilter,BitDocIdSetFilter).mjava","sourceNew":"  /**\n   * Create ToParentBlockJoinSortField. The parent document ordering is based on child document ordering (reverse).\n   *\n   * @param field The sort field on the nested / child level.\n   * @param type The sort type on the nested / child level.\n   * @param reverse Whether natural order should be reversed on the nested / child level.\n   * @param parentFilter Filter that identifies the parent documents.\n   * @param childFilter Filter that defines which child documents participates in sorting.\n   */\n  public ToParentBlockJoinSortField(String field, Type type, boolean reverse, BitSetProducer parentFilter, BitSetProducer childFilter) {\n    super(field, type, reverse);\n    switch (getType()) {\n      case STRING:\n      case DOUBLE:\n      case FLOAT:\n      case LONG:\n      case INT:\n        // ok\n        break;\n      default:\n        throw new UnsupportedOperationException(\"Sort type \" + type + \" is not supported\");\n    }\n    this.order = reverse;\n    this.parentFilter = parentFilter;\n    this.childFilter = childFilter;\n  }\n\n","sourceOld":"  /**\n   * Create ToParentBlockJoinSortField. The parent document ordering is based on child document ordering (reverse).\n   *\n   * @param field The sort field on the nested / child level.\n   * @param type The sort type on the nested / child level.\n   * @param reverse Whether natural order should be reversed on the nested / child level.\n   * @param parentFilter Filter that identifies the parent documents.\n   * @param childFilter Filter that defines which child documents participates in sorting.\n   */\n  public ToParentBlockJoinSortField(String field, Type type, boolean reverse, BitDocIdSetFilter parentFilter, BitDocIdSetFilter childFilter) {\n    super(field, type, reverse);\n    switch (getType()) {\n      case STRING:\n      case DOUBLE:\n      case FLOAT:\n      case LONG:\n      case INT:\n        // ok\n        break;\n      default:\n        throw new UnsupportedOperationException(\"Sort type \" + type + \" is not supported\");\n    }\n    this.order = reverse;\n    this.parentFilter = parentFilter;\n    this.childFilter = childFilter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b3915945926c0bf7def01b0c504977709d3aed3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b3915945926c0bf7def01b0c504977709d3aed3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b3915945926c0bf7def01b0c504977709d3aed3"],"4b3915945926c0bf7def01b0c504977709d3aed3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}