{"path":"src/java/org/apache/lucene/search/FieldComparator.StringOrdValComparator#setNextReader(IndexReader,int,int).mjava","commits":[{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldComparator.StringOrdValComparator#setNextReader(IndexReader,int,int).mjava","pathOld":"/dev/null","sourceNew":"    public void setNextReader(IndexReader reader, int docBase,  int numSlotsFull) throws IOException {\n      StringIndex currentReaderValues = ExtendedFieldCache.EXT_DEFAULT.getStringIndex(reader, field);\n      currentReaderGen++;\n      order = currentReaderValues.order;\n      lookup = currentReaderValues.lookup;\n      assert lookup.length > 0;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65eb076d345a794256daba691a2b366657c807e8","date":1245771732,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldComparator.StringOrdValComparator#setNextReader(IndexReader,int,int).mjava","pathOld":"src/java/org/apache/lucene/search/FieldComparator.StringOrdValComparator#setNextReader(IndexReader,int,int).mjava","sourceNew":"    public void setNextReader(IndexReader reader, int docBase,  int numSlotsFull) throws IOException {\n      StringIndex currentReaderValues = FieldCache.DEFAULT.getStringIndex(reader, field);\n      currentReaderGen++;\n      order = currentReaderValues.order;\n      lookup = currentReaderValues.lookup;\n      assert lookup.length > 0;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","sourceOld":"    public void setNextReader(IndexReader reader, int docBase,  int numSlotsFull) throws IOException {\n      StringIndex currentReaderValues = ExtendedFieldCache.EXT_DEFAULT.getStringIndex(reader, field);\n      currentReaderGen++;\n      order = currentReaderValues.order;\n      lookup = currentReaderValues.lookup;\n      assert lookup.length > 0;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0ef2616973dc9a77f2ba89d78110ed14bda0631","date":1249477738,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldComparator.StringOrdValComparator#setNextReader(IndexReader,int).mjava","pathOld":"src/java/org/apache/lucene/search/FieldComparator.StringOrdValComparator#setNextReader(IndexReader,int,int).mjava","sourceNew":"    public void setNextReader(IndexReader reader, int docBase) throws IOException {\n      StringIndex currentReaderValues = FieldCache.DEFAULT.getStringIndex(reader, field);\n      currentReaderGen++;\n      order = currentReaderValues.order;\n      lookup = currentReaderValues.lookup;\n      assert lookup.length > 0;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","sourceOld":"    public void setNextReader(IndexReader reader, int docBase,  int numSlotsFull) throws IOException {\n      StringIndex currentReaderValues = FieldCache.DEFAULT.getStringIndex(reader, field);\n      currentReaderGen++;\n      order = currentReaderValues.order;\n      lookup = currentReaderValues.lookup;\n      assert lookup.length > 0;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65eb076d345a794256daba691a2b366657c807e8":["63bc3238545c6012bd44f5d294077997f236bc4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e0ef2616973dc9a77f2ba89d78110ed14bda0631":["65eb076d345a794256daba691a2b366657c807e8"],"63bc3238545c6012bd44f5d294077997f236bc4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e0ef2616973dc9a77f2ba89d78110ed14bda0631"]},"commit2Childs":{"65eb076d345a794256daba691a2b366657c807e8":["e0ef2616973dc9a77f2ba89d78110ed14bda0631"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["63bc3238545c6012bd44f5d294077997f236bc4e"],"e0ef2616973dc9a77f2ba89d78110ed14bda0631":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"63bc3238545c6012bd44f5d294077997f236bc4e":["65eb076d345a794256daba691a2b366657c807e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}