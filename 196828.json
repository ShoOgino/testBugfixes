{"path":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","commits":[{"id":"db864f6e0c51b995cfda1f42dd7d4b179f390aff","date":1353253801,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, \n        maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, maxEdits, \n        transpositions, nonFuzzyPrefix, minFuzzyLength);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, \n        maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, maxEdits, \n        transpositions, nonFuzzyPrefix, minFuzzyLength);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","sourceNew":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, \n        maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, maxEdits, \n        transpositions, nonFuzzyPrefix, minFuzzyLength);\n  }\n\n","sourceOld":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, \n        maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, maxEdits, \n        transpositions, nonFuzzyPrefix, minFuzzyLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6","date":1374158194,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","sourceNew":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, \n        maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, maxEdits, \n        transpositions, nonFuzzyPrefix, minFuzzyLength, unicodeAware);\n  }\n\n","sourceOld":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, \n        maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, maxEdits, \n        transpositions, nonFuzzyPrefix, minFuzzyLength);\n  }\n\n","bugFix":["db864f6e0c51b995cfda1f42dd7d4b179f390aff"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","sourceNew":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, \n        maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, maxEdits, \n        transpositions, nonFuzzyPrefix, minFuzzyLength, unicodeAware);\n  }\n\n","sourceOld":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, \n        maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, maxEdits, \n        transpositions, nonFuzzyPrefix, minFuzzyLength);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4e0095ef720d1b8e7406847147af69f19af3ab6","date":1383131477,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","sourceNew":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    boolean preservePositionIncrements = params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS) != null\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS).toString())\n    : false;\n    \n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm,\n        maxGraphExpansions, preservePositionIncrements, maxEdits, transpositions, nonFuzzyPrefix,\n        minFuzzyLength, unicodeAware);\n  }\n\n","sourceOld":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, \n        maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, maxEdits, \n        transpositions, nonFuzzyPrefix, minFuzzyLength, unicodeAware);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f2e96099703c24c0c63d27806ba7020626b649b","date":1385214372,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","sourceNew":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    if (ft == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + fieldTypeName.toString() + \" is not defined in the schema\");\n    }\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    boolean preservePositionIncrements = params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS) != null\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS).toString())\n    : false;\n    \n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm,\n        maxGraphExpansions, preservePositionIncrements, maxEdits, transpositions, nonFuzzyPrefix,\n        minFuzzyLength, unicodeAware);\n  }\n\n","sourceOld":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    boolean preservePositionIncrements = params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS) != null\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS).toString())\n    : false;\n    \n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm,\n        maxGraphExpansions, preservePositionIncrements, maxEdits, transpositions, nonFuzzyPrefix,\n        minFuzzyLength, unicodeAware);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","sourceNew":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    if (ft == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + fieldTypeName.toString() + \" is not defined in the schema\");\n    }\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    boolean preservePositionIncrements = params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS) != null\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS).toString())\n    : false;\n    \n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm,\n        maxGraphExpansions, preservePositionIncrements, maxEdits, transpositions, nonFuzzyPrefix,\n        minFuzzyLength, unicodeAware);\n  }\n\n","sourceOld":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    boolean preservePositionIncrements = params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS) != null\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS).toString())\n    : false;\n    \n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm,\n        maxGraphExpansions, preservePositionIncrements, maxEdits, transpositions, nonFuzzyPrefix,\n        minFuzzyLength, unicodeAware);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"123698fbe83b595f9e084f0019cd35ab4a01d7f7","date":1399070065,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","sourceNew":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    if (ft == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + fieldTypeName.toString() + \" is not defined in the schema\");\n    }\n    Analyzer indexAnalyzer = ft.getIndexAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    boolean preservePositionIncrements = params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS) != null\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS).toString())\n    : false;\n    \n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm,\n        maxGraphExpansions, preservePositionIncrements, maxEdits, transpositions, nonFuzzyPrefix,\n        minFuzzyLength, unicodeAware);\n  }\n\n","sourceOld":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    if (ft == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + fieldTypeName.toString() + \" is not defined in the schema\");\n    }\n    Analyzer indexAnalyzer = ft.getAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    boolean preservePositionIncrements = params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS) != null\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS).toString())\n    : false;\n    \n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm,\n        maxGraphExpansions, preservePositionIncrements, maxEdits, transpositions, nonFuzzyPrefix,\n        minFuzzyLength, unicodeAware);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","sourceNew":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    if (ft == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + fieldTypeName.toString() + \" is not defined in the schema\");\n    }\n    Analyzer indexAnalyzer = ft.getIndexAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    boolean preservePositionIncrements = params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS) != null\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS).toString())\n    : false;\n    \n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(getTempDir(), \"suggester\", indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm,\n        maxGraphExpansions, preservePositionIncrements, maxEdits, transpositions, nonFuzzyPrefix,\n        minFuzzyLength, unicodeAware);\n  }\n\n","sourceOld":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    if (ft == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + fieldTypeName.toString() + \" is not defined in the schema\");\n    }\n    Analyzer indexAnalyzer = ft.getIndexAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    boolean preservePositionIncrements = params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS) != null\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS).toString())\n    : false;\n    \n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm,\n        maxGraphExpansions, preservePositionIncrements, maxEdits, transpositions, nonFuzzyPrefix,\n        minFuzzyLength, unicodeAware);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd25fa3647fa73152703b8dccb4fb5f43633de20","date":1592060458,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/spelling/suggest/fst/FuzzyLookupFactory#create(NamedList,SolrCore).mjava","sourceNew":"  @Override\n  public Lookup create(@SuppressWarnings({\"rawtypes\"})NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    if (ft == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + fieldTypeName.toString() + \" is not defined in the schema\");\n    }\n    Analyzer indexAnalyzer = ft.getIndexAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    boolean preservePositionIncrements = params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS) != null\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS).toString())\n    : false;\n    \n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(getTempDir(), \"suggester\", indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm,\n        maxGraphExpansions, preservePositionIncrements, maxEdits, transpositions, nonFuzzyPrefix,\n        minFuzzyLength, unicodeAware);\n  }\n\n","sourceOld":"  @Override\n  public Lookup create(NamedList params, SolrCore core) {\n    \n    // mandatory parameter\n    Object fieldTypeName = params.get(AnalyzingLookupFactory.QUERY_ANALYZER);\n    if (fieldTypeName == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + AnalyzingLookupFactory.QUERY_ANALYZER + \" parameter is mandatory\");\n    }\n    // retrieve index and query analyzers for the field\n    FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString());\n    if (ft == null) {\n      throw new IllegalArgumentException(\"Error in configuration: \" + fieldTypeName.toString() + \" is not defined in the schema\");\n    }\n    Analyzer indexAnalyzer = ft.getIndexAnalyzer();\n    Analyzer queryAnalyzer = ft.getQueryAnalyzer();\n    \n    // optional parameters\n    boolean exactMatchFirst = (params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.EXACT_MATCH_FIRST).toString())\n    : true;\n        \n    boolean preserveSep = (params.get(AnalyzingLookupFactory.PRESERVE_SEP) != null)\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_SEP).toString())\n    : true;\n        \n    int options = 0;\n    if (exactMatchFirst) {\n      options |= FuzzySuggester.EXACT_FIRST;\n    }\n    if (preserveSep) {\n      options |= FuzzySuggester.PRESERVE_SEP;\n    }\n    \n    int maxSurfaceFormsPerAnalyzedForm = (params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_SURFACE_FORMS).toString())\n    : 256;\n        \n    int maxGraphExpansions = (params.get(AnalyzingLookupFactory.MAX_EXPANSIONS) != null)\n    ? Integer.parseInt(params.get(AnalyzingLookupFactory.MAX_EXPANSIONS).toString())\n    : -1;\n\n    boolean preservePositionIncrements = params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS) != null\n    ? Boolean.valueOf(params.get(AnalyzingLookupFactory.PRESERVE_POSITION_INCREMENTS).toString())\n    : false;\n    \n    int maxEdits = (params.get(MAX_EDITS) != null)\n    ? Integer.parseInt(params.get(MAX_EDITS).toString())\n    : FuzzySuggester.DEFAULT_MAX_EDITS;\n    \n    boolean transpositions = (params.get(TRANSPOSITIONS) != null)\n    ? Boolean.parseBoolean(params.get(TRANSPOSITIONS).toString())\n    : FuzzySuggester.DEFAULT_TRANSPOSITIONS;\n        \n    int nonFuzzyPrefix = (params.get(NON_FUZZY_PREFIX) != null)\n    ? Integer.parseInt(params.get(NON_FUZZY_PREFIX).toString())\n    :FuzzySuggester.DEFAULT_NON_FUZZY_PREFIX;\n    \n    \n    int minFuzzyLength = (params.get(MIN_FUZZY_LENGTH) != null)\n    ? Integer.parseInt(params.get(MIN_FUZZY_LENGTH).toString())\n    :FuzzySuggester.DEFAULT_MIN_FUZZY_LENGTH;\n    \n    boolean unicodeAware = (params.get(UNICODE_AWARE) != null)\n    ? Boolean.valueOf(params.get(UNICODE_AWARE).toString())\n    : FuzzySuggester.DEFAULT_UNICODE_AWARE;\n    \n    return new FuzzySuggester(getTempDir(), \"suggester\", indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm,\n        maxGraphExpansions, preservePositionIncrements, maxEdits, transpositions, nonFuzzyPrefix,\n        minFuzzyLength, unicodeAware);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["08970e5b8411182a29412c177eff67ec1110095b","2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6"],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","db864f6e0c51b995cfda1f42dd7d4b179f390aff"],"2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6":["08970e5b8411182a29412c177eff67ec1110095b"],"08970e5b8411182a29412c177eff67ec1110095b":["db864f6e0c51b995cfda1f42dd7d4b179f390aff"],"db864f6e0c51b995cfda1f42dd7d4b179f390aff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"123698fbe83b595f9e084f0019cd35ab4a01d7f7":["7f2e96099703c24c0c63d27806ba7020626b649b"],"7f2e96099703c24c0c63d27806ba7020626b649b":["d4e0095ef720d1b8e7406847147af69f19af3ab6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["d4e0095ef720d1b8e7406847147af69f19af3ab6","7f2e96099703c24c0c63d27806ba7020626b649b"],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["123698fbe83b595f9e084f0019cd35ab4a01d7f7"],"d4e0095ef720d1b8e7406847147af69f19af3ab6":["2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd25fa3647fa73152703b8dccb4fb5f43633de20"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","d4e0095ef720d1b8e7406847147af69f19af3ab6"],"08970e5b8411182a29412c177eff67ec1110095b":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6"],"db864f6e0c51b995cfda1f42dd7d4b179f390aff":["407687e67faf6e1f02a211ca078d8e3eed631027","08970e5b8411182a29412c177eff67ec1110095b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","db864f6e0c51b995cfda1f42dd7d4b179f390aff"],"123698fbe83b595f9e084f0019cd35ab4a01d7f7":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"7f2e96099703c24c0c63d27806ba7020626b649b":["123698fbe83b595f9e084f0019cd35ab4a01d7f7","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4e0095ef720d1b8e7406847147af69f19af3ab6":["7f2e96099703c24c0c63d27806ba7020626b649b","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["bd25fa3647fa73152703b8dccb4fb5f43633de20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","407687e67faf6e1f02a211ca078d8e3eed631027","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}